[
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1923",
        "pull_request_review_id": null,
        "id": 1923,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjM=",
        "diff_hunk": "@@ -27,37 +27,53 @@ JSON = new Hash({\n \n //</1.2compat>\n \n-Object.append(JSON, {\n-\n-\t$specialChars: {'\\b': '\\\\b', '\\t': '\\\\t', '\\n': '\\\\n', '\\f': '\\\\f', '\\r': '\\\\r', '\"' : '\\\\\"', '\\\\': '\\\\\\\\'},\n-\n-\t$replaceChars: function(chr){\n-\t\treturn JSON.$specialChars[chr] || '\\\\u00' + Math.floor(chr.charCodeAt() / 16).toString(16) + (chr.charCodeAt() % 16).toString(16);\n-\t},\n-\n-\tencode: function(obj){\n-\t\tswitch (typeOf(obj)){\n-\t\t\tcase 'string':\n-\t\t\t\treturn '\"' + obj.replace(/[\\x00-\\x1f\\\\\"]/g, JSON.$replaceChars) + '\"';\n-\t\t\tcase 'array':\n-\t\t\t\treturn '[' + String(obj.map(JSON.encode).clean()) + ']';\n-\t\t\tcase 'object': case 'hash':\n-\t\t\t\tvar string = [];\n-\t\t\t\tObject.each(obj, function(value, key){\n-\t\t\t\t\tvar json = JSON.encode(value);\n-\t\t\t\t\tif (json) string.push(JSON.encode(key) + ':' + json);\n-\t\t\t\t});\n-\t\t\t\treturn '{' + string + '}';\n-\t\t\tcase 'number': case 'boolean': return String(obj);\n-\t\t\tcase 'null': return 'null';\n-\t\t}\n-\t\treturn null;\n-\t},\n-\n-\tdecode: function(string, secure){\n-\t\tif (typeOf(string) != 'string' || !string.length) return null;\n-\t\tif (secure && !(/^[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]*$/).test(string.replace(/\\\\./g, '@').replace(/\"[^\"\\\\\\n\\r]*\"/g, ''))) return null;\n-\t\treturn eval('(' + string + ')');\n+(function(){\n+\n+var special = {'\\b': '\\\\b', '\\t': '\\\\t', '\\n': '\\\\n', '\\f': '\\\\f', '\\r': '\\\\r', '\"' : '\\\\\"', '\\\\': '\\\\\\\\'};\n+\n+var escape = function(chr){\n+\treturn special[chr] || '\\\\u' + ('0000' + chr.charCodeAt(0).toString(16)).slice(-4);\n+};\n+\n+JSON.validate = function(string){\n+\tstring = string.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').\n+\t\t\t\t\treplace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n+\t\t\t\t\treplace(/(?:^|:|,)(?:\\s*\\[)+/g, '');\n+\n+\treturn (/^[\\],:{}\\s]*$/).test(string);\n+};\n+\n+JSON.encode = JSON.stringify || function(obj){\n+\tif (obj && obj.toJSON) obj = obj.toJSON();\n+\n+\tswitch (typeOf(obj)){\n+\t\tcase 'string':\n+\t\t\treturn '\"' + obj.replace(/[\\x00-\\x1f\\\\\"]/g, escape) + '\"';\n+\t\tcase 'array':\n+\t\t\treturn '[' + obj.map(JSON.encode).clean() + ']';\n+\t\tcase 'object': case 'hash':\n+\t\t\tvar string = [];\n+\t\t\tObject.each(obj, function(value, key){\n+\t\t\t\tvar json = JSON.encode(value);\n+\t\t\t\tif (json) string.push(JSON.encode(key) + ':' + json);\n+\t\t\t});\n+\t\t\treturn '{' + string + '}';\n+\t\tcase 'number': case 'boolean': return '' + obj;\n+\t\tcase 'null': return 'null';\n \t}\n \n-});\n+\treturn null;\n+};\n+\n+JSON.decode = function(string, secure){\n+\tif (!string || typeOf(string) != 'string') return null;\n+\n+\tif (secure || JSON.secure){\n+\t\tif (JSON.parse) return JSON.parse(string);",
        "path": "Source/Utilities/JSON.js",
        "position": 78,
        "original_position": 78,
        "commit_id": "2433c48adfb9768a9b33a45f4f937af697703396",
        "original_commit_id": "2433c48adfb9768a9b33a45f4f937af697703396",
        "user": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why wouldn't you always use `JSON.parse`?\n",
        "created_at": "2011-02-15T22:00:25Z",
        "updated_at": "2011-02-15T22:00:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/59#discussion_r1923",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/59",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1923"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/59#discussion_r1923"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/59"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1924",
        "pull_request_review_id": null,
        "id": 1924,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjQ=",
        "diff_hunk": "@@ -27,37 +27,53 @@ JSON = new Hash({\n \n //</1.2compat>\n \n-Object.append(JSON, {\n-\n-\t$specialChars: {'\\b': '\\\\b', '\\t': '\\\\t', '\\n': '\\\\n', '\\f': '\\\\f', '\\r': '\\\\r', '\"' : '\\\\\"', '\\\\': '\\\\\\\\'},\n-\n-\t$replaceChars: function(chr){\n-\t\treturn JSON.$specialChars[chr] || '\\\\u00' + Math.floor(chr.charCodeAt() / 16).toString(16) + (chr.charCodeAt() % 16).toString(16);\n-\t},\n-\n-\tencode: function(obj){\n-\t\tswitch (typeOf(obj)){\n-\t\t\tcase 'string':\n-\t\t\t\treturn '\"' + obj.replace(/[\\x00-\\x1f\\\\\"]/g, JSON.$replaceChars) + '\"';\n-\t\t\tcase 'array':\n-\t\t\t\treturn '[' + String(obj.map(JSON.encode).clean()) + ']';\n-\t\t\tcase 'object': case 'hash':\n-\t\t\t\tvar string = [];\n-\t\t\t\tObject.each(obj, function(value, key){\n-\t\t\t\t\tvar json = JSON.encode(value);\n-\t\t\t\t\tif (json) string.push(JSON.encode(key) + ':' + json);\n-\t\t\t\t});\n-\t\t\t\treturn '{' + string + '}';\n-\t\t\tcase 'number': case 'boolean': return String(obj);\n-\t\t\tcase 'null': return 'null';\n-\t\t}\n-\t\treturn null;\n-\t},\n-\n-\tdecode: function(string, secure){\n-\t\tif (typeOf(string) != 'string' || !string.length) return null;\n-\t\tif (secure && !(/^[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]*$/).test(string.replace(/\\\\./g, '@').replace(/\"[^\"\\\\\\n\\r]*\"/g, ''))) return null;\n-\t\treturn eval('(' + string + ')');\n+(function(){\n+\n+var special = {'\\b': '\\\\b', '\\t': '\\\\t', '\\n': '\\\\n', '\\f': '\\\\f', '\\r': '\\\\r', '\"' : '\\\\\"', '\\\\': '\\\\\\\\'};\n+\n+var escape = function(chr){\n+\treturn special[chr] || '\\\\u' + ('0000' + chr.charCodeAt(0).toString(16)).slice(-4);\n+};\n+\n+JSON.validate = function(string){\n+\tstring = string.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').\n+\t\t\t\t\treplace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n+\t\t\t\t\treplace(/(?:^|:|,)(?:\\s*\\[)+/g, '');\n+\n+\treturn (/^[\\],:{}\\s]*$/).test(string);\n+};\n+\n+JSON.encode = JSON.stringify || function(obj){",
        "path": "Source/Utilities/JSON.js",
        "position": 51,
        "original_position": 51,
        "commit_id": "2433c48adfb9768a9b33a45f4f937af697703396",
        "original_commit_id": "2433c48adfb9768a9b33a45f4f937af697703396",
        "user": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`JSON.stringify` has an optional 2nd argument. `JSON.encode` should probably delegate to `JSON.stringify` and ignore additional arguments in order to have a consistent api across browsers?\n",
        "created_at": "2011-02-15T22:05:00Z",
        "updated_at": "2011-02-15T22:05:00Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/59#discussion_r1924",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/59",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1924"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/59#discussion_r1924"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/59"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1926",
        "pull_request_review_id": null,
        "id": 1926,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjY=",
        "diff_hunk": "@@ -27,37 +27,53 @@ JSON = new Hash({\n \n //</1.2compat>\n \n-Object.append(JSON, {\n-\n-\t$specialChars: {'\\b': '\\\\b', '\\t': '\\\\t', '\\n': '\\\\n', '\\f': '\\\\f', '\\r': '\\\\r', '\"' : '\\\\\"', '\\\\': '\\\\\\\\'},\n-\n-\t$replaceChars: function(chr){\n-\t\treturn JSON.$specialChars[chr] || '\\\\u00' + Math.floor(chr.charCodeAt() / 16).toString(16) + (chr.charCodeAt() % 16).toString(16);\n-\t},\n-\n-\tencode: function(obj){\n-\t\tswitch (typeOf(obj)){\n-\t\t\tcase 'string':\n-\t\t\t\treturn '\"' + obj.replace(/[\\x00-\\x1f\\\\\"]/g, JSON.$replaceChars) + '\"';\n-\t\t\tcase 'array':\n-\t\t\t\treturn '[' + String(obj.map(JSON.encode).clean()) + ']';\n-\t\t\tcase 'object': case 'hash':\n-\t\t\t\tvar string = [];\n-\t\t\t\tObject.each(obj, function(value, key){\n-\t\t\t\t\tvar json = JSON.encode(value);\n-\t\t\t\t\tif (json) string.push(JSON.encode(key) + ':' + json);\n-\t\t\t\t});\n-\t\t\t\treturn '{' + string + '}';\n-\t\t\tcase 'number': case 'boolean': return String(obj);\n-\t\t\tcase 'null': return 'null';\n-\t\t}\n-\t\treturn null;\n-\t},\n-\n-\tdecode: function(string, secure){\n-\t\tif (typeOf(string) != 'string' || !string.length) return null;\n-\t\tif (secure && !(/^[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]*$/).test(string.replace(/\\\\./g, '@').replace(/\"[^\"\\\\\\n\\r]*\"/g, ''))) return null;\n-\t\treturn eval('(' + string + ')');\n+(function(){\n+\n+var special = {'\\b': '\\\\b', '\\t': '\\\\t', '\\n': '\\\\n', '\\f': '\\\\f', '\\r': '\\\\r', '\"' : '\\\\\"', '\\\\': '\\\\\\\\'};\n+\n+var escape = function(chr){\n+\treturn special[chr] || '\\\\u' + ('0000' + chr.charCodeAt(0).toString(16)).slice(-4);\n+};\n+\n+JSON.validate = function(string){\n+\tstring = string.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').\n+\t\t\t\t\treplace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n+\t\t\t\t\treplace(/(?:^|:|,)(?:\\s*\\[)+/g, '');\n+\n+\treturn (/^[\\],:{}\\s]*$/).test(string);\n+};\n+\n+JSON.encode = JSON.stringify || function(obj){",
        "path": "Source/Utilities/JSON.js",
        "position": 51,
        "original_position": 51,
        "commit_id": "2433c48adfb9768a9b33a45f4f937af697703396",
        "original_commit_id": "2433c48adfb9768a9b33a45f4f937af697703396",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "good call.\n",
        "created_at": "2011-02-15T22:06:58Z",
        "updated_at": "2011-02-15T22:06:58Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/59#discussion_r1926",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/59",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1926"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/59#discussion_r1926"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/59"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1928",
        "pull_request_review_id": null,
        "id": 1928,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Mjg=",
        "diff_hunk": "@@ -27,37 +27,53 @@ JSON = new Hash({\n \n //</1.2compat>\n \n-Object.append(JSON, {\n-\n-\t$specialChars: {'\\b': '\\\\b', '\\t': '\\\\t', '\\n': '\\\\n', '\\f': '\\\\f', '\\r': '\\\\r', '\"' : '\\\\\"', '\\\\': '\\\\\\\\'},\n-\n-\t$replaceChars: function(chr){\n-\t\treturn JSON.$specialChars[chr] || '\\\\u00' + Math.floor(chr.charCodeAt() / 16).toString(16) + (chr.charCodeAt() % 16).toString(16);\n-\t},\n-\n-\tencode: function(obj){\n-\t\tswitch (typeOf(obj)){\n-\t\t\tcase 'string':\n-\t\t\t\treturn '\"' + obj.replace(/[\\x00-\\x1f\\\\\"]/g, JSON.$replaceChars) + '\"';\n-\t\t\tcase 'array':\n-\t\t\t\treturn '[' + String(obj.map(JSON.encode).clean()) + ']';\n-\t\t\tcase 'object': case 'hash':\n-\t\t\t\tvar string = [];\n-\t\t\t\tObject.each(obj, function(value, key){\n-\t\t\t\t\tvar json = JSON.encode(value);\n-\t\t\t\t\tif (json) string.push(JSON.encode(key) + ':' + json);\n-\t\t\t\t});\n-\t\t\t\treturn '{' + string + '}';\n-\t\t\tcase 'number': case 'boolean': return String(obj);\n-\t\t\tcase 'null': return 'null';\n-\t\t}\n-\t\treturn null;\n-\t},\n-\n-\tdecode: function(string, secure){\n-\t\tif (typeOf(string) != 'string' || !string.length) return null;\n-\t\tif (secure && !(/^[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]*$/).test(string.replace(/\\\\./g, '@').replace(/\"[^\"\\\\\\n\\r]*\"/g, ''))) return null;\n-\t\treturn eval('(' + string + ')');\n+(function(){\n+\n+var special = {'\\b': '\\\\b', '\\t': '\\\\t', '\\n': '\\\\n', '\\f': '\\\\f', '\\r': '\\\\r', '\"' : '\\\\\"', '\\\\': '\\\\\\\\'};\n+\n+var escape = function(chr){\n+\treturn special[chr] || '\\\\u' + ('0000' + chr.charCodeAt(0).toString(16)).slice(-4);\n+};\n+\n+JSON.validate = function(string){\n+\tstring = string.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').\n+\t\t\t\t\treplace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n+\t\t\t\t\treplace(/(?:^|:|,)(?:\\s*\\[)+/g, '');\n+\n+\treturn (/^[\\],:{}\\s]*$/).test(string);\n+};\n+\n+JSON.encode = JSON.stringify || function(obj){\n+\tif (obj && obj.toJSON) obj = obj.toJSON();\n+\n+\tswitch (typeOf(obj)){\n+\t\tcase 'string':\n+\t\t\treturn '\"' + obj.replace(/[\\x00-\\x1f\\\\\"]/g, escape) + '\"';\n+\t\tcase 'array':\n+\t\t\treturn '[' + obj.map(JSON.encode).clean() + ']';\n+\t\tcase 'object': case 'hash':\n+\t\t\tvar string = [];\n+\t\t\tObject.each(obj, function(value, key){\n+\t\t\t\tvar json = JSON.encode(value);\n+\t\t\t\tif (json) string.push(JSON.encode(key) + ':' + json);\n+\t\t\t});\n+\t\t\treturn '{' + string + '}';\n+\t\tcase 'number': case 'boolean': return '' + obj;\n+\t\tcase 'null': return 'null';\n \t}\n \n-});\n+\treturn null;\n+};\n+\n+JSON.decode = function(string, secure){\n+\tif (!string || typeOf(string) != 'string') return null;\n+\n+\tif (secure || JSON.secure){\n+\t\tif (JSON.parse) return JSON.parse(string);",
        "path": "Source/Utilities/JSON.js",
        "position": 78,
        "original_position": 78,
        "commit_id": "2433c48adfb9768a9b33a45f4f937af697703396",
        "original_commit_id": "2433c48adfb9768a9b33a45f4f937af697703396",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "if you - for some reason - don't want the secure check, this using eval is the only way to bypass it\n",
        "created_at": "2011-02-15T22:07:35Z",
        "updated_at": "2011-02-15T22:07:35Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/59#discussion_r1928",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/59",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1928"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/59#discussion_r1928"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/59"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12432",
        "pull_request_review_id": null,
        "id": 12432,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDMy",
        "diff_hunk": "@@ -54,18 +52,30 @@ var poll = function(){\n \n document.addListener('DOMContentLoaded', domready);\n \n-// doScroll technique by Diego Perini http://javascript.nwbox.com/IEContentLoaded/\n-var testElement = document.createElement('div');\n-if (testElement.doScroll && !isFramed){\n-\tchecks.push(function(){\n-\t\ttry {\n-\t\t\ttestElement.doScroll();\n-\t\t\treturn true;\n-\t\t} catch (e){}\n-\n-\t\treturn false;\n-\t});\n-\tshouldPoll = true;\n+if (hasOperationAborted){\n+\tvar isFramed = true;\n+\t// isFramed technique by Rich Dougherty http://www.richdougherty.com/",
        "path": "Source/Utilities/DOMReady.js",
        "position": null,
        "original_position": 44,
        "commit_id": "d750a679faa78ed9978b12d964ad9a9bbe897bd4",
        "original_commit_id": "4a1b11a9114d70304678a710560f1e308ecd48d5",
        "user": {
            "login": "subtleGradient",
            "id": 4117,
            "node_id": "MDQ6VXNlcjQxMTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4117?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/subtleGradient",
            "html_url": "https://github.com/subtleGradient",
            "followers_url": "https://api.github.com/users/subtleGradient/followers",
            "following_url": "https://api.github.com/users/subtleGradient/following{/other_user}",
            "gists_url": "https://api.github.com/users/subtleGradient/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/subtleGradient/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/subtleGradient/subscriptions",
            "organizations_url": "https://api.github.com/users/subtleGradient/orgs",
            "repos_url": "https://api.github.com/users/subtleGradient/repos",
            "events_url": "https://api.github.com/users/subtleGradient/events{/privacy}",
            "received_events_url": "https://api.github.com/users/subtleGradient/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@jdalton pointed this technique out to me.\nIts origin dates back to [an old jQuery bug report](http://bugs.jquery.com/ticket/4787).\n",
        "created_at": "2011-03-27T05:10:48Z",
        "updated_at": "2011-03-27T19:29:07Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/66#discussion_r12432",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/66",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12432"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/66#discussion_r12432"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/66"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12433",
        "pull_request_review_id": null,
        "id": 12433,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDMz",
        "diff_hunk": "@@ -21,12 +21,11 @@ var ready,\n \tchecks = [],\n \tshouldPoll,\n \ttimer,\n-\tisFramed = true;\n-\n-// Thanks to Rich Dougherty <http://www.richdougherty.com/>\n-try {\n-\tisFramed = window.frameElement != null;\n-} catch(e){}\n+\ttestElement = document.createElement('div'),\n+\thasOperationAborted = (",
        "path": "Source/Utilities/DOMReady.js",
        "position": null,
        "original_position": 11,
        "commit_id": "d750a679faa78ed9978b12d964ad9a9bbe897bd4",
        "original_commit_id": "4a1b11a9114d70304678a710560f1e308ecd48d5",
        "user": {
            "login": "subtleGradient",
            "id": 4117,
            "node_id": "MDQ6VXNlcjQxMTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4117?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/subtleGradient",
            "html_url": "https://github.com/subtleGradient",
            "followers_url": "https://api.github.com/users/subtleGradient/followers",
            "following_url": "https://api.github.com/users/subtleGradient/following{/other_user}",
            "gists_url": "https://api.github.com/users/subtleGradient/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/subtleGradient/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/subtleGradient/subscriptions",
            "organizations_url": "https://api.github.com/users/subtleGradient/orgs",
            "repos_url": "https://api.github.com/users/subtleGradient/repos",
            "events_url": "https://api.github.com/users/subtleGradient/events{/privacy}",
            "received_events_url": "https://api.github.com/users/subtleGradient/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The Operation Aborted issue is so very important because it is completely unrecoverable. It kills the entire page and throws an alert about it at the user.\n\nIn fact, I think the Operation Aborted issue is what prompted the creation of all contentloaded and domready solutions throughout web dev history.\nBecause, without that issue, you don't actually even need a domready event much of the time.\n",
        "created_at": "2011-03-27T05:14:37Z",
        "updated_at": "2011-03-27T19:29:08Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/66#discussion_r12433",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/66",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12433"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/66#discussion_r12433"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/66"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/19099",
        "pull_request_review_id": null,
        "id": 19099,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDk5",
        "diff_hunk": "@@ -0,0 +1,126 @@\n+/*\n+---\n+name: Timer\n+description: Contains basic timing logic animation logic to be extended by Fx.\n+requires: [Function, Class, Events, Options, Chain]\n+provides: Timer\n+...\n+*/\n+\n+(function(){\n+\n+this.Timer = new Class({\n+\n+\tImplements: [Options, Events, Chain],\n+\n+\toptions: {\n+\t\tbehavior: 'cancel',\n+\t\tfps: 60\n+\t},\n+\n+\tinitialize: function(options){\n+\t\tthis.setOptions(options);\n+\t\tthis.items = [];\n+\t},\n+\n+\tstart: function(){\n+\t\tif (this.check.apply(this, arguments)){\n+\t\t\tthis.time = 0;\n+\t\t\tthis.onStart.apply(this, arguments);\n+\t\t\tthis.startTimer(this);\n+\t\t\tthis.fire('start', this.items);",
        "path": "Source/Fx/Timer.js",
        "position": null,
        "original_position": 31,
        "commit_id": "fbd53d8079e006a486405151a23df7229cba1429",
        "original_commit_id": "90bf650f1c06e5fb3e71904605965ef957430c4d",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Aah, just found out that `.fire`'s second argument isn't an array anymore to pass arguments. I'll probably need to change this to `this.fire.apply(this, ['start'].append(this.items))` which doesn't look as pretty.\n\nAlternatively I could just use `this.item` as singular, but it looked like a good idea to have a dynamic array of arguments that can be passed through the events, which subclasses can easily set.\n",
        "created_at": "2011-04-14T21:29:39Z",
        "updated_at": "2011-04-15T17:35:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/67#discussion_r19099",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/67",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/19099"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/67#discussion_r19099"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/67"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/26163",
        "pull_request_review_id": null,
        "id": 26163,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTYz",
        "diff_hunk": "@@ -0,0 +1,10 @@\n+/*\n+---\n+name: Slick.Adapter\n+description: Hooks Slick into MooTools.\n+provides: Slick.Adapter\n+requires: [Element, Slick.Finder, Slick.Parser]\n+...\n+*/\n+\n+DOM.defineSelectorEngine(Slick);",
        "path": "Source/DOM/Slick.Adapter.js",
        "position": 10,
        "original_position": 10,
        "commit_id": "c7d51a837febbbec64858ef5ced70c5ea6e46077",
        "original_commit_id": "3f2cc75309bf9f2ae44c92a341380d2977e5ead6",
        "user": {
            "login": "seanmonstar",
            "id": 51479,
            "node_id": "MDQ6VXNlcjUxNDc5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/51479?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanmonstar",
            "html_url": "https://github.com/seanmonstar",
            "followers_url": "https://api.github.com/users/seanmonstar/followers",
            "following_url": "https://api.github.com/users/seanmonstar/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanmonstar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanmonstar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanmonstar/subscriptions",
            "organizations_url": "https://api.github.com/users/seanmonstar/orgs",
            "repos_url": "https://api.github.com/users/seanmonstar/repos",
            "events_url": "https://api.github.com/users/seanmonstar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanmonstar/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1:\n",
        "created_at": "2011-05-05T04:47:33Z",
        "updated_at": "2011-05-09T23:51:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/78#discussion_r26163",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/78",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/26163"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/78#discussion_r26163"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/26801",
        "pull_request_review_id": null,
        "id": 26801,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODAx",
        "diff_hunk": "@@ -83,6 +83,12 @@ var implement = function(key, value, retainOwner){\n \tif (typeOf(value) == 'function'){\n \t\tif (value.$hidden) return;\n \t\tthis.prototype[key] = (retainOwner) ? value : wrap(this, key, value);\n+\t\t\n+\t\tvar hooks = this.$hooks;",
        "path": "Source/Class/Class.js",
        "position": null,
        "original_position": 5,
        "commit_id": "c7d51a837febbbec64858ef5ced70c5ea6e46077",
        "original_commit_id": "5c3429b626ffb82065e3d3f41fb5307d6de7839c",
        "user": {
            "login": "subtleGradient",
            "id": 4117,
            "node_id": "MDQ6VXNlcjQxMTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4117?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/subtleGradient",
            "html_url": "https://github.com/subtleGradient",
            "followers_url": "https://api.github.com/users/subtleGradient/followers",
            "following_url": "https://api.github.com/users/subtleGradient/following{/other_user}",
            "gists_url": "https://api.github.com/users/subtleGradient/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/subtleGradient/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/subtleGradient/subscriptions",
            "organizations_url": "https://api.github.com/users/subtleGradient/orgs",
            "repos_url": "https://api.github.com/users/subtleGradient/repos",
            "events_url": "https://api.github.com/users/subtleGradient/events{/privacy}",
            "received_events_url": "https://api.github.com/users/subtleGradient/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "$privateVar FTL\n_privateVar FTW\n",
        "created_at": "2011-05-06T17:47:59Z",
        "updated_at": "2011-05-09T23:51:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/78#discussion_r26801",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/78",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/26801"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/78#discussion_r26801"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/26807",
        "pull_request_review_id": null,
        "id": 26807,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODA3",
        "diff_hunk": "@@ -83,6 +83,12 @@ var implement = function(key, value, retainOwner){\n \tif (typeOf(value) == 'function'){\n \t\tif (value.$hidden) return;\n \t\tthis.prototype[key] = (retainOwner) ? value : wrap(this, key, value);\n+\t\t\n+\t\tvar hooks = this.$hooks;",
        "path": "Source/Class/Class.js",
        "position": null,
        "original_position": 5,
        "commit_id": "c7d51a837febbbec64858ef5ced70c5ea6e46077",
        "original_commit_id": "5c3429b626ffb82065e3d3f41fb5307d6de7839c",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indeed... just used it for consistency in the current Class.\n",
        "created_at": "2011-05-06T17:53:03Z",
        "updated_at": "2011-05-09T23:51:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/78#discussion_r26807",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/78",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/26807"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/78#discussion_r26807"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/27818",
        "pull_request_review_id": null,
        "id": 27818,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODE4",
        "diff_hunk": "@@ -0,0 +1,674 @@\n+/*\n+---\n+name: DOM.Element\n+description: The MooTools DOM library, making the DOM FUN FUN FUN!\n+provides: [DOM, DOM.id, DOM.Element, DOM.Elements, DOM.Document, DOM.document, DOM.Window, DOM.window]\n+requires: [Type, typeOf, Array, String, Function, Number, Object, Accessor, Slick.Parser, Store]\n+...\n+*/\n+\n+(function(){\n+\n+var window = this, document = window.document,\n+\thtml = document.documentElement,\n+\tDOM2Events = !!html.addEventListener;\n+\n+var nodeOf = function(item){\n+\treturn (item != null && item.toNode) ? item.toNode() : item;\n+};\n+\n+var wrappers = {};\n+\n+// Base DOM Class\n+\n+var DOM = this.DOM = new Class({\n+\n+\tImplements: [Events, Store],\n+\n+\tinitialize: function(node){\n+\t\tnode = this.node = nodeOf(node);\n+\t\tvar uid = SelectorEngine.uidOf(node);\n+\t\treturn (wrappers[uid] || (wrappers[uid] = this));\n+\t},\n+\n+\ttoNode: function(){\n+\t\treturn this.node;\n+\t},\n+\n+\taddEventListener: (DOM2Events ? function(type, fn){\n+\t\tthis.node.addEventListener(type, fn, false);\n+\t\treturn this;\n+\t} : function(type, fn){\n+\t\tthis.node.attachEvent('on' + type, fn);\n+\t\treturn this;\n+\t}),\n+\n+\tremoveEventListener: (DOM2Events ? function(type, fn){\n+\t\tthis.node.removeEventListener(type, fn, false);\n+\t\treturn this;\n+\t} : function(type, fn){\n+\t\tthis.node.detachEvent('on' + type, fn);\n+\t\treturn this;\n+\t})\n+\n+});\n+\n+DOM.prototype.log = DOM.prototype.toNode;\n+\n+// Basic Selector Engine methods\n+\n+SelectorEngine = {};\n+\n+DOM.extend('defineSelectorEngine', function(engine){\n+\tif (!engine) return this;\n+\n+\t['search', 'find', 'match', 'contains', 'uidOf', 'parse'].each(function(name){\n+\t\tif (engine[name]) SelectorEngine[name] = engine[name];\n+\t});\n+\n+\treturn this;\n+\n+}).defineSelectorEngine({\n+\n+\tsearch: function(){\n+\t\treturn [];\n+\t},\n+\n+\tfind: function(){\n+\t\treturn null;\n+\t},\n+\n+\tmatch: function(){\n+\t\treturn false;\n+\t},\n+\n+\tcontains: function(){\n+\t\treturn false;\n+\t},\n+\n+\tuidOf: function(node){\n+\t\treturn node.uniqueID || (node.uniqueID = String.uniqueID());\n+\t},\n+\n+\tparse: Slick.parse\n+\n+}).extend({\n+\n+\tsearch: function(expression){\n+\t\treturn SelectorEngine.search(document, expression, new Elements);\n+\t},\n+\n+\tfind: function(expression){\n+\t\tvar found = SelectorEngine.find(document, expression);\n+\t\treturn found ? new Element(found) : null;\n+\t}\n+\n+});\n+\n+var nodeByID = function(item){\n+\tvar type;\n+\treturn (!item) ? null\n+\t\t: (item == window || item == document || ((type = typeOf(item)) && type == 'element')) ? item\n+\t\t: (type == 'string') ? SelectorEngine.find(document, '#' + item.replace(/(\\W)/g, '\\\\$1'))\n+\t\t: (item.toElement) ? nodeOf(item.toElement())\n+\t\t: (item instanceof DOM) ? item.toNode()\n+\t\t: null;\n+};\n+\n+// No more bling bling $ or $$\n+var id = DOM.id = function(item){\n+\treturn (!item) ? null\n+\t\t: (item instanceof DOM) ? item\n+\t\t: (item == window) ? hostWindow\n+\t\t: (item == document) ? hostDocument\n+\t\t: (item = nodeByID(item)) && new Element(item);\n+};\n+\n+// Element and Element subclassing\n+\n+var matchers = [];\n+\n+Class.defineMutator('Matches', function(match){\n+\tmatchers.push({_match: match, _class: this});\n+});\n+\n+var Element = DOM.Element = new Class({\n+\n+\tExtends: DOM,\n+\n+\tinitialize: function(node, props, nomatch){\n+\t\tif (node == null) node = 'div';\n+\n+\t\tif (typeof node == 'string') return hostDocument.build(node, props);\n+\n+\t\tnode = nodeByID(node);\n+\n+\t\tif (!nomatch) for (var l = matchers.length; l--;){\n+\t\t\tvar current = matchers[l];\n+\t\t\tif (SelectorEngine.match(node, current._match)){\n+\t\t\t\treturn new current._class(node, props, true);\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn this.parent(node).set(props);\n+\t}\n+\n+}).mirror(function(key){\n+\tif (Array.prototype[key]) return;\n+\n+\tElements.implement(key, function(){\n+\t\tvar args = arguments;\n+\t\treturn this.map(function(element){\n+\t\t\treturn element[key].apply(element, args);\n+\t\t});\n+\t});\n+});\n+\n+// Collections of Elements\n+\n+var Elements = DOM.Elements = function(nodes){\n+\tif (nodes && nodes.length){\n+\t\tvar uniques = {}, item;\n+\t\tfor (var i = 0; item = id(nodes[i++]);){\n+\t\t\tvar uid = SelectorEngine.uidOf(item.node);\n+\t\t\tif (!uniques[uid]){\n+\t\t\t\tuniques[uid] = true;\n+\t\t\t\tthis.push(item);\n+\t\t\t}\n+\t\t}\n+\t}\n+};\n+\n+Elements.prototype = {length: 0};\n+Elements.parent = Array;\n+\n+new Type('Elements', Elements).implement({\n+\n+\tfilter: function(filter, context){\n+\t\tif (!filter) return this;\n+\t\treturn new Elements(Array.filter(this, (typeOf(filter) == 'string') ? function(item){\n+\t\t\treturn item.match(filter);\n+\t\t} : filter, context));\n+\t}.protect(),\n+\n+\tpush: function(){\n+\t\tvar length = this.length;\n+\t\tfor (var i = 0, l = arguments.length; i < l; i++){\n+\t\t\tvar item = id(arguments[i]);\n+\t\t\tif (item) this[length++] = item;\n+\t\t}\n+\t\treturn (this.length = length);\n+\t}.protect(),\n+\n+\tunshift: function(){\n+\t\tvar items = [];\n+\t\tfor (var i = 0, l = arguments.length; i < l; i++){\n+\t\t\tvar item = id(arguments[i]);\n+\t\t\tif (item) items.push(item);\n+\t\t}\n+\t\treturn Array.prototype.unshift.apply(this, items);\n+\t}.protect(),\n+\n+\tconcat: function(){\n+\t\tvar newElements = new Elements(this);\n+\t\tfor (var i = 0, l = arguments.length; i < l; i++){\n+\t\t\tvar item = arguments[i];\n+\t\t\tif (Type.isEnumerable(item)) newElements.append(item);\n+\t\t\telse newElements.push(item);\n+\t\t}\n+\t\treturn newElements;\n+\t}.protect(),\n+\n+\tappend: function(collection){\n+\t\tfor (var i = 0, l = collection.length; i < l; i++) this.push(collection[i]);\n+\t\treturn this;\n+\t}.protect(),\n+\n+\tempty: function(){\n+\t\twhile (this.length) delete this[--this.length];\n+\t\treturn this;\n+\t}.protect(),\n+\n+\tmap: function(fn, context){\n+\t\tvar isElements = true;\n+\t\tvar results = Array.map(this, function(value, key, self){\n+\t\t\tvar result = fn.call(context, value, key, self);\n+\t\t\tif (isElements && !(result instanceof Element)) isElements = false;\n+\t\t\treturn result;\n+\t\t}, context);\n+\t\treturn isElements ? this : results;\n+\t}.protect(),\n+\n+\tlog: function(){\n+\t\treturn this.map(function(wrapper){\n+\t\t\treturn wrapper.toNode();\n+\t\t});\n+\t}.protect()\n+\n+});\n+\n+// FF, IE\n+var splice = Array.prototype.splice, object = {'0': 0, '1': 1, length: 2};\n+\n+splice.call(object, 1, 1);\n+if (object[1] == 1) Elements.implement('splice', function(){\n+\tvar length = this.length;\n+\tvar result = splice.apply(this, arguments);\n+\twhile (length >= this.length) delete this[length--];\n+\treturn result;\n+}.protect());\n+\n+Elements.implement(Array.prototype);\n+\n+Array.mirror(Elements);\n+\n+// Put all those useful methods in Element\n+\n+Element.implement({\n+\n+\tappendChild: function(child){\n+\t\treturn this.node.appendChild(nodeByID(child));\n+\t},\n+\n+\tsetAttribute: function(name, value){\n+\t\treturn this.node.setAttribute(name, value);\n+\t},\n+\n+\tgetAttribute: function(name){\n+\t\treturn this.node.getAttribute(name);\n+\t},\n+\n+\tcontains: function(node){\n+\t\treturn SelectorEngine.contains(this.node, nodeByID(node));\n+\t},\n+\n+\tmatch: function(expression){\n+\t\treturn SelectorEngine.match(this.node, expression);\n+\t},\n+\n+\ttoString: function(){",
        "path": "Source/DOM/Element.js",
        "position": 289,
        "original_position": 289,
        "commit_id": "c7d51a837febbbec64858ef5ced70c5ea6e46077",
        "original_commit_id": "f18ea75e3839181a6a76d29afd409d31a4b4fbee",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, this isn't working yet in IE6. `myClass.prototype.toString = function(){...}` however does work, so maybe something wrong in Class?\n",
        "created_at": "2011-05-09T23:29:55Z",
        "updated_at": "2011-05-09T23:51:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/78#discussion_r27818",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/78",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/27818"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/78#discussion_r27818"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/27819",
        "pull_request_review_id": null,
        "id": 27819,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODE5",
        "diff_hunk": "@@ -0,0 +1,674 @@\n+/*\n+---\n+name: DOM.Element\n+description: The MooTools DOM library, making the DOM FUN FUN FUN!\n+provides: [DOM, DOM.id, DOM.Element, DOM.Elements, DOM.Document, DOM.document, DOM.Window, DOM.window]\n+requires: [Type, typeOf, Array, String, Function, Number, Object, Accessor, Slick.Parser, Store]\n+...\n+*/\n+\n+(function(){\n+\n+var window = this, document = window.document,\n+\thtml = document.documentElement,\n+\tDOM2Events = !!html.addEventListener;\n+\n+var nodeOf = function(item){\n+\treturn (item != null && item.toNode) ? item.toNode() : item;\n+};\n+\n+var wrappers = {};\n+\n+// Base DOM Class\n+\n+var DOM = this.DOM = new Class({\n+\n+\tImplements: [Events, Store],\n+\n+\tinitialize: function(node){\n+\t\tnode = this.node = nodeOf(node);\n+\t\tvar uid = SelectorEngine.uidOf(node);\n+\t\treturn (wrappers[uid] || (wrappers[uid] = this));\n+\t},\n+\n+\ttoNode: function(){\n+\t\treturn this.node;\n+\t},\n+\n+\taddEventListener: (DOM2Events ? function(type, fn){\n+\t\tthis.node.addEventListener(type, fn, false);\n+\t\treturn this;\n+\t} : function(type, fn){\n+\t\tthis.node.attachEvent('on' + type, fn);\n+\t\treturn this;\n+\t}),\n+\n+\tremoveEventListener: (DOM2Events ? function(type, fn){\n+\t\tthis.node.removeEventListener(type, fn, false);\n+\t\treturn this;\n+\t} : function(type, fn){\n+\t\tthis.node.detachEvent('on' + type, fn);\n+\t\treturn this;\n+\t})\n+\n+});\n+\n+DOM.prototype.log = DOM.prototype.toNode;\n+\n+// Basic Selector Engine methods\n+\n+SelectorEngine = {};\n+\n+DOM.extend('defineSelectorEngine', function(engine){\n+\tif (!engine) return this;\n+\n+\t['search', 'find', 'match', 'contains', 'uidOf', 'parse'].each(function(name){\n+\t\tif (engine[name]) SelectorEngine[name] = engine[name];\n+\t});\n+\n+\treturn this;\n+\n+}).defineSelectorEngine({\n+\n+\tsearch: function(){\n+\t\treturn [];\n+\t},\n+\n+\tfind: function(){\n+\t\treturn null;\n+\t},\n+\n+\tmatch: function(){\n+\t\treturn false;\n+\t},\n+\n+\tcontains: function(){\n+\t\treturn false;\n+\t},\n+\n+\tuidOf: function(node){\n+\t\treturn node.uniqueID || (node.uniqueID = String.uniqueID());\n+\t},\n+\n+\tparse: Slick.parse\n+\n+}).extend({\n+\n+\tsearch: function(expression){\n+\t\treturn SelectorEngine.search(document, expression, new Elements);\n+\t},\n+\n+\tfind: function(expression){\n+\t\tvar found = SelectorEngine.find(document, expression);\n+\t\treturn found ? new Element(found) : null;\n+\t}\n+\n+});\n+\n+var nodeByID = function(item){\n+\tvar type;\n+\treturn (!item) ? null\n+\t\t: (item == window || item == document || ((type = typeOf(item)) && type == 'element')) ? item\n+\t\t: (type == 'string') ? SelectorEngine.find(document, '#' + item.replace(/(\\W)/g, '\\\\$1'))\n+\t\t: (item.toElement) ? nodeOf(item.toElement())\n+\t\t: (item instanceof DOM) ? item.toNode()\n+\t\t: null;\n+};\n+\n+// No more bling bling $ or $$\n+var id = DOM.id = function(item){\n+\treturn (!item) ? null\n+\t\t: (item instanceof DOM) ? item\n+\t\t: (item == window) ? hostWindow\n+\t\t: (item == document) ? hostDocument\n+\t\t: (item = nodeByID(item)) && new Element(item);\n+};\n+\n+// Element and Element subclassing\n+\n+var matchers = [];\n+\n+Class.defineMutator('Matches', function(match){\n+\tmatchers.push({_match: match, _class: this});\n+});\n+\n+var Element = DOM.Element = new Class({\n+\n+\tExtends: DOM,\n+\n+\tinitialize: function(node, props, nomatch){\n+\t\tif (node == null) node = 'div';\n+\n+\t\tif (typeof node == 'string') return hostDocument.build(node, props);\n+\n+\t\tnode = nodeByID(node);\n+\n+\t\tif (!nomatch) for (var l = matchers.length; l--;){\n+\t\t\tvar current = matchers[l];\n+\t\t\tif (SelectorEngine.match(node, current._match)){\n+\t\t\t\treturn new current._class(node, props, true);\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn this.parent(node).set(props);\n+\t}\n+\n+}).mirror(function(key){\n+\tif (Array.prototype[key]) return;\n+\n+\tElements.implement(key, function(){\n+\t\tvar args = arguments;\n+\t\treturn this.map(function(element){\n+\t\t\treturn element[key].apply(element, args);\n+\t\t});\n+\t});\n+});\n+\n+// Collections of Elements\n+\n+var Elements = DOM.Elements = function(nodes){\n+\tif (nodes && nodes.length){\n+\t\tvar uniques = {}, item;\n+\t\tfor (var i = 0; item = id(nodes[i++]);){\n+\t\t\tvar uid = SelectorEngine.uidOf(item.node);\n+\t\t\tif (!uniques[uid]){\n+\t\t\t\tuniques[uid] = true;\n+\t\t\t\tthis.push(item);\n+\t\t\t}\n+\t\t}\n+\t}\n+};\n+\n+Elements.prototype = {length: 0};\n+Elements.parent = Array;\n+\n+new Type('Elements', Elements).implement({\n+\n+\tfilter: function(filter, context){\n+\t\tif (!filter) return this;\n+\t\treturn new Elements(Array.filter(this, (typeOf(filter) == 'string') ? function(item){\n+\t\t\treturn item.match(filter);\n+\t\t} : filter, context));\n+\t}.protect(),\n+\n+\tpush: function(){\n+\t\tvar length = this.length;\n+\t\tfor (var i = 0, l = arguments.length; i < l; i++){\n+\t\t\tvar item = id(arguments[i]);\n+\t\t\tif (item) this[length++] = item;\n+\t\t}\n+\t\treturn (this.length = length);\n+\t}.protect(),\n+\n+\tunshift: function(){\n+\t\tvar items = [];\n+\t\tfor (var i = 0, l = arguments.length; i < l; i++){\n+\t\t\tvar item = id(arguments[i]);\n+\t\t\tif (item) items.push(item);\n+\t\t}\n+\t\treturn Array.prototype.unshift.apply(this, items);\n+\t}.protect(),\n+\n+\tconcat: function(){\n+\t\tvar newElements = new Elements(this);\n+\t\tfor (var i = 0, l = arguments.length; i < l; i++){\n+\t\t\tvar item = arguments[i];\n+\t\t\tif (Type.isEnumerable(item)) newElements.append(item);\n+\t\t\telse newElements.push(item);\n+\t\t}\n+\t\treturn newElements;\n+\t}.protect(),\n+\n+\tappend: function(collection){\n+\t\tfor (var i = 0, l = collection.length; i < l; i++) this.push(collection[i]);\n+\t\treturn this;\n+\t}.protect(),\n+\n+\tempty: function(){\n+\t\twhile (this.length) delete this[--this.length];\n+\t\treturn this;\n+\t}.protect(),\n+\n+\tmap: function(fn, context){\n+\t\tvar isElements = true;\n+\t\tvar results = Array.map(this, function(value, key, self){\n+\t\t\tvar result = fn.call(context, value, key, self);\n+\t\t\tif (isElements && !(result instanceof Element)) isElements = false;\n+\t\t\treturn result;\n+\t\t}, context);\n+\t\treturn isElements ? this : results;\n+\t}.protect(),\n+\n+\tlog: function(){\n+\t\treturn this.map(function(wrapper){\n+\t\t\treturn wrapper.toNode();\n+\t\t});\n+\t}.protect()\n+\n+});\n+\n+// FF, IE\n+var splice = Array.prototype.splice, object = {'0': 0, '1': 1, length: 2};\n+\n+splice.call(object, 1, 1);\n+if (object[1] == 1) Elements.implement('splice', function(){\n+\tvar length = this.length;\n+\tvar result = splice.apply(this, arguments);\n+\twhile (length >= this.length) delete this[length--];\n+\treturn result;\n+}.protect());\n+\n+Elements.implement(Array.prototype);\n+\n+Array.mirror(Elements);\n+\n+// Put all those useful methods in Element\n+\n+Element.implement({\n+\n+\tappendChild: function(child){\n+\t\treturn this.node.appendChild(nodeByID(child));\n+\t},\n+\n+\tsetAttribute: function(name, value){\n+\t\treturn this.node.setAttribute(name, value);\n+\t},\n+\n+\tgetAttribute: function(name){\n+\t\treturn this.node.getAttribute(name);\n+\t},\n+\n+\tcontains: function(node){\n+\t\treturn SelectorEngine.contains(this.node, nodeByID(node));\n+\t},\n+\n+\tmatch: function(expression){\n+\t\treturn SelectorEngine.match(this.node, expression);\n+\t},\n+\n+\ttoString: function(){",
        "path": "Source/DOM/Element.js",
        "position": 289,
        "original_position": 289,
        "commit_id": "c7d51a837febbbec64858ef5ced70c5ea6e46077",
        "original_commit_id": "f18ea75e3839181a6a76d29afd409d31a4b4fbee",
        "user": {
            "login": "seanmonstar",
            "id": 51479,
            "node_id": "MDQ6VXNlcjUxNDc5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/51479?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanmonstar",
            "html_url": "https://github.com/seanmonstar",
            "followers_url": "https://api.github.com/users/seanmonstar/followers",
            "following_url": "https://api.github.com/users/seanmonstar/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanmonstar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanmonstar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanmonstar/subscriptions",
            "organizations_url": "https://api.github.com/users/seanmonstar/orgs",
            "repos_url": "https://api.github.com/users/seanmonstar/repos",
            "events_url": "https://api.github.com/users/seanmonstar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanmonstar/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There was in issue with toString in Class in 1.2. It had to do with the loop for Class.Mutators.\n",
        "created_at": "2011-05-09T23:31:21Z",
        "updated_at": "2011-05-09T23:51:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/78#discussion_r27819",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/78",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/27819"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/78#discussion_r27819"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/27829",
        "pull_request_review_id": null,
        "id": 27829,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODI5",
        "diff_hunk": "@@ -0,0 +1,674 @@\n+/*\n+---\n+name: DOM.Element\n+description: The MooTools DOM library, making the DOM FUN FUN FUN!\n+provides: [DOM, DOM.id, DOM.Element, DOM.Elements, DOM.Document, DOM.document, DOM.Window, DOM.window]\n+requires: [Type, typeOf, Array, String, Function, Number, Object, Accessor, Slick.Parser, Store]\n+...\n+*/\n+\n+(function(){\n+\n+var window = this, document = window.document,\n+\thtml = document.documentElement,\n+\tDOM2Events = !!html.addEventListener;\n+\n+var nodeOf = function(item){\n+\treturn (item != null && item.toNode) ? item.toNode() : item;\n+};\n+\n+var wrappers = {};\n+\n+// Base DOM Class\n+\n+var DOM = this.DOM = new Class({\n+\n+\tImplements: [Events, Store],\n+\n+\tinitialize: function(node){\n+\t\tnode = this.node = nodeOf(node);\n+\t\tvar uid = SelectorEngine.uidOf(node);\n+\t\treturn (wrappers[uid] || (wrappers[uid] = this));\n+\t},\n+\n+\ttoNode: function(){\n+\t\treturn this.node;\n+\t},\n+\n+\taddEventListener: (DOM2Events ? function(type, fn){\n+\t\tthis.node.addEventListener(type, fn, false);\n+\t\treturn this;\n+\t} : function(type, fn){\n+\t\tthis.node.attachEvent('on' + type, fn);\n+\t\treturn this;\n+\t}),\n+\n+\tremoveEventListener: (DOM2Events ? function(type, fn){\n+\t\tthis.node.removeEventListener(type, fn, false);\n+\t\treturn this;\n+\t} : function(type, fn){\n+\t\tthis.node.detachEvent('on' + type, fn);\n+\t\treturn this;\n+\t})\n+\n+});\n+\n+DOM.prototype.log = DOM.prototype.toNode;\n+\n+// Basic Selector Engine methods\n+\n+SelectorEngine = {};\n+\n+DOM.extend('defineSelectorEngine', function(engine){\n+\tif (!engine) return this;\n+\n+\t['search', 'find', 'match', 'contains', 'uidOf', 'parse'].each(function(name){\n+\t\tif (engine[name]) SelectorEngine[name] = engine[name];\n+\t});\n+\n+\treturn this;\n+\n+}).defineSelectorEngine({\n+\n+\tsearch: function(){\n+\t\treturn [];\n+\t},\n+\n+\tfind: function(){\n+\t\treturn null;\n+\t},\n+\n+\tmatch: function(){\n+\t\treturn false;\n+\t},\n+\n+\tcontains: function(){\n+\t\treturn false;\n+\t},\n+\n+\tuidOf: function(node){\n+\t\treturn node.uniqueID || (node.uniqueID = String.uniqueID());\n+\t},\n+\n+\tparse: Slick.parse\n+\n+}).extend({\n+\n+\tsearch: function(expression){\n+\t\treturn SelectorEngine.search(document, expression, new Elements);\n+\t},\n+\n+\tfind: function(expression){\n+\t\tvar found = SelectorEngine.find(document, expression);\n+\t\treturn found ? new Element(found) : null;\n+\t}\n+\n+});\n+\n+var nodeByID = function(item){\n+\tvar type;\n+\treturn (!item) ? null\n+\t\t: (item == window || item == document || ((type = typeOf(item)) && type == 'element')) ? item\n+\t\t: (type == 'string') ? SelectorEngine.find(document, '#' + item.replace(/(\\W)/g, '\\\\$1'))\n+\t\t: (item.toElement) ? nodeOf(item.toElement())\n+\t\t: (item instanceof DOM) ? item.toNode()\n+\t\t: null;\n+};\n+\n+// No more bling bling $ or $$\n+var id = DOM.id = function(item){\n+\treturn (!item) ? null\n+\t\t: (item instanceof DOM) ? item\n+\t\t: (item == window) ? hostWindow\n+\t\t: (item == document) ? hostDocument\n+\t\t: (item = nodeByID(item)) && new Element(item);\n+};\n+\n+// Element and Element subclassing\n+\n+var matchers = [];\n+\n+Class.defineMutator('Matches', function(match){\n+\tmatchers.push({_match: match, _class: this});\n+});\n+\n+var Element = DOM.Element = new Class({\n+\n+\tExtends: DOM,\n+\n+\tinitialize: function(node, props, nomatch){\n+\t\tif (node == null) node = 'div';\n+\n+\t\tif (typeof node == 'string') return hostDocument.build(node, props);\n+\n+\t\tnode = nodeByID(node);\n+\n+\t\tif (!nomatch) for (var l = matchers.length; l--;){\n+\t\t\tvar current = matchers[l];\n+\t\t\tif (SelectorEngine.match(node, current._match)){\n+\t\t\t\treturn new current._class(node, props, true);\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn this.parent(node).set(props);\n+\t}\n+\n+}).mirror(function(key){\n+\tif (Array.prototype[key]) return;\n+\n+\tElements.implement(key, function(){\n+\t\tvar args = arguments;\n+\t\treturn this.map(function(element){\n+\t\t\treturn element[key].apply(element, args);\n+\t\t});\n+\t});\n+});\n+\n+// Collections of Elements\n+\n+var Elements = DOM.Elements = function(nodes){\n+\tif (nodes && nodes.length){\n+\t\tvar uniques = {}, item;\n+\t\tfor (var i = 0; item = id(nodes[i++]);){\n+\t\t\tvar uid = SelectorEngine.uidOf(item.node);\n+\t\t\tif (!uniques[uid]){\n+\t\t\t\tuniques[uid] = true;\n+\t\t\t\tthis.push(item);\n+\t\t\t}\n+\t\t}\n+\t}\n+};\n+\n+Elements.prototype = {length: 0};\n+Elements.parent = Array;\n+\n+new Type('Elements', Elements).implement({\n+\n+\tfilter: function(filter, context){\n+\t\tif (!filter) return this;\n+\t\treturn new Elements(Array.filter(this, (typeOf(filter) == 'string') ? function(item){\n+\t\t\treturn item.match(filter);\n+\t\t} : filter, context));\n+\t}.protect(),\n+\n+\tpush: function(){\n+\t\tvar length = this.length;\n+\t\tfor (var i = 0, l = arguments.length; i < l; i++){\n+\t\t\tvar item = id(arguments[i]);\n+\t\t\tif (item) this[length++] = item;\n+\t\t}\n+\t\treturn (this.length = length);\n+\t}.protect(),\n+\n+\tunshift: function(){\n+\t\tvar items = [];\n+\t\tfor (var i = 0, l = arguments.length; i < l; i++){\n+\t\t\tvar item = id(arguments[i]);\n+\t\t\tif (item) items.push(item);\n+\t\t}\n+\t\treturn Array.prototype.unshift.apply(this, items);\n+\t}.protect(),\n+\n+\tconcat: function(){\n+\t\tvar newElements = new Elements(this);\n+\t\tfor (var i = 0, l = arguments.length; i < l; i++){\n+\t\t\tvar item = arguments[i];\n+\t\t\tif (Type.isEnumerable(item)) newElements.append(item);\n+\t\t\telse newElements.push(item);\n+\t\t}\n+\t\treturn newElements;\n+\t}.protect(),\n+\n+\tappend: function(collection){\n+\t\tfor (var i = 0, l = collection.length; i < l; i++) this.push(collection[i]);\n+\t\treturn this;\n+\t}.protect(),\n+\n+\tempty: function(){\n+\t\twhile (this.length) delete this[--this.length];\n+\t\treturn this;\n+\t}.protect(),\n+\n+\tmap: function(fn, context){\n+\t\tvar isElements = true;\n+\t\tvar results = Array.map(this, function(value, key, self){\n+\t\t\tvar result = fn.call(context, value, key, self);\n+\t\t\tif (isElements && !(result instanceof Element)) isElements = false;\n+\t\t\treturn result;\n+\t\t}, context);\n+\t\treturn isElements ? this : results;\n+\t}.protect(),\n+\n+\tlog: function(){\n+\t\treturn this.map(function(wrapper){\n+\t\t\treturn wrapper.toNode();\n+\t\t});\n+\t}.protect()\n+\n+});\n+\n+// FF, IE\n+var splice = Array.prototype.splice, object = {'0': 0, '1': 1, length: 2};\n+\n+splice.call(object, 1, 1);\n+if (object[1] == 1) Elements.implement('splice', function(){\n+\tvar length = this.length;\n+\tvar result = splice.apply(this, arguments);\n+\twhile (length >= this.length) delete this[length--];\n+\treturn result;\n+}.protect());\n+\n+Elements.implement(Array.prototype);\n+\n+Array.mirror(Elements);\n+\n+// Put all those useful methods in Element\n+\n+Element.implement({\n+\n+\tappendChild: function(child){\n+\t\treturn this.node.appendChild(nodeByID(child));\n+\t},\n+\n+\tsetAttribute: function(name, value){\n+\t\treturn this.node.setAttribute(name, value);\n+\t},\n+\n+\tgetAttribute: function(name){\n+\t\treturn this.node.getAttribute(name);\n+\t},\n+\n+\tcontains: function(node){\n+\t\treturn SelectorEngine.contains(this.node, nodeByID(node));\n+\t},\n+\n+\tmatch: function(expression){\n+\t\treturn SelectorEngine.match(this.node, expression);\n+\t},\n+\n+\ttoString: function(){",
        "path": "Source/DOM/Element.js",
        "position": 289,
        "original_position": 289,
        "commit_id": "c7d51a837febbbec64858ef5ced70c5ea6e46077",
        "original_commit_id": "f18ea75e3839181a6a76d29afd409d31a4b4fbee",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ok, this should fix it: https://github.com/arian/mootools-core/commit/c7d51a837febbbec64858ef5ced70c5ea6e46077\n",
        "created_at": "2011-05-09T23:52:19Z",
        "updated_at": "2011-05-09T23:52:19Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/78#discussion_r27829",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/78",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/27829"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/78#discussion_r27829"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/40247",
        "pull_request_review_id": null,
        "id": 40247,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3",
        "diff_hunk": "@@ -52,7 +52,7 @@ var Element = new Class({\n \n \tinitialize: function(el, props){\n \t\tif ($type(el) == 'string'){\n-\t\t\tif (window.ie && props && (props.name || props.type)){\n+\t\t\tif (window.ie && (typeof window.performance == 'undefined')  && props && (props.name || props.type)){",
        "path": "Native/Element.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "d124ec5e80b3b1ebffb75227e026a8d86f3ad640",
        "original_commit_id": "d124ec5e80b3b1ebffb75227e026a8d86f3ad640",
        "user": {
            "login": "restlessdesign",
            "id": 128779,
            "node_id": "MDQ6VXNlcjEyODc3OQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/128779?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/restlessdesign",
            "html_url": "https://github.com/restlessdesign",
            "followers_url": "https://api.github.com/users/restlessdesign/followers",
            "following_url": "https://api.github.com/users/restlessdesign/following{/other_user}",
            "gists_url": "https://api.github.com/users/restlessdesign/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/restlessdesign/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/restlessdesign/subscriptions",
            "organizations_url": "https://api.github.com/users/restlessdesign/orgs",
            "repos_url": "https://api.github.com/users/restlessdesign/repos",
            "events_url": "https://api.github.com/users/restlessdesign/events{/privacy}",
            "received_events_url": "https://api.github.com/users/restlessdesign/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`window.performance` was one of the new properties added in IE9, but if you guys have a preferred feature detection for IE9, please let me know!\n",
        "created_at": "2011-06-06T16:21:27Z",
        "updated_at": "2011-06-06T16:21:27Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/80#discussion_r40247",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/80",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/40247"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/80#discussion_r40247"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/80"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66900",
        "pull_request_review_id": null,
        "id": 66900,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTAw",
        "diff_hunk": "@@ -58,6 +58,9 @@ separating the logic and styles:\n \n \t// the styles of myClassName will be applied to the target Element.\n \tmyEffect.start('.myClassName');\n+\t\n+\n+Whilst some complex CSS selectors will work, only simple selectors are supported. Eg a single class name or ID.",
        "path": "Docs/Fx/Fx.Morph.md",
        "position": 15,
        "original_position": 15,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe note why (browsers suck)?\n",
        "created_at": "2011-07-16T21:22:09Z",
        "updated_at": "2011-07-16T21:22:09Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66900",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66900"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66900"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66903",
        "pull_request_review_id": null,
        "id": 66903,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTAz",
        "diff_hunk": "@@ -58,6 +58,9 @@ separating the logic and styles:\n \n \t// the styles of myClassName will be applied to the target Element.\n \tmyEffect.start('.myClassName');\n+\t\n+\n+Whilst some complex CSS selectors will work, only simple selectors are supported. Eg a single class name or ID.",
        "path": "Docs/Fx/Fx.Morph.md",
        "position": 15,
        "original_position": 15,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "fakedarren",
            "id": 63054,
            "node_id": "MDQ6VXNlcjYzMDU0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/63054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fakedarren",
            "html_url": "https://github.com/fakedarren",
            "followers_url": "https://api.github.com/users/fakedarren/followers",
            "following_url": "https://api.github.com/users/fakedarren/following{/other_user}",
            "gists_url": "https://api.github.com/users/fakedarren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fakedarren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fakedarren/subscriptions",
            "organizations_url": "https://api.github.com/users/fakedarren/orgs",
            "repos_url": "https://api.github.com/users/fakedarren/repos",
            "events_url": "https://api.github.com/users/fakedarren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fakedarren/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure that would really be helpful. Then you would be asked what browsers support what. This is stating that they _may_ work but we can only support the simple ones.\n",
        "created_at": "2011-07-16T21:24:09Z",
        "updated_at": "2011-07-16T21:24:09Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66903",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66903"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66903"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66904",
        "pull_request_review_id": null,
        "id": 66904,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTA0",
        "diff_hunk": "@@ -0,0 +1,318 @@\n+Slick {#Slick}\n+==========================\n+\n+Slick is the selector engine used by MooTools. It supports many CSS3 selectors and more!",
        "path": "Docs/Slick/Slick.md",
        "position": 4,
        "original_position": 4,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "instead of \"and more\" how about \"and provides many custom features\" or similar? And lose the !, this is documentation and by default must be boring.\n",
        "created_at": "2011-07-16T21:25:16Z",
        "updated_at": "2011-07-16T21:25:16Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66904",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66904"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66904"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66905",
        "pull_request_review_id": null,
        "id": 66905,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTA1",
        "diff_hunk": "@@ -0,0 +1,318 @@\n+Slick {#Slick}\n+==========================\n+\n+Slick is the selector engine used by MooTools. It supports many CSS3 selectors and more!\n+\n+### See Also:\n+\n+- [W3C Pseudo Classes](http://www.w3.org/TR/2005/WD-css3-selectors-20051215/#pseudo-classes)\n+\n+\n+Reversed Combinators\n+-------------------------------------\n+\n+Reversed Combinators redirect the flow of selectors and combinators. Slick implements these by prepending `!` to a selector or combinator.\n+\n+### Examples:\n+\n+\t$$('p ! div')\t\t// A <div> that is an ancestor of a <p>\n+\t$$('p !> div')\t\t// A <div> that is a direct parent of a <p>\n+\t$$('.foo !+ p')\t\t// Gets the previous adjacent <p> sibling",
        "path": "Docs/Slick/Slick.md",
        "position": 20,
        "original_position": 20,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "These examples are quite wrong because they return all divs that are ancestors of p etc. Use document.getElement or signify that this returns a collection.\n",
        "created_at": "2011-07-16T21:26:34Z",
        "updated_at": "2011-07-16T21:26:34Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66905",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66905"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66905"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66906",
        "pull_request_review_id": null,
        "id": 66906,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTA2",
        "diff_hunk": "@@ -0,0 +1,318 @@\n+Slick {#Slick}\n+==========================\n+\n+Slick is the selector engine used by MooTools. It supports many CSS3 selectors and more!\n+\n+### See Also:\n+\n+- [W3C Pseudo Classes](http://www.w3.org/TR/2005/WD-css3-selectors-20051215/#pseudo-classes)\n+\n+\n+Reversed Combinators",
        "path": "Docs/Slick/Slick.md",
        "position": 11,
        "original_position": 11,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Did we call them Reversed Combinators or \"Reverse Combinators\" //cc @subtleGradient\n",
        "created_at": "2011-07-16T21:27:19Z",
        "updated_at": "2011-07-16T21:27:19Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66906",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66906"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66906"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66907",
        "pull_request_review_id": null,
        "id": 66907,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTA3",
        "diff_hunk": "@@ -0,0 +1,318 @@\n+Slick {#Slick}\n+==========================\n+\n+Slick is the selector engine used by MooTools. It supports many CSS3 selectors and more!\n+\n+### See Also:\n+\n+- [W3C Pseudo Classes](http://www.w3.org/TR/2005/WD-css3-selectors-20051215/#pseudo-classes)\n+\n+\n+Reversed Combinators\n+-------------------------------------\n+\n+Reversed Combinators redirect the flow of selectors and combinators. Slick implements these by prepending `!` to a selector or combinator.\n+\n+### Examples:\n+\n+\t$$('p ! div')\t\t// A <div> that is an ancestor of a <p>\n+\t$$('p !> div')\t\t// A <div> that is a direct parent of a <p>\n+\t$$('.foo !+ p')\t\t// Gets the previous adjacent <p> sibling\n+\n+### Notes:\n+\n+Reversed Combinators are used internally by MooTools for many of our traversal methods. They offer an extremely concise and powerful alternative to traversal methods like `getParent()`.\n+\n+\n+Slick.definePseudo\n+-------------------------------------",
        "path": "Docs/Slick/Slick.md",
        "position": 28,
        "original_position": 28,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Shouldn't the ---- lines match the headline? :P\n",
        "created_at": "2011-07-16T21:28:06Z",
        "updated_at": "2011-07-16T21:28:06Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66907",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66907"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66907"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66908",
        "pull_request_review_id": null,
        "id": 66908,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTA4",
        "diff_hunk": "@@ -0,0 +1,318 @@\n+Slick {#Slick}\n+==========================\n+\n+Slick is the selector engine used by MooTools. It supports many CSS3 selectors and more!\n+\n+### See Also:\n+\n+- [W3C Pseudo Classes](http://www.w3.org/TR/2005/WD-css3-selectors-20051215/#pseudo-classes)\n+\n+\n+Reversed Combinators\n+-------------------------------------\n+\n+Reversed Combinators redirect the flow of selectors and combinators. Slick implements these by prepending `!` to a selector or combinator.\n+\n+### Examples:\n+\n+\t$$('p ! div')\t\t// A <div> that is an ancestor of a <p>\n+\t$$('p !> div')\t\t// A <div> that is a direct parent of a <p>\n+\t$$('.foo !+ p')\t\t// Gets the previous adjacent <p> sibling\n+\n+### Notes:\n+\n+Reversed Combinators are used internally by MooTools for many of our traversal methods. They offer an extremely concise and powerful alternative to traversal methods like `getParent()`.\n+\n+\n+Slick.definePseudo",
        "path": "Docs/Slick/Slick.md",
        "position": 27,
        "original_position": 27,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We use for example: \"Fx.Morph Method: set {#Fx-Morph:set}\". Shouldn't we follow that style?\n",
        "created_at": "2011-07-16T21:28:58Z",
        "updated_at": "2011-07-16T21:28:58Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66908",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66908"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66908"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66909",
        "pull_request_review_id": null,
        "id": 66909,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTA5",
        "diff_hunk": "@@ -138,7 +138,7 @@ Element.NativeEvents = {\n \tgesturestart: 2, gesturechange: 2, gestureend: 2, // gesture\n \tfocus: 2, blur: 2, change: 2, reset: 2, select: 2, submit: 2, //form elements\n \tload: 2, unload: 1, beforeunload: 2, resize: 1, move: 1, DOMContentLoaded: 1, readystatechange: 1, //window\n-\terror: 1, abort: 1, scroll: 1 //misc\n+\terror: 1, abort: 1, scroll: 1, online: 2, offline: 2 //misc",
        "path": "Source/Element/Element.Event.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "bb5289adce276f9ef85a49899aa54f4158d940dd",
        "original_commit_id": "bb5289adce276f9ef85a49899aa54f4158d940dd",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "not `online: 1, offline: 1`? Or does they pass an event object that we should extend? Don't see anything like that on https://developer.mozilla.org/en/Online_and_offline_events for example..\n",
        "created_at": "2011-07-16T21:29:26Z",
        "updated_at": "2011-07-16T21:29:26Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/90#discussion_r66909",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/90",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66909"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/90#discussion_r66909"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/90"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66910",
        "pull_request_review_id": null,
        "id": 66910,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTEw",
        "diff_hunk": "@@ -0,0 +1,318 @@\n+Slick {#Slick}\n+==========================\n+\n+Slick is the selector engine used by MooTools. It supports many CSS3 selectors and more!\n+\n+### See Also:\n+\n+- [W3C Pseudo Classes](http://www.w3.org/TR/2005/WD-css3-selectors-20051215/#pseudo-classes)\n+\n+\n+Reversed Combinators\n+-------------------------------------\n+\n+Reversed Combinators redirect the flow of selectors and combinators. Slick implements these by prepending `!` to a selector or combinator.\n+\n+### Examples:\n+\n+\t$$('p ! div')\t\t// A <div> that is an ancestor of a <p>\n+\t$$('p !> div')\t\t// A <div> that is a direct parent of a <p>\n+\t$$('.foo !+ p')\t\t// Gets the previous adjacent <p> sibling\n+\n+### Notes:\n+\n+Reversed Combinators are used internally by MooTools for many of our traversal methods. They offer an extremely concise and powerful alternative to traversal methods like `getParent()`.\n+\n+\n+Slick.definePseudo\n+-------------------------------------\n+\n+definePseudo allows you to create your own custom pseudo selectors.\n+\n+### Examples:\n+\n+\tSlick.definePseudo('my-custom-pseudo', function(){\n+\t\t// 'this' is the node to check\n+\t\treturn document.id(this).retrieve('something-custom').isAwesome;",
        "path": "Docs/Slick/Slick.md",
        "position": 36,
        "original_position": 36,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The examples should use the generics, ie. Element.retrieve(this, 'something-custom').isAwesome.\n",
        "created_at": "2011-07-16T21:29:43Z",
        "updated_at": "2011-07-16T21:29:43Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66910",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66910"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66910"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66911",
        "pull_request_review_id": null,
        "id": 66911,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTEx",
        "diff_hunk": "@@ -138,7 +138,7 @@ Element.NativeEvents = {\n \tgesturestart: 2, gesturechange: 2, gestureend: 2, // gesture\n \tfocus: 2, blur: 2, change: 2, reset: 2, select: 2, submit: 2, //form elements\n \tload: 2, unload: 1, beforeunload: 2, resize: 1, move: 1, DOMContentLoaded: 1, readystatechange: 1, //window\n-\terror: 1, abort: 1, scroll: 1 //misc\n+\terror: 1, abort: 1, scroll: 1, online: 2, offline: 2 //misc",
        "path": "Source/Element/Element.Event.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "bb5289adce276f9ef85a49899aa54f4158d940dd",
        "original_commit_id": "bb5289adce276f9ef85a49899aa54f4158d940dd",
        "user": {
            "login": "fakedarren",
            "id": 63054,
            "node_id": "MDQ6VXNlcjYzMDU0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/63054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fakedarren",
            "html_url": "https://github.com/fakedarren",
            "followers_url": "https://api.github.com/users/fakedarren/followers",
            "following_url": "https://api.github.com/users/fakedarren/following{/other_user}",
            "gists_url": "https://api.github.com/users/fakedarren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fakedarren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fakedarren/subscriptions",
            "organizations_url": "https://api.github.com/users/fakedarren/orgs",
            "repos_url": "https://api.github.com/users/fakedarren/repos",
            "events_url": "https://api.github.com/users/fakedarren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fakedarren/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "http://jsfiddle.net/tubvq/\n",
        "created_at": "2011-07-16T21:30:41Z",
        "updated_at": "2011-07-16T21:30:41Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/90#discussion_r66911",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/90",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66911"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/90#discussion_r66911"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/90"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66912",
        "pull_request_review_id": null,
        "id": 66912,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTEy",
        "diff_hunk": "@@ -0,0 +1,318 @@\n+Slick {#Slick}\n+==========================\n+\n+Slick is the selector engine used by MooTools. It supports many CSS3 selectors and more!\n+\n+### See Also:\n+\n+- [W3C Pseudo Classes](http://www.w3.org/TR/2005/WD-css3-selectors-20051215/#pseudo-classes)\n+\n+\n+Reversed Combinators\n+-------------------------------------\n+\n+Reversed Combinators redirect the flow of selectors and combinators. Slick implements these by prepending `!` to a selector or combinator.\n+\n+### Examples:\n+\n+\t$$('p ! div')\t\t// A <div> that is an ancestor of a <p>\n+\t$$('p !> div')\t\t// A <div> that is a direct parent of a <p>\n+\t$$('.foo !+ p')\t\t// Gets the previous adjacent <p> sibling\n+\n+### Notes:\n+\n+Reversed Combinators are used internally by MooTools for many of our traversal methods. They offer an extremely concise and powerful alternative to traversal methods like `getParent()`.\n+\n+\n+Slick.definePseudo\n+-------------------------------------\n+\n+definePseudo allows you to create your own custom pseudo selectors.\n+\n+### Examples:\n+\n+\tSlick.definePseudo('my-custom-pseudo', function(){\n+\t\t// 'this' is the node to check\n+\t\treturn document.id(this).retrieve('something-custom').isAwesome;\n+\t});\n+\t\n+\t$$(':my-custom-pseudo')\t\t// Will return the first <p> tag that is awesome\n+\t\n+\tSlick.definePseudo('has-color', function(color){\n+   \t\treturn document.id(this).getStyle('color') == color;\n+\t});\n+\t\n+\t<p style=\"color: red\">foo</p>\n+\t<p style=\"color: blue\">bar</p>\n+\t\n+\t$$(':has-color(red)');\t\t// Will return the first <p> tag\n+",
        "path": "Docs/Slick/Slick.md",
        "position": 49,
        "original_position": 49,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe switch these two examples. I feel like this example is more easy to understand for users (Element.Storage wtf? :) ).\n\nAlso not sure how safe it is to rely on color values (if someone would attempt to use this from the examples). How about a :display or :visibility pseudo?\n",
        "created_at": "2011-07-16T21:31:37Z",
        "updated_at": "2011-07-16T21:31:37Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66912",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66912"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66912"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66914",
        "pull_request_review_id": null,
        "id": 66914,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTE0",
        "diff_hunk": "@@ -0,0 +1,318 @@\n+Slick {#Slick}\n+==========================\n+\n+Slick is the selector engine used by MooTools. It supports many CSS3 selectors and more!\n+\n+### See Also:\n+\n+- [W3C Pseudo Classes](http://www.w3.org/TR/2005/WD-css3-selectors-20051215/#pseudo-classes)\n+\n+\n+Reversed Combinators\n+-------------------------------------\n+\n+Reversed Combinators redirect the flow of selectors and combinators. Slick implements these by prepending `!` to a selector or combinator.\n+\n+### Examples:\n+\n+\t$$('p ! div')\t\t// A <div> that is an ancestor of a <p>\n+\t$$('p !> div')\t\t// A <div> that is a direct parent of a <p>\n+\t$$('.foo !+ p')\t\t// Gets the previous adjacent <p> sibling\n+\n+### Notes:\n+\n+Reversed Combinators are used internally by MooTools for many of our traversal methods. They offer an extremely concise and powerful alternative to traversal methods like `getParent()`.\n+\n+\n+Slick.definePseudo\n+-------------------------------------\n+\n+definePseudo allows you to create your own custom pseudo selectors.\n+\n+### Examples:\n+\n+\tSlick.definePseudo('my-custom-pseudo', function(){\n+\t\t// 'this' is the node to check\n+\t\treturn document.id(this).retrieve('something-custom').isAwesome;\n+\t});\n+\t\n+\t$$(':my-custom-pseudo')\t\t// Will return the first <p> tag that is awesome\n+\t\n+\tSlick.definePseudo('has-color', function(color){\n+   \t\treturn document.id(this).getStyle('color') == color;\n+\t});\n+\t\n+\t<p style=\"color: red\">foo</p>\n+\t<p style=\"color: blue\">bar</p>\n+\t\n+\t$$(':has-color(red)');\t\t// Will return the first <p> tag\n+\n+\n+Selector: Next Siblings ('~') {#Slick:nextsiblings}\n+-------------------------------------\n+\n+Gets the next siblings.\n+\n+### Example:\n+\t\n+\t$$('p.foo ~')\t\t // Gets all next siblings of <p class='foo'>",
        "path": "Docs/Slick/Slick.md",
        "position": 58,
        "original_position": 58,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don' really care about this but ' for html attributes, really? :)\n",
        "created_at": "2011-07-16T21:34:15Z",
        "updated_at": "2011-07-16T21:34:15Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66914",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66914"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66914"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66915",
        "pull_request_review_id": null,
        "id": 66915,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTE1",
        "diff_hunk": "@@ -0,0 +1,318 @@\n+Slick {#Slick}\n+==========================\n+\n+Slick is the selector engine used by MooTools. It supports many CSS3 selectors and more!\n+\n+### See Also:\n+\n+- [W3C Pseudo Classes](http://www.w3.org/TR/2005/WD-css3-selectors-20051215/#pseudo-classes)\n+\n+\n+Reversed Combinators\n+-------------------------------------\n+\n+Reversed Combinators redirect the flow of selectors and combinators. Slick implements these by prepending `!` to a selector or combinator.\n+\n+### Examples:\n+\n+\t$$('p ! div')\t\t// A <div> that is an ancestor of a <p>\n+\t$$('p !> div')\t\t// A <div> that is a direct parent of a <p>\n+\t$$('.foo !+ p')\t\t// Gets the previous adjacent <p> sibling\n+\n+### Notes:\n+\n+Reversed Combinators are used internally by MooTools for many of our traversal methods. They offer an extremely concise and powerful alternative to traversal methods like `getParent()`.\n+\n+\n+Slick.definePseudo\n+-------------------------------------\n+\n+definePseudo allows you to create your own custom pseudo selectors.\n+\n+### Examples:\n+\n+\tSlick.definePseudo('my-custom-pseudo', function(){\n+\t\t// 'this' is the node to check\n+\t\treturn document.id(this).retrieve('something-custom').isAwesome;\n+\t});\n+\t\n+\t$$(':my-custom-pseudo')\t\t// Will return the first <p> tag that is awesome\n+\t\n+\tSlick.definePseudo('has-color', function(color){\n+   \t\treturn document.id(this).getStyle('color') == color;\n+\t});\n+\t\n+\t<p style=\"color: red\">foo</p>\n+\t<p style=\"color: blue\">bar</p>\n+\t\n+\t$$(':has-color(red)');\t\t// Will return the first <p> tag\n+\n+\n+Selector: Next Siblings ('~') {#Slick:nextsiblings}\n+-------------------------------------\n+\n+Gets the next siblings.\n+\n+### Example:\n+\t\n+\t$$('p.foo ~')\t\t // Gets all next siblings of <p class='foo'>\n+\t$$('p.foo ~ blockquote') // Gets every <blockquote> with a <p class='foo'> sibling somewhere *before* it\n+\n+\n+Selector: Previous Siblings ('!~') {#Slick:previoussiblings}\n+-------------------------------------\n+\n+Gets the previous siblings.\n+\n+### Example:\n+\t\n+\t$$('p.foo !~')            // Gets all previous siblings of <p class='foo'>\n+\t$$('p.foo !~ blockquote') // Gets every <blockquote> with a <p class='foo'> sibling somewhere *after* it\n+\t\n+\n+Selector: All Siblings ('~~') {#Slick:allsiblings}\n+-------------------------------------\n+\n+Gets all siblings.\n+\n+### Example:\n+\n+\t$$('p.foo ~~')            // Gets all previous and next siblings of <p class='foo'>\n+\t$$('p.foo ~~ blockquote') // Gets every <blockquote> with a <p class='foo'> sibling before OR after it\n+\n+Selector: First Child ('^') {#Slick:firstchild}\n+-------------------------------------\n+\n+Gets the first child of an element.\n+\n+### Example:\n+\n+\t$$('p.foo ^')\t\t// Gets the first child of <p class='foo'>\n+\t$$('p.foo ^ strong')\t// Gets every <strong> that is the first element child of a <p class='foo'>\n+\n+\n+Selector: Last Child ('!^') {#Slick:lastchild}\n+-------------------------------------\n+\n+Gets the last child of an element.\n+\n+### Example:\n+\n+\t$$('p.foo !^')\t\t// Gets the last child of <p class='foo'>\n+\t$$('p.foo ^ strong')\t// Gets every <strong> that is the last element child of a <p class='foo'>\n+\n+\n+\n+Selector: checked {#Slick:checked}\n+-------------------------------------\n+\n+Matches all Elements that are checked.\n+\n+### Examples:\n+\n+\t$$(':checked')\n+\n+\t$('myForm').getElements('input:checked');\n+\n+\n+Selector: enabled {#Slick:enabled}\n+-------------------------------------\n+\n+Matches all Elements that are enabled.\n+\n+### Examples:\n+\n+\t$$(':enabled')\n+\n+\t$('myElement').getElements(':enabled');\n+\t\n+\n+Selector: empty {#Slick:empty}\n+---------------------------------\n+\n+Matches all elements which are empty.\n+\n+### Example:\n+\n+\t$$(':empty');\n+\n+\n+Selector: contains {#Slick:contains}\n+---------------------------------------\n+\n+Matches all the Elements which contains the text.\n+\n+### Variables:\n+\n+* text - (string) The text that the Element should contain.\n+\n+### Example:\n+\n+\t$$('p:contains(\"find me\")');\n+\n+\n+Selector: focus {#Slick:focus}\n+---------------------------------------\n+\n+Gets the element in focus.\n+\n+### Example:\n+\n+\t$$(':focus');\t\t// Gets the element in focus\n+\n+\n+Selector: not {#Slick:not}\n+-------------------------------------\n+\n+Matches all elements that do not match the selector.\n+\n+<small>Note: The Slick implementation of the `:not` pseudoClass is a superset of the standard. i.e. it can do more stuff.</small>",
        "path": "Docs/Slick/Slick.md",
        "position": 169,
        "original_position": 169,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"it can do more stuff?\" Can we highlight the difference from the spec?\n",
        "created_at": "2011-07-16T21:35:29Z",
        "updated_at": "2011-07-16T21:35:29Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66915",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66915"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66915"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66916",
        "pull_request_review_id": null,
        "id": 66916,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTE2",
        "diff_hunk": "@@ -0,0 +1,318 @@\n+Slick {#Slick}\n+==========================\n+\n+Slick is the selector engine used by MooTools. It supports many CSS3 selectors and more!\n+\n+### See Also:\n+\n+- [W3C Pseudo Classes](http://www.w3.org/TR/2005/WD-css3-selectors-20051215/#pseudo-classes)\n+\n+\n+Reversed Combinators\n+-------------------------------------\n+\n+Reversed Combinators redirect the flow of selectors and combinators. Slick implements these by prepending `!` to a selector or combinator.\n+\n+### Examples:\n+\n+\t$$('p ! div')\t\t// A <div> that is an ancestor of a <p>\n+\t$$('p !> div')\t\t// A <div> that is a direct parent of a <p>\n+\t$$('.foo !+ p')\t\t// Gets the previous adjacent <p> sibling\n+\n+### Notes:\n+\n+Reversed Combinators are used internally by MooTools for many of our traversal methods. They offer an extremely concise and powerful alternative to traversal methods like `getParent()`.\n+\n+\n+Slick.definePseudo\n+-------------------------------------\n+\n+definePseudo allows you to create your own custom pseudo selectors.\n+\n+### Examples:\n+\n+\tSlick.definePseudo('my-custom-pseudo', function(){\n+\t\t// 'this' is the node to check\n+\t\treturn document.id(this).retrieve('something-custom').isAwesome;\n+\t});\n+\t\n+\t$$(':my-custom-pseudo')\t\t// Will return the first <p> tag that is awesome\n+\t\n+\tSlick.definePseudo('has-color', function(color){\n+   \t\treturn document.id(this).getStyle('color') == color;\n+\t});\n+\t\n+\t<p style=\"color: red\">foo</p>\n+\t<p style=\"color: blue\">bar</p>\n+\t\n+\t$$(':has-color(red)');\t\t// Will return the first <p> tag\n+\n+\n+Selector: Next Siblings ('~') {#Slick:nextsiblings}\n+-------------------------------------\n+\n+Gets the next siblings.\n+\n+### Example:\n+\t\n+\t$$('p.foo ~')\t\t // Gets all next siblings of <p class='foo'>\n+\t$$('p.foo ~ blockquote') // Gets every <blockquote> with a <p class='foo'> sibling somewhere *before* it\n+\n+\n+Selector: Previous Siblings ('!~') {#Slick:previoussiblings}\n+-------------------------------------\n+\n+Gets the previous siblings.\n+\n+### Example:\n+\t\n+\t$$('p.foo !~')            // Gets all previous siblings of <p class='foo'>\n+\t$$('p.foo !~ blockquote') // Gets every <blockquote> with a <p class='foo'> sibling somewhere *after* it\n+\t\n+\n+Selector: All Siblings ('~~') {#Slick:allsiblings}\n+-------------------------------------\n+\n+Gets all siblings.\n+\n+### Example:\n+\n+\t$$('p.foo ~~')            // Gets all previous and next siblings of <p class='foo'>\n+\t$$('p.foo ~~ blockquote') // Gets every <blockquote> with a <p class='foo'> sibling before OR after it\n+\n+Selector: First Child ('^') {#Slick:firstchild}\n+-------------------------------------\n+\n+Gets the first child of an element.\n+\n+### Example:\n+\n+\t$$('p.foo ^')\t\t// Gets the first child of <p class='foo'>\n+\t$$('p.foo ^ strong')\t// Gets every <strong> that is the first element child of a <p class='foo'>\n+\n+\n+Selector: Last Child ('!^') {#Slick:lastchild}\n+-------------------------------------\n+\n+Gets the last child of an element.\n+\n+### Example:\n+\n+\t$$('p.foo !^')\t\t// Gets the last child of <p class='foo'>\n+\t$$('p.foo ^ strong')\t// Gets every <strong> that is the last element child of a <p class='foo'>\n+\n+\n+\n+Selector: checked {#Slick:checked}\n+-------------------------------------\n+\n+Matches all Elements that are checked.\n+\n+### Examples:\n+\n+\t$$(':checked')\n+\n+\t$('myForm').getElements('input:checked');\n+\n+\n+Selector: enabled {#Slick:enabled}\n+-------------------------------------\n+\n+Matches all Elements that are enabled.\n+\n+### Examples:\n+\n+\t$$(':enabled')\n+\n+\t$('myElement').getElements(':enabled');\n+\t\n+\n+Selector: empty {#Slick:empty}\n+---------------------------------\n+\n+Matches all elements which are empty.\n+\n+### Example:\n+\n+\t$$(':empty');\n+\n+\n+Selector: contains {#Slick:contains}\n+---------------------------------------\n+\n+Matches all the Elements which contains the text.\n+\n+### Variables:\n+\n+* text - (string) The text that the Element should contain.\n+\n+### Example:\n+\n+\t$$('p:contains(\"find me\")');\n+\n+\n+Selector: focus {#Slick:focus}\n+---------------------------------------\n+\n+Gets the element in focus.\n+\n+### Example:\n+\n+\t$$(':focus');\t\t// Gets the element in focus\n+\n+\n+Selector: not {#Slick:not}\n+-------------------------------------\n+\n+Matches all elements that do not match the selector.\n+\n+<small>Note: The Slick implementation of the `:not` pseudoClass is a superset of the standard. i.e. it can do more stuff.</small>",
        "path": "Docs/Slick/Slick.md",
        "position": 169,
        "original_position": 169,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I actually didn't really know about this before btw.\n",
        "created_at": "2011-07-16T21:35:41Z",
        "updated_at": "2011-07-16T21:35:41Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66916",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66916"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66916"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66917",
        "pull_request_review_id": null,
        "id": 66917,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTE3",
        "diff_hunk": "@@ -58,6 +58,9 @@ separating the logic and styles:\n \n \t// the styles of myClassName will be applied to the target Element.\n \tmyEffect.start('.myClassName');\n+\t\n+\n+Whilst some complex CSS selectors will work, only simple selectors are supported. Eg a single class name or ID.",
        "path": "Docs/Fx/Fx.Morph.md",
        "position": 15,
        "original_position": 15,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "But it also does not give a reason why it would only work for \"some\". It makes this whole feature seem quite random and I would never actually use and rely on it just because of this sentence.\n",
        "created_at": "2011-07-16T21:38:15Z",
        "updated_at": "2011-07-16T21:38:15Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66917",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66917"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66917"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66921",
        "pull_request_review_id": null,
        "id": 66921,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTIx",
        "diff_hunk": "@@ -58,6 +58,9 @@ separating the logic and styles:\n \n \t// the styles of myClassName will be applied to the target Element.\n \tmyEffect.start('.myClassName');\n+\t\n+\n+Whilst some complex CSS selectors will work, only simple selectors are supported. Eg a single class name or ID.",
        "path": "Docs/Fx/Fx.Morph.md",
        "position": 15,
        "original_position": 15,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "fakedarren",
            "id": 63054,
            "node_id": "MDQ6VXNlcjYzMDU0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/63054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fakedarren",
            "html_url": "https://github.com/fakedarren",
            "followers_url": "https://api.github.com/users/fakedarren/followers",
            "following_url": "https://api.github.com/users/fakedarren/following{/other_user}",
            "gists_url": "https://api.github.com/users/fakedarren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fakedarren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fakedarren/subscriptions",
            "organizations_url": "https://api.github.com/users/fakedarren/orgs",
            "repos_url": "https://api.github.com/users/fakedarren/repos",
            "events_url": "https://api.github.com/users/fakedarren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fakedarren/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Feel free to provide a better, concise description. It works fine (is supported) for simple selectors. And that is what this sentence says.\n",
        "created_at": "2011-07-16T21:40:55Z",
        "updated_at": "2011-07-16T21:40:55Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66921",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66921"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66921"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66922",
        "pull_request_review_id": null,
        "id": 66922,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTIy",
        "diff_hunk": "@@ -58,6 +58,9 @@ separating the logic and styles:\n \n \t// the styles of myClassName will be applied to the target Element.\n \tmyEffect.start('.myClassName');\n+\t\n+\n+Whilst some complex CSS selectors will work, only simple selectors are supported. Eg a single class name or ID.",
        "path": "Docs/Fx/Fx.Morph.md",
        "position": 15,
        "original_position": 15,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Then only note that only simple selectors are supported and leave out the part about complex selectors? Do you approve?\n",
        "created_at": "2011-07-16T21:42:31Z",
        "updated_at": "2011-07-16T21:42:31Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66922",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66922"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66922"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66934",
        "pull_request_review_id": null,
        "id": 66934,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTM0",
        "diff_hunk": "@@ -0,0 +1,318 @@\n+Slick {#Slick}\n+==========================\n+\n+Slick is the selector engine used by MooTools. It supports many CSS3 selectors and more!",
        "path": "Docs/Slick/Slick.md",
        "position": 4,
        "original_position": 4,
        "commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "original_commit_id": "72ff27bfd05d4320cf79c7e205ea5666e63dd683",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So we have to remove this example too? http://mootools.net/docs/core/Element/Element#Element:contains :D\n",
        "created_at": "2011-07-16T22:03:32Z",
        "updated_at": "2011-07-16T22:03:32Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/89#discussion_r66934",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/89",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/66934"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/89#discussion_r66934"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/89"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/86769",
        "pull_request_review_id": null,
        "id": 86769,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NzY5",
        "diff_hunk": "@@ -185,10 +189,10 @@ var relay = function(old, method){\n \t\tvar __uid, s;\n \t\tif (fn) for (__uid in stored){\n \t\t\ts = stored[__uid];\n-\t\t\tif (s.match == match && s.fn == fn) return arguments.callee.call(this, removeEvent, type, match, fn, __uid);\n+\t\t\tif (s.match == match && s.fn == fn) return arguments.callee.call(this, type, match, fn, __uid);\n \t\t} else for (__uid in stored){\n \t\t\ts = stored[__uid];\n-\t\t\tif (s.match == match) arguments.callee.call(this, removeEvent, type, match, s.fn, __uid);\n+\t\t\tif (s.match == match) arguments.callee.call(this, type, match, s.fn, __uid);",
        "path": "Source/Element/Element.Delegation.js",
        "position": 40,
        "original_position": 40,
        "commit_id": "21e6bb50b777399a23293fa81429e4ff3a83c267",
        "original_commit_id": "21e6bb50b777399a23293fa81429e4ff3a83c267",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please get rid of the arguments.callee calls :O\n",
        "created_at": "2011-08-09T17:54:02Z",
        "updated_at": "2011-08-09T17:54:02Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2010#discussion_r86769",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2010",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/86769"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2010#discussion_r86769"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2010"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/86810",
        "pull_request_review_id": null,
        "id": 86810,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODEw",
        "diff_hunk": "@@ -185,10 +189,10 @@ var relay = function(old, method){\n \t\tvar __uid, s;\n \t\tif (fn) for (__uid in stored){\n \t\t\ts = stored[__uid];\n-\t\t\tif (s.match == match && s.fn == fn) return arguments.callee.call(this, removeEvent, type, match, fn, __uid);\n+\t\t\tif (s.match == match && s.fn == fn) return arguments.callee.call(this, type, match, fn, __uid);\n \t\t} else for (__uid in stored){\n \t\t\ts = stored[__uid];\n-\t\t\tif (s.match == match) arguments.callee.call(this, removeEvent, type, match, s.fn, __uid);\n+\t\t\tif (s.match == match) arguments.callee.call(this, type, match, s.fn, __uid);",
        "path": "Source/Element/Element.Delegation.js",
        "position": 40,
        "original_position": 40,
        "commit_id": "21e6bb50b777399a23293fa81429e4ff3a83c267",
        "original_commit_id": "21e6bb50b777399a23293fa81429e4ff3a83c267",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good point. The difficulty is `relay` wrapper. Adding an issue since this will break in the future, but it's not part of this commit. \n",
        "created_at": "2011-08-09T18:36:45Z",
        "updated_at": "2011-08-09T18:36:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2010#discussion_r86810",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2010",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/86810"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2010#discussion_r86810"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2010"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/86947",
        "pull_request_review_id": null,
        "id": 86947,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2OTQ3",
        "diff_hunk": "@@ -32,10 +32,10 @@ var Event = new Type('Event', function(event, win){\n \t\tcode = event.which || event.keyCode;\n \t\tkey = Object.keyOf(Event.Keys, code);\n \t\tif (type == 'keydown'){\n-\t\t\tvar fKey = code - 111;\n-\t\t\tif (fKey > 0 && fKey < 13) key = 'f' + fKey;\n+\t\t\tif (code > 111 && code < 124) key = 'f' + (code - 111);\n+\t\t\tif (code > 95 && code < 106) key = code - 96;\n \t\t}\n-\t\tif (!key) key = String.fromCharCode(code).toLowerCase();\n+\t\tif (key == undefined) key = String.fromCharCode(code).toLowerCase();",
        "path": "Source/Types/Event.js",
        "position": null,
        "original_position": 10,
        "commit_id": "a29155cf96e0cece42e66f609c50e4ed2b0cf2e6",
        "original_commit_id": "24716441b1b8f8ba7f695e7463a344ef45f7f9f5",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "use `key == null`\n",
        "created_at": "2011-08-09T21:46:54Z",
        "updated_at": "2011-08-10T00:04:49Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2002#discussion_r86947",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2002",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/86947"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2002#discussion_r86947"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2002"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87873",
        "pull_request_review_id": null,
        "id": 87873,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODcz",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 7,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Missing obligatory `()`: `(type == 'checkbox')`\n\nAlso, I'm confused with the lookup. Is it a boolean lookup or a key lookup?\n",
        "created_at": "2011-08-10T16:08:21Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87873",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87873"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87873"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87876",
        "pull_request_review_id": null,
        "id": 87876,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODc2",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target, change = hasChanged(target);\n+\t\tif(target.get('tag') == 'select' && change) return true;",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 21,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Missing obligatory space. `if (target.get('tag' ...`\n\nI'd also switch the conditions: `if (change && target.get('tag') == 'select')` since there's a chance that change is false, and we will not have to do the (more) expensive `Element.get`.\n",
        "created_at": "2011-08-10T16:10:44Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87876",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87876"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87876"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87885",
        "pull_request_review_id": null,
        "id": 87885,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODg1",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target, change = hasChanged(target);\n+\t\tif(target.get('tag') == 'select' && change) return true;",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 21,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually I take that back. You can exit early if you do:\n\n``` javascript\nif (!change) return false;\nif (target.get('tag') == 'select') return true;\n```\n\nAnd remove any following `&& change`.\n",
        "created_at": "2011-08-10T16:13:23Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87885",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87885"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87885"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87894",
        "pull_request_review_id": null,
        "id": 87894,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODk0",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target, change = hasChanged(target);\n+\t\tif(target.get('tag') == 'select' && change) return true;\n+\t\tif(!hasListener) switch(event.key){\n+\t\t\tcase 'up': case 'down': case 'left': case 'right': return target.get('type') == 'radio' && change;\n+\t\t\tcase 'space': return target.get('type') == 'checkbox' && change;",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 24,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wondering if it's faster to:\n\n``` javascript\nvar directional = /up|down|left|right/; // make sure it's out of the closure\nif (!hasListener){\n  var type = target.get('type'), key = event.key;\n  if (key == 'space') return type == 'checkbox';\n  if (directional.test(key)) return type == 'radio';\n}\n```\n",
        "created_at": "2011-08-10T16:15:42Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87894",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87894"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87894"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87913",
        "pull_request_review_id": null,
        "id": 87913,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3OTEz",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target, change = hasChanged(target);\n+\t\tif(target.get('tag') == 'select' && change) return true;\n+\t\tif(!hasListener) switch(event.key){\n+\t\t\tcase 'up': case 'down': case 'left': case 'right': return target.get('type') == 'radio' && change;\n+\t\t\tcase 'space': return target.get('type') == 'checkbox' && change;\n+\t\t}\n+\t}\n+};\n+\n+Element.Events.change = {\n+\tbase: function(){\n+\t\tvar type = this.get('type');\n+\t\treturn (!hasListener && (type == 'checkbox' || type == 'radio')) ? 'click' : 'change';\n+\t},\n+\tcondition: function(event){\n+\t\tvar target = event.target;\n+\t\tif(hasListener && event.type == 'change' && target.get('tag') == 'select' && target.retrieve('change:last').type == 'keydown') return false;",
        "path": "Source/Element/Element.Event.js",
        "position": 37,
        "original_position": 36,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Missing obligatory space. `if (hasListener`\n",
        "created_at": "2011-08-10T16:18:29Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87913",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87913"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87913"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87921",
        "pull_request_review_id": null,
        "id": 87921,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3OTIx",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target, change = hasChanged(target);\n+\t\tif(target.get('tag') == 'select' && change) return true;\n+\t\tif(!hasListener) switch(event.key){\n+\t\t\tcase 'up': case 'down': case 'left': case 'right': return target.get('type') == 'radio' && change;\n+\t\t\tcase 'space': return target.get('type') == 'checkbox' && change;\n+\t\t}\n+\t}\n+};\n+\n+Element.Events.change = {\n+\tbase: function(){\n+\t\tvar type = this.get('type');\n+\t\treturn (!hasListener && (type == 'checkbox' || type == 'radio')) ? 'click' : 'change';\n+\t},\n+\tcondition: function(event){\n+\t\tvar target = event.target;\n+\t\tif(hasListener && event.type == 'change' && target.get('tag') == 'select' && target.retrieve('change:last').type == 'keydown') return false;\n+\t\treturn target.get('type') == 'radio' ? (event.type == 'keyup' ? !target.checked : target.checked) : true;",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 37,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Missing obligatory `()`: `return (target.get('type') == 'radio') ? ...` and `((event.type == 'keyup') ? !target...`\n",
        "created_at": "2011-08-10T16:19:44Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87921",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87921"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87921"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87971",
        "pull_request_review_id": null,
        "id": 87971,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3OTcx",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 7,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "csuwildcat",
            "id": 131786,
            "node_id": "MDQ6VXNlcjEzMTc4Ng==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/131786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csuwildcat",
            "html_url": "https://github.com/csuwildcat",
            "followers_url": "https://api.github.com/users/csuwildcat/followers",
            "following_url": "https://api.github.com/users/csuwildcat/following{/other_user}",
            "gists_url": "https://api.github.com/users/csuwildcat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csuwildcat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csuwildcat/subscriptions",
            "organizations_url": "https://api.github.com/users/csuwildcat/orgs",
            "repos_url": "https://api.github.com/users/csuwildcat/repos",
            "events_url": "https://api.github.com/users/csuwildcat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csuwildcat/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is checking the 'checked' property when either condition is met, and the value property in all others.\n",
        "created_at": "2011-08-10T16:28:48Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87971",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87971"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87971"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87978",
        "pull_request_review_id": null,
        "id": 87978,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3OTc4",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target, change = hasChanged(target);\n+\t\tif(target.get('tag') == 'select' && change) return true;\n+\t\tif(!hasListener) switch(event.key){\n+\t\t\tcase 'up': case 'down': case 'left': case 'right': return target.get('type') == 'radio' && change;\n+\t\t\tcase 'space': return target.get('type') == 'checkbox' && change;",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 24,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "csuwildcat",
            "id": 131786,
            "node_id": "MDQ6VXNlcjEzMTc4Ng==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/131786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csuwildcat",
            "html_url": "https://github.com/csuwildcat",
            "followers_url": "https://api.github.com/users/csuwildcat/followers",
            "following_url": "https://api.github.com/users/csuwildcat/following{/other_user}",
            "gists_url": "https://api.github.com/users/csuwildcat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csuwildcat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csuwildcat/subscriptions",
            "organizations_url": "https://api.github.com/users/csuwildcat/orgs",
            "repos_url": "https://api.github.com/users/csuwildcat/repos",
            "events_url": "https://api.github.com/users/csuwildcat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csuwildcat/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no, switches are significantly faster than any form of native type pseudo-switch (for instance [x,y,z]contains(y) or {1: 'foo', 2: 'bar'}['2'])\n",
        "created_at": "2011-08-10T16:31:28Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87978",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87978"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87978"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87981",
        "pull_request_review_id": null,
        "id": 87981,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3OTgx",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target, change = hasChanged(target);\n+\t\tif(target.get('tag') == 'select' && change) return true;\n+\t\tif(!hasListener) switch(event.key){\n+\t\t\tcase 'up': case 'down': case 'left': case 'right': return target.get('type') == 'radio' && change;\n+\t\t\tcase 'space': return target.get('type') == 'checkbox' && change;\n+\t\t}\n+\t}\n+};\n+\n+Element.Events.change = {\n+\tbase: function(){\n+\t\tvar type = this.get('type');\n+\t\treturn (!hasListener && (type == 'checkbox' || type == 'radio')) ? 'click' : 'change';\n+\t},\n+\tcondition: function(event){\n+\t\tvar target = event.target;\n+\t\tif(hasListener && event.type == 'change' && target.get('tag') == 'select' && target.retrieve('change:last').type == 'keydown') return false;",
        "path": "Source/Element/Element.Event.js",
        "position": 37,
        "original_position": 36,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "csuwildcat",
            "id": 131786,
            "node_id": "MDQ6VXNlcjEzMTc4Ng==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/131786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csuwildcat",
            "html_url": "https://github.com/csuwildcat",
            "followers_url": "https://api.github.com/users/csuwildcat/followers",
            "following_url": "https://api.github.com/users/csuwildcat/following{/other_user}",
            "gists_url": "https://api.github.com/users/csuwildcat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csuwildcat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csuwildcat/subscriptions",
            "organizations_url": "https://api.github.com/users/csuwildcat/orgs",
            "repos_url": "https://api.github.com/users/csuwildcat/repos",
            "events_url": "https://api.github.com/users/csuwildcat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csuwildcat/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "agreed\n",
        "created_at": "2011-08-10T16:31:41Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87981",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87981"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87981"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87983",
        "pull_request_review_id": null,
        "id": 87983,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3OTgz",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target, change = hasChanged(target);\n+\t\tif(target.get('tag') == 'select' && change) return true;\n+\t\tif(!hasListener) switch(event.key){\n+\t\t\tcase 'up': case 'down': case 'left': case 'right': return target.get('type') == 'radio' && change;\n+\t\t\tcase 'space': return target.get('type') == 'checkbox' && change;\n+\t\t}\n+\t}\n+};\n+\n+Element.Events.change = {\n+\tbase: function(){\n+\t\tvar type = this.get('type');\n+\t\treturn (!hasListener && (type == 'checkbox' || type == 'radio')) ? 'click' : 'change';\n+\t},\n+\tcondition: function(event){\n+\t\tvar target = event.target;\n+\t\tif(hasListener && event.type == 'change' && target.get('tag') == 'select' && target.retrieve('change:last').type == 'keydown') return false;\n+\t\treturn target.get('type') == 'radio' ? (event.type == 'keyup' ? !target.checked : target.checked) : true;",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 37,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "csuwildcat",
            "id": 131786,
            "node_id": "MDQ6VXNlcjEzMTc4Ng==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/131786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csuwildcat",
            "html_url": "https://github.com/csuwildcat",
            "followers_url": "https://api.github.com/users/csuwildcat/followers",
            "following_url": "https://api.github.com/users/csuwildcat/following{/other_user}",
            "gists_url": "https://api.github.com/users/csuwildcat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csuwildcat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csuwildcat/subscriptions",
            "organizations_url": "https://api.github.com/users/csuwildcat/orgs",
            "repos_url": "https://api.github.com/users/csuwildcat/repos",
            "events_url": "https://api.github.com/users/csuwildcat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csuwildcat/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is that obligatory?\n",
        "created_at": "2011-08-10T16:32:08Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87983",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87983"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87983"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87988",
        "pull_request_review_id": null,
        "id": 87988,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3OTg4",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target, change = hasChanged(target);\n+\t\tif(target.get('tag') == 'select' && change) return true;\n+\t\tif(!hasListener) switch(event.key){\n+\t\t\tcase 'up': case 'down': case 'left': case 'right': return target.get('type') == 'radio' && change;\n+\t\t\tcase 'space': return target.get('type') == 'checkbox' && change;\n+\t\t}\n+\t}\n+};\n+\n+Element.Events.change = {\n+\tbase: function(){\n+\t\tvar type = this.get('type');\n+\t\treturn (!hasListener && (type == 'checkbox' || type == 'radio')) ? 'click' : 'change';\n+\t},\n+\tcondition: function(event){\n+\t\tvar target = event.target;\n+\t\tif(hasListener && event.type == 'change' && target.get('tag') == 'select' && target.retrieve('change:last').type == 'keydown') return false;\n+\t\treturn target.get('type') == 'radio' ? (event.type == 'keyup' ? !target.checked : target.checked) : true;",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 37,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's a Moo style requisite\n",
        "created_at": "2011-08-10T16:33:02Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87988",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87988"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87988"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87992",
        "pull_request_review_id": null,
        "id": 87992,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3OTky",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 7,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah then you're missing the `()` around: `element[(type == 'radio' || type == 'checkbox') ? 'checked' : 'value'`\n\nNow you see why it's good to have the `()` :D\n",
        "created_at": "2011-08-10T16:34:36Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87992",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/87992"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r87992"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/88193",
        "pull_request_review_id": null,
        "id": 88193,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTkz",
        "diff_hunk": "@@ -166,6 +166,57 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[type == 'radio' || type == 'checkbox' ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target, change = hasChanged(target);\n+\t\tif(target.get('tag') == 'select' && change) return true;",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 21,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "cd39e6edd4e9d192a4737b0c3b67c8692a2cc7d8",
        "user": {
            "login": "csuwildcat",
            "id": 131786,
            "node_id": "MDQ6VXNlcjEzMTc4Ng==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/131786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csuwildcat",
            "html_url": "https://github.com/csuwildcat",
            "followers_url": "https://api.github.com/users/csuwildcat/followers",
            "following_url": "https://api.github.com/users/csuwildcat/following{/other_user}",
            "gists_url": "https://api.github.com/users/csuwildcat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csuwildcat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csuwildcat/subscriptions",
            "organizations_url": "https://api.github.com/users/csuwildcat/orgs",
            "repos_url": "https://api.github.com/users/csuwildcat/repos",
            "events_url": "https://api.github.com/users/csuwildcat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csuwildcat/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah that's a good optimization.\n",
        "created_at": "2011-08-10T17:38:14Z",
        "updated_at": "2011-08-10T18:41:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r88193",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/88193"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r88193"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92510",
        "pull_request_review_id": null,
        "id": 92510,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNTEw",
        "diff_hunk": "@@ -166,6 +166,58 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;",
        "path": "Source/Element/Element.Event.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "var hasListener = window.addEventListener && !window.attachEvent;\n",
        "created_at": "2011-08-15T19:21:05Z",
        "updated_at": "2011-08-15T19:21:05Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92510",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92510"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92510"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92513",
        "pull_request_review_id": null,
        "id": 92513,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNTEz",
        "diff_hunk": "@@ -166,6 +166,58 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[(type == 'radio' || type == 'checkbox') ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });",
        "path": "Source/Element/Element.Event.js",
        "position": 10,
        "original_position": 10,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "prefix this with a $.\n\n$change:last\n",
        "created_at": "2011-08-15T19:21:29Z",
        "updated_at": "2011-08-15T19:21:29Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92513",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92513"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92513"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92516",
        "pull_request_review_id": null,
        "id": 92516,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNTE2",
        "diff_hunk": "@@ -166,6 +166,58 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[(type == 'radio' || type == 'checkbox') ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });",
        "path": "Source/Element/Element.Event.js",
        "position": 10,
        "original_position": 10,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The object should be multiline\n\n```\nevent.target.store('change:last', {\n  type: event.type,\n  value: getValue(event.target)\n});\n```\n",
        "created_at": "2011-08-15T19:22:11Z",
        "updated_at": "2011-08-15T19:22:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92516",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92516"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92516"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92520",
        "pull_request_review_id": null,
        "id": 92520,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNTIw",
        "diff_hunk": "@@ -166,6 +166,58 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[(type == 'radio' || type == 'checkbox') ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);",
        "path": "Source/Element/Element.Event.js",
        "position": 14,
        "original_position": 14,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "return (\u2026)\n",
        "created_at": "2011-08-15T19:22:54Z",
        "updated_at": "2011-08-15T19:22:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92520",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92520"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92520"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92525",
        "pull_request_review_id": null,
        "id": 92525,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNTI1",
        "diff_hunk": "@@ -166,6 +166,58 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[(type == 'radio' || type == 'checkbox') ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('change:last', { type: event.type, value: getValue(event.target) });\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('change:last').value;\n+\treturn value != null && value != getValue(element);\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target;\n+\t\tif (!hasChanged(target)) return false;\n+\t\tif (target.get('tag') == 'select') return true;\n+\t\tif (!hasListener) switch(event.key){\n+\t\t\tcase 'up': case 'down': case 'left': case 'right': return target.get('type') == 'radio';\n+\t\t\tcase 'space': return target.get('type') == 'checkbox';\n+\t\t}\n+\t}\n+};\n+\n+Element.Events.change = {\n+\tbase: function(){\n+\t\tvar type = this.get('type');\n+\t\treturn (!hasListener && (type == 'checkbox' || type == 'radio')) ? 'click' : 'change';\n+\t},\n+\tcondition: function(event){\n+\t\tvar target = event.target;\n+\t\tif(hasListener && event.type == 'change' && target.get('tag') == 'select' && target.retrieve('change:last').type == 'keydown') return false;\n+\t\treturn (target.get('type') == 'radio') ? ((event.type == 'keyup') ? !target.checked : target.checked) : true;\n+\t},\n+\tonAdd: function(fn){\n+\t\tthis.addEvents({\n+\t\t\t'keychange': fn,\n+\t\t\t'focus': storeChange,\n+\t\t\t'keydown': storeChange\n+\t\t});\n+\t},\n+\tonRemove: function(fn){\n+\t\tthis.removeEvents({\n+\t\t\t'keychange': fn,\n+\t\t\t'focus': storeChange,\n+\t\t\t'keydown': storeChange",
        "path": "Source/Element/Element.Event.js",
        "position": 51,
        "original_position": 51,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "remove the quotes for all of these event keys.\n",
        "created_at": "2011-08-15T19:23:42Z",
        "updated_at": "2011-08-15T19:23:42Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92525",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92525"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92525"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92553",
        "pull_request_review_id": null,
        "id": 92553,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNTUz",
        "diff_hunk": "@@ -166,6 +166,58 @@ Element.Events = {\n \n };\n \n+var hasListener = window.addEventListener;",
        "path": "Source/Element/Element.Event.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "original_commit_id": "86ebc530114cb30a9da04270beca1687638d8290",
        "user": {
            "login": "csuwildcat",
            "id": 131786,
            "node_id": "MDQ6VXNlcjEzMTc4Ng==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/131786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csuwildcat",
            "html_url": "https://github.com/csuwildcat",
            "followers_url": "https://api.github.com/users/csuwildcat/followers",
            "following_url": "https://api.github.com/users/csuwildcat/following{/other_user}",
            "gists_url": "https://api.github.com/users/csuwildcat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csuwildcat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csuwildcat/subscriptions",
            "organizations_url": "https://api.github.com/users/csuwildcat/orgs",
            "repos_url": "https://api.github.com/users/csuwildcat/repos",
            "events_url": "https://api.github.com/users/csuwildcat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csuwildcat/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is this necessary?\n",
        "created_at": "2011-08-15T19:34:17Z",
        "updated_at": "2011-08-15T19:34:17Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92553",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2018",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92553"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2018#discussion_r92553"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2018"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92734",
        "pull_request_review_id": null,
        "id": 92734,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNzM0",
        "diff_hunk": "@@ -0,0 +1,20 @@\n+Type: Event {#Event}",
        "path": "Docs/Element/Element.Event.Change.md",
        "position": null,
        "original_position": 1,
        "commit_id": "7c20d66501c00feed9c08d457931811ea609e500",
        "original_commit_id": "9a1c570f574b686963cbabeb82432c17ed5d465b",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd probably prefer:\n\n``` markdown\nCustom Event: Change\n===================\n```\n\nAt least not `Type: Event`\n",
        "created_at": "2011-08-15T21:08:13Z",
        "updated_at": "2011-08-15T21:24:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92734",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2028",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92734"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92734"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2028"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92736",
        "pull_request_review_id": null,
        "id": 92736,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNzM2",
        "diff_hunk": "@@ -0,0 +1,20 @@\n+Type: Event {#Event}\n+==========================\n+\n+- This custom change event ensures the onchange event behaves the same across browsers.\n+- The change event is strictly intended for elements that support the native onchange event.\n+- For further information on cross-browser issues with the change event, visit Peter-Paul Koch's Quirksmode change event page: http://www.quirksmode.org/dom/events/change.html",
        "path": "Docs/Element/Element.Event.Change.md",
        "position": null,
        "original_position": 6,
        "commit_id": "7c20d66501c00feed9c08d457931811ea609e500",
        "original_commit_id": "9a1c570f574b686963cbabeb82432c17ed5d465b",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the `[foo](http://www.mootools.net)` syntax for links. Or use `[link][]` and list the link at the bottom of the file (see other files).\n",
        "created_at": "2011-08-15T21:09:02Z",
        "updated_at": "2011-08-15T21:24:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92736",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2028",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92736"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92736"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2028"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92738",
        "pull_request_review_id": null,
        "id": 92738,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNzM4",
        "diff_hunk": "@@ -0,0 +1,20 @@\n+Type: Event {#Event}\n+==========================\n+\n+- This custom change event ensures the onchange event behaves the same across browsers.\n+- The change event is strictly intended for elements that support the native onchange event.\n+- For further information on cross-browser issues with the change event, visit Peter-Paul Koch's Quirksmode change event page: http://www.quirksmode.org/dom/events/change.html\n+\n+Element.Events.change\n+----------------------\n+\n+### Event: change {#Element-Events:change}\n+\n+This event fires immediatly after an element's value changes\n+\n+#### Examples:\n+\t// Adding a change event directly to an element\n+\t$('myElement').addEvent('change', myFunction);\n+\t\n+\t// Delegating a change event to many elements\n+\t$('myContainer').addEvent('change:relay(input)', myFunction);\n\\ No newline at end of file",
        "path": "Docs/Element/Element.Event.Change.md",
        "position": null,
        "original_position": 21,
        "commit_id": "7c20d66501c00feed9c08d457931811ea609e500",
        "original_commit_id": "9a1c570f574b686963cbabeb82432c17ed5d465b",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Add newline :)\n",
        "created_at": "2011-08-15T21:09:19Z",
        "updated_at": "2011-08-15T21:24:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92738",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2028",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92738"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92738"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2028"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92754",
        "pull_request_review_id": null,
        "id": 92754,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNzU0",
        "diff_hunk": "@@ -0,0 +1,74 @@\n+/*\n+---\n+\n+name: Element.Event.Change\n+\n+description: Contains Element methods for normalizing change events across browsers.\n+\n+license: MIT-style license.\n+\n+requires: [Element, Event]\n+\n+provides: Element.Event.Change\n+\n+...\n+*/\n+\n+(function(){\n+\n+var hasListener = window.addEventListener;\n+var getValue = function(element){\n+\tvar type = element.get('type');\n+\treturn element[(type == 'radio' || type == 'checkbox') ? 'checked' : 'value'];\n+}\n+var storeChange = function(event){\n+\tevent.target.store('$change', {\n+\t\ttype: event.type,\n+\t\tvalue: getValue(event.target)\n+\t});\n+};\n+var hasChanged = function(element){\n+\tvar value =  element.retrieve('$change').value;\n+\treturn (value != null && value != getValue(element));\n+};\n+\n+Element.Events.keychange = {\n+\tbase: 'keyup',\n+\tcondition: function(event){\n+\t\tvar target = event.target;\n+\t\tif (!hasChanged(target)) return false;\n+\t\tif (target.get('tag') == 'select') return true;\n+\t\tif (!hasListener) switch(event.key){\n+\t\t\tcase 'up': case 'down': case 'left': case 'right': return target.get('type') == 'radio';\n+\t\t\tcase 'space': return target.get('type') == 'checkbox';\n+\t\t}\n+\t}\n+};\n+\n+Element.Events.change = {\n+\tbase: function(){\n+\t\tvar type = this.get('type');\n+\t\treturn (!hasListener && (type == 'checkbox' || type == 'radio')) ? 'click' : 'change';\n+\t},\n+\tcondition: function(event){\n+\t\tvar target = event.target;\n+\t\tif (hasListener && event.type == 'change' && target.get('tag') == 'select' && target.retrieve('$change').type == 'keydown') return false;\n+\t\treturn (target.get('type') == 'radio') ? ((event.type == 'keyup') ? !target.checked : target.checked) : true;\n+\t},\n+\tonAdd: function(fn){\n+\t\tthis.addEvents({\n+\t\t\tkeychange: fn,\n+\t\t\tfocus: storeChange,\n+\t\t\tkeydown: storeChange\n+\t\t});\n+\t},\n+\tonRemove: function(fn){\n+\t\tthis.removeEvents({\n+\t\t\tkeychange: fn,\n+\t\t\tfocus: storeChange,\n+\t\t\tkeydown: storeChange\n+\t\t});\n+\t}\n+}\n+\n+})();\n\\ No newline at end of file",
        "path": "Source/Element/Element.Event.Change.js",
        "position": null,
        "original_position": 75,
        "commit_id": "7c20d66501c00feed9c08d457931811ea609e500",
        "original_commit_id": "efce40aa9c2bcab5971fb15481cbfb3b1cd624c9",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "newline\n",
        "created_at": "2011-08-15T21:16:23Z",
        "updated_at": "2011-08-15T21:24:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92754",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2028",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92754"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92754"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2028"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92766",
        "pull_request_review_id": null,
        "id": 92766,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNzY2",
        "diff_hunk": "@@ -28,6 +28,7 @@ sources:\n   - \"Source/Element/Element.js\"\n   - \"Source/Element/Element.Style.js\"\n   - \"Source/Element/Element.Event.js\"\n+    - \"Source/Element/Element.Event.Change.js\"",
        "path": "package.yml",
        "position": null,
        "original_position": 4,
        "commit_id": "7c20d66501c00feed9c08d457931811ea609e500",
        "original_commit_id": "c23a13ab2d1ff94569d489a52ca3f32c44962dfa",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "wrong indentation breaks package.yml\n",
        "created_at": "2011-08-15T21:19:53Z",
        "updated_at": "2011-08-15T21:24:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92766",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2028",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92766"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92766"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2028"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92776",
        "pull_request_review_id": null,
        "id": 92776,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNzc2",
        "diff_hunk": "@@ -0,0 +1,74 @@\n+/*\n+---\n+\n+name: Element.Event.Change\n+\n+description: Contains Element methods for normalizing change events across browsers.\n+\n+license: MIT-style license.\n+\n+requires: [Element, Event]\n+\n+provides: Element.Event.Change\n+\n+...\n+*/\n+\n+(function(){\n+\n+var hasListener = window.addEventListener;",
        "path": "Source/Element/Element.Event.Change.js",
        "position": null,
        "original_position": 19,
        "commit_id": "7c20d66501c00feed9c08d457931811ea609e500",
        "original_commit_id": "c23a13ab2d1ff94569d489a52ca3f32c44962dfa",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You are still storing a reference to an object instead of a boolean. I want a boolean.\n",
        "created_at": "2011-08-15T21:23:07Z",
        "updated_at": "2011-08-15T21:24:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92776",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2028",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/92776"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2028#discussion_r92776"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2028"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/94421",
        "pull_request_review_id": null,
        "id": 94421,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0NDIx",
        "diff_hunk": "@@ -22,41 +22,39 @@ Element.Properties.styles = {set: function(styles){\n \tthis.setStyles(styles);\n }};\n \n-var hasOpacity = (html.style.opacity != null);\n-var reAlpha = /alpha\\(opacity=([\\d.]+)\\)/i;\n+var hasOpacity = (html.style.opacity != null),\n+\thasFilter = (html.style.filter != null),\n+\treAlpha = /alpha\\(opacity=([\\d.]+)\\)/i;\n \n-var setOpacity = function(element, opacity){\n-\tif (!element.currentStyle || !element.currentStyle.hasLayout) element.style.zoom = 1;\n-\tif (hasOpacity){\n-\t\telement.style.opacity = opacity;\n-\t} else {\n-\t\topacity = (opacity * 100).limit(0, 100).round();\n-\t\topacity = (opacity == 100) ? '' : 'alpha(opacity=' + opacity + ')';\n-\t\tvar filter = element.style.filter || element.getComputedStyle('filter') || '';\n-\t\telement.style.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n-\t}\n+var setVisibility = function(element, opacity){\n+\telement.store('$opacity', opacity);\n+\telement.style.visibility = opacity.limit(0, 1) ? 'visible' : 'hidden';\n };\n \n-Element.Properties.opacity = {\n-\n-\tset: function(opacity){\n-\t\tvar visibility = this.style.visibility;\n-\t\tif (opacity == 0 && visibility != 'hidden') this.style.visibility = 'hidden';\n-\t\telse if (opacity != 0 && visibility != 'visible') this.style.visibility = 'visible';\n-\n-\t\tsetOpacity(this, opacity);\n-\t},\n-\n-\tget: (hasOpacity) ? function(){\n-\t\tvar opacity = this.style.opacity || this.getComputedStyle('opacity');\n-\t\treturn (opacity == '') ? 1 : opacity;\n-\t} : function(){\n-\t\tvar opacity, filter = (this.style.filter || this.getComputedStyle('filter'));\n-\t\tif (filter) opacity = filter.match(reAlpha);\n-\t\treturn (opacity == null || filter == null) ? 1 : (opacity[1] / 100);\n-\t}\n-\n-};\n+var setOpacity = (hasOpacity ? function(element, opacity){\n+\telement.style.opacity = opacity;\n+} : (hasFilter ? function(element, opacity){\n+\tif (!element.currentStyle || !element.currentStyle.hasLayout) element.style.zoom = 1;\n+\topacity = (opacity * 100).limit(0, 100).round();\n+\topacity = (opacity == 100) ? '' : 'alpha(opacity=' + opacity + ')';\n+\tvar filter = element.style.filter || element.getComputedStyle('filter') || '';\n+\telement.style.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n+} : setVisibility));\n+\n+var getOpacity = (hasOpacity ? function(element){\n+\tvar opacity = element.style.opacity || element.getComputedStyle('opacity');\n+\treturn (opacity == '') ? 1 : opacity.toFloat();\n+} : (hasFilter ? function(element){\n+\tvar filter = (element.style.filter || element.getComputedStyle('filter')),\n+\t\topacity;\n+\tif (filter) opacity = filter.match(reAlpha);\n+\treturn (opacity == null || filter == null) ? 1 : (opacity[1] / 100);\n+} : function(element){\n+\tvar opacity = element.retrieve('$opacity');\n+\tif (opacity == null) opacity = (element.style.visibility == 'hidden' ? 0 : 1);\n+\tconsole.log(opacity);",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 66,
        "commit_id": "322a1b2af7bf5a50b414bfc71db7ebcbaf42df4b",
        "original_commit_id": "49a2d8be9ee4d96ead66980f8731f1003cd9401a",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "console.log\n",
        "created_at": "2011-08-17T08:55:05Z",
        "updated_at": "2011-08-17T09:03:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2027#discussion_r94421",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2027",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/94421"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2027#discussion_r94421"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2027"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/94422",
        "pull_request_review_id": null,
        "id": 94422,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0NDIy",
        "diff_hunk": "@@ -22,41 +22,39 @@ Element.Properties.styles = {set: function(styles){\n \tthis.setStyles(styles);\n }};\n \n-var hasOpacity = (html.style.opacity != null);\n-var reAlpha = /alpha\\(opacity=([\\d.]+)\\)/i;\n+var hasOpacity = (html.style.opacity != null),\n+\thasFilter = (html.style.filter != null),\n+\treAlpha = /alpha\\(opacity=([\\d.]+)\\)/i;\n \n-var setOpacity = function(element, opacity){\n-\tif (!element.currentStyle || !element.currentStyle.hasLayout) element.style.zoom = 1;\n-\tif (hasOpacity){\n-\t\telement.style.opacity = opacity;\n-\t} else {\n-\t\topacity = (opacity * 100).limit(0, 100).round();\n-\t\topacity = (opacity == 100) ? '' : 'alpha(opacity=' + opacity + ')';\n-\t\tvar filter = element.style.filter || element.getComputedStyle('filter') || '';\n-\t\telement.style.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n-\t}\n+var setVisibility = function(element, opacity){\n+\telement.store('$opacity', opacity);\n+\telement.style.visibility = opacity.limit(0, 1) ? 'visible' : 'hidden';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 22,
        "commit_id": "322a1b2af7bf5a50b414bfc71db7ebcbaf42df4b",
        "original_commit_id": "49a2d8be9ee4d96ead66980f8731f1003cd9401a",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` javascript\nelement.style.visibility = opacity > 0 ? 'visible' : 'hidden';\n```\n",
        "created_at": "2011-08-17T08:57:05Z",
        "updated_at": "2011-08-17T09:03:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2027#discussion_r94422",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2027",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/94422"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2027#discussion_r94422"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2027"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/94425",
        "pull_request_review_id": null,
        "id": 94425,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0NDI1",
        "diff_hunk": "@@ -22,41 +22,39 @@ Element.Properties.styles = {set: function(styles){\n \tthis.setStyles(styles);\n }};\n \n-var hasOpacity = (html.style.opacity != null);\n-var reAlpha = /alpha\\(opacity=([\\d.]+)\\)/i;\n+var hasOpacity = (html.style.opacity != null),\n+\thasFilter = (html.style.filter != null),\n+\treAlpha = /alpha\\(opacity=([\\d.]+)\\)/i;\n \n-var setOpacity = function(element, opacity){\n-\tif (!element.currentStyle || !element.currentStyle.hasLayout) element.style.zoom = 1;\n-\tif (hasOpacity){\n-\t\telement.style.opacity = opacity;\n-\t} else {\n-\t\topacity = (opacity * 100).limit(0, 100).round();\n-\t\topacity = (opacity == 100) ? '' : 'alpha(opacity=' + opacity + ')';\n-\t\tvar filter = element.style.filter || element.getComputedStyle('filter') || '';\n-\t\telement.style.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n-\t}\n+var setVisibility = function(element, opacity){\n+\telement.store('$opacity', opacity);\n+\telement.style.visibility = opacity.limit(0, 1) ? 'visible' : 'hidden';\n };\n \n-Element.Properties.opacity = {\n-\n-\tset: function(opacity){\n-\t\tvar visibility = this.style.visibility;\n-\t\tif (opacity == 0 && visibility != 'hidden') this.style.visibility = 'hidden';\n-\t\telse if (opacity != 0 && visibility != 'visible') this.style.visibility = 'visible';\n-\n-\t\tsetOpacity(this, opacity);\n-\t},\n-\n-\tget: (hasOpacity) ? function(){\n-\t\tvar opacity = this.style.opacity || this.getComputedStyle('opacity');\n-\t\treturn (opacity == '') ? 1 : opacity;\n-\t} : function(){\n-\t\tvar opacity, filter = (this.style.filter || this.getComputedStyle('filter'));\n-\t\tif (filter) opacity = filter.match(reAlpha);\n-\t\treturn (opacity == null || filter == null) ? 1 : (opacity[1] / 100);\n-\t}\n-\n-};\n+var setOpacity = (hasOpacity ? function(element, opacity){\n+\telement.style.opacity = opacity;\n+} : (hasFilter ? function(element, opacity){\n+\tif (!element.currentStyle || !element.currentStyle.hasLayout) element.style.zoom = 1;\n+\topacity = (opacity * 100).limit(0, 100).round();\n+\topacity = (opacity == 100) ? '' : 'alpha(opacity=' + opacity + ')';\n+\tvar filter = element.style.filter || element.getComputedStyle('filter') || '';\n+\telement.style.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n+} : setVisibility));\n+\n+var getOpacity = (hasOpacity ? function(element){\n+\tvar opacity = element.style.opacity || element.getComputedStyle('opacity');\n+\treturn (opacity == '') ? 1 : opacity.toFloat();\n+} : (hasFilter ? function(element){\n+\tvar filter = (element.style.filter || element.getComputedStyle('filter')),\n+\t\topacity;\n+\tif (filter) opacity = filter.match(reAlpha);\n+\treturn (opacity == null || filter == null) ? 1 : (opacity[1] / 100);\n+} : function(element){\n+\tvar opacity = element.retrieve('$opacity');",
        "path": "Source/Element/Element.Style.js",
        "position": 64,
        "original_position": 64,
        "commit_id": "322a1b2af7bf5a50b414bfc71db7ebcbaf42df4b",
        "original_commit_id": "49a2d8be9ee4d96ead66980f8731f1003cd9401a",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why store the value, did we do that before? If it doesn't support opacity nor filter, isn't the opacity either 1 or 0?\n",
        "created_at": "2011-08-17T09:01:22Z",
        "updated_at": "2011-08-17T09:03:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2027#discussion_r94425",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2027",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/94425"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2027#discussion_r94425"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2027"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/94427",
        "pull_request_review_id": null,
        "id": 94427,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0NDI3",
        "diff_hunk": "@@ -22,41 +22,39 @@ Element.Properties.styles = {set: function(styles){\n \tthis.setStyles(styles);\n }};\n \n-var hasOpacity = (html.style.opacity != null);\n-var reAlpha = /alpha\\(opacity=([\\d.]+)\\)/i;\n+var hasOpacity = (html.style.opacity != null),\n+\thasFilter = (html.style.filter != null),\n+\treAlpha = /alpha\\(opacity=([\\d.]+)\\)/i;\n \n-var setOpacity = function(element, opacity){\n-\tif (!element.currentStyle || !element.currentStyle.hasLayout) element.style.zoom = 1;\n-\tif (hasOpacity){\n-\t\telement.style.opacity = opacity;\n-\t} else {\n-\t\topacity = (opacity * 100).limit(0, 100).round();\n-\t\topacity = (opacity == 100) ? '' : 'alpha(opacity=' + opacity + ')';\n-\t\tvar filter = element.style.filter || element.getComputedStyle('filter') || '';\n-\t\telement.style.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n-\t}\n+var setVisibility = function(element, opacity){\n+\telement.store('$opacity', opacity);\n+\telement.style.visibility = opacity.limit(0, 1) ? 'visible' : 'hidden';\n };\n \n-Element.Properties.opacity = {\n-\n-\tset: function(opacity){\n-\t\tvar visibility = this.style.visibility;\n-\t\tif (opacity == 0 && visibility != 'hidden') this.style.visibility = 'hidden';\n-\t\telse if (opacity != 0 && visibility != 'visible') this.style.visibility = 'visible';\n-\n-\t\tsetOpacity(this, opacity);\n-\t},\n-\n-\tget: (hasOpacity) ? function(){\n-\t\tvar opacity = this.style.opacity || this.getComputedStyle('opacity');\n-\t\treturn (opacity == '') ? 1 : opacity;\n-\t} : function(){\n-\t\tvar opacity, filter = (this.style.filter || this.getComputedStyle('filter'));\n-\t\tif (filter) opacity = filter.match(reAlpha);\n-\t\treturn (opacity == null || filter == null) ? 1 : (opacity[1] / 100);\n-\t}\n-\n-};\n+var setOpacity = (hasOpacity ? function(element, opacity){\n+\telement.style.opacity = opacity;\n+} : (hasFilter ? function(element, opacity){\n+\tif (!element.currentStyle || !element.currentStyle.hasLayout) element.style.zoom = 1;\n+\topacity = (opacity * 100).limit(0, 100).round();\n+\topacity = (opacity == 100) ? '' : 'alpha(opacity=' + opacity + ')';\n+\tvar filter = element.style.filter || element.getComputedStyle('filter') || '';\n+\telement.style.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n+} : setVisibility));\n+\n+var getOpacity = (hasOpacity ? function(element){\n+\tvar opacity = element.style.opacity || element.getComputedStyle('opacity');\n+\treturn (opacity == '') ? 1 : opacity.toFloat();\n+} : (hasFilter ? function(element){\n+\tvar filter = (element.style.filter || element.getComputedStyle('filter')),\n+\t\topacity;\n+\tif (filter) opacity = filter.match(reAlpha);\n+\treturn (opacity == null || filter == null) ? 1 : (opacity[1] / 100);\n+} : function(element){\n+\tvar opacity = element.retrieve('$opacity');",
        "path": "Source/Element/Element.Style.js",
        "position": 64,
        "original_position": 64,
        "commit_id": "322a1b2af7bf5a50b414bfc71db7ebcbaf42df4b",
        "original_commit_id": "49a2d8be9ee4d96ead66980f8731f1003cd9401a",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure, it probably would have screwed with filters or something and eventually returned any value. I figured if you have an animation going on and opacity is one part of that, using this doesn't screw it up.\n",
        "created_at": "2011-08-17T09:03:03Z",
        "updated_at": "2011-08-17T09:03:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2027#discussion_r94427",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2027",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/94427"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2027#discussion_r94427"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2027"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/96352",
        "pull_request_review_id": null,
        "id": 96352,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2MzUy",
        "diff_hunk": "@@ -0,0 +1,115 @@\n+Type: Element {#Element}\n+========================\n+\n+Extends the [Element][] type to include delegations in the addEvent and addEvents methods.",
        "path": "Docs/Element/Element.Delegation.md",
        "position": 4,
        "original_position": 4,
        "commit_id": "7827483994883d0cd387ff274f7e9e96b1a1fd6b",
        "original_commit_id": "614c46883970db622120979d4a3ca44b4667f64a",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe we can explain what this does in one short paragraph. People new to the concept might not understand this.\n\n\"Extends [Element][] to include event-delegation in its event system. _What event delegation is in two short sentences_\"\n",
        "created_at": "2011-08-18T20:17:06Z",
        "updated_at": "2011-08-21T19:57:42Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2031#discussion_r96352",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2031",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/96352"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2031#discussion_r96352"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2031"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/96357",
        "pull_request_review_id": null,
        "id": 96357,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2MzU3",
        "diff_hunk": "@@ -0,0 +1,115 @@\n+Type: Element {#Element}\n+========================\n+\n+Extends the [Element][] type to include delegations in the addEvent and addEvents methods.\n+\n+### Demo:\n+\n+* [Element.Delegation](http://mootools.net/demos/?demo=Element.Delegation)\n+\n+### Notes:\n+\n+* By delegating events to parent objects you can dramatically increase the efficiency of your pages. Consider the example above. You could attach events to every link on a page - which may be hundreds of DOM elements - or you can delegate the event to the document body, evaluating your code only when the user actually clicks a link (instead of on page load/domready).\n+* You can use any selector in combination with any event\n+* Be wary of the cost of delegation; for example, mouseover/mouseout delegation on an entire document can cause your page to run the selector constantly as the user moves his or her mouse around the page. Delegation is not always the best solution.\n+* Delegation is especially useful if you are using AJAX to load content into your pages dynamically, as the contents of an element can change with new elements added or others removed and your delegated events need not change.",
        "path": "Docs/Element/Element.Delegation.md",
        "position": null,
        "original_position": 15,
        "commit_id": "7827483994883d0cd387ff274f7e9e96b1a1fd6b",
        "original_commit_id": "614c46883970db622120979d4a3ca44b4667f64a",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would move this to the top of the list as it is the most important thing for our users.\n\nIn addition, we could put these things into the main descriptions as a list of why delegation is awesome and get rid of the \"Notes\" sections for this.\n",
        "created_at": "2011-08-18T20:18:14Z",
        "updated_at": "2011-08-21T19:57:42Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2031#discussion_r96357",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2031",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/96357"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2031#discussion_r96357"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2031"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/96364",
        "pull_request_review_id": null,
        "id": 96364,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2MzY0",
        "diff_hunk": "@@ -0,0 +1,115 @@\n+Type: Element {#Element}\n+========================\n+\n+Extends the [Element][] type to include delegations in the addEvent and addEvents methods.\n+\n+### Demo:\n+\n+* [Element.Delegation](http://mootools.net/demos/?demo=Element.Delegation)\n+\n+### Notes:\n+\n+* By delegating events to parent objects you can dramatically increase the efficiency of your pages. Consider the example above. You could attach events to every link on a page - which may be hundreds of DOM elements - or you can delegate the event to the document body, evaluating your code only when the user actually clicks a link (instead of on page load/domready).\n+* You can use any selector in combination with any event\n+* Be wary of the cost of delegation; for example, mouseover/mouseout delegation on an entire document can cause your page to run the selector constantly as the user moves his or her mouse around the page. Delegation is not always the best solution.\n+* Delegation is especially useful if you are using AJAX to load content into your pages dynamically, as the contents of an element can change with new elements added or others removed and your delegated events need not change.",
        "path": "Docs/Element/Element.Delegation.md",
        "position": null,
        "original_position": 15,
        "commit_id": "7827483994883d0cd387ff274f7e9e96b1a1fd6b",
        "original_commit_id": "614c46883970db622120979d4a3ca44b4667f64a",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, agree that this _notes_ section feels a bit odd.\n",
        "created_at": "2011-08-18T20:19:59Z",
        "updated_at": "2011-08-21T19:57:42Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2031#discussion_r96364",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2031",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/96364"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2031#discussion_r96364"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2031"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/96402",
        "pull_request_review_id": null,
        "id": 96402,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2NDAy",
        "diff_hunk": "@@ -0,0 +1,115 @@\n+Type: Element {#Element}\n+========================\n+\n+Extends the [Element][] type to include delegations in the addEvent and addEvents methods.\n+\n+### Demo:\n+\n+* [Element.Delegation](http://mootools.net/demos/?demo=Element.Delegation)\n+\n+### Notes:\n+\n+* By delegating events to parent objects you can dramatically increase the efficiency of your pages. Consider the example above. You could attach events to every link on a page - which may be hundreds of DOM elements - or you can delegate the event to the document body, evaluating your code only when the user actually clicks a link (instead of on page load/domready).\n+* You can use any selector in combination with any event\n+* Be wary of the cost of delegation; for example, mouseover/mouseout delegation on an entire document can cause your page to run the selector constantly as the user moves his or her mouse around the page. Delegation is not always the best solution.\n+* Delegation is especially useful if you are using AJAX to load content into your pages dynamically, as the contents of an element can change with new elements added or others removed and your delegated events need not change.\n+* In general it is always better to delegate to the closest parent to your elements as possible; delegate to an element in the page rather than the document body for example.\n+\n+Element method: addEvent {#Element:addEvent}\n+--------------------------------------------\n+\n+Delegates the methods of an element's children to the parent element for greater efficiency when a filter is provided. Otherwise works normally as [addEvent][] always does.\n+\n+### Syntax:\n+\n+\tmyElement.addEvent(typeSelector, fn);\n+\n+### Arguments:\n+\n+2. typeSelector - (*string*) An event name (click, mouseover, etc) that should be monitored paired with a selector (see example) to limit functionality to child elements.\n+3. fn - (*function*) The callback to execute when the event occurs (passed the event just like any other [addEvent][] usage and a second argument, the element that matches your selector that was clicked).\n+\n+\n+### Example:\n+\n+\t// Alerts when an anchor element is clicked with class myStyle in myElement\n+\tdocument.id(myElement).addEvent('click:relay(a.myStyle)', function(){\n+\t\talert('hello');\n+\t});\n+\n+\n+\t$(element).addEvent('click:relay(a)', function(event, clicked){\n+\t\tevent.preventDefault(); //don't follow the link\n+\t\talert('you clicked a link!');\n+\t\t//you can reference the element clicked with the second\n+\t\t//argument passed to your callback\n+\t\tclicked.setStyle('color', '#777');\n+\t});\n+\n+### Returns:\n+\n+* *element* - This element.\n+\n+Element method: addEvents {#Element:addEvents}\n+----------------------------------------------\n+\n+Delegates the events to the parent just as with addEvent above. Works as [addEvents][] does.\n+\n+### Example:\n+\n+\tmyElement.addEvents({\n+\t\t//monitor an element for mouseover\n+\t\tmouseover: fn,\n+\t\t//but only monitor child links for click\n+\t\t'click:relay(a)': fn2\n+\t});\n+\n+\n+Element method: removeEvent {#Element:removeEvent}\n+--------------------------------------------------\n+\n+Removes a method from an element as [removeEvent][] always does.\n+\n+### Example:\n+\n+\tvar monitor = function(event, element){ alert('you clicked a link!')};\n+\t$(element).addEvent('click:relay(a)', monitor);\n+\t//link clicks are delegated to element\n+\n+\t//...now we remove the delegation:\n+\t$(element).removeEvent('click:relay(a)', monitor);\n+\n+\n+Element method: removeEvents {#Element:removeEvents}\n+---------------------------------------------------\n+\n+Removes a series of methods from delegation if the functions were used for delegation or else works as [removeEvents][] always does.\n+\n+### Example:\n+\n+\tvar monitor = function(){\n+\t\talert('you clicked or moused over a link!');\n+\t};\n+\n+\t$(element).addEvents({\n+\t\t'mouseover:relay(a)': monitor,\n+\t\t'click:relay(a)': monitor\n+\t});\n+\n+\t// link clicks are delegated to element\n+\t// ...now we remove the delegation:\n+\t$(element).removeEvents({\n+\t\t'mouseover:relay(a)': monitor,\n+\t\t'click:relay(a)': monitor\n+\t});\n+\n+\t//or we could remove all click:relay(a) events",
        "path": "Docs/Element/Element.Delegation.md",
        "position": null,
        "original_position": 106,
        "commit_id": "7827483994883d0cd387ff274f7e9e96b1a1fd6b",
        "original_commit_id": "614c46883970db622120979d4a3ca44b4667f64a",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "English is not my native language, but what is it with \"could\" in the whole file? Just get rid of the \"could\". In this case just say // remove all click:relay(a) events and done :)\n",
        "created_at": "2011-08-18T20:42:45Z",
        "updated_at": "2011-08-21T19:57:42Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2031#discussion_r96402",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2031",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/96402"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2031#discussion_r96402"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2031"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/96404",
        "pull_request_review_id": null,
        "id": 96404,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2NDA0",
        "diff_hunk": "@@ -0,0 +1,115 @@\n+Type: Element {#Element}\n+========================\n+\n+Extends the [Element][] type to include delegations in the addEvent and addEvents methods.\n+\n+### Demo:\n+\n+* [Element.Delegation](http://mootools.net/demos/?demo=Element.Delegation)\n+\n+### Notes:\n+\n+* By delegating events to parent objects you can dramatically increase the efficiency of your pages. Consider the example above. You could attach events to every link on a page - which may be hundreds of DOM elements - or you can delegate the event to the document body, evaluating your code only when the user actually clicks a link (instead of on page load/domready).\n+* You can use any selector in combination with any event\n+* Be wary of the cost of delegation; for example, mouseover/mouseout delegation on an entire document can cause your page to run the selector constantly as the user moves his or her mouse around the page. Delegation is not always the best solution.\n+* Delegation is especially useful if you are using AJAX to load content into your pages dynamically, as the contents of an element can change with new elements added or others removed and your delegated events need not change.\n+* In general it is always better to delegate to the closest parent to your elements as possible; delegate to an element in the page rather than the document body for example.\n+\n+Element method: addEvent {#Element:addEvent}\n+--------------------------------------------\n+\n+Delegates the methods of an element's children to the parent element for greater efficiency when a filter is provided. Otherwise works normally as [addEvent][] always does.\n+\n+### Syntax:\n+\n+\tmyElement.addEvent(typeSelector, fn);\n+\n+### Arguments:\n+\n+2. typeSelector - (*string*) An event name (click, mouseover, etc) that should be monitored paired with a selector (see example) to limit functionality to child elements.",
        "path": "Docs/Element/Element.Delegation.md",
        "position": 50,
        "original_position": 29,
        "commit_id": "7827483994883d0cd387ff274f7e9e96b1a1fd6b",
        "original_commit_id": "614c46883970db622120979d4a3ca44b4667f64a",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If I want to know how to use delegation I need to read until the first example of addEvent. typeSelector refers me to the example. Can we have a really simple example on top (right after the introduction section I mentioned above) that just shows how to use XHR with it?\n\n```\nelement.addEvent('click:relay(a)', function(){\n  new Request({url: this.href}).send();\n});\n```\n\nThat is probably the biggest use case for most users. Just put it in their face on top of the doc file. This is how you do it. Boom.\n",
        "created_at": "2011-08-18T20:45:33Z",
        "updated_at": "2011-08-21T19:57:42Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2031#discussion_r96404",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2031",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/96404"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2031#discussion_r96404"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2031"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99742",
        "pull_request_review_id": null,
        "id": 99742,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzQy",
        "diff_hunk": "@@ -16,27 +16,40 @@ provides: [Element.Delegation]\n \n (function(){\n \n-var eventListenerSupport = !(window.attachEvent && !window.addEventListener),\n-\tnativeEvents = Element.NativeEvents;\n+var eventListenerSupport = !!window.addEventListener;\n \n-nativeEvents.focusin = 2;\n-nativeEvents.focusout = 2;\n+Element.NativeEvents.focusin = 2;\n+Element.NativeEvents.focusout = 2;\n \n var bubbleUp = function(self, match, fn, event){\n-\tfor (var target = event.target; target && target != self;){\n-\t\tif (target && match(target, event)){",
        "path": "Source/Element/Element.Delegation.js",
        "position": null,
        "original_position": 15,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this check for \"target\" seems unnecessary because it can't enter the loop if target is null.\n",
        "created_at": "2011-08-23T08:09:38Z",
        "updated_at": "2011-08-23T18:26:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99742",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99742"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99742"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99743",
        "pull_request_review_id": null,
        "id": 99743,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzQz",
        "diff_hunk": "@@ -16,27 +16,40 @@ provides: [Element.Delegation]\n \n (function(){\n \n-var eventListenerSupport = !(window.attachEvent && !window.addEventListener),\n-\tnativeEvents = Element.NativeEvents;\n+var eventListenerSupport = !!window.addEventListener;",
        "path": "Source/Element/Element.Delegation.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This should be fine. We want this for browsers without addEventListener which essentially is IE6-8\n",
        "created_at": "2011-08-23T08:10:01Z",
        "updated_at": "2011-08-23T18:26:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99743",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99743"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99743"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99744",
        "pull_request_review_id": null,
        "id": 99744,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzQ0",
        "diff_hunk": "@@ -167,13 +162,11 @@ var delegation = {\n \t\t\tdelegator: delegator\n \t\t};\n \t\tstorage[_type] = stored;\n-\n-\t\tthis.store('delegates', storage);",
        "path": "Source/Element/Element.Delegation.js",
        "position": 120,
        "original_position": 121,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I was thinking we don't need to store the value here any more as we are working with an object reference anyway.\n",
        "created_at": "2011-08-23T08:10:28Z",
        "updated_at": "2011-08-23T18:26:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99744",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99744"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99744"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99745",
        "pull_request_review_id": null,
        "id": 99745,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzQ1",
        "diff_hunk": "@@ -182,7 +175,6 @@ var delegation = {\n \t\t\tif (_map.remove) _map.remove(this, _uid);\n \t\t\tdelete stored[_uid];\n \t\t\tstorage[_type] = stored;\n-\t\t\tthis.store('delegates', storage);",
        "path": "Source/Element/Element.Delegation.js",
        "position": 134,
        "original_position": 135,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Same here regarding storage.\n",
        "created_at": "2011-08-23T08:10:36Z",
        "updated_at": "2011-08-23T18:26:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99745",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99745"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99745"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99761",
        "pull_request_review_id": null,
        "id": 99761,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzYx",
        "diff_hunk": "@@ -16,27 +16,40 @@ provides: [Element.Delegation]\n \n (function(){\n \n-var eventListenerSupport = !(window.attachEvent && !window.addEventListener),\n-\tnativeEvents = Element.NativeEvents;\n+var eventListenerSupport = !!window.addEventListener;\n \n-nativeEvents.focusin = 2;\n-nativeEvents.focusout = 2;\n+Element.NativeEvents.focusin = 2;\n+Element.NativeEvents.focusout = 2;\n \n var bubbleUp = function(self, match, fn, event){\n-\tfor (var target = event.target; target && target != self;){\n-\t\tif (target && match(target, event)){\n-\t\t\tfn.call(target, event, target);\n-\t\t\tbreak;\n-\t\t}\n+\tvar target = event.target;\n+\twhile (target && target != self){\n+\t\tif (match(target, event)) return fn.call(target, event, target);",
        "path": "Source/Element/Element.Delegation.js",
        "position": 20,
        "original_position": 21,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "regarding the `this == target` thing: it always has been like this, however I would prefer:\n\n``` javascript\nelement.addEvent('click:relay(a)', function(event, clicked){\n     this == element;\n});\n```\n\nInitially I had it like that (https://github.com/mootools/mootools-core/commit/cc860c55e1) but that could break some backward compatibility. \nHowever we could choose to break it and do it right.\n",
        "created_at": "2011-08-23T08:53:03Z",
        "updated_at": "2011-08-23T18:26:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99761",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99761"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99761"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99763",
        "pull_request_review_id": null,
        "id": 99763,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzYz",
        "diff_hunk": "@@ -167,13 +162,11 @@ var delegation = {\n \t\t\tdelegator: delegator\n \t\t};\n \t\tstorage[_type] = stored;\n-\n-\t\tthis.store('delegates', storage);",
        "path": "Source/Element/Element.Delegation.js",
        "position": 120,
        "original_position": 121,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see (https://github.com/mootools/mootools-core/blob/master/Source/Element/Element.js#L802) very nice.\n",
        "created_at": "2011-08-23T08:55:04Z",
        "updated_at": "2011-08-23T18:26:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99763",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99763"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99763"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99764",
        "pull_request_review_id": null,
        "id": 99764,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzY0",
        "diff_hunk": "@@ -16,27 +16,40 @@ provides: [Element.Delegation]\n \n (function(){\n \n-var eventListenerSupport = !(window.attachEvent && !window.addEventListener),\n-\tnativeEvents = Element.NativeEvents;\n+var eventListenerSupport = !!window.addEventListener;\n \n-nativeEvents.focusin = 2;\n-nativeEvents.focusout = 2;\n+Element.NativeEvents.focusin = 2;\n+Element.NativeEvents.focusout = 2;",
        "path": "Source/Element/Element.Delegation.js",
        "position": null,
        "original_position": 11,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "hehe, I believe you were the one who told me to use `var nativeEvents; nativeEvents.focusin = 2; ...` :D\n",
        "created_at": "2011-08-23T08:57:23Z",
        "updated_at": "2011-08-23T18:26:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99764",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/99764"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r99764"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100182",
        "pull_request_review_id": null,
        "id": 100182,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDE4Mg==",
        "diff_hunk": "@@ -16,27 +16,40 @@ provides: [Element.Delegation]\n \n (function(){\n \n-var eventListenerSupport = !(window.attachEvent && !window.addEventListener),\n-\tnativeEvents = Element.NativeEvents;\n+var eventListenerSupport = !!window.addEventListener;\n \n-nativeEvents.focusin = 2;\n-nativeEvents.focusout = 2;\n+Element.NativeEvents.focusin = 2;\n+Element.NativeEvents.focusout = 2;",
        "path": "Source/Element/Element.Delegation.js",
        "position": null,
        "original_position": 11,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "me #fail :D\n",
        "created_at": "2011-08-23T17:14:32Z",
        "updated_at": "2011-08-23T18:26:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100182",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100182"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100182"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100183",
        "pull_request_review_id": null,
        "id": 100183,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDE4Mw==",
        "diff_hunk": "@@ -16,27 +16,40 @@ provides: [Element.Delegation]\n \n (function(){\n \n-var eventListenerSupport = !(window.attachEvent && !window.addEventListener),\n-\tnativeEvents = Element.NativeEvents;\n+var eventListenerSupport = !!window.addEventListener;\n \n-nativeEvents.focusin = 2;\n-nativeEvents.focusout = 2;\n+Element.NativeEvents.focusin = 2;\n+Element.NativeEvents.focusout = 2;\n \n var bubbleUp = function(self, match, fn, event){\n-\tfor (var target = event.target; target && target != self;){\n-\t\tif (target && match(target, event)){\n-\t\t\tfn.call(target, event, target);\n-\t\t\tbreak;\n-\t\t}\n+\tvar target = event.target;\n+\twhile (target && target != self){\n+\t\tif (match(target, event)) return fn.call(target, event, target);",
        "path": "Source/Element/Element.Delegation.js",
        "position": 20,
        "original_position": 21,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So I think now is the time if we ever want to fix this. I am open to breaking this and have this breaking change. It is reasonable from 1.3 More to 1.4 Core to break one single thing that has an easy fix.\n\nHaving both this and the second argument refer to the same element don't make any sense. We must resolve this before the 1.4.0 release.\n\n@ibolmo what is your opinion? this should refer to the original element.\n",
        "created_at": "2011-08-23T17:17:17Z",
        "updated_at": "2011-08-23T18:26:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100183",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100183"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100183"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100191",
        "pull_request_review_id": null,
        "id": 100191,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDE5MQ==",
        "diff_hunk": "@@ -16,27 +16,40 @@ provides: [Element.Delegation]\n \n (function(){\n \n-var eventListenerSupport = !(window.attachEvent && !window.addEventListener),\n-\tnativeEvents = Element.NativeEvents;\n+var eventListenerSupport = !!window.addEventListener;\n \n-nativeEvents.focusin = 2;\n-nativeEvents.focusout = 2;\n+Element.NativeEvents.focusin = 2;\n+Element.NativeEvents.focusout = 2;\n \n var bubbleUp = function(self, match, fn, event){\n-\tfor (var target = event.target; target && target != self;){\n-\t\tif (target && match(target, event)){\n-\t\t\tfn.call(target, event, target);\n-\t\t\tbreak;\n-\t\t}\n+\tvar target = event.target;\n+\twhile (target && target != self){\n+\t\tif (match(target, event)) return fn.call(target, event, target);",
        "path": "Source/Element/Element.Delegation.js",
        "position": 20,
        "original_position": 21,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If I understood. Then I'd say: `event.target == a` and `this == observer` using this example: `observer.addEvent('click:relay(a)', ...);`\n",
        "created_at": "2011-08-23T17:27:04Z",
        "updated_at": "2011-08-23T18:26:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100191",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100191"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100191"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100192",
        "pull_request_review_id": null,
        "id": 100192,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDE5Mg==",
        "diff_hunk": "@@ -16,27 +16,40 @@ provides: [Element.Delegation]\n \n (function(){\n \n-var eventListenerSupport = !(window.attachEvent && !window.addEventListener),\n-\tnativeEvents = Element.NativeEvents;\n+var eventListenerSupport = !!window.addEventListener;\n \n-nativeEvents.focusin = 2;\n-nativeEvents.focusout = 2;\n+Element.NativeEvents.focusin = 2;\n+Element.NativeEvents.focusout = 2;",
        "path": "Source/Element/Element.Delegation.js",
        "position": null,
        "original_position": 11,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`Element.NativeEvents.focusin = Element.NativeEVents.focusout = 2;`\n\n`Object.append(Element.NativeEvents, {focusin: 2, focusout: 2}`\n",
        "created_at": "2011-08-23T17:29:38Z",
        "updated_at": "2011-08-23T18:26:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100192",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100192"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100192"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100229",
        "pull_request_review_id": null,
        "id": 100229,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDIyOQ==",
        "diff_hunk": "@@ -16,27 +16,40 @@ provides: [Element.Delegation]\n \n (function(){\n \n-var eventListenerSupport = !(window.attachEvent && !window.addEventListener),\n-\tnativeEvents = Element.NativeEvents;\n+var eventListenerSupport = !!window.addEventListener;\n \n-nativeEvents.focusin = 2;\n-nativeEvents.focusout = 2;\n+Element.NativeEvents.focusin = 2;\n+Element.NativeEvents.focusout = 2;",
        "path": "Source/Element/Element.Delegation.js",
        "position": null,
        "original_position": 11,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I like your first suggestion. Without the typo of course.\n",
        "created_at": "2011-08-23T18:07:19Z",
        "updated_at": "2011-08-23T18:26:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100229",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100229"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100229"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100245",
        "pull_request_review_id": null,
        "id": 100245,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDI0NQ==",
        "diff_hunk": "@@ -16,27 +16,40 @@ provides: [Element.Delegation]\n \n (function(){\n \n-var eventListenerSupport = !(window.attachEvent && !window.addEventListener),\n-\tnativeEvents = Element.NativeEvents;\n+var eventListenerSupport = !!window.addEventListener;\n \n-nativeEvents.focusin = 2;\n-nativeEvents.focusout = 2;\n+Element.NativeEvents.focusin = 2;\n+Element.NativeEvents.focusout = 2;\n \n var bubbleUp = function(self, match, fn, event){\n-\tfor (var target = event.target; target && target != self;){\n-\t\tif (target && match(target, event)){\n-\t\t\tfn.call(target, event, target);\n-\t\t\tbreak;\n-\t\t}\n+\tvar target = event.target;\n+\twhile (target && target != self){\n+\t\tif (match(target, event)) return fn.call(target, event, target);",
        "path": "Source/Element/Element.Delegation.js",
        "position": 20,
        "original_position": 21,
        "commit_id": "744f346a7d665243b7dc55e2dd23200089f74f4f",
        "original_commit_id": "f8465571ee2f11c6dbd3e84081cd4d11516ced3f",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree. As said, we should break this now. This is the one chance we have at this.\n",
        "created_at": "2011-08-23T18:22:11Z",
        "updated_at": "2011-08-23T18:26:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100245",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2040",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100245"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2040#discussion_r100245"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2040"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100596",
        "pull_request_review_id": null,
        "id": 100596,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDU5Ng==",
        "diff_hunk": "@@ -96,7 +97,9 @@ var Request = this.Request = new Class({\n \t},\n \n \tsuccess: function(text, xml){\n-\t\tthis.onSuccess(this.processScripts(text), xml);\n+\t\tif(this.options.processScripts)",
        "path": "Source/Request/Request.js",
        "position": 13,
        "original_position": 13,
        "commit_id": "b17168a765bd77c57fcd66e95339a68c9d579829",
        "original_commit_id": "b17168a765bd77c57fcd66e95339a68c9d579829",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` javascript\nif (this.options.processScripts) text = this.processScripts(text);\n```\n",
        "created_at": "2011-08-23T21:41:53Z",
        "updated_at": "2011-08-23T21:41:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2045#discussion_r100596",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2045",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/100596"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2045#discussion_r100596"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2045"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/103093",
        "pull_request_review_id": null,
        "id": 103093,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMzA5Mw==",
        "diff_hunk": "@@ -166,6 +166,21 @@ Element.Events = {\n \n };\n \n+/*<ltIE9>*/\n+if (!window.addEventListener){\n+\tElement.NativeEvents.propertychange = 2;\n+\tElement.Events.change = {\n+\t\tbase: function(){\n+\t\t\tvar type = this.type;\n+\t\t\treturn (this.get('tag') == 'input' && (type == 'radio' || type == 'checkbox')) ? 'propertychange' : 'change'\n+\t\t},\n+\t\tcondition: function(event){\n+\t\t\treturn (this.type == 'radio' && !this.checked) ? false : true;",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 13,
        "commit_id": "f429dae56671c31bf583f01d466fef1fbc228ef5",
        "original_commit_id": "f46f8795ba9085d47c4ca683370628fad4b88acd",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "return !!(this.type != 'radio' || this.checked);\n",
        "created_at": "2011-08-25T20:38:44Z",
        "updated_at": "2011-08-25T20:48:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2048#discussion_r103093",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2048",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/103093"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2048#discussion_r103093"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2048"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/103201",
        "pull_request_review_id": null,
        "id": 103201,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMzIwMQ==",
        "diff_hunk": "@@ -166,6 +166,21 @@ Element.Events = {\n \n };\n \n+/*<ltIE9>*/\n+if (!window.addEventListener){\n+\tElement.NativeEvents.propertychange = 2;\n+\tElement.Events.change = {\n+\t\tbase: function(){\n+\t\t\tvar type = this.type;\n+\t\t\treturn (this.get('tag') == 'input' && (type == 'radio' || type == 'checkbox')) ? 'propertychange' : 'change'\n+\t\t},\n+\t\tcondition: function(event){\n+\t\t\treturn (this.type == 'radio' && !this.checked) ? false : true;",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 13,
        "commit_id": "f429dae56671c31bf583f01d466fef1fbc228ef5",
        "original_commit_id": "f46f8795ba9085d47c4ca683370628fad4b88acd",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`return this.type != 'radio' || !!this.checked;`\n",
        "created_at": "2011-08-25T21:45:30Z",
        "updated_at": "2011-08-25T21:45:30Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2048#discussion_r103201",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2048",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/103201"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2048#discussion_r103201"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2048"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/103219",
        "pull_request_review_id": null,
        "id": 103219,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMzIxOQ==",
        "diff_hunk": "@@ -166,6 +166,21 @@ Element.Events = {\n \n };\n \n+/*<ltIE9>*/\n+if (!window.addEventListener){\n+\tElement.NativeEvents.propertychange = 2;\n+\tElement.Events.change = {\n+\t\tbase: function(){\n+\t\t\tvar type = this.type;\n+\t\t\treturn (this.get('tag') == 'input' && (type == 'radio' || type == 'checkbox')) ? 'propertychange' : 'change'\n+\t\t},\n+\t\tcondition: function(event){\n+\t\t\treturn (this.type == 'radio' && !this.checked) ? false : true;",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 13,
        "commit_id": "f429dae56671c31bf583f01d466fef1fbc228ef5",
        "original_commit_id": "f46f8795ba9085d47c4ca683370628fad4b88acd",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Haha yeah I only realized that later too and didn't bother to bitch about it again :)\n",
        "created_at": "2011-08-25T21:54:36Z",
        "updated_at": "2011-08-25T21:54:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2048#discussion_r103219",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2048",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/103219"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2048#discussion_r103219"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2048"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/104645",
        "pull_request_review_id": null,
        "id": 104645,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDY0NQ==",
        "diff_hunk": "@@ -915,16 +915,28 @@ var testForm = document.createElement('form');\n testForm.innerHTML = '<select><option>s</option></select>';\n \n if (testForm.firstChild.value != 's') Element.Properties.value = {\n+\n+\tset: function(value){\n+\t\tvar tag = this.get('tag');\n+\t\tif (tag != 'select') return this.setProperty('value', value);\n+\t\tvar options = this.getElements('option');\n+\t\tfor (var i = 0, l = options.length; i < l; i++){\n+\t\t\tvar option = options[i], attr = option.getAttributeNode('value');\n+\t\t\tif (((attr && attr.specified) ? option.value : option.get('text')) == value) return option.selected = true;\n+\t\t}\n+\t},\n+\n \tget: function(){\n \t\tvar option = this, tag = option.get('tag');\n \n \t\tif (tag != 'select' && tag != 'option') return this.getProperty('value');\n \n-\t\tif (tag == 'select') if (!(option = option.getSelected()[0])) return '';",
        "path": "Source/Element/Element.js",
        "position": 22,
        "original_position": 20,
        "commit_id": "a0a147018853d26a1aecce9bc2c10b6a3bd50b92",
        "original_commit_id": "f0a44de8420d2423d6b13300dfbf692bbfb972e1",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "HAHA nice one. :D\n",
        "created_at": "2011-08-27T22:56:22Z",
        "updated_at": "2011-08-27T23:11:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2049#discussion_r104645",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2049",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/104645"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2049#discussion_r104645"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2049"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/104646",
        "pull_request_review_id": null,
        "id": 104646,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDY0Ng==",
        "diff_hunk": "@@ -915,16 +915,28 @@ var testForm = document.createElement('form');\n testForm.innerHTML = '<select><option>s</option></select>';\n \n if (testForm.firstChild.value != 's') Element.Properties.value = {\n+\n+\tset: function(value){\n+\t\tvar tag = this.get('tag');\n+\t\tif (tag != 'select') return this.setProperty('value', value);\n+\t\tvar options = this.getElements('option');\n+\t\tfor (var i = 0, l = options.length; i < l; i++){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 9,
        "commit_id": "a0a147018853d26a1aecce9bc2c10b6a3bd50b92",
        "original_commit_id": "f0a44de8420d2423d6b13300dfbf692bbfb972e1",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please don't cache length, this is so 2008.\n",
        "created_at": "2011-08-27T22:56:59Z",
        "updated_at": "2011-08-27T23:11:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2049#discussion_r104646",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2049",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/104646"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2049#discussion_r104646"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2049"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/104647",
        "pull_request_review_id": null,
        "id": 104647,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDY0Nw==",
        "diff_hunk": "@@ -915,16 +915,28 @@ var testForm = document.createElement('form');\n testForm.innerHTML = '<select><option>s</option></select>';\n \n if (testForm.firstChild.value != 's') Element.Properties.value = {\n+\n+\tset: function(value){\n+\t\tvar tag = this.get('tag');\n+\t\tif (tag != 'select') return this.setProperty('value', value);\n+\t\tvar options = this.getElements('option');\n+\t\tfor (var i = 0, l = options.length; i < l; i++){\n+\t\t\tvar option = options[i], attr = option.getAttributeNode('value');\n+\t\t\tif (((attr && attr.specified) ? option.value : option.get('text')) == value) return option.selected = true;",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 11,
        "commit_id": "a0a147018853d26a1aecce9bc2c10b6a3bd50b92",
        "original_commit_id": "f0a44de8420d2423d6b13300dfbf692bbfb972e1",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It is kinda clowny to put a ternary into an if. What about 3 variables and assigning their value in three separate lines? :D\n",
        "created_at": "2011-08-27T22:57:53Z",
        "updated_at": "2011-08-27T23:11:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2049#discussion_r104647",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2049",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/104647"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2049#discussion_r104647"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2049"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/104648",
        "pull_request_review_id": null,
        "id": 104648,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDY0OA==",
        "diff_hunk": "@@ -915,16 +915,28 @@ var testForm = document.createElement('form');\n testForm.innerHTML = '<select><option>s</option></select>';\n \n if (testForm.firstChild.value != 's') Element.Properties.value = {\n+\n+\tset: function(value){\n+\t\tvar tag = this.get('tag');\n+\t\tif (tag != 'select') return this.setProperty('value', value);\n+\t\tvar options = this.getElements('option');\n+\t\tfor (var i = 0, l = options.length; i < l; i++){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 9,
        "commit_id": "a0a147018853d26a1aecce9bc2c10b6a3bd50b92",
        "original_commit_id": "f0a44de8420d2423d6b13300dfbf692bbfb972e1",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "pff\n",
        "created_at": "2011-08-27T22:58:51Z",
        "updated_at": "2011-08-27T23:11:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2049#discussion_r104648",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2049",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/104648"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2049#discussion_r104648"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2049"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/104649",
        "pull_request_review_id": null,
        "id": 104649,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDY0OQ==",
        "diff_hunk": "@@ -915,16 +915,28 @@ var testForm = document.createElement('form');\n testForm.innerHTML = '<select><option>s</option></select>';\n \n if (testForm.firstChild.value != 's') Element.Properties.value = {\n+\n+\tset: function(value){\n+\t\tvar tag = this.get('tag');\n+\t\tif (tag != 'select') return this.setProperty('value', value);\n+\t\tvar options = this.getElements('option');\n+\t\tfor (var i = 0, l = options.length; i < l; i++){\n+\t\t\tvar option = options[i], attr = option.getAttributeNode('value');\n+\t\t\tif (((attr && attr.specified) ? option.value : option.get('text')) == value) return option.selected = true;\n+\t\t}\n+\t},\n+\n \tget: function(){\n \t\tvar option = this, tag = option.get('tag');\n \n \t\tif (tag != 'select' && tag != 'option') return this.getProperty('value');\n \n-\t\tif (tag == 'select') if (!(option = option.getSelected()[0])) return '';",
        "path": "Source/Element/Element.js",
        "position": 22,
        "original_position": 20,
        "commit_id": "a0a147018853d26a1aecce9bc2c10b6a3bd50b92",
        "original_commit_id": "f0a44de8420d2423d6b13300dfbf692bbfb972e1",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "blame @ibolmo ;)\n",
        "created_at": "2011-08-27T22:59:09Z",
        "updated_at": "2011-08-27T23:11:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2049#discussion_r104649",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2049",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/104649"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2049#discussion_r104649"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2049"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/109823",
        "pull_request_review_id": null,
        "id": 109823,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTgyMw==",
        "diff_hunk": "@@ -0,0 +1,167 @@\n+/*\n+---\n+name: Fx.CSS3\n+script: Fx.CSS3.js\n+license: MIT-style license.\n+description: Provides the base functionality of the CSS3 Fx classes\n+copyright: Copyright (c) 2010, Dipl.-Ing. (FH) Andr\u00e9 Fiedler <kontakt at visualdrugs dot net>, based on code by eskimoblood (mootools users group)\n+copyright: Copyright (c) 2011 Fred Cox mcfedr@gmail.com\n+authors: [Fred Cox, Andr\u00e9 Fiedler, eskimoblood]\n+\n+requires: [Core/Class.Extras, Core/Element.Event, Core/Element.Style, Core/Fx]\n+\n+provides: [Fx.CSS3Funcs]\n+...\n+*/\n+\n+(function() {\n+\n+\tElement.NativeEvents.transitionend = 2;\n+\tElement.NativeEvents.webkitTransitionEnd = 2;\n+\tElement.NativeEvents.oTransitionEnd = 2;\n+\tElement.NativeEvents.msTransitionEnd = 2;\n+\n+\tElement.Events.transitionend = {\n+\t\tbase: Browser.safari || Browser.chrome ? 'webkitTransitionEnd' : (Browser.opera ? 'oTransitionEnd' : (Browser.ie && Browser.version > 8 ? 'msTransitionEnd' : 'transitionend'))",
        "path": "Source/Fx/Fx.CSS3.js",
        "position": 25,
        "original_position": 25,
        "commit_id": "009d4fe42a266c44f7f0c08cf9eee96dcc237556",
        "original_commit_id": "009d4fe42a266c44f7f0c08cf9eee96dcc237556",
        "user": {
            "login": "realityking",
            "id": 628508,
            "node_id": "MDQ6VXNlcjYyODUwOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/628508?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/realityking",
            "html_url": "https://github.com/realityking",
            "followers_url": "https://api.github.com/users/realityking/followers",
            "following_url": "https://api.github.com/users/realityking/following{/other_user}",
            "gists_url": "https://api.github.com/users/realityking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/realityking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/realityking/subscriptions",
            "organizations_url": "https://api.github.com/users/realityking/orgs",
            "repos_url": "https://api.github.com/users/realityking/repos",
            "events_url": "https://api.github.com/users/realityking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/realityking/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Internet Explorer 9 doesn't support CSS3 Transitions, 10 most likely will.\n\nAlso I wouldn't fall back to the non-prefixed version. To my knowledge both Webkit and Mozilla discourage that to keep room for API changes for the non-prefixed version. A library as widely deployed as MooTools could set the API in stone which is not desirable.\n",
        "created_at": "2011-09-01T12:29:36Z",
        "updated_at": "2011-09-01T12:29:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2053#discussion_r109823",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2053",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/109823"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2053#discussion_r109823"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2053"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/109860",
        "pull_request_review_id": null,
        "id": 109860,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTg2MA==",
        "diff_hunk": "@@ -0,0 +1,167 @@\n+/*\n+---\n+name: Fx.CSS3\n+script: Fx.CSS3.js\n+license: MIT-style license.\n+description: Provides the base functionality of the CSS3 Fx classes\n+copyright: Copyright (c) 2010, Dipl.-Ing. (FH) Andr\u00e9 Fiedler <kontakt at visualdrugs dot net>, based on code by eskimoblood (mootools users group)\n+copyright: Copyright (c) 2011 Fred Cox mcfedr@gmail.com\n+authors: [Fred Cox, Andr\u00e9 Fiedler, eskimoblood]\n+\n+requires: [Core/Class.Extras, Core/Element.Event, Core/Element.Style, Core/Fx]\n+\n+provides: [Fx.CSS3Funcs]\n+...\n+*/\n+\n+(function() {\n+\n+\tElement.NativeEvents.transitionend = 2;\n+\tElement.NativeEvents.webkitTransitionEnd = 2;\n+\tElement.NativeEvents.oTransitionEnd = 2;\n+\tElement.NativeEvents.msTransitionEnd = 2;\n+\n+\tElement.Events.transitionend = {\n+\t\tbase: Browser.safari || Browser.chrome ? 'webkitTransitionEnd' : (Browser.opera ? 'oTransitionEnd' : (Browser.ie && Browser.version > 8 ? 'msTransitionEnd' : 'transitionend'))",
        "path": "Source/Fx/Fx.CSS3.js",
        "position": 25,
        "original_position": 25,
        "commit_id": "009d4fe42a266c44f7f0c08cf9eee96dcc237556",
        "original_commit_id": "009d4fe42a266c44f7f0c08cf9eee96dcc237556",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This could be done with feature detection indeed...\nThis is a snippet that I used once:\n\n``` js\n\nvar Features = (function(){\n\n    var hasTransition = (function(){\n        var prefixes = ['ms', 'O', 'Moz', 'webkit', ''],\n            style = document.documentElement.style;\n        for (var l = prefixes.length; l--;){\n            var prefix = prefixes[l];\n            if (typeof style[(prefix ? prefix + 'T' : '') + 'ransition'] != 'undefined') return prefix;\n        }\n        return false;\n    })();\n\n    var events = {\n        '': 'transitionend',\n        'webkit': 'webkitTransitionEnd',\n        'O': 'OTransitionEnd'\n    };\n    events.Moz = events.ms = events[''];\n\n    return {\n        transition: hasTransition != false,\n        transitionEnd: hasTransition != false ? events[hasTransition] : null\n    };\n\n})();\n```\n",
        "created_at": "2011-09-01T13:07:36Z",
        "updated_at": "2011-09-01T13:07:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2053#discussion_r109860",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2053",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/109860"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2053#discussion_r109860"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2053"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/109865",
        "pull_request_review_id": null,
        "id": 109865,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTg2NQ==",
        "diff_hunk": "@@ -0,0 +1,167 @@\n+/*\n+---\n+name: Fx.CSS3\n+script: Fx.CSS3.js\n+license: MIT-style license.\n+description: Provides the base functionality of the CSS3 Fx classes\n+copyright: Copyright (c) 2010, Dipl.-Ing. (FH) Andr\u00e9 Fiedler <kontakt at visualdrugs dot net>, based on code by eskimoblood (mootools users group)\n+copyright: Copyright (c) 2011 Fred Cox mcfedr@gmail.com\n+authors: [Fred Cox, Andr\u00e9 Fiedler, eskimoblood]\n+\n+requires: [Core/Class.Extras, Core/Element.Event, Core/Element.Style, Core/Fx]\n+\n+provides: [Fx.CSS3Funcs]\n+...\n+*/\n+\n+(function() {\n+\n+\tElement.NativeEvents.transitionend = 2;\n+\tElement.NativeEvents.webkitTransitionEnd = 2;\n+\tElement.NativeEvents.oTransitionEnd = 2;\n+\tElement.NativeEvents.msTransitionEnd = 2;\n+\n+\tElement.Events.transitionend = {\n+\t\tbase: Browser.safari || Browser.chrome ? 'webkitTransitionEnd' : (Browser.opera ? 'oTransitionEnd' : (Browser.ie && Browser.version > 8 ? 'msTransitionEnd' : 'transitionend'))",
        "path": "Source/Fx/Fx.CSS3.js",
        "position": 25,
        "original_position": 25,
        "commit_id": "009d4fe42a266c44f7f0c08cf9eee96dcc237556",
        "original_commit_id": "009d4fe42a266c44f7f0c08cf9eee96dcc237556",
        "user": {
            "login": "realityking",
            "id": 628508,
            "node_id": "MDQ6VXNlcjYyODUwOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/628508?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/realityking",
            "html_url": "https://github.com/realityking",
            "followers_url": "https://api.github.com/users/realityking/followers",
            "following_url": "https://api.github.com/users/realityking/following{/other_user}",
            "gists_url": "https://api.github.com/users/realityking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/realityking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/realityking/subscriptions",
            "organizations_url": "https://api.github.com/users/realityking/orgs",
            "repos_url": "https://api.github.com/users/realityking/repos",
            "events_url": "https://api.github.com/users/realityking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/realityking/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "True, but that wasn't the point I was trying to make. MooTools should not assume that unprefixed transition property and the unprefixed transition end event behave the same as the current prefixed implementations. That is the whole point of vendor prefixes.\n",
        "created_at": "2011-09-01T13:16:00Z",
        "updated_at": "2011-09-01T13:16:00Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2053#discussion_r109865",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2053",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/109865"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2053#discussion_r109865"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2053"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/108144",
        "pull_request_review_id": null,
        "id": 108144,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODE0NA==",
        "diff_hunk": "@@ -0,0 +1,127 @@\n+/*\n+---\n+\n+name: Event\n+\n+description: Contains the Event Type, to make the event object cross-browser.\n+\n+license: MIT-style license.\n+\n+requires: [Window, Document, Array, Function, String, Object]\n+\n+provides: Event\n+\n+...\n+*/\n+\n+(function() {\n+\n+var _keys = {};\n+\n+var DOMEvent = this.DOMEvent = new Type('DOMEvent', function(event, win){\n+\tif (!win) win = window;\n+\tevent = event || win.event;\n+\tif (event.$extended) return event;\n+\tthis.event = event;\n+\tthis.$extended = true;\n+\tthis.shift = event.shiftKey;\n+\tthis.control = event.ctrlKey;\n+\tthis.alt = event.altKey;\n+\tthis.meta = event.metaKey;\n+\tvar type = this.type = event.type;\n+\tvar target = event.target || event.srcElement;\n+\twhile (target && target.nodeType == 3) target = target.parentNode;\n+\tthis.target = document.id(target);\n+\n+\tif (type.indexOf('key') == 0){\n+\t\tvar code = this.code = (event.which || event.keyCode);\n+\t\tthis.key = _keys[code]/*<1.3compat>*/ || Object.keyOf(Event.Keys, code)/*</1.3compat>*/;\n+\t\tif (type == 'keydown'){\n+\t\t\tif (code > 111 && code < 124) this.key = 'f' + (code - 111);\n+\t\t\telse if (code > 95 && code < 106) this.key = code - 96;\n+\t\t}\n+\t\tif (this.key == null) this.key = String.fromCharCode(code).toLowerCase();\n+\t} else if (type == 'click' || type == 'dblclick' || type == 'contextmenu' || type.indexOf('mouse') == 0){\n+\t\tvar doc = win.document;\n+\t\tdoc = (!doc.compatMode || doc.compatMode == 'CSS1Compat') ? doc.html : doc.body;\n+\t\tthis.page = {\n+\t\t\tx: (event.pageX != null) ? event.pageX : event.clientX + doc.scrollLeft,\n+\t\t\ty: (event.pageY != null) ? event.pageY : event.clientY + doc.scrollTop\n+\t\t};\n+\t\tthis.client = {\n+\t\t\tx: (event.pageX != null) ? event.pageX - win.pageXOffset : event.clientX,\n+\t\t\ty: (event.pageY != null) ? event.pageY - win.pageYOffset : event.clientY\n+\t\t};\n+\t\tif (type == 'DOMMouseScroll' || type == 'mousewheel')\n+\t\t\tthis.wheel = (event.wheelDelta) ? event.wheelDelta / 120 : -(event.detail || 0) / 3;\n+\n+\t\tthis.rightClick = (event.which == 3 || event.button == 2);\n+\t\tif (type == 'mouseover' || type == 'mouseout'){\n+\t\t\tvar related = event.relatedTarget || event[(type == 'mouseover' ? 'from' : 'to') + 'Element'];\n+\t\t\twhile (related && related.nodeType == 3) related = related.parentNode;\n+\t\t\tthis.relatedTarget = document.id(related);\n+\t\t}\n+\t} else if (type.indexOf('touch') == 0 ||\u00a0type.indexOf('gesture') == 0){\n+\t\tthis.rotation = event.rotation;\n+\t\tthis.scale = event.scale;\n+\t\tthis.targetTouches = event.targetTouches;\n+\t\tthis.changedTouches = event.changedTouches;\n+\t\tvar touches = this.touches = event.touches;\n+\t\tif (touches && touches[0]){\n+\t\t\tvar touch = touches[0];\n+\t\t\tthis.page = {x: touch.pageX, y: touch.pageY};\n+\t\t\tthis.client = {x: touch.clientX, y: touch.clientY};\n+\t\t}\n+\t}\n+\n+\tif (!this.client) this.client = {};\n+\tif (!this.page) this.page = {};\n+});\n+\n+DOMEvent.implement({\n+\n+\tstop: function(){\n+\t\treturn this.prevent().stopPropagation();\n+\t},\n+\n+\tstopPropagation: function(){\n+\t\tif (this.event.stopPropagation) this.event.stopPropagation();\n+\t\telse this.event.cancelBubble = true;\n+\t\treturn this;\n+\t},\n+\n+\tprevent: function(){\n+\t\tif (this.event.preventDefault) this.event.preventDefault();\n+\t\telse this.event.returnValue = false;\n+\t\treturn this;\n+\t}\n+\n+});\n+\n+DOMEvent.defineKey = function(code, key){\n+\t_keys[code] = key;\n+\treturn this;\n+};\n+\n+DOMEvent.defineKeys = DOMEvent.defineKey.overloadSetter(true);\n+\n+DOMEvent.defineKeys({\n+\t'38': 'up', '40': 'down', '37': 'left', '39': 'right',\n+\t'27': 'esc', '32': 'space', '8': 'backspace', '9': 'tab',\n+\t'46': 'delete', '13': 'enter'\n+});\n+\n+})();\n+\n+/*<1.3compat>*/\n+var Event = DOMEvent;",
        "path": "Source/Types/DOMEvent.js",
        "position": null,
        "original_position": 117,
        "commit_id": "22f29f5904ee4cc42d43f2b59c6793bae2a4ac8b",
        "original_commit_id": "971025f747c771229e46d6ffbf67467c7b7a38b6",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "maybe, because this beaks `typeOf(event)` now. (I believe _event_ is also documented under `typeOf`)\n\n``` js\nvar Event = new Type('Event', DOMEvent);\n```\n\nDon't know if that works already, but otherwise maybe something like this:\n\n``` js\n(function(){\n\nvar _Event = function(event, window){\n    // \u2026\n};\n\nvar DOMEvent = this.DOMEvent = new Type('DOMEvent', _Event).implement({\u2026});\n\n/*<1.3compat>*/\nthis.Event = new Type('Event', _Event);\n/*</1.3compat>*/\n\n})();\n```\n",
        "created_at": "2011-08-31T07:22:28Z",
        "updated_at": "2011-09-03T01:36:51Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2051#discussion_r108144",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2051",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/108144"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2051#discussion_r108144"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2051"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/108747",
        "pull_request_review_id": null,
        "id": 108747,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODc0Nw==",
        "diff_hunk": "@@ -0,0 +1,127 @@\n+/*\n+---\n+\n+name: Event\n+\n+description: Contains the Event Type, to make the event object cross-browser.\n+\n+license: MIT-style license.\n+\n+requires: [Window, Document, Array, Function, String, Object]\n+\n+provides: Event\n+\n+...\n+*/\n+\n+(function() {\n+\n+var _keys = {};\n+\n+var DOMEvent = this.DOMEvent = new Type('DOMEvent', function(event, win){\n+\tif (!win) win = window;\n+\tevent = event || win.event;\n+\tif (event.$extended) return event;\n+\tthis.event = event;\n+\tthis.$extended = true;\n+\tthis.shift = event.shiftKey;\n+\tthis.control = event.ctrlKey;\n+\tthis.alt = event.altKey;\n+\tthis.meta = event.metaKey;\n+\tvar type = this.type = event.type;\n+\tvar target = event.target || event.srcElement;\n+\twhile (target && target.nodeType == 3) target = target.parentNode;\n+\tthis.target = document.id(target);\n+\n+\tif (type.indexOf('key') == 0){\n+\t\tvar code = this.code = (event.which || event.keyCode);\n+\t\tthis.key = _keys[code]/*<1.3compat>*/ || Object.keyOf(Event.Keys, code)/*</1.3compat>*/;\n+\t\tif (type == 'keydown'){\n+\t\t\tif (code > 111 && code < 124) this.key = 'f' + (code - 111);\n+\t\t\telse if (code > 95 && code < 106) this.key = code - 96;\n+\t\t}\n+\t\tif (this.key == null) this.key = String.fromCharCode(code).toLowerCase();\n+\t} else if (type == 'click' || type == 'dblclick' || type == 'contextmenu' || type.indexOf('mouse') == 0){\n+\t\tvar doc = win.document;\n+\t\tdoc = (!doc.compatMode || doc.compatMode == 'CSS1Compat') ? doc.html : doc.body;\n+\t\tthis.page = {\n+\t\t\tx: (event.pageX != null) ? event.pageX : event.clientX + doc.scrollLeft,\n+\t\t\ty: (event.pageY != null) ? event.pageY : event.clientY + doc.scrollTop\n+\t\t};\n+\t\tthis.client = {\n+\t\t\tx: (event.pageX != null) ? event.pageX - win.pageXOffset : event.clientX,\n+\t\t\ty: (event.pageY != null) ? event.pageY - win.pageYOffset : event.clientY\n+\t\t};\n+\t\tif (type == 'DOMMouseScroll' || type == 'mousewheel')\n+\t\t\tthis.wheel = (event.wheelDelta) ? event.wheelDelta / 120 : -(event.detail || 0) / 3;\n+\n+\t\tthis.rightClick = (event.which == 3 || event.button == 2);\n+\t\tif (type == 'mouseover' || type == 'mouseout'){\n+\t\t\tvar related = event.relatedTarget || event[(type == 'mouseover' ? 'from' : 'to') + 'Element'];\n+\t\t\twhile (related && related.nodeType == 3) related = related.parentNode;\n+\t\t\tthis.relatedTarget = document.id(related);\n+\t\t}\n+\t} else if (type.indexOf('touch') == 0 ||\u00a0type.indexOf('gesture') == 0){\n+\t\tthis.rotation = event.rotation;\n+\t\tthis.scale = event.scale;\n+\t\tthis.targetTouches = event.targetTouches;\n+\t\tthis.changedTouches = event.changedTouches;\n+\t\tvar touches = this.touches = event.touches;\n+\t\tif (touches && touches[0]){\n+\t\t\tvar touch = touches[0];\n+\t\t\tthis.page = {x: touch.pageX, y: touch.pageY};\n+\t\t\tthis.client = {x: touch.clientX, y: touch.clientY};\n+\t\t}\n+\t}\n+\n+\tif (!this.client) this.client = {};\n+\tif (!this.page) this.page = {};\n+});\n+\n+DOMEvent.implement({\n+\n+\tstop: function(){\n+\t\treturn this.prevent().stopPropagation();\n+\t},\n+\n+\tstopPropagation: function(){\n+\t\tif (this.event.stopPropagation) this.event.stopPropagation();\n+\t\telse this.event.cancelBubble = true;\n+\t\treturn this;\n+\t},\n+\n+\tprevent: function(){\n+\t\tif (this.event.preventDefault) this.event.preventDefault();\n+\t\telse this.event.returnValue = false;\n+\t\treturn this;\n+\t}\n+\n+});\n+\n+DOMEvent.defineKey = function(code, key){\n+\t_keys[code] = key;\n+\treturn this;\n+};\n+\n+DOMEvent.defineKeys = DOMEvent.defineKey.overloadSetter(true);\n+\n+DOMEvent.defineKeys({\n+\t'38': 'up', '40': 'down', '37': 'left', '39': 'right',\n+\t'27': 'esc', '32': 'space', '8': 'backspace', '9': 'tab',\n+\t'46': 'delete', '13': 'enter'\n+});\n+\n+})();\n+\n+/*<1.3compat>*/\n+var Event = DOMEvent;",
        "path": "Source/Types/DOMEvent.js",
        "position": null,
        "original_position": 117,
        "commit_id": "22f29f5904ee4cc42d43f2b59c6793bae2a4ac8b",
        "original_commit_id": "971025f747c771229e46d6ffbf67467c7b7a38b6",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I was thinking about it but it doesn't make sense to do two different types for the same thing. They should be equal Event == DOMEvent.\n\nI don't think typeOf(event) is an issue - who is likely do check for this explicitly?\n",
        "created_at": "2011-08-31T18:34:13Z",
        "updated_at": "2011-09-03T01:36:51Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2051#discussion_r108747",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2051",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/108747"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2051#discussion_r108747"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2051"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/133183",
        "pull_request_review_id": null,
        "id": 133183,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzE4Mw==",
        "diff_hunk": "@@ -63,27 +63,34 @@ Element.Properties.tween = {\n Element.implement({\n \n \ttween: function(property, from, to){\n-\t\tthis.get('tween').start(arguments);\n+\t\tthis.get('tween').start(property, from, to);\n \t\treturn this;\n \t},\n \n \tfade: function(how){\n-\t\tvar fade = this.get('tween'), o = 'opacity', toggle;\n-\t\thow = [how, 'toggle'].pick();\n+\t\tvar fade = this.get('tween'), self = this, start = 'start', set = 'set',\n+\t\t\tmethod, toggle;\n+\t\tif (how == null) how = 'toggle';\n \t\tswitch (how){\n-\t\t\tcase 'in': fade.start(o, 1); break;\n-\t\t\tcase 'out': fade.start(o, 0); break;\n-\t\t\tcase 'show': fade.set(o, 1); break;\n-\t\t\tcase 'hide': fade.set(o, 0); break;\n+\t\t\tcase 'in': method = start; to = 1; break;\n+\t\t\tcase 'out': method = start; to = 0; break;\n+\t\t\tcase 'show': method = set; to = 1; break;\n+\t\t\tcase 'hide': method = set; to = 0; break;\n \t\t\tcase 'toggle':\n \t\t\t\tvar flag = this.retrieve('fade:flag', this.getStyle('opacity') == 1);\n-\t\t\t\tfade.start(o, (flag) ? 0 : 1);\n+\t\t\t\tmethod = start;\n+\t\t\t\tto = flag ? 0 : 1;\n \t\t\t\tthis.store('fade:flag', !flag);\n \t\t\t\ttoggle = true;\n \t\t\tbreak;\n-\t\t\tdefault: fade.start(o, arguments);\n+\t\t\tdefault: method = start; to = how;\n \t\t}\n \t\tif (!toggle) this.eliminate('fade:flag');\n+\t\tfade[method]('opacity', to);\n+\t\tif (method == set || to != 0) this.setStyle('visibility', to == 0 ? 'hidden' : 'visible');\n+\t\telse fade.chain(function(){\n+\t\t\tself.setStyle('visibility', 'hidden');",
        "path": "Source/Fx/Fx.Tween.js",
        "position": null,
        "original_position": 39,
        "commit_id": "ada476b5621485feaa17b2875202eef3efeacbfa",
        "original_commit_id": "ff2bf7f7c424a22e8736daa340c39e3c43a96f1f",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this.element.setStyle('visibility', 'hidden'); ?\n\n(+ get rid of self = this on top).\n",
        "created_at": "2011-09-20T22:40:05Z",
        "updated_at": "2011-09-20T22:48:58Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2081#discussion_r133183",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2081",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/133183"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2081#discussion_r133183"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2081"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/133185",
        "pull_request_review_id": null,
        "id": 133185,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzE4NQ==",
        "diff_hunk": "@@ -63,27 +63,34 @@ Element.Properties.tween = {\n Element.implement({\n \n \ttween: function(property, from, to){\n-\t\tthis.get('tween').start(arguments);\n+\t\tthis.get('tween').start(property, from, to);\n \t\treturn this;\n \t},\n \n \tfade: function(how){\n-\t\tvar fade = this.get('tween'), o = 'opacity', toggle;\n-\t\thow = [how, 'toggle'].pick();\n+\t\tvar fade = this.get('tween'), self = this, start = 'start', set = 'set',\n+\t\t\tmethod, toggle;\n+\t\tif (how == null) how = 'toggle';\n \t\tswitch (how){\n-\t\t\tcase 'in': fade.start(o, 1); break;\n-\t\t\tcase 'out': fade.start(o, 0); break;\n-\t\t\tcase 'show': fade.set(o, 1); break;\n-\t\t\tcase 'hide': fade.set(o, 0); break;\n+\t\t\tcase 'in': method = start; to = 1; break;\n+\t\t\tcase 'out': method = start; to = 0; break;\n+\t\t\tcase 'show': method = set; to = 1; break;\n+\t\t\tcase 'hide': method = set; to = 0; break;\n \t\t\tcase 'toggle':\n \t\t\t\tvar flag = this.retrieve('fade:flag', this.getStyle('opacity') == 1);\n-\t\t\t\tfade.start(o, (flag) ? 0 : 1);\n+\t\t\t\tmethod = start;\n+\t\t\t\tto = flag ? 0 : 1;\n \t\t\t\tthis.store('fade:flag', !flag);\n \t\t\t\ttoggle = true;\n \t\t\tbreak;\n-\t\t\tdefault: fade.start(o, arguments);\n+\t\t\tdefault: method = start; to = how;\n \t\t}\n \t\tif (!toggle) this.eliminate('fade:flag');\n+\t\tfade[method]('opacity', to);\n+\t\tif (method == set || to != 0) this.setStyle('visibility', to == 0 ? 'hidden' : 'visible');\n+\t\telse fade.chain(function(){\n+\t\t\tself.setStyle('visibility', 'hidden');",
        "path": "Source/Fx/Fx.Tween.js",
        "position": null,
        "original_position": 39,
        "commit_id": "ada476b5621485feaa17b2875202eef3efeacbfa",
        "original_commit_id": "ff2bf7f7c424a22e8736daa340c39e3c43a96f1f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "good idea\n\nOn Wed, Sep 21, 2011 at 12:40 AM, Christoph Pojer <\nreply@reply.github.com>wrote:\n\n> > ```\n> >           }\n> >           if (!toggle) this.eliminate('fade:flag');\n> > ```\n> > -             fade[method]('opacity', to);\n> > -             if (method == set || to != 0) this.setStyle('visibility',\n> >   to == 0 ? 'hidden' : 'visible');\n> > -             else fade.chain(function(){\n> > -                     self.setStyle('visibility', 'hidden');\n> \n> this.element.setStyle('visibility', 'hidden'); ?\n> \n> (+ get rid of self = this on top).\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mootools/mootools-core/pull/2081/files#r133183\n",
        "created_at": "2011-09-20T22:43:04Z",
        "updated_at": "2011-09-20T22:48:58Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2081#discussion_r133185",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2081",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/133185"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2081#discussion_r133185"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2081"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/150678",
        "pull_request_review_id": null,
        "id": 150678,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDY3OA==",
        "diff_hunk": "@@ -148,10 +147,12 @@ var delegation = {\n \t\t}\n \n \t\tvar self = this, uid = String.uniqueID();\n-\t\tvar delegator = _map.listen ? function(event){\n-\t\t\t_map.listen(self, match, fn, event, uid);\n-\t\t} : function(event){\n-\t\t\tbubbleUp(self, match, fn, event);\n+\t\tvar delegator = _map.listen ? function(event, target){\n+\t\t\tif (!target && event && event.target) target = event.target;\n+\t\t\tif (target) _map.listen(self, match, fn, event, target, uid);",
        "path": "Source/Element/Element.Delegation.js",
        "position": 64,
        "original_position": 64,
        "commit_id": "ddc4bd894f5cbd0641259cf8ce26ef5afa090c7d",
        "original_commit_id": "ddc4bd894f5cbd0641259cf8ce26ef5afa090c7d",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "perhaps a stricter (but slower) check for `typeOf(target) == 'element'`..?\n",
        "created_at": "2011-10-01T23:50:47Z",
        "updated_at": "2011-10-01T23:50:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2099#discussion_r150678",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2099",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/150678"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2099#discussion_r150678"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2099"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/150836",
        "pull_request_review_id": null,
        "id": 150836,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDgzNg==",
        "diff_hunk": "@@ -148,10 +147,12 @@ var delegation = {\n \t\t}\n \n \t\tvar self = this, uid = String.uniqueID();\n-\t\tvar delegator = _map.listen ? function(event){\n-\t\t\t_map.listen(self, match, fn, event, uid);\n-\t\t} : function(event){\n-\t\t\tbubbleUp(self, match, fn, event);\n+\t\tvar delegator = _map.listen ? function(event, target){\n+\t\t\tif (!target && event && event.target) target = event.target;\n+\t\t\tif (target) _map.listen(self, match, fn, event, target, uid);",
        "path": "Source/Element/Element.Delegation.js",
        "position": 64,
        "original_position": 64,
        "commit_id": "ddc4bd894f5cbd0641259cf8ce26ef5afa090c7d",
        "original_commit_id": "ddc4bd894f5cbd0641259cf8ce26ef5afa090c7d",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm cool with the check like this.\n",
        "created_at": "2011-10-02T10:35:39Z",
        "updated_at": "2011-10-02T10:35:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2099#discussion_r150836",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2099",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/150836"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2099#discussion_r150836"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2099"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/190614",
        "pull_request_review_id": null,
        "id": 190614,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDYxNA==",
        "diff_hunk": "@@ -65,7 +65,7 @@ However it is not recommended to use more frameworks, the $ variable can be set\n \n \n ### See Also:\n- - MooTools Blogpost: [The Dollar Save Mode][]\n+ - MooTools Blogpost: [The Dollar Safe Mode][]",
        "path": "Docs/Element/Element.md",
        "position": 5,
        "original_position": 5,
        "commit_id": "9f9172a27af22b8279e1a78fd2407c4a3de8b2b3",
        "original_commit_id": "9f9172a27af22b8279e1a78fd2407c4a3de8b2b3",
        "user": {
            "login": "partheseas",
            "id": 418348,
            "node_id": "MDQ6VXNlcjQxODM0OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/418348?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/partheseas",
            "html_url": "https://github.com/partheseas",
            "followers_url": "https://api.github.com/users/partheseas/followers",
            "following_url": "https://api.github.com/users/partheseas/following{/other_user}",
            "gists_url": "https://api.github.com/users/partheseas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/partheseas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/partheseas/subscriptions",
            "organizations_url": "https://api.github.com/users/partheseas/orgs",
            "repos_url": "https://api.github.com/users/partheseas/repos",
            "events_url": "https://api.github.com/users/partheseas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/partheseas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You need to make sure to change the actual link down at the bottom to match the new text.\n",
        "created_at": "2011-10-25T23:20:14Z",
        "updated_at": "2011-10-25T23:20:14Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2112#discussion_r190614",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2112",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/190614"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2112#discussion_r190614"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2112"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/190630",
        "pull_request_review_id": null,
        "id": 190630,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDYzMA==",
        "diff_hunk": "@@ -65,7 +65,7 @@ However it is not recommended to use more frameworks, the $ variable can be set\n \n \n ### See Also:\n- - MooTools Blogpost: [The Dollar Save Mode][]\n+ - MooTools Blogpost: [The Dollar Safe Mode][]",
        "path": "Docs/Element/Element.md",
        "position": 5,
        "original_position": 5,
        "commit_id": "9f9172a27af22b8279e1a78fd2407c4a3de8b2b3",
        "original_commit_id": "9f9172a27af22b8279e1a78fd2407c4a3de8b2b3",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "argh, too. many. spelling. errors. :| -- fixed both: https://github.com/mootools/mootools-core/commit/278d96d\n",
        "created_at": "2011-10-25T23:28:40Z",
        "updated_at": "2011-10-25T23:28:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2112#discussion_r190630",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2112",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/190630"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2112#discussion_r190630"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2112"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/211796",
        "pull_request_review_id": null,
        "id": 211796,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTc5Ng==",
        "diff_hunk": "@@ -185,7 +187,8 @@ var Request = this.Request = new Class({\n \t\tif (this.options.noCache)\n \t\t\turl += (url.contains('?') ? '&' : '?') + String.uniqueID();\n \n-\t\tif (data && method == 'get'){\n+\t\t// if we have a RAW body, treat data as a query string\n+\t\tif (data && (method == 'get' || this.options.raw != undefined)) {",
        "path": "Source/Request/Request.js",
        "position": 21,
        "original_position": 21,
        "commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "original_commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "user": {
            "login": "ahmadnassri",
            "id": 183195,
            "node_id": "MDQ6VXNlcjE4MzE5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/183195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahmadnassri",
            "html_url": "https://github.com/ahmadnassri",
            "followers_url": "https://api.github.com/users/ahmadnassri/followers",
            "following_url": "https://api.github.com/users/ahmadnassri/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahmadnassri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahmadnassri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahmadnassri/subscriptions",
            "organizations_url": "https://api.github.com/users/ahmadnassri/orgs",
            "repos_url": "https://api.github.com/users/ahmadnassri/repos",
            "events_url": "https://api.github.com/users/ahmadnassri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahmadnassri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "there should be a better way to distinguish between POST data and Query String parameters, its really inefficient they way it is now, as you should be able to send both Query Params and POST data at the same time ...\n\nI know this is doable by modifying the URL field, but it would be nice if it can be set as an object.\n\nperhaps that would be in my next pull request .. if you guys approve?\n",
        "created_at": "2011-11-06T15:39:37Z",
        "updated_at": "2011-11-06T15:39:37Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2120#discussion_r211796",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2120",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/211796"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2120#discussion_r211796"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/211798",
        "pull_request_review_id": null,
        "id": 211798,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTc5OA==",
        "diff_hunk": "@@ -210,7 +213,31 @@ var Request = this.Request = new Class({\n \t\t}, this);\n \n \t\tthis.fireEvent('request');\n-\t\txhr.send(data);\n+\n+\t\t// special handling of files\n+\t\tif (this.options.files.length > 0) {\n+\t\t\t// make sure the content-type header is reset\n+\t\t\tdelete this.options.headers['Content-Type'];\n+\n+\t\t\tvar upload = new FormData();\n+\n+\t\t\t// restructure the upload object with the request params\n+\t\t\tObject.each(this.options.data, function(value, key) {",
        "path": "Source/Request/Request.js",
        "position": 39,
        "original_position": 39,
        "commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "original_commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "user": {
            "login": "ahmadnassri",
            "id": 183195,
            "node_id": "MDQ6VXNlcjE4MzE5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/183195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahmadnassri",
            "html_url": "https://github.com/ahmadnassri",
            "followers_url": "https://api.github.com/users/ahmadnassri/followers",
            "following_url": "https://api.github.com/users/ahmadnassri/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahmadnassri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahmadnassri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahmadnassri/subscriptions",
            "organizations_url": "https://api.github.com/users/ahmadnassri/orgs",
            "repos_url": "https://api.github.com/users/ahmadnassri/repos",
            "events_url": "https://api.github.com/users/ahmadnassri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahmadnassri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "assuming that the `files` object is a key/value pair with the `value` being the HTML5 `File` object ... \nperhaps this is a bit confusing to developers, but can't think of a better way to do this ...\n",
        "created_at": "2011-11-06T15:41:38Z",
        "updated_at": "2011-11-06T15:42:03Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2120#discussion_r211798",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2120",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/211798"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2120#discussion_r211798"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/212178",
        "pull_request_review_id": null,
        "id": 212178,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjE3OA==",
        "diff_hunk": "@@ -185,7 +187,8 @@ var Request = this.Request = new Class({\n \t\tif (this.options.noCache)\n \t\t\turl += (url.contains('?') ? '&' : '?') + String.uniqueID();\n \n-\t\tif (data && method == 'get'){\n+\t\t// if we have a RAW body, treat data as a query string\n+\t\tif (data && (method == 'get' || this.options.raw != undefined)) {",
        "path": "Source/Request/Request.js",
        "position": 21,
        "original_position": 21,
        "commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "original_commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "user": {
            "login": "Inviz",
            "id": 2708,
            "node_id": "MDQ6VXNlcjI3MDg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2708?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Inviz",
            "html_url": "https://github.com/Inviz",
            "followers_url": "https://api.github.com/users/Inviz/followers",
            "following_url": "https://api.github.com/users/Inviz/following{/other_user}",
            "gists_url": "https://api.github.com/users/Inviz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Inviz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Inviz/subscriptions",
            "organizations_url": "https://api.github.com/users/Inviz/orgs",
            "repos_url": "https://api.github.com/users/Inviz/repos",
            "events_url": "https://api.github.com/users/Inviz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Inviz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perhaps that only matters in environments that make difference between GET & POST params (e.g. rails does not care, as it puts everything into `params` magic hash). Working with rails, i find it convenient to be able to provide all kind of params in a single hash (e.g. to send additional authenticity_token param easily). \n\nSo if one wants his parameter sent in query string, he should use a custom subclass of Request that would accept an array of param names to put them into query string, instead of post body.\n\nI see no benefit in dealing with that stuff manually, especially per request.\n",
        "created_at": "2011-11-07T04:40:44Z",
        "updated_at": "2011-11-07T04:41:17Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2120#discussion_r212178",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2120",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/212178"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2120#discussion_r212178"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/221836",
        "pull_request_review_id": null,
        "id": 221836,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTgzNg==",
        "diff_hunk": "@@ -185,7 +187,8 @@ var Request = this.Request = new Class({\n \t\tif (this.options.noCache)\n \t\t\turl += (url.contains('?') ? '&' : '?') + String.uniqueID();\n \n-\t\tif (data && method == 'get'){\n+\t\t// if we have a RAW body, treat data as a query string\n+\t\tif (data && (method == 'get' || this.options.raw != undefined)) {",
        "path": "Source/Request/Request.js",
        "position": 21,
        "original_position": 21,
        "commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "original_commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "user": {
            "login": "ahmadnassri",
            "id": 183195,
            "node_id": "MDQ6VXNlcjE4MzE5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/183195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahmadnassri",
            "html_url": "https://github.com/ahmadnassri",
            "followers_url": "https://api.github.com/users/ahmadnassri/followers",
            "following_url": "https://api.github.com/users/ahmadnassri/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahmadnassri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahmadnassri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahmadnassri/subscriptions",
            "organizations_url": "https://api.github.com/users/ahmadnassri/orgs",
            "repos_url": "https://api.github.com/users/ahmadnassri/repos",
            "events_url": "https://api.github.com/users/ahmadnassri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahmadnassri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I disagree, as a library, MooTools should be platform agnostic and follow the HTTP Spec [RFC 2616](http://www.ietf.org/rfc/rfc2616.txt) that said, I understand that 99.9% of developers don't even understand how HTTP works and just rely on their environment's way of doing things (Rails, PHP, etc ..) so perhaps the answer is to create a `Request.REST` Class that is the parent class for all `Reqest.*` Classes and the current `Request` Class simply makes things simpler for people using these environments (that clearly do not follow the HTTP Cpec) by allowing such behaviors as currently implemented.\n",
        "created_at": "2011-11-10T18:11:14Z",
        "updated_at": "2011-11-10T18:12:08Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2120#discussion_r221836",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2120",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/221836"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2120#discussion_r221836"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/223229",
        "pull_request_review_id": null,
        "id": 223229,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzIyOQ==",
        "diff_hunk": "@@ -185,7 +187,8 @@ var Request = this.Request = new Class({\n \t\tif (this.options.noCache)\n \t\t\turl += (url.contains('?') ? '&' : '?') + String.uniqueID();\n \n-\t\tif (data && method == 'get'){\n+\t\t// if we have a RAW body, treat data as a query string\n+\t\tif (data && (method == 'get' || this.options.raw != undefined)) {",
        "path": "Source/Request/Request.js",
        "position": 21,
        "original_position": 21,
        "commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "original_commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "user": {
            "login": "Inviz",
            "id": 2708,
            "node_id": "MDQ6VXNlcjI3MDg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2708?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Inviz",
            "html_url": "https://github.com/Inviz",
            "followers_url": "https://api.github.com/users/Inviz/followers",
            "following_url": "https://api.github.com/users/Inviz/following{/other_user}",
            "gists_url": "https://api.github.com/users/Inviz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Inviz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Inviz/subscriptions",
            "organizations_url": "https://api.github.com/users/Inviz/orgs",
            "repos_url": "https://api.github.com/users/Inviz/repos",
            "events_url": "https://api.github.com/users/Inviz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Inviz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Well, it doesn't mean it has to be able to do everything either. Inheritance is a great way to customize the classes you want. Get a good javascript packaging system, and deployment of customized mootools builds will be as easy, as if it was merged together.\n",
        "created_at": "2011-11-11T02:25:37Z",
        "updated_at": "2011-11-11T02:25:37Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2120#discussion_r223229",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2120",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/223229"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2120#discussion_r223229"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/226030",
        "pull_request_review_id": null,
        "id": 226030,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjAzMA==",
        "diff_hunk": "@@ -185,7 +187,8 @@ var Request = this.Request = new Class({\n \t\tif (this.options.noCache)\n \t\t\turl += (url.contains('?') ? '&' : '?') + String.uniqueID();\n \n-\t\tif (data && method == 'get'){\n+\t\t// if we have a RAW body, treat data as a query string\n+\t\tif (data && (method == 'get' || this.options.raw != undefined)) {",
        "path": "Source/Request/Request.js",
        "position": 21,
        "original_position": 21,
        "commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "original_commit_id": "4c44fe0b316b8244715d77944c7ca1706c4c72c8",
        "user": {
            "login": "ahmadnassri",
            "id": 183195,
            "node_id": "MDQ6VXNlcjE4MzE5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/183195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahmadnassri",
            "html_url": "https://github.com/ahmadnassri",
            "followers_url": "https://api.github.com/users/ahmadnassri/followers",
            "following_url": "https://api.github.com/users/ahmadnassri/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahmadnassri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahmadnassri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahmadnassri/subscriptions",
            "organizations_url": "https://api.github.com/users/ahmadnassri/orgs",
            "repos_url": "https://api.github.com/users/ahmadnassri/repos",
            "events_url": "https://api.github.com/users/ahmadnassri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahmadnassri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I guess you missed my point about the Library not doing specialized work ... \n\nI already have my inheritance and overwrites for my own projects going, I was suggesting that the core library should stick to standards and in this case provide a real HTTP Request class ... \n\nyou said it yourself: some environments don't make difference between GET & POST params, and that would be a perfect example where one would create inherited classes and get a packaging system going ... which is why the core library should always adhere to standards ... in this case, query string and post params are completely different elements of a request object and should be treated as such ...\n",
        "created_at": "2011-11-13T17:27:08Z",
        "updated_at": "2011-11-13T17:27:08Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2120#discussion_r226030",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2120",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/226030"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2120#discussion_r226030"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/254289",
        "pull_request_review_id": null,
        "id": 254289,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDI4OQ==",
        "diff_hunk": "@@ -863,6 +868,20 @@ Element.Properties.style = {\n \n };\n \n+if ('className' in document.documentElement){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 25,
        "commit_id": "9726effcf2e5268b30fe8fae4367dc1d34cff2d2",
        "original_commit_id": "da72cc67db4c11364e1430936d540222e3746774",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "When would this be false?\n",
        "created_at": "2011-11-28T15:13:13Z",
        "updated_at": "2011-11-29T04:44:35Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2140#discussion_r254289",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2140",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/254289"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2140#discussion_r254289"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2140"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/254293",
        "pull_request_review_id": null,
        "id": 254293,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDI5Mw==",
        "diff_hunk": "@@ -863,6 +868,20 @@ Element.Properties.style = {\n \n };\n \n+if ('className' in document.documentElement){\n+\tElement.Properties['class'] = {",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 26,
        "commit_id": "9726effcf2e5268b30fe8fae4367dc1d34cff2d2",
        "original_commit_id": "da72cc67db4c11364e1430936d540222e3746774",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This means you can get rid of this:\n\nhttps://github.com/ibolmo/mootools-core/blob/da72cc67db4c11364e1430936d540222e3746774/Source/Element/Element.js#L557-559\n\nHowever, isn't this unrelated to the fix for erase?\n",
        "created_at": "2011-11-28T15:14:35Z",
        "updated_at": "2011-11-29T04:44:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2140#discussion_r254293",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2140",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/254293"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2140#discussion_r254293"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2140"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/254414",
        "pull_request_review_id": null,
        "id": 254414,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDQxNA==",
        "diff_hunk": "@@ -863,6 +868,20 @@ Element.Properties.style = {\n \n };\n \n+if ('className' in document.documentElement){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 25,
        "commit_id": "9726effcf2e5268b30fe8fae4367dc1d34cff2d2",
        "original_commit_id": "da72cc67db4c11364e1430936d540222e3746774",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah I thought it strange too, but as you noticed in L557, we still check against it. \n",
        "created_at": "2011-11-28T15:46:11Z",
        "updated_at": "2011-11-29T04:44:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2140#discussion_r254414",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2140",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/254414"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2140#discussion_r254414"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2140"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/254421",
        "pull_request_review_id": null,
        "id": 254421,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDQyMQ==",
        "diff_hunk": "@@ -863,6 +868,20 @@ Element.Properties.style = {\n \n };\n \n+if ('className' in document.documentElement){\n+\tElement.Properties['class'] = {",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 26,
        "commit_id": "9726effcf2e5268b30fe8fae4367dc1d34cff2d2",
        "original_commit_id": "da72cc67db4c11364e1430936d540222e3746774",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yep, I didn't want to disturb the code in the first commit.\n\nSee: http://jsfiddle.net/yVMfJ/1/\n\nFor failing case of `erase('class')`;\n",
        "created_at": "2011-11-28T15:49:15Z",
        "updated_at": "2011-11-29T04:44:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2140#discussion_r254421",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2140",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/254421"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2140#discussion_r254421"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2140"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/254423",
        "pull_request_review_id": null,
        "id": 254423,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDQyMw==",
        "diff_hunk": "@@ -863,6 +868,20 @@ Element.Properties.style = {\n \n };\n \n+if ('className' in document.documentElement){\n+\tElement.Properties['class'] = {",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 26,
        "commit_id": "9726effcf2e5268b30fe8fae4367dc1d34cff2d2",
        "original_commit_id": "da72cc67db4c11364e1430936d540222e3746774",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also take a look (and comment) on this new issue: https://github.com/mootools/mootools-core/issues/2141\n",
        "created_at": "2011-11-28T15:49:52Z",
        "updated_at": "2011-11-29T04:44:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2140#discussion_r254423",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2140",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/254423"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2140#discussion_r254423"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2140"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/258996",
        "pull_request_review_id": null,
        "id": 258996,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk5Ng==",
        "diff_hunk": "@@ -275,7 +280,7 @@ Document.implement({\n \t\t};\n \n \t\treturn function(el, nocash, doc){\n-\t\t\tif (el && el.$family && el.uid) return el;\n+\t\t\tif (el && el.$family && el.uniqueNumber) return el;",
        "path": "Source/Element/Element.js",
        "position": 26,
        "original_position": 26,
        "commit_id": "f726b4863f645eff0cd153659d5d35c3e9cefecd",
        "original_commit_id": "d6d762bec47abfc21ef853fb969b7100b694fa7a",
        "user": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Mind putting a comment here on why uniqueNumber is accessed?\n",
        "created_at": "2011-11-29T21:03:22Z",
        "updated_at": "2011-11-30T15:42:20Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2144#discussion_r258996",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2144",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/258996"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2144#discussion_r258996"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2144"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/268537",
        "pull_request_review_id": null,
        "id": 268537,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODUzNw==",
        "diff_hunk": "@@ -730,6 +730,37 @@ Element.implement({\n \n });\n \n+\n+// appendHTML\n+\n+var appendInserters = {\n+\tbefore: 'beforeBegin',\n+\tafter: 'afterEnd',\n+\tbottom: 'beforeEnd',\n+\ttop: 'afterBegin',\n+\tinside: 'beforeEnd'\n+};\n+\n+Element.implement('appendHTML', ('insertAdjacentHTML' in document.createElement('div')) ? function(html, where){\n+\tthis.insertAdjacentHTML(appendInserters[where || 'bottom'], html);\n+\treturn this;\n+} : function(html, where){\n+\tvar temp = new Element('div', {html: html}),",
        "path": "Source/Element/Element.js",
        "position": 19,
        "original_position": 19,
        "commit_id": "dbad307c9972b930c6e04578c8a50bbbe6317822",
        "original_commit_id": "dbad307c9972b930c6e04578c8a50bbbe6317822",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "A little bit faster if:\n\n``` javascript\nvar temp = Element.setProperty(document.createElement('div'), 'html', html);\n```\n",
        "created_at": "2011-12-03T16:47:45Z",
        "updated_at": "2011-12-03T16:47:45Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2151#discussion_r268537",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2151",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/268537"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2151#discussion_r268537"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2151"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/268556",
        "pull_request_review_id": null,
        "id": 268556,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODU1Ng==",
        "diff_hunk": "@@ -730,6 +730,37 @@ Element.implement({\n \n });\n \n+\n+// appendHTML\n+\n+var appendInserters = {\n+\tbefore: 'beforeBegin',\n+\tafter: 'afterEnd',\n+\tbottom: 'beforeEnd',\n+\ttop: 'afterBegin',\n+\tinside: 'beforeEnd'\n+};\n+\n+Element.implement('appendHTML', ('insertAdjacentHTML' in document.createElement('div')) ? function(html, where){\n+\tthis.insertAdjacentHTML(appendInserters[where || 'bottom'], html);\n+\treturn this;\n+} : function(html, where){\n+\tvar temp = new Element('div', {html: html}),\n+\t\tchildren = temp.childNodes,\n+\t\tfragment = temp.firstChild;\n+\n+\tif (!fragment) return this;\n+\tif (children.length > 1){",
        "path": "Source/Element/Element.js",
        "position": 24,
        "original_position": 24,
        "commit_id": "dbad307c9972b930c6e04578c8a50bbbe6317822",
        "original_commit_id": "dbad307c9972b930c6e04578c8a50bbbe6317822",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` javascript\nif (!fragment){\n  return this;\n} else {\n}\n```\n",
        "created_at": "2011-12-03T17:00:54Z",
        "updated_at": "2011-12-03T17:00:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2151#discussion_r268556",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2151",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/268556"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2151#discussion_r268556"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2151"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/284846",
        "pull_request_review_id": null,
        "id": 284846,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDg0Ng==",
        "diff_hunk": "@@ -323,6 +323,40 @@ This event fires when the mouse wheel is rotated;\n - [Element:addEvent](#Element:addEvent)\n \n \n+Object: Element.NativeEvents {#Element-NativeEvents}\n+====================================================\n+\n+This is an object with all known DOM event types, like click, mouseover, load, etc.\n+Each event type has a value, possible values are `0` (`undefined`, `null`), `1`, and `2`.\n+\n+### Type 0 Events\n+\n+By default it is undefined. In this case you can add events, but you should manually fire them.\n+\n+#### Example:\n+\n+\telement.addEvent('pizza', fn);\n+\telement.fireEvent('pizza', 'yum!');\n+\t\n+The event is not actually added to the DOM, but is only registered in a JS object.\n+\n+### Type 1 Events\n+\n+The second case is if the value is 1. This time the object is attached to the DOM. Usually by element.addEventListener, or element.attacheEvent in older versions of IE. You can still use `element.fireEvent('load')` to manually fire events.",
        "path": "Docs/Element/Element.Event.md",
        "position": 23,
        "original_position": 23,
        "commit_id": "ba51b8a46b9131ab4dba446c11316ac0f99631ed",
        "original_commit_id": "ba51b8a46b9131ab4dba446c11316ac0f99631ed",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "attach~~e~~Event\n",
        "created_at": "2011-12-10T17:00:15Z",
        "updated_at": "2011-12-10T17:00:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2165#discussion_r284846",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2165",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/284846"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2165#discussion_r284846"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2165"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/284848",
        "pull_request_review_id": null,
        "id": 284848,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDg0OA==",
        "diff_hunk": "@@ -323,6 +323,40 @@ This event fires when the mouse wheel is rotated;\n - [Element:addEvent](#Element:addEvent)\n \n \n+Object: Element.NativeEvents {#Element-NativeEvents}\n+====================================================\n+\n+This is an object with all known DOM event types, like click, mouseover, load, etc.\n+Each event type has a value, possible values are `0` (`undefined`, `null`), `1`, and `2`.\n+\n+### Type 0 Events\n+\n+By default it is undefined. In this case you can add events, but you should manually fire them.\n+\n+#### Example:\n+\n+\telement.addEvent('pizza', fn);\n+\telement.fireEvent('pizza', 'yum!');\n+\t\n+The event is not actually added to the DOM, but is only registered in a JS object.\n+\n+### Type 1 Events\n+\n+The second case is if the value is 1. This time the object is attached to the DOM. Usually by element.addEventListener, or element.attacheEvent in older versions of IE. You can still use `element.fireEvent('load')` to manually fire events.\n+\n+### Type 2 Events\n+\n+The final case is if the value is 2. This is the same as case 1. The only difference is that the event object, containing interesting data, is wrapped and normalized by event wrapper ([DOMEvent][]). This is the most used variant, for mouse events (like *click*) and keyboard events.\n+\n+The reason to differentiate between 1 and 2 is that 1 is usually used for events that don't have interesting data, like onload, onscroll, onresize. Those last two fire an awful lot as well.",
        "path": "Docs/Element/Element.Event.md",
        "position": 29,
        "original_position": 29,
        "commit_id": "ba51b8a46b9131ab4dba446c11316ac0f99631ed",
        "original_commit_id": "ba51b8a46b9131ab4dba446c11316ac0f99631ed",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "don't have interesting data like: onload, onscroll, and onresize, or it's more performant. The latter two, for example, are fired frequently.\n",
        "created_at": "2011-12-10T17:03:13Z",
        "updated_at": "2011-12-10T17:03:13Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2165#discussion_r284848",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2165",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/284848"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2165#discussion_r284848"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2165"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/284849",
        "pull_request_review_id": null,
        "id": 284849,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDg0OQ==",
        "diff_hunk": "@@ -323,6 +323,40 @@ This event fires when the mouse wheel is rotated;\n - [Element:addEvent](#Element:addEvent)\n \n \n+Object: Element.NativeEvents {#Element-NativeEvents}\n+====================================================\n+\n+This is an object with all known DOM event types, like click, mouseover, load, etc.\n+Each event type has a value, possible values are `0` (`undefined`, `null`), `1`, and `2`.\n+\n+### Type 0 Events\n+\n+By default it is undefined. In this case you can add events, but you should manually fire them.\n+\n+#### Example:\n+\n+\telement.addEvent('pizza', fn);\n+\telement.fireEvent('pizza', 'yum!');\n+\t\n+The event is not actually added to the DOM, but is only registered in a JS object.\n+\n+### Type 1 Events\n+\n+The second case is if the value is 1. This time the object is attached to the DOM. Usually by element.addEventListener, or element.attacheEvent in older versions of IE. You can still use `element.fireEvent('load')` to manually fire events.\n+\n+### Type 2 Events\n+\n+The final case is if the value is 2. This is the same as case 1. The only difference is that the event object, containing interesting data, is wrapped and normalized by event wrapper ([DOMEvent][]). This is the most used variant, for mouse events (like *click*) and keyboard events.\n+\n+The reason to differentiate between 1 and 2 is that 1 is usually used for events that don't have interesting data, like onload, onscroll, onresize. Those last two fire an awful lot as well.",
        "path": "Docs/Element/Element.Event.md",
        "position": 29,
        "original_position": 29,
        "commit_id": "ba51b8a46b9131ab4dba446c11316ac0f99631ed",
        "original_commit_id": "ba51b8a46b9131ab4dba446c11316ac0f99631ed",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also, not sure if you'd like to `onresize` keywords.\n",
        "created_at": "2011-12-10T17:03:35Z",
        "updated_at": "2011-12-10T17:03:35Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2165#discussion_r284849",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2165",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/284849"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2165#discussion_r284849"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2165"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/284852",
        "pull_request_review_id": null,
        "id": 284852,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDg1Mg==",
        "diff_hunk": "@@ -323,6 +323,40 @@ This event fires when the mouse wheel is rotated;\n - [Element:addEvent](#Element:addEvent)\n \n \n+Object: Element.NativeEvents {#Element-NativeEvents}\n+====================================================\n+\n+This is an object with all known DOM event types, like click, mouseover, load, etc.\n+Each event type has a value, possible values are `0` (`undefined`, `null`), `1`, and `2`.\n+\n+### Type 0 Events\n+\n+By default it is undefined. In this case you can add events, but you should manually fire them.\n+\n+#### Example:\n+\n+\telement.addEvent('pizza', fn);\n+\telement.fireEvent('pizza', 'yum!');\n+\t\n+The event is not actually added to the DOM, but is only registered in a JS object.\n+\n+### Type 1 Events\n+\n+The second case is if the value is 1. This time the object is attached to the DOM. Usually by element.addEventListener, or element.attacheEvent in older versions of IE. You can still use `element.fireEvent('load')` to manually fire events.\n+\n+### Type 2 Events\n+\n+The final case is if the value is 2. This is the same as case 1. The only difference is that the event object, containing interesting data, is wrapped and normalized by event wrapper ([DOMEvent][]). This is the most used variant, for mouse events (like *click*) and keyboard events.\n+\n+The reason to differentiate between 1 and 2 is that 1 is usually used for events that don't have interesting data, like onload, onscroll, onresize. Those last two fire an awful lot as well.\n+\n+### Adding unsupported events\n+\n+As browsers evolve, new event types appear that you want to use, or browser specific events that are not supported by MooTools because they are only useful in specific cases. If you want to use those through the MooTools API there is a problem. The problem is that the event type has to be registered in the object, otherwise it will handle the event as case 0. This can be done with, for example:",
        "path": "Docs/Element/Element.Event.md",
        "position": 33,
        "original_position": 33,
        "commit_id": "ba51b8a46b9131ab4dba446c11316ac0f99631ed",
        "original_commit_id": "ba51b8a46b9131ab4dba446c11316ac0f99631ed",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not all events are supported by MooTools' Element Events API because of edge use cases or new events supported by the browser. To add support for a native event, just augment the `Element.NativeEvents` object with the key and **appropriate** key value (use the above). For example to add `popstate` support in your application:\n",
        "created_at": "2011-12-10T17:06:22Z",
        "updated_at": "2011-12-10T17:07:02Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2165#discussion_r284852",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2165",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/284852"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2165#discussion_r284852"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2165"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/285860",
        "pull_request_review_id": null,
        "id": 285860,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg2MA==",
        "diff_hunk": "@@ -590,6 +590,17 @@ if (el.type != 'button') propertySetters.type = function(node, value){\n \n /* getProperty, setProperty */\n \n+/* <ltIE9> */\n+var pollutesGetAttribute = (function(div){\n+\tdiv.random = 'attribute';\n+\treturn (div.getAttribute('random') == 'attribute');\n+})(document.createElement('div'));\n+\n+alert(pollutesGetAttribute);",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 10,
        "commit_id": "8fe6021dd30a9e2cf5cda41c28c3830cf5f00f72",
        "original_commit_id": "87158363760361263ef39fb5bc43062e8161e74f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`alert`\n",
        "created_at": "2011-12-12T09:47:36Z",
        "updated_at": "2011-12-12T14:28:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2167#discussion_r285860",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2167",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/285860"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2167#discussion_r285860"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2167"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/286388",
        "pull_request_review_id": null,
        "id": 286388,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NjM4OA==",
        "diff_hunk": "@@ -590,6 +590,17 @@ if (el.type != 'button') propertySetters.type = function(node, value){\n \n /* getProperty, setProperty */\n \n+/* <ltIE9> */\n+var pollutesGetAttribute = (function(div){\n+\tdiv.random = 'attribute';\n+\treturn (div.getAttribute('random') == 'attribute');\n+})(document.createElement('div'));\n+\n+alert(pollutesGetAttribute);",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 10,
        "commit_id": "8fe6021dd30a9e2cf5cda41c28c3830cf5f00f72",
        "original_commit_id": "87158363760361263ef39fb5bc43062e8161e74f",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "haha thanks, fixing\n",
        "created_at": "2011-12-12T14:27:24Z",
        "updated_at": "2011-12-12T14:28:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2167#discussion_r286388",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2167",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/286388"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2167#discussion_r286388"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2167"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/287600",
        "pull_request_review_id": null,
        "id": 287600,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzYwMA==",
        "diff_hunk": "@@ -590,6 +590,17 @@ if (el.type != 'button') propertySetters.type = function(node, value){\n \n /* getProperty, setProperty */\n \n+/* <ltIE9> */\n+var pollutesGetAttribute = (function(div){\n+\tdiv.random = 'attribute';\n+\treturn (div.getAttribute('random') == 'attribute');\n+})(document.createElement('div'));\n+\n+alert(pollutesGetAttribute);",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 10,
        "commit_id": "8fe6021dd30a9e2cf5cda41c28c3830cf5f00f72",
        "original_commit_id": "87158363760361263ef39fb5bc43062e8161e74f",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done.\n",
        "created_at": "2011-12-12T20:44:47Z",
        "updated_at": "2011-12-12T20:44:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2167#discussion_r287600",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2167",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/287600"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2167#discussion_r287600"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2167"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/314329",
        "pull_request_review_id": null,
        "id": 314329,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDMyOQ==",
        "diff_hunk": "@@ -920,6 +920,7 @@ Element.Properties.html = (function(){\n \tvar html = {\n \t\tset: function(html){\n \t\t\tif (typeOf(html) == 'array') html = html.join('');\n+\t\t\telse if (!html) html = '';",
        "path": "Source/Element/Element.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "4adb41afe81757c6a49e6797f203a661285359a3",
        "original_commit_id": "4adb41afe81757c6a49e6797f203a661285359a3",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should we check for `html == undefined` reason being `false`, `0`, and any `toValue` that returns falsy\n",
        "created_at": "2011-12-24T19:19:46Z",
        "updated_at": "2011-12-24T19:19:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2187#discussion_r314329",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2187",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/314329"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2187#discussion_r314329"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2187"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/314348",
        "pull_request_review_id": null,
        "id": 314348,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDM0OA==",
        "diff_hunk": "@@ -920,6 +920,7 @@ Element.Properties.html = (function(){\n \tvar html = {\n \t\tset: function(html){\n \t\t\tif (typeOf(html) == 'array') html = html.join('');\n+\t\t\telse if (!html) html = '';",
        "path": "Source/Element/Element.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "4adb41afe81757c6a49e6797f203a661285359a3",
        "original_commit_id": "4adb41afe81757c6a49e6797f203a661285359a3",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "hm, yeah, probably `if (html == null) html = '';` would be better...\n",
        "created_at": "2011-12-24T20:42:41Z",
        "updated_at": "2011-12-24T20:42:41Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2187#discussion_r314348",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2187",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/314348"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2187#discussion_r314348"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2187"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334954",
        "pull_request_review_id": null,
        "id": 334954,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDk1NA==",
        "diff_hunk": "@@ -199,11 +199,10 @@ Elements.implement(Array.prototype);\n Array.mirror(Elements);\n \n /*<ltIE8>*/\n-var createElementAcceptsHTML;\n-try {\n+var createElementAcceptsHTML = Function.attempt(function(){\n \tvar x = document.createElement('<input name=x>');\n-\tcreateElementAcceptsHTML = (x.name == 'x');\n-} catch(e){}\n+\treturn (x.name == 'x');",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 10,
        "commit_id": "73b3b17a2c035c935d6dde1a4969a893b0387fe1",
        "original_commit_id": "7e973faf0ed0e83197eee09a7318115a93c9a115",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why not just \n\n``` js\nreturn document.createElement('<input name=x>').name == 'x';\n```\n",
        "created_at": "2012-01-08T00:17:34Z",
        "updated_at": "2012-01-09T15:59:26Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2166#discussion_r334954",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2166",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334954"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2166#discussion_r334954"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2166"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334955",
        "pull_request_review_id": null,
        "id": 334955,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDk1NQ==",
        "diff_hunk": "@@ -199,11 +199,10 @@ Elements.implement(Array.prototype);\n Array.mirror(Elements);\n \n /*<ltIE8>*/\n-var createElementAcceptsHTML;\n-try {\n+var createElementAcceptsHTML = Function.attempt(function(){\n \tvar x = document.createElement('<input name=x>');\n-\tcreateElementAcceptsHTML = (x.name == 'x');\n-} catch(e){}\n+\treturn (x.name == 'x');",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 10,
        "commit_id": "73b3b17a2c035c935d6dde1a4969a893b0387fe1",
        "original_commit_id": "7e973faf0ed0e83197eee09a7318115a93c9a115",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "or \n\n``` js\n\nvar createElementAcceptsHTML;\ntry {\n    createElementAcceptsHTML = (document.createElement('<input name=x>').name == 'x');\n} catch (e){}\n```\n\nthat seems to work as well.\n",
        "created_at": "2012-01-08T00:21:53Z",
        "updated_at": "2012-01-09T15:59:26Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2166#discussion_r334955",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2166",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334955"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2166#discussion_r334955"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2166"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334956",
        "pull_request_review_id": null,
        "id": 334956,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDk1Ng==",
        "diff_hunk": "@@ -887,61 +882,76 @@ Element.Properties.tag = {\n \n };\n \n-/*<!webkit>*/\n-Element.Properties.html = (function(){\n-\n-\tvar tableTest = Function.attempt(function(){\n-\t\tvar table = document.createElement('table');\n-\t\ttable.innerHTML = '<tr><td></td></tr>';\n-\t});\n+Element.Properties.html = {\n \n-\tvar wrapper = document.createElement('div');\n+\tset: function(html){\n+\t\tif (html == null) html = '';\n+\t\telse if (typeOf(html) == 'array') html = html.join('');\n+\t\tthis.innerHTML = html;\n+\t},\n \n-\tvar translations = {\n-\t\ttable: [1, '<table>', '</table>'],\n-\t\tselect: [1, '<select>', '</select>'],\n-\t\ttbody: [2, '<table><tbody>', '</tbody></table>'],\n-\t\ttr: [3, '<table><tbody><tr>', '</tr></tbody></table>']\n-\t};\n-\ttranslations.thead = translations.tfoot = translations.tbody;\n-\n-\t/*<ltIE9>*/\n-\t// technique by jdbarlett - http://jdbartlett.com/innershiv/\n-\twrapper.innerHTML = '<nav></nav>';\n-\tvar HTML5Test = wrapper.childNodes.length == 1;\n-\tif (!HTML5Test){\n-\t\tvar tags = 'abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video'.split(' '),\n-\t\t\tfragment = document.createDocumentFragment(), l = tags.length;\n-\t\twhile (l--) fragment.createElement(tags[l]);\n-\t\tfragment.appendChild(wrapper);\n+\terase: function(){\n+\t\tthis.innerHTML = '';\n \t}\n-\t/*</ltIE9>*/\n \n-\tvar html = {\n-\t\tset: function(html){\n-\t\t\tif (typeOf(html) == 'array') html = html.join('');\n-\t\t\telse if (html == null) html = '';\n+};\n \n-\t\t\tvar wrap = (!tableTest && translations[this.get('tag')]);\n-\t\t\t/*<ltIE9>*/\n-\t\t\tif (!wrap && !HTML5Test) wrap = [0, '', ''];\n-\t\t\t/*</ltIE9>*/\n-\t\t\tif (wrap){\n-\t\t\t\tvar first = wrapper;\n-\t\t\t\tfirst.innerHTML = wrap[1] + html + wrap[2];\n-\t\t\t\tfor (var i = wrap[0]; i--;) first = first.firstChild;\n-\t\t\t\tthis.empty().adopt(first.childNodes);\n-\t\t\t} else {\n-\t\t\t\tthis.innerHTML = html;\n-\t\t\t}\n-\t\t}\n-\t};\n+/*<ltIE9>*/\n+// technique by jdbarlett - http://jdbartlett.com/innershiv/\n+var div = document.createElement('div');\n+div.innerHTML = '<nav></nav>';\n+var supportsHTML5Elements = (div.childNodes.length == 1);\n+if (!supportsHTML5Elements){\n+\tvar tags = 'abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video'.split(' '),\n+\t\tfragment = document.createDocumentFragment(), l = tags.length;\n+\twhile (l--) fragment.createElement(tags[l]);\n+}\n+div = null;\n+/*</ltIE9>*/\n \n-\thtml.erase = html.set;\n+/*<IE>*/\n+var supportsTableInnerHTML = Function.attempt(function(){\n+\tvar table = document.createElement('table');\n+\ttable.innerHTML = '<tr><td></td></tr>';\n+\treturn true;\n+});\n \n-\treturn html;\n-})();\n-/*</!webkit>*/\n+/*<ltFF4>*/\n+var tr = document.createElement('tr'), html = '<td></td>';\n+tr.innerHTML = html;\n+var supportsTRInnerHTML = (tr.innerHTML == html);\n+/*</ltFF4>*/\n+\n+if (!supportsTableInnerHTML || !supportsTRInnerHTML){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 131,
        "commit_id": "73b3b17a2c035c935d6dde1a4969a893b0387fe1",
        "original_commit_id": "7e973faf0ed0e83197eee09a7318115a93c9a115",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should also include:\n\n``` js\n|| !supportsHTML5Elements\n```\n",
        "created_at": "2012-01-08T00:27:26Z",
        "updated_at": "2012-01-09T15:59:26Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2166#discussion_r334956",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2166",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334956"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2166#discussion_r334956"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2166"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334957",
        "pull_request_review_id": null,
        "id": 334957,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDk1Nw==",
        "diff_hunk": "@@ -887,61 +882,76 @@ Element.Properties.tag = {\n \n };\n \n-/*<!webkit>*/\n-Element.Properties.html = (function(){\n-\n-\tvar tableTest = Function.attempt(function(){\n-\t\tvar table = document.createElement('table');\n-\t\ttable.innerHTML = '<tr><td></td></tr>';\n-\t});\n+Element.Properties.html = {\n \n-\tvar wrapper = document.createElement('div');\n+\tset: function(html){\n+\t\tif (html == null) html = '';\n+\t\telse if (typeOf(html) == 'array') html = html.join('');\n+\t\tthis.innerHTML = html;\n+\t},\n \n-\tvar translations = {\n-\t\ttable: [1, '<table>', '</table>'],\n-\t\tselect: [1, '<select>', '</select>'],\n-\t\ttbody: [2, '<table><tbody>', '</tbody></table>'],\n-\t\ttr: [3, '<table><tbody><tr>', '</tr></tbody></table>']\n-\t};\n-\ttranslations.thead = translations.tfoot = translations.tbody;\n-\n-\t/*<ltIE9>*/\n-\t// technique by jdbarlett - http://jdbartlett.com/innershiv/\n-\twrapper.innerHTML = '<nav></nav>';\n-\tvar HTML5Test = wrapper.childNodes.length == 1;\n-\tif (!HTML5Test){\n-\t\tvar tags = 'abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video'.split(' '),\n-\t\t\tfragment = document.createDocumentFragment(), l = tags.length;\n-\t\twhile (l--) fragment.createElement(tags[l]);\n-\t\tfragment.appendChild(wrapper);\n+\terase: function(){\n+\t\tthis.innerHTML = '';\n \t}\n-\t/*</ltIE9>*/\n \n-\tvar html = {\n-\t\tset: function(html){\n-\t\t\tif (typeOf(html) == 'array') html = html.join('');\n-\t\t\telse if (html == null) html = '';\n+};\n \n-\t\t\tvar wrap = (!tableTest && translations[this.get('tag')]);\n-\t\t\t/*<ltIE9>*/\n-\t\t\tif (!wrap && !HTML5Test) wrap = [0, '', ''];\n-\t\t\t/*</ltIE9>*/\n-\t\t\tif (wrap){\n-\t\t\t\tvar first = wrapper;\n-\t\t\t\tfirst.innerHTML = wrap[1] + html + wrap[2];\n-\t\t\t\tfor (var i = wrap[0]; i--;) first = first.firstChild;\n-\t\t\t\tthis.empty().adopt(first.childNodes);\n-\t\t\t} else {\n-\t\t\t\tthis.innerHTML = html;\n-\t\t\t}\n-\t\t}\n-\t};\n+/*<ltIE9>*/\n+// technique by jdbarlett - http://jdbartlett.com/innershiv/\n+var div = document.createElement('div');\n+div.innerHTML = '<nav></nav>';\n+var supportsHTML5Elements = (div.childNodes.length == 1);\n+if (!supportsHTML5Elements){\n+\tvar tags = 'abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video'.split(' '),\n+\t\tfragment = document.createDocumentFragment(), l = tags.length;\n+\twhile (l--) fragment.createElement(tags[l]);\n+}\n+div = null;\n+/*</ltIE9>*/\n \n-\thtml.erase = html.set;\n+/*<IE>*/\n+var supportsTableInnerHTML = Function.attempt(function(){\n+\tvar table = document.createElement('table');\n+\ttable.innerHTML = '<tr><td></td></tr>';\n+\treturn true;\n+});\n \n-\treturn html;\n-})();\n-/*</!webkit>*/\n+/*<ltFF4>*/\n+var tr = document.createElement('tr'), html = '<td></td>';\n+tr.innerHTML = html;\n+var supportsTRInnerHTML = (tr.innerHTML == html);",
        "path": "Source/Element/Element.js",
        "position": 125,
        "original_position": 128,
        "commit_id": "73b3b17a2c035c935d6dde1a4969a893b0387fe1",
        "original_commit_id": "7e973faf0ed0e83197eee09a7318115a93c9a115",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no `tr = null` here, like the `div = null` above?\n",
        "created_at": "2012-01-08T00:28:31Z",
        "updated_at": "2012-01-09T15:59:26Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2166#discussion_r334957",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2166",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334957"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2166#discussion_r334957"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2166"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334960",
        "pull_request_review_id": null,
        "id": 334960,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDk2MA==",
        "diff_hunk": "@@ -887,61 +882,76 @@ Element.Properties.tag = {\n \n };\n \n-/*<!webkit>*/\n-Element.Properties.html = (function(){\n-\n-\tvar tableTest = Function.attempt(function(){\n-\t\tvar table = document.createElement('table');\n-\t\ttable.innerHTML = '<tr><td></td></tr>';\n-\t});\n+Element.Properties.html = {\n \n-\tvar wrapper = document.createElement('div');\n+\tset: function(html){\n+\t\tif (html == null) html = '';\n+\t\telse if (typeOf(html) == 'array') html = html.join('');\n+\t\tthis.innerHTML = html;\n+\t},\n \n-\tvar translations = {\n-\t\ttable: [1, '<table>', '</table>'],\n-\t\tselect: [1, '<select>', '</select>'],\n-\t\ttbody: [2, '<table><tbody>', '</tbody></table>'],\n-\t\ttr: [3, '<table><tbody><tr>', '</tr></tbody></table>']\n-\t};\n-\ttranslations.thead = translations.tfoot = translations.tbody;\n-\n-\t/*<ltIE9>*/\n-\t// technique by jdbarlett - http://jdbartlett.com/innershiv/\n-\twrapper.innerHTML = '<nav></nav>';\n-\tvar HTML5Test = wrapper.childNodes.length == 1;\n-\tif (!HTML5Test){\n-\t\tvar tags = 'abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video'.split(' '),\n-\t\t\tfragment = document.createDocumentFragment(), l = tags.length;\n-\t\twhile (l--) fragment.createElement(tags[l]);\n-\t\tfragment.appendChild(wrapper);\n+\terase: function(){\n+\t\tthis.innerHTML = '';\n \t}\n-\t/*</ltIE9>*/\n \n-\tvar html = {\n-\t\tset: function(html){\n-\t\t\tif (typeOf(html) == 'array') html = html.join('');\n-\t\t\telse if (html == null) html = '';\n+};\n \n-\t\t\tvar wrap = (!tableTest && translations[this.get('tag')]);\n-\t\t\t/*<ltIE9>*/\n-\t\t\tif (!wrap && !HTML5Test) wrap = [0, '', ''];\n-\t\t\t/*</ltIE9>*/\n-\t\t\tif (wrap){\n-\t\t\t\tvar first = wrapper;\n-\t\t\t\tfirst.innerHTML = wrap[1] + html + wrap[2];\n-\t\t\t\tfor (var i = wrap[0]; i--;) first = first.firstChild;\n-\t\t\t\tthis.empty().adopt(first.childNodes);\n-\t\t\t} else {\n-\t\t\t\tthis.innerHTML = html;\n-\t\t\t}\n-\t\t}\n-\t};\n+/*<ltIE9>*/\n+// technique by jdbarlett - http://jdbartlett.com/innershiv/\n+var div = document.createElement('div');\n+div.innerHTML = '<nav></nav>';\n+var supportsHTML5Elements = (div.childNodes.length == 1);\n+if (!supportsHTML5Elements){\n+\tvar tags = 'abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video'.split(' '),\n+\t\tfragment = document.createDocumentFragment(), l = tags.length;\n+\twhile (l--) fragment.createElement(tags[l]);\n+}\n+div = null;\n+/*</ltIE9>*/\n \n-\thtml.erase = html.set;\n+/*<IE>*/\n+var supportsTableInnerHTML = Function.attempt(function(){\n+\tvar table = document.createElement('table');\n+\ttable.innerHTML = '<tr><td></td></tr>';\n+\treturn true;\n+});\n \n-\treturn html;\n-})();\n-/*</!webkit>*/\n+/*<ltFF4>*/\n+var tr = document.createElement('tr'), html = '<td></td>';\n+tr.innerHTML = html;\n+var supportsTRInnerHTML = (tr.innerHTML == html);",
        "path": "Source/Element/Element.js",
        "position": 125,
        "original_position": 128,
        "commit_id": "73b3b17a2c035c935d6dde1a4969a893b0387fe1",
        "original_commit_id": "7e973faf0ed0e83197eee09a7318115a93c9a115",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, I just tried sIEve myself and reported this TR element, using `tr = null` fixed that.\n",
        "created_at": "2012-01-08T00:42:17Z",
        "updated_at": "2012-01-09T15:59:26Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2166#discussion_r334960",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2166",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334960"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2166#discussion_r334960"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2166"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/335054",
        "pull_request_review_id": null,
        "id": 335054,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTA1NA==",
        "diff_hunk": "@@ -887,61 +882,76 @@ Element.Properties.tag = {\n \n };\n \n-/*<!webkit>*/\n-Element.Properties.html = (function(){\n-\n-\tvar tableTest = Function.attempt(function(){\n-\t\tvar table = document.createElement('table');\n-\t\ttable.innerHTML = '<tr><td></td></tr>';\n-\t});\n+Element.Properties.html = {\n \n-\tvar wrapper = document.createElement('div');\n+\tset: function(html){\n+\t\tif (html == null) html = '';\n+\t\telse if (typeOf(html) == 'array') html = html.join('');\n+\t\tthis.innerHTML = html;\n+\t},\n \n-\tvar translations = {\n-\t\ttable: [1, '<table>', '</table>'],\n-\t\tselect: [1, '<select>', '</select>'],\n-\t\ttbody: [2, '<table><tbody>', '</tbody></table>'],\n-\t\ttr: [3, '<table><tbody><tr>', '</tr></tbody></table>']\n-\t};\n-\ttranslations.thead = translations.tfoot = translations.tbody;\n-\n-\t/*<ltIE9>*/\n-\t// technique by jdbarlett - http://jdbartlett.com/innershiv/\n-\twrapper.innerHTML = '<nav></nav>';\n-\tvar HTML5Test = wrapper.childNodes.length == 1;\n-\tif (!HTML5Test){\n-\t\tvar tags = 'abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video'.split(' '),\n-\t\t\tfragment = document.createDocumentFragment(), l = tags.length;\n-\t\twhile (l--) fragment.createElement(tags[l]);\n-\t\tfragment.appendChild(wrapper);\n+\terase: function(){\n+\t\tthis.innerHTML = '';\n \t}\n-\t/*</ltIE9>*/\n \n-\tvar html = {\n-\t\tset: function(html){\n-\t\t\tif (typeOf(html) == 'array') html = html.join('');\n-\t\t\telse if (html == null) html = '';\n+};\n \n-\t\t\tvar wrap = (!tableTest && translations[this.get('tag')]);\n-\t\t\t/*<ltIE9>*/\n-\t\t\tif (!wrap && !HTML5Test) wrap = [0, '', ''];\n-\t\t\t/*</ltIE9>*/\n-\t\t\tif (wrap){\n-\t\t\t\tvar first = wrapper;\n-\t\t\t\tfirst.innerHTML = wrap[1] + html + wrap[2];\n-\t\t\t\tfor (var i = wrap[0]; i--;) first = first.firstChild;\n-\t\t\t\tthis.empty().adopt(first.childNodes);\n-\t\t\t} else {\n-\t\t\t\tthis.innerHTML = html;\n-\t\t\t}\n-\t\t}\n-\t};\n+/*<ltIE9>*/\n+// technique by jdbarlett - http://jdbartlett.com/innershiv/\n+var div = document.createElement('div');\n+div.innerHTML = '<nav></nav>';\n+var supportsHTML5Elements = (div.childNodes.length == 1);\n+if (!supportsHTML5Elements){\n+\tvar tags = 'abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video'.split(' '),\n+\t\tfragment = document.createDocumentFragment(), l = tags.length;\n+\twhile (l--) fragment.createElement(tags[l]);\n+}\n+div = null;\n+/*</ltIE9>*/\n \n-\thtml.erase = html.set;\n+/*<IE>*/\n+var supportsTableInnerHTML = Function.attempt(function(){\n+\tvar table = document.createElement('table');\n+\ttable.innerHTML = '<tr><td></td></tr>';\n+\treturn true;\n+});\n \n-\treturn html;\n-})();\n-/*</!webkit>*/\n+/*<ltFF4>*/\n+var tr = document.createElement('tr'), html = '<td></td>';\n+tr.innerHTML = html;\n+var supportsTRInnerHTML = (tr.innerHTML == html);",
        "path": "Source/Element/Element.js",
        "position": 125,
        "original_position": 128,
        "commit_id": "73b3b17a2c035c935d6dde1a4969a893b0387fe1",
        "original_commit_id": "7e973faf0ed0e83197eee09a7318115a93c9a115",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Awesome find! I'll fix, and try your suggestion (above).\n\nOn Sat, Jan 7, 2012 at 6:42 PM, Arian Stolwijk <\nreply@reply.github.com\n\n> wrote:\n> \n> > -     return html;\n> >   -})();\n> >   -/_</!webkit>_/\n> >   +/_<ltFF4>_/\n> >   +var tr = document.createElement('tr'), html = '<td></td>';\n> >   +tr.innerHTML = html;\n> >   +var supportsTRInnerHTML = (tr.innerHTML == html);\n> \n> Yes, I just tried sIEve myself and reported this TR element, using `tr =\n> null` fixed that.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mootools/mootools-core/pull/2166/files#r334960\n",
        "created_at": "2012-01-08T03:20:05Z",
        "updated_at": "2012-01-09T15:59:26Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2166#discussion_r335054",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2166",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/335054"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2166#discussion_r335054"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2166"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/360201",
        "pull_request_review_id": null,
        "id": 360201,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MDIwMQ==",
        "diff_hunk": "@@ -175,7 +175,7 @@ if (!window.addEventListener){\n \t\t\treturn (this.get('tag') == 'input' && (type == 'radio' || type == 'checkbox')) ? 'propertychange' : 'change'\n \t\t},\n \t\tcondition: function(event){\n-\t\t\treturn !!(this.type != 'radio' || this.checked);\n+\t\t\treturn event.type == 'change' || Boolean(this.checked) && event.type == 'propertychange' && event.event.propertyName == 'checked';",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 5,
        "commit_id": "af074d305bac62db9e4528e6377ca5873c6ab8da",
        "original_commit_id": "9b7d7b02886fcd2b0c028fbc585c5dfc88072897",
        "user": {
            "login": "DimitarChristoff",
            "id": 119500,
            "node_id": "MDQ6VXNlcjExOTUwMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/119500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DimitarChristoff",
            "html_url": "https://github.com/DimitarChristoff",
            "followers_url": "https://api.github.com/users/DimitarChristoff/followers",
            "following_url": "https://api.github.com/users/DimitarChristoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/DimitarChristoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DimitarChristoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DimitarChristoff/subscriptions",
            "organizations_url": "https://api.github.com/users/DimitarChristoff/orgs",
            "repos_url": "https://api.github.com/users/DimitarChristoff/repos",
            "events_url": "https://api.github.com/users/DimitarChristoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DimitarChristoff/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "isn't this more expensive - `Boolean(this.checked)` - can it affect delegation in IEx?\n",
        "created_at": "2012-01-17T19:54:51Z",
        "updated_at": "2012-01-18T06:44:01Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2203#discussion_r360201",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2203",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/360201"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2203#discussion_r360201"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2203"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/360497",
        "pull_request_review_id": null,
        "id": 360497,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MDQ5Nw==",
        "diff_hunk": "@@ -175,7 +175,7 @@ if (!window.addEventListener){\n \t\t\treturn (this.get('tag') == 'input' && (type == 'radio' || type == 'checkbox')) ? 'propertychange' : 'change'\n \t\t},\n \t\tcondition: function(event){\n-\t\t\treturn !!(this.type != 'radio' || this.checked);\n+\t\t\treturn event.type == 'change' || Boolean(this.checked) && event.type == 'propertychange' && event.event.propertyName == 'checked';",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 5,
        "commit_id": "af074d305bac62db9e4528e6377ca5873c6ab8da",
        "original_commit_id": "9b7d7b02886fcd2b0c028fbc585c5dfc88072897",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think this check for `this.checked` is necessary is it? I just tested it with _Specs/1.4client/Element/Element.Event.change.html_ and with this check it logs:\n\n```\nnative change\nchange delegation\n```\n\nonly if you check the checkbox.\n\nWithout that `Boolean(this.checked)` it always logs:\n\n```\nnative change\nchange bubbles\nchange delegation\n```\n\nHowever with _radio buttons_ it fires the event twice...\n\n```\nnative change\nchange bubbles\nchange delegation\nnative change\n```\n\nSo I guess that check is for radio buttons, however how it is in this commit, it won't work for checkboxes.\n\n@csuwldcat, can you confirm?\n",
        "created_at": "2012-01-17T21:27:41Z",
        "updated_at": "2012-01-18T06:44:01Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2203#discussion_r360497",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2203",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/360497"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2203#discussion_r360497"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2203"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/360532",
        "pull_request_review_id": null,
        "id": 360532,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MDUzMg==",
        "diff_hunk": "@@ -175,7 +175,7 @@ if (!window.addEventListener){\n \t\t\treturn (this.get('tag') == 'input' && (type == 'radio' || type == 'checkbox')) ? 'propertychange' : 'change'\n \t\t},\n \t\tcondition: function(event){\n-\t\t\treturn !!(this.type != 'radio' || this.checked);\n+\t\t\treturn event.type == 'change' || Boolean(this.checked) && event.type == 'propertychange' && event.event.propertyName == 'checked';",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 5,
        "commit_id": "af074d305bac62db9e4528e6377ca5873c6ab8da",
        "original_commit_id": "9b7d7b02886fcd2b0c028fbc585c5dfc88072897",
        "user": {
            "login": "DimitarChristoff",
            "id": 119500,
            "node_id": "MDQ6VXNlcjExOTUwMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/119500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DimitarChristoff",
            "html_url": "https://github.com/DimitarChristoff",
            "followers_url": "https://api.github.com/users/DimitarChristoff/followers",
            "following_url": "https://api.github.com/users/DimitarChristoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/DimitarChristoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DimitarChristoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DimitarChristoff/subscriptions",
            "organizations_url": "https://api.github.com/users/DimitarChristoff/orgs",
            "repos_url": "https://api.github.com/users/DimitarChristoff/repos",
            "events_url": "https://api.github.com/users/DimitarChristoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DimitarChristoff/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "it is needed. \n\nif you don't have it, on a set of radios, eg. `<input name='r' value='1' checked='checked' /> <input name='r' value='2' />`\\- it will fire change on BOTH of the input elements, one for the checked -> true  and one checked -> false. this does not make sense as they represent variations of the same core element, `input[name=r]`  and only one value will submit. \n\nthe spec test is too elementary and does not cover this - i found it through our production use and `onChange` branching events.  \n",
        "created_at": "2012-01-17T21:35:30Z",
        "updated_at": "2012-01-18T06:44:01Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2203#discussion_r360532",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2203",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/360532"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2203#discussion_r360532"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2203"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/361809",
        "pull_request_review_id": null,
        "id": 361809,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwOQ==",
        "diff_hunk": "@@ -175,7 +175,7 @@ if (!window.addEventListener){\n \t\t\treturn (this.get('tag') == 'input' && (type == 'radio' || type == 'checkbox')) ? 'propertychange' : 'change'\n \t\t},\n \t\tcondition: function(event){\n-\t\t\treturn !!(this.type != 'radio' || this.checked);\n+\t\t\treturn this.type != 'radio' || (event.event.propertyName == 'checked' && this.checked);",
        "path": "Source/Element/Element.Event.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "af074d305bac62db9e4528e6377ca5873c6ab8da",
        "original_commit_id": "af074d305bac62db9e4528e6377ca5873c6ab8da",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@DimitarChristoff @arian @csuwldcat \n\nOk folks, have a go at it. As I understand, the issue can be resolved by just ensuring that the [Event.propertyName](http://msdn.microsoft.com/en-us/library/ms534352%28v=vs.85%29.aspx) is for checked. Then we just depend on the this.checked value (`false`|`true`).\n",
        "created_at": "2012-01-18T06:51:34Z",
        "updated_at": "2012-01-18T06:52:14Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2203#discussion_r361809",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2203",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/361809"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2203#discussion_r361809"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2203"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/361952",
        "pull_request_review_id": null,
        "id": 361952,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTk1Mg==",
        "diff_hunk": "@@ -175,7 +175,7 @@ if (!window.addEventListener){\n \t\t\treturn (this.get('tag') == 'input' && (type == 'radio' || type == 'checkbox')) ? 'propertychange' : 'change'\n \t\t},\n \t\tcondition: function(event){\n-\t\t\treturn !!(this.type != 'radio' || this.checked);\n+\t\t\treturn this.type != 'radio' || (event.event.propertyName == 'checked' && this.checked);",
        "path": "Source/Element/Element.Event.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "af074d305bac62db9e4528e6377ca5873c6ab8da",
        "original_commit_id": "af074d305bac62db9e4528e6377ca5873c6ab8da",
        "user": {
            "login": "DimitarChristoff",
            "id": 119500,
            "node_id": "MDQ6VXNlcjExOTUwMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/119500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DimitarChristoff",
            "html_url": "https://github.com/DimitarChristoff",
            "followers_url": "https://api.github.com/users/DimitarChristoff/followers",
            "following_url": "https://api.github.com/users/DimitarChristoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/DimitarChristoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DimitarChristoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DimitarChristoff/subscriptions",
            "organizations_url": "https://api.github.com/users/DimitarChristoff/orgs",
            "repos_url": "https://api.github.com/users/DimitarChristoff/repos",
            "events_url": "https://api.github.com/users/DimitarChristoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DimitarChristoff/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`return !!(event.type === 'change' || this.checked && event.type === 'propertychange' && event.event.propertyName == 'checked')` was my original suggestion. the difference is, `event.type === 'propertychange'` also ensures it is a radio or checkbox that has triggered it. there is no reason to go to `element.type` again and access a property on the element after the setup cond already has determined that and type won't change in-between. \n",
        "created_at": "2012-01-18T09:01:32Z",
        "updated_at": "2012-01-18T09:02:16Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2203#discussion_r361952",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2203",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/361952"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2203#discussion_r361952"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2203"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/363119",
        "pull_request_review_id": null,
        "id": 363119,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExOQ==",
        "diff_hunk": "@@ -175,7 +175,7 @@ if (!window.addEventListener){\n \t\t\treturn (this.get('tag') == 'input' && (type == 'radio' || type == 'checkbox')) ? 'propertychange' : 'change'\n \t\t},\n \t\tcondition: function(event){\n-\t\t\treturn !!(this.type != 'radio' || this.checked);\n+\t\t\treturn this.type != 'radio' || (event.event.propertyName == 'checked' && this.checked);",
        "path": "Source/Element/Element.Event.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "af074d305bac62db9e4528e6377ca5873c6ab8da",
        "original_commit_id": "af074d305bac62db9e4528e6377ca5873c6ab8da",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There's no need for that check if we have `this.type != 'radio'` which I believe is the premise of the custom `Element.Event.change` to begin with. We were fixing the change event for radios.\n\nAlso, I prefer `this.type != 'radio'` vs `event.type == 'propertychange'` since the former is more readable.\n",
        "created_at": "2012-01-18T15:15:08Z",
        "updated_at": "2012-01-18T15:15:08Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2203#discussion_r363119",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2203",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/363119"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2203#discussion_r363119"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2203"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/363529",
        "pull_request_review_id": null,
        "id": 363529,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUyOQ==",
        "diff_hunk": "@@ -175,7 +175,7 @@ if (!window.addEventListener){\n \t\t\treturn (this.get('tag') == 'input' && (type == 'radio' || type == 'checkbox')) ? 'propertychange' : 'change'\n \t\t},\n \t\tcondition: function(event){\n-\t\t\treturn !!(this.type != 'radio' || this.checked);\n+\t\t\treturn this.type != 'radio' || (event.event.propertyName == 'checked' && this.checked);",
        "path": "Source/Element/Element.Event.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "af074d305bac62db9e4528e6377ca5873c6ab8da",
        "original_commit_id": "af074d305bac62db9e4528e6377ca5873c6ab8da",
        "user": {
            "login": "DimitarChristoff",
            "id": 119500,
            "node_id": "MDQ6VXNlcjExOTUwMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/119500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DimitarChristoff",
            "html_url": "https://github.com/DimitarChristoff",
            "followers_url": "https://api.github.com/users/DimitarChristoff/followers",
            "following_url": "https://api.github.com/users/DimitarChristoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/DimitarChristoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DimitarChristoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DimitarChristoff/subscriptions",
            "organizations_url": "https://api.github.com/users/DimitarChristoff/orgs",
            "repos_url": "https://api.github.com/users/DimitarChristoff/repos",
            "events_url": "https://api.github.com/users/DimitarChristoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DimitarChristoff/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "i am happy with above, seems to work and checkbox' are fine + it fixes bubbling. \n\n `return event.type == 'change' || this.type != 'radio' || (event.event.propertyName == 'checked' && this.checked);` - seems faster for other els - input, select etc - when it's a native change there is no need to access type or the event object.\n",
        "created_at": "2012-01-18T16:34:00Z",
        "updated_at": "2012-01-18T16:45:17Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2203#discussion_r363529",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2203",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/363529"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2203#discussion_r363529"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2203"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/379562",
        "pull_request_review_id": null,
        "id": 379562,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU2Mg==",
        "diff_hunk": "@@ -607,6 +607,9 @@ Element.implement({\n \t\t} else {\n \t\t\tif (value == null){\n \t\t\t\tthis.removeAttribute(name);\n+\t\t\t\t/* <ltIE9> */\n+\t\t\t\tif (pollutesGetAttribute) delete attributeWhiteList[name];",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 5,
        "commit_id": "79f263561322b15bae0e7f38bca9c6bfd5cdfa1b",
        "original_commit_id": "d0208f98e9eb94a27c7a7fec3e32ef32d3a83b28",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I sneaked this in. Not likely case, but I thought it's necessary to be symmetrical. If we add to the whitelist, we then remove from the white list if we remove the property.\n",
        "created_at": "2012-01-24T13:49:56Z",
        "updated_at": "2012-01-27T18:06:43Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2250#discussion_r379562",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2250",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/379562"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2250#discussion_r379562"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2250"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/379747",
        "pull_request_review_id": null,
        "id": 379747,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc0Nw==",
        "diff_hunk": "@@ -607,6 +607,9 @@ Element.implement({\n \t\t} else {\n \t\t\tif (value == null){\n \t\t\t\tthis.removeAttribute(name);\n+\t\t\t\t/* <ltIE9> */\n+\t\t\t\tif (pollutesGetAttribute) delete attributeWhiteList[name];",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 5,
        "commit_id": "79f263561322b15bae0e7f38bca9c6bfd5cdfa1b",
        "original_commit_id": "d0208f98e9eb94a27c7a7fec3e32ef32d3a83b28",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "euhm, now it removes it for the first element with this attribute, however there can be more elements with this attribute. So if you do `.removeProperty('data-foo')` other elements that try to get/set this property won't work correctly, right?\n",
        "created_at": "2012-01-24T14:35:04Z",
        "updated_at": "2012-01-27T18:06:43Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2250#discussion_r379747",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2250",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/379747"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2250#discussion_r379747"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2250"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/379758",
        "pull_request_review_id": null,
        "id": 379758,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc1OA==",
        "diff_hunk": "@@ -627,8 +630,9 @@ Element.implement({\n \t\tif (getter) return getter(this);\n \t\t/* <ltIE9> */\n \t\tif (pollutesGetAttribute && !attributeWhiteList[name]){\n-\t\t\tvar attr = this.getAttributeNode(name);\n-\t\t\tif (!attr || attr.expando) return null;\n+\t\t\tvar outer = this.outerHTML, i = outer.indexOf(name);\n+\t\t\tif ((i < 0) || (i > outer.indexOf('><'))) return null;",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 17,
        "commit_id": "79f263561322b15bae0e7f38bca9c6bfd5cdfa1b",
        "original_commit_id": "d0208f98e9eb94a27c7a7fec3e32ef32d3a83b28",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`outer.indexOf('><')`: what if the outerHTML is `<a href=\"#\">text</a>`, then there isn't a `><` in that string... \n",
        "created_at": "2012-01-24T14:36:19Z",
        "updated_at": "2012-01-27T18:06:43Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2250#discussion_r379758",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2250",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/379758"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2250#discussion_r379758"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2250"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/380449",
        "pull_request_review_id": null,
        "id": 380449,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ0OQ==",
        "diff_hunk": "@@ -607,6 +607,9 @@ Element.implement({\n \t\t} else {\n \t\t\tif (value == null){\n \t\t\t\tthis.removeAttribute(name);\n+\t\t\t\t/* <ltIE9> */\n+\t\t\t\tif (pollutesGetAttribute) delete attributeWhiteList[name];",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 5,
        "commit_id": "79f263561322b15bae0e7f38bca9c6bfd5cdfa1b",
        "original_commit_id": "d0208f98e9eb94a27c7a7fec3e32ef32d3a83b28",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "hrm.. good point .. perhaps attributeWhiteList should be per element. Perhaps in storage.\n",
        "created_at": "2012-01-24T17:24:15Z",
        "updated_at": "2012-01-27T18:06:43Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2250#discussion_r380449",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2250",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/380449"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2250#discussion_r380449"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2250"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/380454",
        "pull_request_review_id": null,
        "id": 380454,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1NA==",
        "diff_hunk": "@@ -627,8 +630,9 @@ Element.implement({\n \t\tif (getter) return getter(this);\n \t\t/* <ltIE9> */\n \t\tif (pollutesGetAttribute && !attributeWhiteList[name]){\n-\t\t\tvar attr = this.getAttributeNode(name);\n-\t\t\tif (!attr || attr.expando) return null;\n+\t\t\tvar outer = this.outerHTML, i = outer.indexOf(name);\n+\t\t\tif ((i < 0) || (i > outer.indexOf('><'))) return null;",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 17,
        "commit_id": "79f263561322b15bae0e7f38bca9c6bfd5cdfa1b",
        "original_commit_id": "d0208f98e9eb94a27c7a7fec3e32ef32d3a83b28",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm going to add that the coverage, and you made me also realize that i could save a couple of ops if I still check for expando. I'll modify this afternoon.\n",
        "created_at": "2012-01-24T17:25:21Z",
        "updated_at": "2012-01-27T18:06:43Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2250#discussion_r380454",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2250",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/380454"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2250#discussion_r380454"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2250"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/286622",
        "pull_request_review_id": null,
        "id": 286622,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NjYyMg==",
        "diff_hunk": "@@ -579,6 +579,19 @@ propertyGetters['class'] = function(node){\n \treturn ('className' in node) ? node.className || null : node.getAttribute('class');\n };\n \n+/* <ltIE9> */\n+if (Browser.ie && Browser.version < 9) propertySetters.src = function(node, value){\n+\tvar isNew = !node.parentNode,",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 6,
        "commit_id": "420a28a8a5c020e954f6f478e5f01d765f1152bd",
        "original_commit_id": "ef809626cf185f92795adecbe73a98b7c96d0753",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@jdalton this was the only line that I wasn't happy with. Do you know of a better way to check if an Element is \"new\".\n",
        "created_at": "2011-12-12T16:14:59Z",
        "updated_at": "2012-01-29T18:59:18Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2168#discussion_r286622",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2168",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/286622"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2168#discussion_r286622"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2168"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/286716",
        "pull_request_review_id": null,
        "id": 286716,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NjcxNg==",
        "diff_hunk": "@@ -579,6 +579,19 @@ propertyGetters['class'] = function(node){\n \treturn ('className' in node) ? node.className || null : node.getAttribute('class');\n };\n \n+/* <ltIE9> */\n+if (Browser.ie && Browser.version < 9) propertySetters.src = function(node, value){\n+\tvar isNew = !node.parentNode,",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 6,
        "commit_id": "420a28a8a5c020e954f6f478e5f01d765f1152bd",
        "original_commit_id": "ef809626cf185f92795adecbe73a98b7c96d0753",
        "user": {
            "login": "jdalton",
            "id": 4303,
            "node_id": "MDQ6VXNlcjQzMDM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4303?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdalton",
            "html_url": "https://github.com/jdalton",
            "followers_url": "https://api.github.com/users/jdalton/followers",
            "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
            "organizations_url": "https://api.github.com/users/jdalton/orgs",
            "repos_url": "https://api.github.com/users/jdalton/repos",
            "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jdalton/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ga really it's 2011, enough with the UA sniffs.\n\nIn IE a removed element will still have a parentNode so you can check it against the `parentElement` property.\n_(parentElement will be null once detached from the document unlike parentNode)_\n",
        "created_at": "2011-12-12T16:38:34Z",
        "updated_at": "2012-01-29T18:59:18Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2168#discussion_r286716",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2168",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/286716"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2168#discussion_r286716"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2168"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/287194",
        "pull_request_review_id": null,
        "id": 287194,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzE5NA==",
        "diff_hunk": "@@ -579,6 +579,19 @@ propertyGetters['class'] = function(node){\n \treturn ('className' in node) ? node.className || null : node.getAttribute('class');\n };\n \n+/* <ltIE9> */\n+if (Browser.ie && Browser.version < 9) propertySetters.src = function(node, value){\n+\tvar isNew = !node.parentNode,",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 6,
        "commit_id": "420a28a8a5c020e954f6f478e5f01d765f1152bd",
        "original_commit_id": "ef809626cf185f92795adecbe73a98b7c96d0753",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "hehe remember that there's no cheap way to check for image cache bug that we're trying to normalize. I guess I could use Google Analytics blank.gif but what's the point if I know that the behavior is ltIE9.\n\nThanks for the tip. Do you think that should suffice the `isNew`? I guess I could temporarily flag it in `new Element` and toggle it in `src`.\n\nOh and I forgot to check against `img`. I'll do this in a bit. \n",
        "created_at": "2011-12-12T18:47:20Z",
        "updated_at": "2012-01-29T18:59:18Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2168#discussion_r287194",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2168",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/287194"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2168#discussion_r287194"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2168"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/287371",
        "pull_request_review_id": null,
        "id": 287371,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzM3MQ==",
        "diff_hunk": "@@ -579,6 +579,19 @@ propertyGetters['class'] = function(node){\n \treturn ('className' in node) ? node.className || null : node.getAttribute('class');\n };\n \n+/* <ltIE9> */\n+if (Browser.ie && Browser.version < 9) propertySetters.src = function(node, value){\n+\tvar isNew = !node.parentNode,",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 6,
        "commit_id": "420a28a8a5c020e954f6f478e5f01d765f1152bd",
        "original_commit_id": "ef809626cf185f92795adecbe73a98b7c96d0753",
        "user": {
            "login": "jdalton",
            "id": 4303,
            "node_id": "MDQ6VXNlcjQzMDM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4303?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdalton",
            "html_url": "https://github.com/jdalton",
            "followers_url": "https://api.github.com/users/jdalton/followers",
            "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
            "organizations_url": "https://api.github.com/users/jdalton/orgs",
            "repos_url": "https://api.github.com/users/jdalton/repos",
            "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jdalton/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> hehe remember that there's no cheap way to check for image cache bug that we're trying to normalize. I guess I could use Google Analytics blank.gif but what's the point if I know that the behavior is ltIE9.\n\nExcept the whole thing is a doc note, not a _\"cache bug\"_, and not really a patch concern for MooTools.\nThe problem is that unlike other browsers IE will assign height and width attributes automatically for a loaded image. So when you change the src it will enforce the attributes it set. MooTools has no way to determine if the user or IE has set those attributes.\n",
        "created_at": "2011-12-12T19:39:21Z",
        "updated_at": "2012-01-29T18:59:18Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2168#discussion_r287371",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2168",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/287371"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2168#discussion_r287371"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2168"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/392375",
        "pull_request_review_id": null,
        "id": 392375,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM3NQ==",
        "diff_hunk": "@@ -860,7 +860,7 @@ for (var p in pseudos) local['pseudo:' + p] = pseudos[p];\n var attributeGetters = local.attributeGetters = {\n \n \t'class': function(){\n-\t\treturn this.getAttribute('class') || this.className;\n+\t\treturn this.getAttribute('class') || typeOf(this.className) == 'string' ? this.className : null;",
        "path": "Source/Slick/Slick.Finder.js",
        "position": null,
        "original_position": 5,
        "commit_id": "7068ed3a2ea0b3437ecdf8f5ba6741d9bc3aa7a4",
        "original_commit_id": "f45949e6316e104e968948b2024ce17ef99d18e4",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe\n\n``` js\nvar className = this.getAttribute('class') || this.className;\nreturn className ? ('' + className) : null;\n```\n\nor maybe \n\n``` js\nreturn this.getAttribute('class') || ('' + this.className);\n```\n\nbut that depends on if className is `null` or an empty string when it's not set...\n",
        "created_at": "2012-01-27T16:18:48Z",
        "updated_at": "2012-01-30T11:01:33Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2262#discussion_r392375",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2262",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/392375"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2262#discussion_r392375"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2262"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/395524",
        "pull_request_review_id": null,
        "id": 395524,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyNA==",
        "diff_hunk": "@@ -860,7 +860,7 @@ for (var p in pseudos) local['pseudo:' + p] = pseudos[p];\n var attributeGetters = local.attributeGetters = {\n \n \t'class': function(){\n-\t\treturn this.getAttribute('class') || this.className;\n+\t\treturn this.getAttribute('class') || typeOf(this.className) == 'string' ? this.className : null;",
        "path": "Source/Slick/Slick.Finder.js",
        "position": null,
        "original_position": 5,
        "commit_id": "7068ed3a2ea0b3437ecdf8f5ba6741d9bc3aa7a4",
        "original_commit_id": "f45949e6316e104e968948b2024ce17ef99d18e4",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "instead of `'' +` try String(this.className) or `String.prototype.toString.call(this.className)`\n\nAlso we could do:\n\n``` js\nvar className = this.className;\nif (className && className.baseVal) className = className.baseVal;\nreturn className || this.getAttribute('class');\n```\n",
        "created_at": "2012-01-29T17:17:20Z",
        "updated_at": "2012-01-30T11:01:33Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2262#discussion_r395524",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2262",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/395524"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2262#discussion_r395524"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2262"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/396602",
        "pull_request_review_id": null,
        "id": 396602,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwMg==",
        "diff_hunk": "@@ -860,7 +860,7 @@ for (var p in pseudos) local['pseudo:' + p] = pseudos[p];\n var attributeGetters = local.attributeGetters = {\n \n \t'class': function(){\n-\t\treturn this.getAttribute('class') || this.className;\n+\t\treturn this.getAttribute('class') || typeOf(this.className) == 'string' ? this.className : null;",
        "path": "Source/Slick/Slick.Finder.js",
        "position": null,
        "original_position": 5,
        "commit_id": "7068ed3a2ea0b3437ecdf8f5ba6741d9bc3aa7a4",
        "original_commit_id": "f45949e6316e104e968948b2024ce17ef99d18e4",
        "user": {
            "login": "mcfedr",
            "id": 704356,
            "node_id": "MDQ6VXNlcjcwNDM1Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/704356?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcfedr",
            "html_url": "https://github.com/mcfedr",
            "followers_url": "https://api.github.com/users/mcfedr/followers",
            "following_url": "https://api.github.com/users/mcfedr/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcfedr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcfedr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcfedr/subscriptions",
            "organizations_url": "https://api.github.com/users/mcfedr/orgs",
            "repos_url": "https://api.github.com/users/mcfedr/repos",
            "events_url": "https://api.github.com/users/mcfedr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcfedr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think its good to get the baseval, i have had to change it slightly because of `\"\"` being false\n\n``` javascript\nvar className = this.className;\nif (className && className.baseVal !== undefined) className = className.baseVal;\nreturn className || this.getAttribute('class');\n```\n",
        "created_at": "2012-01-30T11:03:35Z",
        "updated_at": "2012-01-30T11:03:35Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2262#discussion_r396602",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2262",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/396602"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2262#discussion_r396602"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2262"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334933",
        "pull_request_review_id": null,
        "id": 334933,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDkzMw==",
        "diff_hunk": "@@ -588,6 +588,17 @@ if (el.type != 'button') propertySetters.type = function(node, value){\n };\n /* </webkit> */\n \n+/*<IE>*/\n+var input = document.createElement('input');\n+input.value = 't';\n+input.type = 'submit';\n+if (input.value != 't') propertySetters.type = function(node, value){\n+\tvar inputValue = node.value;\n+\tnode.type = value;",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 10,
        "commit_id": "4f6981e24ad6a384bbb2664c8c1c0c2fa3e8b99f",
        "original_commit_id": "0abd0eeaefa283781fa9d1d69176d2c89fdf73df",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ahh I was confused for a second. Perhaps instead of `value` you should use `type`. and replace `inputValue` with `value`.\n",
        "created_at": "2012-01-07T23:03:05Z",
        "updated_at": "2012-01-30T23:03:35Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2188#discussion_r334933",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2188",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/334933"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2188#discussion_r334933"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2188"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/396071",
        "pull_request_review_id": null,
        "id": 396071,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA3MQ==",
        "diff_hunk": "@@ -588,6 +588,17 @@ if (el.type != 'button') propertySetters.type = function(node, value){\n };\n /* </webkit> */\n \n+/*<IE>*/\n+var input = document.createElement('input');\n+input.value = 't';\n+input.type = 'submit';\n+if (input.value != 't') propertySetters.type = function(node, value){\n+\tvar inputValue = node.value;\n+\tnode.type = value;",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 10,
        "commit_id": "4f6981e24ad6a384bbb2664c8c1c0c2fa3e8b99f",
        "original_commit_id": "0abd0eeaefa283781fa9d1d69176d2c89fdf73df",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@arian this is ready to roll. just need the update of `value` => `type` and `inputValue` => `value`\n\nAlso. `input = null` \n",
        "created_at": "2012-01-30T05:02:02Z",
        "updated_at": "2012-01-30T23:03:35Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2188#discussion_r396071",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2188",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/396071"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2188#discussion_r396071"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2188"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/396372",
        "pull_request_review_id": null,
        "id": 396372,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM3Mg==",
        "diff_hunk": "@@ -74,13 +74,32 @@ describe('Element', function(){\n \t\tdescribe('type', function(){\n \n \t\t\tit('should set the type of a button', function(){\n-\t\t\t\texpect(new Element('button', {type: 'button'}).get('type')).toEqual('button');\n+\t\t\t\tvar button = new Element('button', {type: 'button'})\n+\t\t\t\texpect(button.get('type')).toEqual('button');\n+\t\t\t\texpect(function(){",
        "path": "Specs/1.4client/Element/Element.js",
        "position": null,
        "original_position": 7,
        "commit_id": "4f6981e24ad6a384bbb2664c8c1c0c2fa3e8b99f",
        "original_commit_id": "4c0a7e8f44c05f0e437109e00b5ac92e13087310",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I noticed this one still fails.. It looks like if you have set a type once, you cannot set it again in oldIE.\n",
        "created_at": "2012-01-30T09:06:04Z",
        "updated_at": "2012-01-30T23:03:35Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2188#discussion_r396372",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2188",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/396372"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2188#discussion_r396372"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2188"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/397793",
        "pull_request_review_id": null,
        "id": 397793,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5Mw==",
        "diff_hunk": "@@ -74,13 +74,32 @@ describe('Element', function(){\n \t\tdescribe('type', function(){\n \n \t\t\tit('should set the type of a button', function(){\n-\t\t\t\texpect(new Element('button', {type: 'button'}).get('type')).toEqual('button');\n+\t\t\t\tvar button = new Element('button', {type: 'button'})\n+\t\t\t\texpect(button.get('type')).toEqual('button');\n+\t\t\t\texpect(function(){",
        "path": "Specs/1.4client/Element/Element.js",
        "position": null,
        "original_position": 7,
        "commit_id": "4f6981e24ad6a384bbb2664c8c1c0c2fa3e8b99f",
        "original_commit_id": "4c0a7e8f44c05f0e437109e00b5ac92e13087310",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah.. did a quick research and looks like the only safe way to do this is to clone the element and set the type to the new type. Not very practical. What do you wish to do?\n",
        "created_at": "2012-01-30T17:23:23Z",
        "updated_at": "2012-01-30T23:03:35Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2188#discussion_r397793",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2188",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/397793"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2188#discussion_r397793"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2188"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/399058",
        "pull_request_review_id": null,
        "id": 399058,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA1OA==",
        "diff_hunk": "@@ -74,13 +74,32 @@ describe('Element', function(){\n \t\tdescribe('type', function(){\n \n \t\t\tit('should set the type of a button', function(){\n-\t\t\t\texpect(new Element('button', {type: 'button'}).get('type')).toEqual('button');\n+\t\t\t\tvar button = new Element('button', {type: 'button'})\n+\t\t\t\texpect(button.get('type')).toEqual('button');\n+\t\t\t\texpect(function(){",
        "path": "Specs/1.4client/Element/Element.js",
        "position": null,
        "original_position": 7,
        "commit_id": "4f6981e24ad6a384bbb2664c8c1c0c2fa3e8b99f",
        "original_commit_id": "4c0a7e8f44c05f0e437109e00b5ac92e13087310",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yes, we can keep it like it is. This never has been a big problem, and trying to create a patch for that is even magnitudes uglier than the .outerHTML ;) I'll update the pr so you can pull it.\n",
        "created_at": "2012-01-30T21:39:00Z",
        "updated_at": "2012-01-30T23:03:35Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2188#discussion_r399058",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2188",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/399058"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2188#discussion_r399058"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2188"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/399111",
        "pull_request_review_id": null,
        "id": 399111,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTExMQ==",
        "diff_hunk": "@@ -74,13 +74,32 @@ describe('Element', function(){\n \t\tdescribe('type', function(){\n \n \t\t\tit('should set the type of a button', function(){\n-\t\t\t\texpect(new Element('button', {type: 'button'}).get('type')).toEqual('button');\n+\t\t\t\tvar button = new Element('button', {type: 'button'})\n+\t\t\t\texpect(button.get('type')).toEqual('button');\n+\t\t\t\texpect(function(){",
        "path": "Specs/1.4client/Element/Element.js",
        "position": null,
        "original_position": 7,
        "commit_id": "4f6981e24ad6a384bbb2664c8c1c0c2fa3e8b99f",
        "original_commit_id": "4c0a7e8f44c05f0e437109e00b5ac92e13087310",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "lawl, let me know when it's ready. \n\n.. and the outerHTML fix is _too legit to quit_\n",
        "created_at": "2012-01-30T21:49:51Z",
        "updated_at": "2012-01-30T23:03:35Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2188#discussion_r399111",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2188",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/399111"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2188#discussion_r399111"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2188"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/417180",
        "pull_request_review_id": null,
        "id": 417180,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4MA==",
        "diff_hunk": "@@ -18,6 +18,13 @@ provides: Element.Style\n \n var html = document.html;\n \n+// Check for oldIE, which does not remove styles when they're set to null",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 4,
        "commit_id": "0e17e4c8cd92c2e9a2b91795789263be4873b492",
        "original_commit_id": "5fba3d4c23656924c3ae9b8a6cdc6bb195979a17",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Missing `/*<ltIE8>*/`\n",
        "created_at": "2012-02-05T04:07:05Z",
        "updated_at": "2012-02-05T21:17:01Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2274#discussion_r417180",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2274",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/417180"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2274#discussion_r417180"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2274"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/417181",
        "pull_request_review_id": null,
        "id": 417181,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4MQ==",
        "diff_hunk": "@@ -68,7 +77,7 @@ Element.implement({\n \n \tsetStyle: function(property, value){\n \t\tif (property == 'opacity'){\n-\t\t\tsetOpacity(this, parseFloat(value));\n+\t\t\tsetOpacity(this, value == null ? value : parseFloat(value));",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 45,
        "commit_id": "0e17e4c8cd92c2e9a2b91795789263be4873b492",
        "original_commit_id": "5fba3d4c23656924c3ae9b8a6cdc6bb195979a17",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`if (value) value = parseFloat(value);`\n",
        "created_at": "2012-02-05T04:12:21Z",
        "updated_at": "2012-02-05T21:17:01Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2274#discussion_r417181",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2274",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/417181"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2274#discussion_r417181"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2274"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/417182",
        "pull_request_review_id": null,
        "id": 417182,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4Mg==",
        "diff_hunk": "@@ -28,17 +35,19 @@ var hasOpacity = (html.style.opacity != null),\n \n var setVisibility = function(element, opacity){\n \telement.store('$opacity', opacity);\n-\telement.style.visibility = opacity > 0 ? 'visible' : 'hidden';\n+\telement.style.visibility = opacity > 0 || opacity == null ? 'visible' : 'hidden';\n };\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n } : (hasFilter ? function(element, opacity){\n-\tif (!element.currentStyle || !element.currentStyle.hasLayout) element.style.zoom = 1;\n-\topacity = (opacity * 100).limit(0, 100).round();\n-\topacity = (opacity == 100) ? '' : 'alpha(opacity=' + opacity + ')';\n-\tvar filter = element.style.filter || element.getComputedStyle('filter') || '';\n-\telement.style.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n+\tvar style = element.style;\n+\tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n+\tif (opacity == null) opacity = '';\n+\telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n+\tvar filter = style.filter || element.getComputedStyle('filter') || '';\n+\tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;",
        "path": "Source/Element/Element.Style.js",
        "position": 37,
        "original_position": 35,
        "commit_id": "0e17e4c8cd92c2e9a2b91795789263be4873b492",
        "original_commit_id": "5fba3d4c23656924c3ae9b8a6cdc6bb195979a17",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What about other filters? Say.. shadow or blur.\n",
        "created_at": "2012-02-05T04:14:55Z",
        "updated_at": "2012-02-05T21:17:01Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2274#discussion_r417182",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2274",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/417182"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2274#discussion_r417182"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2274"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/419386",
        "pull_request_review_id": null,
        "id": 419386,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4Ng==",
        "diff_hunk": "@@ -89,6 +89,7 @@ Element.implement({\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n \t\tvar result = this.style[property];\n+\t\tif (property == 'clip') result = result.replace(/,\\s*/g, ' ');",
        "path": "Source/Element/Element.Style.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "baff862805c0b3c4668689563f5d262d9671916f",
        "original_commit_id": "baff862805c0b3c4668689563f5d262d9671916f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think we should follow the spec here and return `rect(<top>, <right>, <bottom>, <left>)`, so with the commas. Maybe we can create a Fx.CSS.Parsers which support comma separated values?\n",
        "created_at": "2012-02-06T16:23:55Z",
        "updated_at": "2012-02-06T16:23:55Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2276#discussion_r419386",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2276",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/419386"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2276#discussion_r419386"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2276"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/419533",
        "pull_request_review_id": null,
        "id": 419533,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUzMw==",
        "diff_hunk": "@@ -89,6 +89,7 @@ Element.implement({\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n \t\tvar result = this.style[property];\n+\t\tif (property == 'clip') result = result.replace(/,\\s*/g, ' ');",
        "path": "Source/Element/Element.Style.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "baff862805c0b3c4668689563f5d262d9671916f",
        "original_commit_id": "baff862805c0b3c4668689563f5d262d9671916f",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah that was problematic.\n\nI tried to go from (a b c d) to (a, b, c, d) but the second spec would fail because the `Element.Styles` for clip were updated to: `rect(@px, @px, @px, @px)` and since `(a, b, c, d)` is `split(' ')` to `['rect(a', 'b', 'c', 'd']` and set style maps values to `Element.Styles` .. but the first split is `rect(@px,` and value is `rect(a` a string and not a number, it'll just place that value in the result:\n\n`rect(a b, c, d)` this caused all browsers to fail since they couldn't parse the clip value.\n\n## \n\nEither we fix again in Fx.CSS.parser or we can just return space separate values. technically the developer has to support both interfaces. aka, consider the developer a user agent. \n",
        "created_at": "2012-02-06T16:50:59Z",
        "updated_at": "2012-02-06T16:50:59Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2276#discussion_r419533",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2276",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/419533"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2276#discussion_r419533"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2276"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/423489",
        "pull_request_review_id": null,
        "id": 423489,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ4OQ==",
        "diff_hunk": "@@ -28,17 +35,19 @@ var hasOpacity = (html.style.opacity != null),\n \n var setVisibility = function(element, opacity){\n \telement.store('$opacity', opacity);\n-\telement.style.visibility = opacity > 0 ? 'visible' : 'hidden';\n+\telement.style.visibility = opacity > 0 || opacity == null ? 'visible' : 'hidden';\n };\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n } : (hasFilter ? function(element, opacity){\n-\tif (!element.currentStyle || !element.currentStyle.hasLayout) element.style.zoom = 1;\n-\topacity = (opacity * 100).limit(0, 100).round();\n-\topacity = (opacity == 100) ? '' : 'alpha(opacity=' + opacity + ')';\n-\tvar filter = element.style.filter || element.getComputedStyle('filter') || '';\n-\telement.style.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n+\tvar style = element.style;\n+\tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n+\tif (opacity == null) opacity = '';\n+\telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n+\tvar filter = style.filter || element.getComputedStyle('filter') || '';\n+\tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;",
        "path": "Source/Element/Element.Style.js",
        "position": 37,
        "original_position": 35,
        "commit_id": "0e17e4c8cd92c2e9a2b91795789263be4873b492",
        "original_commit_id": "5fba3d4c23656924c3ae9b8a6cdc6bb195979a17",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Note: covered in https://github.com/mootools/mootools-core/blob/master/Specs/1.3client/Element/Element.Style.js#L19-26\n",
        "created_at": "2012-02-07T14:46:48Z",
        "updated_at": "2012-02-07T14:46:48Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2274#discussion_r423489",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2274",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/423489"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2274#discussion_r423489"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2274"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/431025",
        "pull_request_review_id": null,
        "id": 431025,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyNQ==",
        "diff_hunk": "@@ -22,18 +22,31 @@ Fx.CSS = new Class({\n \n \tprepare: function(element, property, values){\n \t\tvalues = Array.from(values);\n-\t\tif (values[1] == null){\n-\t\t\tvalues[1] = values[0];\n-\t\t\tvalues[0] = element.getStyle(property);\n+\t\tvar from = values[0], to = values[1];\n+\t\tif (to == null){\n+\t\t\tto = from;\n+\t\t\tfrom = element.getStyle(property);\n+\t\t\tvar unit = this.options.unit;\n \t\t\t// adapted from: https://github.com/ryanmorr/fx/blob/master/fx.js#L299\n-\t\t\tif (this.options.unit != 'px'){\n-\t\t\t\telement.setStyle(property, values[1] + this.options.unit);\n-\t\t\t\tvalues[0] = (values[1] || 1) / parseFloat(element.getComputedStyle(property)) * (parseFloat(values[0]) || 0);\n-\t\t\t\telement.setStyle(property, values[0] + this.options.unit);\n+\t\t\tif (unit && from.slice(-unit.length) != unit && parseFloat(from) != 0){\n+\t\t\t\telement.setStyle(property, to + unit);\n+\t\t\t\tvar value = element.getComputedStyle(property);\n+\t\t\t\t// IE and Opera support pixelLeft or pixelWidth\n+\t\t\t\tif (!(/px$/.test(value))){\n+\t\t\t\t\tvalue = element.style[('pixel-' + property).camelCase()];\n+\t\t\t\t\tif (value == null){\n+\t\t\t\t\t\t// adapted from Dean Edwards' http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n+\t\t\t\t\t\tvar left = element.style.left;",
        "path": "Source/Fx/Fx.CSS.js",
        "position": 25,
        "original_position": 25,
        "commit_id": "a1330c50a97a06207a3384d3f633e18a8c8f8ae7",
        "original_commit_id": "63d61b66b2bf8f5966b3f1df3537c4c56737a00f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I removed some stuff, like `runtimeStyle` which is IE only, because this fix is for Opera as well. Not sure how important that is for IE. The test seems to work :D\n",
        "created_at": "2012-02-09T01:10:19Z",
        "updated_at": "2012-02-09T09:44:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2282#discussion_r431025",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2282",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/431025"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2282#discussion_r431025"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2282"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/435407",
        "pull_request_review_id": null,
        "id": 435407,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwNw==",
        "diff_hunk": "@@ -43,7 +43,9 @@ describe('Element.Style', function(){\n \t\t\texpect(this.element.getStyle('opacity')).toEqual(0.5);\n \t\t});\n \n-\t\tit('should set/overwrite the opacity', function(){\n+        // this test is disabled, because we have to remove the filter opacity\n+        // in oldIE, because of the ulgy aliasing.\n+\t\txit('should set/overwrite the opacity', function(){",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "ef71402244944f512645266c826a7af74c3d9b6a",
        "original_commit_id": "f06dcaef7578116e9b112b7d5a0bd619aba005d5",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`if (!window.ie)` ?\n",
        "created_at": "2012-02-09T22:15:52Z",
        "updated_at": "2012-02-09T22:40:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2286#discussion_r435407",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2286",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/435407"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2286#discussion_r435407"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2286"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/468841",
        "pull_request_review_id": null,
        "id": 468841,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MQ==",
        "diff_hunk": "@@ -22,18 +22,31 @@ Fx.CSS = new Class({\n \n \tprepare: function(element, property, values){\n \t\tvalues = Array.from(values);\n-\t\tif (values[1] == null){\n-\t\t\tvalues[1] = values[0];\n-\t\t\tvalues[0] = element.getStyle(property);\n+\t\tvar from = values[0], to = values[1];\n+\t\tif (to == null){\n+\t\t\tto = from;\n+\t\t\tfrom = element.getStyle(property);\n+\t\t\tvar unit = this.options.unit;\n \t\t\t// adapted from: https://github.com/ryanmorr/fx/blob/master/fx.js#L299",
        "path": "Source/Fx/Fx.CSS.js",
        "position": 12,
        "original_position": 12,
        "commit_id": "a1330c50a97a06207a3384d3f633e18a8c8f8ae7",
        "original_commit_id": "a1330c50a97a06207a3384d3f633e18a8c8f8ae7",
        "user": {
            "login": "fbender",
            "id": 357895,
            "node_id": "MDQ6VXNlcjM1Nzg5NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/357895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fbender",
            "html_url": "https://github.com/fbender",
            "followers_url": "https://api.github.com/users/fbender/followers",
            "following_url": "https://api.github.com/users/fbender/following{/other_user}",
            "gists_url": "https://api.github.com/users/fbender/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fbender/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fbender/subscriptions",
            "organizations_url": "https://api.github.com/users/fbender/orgs",
            "repos_url": "https://api.github.com/users/fbender/repos",
            "events_url": "https://api.github.com/users/fbender/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fbender/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This line should reference a commit, too. L299 can change easily ;-). Or remove the comment altogether.\n",
        "created_at": "2012-02-20T21:56:27Z",
        "updated_at": "2012-02-20T21:56:27Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2282#discussion_r468841",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2282",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/468841"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2282#discussion_r468841"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2282"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/377895",
        "pull_request_review_id": null,
        "id": 377895,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5NQ==",
        "diff_hunk": "@@ -535,8 +535,7 @@ Object.forEach(properties, function(real, key){\n var bools = [\n \t'compact', 'nowrap', 'ismap', 'declare', 'noshade', 'checked',\n \t'disabled', 'readOnly', 'multiple', 'selected', 'noresize',\n-\t'defer', 'defaultChecked', 'autofocus', 'controls', 'autoplay',\n-\t'loop'",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 5,
        "commit_id": "160cdb362fd2c4fa82197bc9a233583f578fc541",
        "original_commit_id": "c654bbcf4f102b7ef7ad2bbd8f6bc8d4f6d2a458",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "what happened to `loop`?\n",
        "created_at": "2012-01-23T22:38:14Z",
        "updated_at": "2012-03-02T01:18:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2249#discussion_r377895",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2249",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/377895"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2249#discussion_r377895"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2249"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/377899",
        "pull_request_review_id": null,
        "id": 377899,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5OQ==",
        "diff_hunk": "@@ -535,8 +535,7 @@ Object.forEach(properties, function(real, key){\n var bools = [\n \t'compact', 'nowrap', 'ismap', 'declare', 'noshade', 'checked',\n \t'disabled', 'readOnly', 'multiple', 'selected', 'noresize',\n-\t'defer', 'defaultChecked', 'autofocus', 'controls', 'autoplay',\n-\t'loop'",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 5,
        "commit_id": "160cdb362fd2c4fa82197bc9a233583f578fc541",
        "original_commit_id": "c654bbcf4f102b7ef7ad2bbd8f6bc8d4f6d2a458",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Make sure you're at the HEAD of mootools/master. \n\n`git fetch mootools`\n",
        "created_at": "2012-01-23T22:38:44Z",
        "updated_at": "2012-03-02T01:18:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2249#discussion_r377899",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2249",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/377899"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2249#discussion_r377899"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2249"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/377904",
        "pull_request_review_id": null,
        "id": 377904,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwNA==",
        "diff_hunk": "@@ -29,7 +29,7 @@ Request.HTML = new Class({\n \t},\n \n \tsuccess: function(text){\n-\t\tvar options = this.options, response = this.response;\n+\t\tvar options = Object.merge({}, oldOptions, this.requestOptions), this.options), response = this.response;",
        "path": "Source/Request/Request.HTML.js",
        "position": null,
        "original_position": 5,
        "commit_id": "160cdb362fd2c4fa82197bc9a233583f578fc541",
        "original_commit_id": "c654bbcf4f102b7ef7ad2bbd8f6bc8d4f6d2a458",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Where's `oldOptions` defined?\n",
        "created_at": "2012-01-23T22:39:29Z",
        "updated_at": "2012-03-02T01:18:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2249#discussion_r377904",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2249",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/377904"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2249#discussion_r377904"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2249"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/377937",
        "pull_request_review_id": null,
        "id": 377937,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkzNw==",
        "diff_hunk": "@@ -55,6 +55,14 @@ Request.HTML = new Class({\n \t\tif (options.evalScripts) Browser.exec(response.javascript);\n \n \t\tthis.onSuccess(response.tree, response.elements, response.html, response.javascript);\n+\t},\n+\n+\tsend: function(options){\n+\t\tthis.requestOptions = options;\n+\n+\t\tthis.parent(options);\n+\n+\t\treturn this;",
        "path": "Source/Request/Request.HTML.js",
        "position": null,
        "original_position": 20,
        "commit_id": "160cdb362fd2c4fa82197bc9a233583f578fc541",
        "original_commit_id": "c654bbcf4f102b7ef7ad2bbd8f6bc8d4f6d2a458",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "too much whitespace :(\n\n;)\n",
        "created_at": "2012-01-23T22:46:13Z",
        "updated_at": "2012-03-02T01:18:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2249#discussion_r377937",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2249",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/377937"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2249#discussion_r377937"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2249"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/378530",
        "pull_request_review_id": null,
        "id": 378530,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUzMA==",
        "diff_hunk": "@@ -29,7 +29,7 @@ Request.HTML = new Class({\n \t},\n \n \tsuccess: function(text){\n-\t\tvar options = this.options, response = this.response;\n+\t\tvar options = Object.merge({}, oldOptions, this.requestOptions), this.options), response = this.response;",
        "path": "Source/Request/Request.HTML.js",
        "position": null,
        "original_position": 5,
        "commit_id": "160cdb362fd2c4fa82197bc9a233583f578fc541",
        "original_commit_id": "c654bbcf4f102b7ef7ad2bbd8f6bc8d4f6d2a458",
        "user": {
            "login": "GCheung55",
            "id": 46033,
            "node_id": "MDQ6VXNlcjQ2MDMz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/46033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GCheung55",
            "html_url": "https://github.com/GCheung55",
            "followers_url": "https://api.github.com/users/GCheung55/followers",
            "following_url": "https://api.github.com/users/GCheung55/following{/other_user}",
            "gists_url": "https://api.github.com/users/GCheung55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GCheung55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GCheung55/subscriptions",
            "organizations_url": "https://api.github.com/users/GCheung55/orgs",
            "repos_url": "https://api.github.com/users/GCheung55/repos",
            "events_url": "https://api.github.com/users/GCheung55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GCheung55/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I copy/pasted the wrong line! Eff!\n",
        "created_at": "2012-01-24T01:32:10Z",
        "updated_at": "2012-03-02T01:18:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2249#discussion_r378530",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2249",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/378530"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2249#discussion_r378530"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2249"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/378541",
        "pull_request_review_id": null,
        "id": 378541,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU0MQ==",
        "diff_hunk": "@@ -535,8 +535,7 @@ Object.forEach(properties, function(real, key){\n var bools = [\n \t'compact', 'nowrap', 'ismap', 'declare', 'noshade', 'checked',\n \t'disabled', 'readOnly', 'multiple', 'selected', 'noresize',\n-\t'defer', 'defaultChecked', 'autofocus', 'controls', 'autoplay',\n-\t'loop'",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 5,
        "commit_id": "160cdb362fd2c4fa82197bc9a233583f578fc541",
        "original_commit_id": "c654bbcf4f102b7ef7ad2bbd8f6bc8d4f6d2a458",
        "user": {
            "login": "GCheung55",
            "id": 46033,
            "node_id": "MDQ6VXNlcjQ2MDMz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/46033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GCheung55",
            "html_url": "https://github.com/GCheung55",
            "followers_url": "https://api.github.com/users/GCheung55/followers",
            "following_url": "https://api.github.com/users/GCheung55/following{/other_user}",
            "gists_url": "https://api.github.com/users/GCheung55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GCheung55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GCheung55/subscriptions",
            "organizations_url": "https://api.github.com/users/GCheung55/orgs",
            "repos_url": "https://api.github.com/users/GCheung55/repos",
            "events_url": "https://api.github.com/users/GCheung55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GCheung55/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "My mistake. This part can be ignored...\n",
        "created_at": "2012-01-24T01:40:08Z",
        "updated_at": "2012-03-02T01:18:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2249#discussion_r378541",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2249",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/378541"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2249#discussion_r378541"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2249"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/378542",
        "pull_request_review_id": null,
        "id": 378542,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU0Mg==",
        "diff_hunk": "@@ -55,6 +55,14 @@ Request.HTML = new Class({\n \t\tif (options.evalScripts) Browser.exec(response.javascript);\n \n \t\tthis.onSuccess(response.tree, response.elements, response.html, response.javascript);\n+\t},\n+\n+\tsend: function(options){\n+\t\tthis.requestOptions = options;\n+\n+\t\tthis.parent(options);\n+\n+\t\treturn this;",
        "path": "Source/Request/Request.HTML.js",
        "position": null,
        "original_position": 20,
        "commit_id": "160cdb362fd2c4fa82197bc9a233583f578fc541",
        "original_commit_id": "c654bbcf4f102b7ef7ad2bbd8f6bc8d4f6d2a458",
        "user": {
            "login": "GCheung55",
            "id": 46033,
            "node_id": "MDQ6VXNlcjQ2MDMz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/46033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GCheung55",
            "html_url": "https://github.com/GCheung55",
            "followers_url": "https://api.github.com/users/GCheung55/followers",
            "following_url": "https://api.github.com/users/GCheung55/following{/other_user}",
            "gists_url": "https://api.github.com/users/GCheung55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GCheung55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GCheung55/subscriptions",
            "organizations_url": "https://api.github.com/users/GCheung55/orgs",
            "repos_url": "https://api.github.com/users/GCheung55/repos",
            "events_url": "https://api.github.com/users/GCheung55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GCheung55/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should all of this be compressed into 3 lines instead?\n",
        "created_at": "2012-01-24T01:40:46Z",
        "updated_at": "2012-03-02T01:18:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2249#discussion_r378542",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2249",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/378542"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2249#discussion_r378542"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2249"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/680862",
        "pull_request_review_id": null,
        "id": 680862,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg2Mg==",
        "diff_hunk": "@@ -800,6 +800,7 @@ var formProps = {input: 'checked', option: 'selected', textarea: 'value'};\n Element.implement({\n \n \tdestroy: function(){\n+        if(! this.getElementsByTagName) return null; //textNode",
        "path": "Source/Element/Element.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "4c68d391dd1d218a69e0f211ffbb503f30d9eb62",
        "original_commit_id": "4c68d391dd1d218a69e0f211ffbb503f30d9eb62",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nif (this.nodeType != 1) return this;\n```\n",
        "created_at": "2012-04-13T09:37:37Z",
        "updated_at": "2012-04-13T09:37:37Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2350#discussion_r680862",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2350",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/680862"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2350#discussion_r680862"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2350"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/680874",
        "pull_request_review_id": null,
        "id": 680874,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg3NA==",
        "diff_hunk": "@@ -807,11 +808,12 @@ Element.implement({\n \t},\n \n \tempty: function(){\n-\t\tArray.from(this.childNodes).each(Element.dispose);\n+\t\tArray.from(this.childNodes).each(Element.destroy);\n \t\treturn this;\n \t},\n \n \tdispose: function(){\n+        this._fireEvent = null;",
        "path": "Source/Element/Element.js",
        "position": 18,
        "original_position": 18,
        "commit_id": "4c68d391dd1d218a69e0f211ffbb503f30d9eb62",
        "original_commit_id": "4c68d391dd1d218a69e0f211ffbb503f30d9eb62",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What if you just add this line to the `clean` function.\n",
        "created_at": "2012-04-13T09:39:51Z",
        "updated_at": "2012-04-13T09:39:51Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2350#discussion_r680874",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2350",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/680874"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2350#discussion_r680874"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2350"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/680888",
        "pull_request_review_id": null,
        "id": 680888,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg4OA==",
        "diff_hunk": "@@ -800,6 +800,7 @@ var formProps = {input: 'checked', option: 'selected', textarea: 'value'};\n Element.implement({\n \n \tdestroy: function(){\n+        if(! this.getElementsByTagName) return null; //textNode",
        "path": "Source/Element/Element.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "4c68d391dd1d218a69e0f211ffbb503f30d9eb62",
        "original_commit_id": "4c68d391dd1d218a69e0f211ffbb503f30d9eb62",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nif (this.nodeType == 1){\n        var children = clean(this).getElementsByTagName('*');\n        Array.each(children, clean);\n}\nElement.dispose(this);\nreturn null;\n```\n",
        "created_at": "2012-04-13T09:42:34Z",
        "updated_at": "2012-04-13T09:42:34Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2350#discussion_r680888",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2350",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/680888"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2350#discussion_r680888"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2350"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/680892",
        "pull_request_review_id": null,
        "id": 680892,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg5Mg==",
        "diff_hunk": "@@ -949,6 +951,13 @@ Element.Properties.html = {\n \n };\n \n+// fix for IE leak on Element.set('text','')\n+Element.Properties.text = {\n+    set: function(text){\n+        Element.prototype.empty.call(this).setProperty('text',text);",
        "path": "Source/Element/Element.js",
        "position": 29,
        "original_position": 29,
        "commit_id": "4c68d391dd1d218a69e0f211ffbb503f30d9eb62",
        "original_commit_id": "4c68d391dd1d218a69e0f211ffbb503f30d9eb62",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't understand why\n\n``` js\nthis.empty().setProperty('text', text);\n```\n\nwould not work too.\n",
        "created_at": "2012-04-13T09:43:52Z",
        "updated_at": "2012-04-13T09:43:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2350#discussion_r680892",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2350",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/680892"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2350#discussion_r680892"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2350"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/681149",
        "pull_request_review_id": null,
        "id": 681149,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTE0OQ==",
        "diff_hunk": "@@ -949,6 +951,13 @@ Element.Properties.html = {\n \n };\n \n+// fix for IE leak on Element.set('text','')\n+Element.Properties.text = {\n+    set: function(text){\n+        Element.prototype.empty.call(this).setProperty('text',text);",
        "path": "Source/Element/Element.js",
        "position": 29,
        "original_position": 29,
        "commit_id": "4c68d391dd1d218a69e0f211ffbb503f30d9eb62",
        "original_commit_id": "4c68d391dd1d218a69e0f211ffbb503f30d9eb62",
        "user": {
            "login": "Inviz",
            "id": 2708,
            "node_id": "MDQ6VXNlcjI3MDg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2708?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Inviz",
            "html_url": "https://github.com/Inviz",
            "followers_url": "https://api.github.com/users/Inviz/followers",
            "following_url": "https://api.github.com/users/Inviz/following{/other_user}",
            "gists_url": "https://api.github.com/users/Inviz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Inviz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Inviz/subscriptions",
            "organizations_url": "https://api.github.com/users/Inviz/orgs",
            "repos_url": "https://api.github.com/users/Inviz/repos",
            "events_url": "https://api.github.com/users/Inviz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Inviz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Probably he uses it on textnodes as a generic?\n",
        "created_at": "2012-04-13T11:16:54Z",
        "updated_at": "2012-04-13T11:16:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2350#discussion_r681149",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2350",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/681149"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2350#discussion_r681149"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2350"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/682493",
        "pull_request_review_id": null,
        "id": 682493,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MjQ5Mw==",
        "diff_hunk": "@@ -792,6 +792,11 @@ var clean = function(item){\n \t\tdelete collected[uid];\n \t\tdelete storage[uid];\n \t}\n+    var props = ['_fireEvent','$family','$constructor'];\n+    props.each(function(property){\n+        if(property in item) delete item[property];",
        "path": "Source/Element/Element.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "f59f069d20ea44b8496333f56eef8c012ae34a6c",
        "original_commit_id": "f59f069d20ea44b8496333f56eef8c012ae34a6c",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "had to check for existence because otherwise IE throw some nasty error. (Object doesn't support this action)\n",
        "created_at": "2012-04-13T16:36:34Z",
        "updated_at": "2012-04-13T16:36:34Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2351#discussion_r682493",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2351",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/682493"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2351#discussion_r682493"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2351"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1085612",
        "pull_request_review_id": null,
        "id": 1085612,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU2MTI=",
        "diff_hunk": "@@ -792,6 +792,11 @@ var clean = function(item){\n \t\tdelete collected[uid];\n \t\tdelete storage[uid];\n \t}\n+    var props = ['_fireEvent','$family','$constructor'];\n+    props.each(function(property){\n+        if(property in item) delete item[property];",
        "path": "Source/Element/Element.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "f59f069d20ea44b8496333f56eef8c012ae34a6c",
        "original_commit_id": "f59f069d20ea44b8496333f56eef8c012ae34a6c",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do you know why clearAttributes doesn't handle this, or is it because those things begin with `$` or `_`?\n",
        "created_at": "2012-07-02T16:38:17Z",
        "updated_at": "2012-07-02T16:38:17Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2351#discussion_r1085612",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2351",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1085612"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2351#discussion_r1085612"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2351"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1085662",
        "pull_request_review_id": null,
        "id": 1085662,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU2NjI=",
        "diff_hunk": "@@ -792,6 +792,11 @@ var clean = function(item){\n \t\tdelete collected[uid];\n \t\tdelete storage[uid];\n \t}\n+    var props = ['_fireEvent','$family','$constructor'];\n+    props.each(function(property){\n+        if(property in item) delete item[property];",
        "path": "Source/Element/Element.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "f59f069d20ea44b8496333f56eef8c012ae34a6c",
        "original_commit_id": "f59f069d20ea44b8496333f56eef8c012ae34a6c",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "http://msdn.microsoft.com/en-us/library/ie/ms536350(v=vs.85).aspx\nThe clearAttributes method clears only persistent HTML attributes. The ID attribute, styles, and script-only properties are not affected.\n",
        "created_at": "2012-07-02T16:45:24Z",
        "updated_at": "2012-07-02T16:45:24Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2351#discussion_r1085662",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2351",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1085662"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2351#discussion_r1085662"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2351"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1273574",
        "pull_request_review_id": null,
        "id": 1273574,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzM1NzQ=",
        "diff_hunk": "@@ -694,16 +696,24 @@ Element.implement({\n \t\treturn this;\n \t},\n \n-\thasClass: function(className){\n+\thasClass: hasClassList ? function(className) {\n+    return this.classList.contains(className);\n+  }: function(className){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 16,
        "commit_id": "bd6ac113600fa508017c29237cf03c36171e9603",
        "original_commit_id": "b969a444e9e4d856d7d28e11205f11a1cb44fdbb",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "space! :disappointed:\n",
        "created_at": "2012-07-31T14:29:28Z",
        "updated_at": "2012-07-31T14:30:43Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2390#discussion_r1273574",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2390",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1273574"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2390#discussion_r1273574"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2390"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1273577",
        "pull_request_review_id": null,
        "id": 1273577,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzM1Nzc=",
        "diff_hunk": "@@ -694,16 +696,24 @@ Element.implement({\n \t\treturn this;\n \t},\n \n-\thasClass: function(className){\n+\thasClass: hasClassList ? function(className) {\n+    return this.classList.contains(className);\n+  }: function(className){\n \t\treturn this.className.clean().contains(className, ' ');\n \t},\n \n-\taddClass: function(className){\n+\taddClass: hasClassList ? function(className) {\n+    this.classList.add(className);\n+    return this;\n+  } : function(className){\n \t\tif (!this.hasClass(className)) this.className = (this.className + ' ' + className).clean();\n \t\treturn this;\n \t},\n \n-\tremoveClass: function(className){\n+\tremoveClass: hasClassList ? function(className) {\n+    this.classList.remove(className);\n+    return this;\n+  }: function(className){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 33,
        "commit_id": "bd6ac113600fa508017c29237cf03c36171e9603",
        "original_commit_id": "b969a444e9e4d856d7d28e11205f11a1cb44fdbb",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "again.\n",
        "created_at": "2012-07-31T14:29:37Z",
        "updated_at": "2012-07-31T14:30:43Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2390#discussion_r1273577",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2390",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1273577"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2390#discussion_r1273577"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2390"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1327845",
        "pull_request_review_id": null,
        "id": 1327845,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjc4NDU=",
        "diff_hunk": "@@ -792,6 +792,11 @@ var clean = function(item){\n \t\tdelete collected[uid];\n \t\tdelete storage[uid];\n \t}\n+    var props = ['_fireEvent','$family','$constructor'];\n+    props.each(function(property){\n+        if(property in item) delete item[property];",
        "path": "Source/Element/Element.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "f59f069d20ea44b8496333f56eef8c012ae34a6c",
        "original_commit_id": "f59f069d20ea44b8496333f56eef8c012ae34a6c",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's still weird though.. because all other methods are added with `Object.append` as well, which boils down to simply `element.set = function...`. So why do you have to delete `_fireEvent` manually, but not any other method..\n",
        "created_at": "2012-08-07T23:44:53Z",
        "updated_at": "2012-08-07T23:44:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2351#discussion_r1327845",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2351",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1327845"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2351#discussion_r1327845"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2351"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1327736",
        "pull_request_review_id": null,
        "id": 1327736,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjc3MzY=",
        "diff_hunk": "@@ -100,11 +100,13 @@ Fx.CSS = new Class({\n \tsearch: function(selector){\n \t\tif (Fx.CSS.Cache[selector]) return Fx.CSS.Cache[selector];\n \t\tvar to = {}, selectorTest = new RegExp('^' + selector.escapeRegExp() + '$');\n-\t\tArray.each(document.styleSheets, function(sheet, j){\n-\t\t\tvar href = sheet.href;\n-\t\t\tif (href && href.contains('://') && !href.contains(document.domain)) return;\n-\t\t\tvar rules = sheet.rules || sheet.cssRules;\n+\n+\t\tvar searchStyles = function(rules) {",
        "path": "Source/Fx/Fx.CSS.js",
        "position": null,
        "original_position": 9,
        "commit_id": "3a5e03d0eb2803d3ca1c380b0f083fb6ff1d778f",
        "original_commit_id": "bdb977cd27313f93d25f62f0e6425c270c699ea9",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "could you remove the space between `)` and `{` so it matches the code style?\n",
        "created_at": "2012-08-07T23:26:16Z",
        "updated_at": "2012-08-08T06:31:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2386#discussion_r1327736",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2386",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1327736"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2386#discussion_r1327736"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2386"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354150",
        "pull_request_review_id": null,
        "id": 1354150,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTQxNTA=",
        "diff_hunk": "@@ -158,5 +158,22 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('getComputedStyle margin-left on detached element', function(){\n+\n+\t\tvar element;\n \n+\t\tit('[beforeAll]', function(){\n+\t\t\telement = new Element('div');\n+\t\t});\n+\n+\t\tit('should have a non-null margin-left', function(){\n+\t\t\texpect(element.getComputedStyle('margin-left')).not.toEqual(null);\n+\t\t});\n+\n+\t\tit('[afterAll]', function(){\n+\t\t\telement.destroy();",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": null,
        "original_position": 18,
        "commit_id": "101013db6fd4f3323c7459d86187b4ac02fa5e55",
        "original_commit_id": "6ae9b0593b2f002fc36ca7792ed714f017a3b98f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you don't really need this, because you don't inject it in the DOM..\n",
        "created_at": "2012-08-10T18:25:21Z",
        "updated_at": "2012-08-10T18:45:14Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354150",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2403",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354150"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354150"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2403"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354222",
        "pull_request_review_id": null,
        "id": 1354222,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTQyMjI=",
        "diff_hunk": "@@ -158,5 +158,22 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('getComputedStyle margin-left on detached element', function(){\n+\n+\t\tvar element;\n \n+\t\tit('[beforeAll]', function(){\n+\t\t\telement = new Element('div');\n+\t\t});\n+\n+\t\tit('should have a non-null margin-left', function(){\n+\t\t\texpect(element.getComputedStyle('margin-left')).not.toEqual(null);\n+\t\t});\n+\n+\t\tit('[afterAll]', function(){\n+\t\t\telement.destroy();",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": null,
        "original_position": 18,
        "commit_id": "101013db6fd4f3323c7459d86187b4ac02fa5e55",
        "original_commit_id": "6ae9b0593b2f002fc36ca7792ed714f017a3b98f",
        "user": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "he still should clean up the memory leak (IE). best practice.\n",
        "created_at": "2012-08-10T18:32:09Z",
        "updated_at": "2012-08-10T18:45:14Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354222",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2403",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354222"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354222"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2403"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354238",
        "pull_request_review_id": null,
        "id": 1354238,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTQyMzg=",
        "diff_hunk": "@@ -158,5 +158,22 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('getComputedStyle margin-left on detached element', function(){\n+\n+\t\tvar element;\n \n+\t\tit('[beforeAll]', function(){\n+\t\t\telement = new Element('div');\n+\t\t});\n+\n+\t\tit('should have a non-null margin-left', function(){\n+\t\t\texpect(element.getComputedStyle('margin-left')).not.toEqual(null);\n+\t\t});\n+\n+\t\tit('[afterAll]', function(){\n+\t\t\telement.destroy();",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": null,
        "original_position": 18,
        "commit_id": "101013db6fd4f3323c7459d86187b4ac02fa5e55",
        "original_commit_id": "6ae9b0593b2f002fc36ca7792ed714f017a3b98f",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you are right, should I null it anyways or we trust the gc to go over it?\n",
        "created_at": "2012-08-10T18:33:01Z",
        "updated_at": "2012-08-10T18:45:14Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354238",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2403",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354238"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354238"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2403"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354311",
        "pull_request_review_id": null,
        "id": 1354311,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTQzMTE=",
        "diff_hunk": "@@ -158,5 +158,22 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('getComputedStyle margin-left on detached element', function(){\n+\n+\t\tvar element;\n \n+\t\tit('[beforeAll]', function(){\n+\t\t\telement = new Element('div');\n+\t\t});\n+\n+\t\tit('should have a non-null margin-left', function(){\n+\t\t\texpect(element.getComputedStyle('margin-left')).not.toEqual(null);\n+\t\t});\n+\n+\t\tit('[afterAll]', function(){\n+\t\t\telement.destroy();",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": null,
        "original_position": 18,
        "commit_id": "101013db6fd4f3323c7459d86187b4ac02fa5e55",
        "original_commit_id": "6ae9b0593b2f002fc36ca7792ed714f017a3b98f",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "hehe. never trust the IE gc.\n\nOn Fri, Aug 10, 2012 at 1:33 PM, gonchuki notifications@github.com wrote:\n\n> In Specs/1.4client/Element/Element.Style.js:\n> \n> > -       it('[beforeAll]', function(){\n> > -           element = new Element('div');\n> > -       });\n> >   +\n> > -       it('should have a non-null margin-left', function(){\n> > -           expect(element.getComputedStyle('margin-left')).not.toEqual(null);\n> > -       });\n> >   +\n> > -       it('[afterAll]', function(){\n> > -           element.destroy();\n> \n> you are right, should I null it anyways or we trust the gc to go over it?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mootools/mootools-core/pull/2403/files#r1354238.\n",
        "created_at": "2012-08-10T18:40:00Z",
        "updated_at": "2012-08-10T18:45:15Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354311",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2403",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354311"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354311"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2403"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354332",
        "pull_request_review_id": null,
        "id": 1354332,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTQzMzI=",
        "diff_hunk": "@@ -158,5 +158,22 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('getComputedStyle margin-left on detached element', function(){\n+\n+\t\tvar element;\n \n+\t\tit('[beforeAll]', function(){\n+\t\t\telement = new Element('div');\n+\t\t});\n+\n+\t\tit('should have a non-null margin-left', function(){\n+\t\t\texpect(element.getComputedStyle('margin-left')).not.toEqual(null);\n+\t\t});\n+\n+\t\tit('[afterAll]', function(){\n+\t\t\telement.destroy();",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": null,
        "original_position": 18,
        "commit_id": "101013db6fd4f3323c7459d86187b4ac02fa5e55",
        "original_commit_id": "6ae9b0593b2f002fc36ca7792ed714f017a3b98f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nexpect(document.createElement('div').getComputedStyle('margin-left')).not.toEqual(null);\n```\n\nyou're right, however in most places we just use, and it will be cleaned up after onunload.\n\n``` js\nnew Element('div').getComputedStyle('margin-left')).not.toEqual(null);\n```\n",
        "created_at": "2012-08-10T18:41:43Z",
        "updated_at": "2012-08-10T18:45:15Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354332",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2403",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354332"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354332"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2403"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354344",
        "pull_request_review_id": null,
        "id": 1354344,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTQzNDQ=",
        "diff_hunk": "@@ -158,5 +158,22 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('getComputedStyle margin-left on detached element', function(){\n+\n+\t\tvar element;\n \n+\t\tit('[beforeAll]', function(){\n+\t\t\telement = new Element('div');\n+\t\t});\n+\n+\t\tit('should have a non-null margin-left', function(){\n+\t\t\texpect(element.getComputedStyle('margin-left')).not.toEqual(null);\n+\t\t});\n+\n+\t\tit('[afterAll]', function(){\n+\t\t\telement.destroy();",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": null,
        "original_position": 18,
        "commit_id": "101013db6fd4f3323c7459d86187b4ac02fa5e55",
        "original_commit_id": "6ae9b0593b2f002fc36ca7792ed714f017a3b98f",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "if that's how it's done everywhere else I will go with that. adding commit...\n",
        "created_at": "2012-08-10T18:43:28Z",
        "updated_at": "2012-08-10T18:45:15Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354344",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2403",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1354344"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2403#discussion_r1354344"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2403"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1365718",
        "pull_request_review_id": null,
        "id": 1365718,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjU3MTg=",
        "diff_hunk": "@@ -131,6 +135,11 @@ Element.implement({\n \t\t\tif ((/^border(.+)Width|margin|padding/).test(property) && isNaN(parseFloat(result))){\n \t\t\t\treturn '0px';\n \t\t\t}\n+\t\t\t//<ltIE9>\n+\t\t\tif (returnsBordersInWrongOrder && /^border(Top|Right|Bottom|Left)?$/.test(property) && /^#.+/.test(result)) {",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "18e20b075e4f53e6e0b3d9b4048fc8a130512af8",
        "original_commit_id": "c7cbdc6bdd67985c68d3f52564d364dcb80d1720",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "just a note here, the last check (`/^#.+/`) is there because if you only set 2 components of a border (say, `borderLeftWidth` and `borderLeftColor`) IE would actually return the styles in the correct order. It's only after you set the 3 components that you get the color as the first component.\n",
        "created_at": "2012-08-13T19:40:23Z",
        "updated_at": "2012-08-13T21:02:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1365718",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2405",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1365718"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1365718"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1365821",
        "pull_request_review_id": null,
        "id": 1365821,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjU4MjE=",
        "diff_hunk": "@@ -131,6 +135,11 @@ Element.implement({\n \t\t\tif ((/^border(.+)Width|margin|padding/).test(property) && isNaN(parseFloat(result))){\n \t\t\t\treturn '0px';\n \t\t\t}\n+\t\t\t//<ltIE9>\n+\t\t\tif (returnsBordersInWrongOrder && /^border(Top|Right|Bottom|Left)?$/.test(property) && /^#.+/.test(result)) {",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "18e20b075e4f53e6e0b3d9b4048fc8a130512af8",
        "original_commit_id": "c7cbdc6bdd67985c68d3f52564d364dcb80d1720",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "i'm not a regex expert, but how does this regex check if it are 2 or 3 components?\n",
        "created_at": "2012-08-13T19:52:18Z",
        "updated_at": "2012-08-13T21:02:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1365821",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1365821"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1365821"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1365844",
        "pull_request_review_id": null,
        "id": 1365844,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjU4NDQ=",
        "diff_hunk": "@@ -131,6 +135,11 @@ Element.implement({\n \t\t\tif ((/^border(.+)Width|margin|padding/).test(property) && isNaN(parseFloat(result))){\n \t\t\t\treturn '0px';\n \t\t\t}\n+\t\t\t//<ltIE9>\n+\t\t\tif (returnsBordersInWrongOrder && /^border(Top|Right|Bottom|Left)?$/.test(property) && /^#.+/.test(result)) {",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "18e20b075e4f53e6e0b3d9b4048fc8a130512af8",
        "original_commit_id": "c7cbdc6bdd67985c68d3f52564d364dcb80d1720",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "it just checks if there is a `#` right.. so that would be for the color.. does it always return a hex code, even if it's set with rgb?\n",
        "created_at": "2012-08-13T19:54:34Z",
        "updated_at": "2012-08-13T21:02:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1365844",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1365844"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1365844"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366057",
        "pull_request_review_id": null,
        "id": 1366057,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjYwNTc=",
        "diff_hunk": "@@ -131,6 +135,11 @@ Element.implement({\n \t\t\tif ((/^border(.+)Width|margin|padding/).test(property) && isNaN(parseFloat(result))){\n \t\t\t\treturn '0px';\n \t\t\t}\n+\t\t\t//<ltIE9>\n+\t\t\tif (returnsBordersInWrongOrder && /^border(Top|Right|Bottom|Left)?$/.test(property) && /^#.+/.test(result)) {",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "18e20b075e4f53e6e0b3d9b4048fc8a130512af8",
        "original_commit_id": "c7cbdc6bdd67985c68d3f52564d364dcb80d1720",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "previous code already converts rgb to hex: https://github.com/mootools/mootools-core/blob/master/Source/Element/Element.Style.js#L121\nalso, the border\\* styles always return 3 components (unset values just return the browser defaults).\n",
        "created_at": "2012-08-13T20:13:47Z",
        "updated_at": "2012-08-13T21:02:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366057",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2405",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366057"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366057"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366100",
        "pull_request_review_id": null,
        "id": 1366100,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjYxMDA=",
        "diff_hunk": "@@ -24,6 +24,10 @@ var el = document.createElement('div');\n el.style.color = 'red';\n el.style.color = null;\n var doesNotRemoveStyles = el.style.color == 'red';\n+\n+// check for oldIE, which returns border* shorthand styles in the wrong order (color-width-style instead of width-style-color)\n+el.style.border = '1px solid #123abc';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 6,
        "commit_id": "18e20b075e4f53e6e0b3d9b4048fc8a130512af8",
        "original_commit_id": "c7cbdc6bdd67985c68d3f52564d364dcb80d1720",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nvar border = '1px solid #123abc'; // allows js compressors to do their job\nel.style.border = border;\nvar returnsBorderInWrongOrder = (el.style.border != border);\n```\n",
        "created_at": "2012-08-13T20:18:24Z",
        "updated_at": "2012-08-13T21:02:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366100",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366100"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366100"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366129",
        "pull_request_review_id": null,
        "id": 1366129,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjYxMjk=",
        "diff_hunk": "@@ -24,6 +24,10 @@ var el = document.createElement('div');\n el.style.color = 'red';\n el.style.color = null;\n var doesNotRemoveStyles = el.style.color == 'red';\n+\n+// check for oldIE, which returns border* shorthand styles in the wrong order (color-width-style instead of width-style-color)\n+el.style.border = '1px solid #123abc';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 6,
        "commit_id": "18e20b075e4f53e6e0b3d9b4048fc8a130512af8",
        "original_commit_id": "c7cbdc6bdd67985c68d3f52564d364dcb80d1720",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "right, did it on the spec and forgot to port it back here where it really matters.\n",
        "created_at": "2012-08-13T20:19:51Z",
        "updated_at": "2012-08-13T21:02:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366129",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2405",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366129"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366129"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366193",
        "pull_request_review_id": null,
        "id": 1366193,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjYxOTM=",
        "diff_hunk": "@@ -131,6 +135,11 @@ Element.implement({\n \t\t\tif ((/^border(.+)Width|margin|padding/).test(property) && isNaN(parseFloat(result))){\n \t\t\t\treturn '0px';\n \t\t\t}\n+\t\t\t//<ltIE9>\n+\t\t\tif (returnsBordersInWrongOrder && /^border(Top|Right|Bottom|Left)?$/.test(property) && /^#.+/.test(result)) {",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "18e20b075e4f53e6e0b3d9b4048fc8a130512af8",
        "original_commit_id": "c7cbdc6bdd67985c68d3f52564d364dcb80d1720",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nif (... /^#/.test(result)){\n```\n\nNot the lack of need for `.+` and removal of extra space after `) {`\n",
        "created_at": "2012-08-13T20:25:41Z",
        "updated_at": "2012-08-13T21:02:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366193",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366193"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366193"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366200",
        "pull_request_review_id": null,
        "id": 1366200,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjYyMDA=",
        "diff_hunk": "@@ -131,6 +135,11 @@ Element.implement({\n \t\t\tif ((/^border(.+)Width|margin|padding/).test(property) && isNaN(parseFloat(result))){\n \t\t\t\treturn '0px';\n \t\t\t}\n+\t\t\t//<ltIE9>\n+\t\t\tif (returnsBordersInWrongOrder && /^border(Top|Right|Bottom|Left)?$/.test(property) && /^#.+/.test(result)) {",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "18e20b075e4f53e6e0b3d9b4048fc8a130512af8",
        "original_commit_id": "c7cbdc6bdd67985c68d3f52564d364dcb80d1720",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "or \n\n``` js\nresult.chartAt(0) == '#'\n```\n",
        "created_at": "2012-08-13T20:26:01Z",
        "updated_at": "2012-08-13T21:02:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366200",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366200"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366200"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366289",
        "pull_request_review_id": null,
        "id": 1366289,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjYyODk=",
        "diff_hunk": "@@ -158,5 +158,20 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('getStyle border after setStyle', function(){\n+\n+\t\tit('should have same order when getting a previously set border', function(){\n+\t\t\tvar border = '2px solid #123abc',\n+\t\t\t\telement = new Element('div', {\n+\t\t\t\t\tstyles: {\n+\t\t\t\t\t\t'border': border\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t\n+\t\t\texpect(element.getStyle('border')).toEqual(border);",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "18e20b075e4f53e6e0b3d9b4048fc8a130512af8",
        "original_commit_id": "9e7286f0b884ee5fc05355e9231fa8f70e90ecca",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is no big deal, but extra poitnts if you add a `element = null;` so that IE gc can collect the element.\n",
        "created_at": "2012-08-13T20:34:52Z",
        "updated_at": "2012-08-13T21:02:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366289",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366289"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366289"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366373",
        "pull_request_review_id": null,
        "id": 1366373,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjYzNzM=",
        "diff_hunk": "@@ -158,5 +158,20 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('getStyle border after setStyle', function(){\n+\n+\t\tit('should have same order when getting a previously set border', function(){\n+\t\t\tvar border = '2px solid #123abc',\n+\t\t\t\telement = new Element('div', {\n+\t\t\t\t\tstyles: {\n+\t\t\t\t\t\t'border': border\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t\n+\t\t\texpect(element.getStyle('border')).toEqual(border);",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "18e20b075e4f53e6e0b3d9b4048fc8a130512af8",
        "original_commit_id": "9e7286f0b884ee5fc05355e9231fa8f70e90ecca",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh and just fyi, this could have worked without worry of IE gc:\n\n``` js\nvar border = '2px solid #123abc';\nexpect(new Element('div').setStyle('border', border).getStyle('border')).toEqual(border);\n```\n",
        "created_at": "2012-08-13T20:42:50Z",
        "updated_at": "2012-08-13T21:02:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366373",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366373"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2405#discussion_r1366373"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366922",
        "pull_request_review_id": null,
        "id": 1366922,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjY5MjI=",
        "diff_hunk": "@@ -196,7 +209,7 @@ var Request = this.Request = new Class({\n \t\t\txhr.onprogress = this.progress.bind(this);\n \t\t}\n \n-\t\txhr.open(method.toUpperCase(), url, this.options.async, this.options.user, this.options.password);\n+\t\txhr.open(upperMethod, url, this.options.async, this.options.user, this.options.password);",
        "path": "Source/Request/Request.js",
        "position": 32,
        "original_position": 32,
        "commit_id": "c9ceae9a47642596bca8295dcad049a3fa58ff8a",
        "original_commit_id": "c9ceae9a47642596bca8295dcad049a3fa58ff8a",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\n\nthis.method = method.toUpperCase();\nthis.url = url;\n\n// ...\n\nxhr.open(this.method, url, // ...\n```\n",
        "created_at": "2012-08-13T21:39:39Z",
        "updated_at": "2012-08-13T21:39:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2399#discussion_r1366922",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2399",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366922"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2399#discussion_r1366922"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2399"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366940",
        "pull_request_review_id": null,
        "id": 1366940,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjY5NDA=",
        "diff_hunk": "@@ -248,6 +248,46 @@ Returns the given response header or null if not found.\n \t\talert(this.getHeader('Date')); // alerts the server date (for example, 'Thu, 26 Feb 2009 20:26:06 GMT')\n \t}});\n \n+Request Method: getUrl {#Request:getUrl}",
        "path": "Docs/Request/Request.md",
        "position": 4,
        "original_position": 4,
        "commit_id": "c9ceae9a47642596bca8295dcad049a3fa58ff8a",
        "original_commit_id": "c9ceae9a47642596bca8295dcad049a3fa58ff8a",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Instead of `getUrl` it should be `getURL` since it's **U**niform **R**esource **L**ocator \n\n...\n\nThen again I haven't checked other methods with acronyms for usage. @arian do you recall?\n",
        "created_at": "2012-08-13T21:41:52Z",
        "updated_at": "2012-08-13T21:42:16Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2399#discussion_r1366940",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2399",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1366940"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2399#discussion_r1366940"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2399"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1367106",
        "pull_request_review_id": null,
        "id": 1367106,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjcxMDY=",
        "diff_hunk": "@@ -248,6 +248,46 @@ Returns the given response header or null if not found.\n \t\talert(this.getHeader('Date')); // alerts the server date (for example, 'Thu, 26 Feb 2009 20:26:06 GMT')\n \t}});\n \n+Request Method: getUrl {#Request:getUrl}",
        "path": "Docs/Request/Request.md",
        "position": 4,
        "original_position": 4,
        "commit_id": "c9ceae9a47642596bca8295dcad049a3fa58ff8a",
        "original_commit_id": "c9ceae9a47642596bca8295dcad049a3fa58ff8a",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "agreed, will check if we do this consistently.\n",
        "created_at": "2012-08-13T21:59:26Z",
        "updated_at": "2012-08-13T21:59:26Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2399#discussion_r1367106",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2399",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1367106"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2399#discussion_r1367106"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2399"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1367136",
        "pull_request_review_id": null,
        "id": 1367136,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjcxMzY=",
        "diff_hunk": "@@ -248,6 +248,46 @@ Returns the given response header or null if not found.\n \t\talert(this.getHeader('Date')); // alerts the server date (for example, 'Thu, 26 Feb 2009 20:26:06 GMT')\n \t}});\n \n+Request Method: getUrl {#Request:getUrl}",
        "path": "Docs/Request/Request.md",
        "position": 4,
        "original_position": 4,
        "commit_id": "c9ceae9a47642596bca8295dcad049a3fa58ff8a",
        "original_commit_id": "c9ceae9a47642596bca8295dcad049a3fa58ff8a",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we do with `String.uniqueID`, `DOMEvent`, `Fx.CSS`, .. , but not really with `[...].hexToRgb`. So I would say we usually do this.\n",
        "created_at": "2012-08-13T22:02:33Z",
        "updated_at": "2012-08-13T22:02:33Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2399#discussion_r1367136",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2399",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1367136"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2399#discussion_r1367136"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2399"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1367297",
        "pull_request_review_id": null,
        "id": 1367297,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjcyOTc=",
        "diff_hunk": "@@ -248,6 +248,46 @@ Returns the given response header or null if not found.\n \t\talert(this.getHeader('Date')); // alerts the server date (for example, 'Thu, 26 Feb 2009 20:26:06 GMT')\n \t}});\n \n+Request Method: getUrl {#Request:getUrl}",
        "path": "Docs/Request/Request.md",
        "position": 4,
        "original_position": 4,
        "commit_id": "c9ceae9a47642596bca8295dcad049a3fa58ff8a",
        "original_commit_id": "c9ceae9a47642596bca8295dcad049a3fa58ff8a",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks @arian for the research. @chrispitt just update the PR, and fix the small optimization and LGTM.\n",
        "created_at": "2012-08-13T22:16:43Z",
        "updated_at": "2012-08-13T22:16:43Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2399#discussion_r1367297",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2399",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1367297"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2399#discussion_r1367297"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2399"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1400525",
        "pull_request_review_id": null,
        "id": 1400525,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDA1MjU=",
        "diff_hunk": "@@ -120,6 +122,12 @@ Element.implement({\n \t\t\t}\n \t\t\tresult = this.getComputedStyle(property);\n \t\t}\n+\t\tif (hasBackgroundPositionXY && /^backgroundPosition[XY]$/.test(property) || property == 'backgroundPosition' && /(top|right|bottom|left)/.test(result)){",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1e400ff1fa22aa0fe270226a57f0a9e8f0d25b07",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`/^backgroundPosition[XY]?$/`\n",
        "created_at": "2012-08-17T06:11:17Z",
        "updated_at": "2012-08-20T16:55:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1400525",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1400525"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1400525"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1400540",
        "pull_request_review_id": null,
        "id": 1400540,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDA1NDA=",
        "diff_hunk": "@@ -120,6 +122,12 @@ Element.implement({\n \t\t\t}\n \t\t\tresult = this.getComputedStyle(property);\n \t\t}\n+\t\tif (hasBackgroundPositionXY && /^backgroundPosition[XY]$/.test(property) || property == 'backgroundPosition' && /(top|right|bottom|left)/.test(result)){\n+\t\t\treturn result.replace(/(\\w+)/g, function(value) { return value && namedPositions[value] || value || '0px'; }) || '0px';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1e400ff1fa22aa0fe270226a57f0a9e8f0d25b07",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "When would the last `|| '0px';` ever execute ... since replace should always return true, unless result is a `''` ? But then the following line is `if (!result ...)` so then you could add `if (result && hasBackgroundPositionXY ...)`\n\nFinally, is the `/(top|right|bottom/left).test` check really necessary? Looks like regardless you're checking for `namedPositions[value]` and default to the matched value ... or false if the value is false. Which in that case just do `return (!value ? value : namedPosition[value] || value);`\n\nor\n\n``` js\nif (namedPosition[value]) value = namedPosition[value];\nreturn value || '0px';\n```\n",
        "created_at": "2012-08-17T06:17:46Z",
        "updated_at": "2012-08-20T16:55:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1400540",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1400540"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1400540"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1400546",
        "pull_request_review_id": null,
        "id": 1400546,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDA1NDY=",
        "diff_hunk": "@@ -224,4 +232,7 @@ Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, bor\n \tShort.borderColor[bdc] = Short[bd][bdc] = All[bdc] = 'rgb(@, @, @)';\n });\n \n+if (hasBackgroundPositionXY) {\n+\tObject.merge(Element.ShortStyles, {backgroundPosition: {backgroundPositionX: '@', backgroundPositionY: '@'}});",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 29,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1e400ff1fa22aa0fe270226a57f0a9e8f0d25b07",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nElement.ShortStyles.backgroundPosition = {backgroundPositionX: '@', backgroundPositionY: '@'};\n```\n",
        "created_at": "2012-08-17T06:19:36Z",
        "updated_at": "2012-08-20T16:55:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1400546",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1400546"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1400546"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1400557",
        "pull_request_review_id": null,
        "id": 1400557,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDA1NTc=",
        "diff_hunk": "@@ -175,4 +175,51 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('getStyle background-position', function(){\n+\t\tbeforeEach(function(){\n+\t\t\tvar className = String.uniqueID();",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": null,
        "original_position": 7,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1e400ff1fa22aa0fe270226a57f0a9e8f0d25b07",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No need for random uid. Just pick something like: `getStyleBackroundPosition`. If you're still paranoid just do a quick search against the repo. and adjust, if necessary.\n\nIn the end, a descriptive class name will help debug than a **runtime** random UI\n",
        "created_at": "2012-08-17T06:23:53Z",
        "updated_at": "2012-08-20T16:55:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1400557",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1400557"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1400557"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1400563",
        "pull_request_review_id": null,
        "id": 1400563,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDA1NjM=",
        "diff_hunk": "@@ -175,4 +175,51 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('getStyle background-position', function(){\n+\t\tbeforeEach(function(){\n+\t\t\tvar className = String.uniqueID();\n+\t\t\tvar style = this.style = $(document.createElement('style'));\n+\t\t\tstyle.type = 'text/css';\n+\t\t\tvar definition = [\n+\t\t\t\t'.' + className + '{',\n+\t\t\t\t\t'background: #69a none no-repeat left bottom;',\n+\t\t\t\t'}'\n+\t\t\t].join('');\n+\n+\t\t\t// fix this, see https://github.com/mootools/mootools-core/issues/2265\n+\t\t\tif (style.styleSheet) style.styleSheet.cssText = definition;\n+\t\t\telse style.set('text', definition);\n+\n+\t\t\tdocument.head.appendChild(style);\n+\n+\t\t\tthis.element = new Element('div', {\n+\t\t\t\t'class': className,\n+\t\t\t\ttext: 'yo'\n+\t\t\t}).inject(document.body);\n+\t\t});\n+\n+\t\tafterEach(function(){\n+\t\t\tthis.style.destroy();\n+\t\t\tthis.element.destroy();",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": 30,
        "original_position": 30,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1e400ff1fa22aa0fe270226a57f0a9e8f0d25b07",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I believe you'll still have to null `this.element` so that IE gc picks it up\n",
        "created_at": "2012-08-17T06:26:41Z",
        "updated_at": "2012-08-20T16:55:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1400563",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1400563"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1400563"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1403896",
        "pull_request_review_id": null,
        "id": 1403896,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDM4OTY=",
        "diff_hunk": "@@ -120,6 +122,12 @@ Element.implement({\n \t\t\t}\n \t\t\tresult = this.getComputedStyle(property);\n \t\t}\n+\t\tif (hasBackgroundPositionXY && /^backgroundPosition[XY]$/.test(property) || property == 'backgroundPosition' && /(top|right|bottom|left)/.test(result)){",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1e400ff1fa22aa0fe270226a57f0a9e8f0d25b07",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "not really, the idea here is to test if the property is backgroundPositionX or Y _only_ if the browser supports those extensions.\nWhat goes behind this is that if you try to retrieve `backgroundPositionX` in say Firefox, you will \"correctly\" get `undefined` instead of a wrongly normalized `0px` (which we don't need to normalize, as it's non-standard)\n",
        "created_at": "2012-08-17T15:28:20Z",
        "updated_at": "2012-08-20T16:55:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1403896",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1403896"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1403896"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1404112",
        "pull_request_review_id": null,
        "id": 1404112,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDQxMTI=",
        "diff_hunk": "@@ -120,6 +122,12 @@ Element.implement({\n \t\t\t}\n \t\t\tresult = this.getComputedStyle(property);\n \t\t}\n+\t\tif (hasBackgroundPositionXY && /^backgroundPosition[XY]$/.test(property) || property == 'backgroundPosition' && /(top|right|bottom|left)/.test(result)){\n+\t\t\treturn result.replace(/(\\w+)/g, function(value) { return value && namedPositions[value] || value || '0px'; }) || '0px';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1e400ff1fa22aa0fe270226a57f0a9e8f0d25b07",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This `0px` default is for browsers that support `backgroundPosition[XY]` and are returning an empty value on those properties (IE7 and 8 are on that group). Since those browsers get their `backgroundPosition` decomposed into the 2 sub-properties when it can't be retrieved directly, we need to return _something_ or else the test against an element that has no set `backgroundPosition` style will return a space (that is, 2 empty strings concatenated by a space).  \n\nFor the second part, the regexp against top/right/bottom/left is simply to avoid running the normalization code if we already have a non-keyword based result (only IE7-8-9 enter on that part of the condition).\n\nas for the replace, I think we can further reduce it to just `return namedPositions[value] || value;`. What's currently there seems to be a left-over of several iterations I did to fix this. The replace will only call the function if it finds something, so there's no chance that empty values reach that point.\n",
        "created_at": "2012-08-17T15:48:08Z",
        "updated_at": "2012-08-20T16:55:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1404112",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1404112"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1404112"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1404131",
        "pull_request_review_id": null,
        "id": 1404131,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDQxMzE=",
        "diff_hunk": "@@ -175,4 +175,51 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('getStyle background-position', function(){\n+\t\tbeforeEach(function(){\n+\t\t\tvar className = String.uniqueID();",
        "path": "Specs/1.4client/Element/Element.Style.js",
        "position": null,
        "original_position": 7,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1e400ff1fa22aa0fe270226a57f0a9e8f0d25b07",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "copy-pasta from another spec on that same file :) Will cleanup as part of next commit.\n",
        "created_at": "2012-08-17T15:49:45Z",
        "updated_at": "2012-08-20T16:55:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1404131",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1404131"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1404131"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1404455",
        "pull_request_review_id": null,
        "id": 1404455,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDQ0NTU=",
        "diff_hunk": "@@ -120,6 +122,12 @@ Element.implement({\n \t\t\t}\n \t\t\tresult = this.getComputedStyle(property);\n \t\t}\n+\t\tif (hasBackgroundPositionXY && /^backgroundPosition[XY]$/.test(property) || property == 'backgroundPosition' && /(top|right|bottom|left)/.test(result)){",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1e400ff1fa22aa0fe270226a57f0a9e8f0d25b07",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sorry I was too quick you can reduce the `if` statement to:\n\n``` js\nif (hasBackgroundPositionXY && /^backgroundPosition[XY]?$/.test(property)){\n```\n\nSince adding the `?` is the same as `property == 'backgroundPosition'` \n",
        "created_at": "2012-08-17T16:32:30Z",
        "updated_at": "2012-08-20T16:55:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1404455",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1404455"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1404455"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1404468",
        "pull_request_review_id": null,
        "id": 1404468,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDQ0Njg=",
        "diff_hunk": "@@ -120,6 +122,12 @@ Element.implement({\n \t\t\t}\n \t\t\tresult = this.getComputedStyle(property);\n \t\t}\n+\t\tif (hasBackgroundPositionXY && /^backgroundPosition[XY]$/.test(property) || property == 'backgroundPosition' && /(top|right|bottom|left)/.test(result)){\n+\t\t\treturn result.replace(/(\\w+)/g, function(value) { return value && namedPositions[value] || value || '0px'; }) || '0px';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1e400ff1fa22aa0fe270226a57f0a9e8f0d25b07",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks for the explanation.\n\nUpdate the PR with the changes, and I'll have a second pass at it.\n",
        "created_at": "2012-08-17T16:34:16Z",
        "updated_at": "2012-08-20T16:55:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1404468",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1404468"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1404468"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1404908",
        "pull_request_review_id": null,
        "id": 1404908,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDQ5MDg=",
        "diff_hunk": "@@ -120,6 +122,12 @@ Element.implement({\n \t\t\t}\n \t\t\tresult = this.getComputedStyle(property);\n \t\t}\n+\t\tif (hasBackgroundPositionXY && /^backgroundPosition[XY]$/.test(property) || property == 'backgroundPosition' && /(top|right|bottom|left)/.test(result)){",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1e400ff1fa22aa0fe270226a57f0a9e8f0d25b07",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "thinking a little more about it I think I will settle this case, let's go with your option even if it runs more times than needed (a query for `backgroundPosition` on an element that has no keyword based components will still enter on the conditional).\nAt least the code is easier to understand, even if it doesn't reflect the strict cases I was trying to apply this on.\n",
        "created_at": "2012-08-17T17:22:52Z",
        "updated_at": "2012-08-20T16:55:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1404908",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1404908"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1404908"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1407976",
        "pull_request_review_id": null,
        "id": 1407976,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDc5NzY=",
        "diff_hunk": "@@ -120,6 +122,12 @@ Element.implement({\n \t\t\t}\n \t\t\tresult = this.getComputedStyle(property);\n \t\t}\n+\t\tif (hasBackgroundPositionXY && /^backgroundPosition[XY]?$/.test(property)){\n+\t\t\treturn result.replace(/(\\w+)/g, function(value) { return namedPositions[value] || value; }) || '0px';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1ca3311c1789195094643e239edc9bc0632cf25c",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Considering one of your previous comments I think this would be a good compromise:\n\n``` js\nreturn result.replace(/(top|right|bottom|left)/g, function(position){ return namedPosition[position]; }) || '0px';\n```\n\nNow only the named positions are replaced with their respective percentage values. \n",
        "created_at": "2012-08-17T23:36:54Z",
        "updated_at": "2012-08-20T16:55:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1407976",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1407976"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1407976"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1408003",
        "pull_request_review_id": null,
        "id": 1408003,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDgwMDM=",
        "diff_hunk": "@@ -120,6 +122,12 @@ Element.implement({\n \t\t\t}\n \t\t\tresult = this.getComputedStyle(property);\n \t\t}\n+\t\tif (hasBackgroundPositionXY && /^backgroundPosition[XY]?$/.test(property)){\n+\t\t\treturn result.replace(/(\\w+)/g, function(value) { return namedPositions[value] || value; }) || '0px';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1ca3311c1789195094643e239edc9bc0632cf25c",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Up to you (and it's not a deal breaker) but this may be more aesthetic as well:\n\n``` js\nif (hasBackgroundPositionXY && /^backgroundPosition[XY]?$/.test(property)){\n   if (!result) return (property == 'backgroundPosition') ? '0px 0px' : '0px';\n   return result.replace(/(top|right|bottom|left)/g, function(position){\n       return namedPosition[position];\n   });\n}\n```\n\nNote, this would mean that L128 - L130 are no longer needed. Just need for you to confirm that the hasBackgroundPositionXY check doesn't break/filter something out.\n",
        "created_at": "2012-08-17T23:40:42Z",
        "updated_at": "2012-08-20T16:55:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1408003",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1408003"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1408003"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1408009",
        "pull_request_review_id": null,
        "id": 1408009,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDgwMDk=",
        "diff_hunk": "@@ -224,4 +232,7 @@ Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, bor\n \tShort.borderColor[bdc] = Short[bd][bdc] = All[bdc] = 'rgb(@, @, @)';\n });\n \n+if (hasBackgroundPositionXY) {",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 28,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1ca3311c1789195094643e239edc9bc0632cf25c",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You can remove the `{}` and 1-line.\n\nAlso, I just noticed a style guide problem. You'll need to check your diff and find `) {` and replace with `){` :D\n",
        "created_at": "2012-08-17T23:42:54Z",
        "updated_at": "2012-08-20T16:55:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1408009",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1408009"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1408009"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1412943",
        "pull_request_review_id": null,
        "id": 1412943,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTI5NDM=",
        "diff_hunk": "@@ -120,6 +122,12 @@ Element.implement({\n \t\t\t}\n \t\t\tresult = this.getComputedStyle(property);\n \t\t}\n+\t\tif (hasBackgroundPositionXY && /^backgroundPosition[XY]?$/.test(property)){\n+\t\t\treturn result.replace(/(\\w+)/g, function(value) { return namedPositions[value] || value; }) || '0px';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 16,
        "commit_id": "3fa2f76f8b29bed9360aed9f4a0136ee8cc77e3b",
        "original_commit_id": "1ca3311c1789195094643e239edc9bc0632cf25c",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I will only go with the keyword replace (way more readable, if not also faster, nice catch there).\nWe can't integrate the `0px 0px` default inside the if block because it will not return the default on browsers that lack the X/Y extensions (Opera in this case). **unless** we want to remove this default and handle such cases where needed (Fx module)\n",
        "created_at": "2012-08-20T11:45:46Z",
        "updated_at": "2012-08-20T16:55:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1412943",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2409",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1412943"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2409#discussion_r1412943"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2409"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410521",
        "pull_request_review_id": null,
        "id": 1410521,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTA1MjE=",
        "diff_hunk": "@@ -818,7 +818,25 @@ Element.implement({\n \n \tclone: function(contents, keepid){\n \t\tcontents = contents !== false;\n-\t\tvar clone = this.cloneNode(contents), ce = [clone], te = [this], i;\n+\t\tvar cloneNode = function(){return false};",
        "path": "Source/Element/Element.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "015662f3406d2c1f05aac4b385aeafcd99cd57f0",
        "original_commit_id": "b6d6523bd5c72c0401ffc157b537beebb40792a6",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nvar self = this;\nvar cloneNode = function(){\n    return self.cloneNode(contents);\n};\n```\n",
        "created_at": "2012-08-19T20:53:45Z",
        "updated_at": "2012-08-20T18:53:56Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410521",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2387",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410521"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410521"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2387"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410522",
        "pull_request_review_id": null,
        "id": 1410522,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTA1MjI=",
        "diff_hunk": "@@ -818,7 +818,25 @@ Element.implement({\n \n \tclone: function(contents, keepid){\n \t\tcontents = contents !== false;\n-\t\tvar clone = this.cloneNode(contents), ce = [clone], te = [this], i;\n+\t\tvar cloneNode = function(){return false};\n+\t\t/*<ltIE8>*/\n+\t\tif (Browser.ie6 || Browser.ie7){\n+\t\t\tvar self = this;\n+\t\t\tcloneNode = function(contents){",
        "path": "Source/Element/Element.js",
        "position": 9,
        "original_position": 9,
        "commit_id": "015662f3406d2c1f05aac4b385aeafcd99cd57f0",
        "original_commit_id": "b6d6523bd5c72c0401ffc157b537beebb40792a6",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "don't need the `contents` argument, it can get the `contents` variable from the outer scope.\n",
        "created_at": "2012-08-19T20:54:12Z",
        "updated_at": "2012-08-20T18:53:56Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410522",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2387",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410522"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410522"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2387"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410525",
        "pull_request_review_id": null,
        "id": 1410525,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTA1MjU=",
        "diff_hunk": "@@ -818,7 +818,25 @@ Element.implement({\n \n \tclone: function(contents, keepid){\n \t\tcontents = contents !== false;\n-\t\tvar clone = this.cloneNode(contents), ce = [clone], te = [this], i;\n+\t\tvar cloneNode = function(){return false};\n+\t\t/*<ltIE8>*/\n+\t\tif (Browser.ie6 || Browser.ie7){\n+\t\t\tvar self = this;\n+\t\t\tcloneNode = function(contents){\n+\t\t\t\tvar oldID = '' + self.id;\n+\t\t\t\tself.removeAttribute('id');\n+\t\t\t\tvar clonedHTML = self.outerHTML;\n+\t\t\t\tvar cloned = document.createElement('div');\n+\t\t\t\tcloned.innerHTML = clonedHTML;",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 14,
        "commit_id": "015662f3406d2c1f05aac4b385aeafcd99cd57f0",
        "original_commit_id": "b6d6523bd5c72c0401ffc157b537beebb40792a6",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should use `.set('html')` for all the `table` and other weird cases.\n",
        "created_at": "2012-08-19T20:55:53Z",
        "updated_at": "2012-08-20T18:53:56Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410525",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2387",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410525"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410525"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2387"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410531",
        "pull_request_review_id": null,
        "id": 1410531,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTA1MzE=",
        "diff_hunk": "@@ -818,7 +818,25 @@ Element.implement({\n \n \tclone: function(contents, keepid){\n \t\tcontents = contents !== false;\n-\t\tvar clone = this.cloneNode(contents), ce = [clone], te = [this], i;\n+\t\tvar cloneNode = function(){return false};\n+\t\t/*<ltIE8>*/\n+\t\tif (Browser.ie6 || Browser.ie7){",
        "path": "Source/Element/Element.js",
        "position": 7,
        "original_position": 7,
        "commit_id": "015662f3406d2c1f05aac4b385aeafcd99cd57f0",
        "original_commit_id": "b6d6523bd5c72c0401ffc157b537beebb40792a6",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think we could feature detect this..\n",
        "created_at": "2012-08-19T21:00:26Z",
        "updated_at": "2012-08-20T18:53:56Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410531",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2387",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410531"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410531"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2387"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410562",
        "pull_request_review_id": null,
        "id": 1410562,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTA1NjI=",
        "diff_hunk": "@@ -818,7 +818,25 @@ Element.implement({\n \n \tclone: function(contents, keepid){\n \t\tcontents = contents !== false;\n-\t\tvar clone = this.cloneNode(contents), ce = [clone], te = [this], i;\n+\t\tvar cloneNode = function(){return false};",
        "path": "Source/Element/Element.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "015662f3406d2c1f05aac4b385aeafcd99cd57f0",
        "original_commit_id": "b6d6523bd5c72c0401ffc157b537beebb40792a6",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think I need to move this on outer scope to avoid memory leaks too.\n",
        "created_at": "2012-08-19T21:24:13Z",
        "updated_at": "2012-08-20T18:53:56Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410562",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2387",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410562"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410562"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2387"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410648",
        "pull_request_review_id": null,
        "id": 1410648,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTA2NDg=",
        "diff_hunk": "@@ -10,6 +10,32 @@ describe('Element', function(){\n \n \tdescribe('Element.getProperty', function(){\n \n+\t\tit('should cloneNode properly on IE6/7', function(){\n+\n+\t\t\tvar div = new Element('div');\n+\t\t\tdiv.inject(document.documentElement);\n+\t\t\tdiv.innerHTML = \"<input id='Q1' class='foo' rel='hai' />\";\n+\n+\t\t\tvar q1 = document.id('Q1');\n+\t\t\tvar clone = q1.clone();\n+\t\t\tclone.replaces(q1);\n+\n+\t\t\texpect($$('input[id=Q1]').length).toEqual(0);\n+\t\t\texpect($$('input#Q1').length).toEqual(0);\n+\t\t\tclone.dispose();\n+\n+\t\t\tvar ul = new Element('ul',{id:'test'});\n+\t\t\tul.set('html', '<li id=\"li1\"></li><li id=\"li2\"></li>'));",
        "path": "Specs/1.4client/Element/Element.js",
        "position": null,
        "original_position": 19,
        "commit_id": "015662f3406d2c1f05aac4b385aeafcd99cd57f0",
        "original_commit_id": "b6d6523bd5c72c0401ffc157b537beebb40792a6",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "a `)` too much.\n",
        "created_at": "2012-08-19T22:37:33Z",
        "updated_at": "2012-08-20T18:53:56Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410648",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2387",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410648"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410648"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2387"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410649",
        "pull_request_review_id": null,
        "id": 1410649,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTA2NDk=",
        "diff_hunk": "@@ -10,6 +10,32 @@ describe('Element', function(){\n \n \tdescribe('Element.getProperty', function(){\n \n+\t\tit('should cloneNode properly on IE6/7', function(){",
        "path": "Specs/1.4client/Element/Element.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "015662f3406d2c1f05aac4b385aeafcd99cd57f0",
        "original_commit_id": "b6d6523bd5c72c0401ffc157b537beebb40792a6",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should be split up in multiple `it`s.\n",
        "created_at": "2012-08-19T22:41:16Z",
        "updated_at": "2012-08-20T18:53:56Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410649",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2387",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410649"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410649"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2387"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410658",
        "pull_request_review_id": null,
        "id": 1410658,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTA2NTg=",
        "diff_hunk": "@@ -10,6 +10,32 @@ describe('Element', function(){\n \n \tdescribe('Element.getProperty', function(){\n \n+\t\tit('should cloneNode properly on IE6/7', function(){\n+\n+\t\t\tvar div = new Element('div');\n+\t\t\tdiv.inject(document.documentElement);\n+\t\t\tdiv.innerHTML = \"<input id='Q1' class='foo' rel='hai' />\";\n+\n+\t\t\tvar q1 = document.id('Q1');\n+\t\t\tvar clone = q1.clone();\n+\t\t\tclone.replaces(q1);\n+\n+\t\t\texpect($$('input[id=Q1]').length).toEqual(0);\n+\t\t\texpect($$('input#Q1').length).toEqual(0);\n+\t\t\tclone.dispose();\n+\n+\t\t\tvar ul = new Element('ul',{id:'test'});\n+\t\t\tul.set('html', '<li id=\"li1\"></li><li id=\"li2\"></li>'));\n+\t\t\tul.inject(document.documentElement);\n+\n+\t\t\tvar ulc = ul.clone();\n+\t\t\tulc.replaces(ul);\n+\n+\t\t\texpect($$('li#li1').length).toEqual(1);",
        "path": "Specs/1.4client/Element/Element.js",
        "position": null,
        "original_position": 25,
        "commit_id": "015662f3406d2c1f05aac4b385aeafcd99cd57f0",
        "original_commit_id": "b6d6523bd5c72c0401ffc157b537beebb40792a6",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This test case should equal `0`. `keepid` is false, so it should remove the IDs.\n",
        "created_at": "2012-08-19T22:51:47Z",
        "updated_at": "2012-08-20T18:53:56Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410658",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2387",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1410658"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2387#discussion_r1410658"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2387"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419127",
        "pull_request_review_id": null,
        "id": 1419127,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTkxMjc=",
        "diff_hunk": "@@ -114,10 +114,9 @@ Element.implement({\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n \t\tvar result = this.style[property];\n \t\tif (!result || property == 'zIndex'){\n-\t\t\tresult = [];\n-\t\t\tfor (var style in Element.ShortStyles){\n-\t\t\t\tif (property != style) continue;\n-\t\t\t\tfor (var s in Element.ShortStyles[style]) result.push(this.getStyle(s));\n+\t\t\tif (Element.ShortStyles.hasOwnProperty(property)){",
        "path": "Source/Element/Element.Style.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "cb327bf32485f7688634a3b44e2845efbae6c21a",
        "original_commit_id": "cb327bf32485f7688634a3b44e2845efbae6c21a",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Particular reason why not just: \n\n``` js\nif (Element.ShortStyles[property]){\n```\n\n?\n",
        "created_at": "2012-08-20T21:52:32Z",
        "updated_at": "2012-08-20T21:52:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2410#discussion_r1419127",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2410",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419127"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2410#discussion_r1419127"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2410"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419724",
        "pull_request_review_id": null,
        "id": 1419724,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTk3MjQ=",
        "diff_hunk": "@@ -114,10 +114,9 @@ Element.implement({\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n \t\tvar result = this.style[property];\n \t\tif (!result || property == 'zIndex'){\n-\t\t\tresult = [];\n-\t\t\tfor (var style in Element.ShortStyles){\n-\t\t\t\tif (property != style) continue;\n-\t\t\t\tfor (var s in Element.ShortStyles[style]) result.push(this.getStyle(s));\n+\t\t\tif (Element.ShortStyles.hasOwnProperty(property)){",
        "path": "Source/Element/Element.Style.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "cb327bf32485f7688634a3b44e2845efbae6c21a",
        "original_commit_id": "cb327bf32485f7688634a3b44e2845efbae6c21a",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "defensive coding, if the Object prototype ever gains a property named exactly like a CSS style that piece of code won't blow up into pieces. That includes both future standards and nasty users/3rd party scripts adding stuff to the Object prototype.\n",
        "created_at": "2012-08-20T23:03:44Z",
        "updated_at": "2012-08-20T23:03:44Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2410#discussion_r1419724",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2410",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419724"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2410#discussion_r1419724"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2410"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419779",
        "pull_request_review_id": null,
        "id": 1419779,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTk3Nzk=",
        "diff_hunk": "@@ -114,10 +114,9 @@ Element.implement({\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n \t\tvar result = this.style[property];\n \t\tif (!result || property == 'zIndex'){\n-\t\t\tresult = [];\n-\t\t\tfor (var style in Element.ShortStyles){\n-\t\t\t\tif (property != style) continue;\n-\t\t\t\tfor (var s in Element.ShortStyles[style]) result.push(this.getStyle(s));\n+\t\t\tif (Element.ShortStyles.hasOwnProperty(property)){",
        "path": "Source/Element/Element.Style.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "cb327bf32485f7688634a3b44e2845efbae6c21a",
        "original_commit_id": "cb327bf32485f7688634a3b44e2845efbae6c21a",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's a good idea then.\n",
        "created_at": "2012-08-20T23:11:42Z",
        "updated_at": "2012-08-20T23:11:42Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2410#discussion_r1419779",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2410",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419779"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2410#discussion_r1419779"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2410"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1433673",
        "pull_request_review_id": null,
        "id": 1433673,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzM2NzM=",
        "diff_hunk": "@@ -110,45 +122,29 @@ Element.implement({\n \t},\n \n \tgetStyle: function(property){\n-\t\tif (property == 'opacity') return getOpacity(this);\n-\t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\n+\t\tproperty = (property == 'float') ? floatName : property.camelCase();\n+\n+\t\tvar getter = getGetter(property);",
        "path": "Source/Element/Element.Style.js",
        "position": 63,
        "original_position": 63,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "there isn't a `getGetter` function yet.\n",
        "created_at": "2012-08-22T10:02:32Z",
        "updated_at": "2012-08-22T10:02:32Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1433673",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1433673"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1433673"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1433687",
        "pull_request_review_id": null,
        "id": 1433687,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzM2ODc=",
        "diff_hunk": "@@ -213,23 +200,232 @@ Element.Styles = new Hash(Element.Styles);\n \n //</1.2compat>\n \n-Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};\n+Element.Styles = {\n+\tleft: {map: '@px'},",
        "path": "Source/Element/Element.Style.js",
        "position": 137,
        "original_position": 137,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why not keep `left: '@px'` by default, only for special cases use an object. Is smaller and probably better for backward compat.\n",
        "created_at": "2012-08-22T10:03:51Z",
        "updated_at": "2012-08-22T10:03:51Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1433687",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1433687"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1433687"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1433759",
        "pull_request_review_id": null,
        "id": 1433759,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzM3NTk=",
        "diff_hunk": "@@ -213,23 +200,232 @@ Element.Styles = new Hash(Element.Styles);\n \n //</1.2compat>\n \n-Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};\n+Element.Styles = {\n+\tleft: {map: '@px'},\n+\ttop: {map: '@px'},\n+\tbottom: {map: '@px'},\n+\tright: {map: '@px'},\n+\twidth: {map: '@px'},\n+\theight: {map: '@px'},\n+\tletterSpacing: {map: '@px'},\n+\tlineHeight: {map: '@px'},\n+\tclip: {map: 'rect(@px @px @px @px)'},\n+\tzIndex: {\n+\t\tmap: '@',\n+\t\tget: function(element){\n+\t\t\treturn element.getComputedStyle('zIndex');\n+\t\t}\n+\t},\n+\t'zoom': {map: '@'},\n+\ttextIndent: {map: '@px'},\n+\topacity: {\n+\t\tmap: '@',\n+\t\tget: function(element){",
        "path": "Source/Element/Element.Style.js",
        "position": 156,
        "original_position": 156,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nget: getOpacity,\nset: setOpacity\n```\n\nshould be able to handle it..\n",
        "created_at": "2012-08-22T10:14:00Z",
        "updated_at": "2012-08-22T10:14:00Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1433759",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1433759"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1433759"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1433763",
        "pull_request_review_id": null,
        "id": 1433763,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzM3NjM=",
        "diff_hunk": "@@ -213,23 +200,232 @@ Element.Styles = new Hash(Element.Styles);\n \n //</1.2compat>\n \n-Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};\n+Element.Styles = {\n+\tleft: {map: '@px'},\n+\ttop: {map: '@px'},\n+\tbottom: {map: '@px'},\n+\tright: {map: '@px'},\n+\twidth: {map: '@px'},\n+\theight: {map: '@px'},\n+\tletterSpacing: {map: '@px'},\n+\tlineHeight: {map: '@px'},\n+\tclip: {map: 'rect(@px @px @px @px)'},\n+\tzIndex: {\n+\t\tmap: '@',\n+\t\tget: function(element){\n+\t\t\treturn element.getComputedStyle('zIndex');\n+\t\t}\n+\t},\n+\t'zoom': {map: '@'},\n+\ttextIndent: {map: '@px'},\n+\topacity: {\n+\t\tmap: '@',\n+\t\tget: function(element){\n+\t\t\treturn getOpacity(this);",
        "path": "Source/Element/Element.Style.js",
        "position": 157,
        "original_position": 157,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "also you're using `this` here, instead of `element`.\n",
        "created_at": "2012-08-22T10:14:30Z",
        "updated_at": "2012-08-22T10:14:30Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1433763",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1433763"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1433763"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1433778",
        "pull_request_review_id": null,
        "id": 1433778,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzM3Nzg=",
        "diff_hunk": "@@ -213,23 +200,232 @@ Element.Styles = new Hash(Element.Styles);\n \n //</1.2compat>\n \n-Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};\n+Element.Styles = {\n+\tleft: {map: '@px'},\n+\ttop: {map: '@px'},\n+\tbottom: {map: '@px'},\n+\tright: {map: '@px'},\n+\twidth: {map: '@px'},\n+\theight: {map: '@px'},\n+\tletterSpacing: {map: '@px'},\n+\tlineHeight: {map: '@px'},\n+\tclip: {map: 'rect(@px @px @px @px)'},\n+\tzIndex: {\n+\t\tmap: '@',\n+\t\tget: function(element){\n+\t\t\treturn element.getComputedStyle('zIndex');\n+\t\t}\n+\t},\n+\t'zoom': {map: '@'},\n+\ttextIndent: {map: '@px'},\n+\topacity: {\n+\t\tmap: '@',\n+\t\tget: function(element){\n+\t\t\treturn getOpacity(this);\n+\t\t},\n+\t\tset: function(element, value){\n+\t\t\tif (value != null) value = parseFloat(value);\n+\t\t\tsetOpacity(this, value);\n+\t\t\treturn this;\n+\t\t}\n+\t},\n+\tcolor: {map: 'rgb(@, @, @)'},\n+\n+\tmaxWidth: {map: '@px'},\n+\tmaxHeight: {map: '@px'},\n \n-['Top', 'Right', 'Bottom', 'Left'].each(function(direction){\n-\tvar Short = Element.ShortStyles;\n-\tvar All = Element.Styles;\n-\t['margin', 'padding'].each(function(style){\n-\t\tvar sd = style + direction;\n-\t\tShort[style][sd] = All[sd] = '@px';\n+\tminWidth: {map: '@px'},\n+\tminHeight: {map: '@px'},\n+\n+\tbackgroundColor: {map: 'rgb(@, @, @)'},\n+\tbackgroundPosition: {\n+\t\tmap: '@px @px',\n+\t\tget: function(element){\n+\t\t\treturn element.getComputedStyle('backgroundPosition') || '0px 0px';\n+\t\t}\n+\t},\n+\n+\tfontWeight: {map: '@'},\n+\tfontSize: {map: '@px'},\n+\n+\tmargin: {map: '@px @px @px @px'},\n+\tmarginTop: {map: '@px'},\n+\tmarginRight: {map: '@px'},\n+\tmarginBottom: {map: '@px'},\n+\tmarginLeft: {map: '@px'},\n+\n+\tpadding: {map: '@px @px @px @px'},\n+\tpaddingTop: {map: '@px'},\n+\tpaddingRight: {map: '@px'},\n+\tpaddingBottom: {map: '@px'},\n+\tpaddingLeft: {map: '@px'},\n+\n+\tborder: {map: '@px @ rgb(@, @, @) @px @ rgb(@, @, @) @px @ rgb(@, @, @)'},\n+\tborderWidth: {map: '@px @px @px @px'},\n+\tborderStyle: {map: '@ @ @ @'},\n+\tborderColor: {map: 'rgb(@, @, @) rgb(@, @, @) rgb(@, @, @) rgb(@, @, @)'},\n+\n+\tborderTop: {map: '@px @ rgb(@, @, @)'},\n+\tborderTopWidth: {map: '@px'},\n+\tborderTopColor: {map: '@px'},\n+\tborderTopStyle: {map: '@px'},\n+\n+\tborderRight: {map: '@px @ rgb(@, @, @)'},\n+\tborderRightWidth: {map: '@px'},\n+\tborderRightStyle: {map: '@px'},\n+\tborderRightColor: {map: '@px'},\n+\n+\tborderBottom: {map: '@px @ rgb(@, @, @)'},\n+\tborderBottomStyle: {map: '@px'},\n+\tborderBottomColor: {map: '@px'},\n+\tborderBottomWidth: {map: '@px'},\n+\n+\tborderLeft: {map: '@px @ rgb(@, @, @)'},\n+\tborderLeftWidth: {map: '@px'},\n+\tborderLeftStyle: {map: '@px'},\n+\tborderLeftColor: {map: '@px'}\n+};\n+\n+Element.ShortStyles = {\n+\tmargin: {\n+\t\tmarginTop: '@px',\n+\t\tmarginRight: '@px',\n+\t\tmarginBottom: '@px',\n+\t\tmarginLeft: '@px'\n+\t},\n+\tpadding: {\n+\t\tpaddingTop: '@px',\n+\t\tpaddingRight: '@px',\n+\t\tpaddingBottom: '@px',\n+\t\tpaddingLeft: '@px'\n+\t},\n+\tborder: {\n+\t\tborderTop: '@px @ rgb(@, @, @)',\n+\t\tborderRight: '@px @ rgb(@, @, @)',\n+\t\tborderBottom: '@px @ rgb(@, @, @)',\n+\t\tborderLeft: '@px @ rgb(@, @, @)'\n+\t},\n+\tborderTop: {\n+\t\tborderTopWidth: '@px',\n+\t\tborderTopColor: '@px',\n+\t\tborderTopStyle: '@px',\n+\t\tborderRightWidth: '@px',\n+\t\tborderRightStyle: '@px',\n+\t\tborderRightColor: '@px',\n+\t\tborderBottomStyle: '@px',\n+\t\tborderBottomColor: '@px',\n+\t\tborderBottomWidth: '@px',\n+\t\tborderLeftWidth: '@px',\n+\t\tborderLeftStyle: '@px',\n+\t\tborderLeftColor: '@px'\n+\t},\n+\tborderRight: {\n+\t\tborderTopWidth: '@px',\n+\t\tborderTopColor: '@px',\n+\t\tborderTopStyle: '@px',\n+\t\tborderRightWidth: '@px',\n+\t\tborderRightStyle: '@px',\n+\t\tborderRightColor: '@px',\n+\t\tborderBottomStyle: '@px',\n+\t\tborderBottomColor: '@px',\n+\t\tborderBottomWidth: '@px',\n+\t\tborderLeftWidth: '@px',\n+\t\tborderLeftStyle: '@px',\n+\t\tborderLeftColor: '@px'\n+\t},\n+\tborderBottom: {\n+\t\tborderTopWidth: '@px',\n+\t\tborderTopColor: '@px',\n+\t\tborderTopStyle: '@px',\n+\t\tborderRightWidth: '@px',\n+\t\tborderRightStyle: '@px',\n+\t\tborderRightColor: '@px',\n+\t\tborderBottomStyle: '@px',\n+\t\tborderBottomColor: '@px',\n+\t\tborderBottomWidth: '@px',\n+\t\tborderLeftWidth: '@px',\n+\t\tborderLeftStyle: '@px',\n+\t\tborderLeftColor: '@px'\n+\t},\n+\tborderLeft: {\n+\t\tborderTopWidth: '@px',\n+\t\tborderTopColor: '@px',\n+\t\tborderTopStyle: '@px',\n+\t\tborderRightWidth: '@px',\n+\t\tborderRightStyle: '@px',\n+\t\tborderRightColor: '@px',\n+\t\tborderBottomStyle: '@px',\n+\t\tborderBottomColor: '@px',\n+\t\tborderBottomWidth: '@px',\n+\t\tborderLeftWidth: '@px',\n+\t\tborderLeftStyle: '@px',\n+\t\tborderLeftColor: '@px'\n+\t},\n+\tborderWidth: {\n+\t\tborderTopWidth: '@px',\n+\t\tborderRightWidth: '@px',\n+\t\tborderBottomWidth: '@px',\n+\t\tborderLeftWidth: '@px'\n+\t},\n+\tborderStyle: {\n+\t\tborderTopStyle: '@px', q\n+\t\tborderRightStyle: '@px',\n+\t\tborderBottomStyle: '@px',\n+\t\tborderLeftStyle: '@px'\n+\t},\n+\tborderColor: {\n+\t\tborderTopColor: '@px',\n+\t\tborderRightColor: '@px',\n+\t\tborderBottomColor: '@px',\n+\t\tborderLeftColor: '@px'\n+\t}\n+};\n+\n+\n+// todo(ibolmo): collisions?\n+\n+if (hasBackgroundPositionXY){",
        "path": "Source/Element/Element.Style.js",
        "position": 326,
        "original_position": 326,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "maybe also move the feature detections here, closer where it's actually used.\n",
        "created_at": "2012-08-22T10:16:00Z",
        "updated_at": "2012-08-22T10:16:00Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1433778",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1433778"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1433778"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434744",
        "pull_request_review_id": null,
        "id": 1434744,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzQ3NDQ=",
        "diff_hunk": "@@ -110,45 +122,29 @@ Element.implement({\n \t},\n \n \tgetStyle: function(property){\n-\t\tif (property == 'opacity') return getOpacity(this);\n-\t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\n+\t\tproperty = (property == 'float') ? floatName : property.camelCase();\n+\n+\t\tvar getter = getGetter(property);",
        "path": "Source/Element/Element.Style.js",
        "position": 63,
        "original_position": 63,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "hehe good call. Must have forgotten. I'll fix soon\n",
        "created_at": "2012-08-22T13:01:40Z",
        "updated_at": "2012-08-22T13:01:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434744",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434744"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434744"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434750",
        "pull_request_review_id": null,
        "id": 1434750,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzQ3NTA=",
        "diff_hunk": "@@ -213,23 +200,232 @@ Element.Styles = new Hash(Element.Styles);\n \n //</1.2compat>\n \n-Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};\n+Element.Styles = {\n+\tleft: {map: '@px'},",
        "path": "Source/Element/Element.Style.js",
        "position": 137,
        "original_position": 137,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We could reduce this by adding more logic to the `getGetter`, `getMap`, and `getStyle`, but I'm also trying to encourage a simple hook mechanism. See the following comment.\n",
        "created_at": "2012-08-22T13:02:57Z",
        "updated_at": "2012-08-22T13:02:57Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434750",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434750"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434750"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434755",
        "pull_request_review_id": null,
        "id": 1434755,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzQ3NTU=",
        "diff_hunk": "@@ -213,23 +200,232 @@ Element.Styles = new Hash(Element.Styles);\n \n //</1.2compat>\n \n-Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};\n+Element.Styles = {\n+\tleft: {map: '@px'},\n+\ttop: {map: '@px'},\n+\tbottom: {map: '@px'},\n+\tright: {map: '@px'},\n+\twidth: {map: '@px'},\n+\theight: {map: '@px'},\n+\tletterSpacing: {map: '@px'},\n+\tlineHeight: {map: '@px'},\n+\tclip: {map: 'rect(@px @px @px @px)'},\n+\tzIndex: {\n+\t\tmap: '@',\n+\t\tget: function(element){\n+\t\t\treturn element.getComputedStyle('zIndex');\n+\t\t}\n+\t},\n+\t'zoom': {map: '@'},\n+\ttextIndent: {map: '@px'},\n+\topacity: {\n+\t\tmap: '@',\n+\t\tget: function(element){",
        "path": "Source/Element/Element.Style.js",
        "position": 156,
        "original_position": 156,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "actually I'm considering moving that logic inside the get and set. Just haven't gotten to it\n",
        "created_at": "2012-08-22T13:03:26Z",
        "updated_at": "2012-08-22T13:03:26Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434755",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434755"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434755"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434756",
        "pull_request_review_id": null,
        "id": 1434756,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzQ3NTY=",
        "diff_hunk": "@@ -110,45 +122,29 @@ Element.implement({\n \t},\n \n \tgetStyle: function(property){\n-\t\tif (property == 'opacity') return getOpacity(this);\n-\t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\n+\t\tproperty = (property == 'float') ? floatName : property.camelCase();\n+\n+\t\tvar getter = getGetter(property);\n+\t\tif (getter) return getter(property);\n+\n \t\tvar result = this.style[property];\n-\t\tif (!result || property == 'zIndex'){\n-\t\t\tif (Element.ShortStyles.hasOwnProperty(property)){\n-\t\t\t\tresult = [];\n-\t\t\t\tfor (var s in Element.ShortStyles[property]) result.push(this.getStyle(s));\n-\t\t\t\treturn result.join(' ');\n-\t\t\t}\n+\n+\t\tif (!result && Element.ShortStyles.hasOwnProperty(property)){\n+\t\t\tresult = [];\n+\t\t\tfor (var s in Element.ShortStyles[property]) result.push(this.getStyle(s));\n+\t\t\treturn result.join(' ');\n+\t\t} else {",
        "path": "Source/Element/Element.Style.js",
        "position": 78,
        "original_position": 78,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "code will wrongly enter here when `result && !Element.ShortStyles.hasOwnProperty(property)`, you only need to run the `getComputedStyle` part if we got no result from the `this.style[property]`\n\nEven better, I'm also not sure if doing: `var result = this.style[property] || this.getComputedStyle(property);` would break anything, current specs pass but that doesn't say much. Any reason to give ShortStyles precedence over trying to getComputedStyle on the element?\n",
        "created_at": "2012-08-22T13:03:39Z",
        "updated_at": "2012-08-22T13:03:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434756",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434756"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434756"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434757",
        "pull_request_review_id": null,
        "id": 1434757,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzQ3NTc=",
        "diff_hunk": "@@ -213,23 +200,232 @@ Element.Styles = new Hash(Element.Styles);\n \n //</1.2compat>\n \n-Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};\n+Element.Styles = {\n+\tleft: {map: '@px'},\n+\ttop: {map: '@px'},\n+\tbottom: {map: '@px'},\n+\tright: {map: '@px'},\n+\twidth: {map: '@px'},\n+\theight: {map: '@px'},\n+\tletterSpacing: {map: '@px'},\n+\tlineHeight: {map: '@px'},\n+\tclip: {map: 'rect(@px @px @px @px)'},\n+\tzIndex: {\n+\t\tmap: '@',\n+\t\tget: function(element){\n+\t\t\treturn element.getComputedStyle('zIndex');\n+\t\t}\n+\t},\n+\t'zoom': {map: '@'},\n+\ttextIndent: {map: '@px'},\n+\topacity: {\n+\t\tmap: '@',\n+\t\tget: function(element){\n+\t\t\treturn getOpacity(this);",
        "path": "Source/Element/Element.Style.js",
        "position": 157,
        "original_position": 157,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "right, forgot to update. nice catch\n",
        "created_at": "2012-08-22T13:03:40Z",
        "updated_at": "2012-08-22T13:03:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434757",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434757"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434757"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434761",
        "pull_request_review_id": null,
        "id": 1434761,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzQ3NjE=",
        "diff_hunk": "@@ -213,23 +200,232 @@ Element.Styles = new Hash(Element.Styles);\n \n //</1.2compat>\n \n-Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};\n+Element.Styles = {\n+\tleft: {map: '@px'},\n+\ttop: {map: '@px'},\n+\tbottom: {map: '@px'},\n+\tright: {map: '@px'},\n+\twidth: {map: '@px'},\n+\theight: {map: '@px'},\n+\tletterSpacing: {map: '@px'},\n+\tlineHeight: {map: '@px'},\n+\tclip: {map: 'rect(@px @px @px @px)'},\n+\tzIndex: {\n+\t\tmap: '@',\n+\t\tget: function(element){\n+\t\t\treturn element.getComputedStyle('zIndex');\n+\t\t}\n+\t},\n+\t'zoom': {map: '@'},\n+\ttextIndent: {map: '@px'},\n+\topacity: {\n+\t\tmap: '@',\n+\t\tget: function(element){\n+\t\t\treturn getOpacity(this);\n+\t\t},\n+\t\tset: function(element, value){\n+\t\t\tif (value != null) value = parseFloat(value);\n+\t\t\tsetOpacity(this, value);\n+\t\t\treturn this;\n+\t\t}\n+\t},\n+\tcolor: {map: 'rgb(@, @, @)'},\n+\n+\tmaxWidth: {map: '@px'},\n+\tmaxHeight: {map: '@px'},\n \n-['Top', 'Right', 'Bottom', 'Left'].each(function(direction){\n-\tvar Short = Element.ShortStyles;\n-\tvar All = Element.Styles;\n-\t['margin', 'padding'].each(function(style){\n-\t\tvar sd = style + direction;\n-\t\tShort[style][sd] = All[sd] = '@px';\n+\tminWidth: {map: '@px'},\n+\tminHeight: {map: '@px'},\n+\n+\tbackgroundColor: {map: 'rgb(@, @, @)'},\n+\tbackgroundPosition: {\n+\t\tmap: '@px @px',\n+\t\tget: function(element){\n+\t\t\treturn element.getComputedStyle('backgroundPosition') || '0px 0px';\n+\t\t}\n+\t},\n+\n+\tfontWeight: {map: '@'},\n+\tfontSize: {map: '@px'},\n+\n+\tmargin: {map: '@px @px @px @px'},\n+\tmarginTop: {map: '@px'},\n+\tmarginRight: {map: '@px'},\n+\tmarginBottom: {map: '@px'},\n+\tmarginLeft: {map: '@px'},\n+\n+\tpadding: {map: '@px @px @px @px'},\n+\tpaddingTop: {map: '@px'},\n+\tpaddingRight: {map: '@px'},\n+\tpaddingBottom: {map: '@px'},\n+\tpaddingLeft: {map: '@px'},\n+\n+\tborder: {map: '@px @ rgb(@, @, @) @px @ rgb(@, @, @) @px @ rgb(@, @, @)'},\n+\tborderWidth: {map: '@px @px @px @px'},\n+\tborderStyle: {map: '@ @ @ @'},\n+\tborderColor: {map: 'rgb(@, @, @) rgb(@, @, @) rgb(@, @, @) rgb(@, @, @)'},\n+\n+\tborderTop: {map: '@px @ rgb(@, @, @)'},\n+\tborderTopWidth: {map: '@px'},\n+\tborderTopColor: {map: '@px'},\n+\tborderTopStyle: {map: '@px'},\n+\n+\tborderRight: {map: '@px @ rgb(@, @, @)'},\n+\tborderRightWidth: {map: '@px'},\n+\tborderRightStyle: {map: '@px'},\n+\tborderRightColor: {map: '@px'},\n+\n+\tborderBottom: {map: '@px @ rgb(@, @, @)'},\n+\tborderBottomStyle: {map: '@px'},\n+\tborderBottomColor: {map: '@px'},\n+\tborderBottomWidth: {map: '@px'},\n+\n+\tborderLeft: {map: '@px @ rgb(@, @, @)'},\n+\tborderLeftWidth: {map: '@px'},\n+\tborderLeftStyle: {map: '@px'},\n+\tborderLeftColor: {map: '@px'}\n+};\n+\n+Element.ShortStyles = {\n+\tmargin: {\n+\t\tmarginTop: '@px',\n+\t\tmarginRight: '@px',\n+\t\tmarginBottom: '@px',\n+\t\tmarginLeft: '@px'\n+\t},\n+\tpadding: {\n+\t\tpaddingTop: '@px',\n+\t\tpaddingRight: '@px',\n+\t\tpaddingBottom: '@px',\n+\t\tpaddingLeft: '@px'\n+\t},\n+\tborder: {\n+\t\tborderTop: '@px @ rgb(@, @, @)',\n+\t\tborderRight: '@px @ rgb(@, @, @)',\n+\t\tborderBottom: '@px @ rgb(@, @, @)',\n+\t\tborderLeft: '@px @ rgb(@, @, @)'\n+\t},\n+\tborderTop: {\n+\t\tborderTopWidth: '@px',\n+\t\tborderTopColor: '@px',\n+\t\tborderTopStyle: '@px',\n+\t\tborderRightWidth: '@px',\n+\t\tborderRightStyle: '@px',\n+\t\tborderRightColor: '@px',\n+\t\tborderBottomStyle: '@px',\n+\t\tborderBottomColor: '@px',\n+\t\tborderBottomWidth: '@px',\n+\t\tborderLeftWidth: '@px',\n+\t\tborderLeftStyle: '@px',\n+\t\tborderLeftColor: '@px'\n+\t},\n+\tborderRight: {\n+\t\tborderTopWidth: '@px',\n+\t\tborderTopColor: '@px',\n+\t\tborderTopStyle: '@px',\n+\t\tborderRightWidth: '@px',\n+\t\tborderRightStyle: '@px',\n+\t\tborderRightColor: '@px',\n+\t\tborderBottomStyle: '@px',\n+\t\tborderBottomColor: '@px',\n+\t\tborderBottomWidth: '@px',\n+\t\tborderLeftWidth: '@px',\n+\t\tborderLeftStyle: '@px',\n+\t\tborderLeftColor: '@px'\n+\t},\n+\tborderBottom: {\n+\t\tborderTopWidth: '@px',\n+\t\tborderTopColor: '@px',\n+\t\tborderTopStyle: '@px',\n+\t\tborderRightWidth: '@px',\n+\t\tborderRightStyle: '@px',\n+\t\tborderRightColor: '@px',\n+\t\tborderBottomStyle: '@px',\n+\t\tborderBottomColor: '@px',\n+\t\tborderBottomWidth: '@px',\n+\t\tborderLeftWidth: '@px',\n+\t\tborderLeftStyle: '@px',\n+\t\tborderLeftColor: '@px'\n+\t},\n+\tborderLeft: {\n+\t\tborderTopWidth: '@px',\n+\t\tborderTopColor: '@px',\n+\t\tborderTopStyle: '@px',\n+\t\tborderRightWidth: '@px',\n+\t\tborderRightStyle: '@px',\n+\t\tborderRightColor: '@px',\n+\t\tborderBottomStyle: '@px',\n+\t\tborderBottomColor: '@px',\n+\t\tborderBottomWidth: '@px',\n+\t\tborderLeftWidth: '@px',\n+\t\tborderLeftStyle: '@px',\n+\t\tborderLeftColor: '@px'\n+\t},\n+\tborderWidth: {\n+\t\tborderTopWidth: '@px',\n+\t\tborderRightWidth: '@px',\n+\t\tborderBottomWidth: '@px',\n+\t\tborderLeftWidth: '@px'\n+\t},\n+\tborderStyle: {\n+\t\tborderTopStyle: '@px', q\n+\t\tborderRightStyle: '@px',\n+\t\tborderBottomStyle: '@px',\n+\t\tborderLeftStyle: '@px'\n+\t},\n+\tborderColor: {\n+\t\tborderTopColor: '@px',\n+\t\tborderRightColor: '@px',\n+\t\tborderBottomColor: '@px',\n+\t\tborderLeftColor: '@px'\n+\t}\n+};\n+\n+\n+// todo(ibolmo): collisions?\n+\n+if (hasBackgroundPositionXY){",
        "path": "Source/Element/Element.Style.js",
        "position": 326,
        "original_position": 326,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "agreed\n",
        "created_at": "2012-08-22T13:03:54Z",
        "updated_at": "2012-08-22T13:03:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434761",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434761"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434761"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419801",
        "pull_request_review_id": null,
        "id": 1419801,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTk4MDE=",
        "diff_hunk": "@@ -47,14 +47,16 @@ var setVisibility = function(element, opacity){\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n-} : (hasFilter ? function(element, opacity){\n-\tvar style = element.style;\n+} : (hasFilter ? function(element, requestedOpacity){\n+\tvar style = element.style,\n+\t\topacity = requestedOpacity;\n \tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n \tif (opacity == null || opacity == 1) opacity = '';\n \telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n \tvar filter = style.filter || element.getComputedStyle('filter') || '';\n \tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n \tif (!style.filter) style.removeAttribute('filter');\n+\tif (requestedOpacity == 1 && element.getStyle('opacity') != 1) style.filter = 'alpha(opacity=100)';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "f8ace9a903aaa22155b3cfe0b5a302ea05cdf321",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "maybe use `getOpacity(element)` directly here.\n",
        "created_at": "2012-08-20T23:14:51Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1419801",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419801"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1419801"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419924",
        "pull_request_review_id": null,
        "id": 1419924,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTk5MjQ=",
        "diff_hunk": "@@ -47,14 +47,16 @@ var setVisibility = function(element, opacity){\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n-} : (hasFilter ? function(element, opacity){\n-\tvar style = element.style;\n+} : (hasFilter ? function(element, requestedOpacity){\n+\tvar style = element.style,\n+\t\topacity = requestedOpacity;\n \tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n \tif (opacity == null || opacity == 1) opacity = '';\n \telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n \tvar filter = style.filter || element.getComputedStyle('filter') || '';\n \tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n \tif (!style.filter) style.removeAttribute('filter');\n+\tif (requestedOpacity == 1 && getOpacity(element) != 1) style.filter = 'alpha(opacity=100)';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "ccfbe17873e75686e14e8d0c1957603f9ecf1d9f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Probably need something like this again, to prevent overwriting other filters.\n\n``` js\nstyle.filter += ' alpha(opacity=100)';\n```\n",
        "created_at": "2012-08-20T23:32:00Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1419924",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419924"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1419924"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419930",
        "pull_request_review_id": null,
        "id": 1419930,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTk5MzA=",
        "diff_hunk": "@@ -47,14 +47,16 @@ var setVisibility = function(element, opacity){\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n-} : (hasFilter ? function(element, opacity){\n-\tvar style = element.style;\n+} : (hasFilter ? function(element, requestedOpacity){\n+\tvar style = element.style,\n+\t\topacity = requestedOpacity;\n \tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n \tif (opacity == null || opacity == 1) opacity = '';\n \telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n \tvar filter = style.filter || element.getComputedStyle('filter') || '';\n \tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n \tif (!style.filter) style.removeAttribute('filter');\n+\tif (requestedOpacity == 1 && getOpacity(element) != 1) style.filter = 'alpha(opacity=100)';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "ccfbe17873e75686e14e8d0c1957603f9ecf1d9f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "makes me wonder why there isn't a space between `filter + opacity` at https://github.com/mootools/mootools-core/pull/2411/files#L0R57\n",
        "created_at": "2012-08-20T23:32:57Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1419930",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419930"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1419930"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419935",
        "pull_request_review_id": null,
        "id": 1419935,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTk5MzU=",
        "diff_hunk": "@@ -47,14 +47,16 @@ var setVisibility = function(element, opacity){\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n-} : (hasFilter ? function(element, opacity){\n-\tvar style = element.style;\n+} : (hasFilter ? function(element, requestedOpacity){\n+\tvar style = element.style,\n+\t\topacity = requestedOpacity;\n \tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n \tif (opacity == null || opacity == 1) opacity = '';\n \telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n \tvar filter = style.filter || element.getComputedStyle('filter') || '';\n \tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n \tif (!style.filter) style.removeAttribute('filter');\n+\tif (requestedOpacity == 1 && getOpacity(element) != 1) style.filter = 'alpha(opacity=100)';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "ccfbe17873e75686e14e8d0c1957603f9ecf1d9f",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "not sure, want me to add it?\n",
        "created_at": "2012-08-20T23:34:04Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1419935",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1419935"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1419935"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1420023",
        "pull_request_review_id": null,
        "id": 1420023,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjAwMjM=",
        "diff_hunk": "@@ -47,14 +47,16 @@ var setVisibility = function(element, opacity){\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n-} : (hasFilter ? function(element, opacity){\n-\tvar style = element.style;\n+} : (hasFilter ? function(element, requestedOpacity){\n+\tvar style = element.style,\n+\t\topacity = requestedOpacity;\n \tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n \tif (opacity == null || opacity == 1) opacity = '';\n \telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n \tvar filter = style.filter || element.getComputedStyle('filter') || '';\n \tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n \tif (!style.filter) style.removeAttribute('filter');\n+\tif (requestedOpacity == 1 && getOpacity(element) != 1) style.filter = 'alpha(opacity=100)';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "ccfbe17873e75686e14e8d0c1957603f9ecf1d9f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yeah, running this test https://github.com/mootools/mootools-core/blob/master/Specs/1.3client/Element/Element.Style.js#L19-36 shows that the result is actually `blur(strength=50)alpha(opacity=40)`.\n\nTechnically it's another bug, so should be a separate pull request.. but because it's so tiny, a separate commit would be fine by me too.\n",
        "created_at": "2012-08-20T23:47:20Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1420023",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1420023"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1420023"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1420031",
        "pull_request_review_id": null,
        "id": 1420031,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjAwMzE=",
        "diff_hunk": "@@ -47,14 +47,16 @@ var setVisibility = function(element, opacity){\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n-} : (hasFilter ? function(element, opacity){\n-\tvar style = element.style;\n+} : (hasFilter ? function(element, requestedOpacity){\n+\tvar style = element.style,\n+\t\topacity = requestedOpacity;\n \tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n \tif (opacity == null || opacity == 1) opacity = '';\n \telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n \tvar filter = style.filter || element.getComputedStyle('filter') || '';\n \tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n \tif (!style.filter) style.removeAttribute('filter');\n+\tif (requestedOpacity == 1 && getOpacity(element) != 1) style.filter = 'alpha(opacity=100)';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "ccfbe17873e75686e14e8d0c1957603f9ecf1d9f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "maybe add an\n\n``` js\nexpect(div.style.filter).toEqual('blur(strength=50) alpha(opacity=40)');\n```\n\nto that test would be cool\n",
        "created_at": "2012-08-20T23:48:02Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1420031",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1420031"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1420031"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1420056",
        "pull_request_review_id": null,
        "id": 1420056,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjAwNTY=",
        "diff_hunk": "@@ -47,14 +47,16 @@ var setVisibility = function(element, opacity){\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n-} : (hasFilter ? function(element, opacity){\n-\tvar style = element.style;\n+} : (hasFilter ? function(element, requestedOpacity){\n+\tvar style = element.style,\n+\t\topacity = requestedOpacity;\n \tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n \tif (opacity == null || opacity == 1) opacity = '';\n \telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n \tvar filter = style.filter || element.getComputedStyle('filter') || '';\n \tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n \tif (!style.filter) style.removeAttribute('filter');\n+\tif (requestedOpacity == 1 && getOpacity(element) != 1) style.filter = 'alpha(opacity=100)';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "ccfbe17873e75686e14e8d0c1957603f9ecf1d9f",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We should consider making a Filter (builder) helper and then doing a `.filter = filter.toString()`. That would simplify and make the code a little more readable.\n",
        "created_at": "2012-08-20T23:53:06Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1420056",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1420056"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1420056"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1420329",
        "pull_request_review_id": null,
        "id": 1420329,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjAzMjk=",
        "diff_hunk": "@@ -47,14 +47,16 @@ var setVisibility = function(element, opacity){\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n-} : (hasFilter ? function(element, opacity){\n-\tvar style = element.style;\n+} : (hasFilter ? function(element, requestedOpacity){\n+\tvar style = element.style,\n+\t\topacity = requestedOpacity;\n \tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n \tif (opacity == null || opacity == 1) opacity = '';\n \telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n \tvar filter = style.filter || element.getComputedStyle('filter') || '';\n \tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n \tif (!style.filter) style.removeAttribute('filter');\n+\tif (requestedOpacity == 1 && getOpacity(element) != 1) style.filter = 'alpha(opacity=100)';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "ccfbe17873e75686e14e8d0c1957603f9ecf1d9f",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "definitely rethinking this, I wasn't taking into account the possibility of the element having other filters applied, and once that is added into the mix the tests aren't passing anymore. Making a helper seems to be a good idea.\n",
        "created_at": "2012-08-21T00:29:22Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1420329",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1420329"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1420329"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1420391",
        "pull_request_review_id": null,
        "id": 1420391,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjAzOTE=",
        "diff_hunk": "@@ -47,14 +47,16 @@ var setVisibility = function(element, opacity){\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n-} : (hasFilter ? function(element, opacity){\n-\tvar style = element.style;\n+} : (hasFilter ? function(element, requestedOpacity){\n+\tvar style = element.style,\n+\t\topacity = requestedOpacity;\n \tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n \tif (opacity == null || opacity == 1) opacity = '';\n \telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n \tvar filter = style.filter || element.getComputedStyle('filter') || '';\n \tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n \tif (!style.filter) style.removeAttribute('filter');\n+\tif (requestedOpacity == 1 && getOpacity(element) != 1) style.filter = 'alpha(opacity=100)';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "ccfbe17873e75686e14e8d0c1957603f9ecf1d9f",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Right. Add it to Element.storage and in the specs retrieve the filter\nbuilder and check that things are set right.\n\nOr.. use regexp to check the filter string.\n\nOn Mon, Aug 20, 2012 at 7:29 PM, gonchuki notifications@github.com wrote:\n\n> In Source/Element/Element.Style.js:\n> \n> > ```\n> > if (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n> > if (opacity == null || opacity == 1) opacity = '';\n> > else opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n> > var filter = style.filter || element.getComputedStyle('filter') || '';\n> > style.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n> > if (!style.filter) style.removeAttribute('filter');\n> > ```\n> > -   if (requestedOpacity == 1 && getOpacity(element) != 1) style.filter = 'alpha(opacity=100)';\n> \n> definitely rethinking this, I wasn't taking into account the possibility\n> of the element having other filters applied, and once that is added into\n> the mix the tests aren't passing anymore. Making a helper seems to be a\n> good idea.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mootools/mootools-core/pull/2411/files#r1420329.\n",
        "created_at": "2012-08-21T00:39:48Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1420391",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1420391"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1420391"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1423385",
        "pull_request_review_id": null,
        "id": 1423385,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjMzODU=",
        "diff_hunk": "@@ -47,14 +47,16 @@ var setVisibility = function(element, opacity){\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n-} : (hasFilter ? function(element, opacity){\n-\tvar style = element.style;\n+} : (hasFilter ? function(element, requestedOpacity){\n+\tvar style = element.style,\n+\t\topacity = requestedOpacity;\n \tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n \tif (opacity == null || opacity == 1) opacity = '';\n \telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n \tvar filter = style.filter || element.getComputedStyle('filter') || '';\n \tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n \tif (!style.filter) style.removeAttribute('filter');\n+\tif (requestedOpacity == 1 && getOpacity(element) != 1) style.filter = 'alpha(opacity=100)';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "ccfbe17873e75686e14e8d0c1957603f9ecf1d9f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wouldn't that be overcomplicating things, only thing is add/remove opacity. Parsing/building all other properties with all kinds of other types of filter properties sounds hard.\n",
        "created_at": "2012-08-21T11:37:07Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1423385",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1423385"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1423385"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1424318",
        "pull_request_review_id": null,
        "id": 1424318,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjQzMTg=",
        "diff_hunk": "@@ -47,14 +47,16 @@ var setVisibility = function(element, opacity){\n \n var setOpacity = (hasOpacity ? function(element, opacity){\n \telement.style.opacity = opacity;\n-} : (hasFilter ? function(element, opacity){\n-\tvar style = element.style;\n+} : (hasFilter ? function(element, requestedOpacity){\n+\tvar style = element.style,\n+\t\topacity = requestedOpacity;\n \tif (!element.currentStyle || !element.currentStyle.hasLayout) style.zoom = 1;\n \tif (opacity == null || opacity == 1) opacity = '';\n \telse opacity = 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')';\n \tvar filter = style.filter || element.getComputedStyle('filter') || '';\n \tstyle.filter = reAlpha.test(filter) ? filter.replace(reAlpha, opacity) : filter + opacity;\n \tif (!style.filter) style.removeAttribute('filter');\n+\tif (requestedOpacity == 1 && getOpacity(element) != 1) style.filter = 'alpha(opacity=100)';",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 15,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "ccfbe17873e75686e14e8d0c1957603f9ecf1d9f",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What I'm doing right now is just using a small `setFilter` helper that recieves an element, regexp and filter string as a param.\nIt's just reusing the code we had inside `setOpacity` and makes code more readable and concise, which I think is enough of an improvement. I don't want to go overboard with a small block of code that is only for oldIE. I'm also modifying the 1.3 filter tests to not run on IE9+ as that browser is using native opacity and not filters.\n",
        "created_at": "2012-08-21T13:49:07Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1424318",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1424318"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1424318"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1425742",
        "pull_request_review_id": null,
        "id": 1425742,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjU3NDI=",
        "diff_hunk": "@@ -7,31 +7,31 @@ provides: [Element.Style.Specs]\n ...\n */\n describe('Element.set opacity', function(){\n+\tvar hasOpacity = (document.html.style.opacity != null);\n \n \tit('should return the opacity of an Element without seting it before', function(){\n \t\tvar div = new Element('div');\n-\t\tif (document.html.style.opacity != null) div.style.opacity = 0.4;\n+\t\tif (hasOpacity) div.style.opacity = 0.4;\n \t\telse if (document.html.style.filter != null) div.style.filter = 'alpha(opacity=40)';\n \t\telse div.setStyle('opacity', 0.4); // We only have visibility available but opacity should still report a 0..1 value\n \t\texpect(div.get('opacity') == 0.4).toBeTruthy();\n \t});\n \n-\tit('should not remove existent filters on browsers with filters', function(){\n+\tit('should not remove existent filters on browsers with non-standard filters', function(){\n \t\tvar div = new Element('div'),\n-\t\t\tsupports_filters;\n+\t\t\tsupports_old_filters;",
        "path": "Specs/1.3client/Element/Element.Style.js",
        "position": null,
        "original_position": 19,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "185bce9240aaa970f163a66549b609f01effa297",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe change it to camelCase now we're here.\n",
        "created_at": "2012-08-21T15:44:34Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1425742",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1425742"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1425742"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1425744",
        "pull_request_review_id": null,
        "id": 1425744,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjU3NDQ=",
        "diff_hunk": "@@ -45,16 +45,25 @@ var setVisibility = function(element, opacity){\n \telement.style.visibility = opacity > 0 || opacity == null ? 'visible' : 'hidden';\n };\n \n+//<ltIE9>\n+var setFilter = function(element, regexp, value){",
        "path": "Source/Element/Element.Style.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "ce1a282189e68b111860bf9e92d85c74d612de18",
        "original_commit_id": "185bce9240aaa970f163a66549b609f01effa297",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Awesome, looks a lot cleaner this way!\n",
        "created_at": "2012-08-21T15:44:57Z",
        "updated_at": "2012-08-22T13:17:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1425744",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2411",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1425744"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2411#discussion_r1425744"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2411"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434888",
        "pull_request_review_id": null,
        "id": 1434888,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzQ4ODg=",
        "diff_hunk": "@@ -110,45 +122,29 @@ Element.implement({\n \t},\n \n \tgetStyle: function(property){\n-\t\tif (property == 'opacity') return getOpacity(this);\n-\t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\n+\t\tproperty = (property == 'float') ? floatName : property.camelCase();\n+\n+\t\tvar getter = getGetter(property);\n+\t\tif (getter) return getter(property);\n+\n \t\tvar result = this.style[property];\n-\t\tif (!result || property == 'zIndex'){\n-\t\t\tif (Element.ShortStyles.hasOwnProperty(property)){\n-\t\t\t\tresult = [];\n-\t\t\t\tfor (var s in Element.ShortStyles[property]) result.push(this.getStyle(s));\n-\t\t\t\treturn result.join(' ');\n-\t\t\t}\n+\n+\t\tif (!result && Element.ShortStyles.hasOwnProperty(property)){\n+\t\t\tresult = [];\n+\t\t\tfor (var s in Element.ShortStyles[property]) result.push(this.getStyle(s));\n+\t\t\treturn result.join(' ');\n+\t\t} else {",
        "path": "Source/Element/Element.Style.js",
        "position": 78,
        "original_position": 78,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're right the change is not 1:1 with the previous logic. I'll modify soon.\n\nRegards to your suggest change, again you're right. It's not clear why we can't default to `getComputedStyle`. If style getter doesn't work. \n\nMy other thought is, why can't we always use `getComputedStyle`? Was the original idea used to save CPU cycles?\n",
        "created_at": "2012-08-22T13:18:53Z",
        "updated_at": "2012-08-22T13:18:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434888",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434888"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434888"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434908",
        "pull_request_review_id": null,
        "id": 1434908,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzQ5MDg=",
        "diff_hunk": "@@ -213,23 +200,232 @@ Element.Styles = new Hash(Element.Styles);\n \n //</1.2compat>\n \n-Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};\n+Element.Styles = {\n+\tleft: {map: '@px'},",
        "path": "Source/Element/Element.Style.js",
        "position": 137,
        "original_position": 137,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oh and there is a simple byte reduction I had thought of, but I'm not implementing yet. give me your 2c:\n\n``` js\n'left,top,bottom,right,width,height,letterSpacing,lineHeight,...'.split(',').forEach(function(property){\n    Element.Styles[property] = {map: '@px'};\n});\n```\n",
        "created_at": "2012-08-22T13:21:05Z",
        "updated_at": "2012-08-22T13:21:05Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434908",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434908"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434908"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434931",
        "pull_request_review_id": null,
        "id": 1434931,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzQ5MzE=",
        "diff_hunk": "@@ -213,23 +200,232 @@ Element.Styles = new Hash(Element.Styles);\n \n //</1.2compat>\n \n-Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};\n+Element.Styles = {\n+\tleft: {map: '@px'},",
        "path": "Source/Element/Element.Style.js",
        "position": 137,
        "original_position": 137,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Even further:\n\n``` js\n{\n  '@px': 'left,top,bottom,right,width,height,letterSpacing,lineHeight,...',\n  '@': 'zIndex',\n  ...\n}\n\nAnd just have the initializer code once.\n```\n",
        "created_at": "2012-08-22T13:23:11Z",
        "updated_at": "2012-08-22T13:23:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434931",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1434931"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1434931"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1435027",
        "pull_request_review_id": null,
        "id": 1435027,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzUwMjc=",
        "diff_hunk": "@@ -110,45 +122,29 @@ Element.implement({\n \t},\n \n \tgetStyle: function(property){\n-\t\tif (property == 'opacity') return getOpacity(this);\n-\t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\n+\t\tproperty = (property == 'float') ? floatName : property.camelCase();\n+\n+\t\tvar getter = getGetter(property);\n+\t\tif (getter) return getter(property);\n+\n \t\tvar result = this.style[property];\n-\t\tif (!result || property == 'zIndex'){\n-\t\t\tif (Element.ShortStyles.hasOwnProperty(property)){\n-\t\t\t\tresult = [];\n-\t\t\t\tfor (var s in Element.ShortStyles[property]) result.push(this.getStyle(s));\n-\t\t\t\treturn result.join(' ');\n-\t\t\t}\n+\n+\t\tif (!result && Element.ShortStyles.hasOwnProperty(property)){\n+\t\t\tresult = [];\n+\t\t\tfor (var s in Element.ShortStyles[property]) result.push(this.getStyle(s));\n+\t\t\treturn result.join(' ');\n+\t\t} else {",
        "path": "Source/Element/Element.Style.js",
        "position": 78,
        "original_position": 78,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "saving CPU cycles is a sure thing, remember than only IE has `.currentStyle` so other browsers will go though the longer function-call-heavy path. Considering that `getStyle` is used a lot on animations, we should always have the fastest possible path here to avoid jerkiness.\n\nThat being said, **if** it's safe to do `style || getComputedStyle` on this part of the code then we could integrate this default behavior right inside getComputedStyle `if (this.style[property]) return this.style[property];` etc. as the rest of the uses of getComputedStyle are always as a default when the element.style cannot be retrieved (getOpacity, setFilter on #2411, etc)\n",
        "created_at": "2012-08-22T13:32:58Z",
        "updated_at": "2012-08-22T13:33:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1435027",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1435027"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1435027"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1478811",
        "pull_request_review_id": null,
        "id": 1478811,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Nzg4MTE=",
        "diff_hunk": "@@ -110,45 +122,29 @@ Element.implement({\n \t},\n \n \tgetStyle: function(property){\n-\t\tif (property == 'opacity') return getOpacity(this);\n-\t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\n+\t\tproperty = (property == 'float') ? floatName : property.camelCase();\n+\n+\t\tvar getter = getGetter(property);\n+\t\tif (getter) return getter(property);\n+\n \t\tvar result = this.style[property];\n-\t\tif (!result || property == 'zIndex'){\n-\t\t\tif (Element.ShortStyles.hasOwnProperty(property)){\n-\t\t\t\tresult = [];\n-\t\t\t\tfor (var s in Element.ShortStyles[property]) result.push(this.getStyle(s));\n-\t\t\t\treturn result.join(' ');\n-\t\t\t}\n+\n+\t\tif (!result && Element.ShortStyles.hasOwnProperty(property)){\n+\t\t\tresult = [];\n+\t\t\tfor (var s in Element.ShortStyles[property]) result.push(this.getStyle(s));\n+\t\t\treturn result.join(' ');\n+\t\t} else {",
        "path": "Source/Element/Element.Style.js",
        "position": 78,
        "original_position": 78,
        "commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "original_commit_id": "b687daa97cd57951c7e3cdf4707caa1f05bdc270",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "investigated this, it's not safe to just integrate the element style inside `getComputedStyle`. Several tests break on different browsers so it seems it is like that for a reason. Removing the element.style querying altogether is neither an option, once again several tests break. Keeping in line with the comment I left on #2417 I think this part of the code should stay with the same logic flow unless we get way more specs to cover all bases.\n\nedit: also a small correction to my comment above: seems that Opera also has `currentStyle` and it has a serious bug on `getComputedStyle` where if you set something as a %, the `getComputedStyle` call **rounds** the result to the nearest pixel integer instead of returning the exact sub-pixel value as Firefox/IE9/IE10 does (this unit conversion from % to px was addressed on #2160, some browsers convert from % to px, others don't). \n\nTake this as misc info to reinforce the fact that current logic flow is mostly ok, even though I would still like to have `getComputedStyle` used if available instead of `currentStyle` as that's the standard and I will probably get up a PR later with these changes. I still think that doing small incremental changes gets us in a position where we can ship code now  without requiring a ton of new specs.\n",
        "created_at": "2012-08-28T19:57:48Z",
        "updated_at": "2012-08-28T20:23:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1478811",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2414",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1478811"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2414#discussion_r1478811"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1482155",
        "pull_request_review_id": null,
        "id": 1482155,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODIxNTU=",
        "diff_hunk": "@@ -32,6 +32,19 @@ var returnsBordersInWrongOrder = el.style.border != border;\n el = null;\n //</ltIE9>\n \n+var hasGetComputedStyle = !!window.getComputedStyle,\n+\tbrokenGetComputedStyle; // Opera rounds sub-pixel values\n+\n+if (hasGetComputedStyle){\n+\tvar el = document.createElement('div');\n+\tel.style.display = 'none';\n+\tel.style.paddingLeft = '1.5px';\n+\tdocument.html.appendChild(el);",
        "path": "Source/Element/Element.Style.js",
        "position": 11,
        "original_position": 11,
        "commit_id": "4f4f076db4b5ad7473bcfed26e98c469bc7d6b18",
        "original_commit_id": "4f4f076db4b5ad7473bcfed26e98c469bc7d6b18",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "appending this here as the body might not exist yet at this point of the code execution (if js was included in head) and Opera returns empty values for `window.getComputedStyle` on a detached node.\n",
        "created_at": "2012-08-29T03:54:19Z",
        "updated_at": "2012-08-29T03:54:19Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2419#discussion_r1482155",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2419",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1482155"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2419#discussion_r1482155"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2419"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1513462",
        "pull_request_review_id": null,
        "id": 1513462,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTM0NjI=",
        "diff_hunk": "@@ -913,6 +913,11 @@ Element.implement({\n \t},\n \n \tremoveListener: function(type, fn){\n+\t\tif (fn.$ref){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 13,
        "commit_id": "b0de80369f0c163b944cf053261f90e91d7507a3",
        "original_commit_id": "a71e9f9ee383d6911b5b26fdeb679e5860eb37b4",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`if (type == 'unload' && fn.$ref){`\n",
        "created_at": "2012-09-02T17:01:56Z",
        "updated_at": "2012-09-02T17:07:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2423#discussion_r1513462",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/1513462"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2423#discussion_r1513462"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/2694464",
        "pull_request_review_id": null,
        "id": 2694464,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTQ0NjQ=",
        "diff_hunk": "@@ -74,11 +74,21 @@ var Request = this.Request = new Class({\n \t\tif (progressSupport) xhr.onprogress = xhr.onloadstart = empty;\n \t\tclearTimeout(this.timer);\n \n-\t\tthis.response = {text: this.xhr.responseText || '', xml: this.xhr.responseXML};\n-\t\tif (this.options.isSuccess.call(this, this.status))\n-\t\t\tthis.success(this.response.text, this.response.xml);\n-\t\telse\n-\t\t\tthis.failure();\n+\t\tif (this.options.responseType \n+\t\t && (this.options.responseType == 'arraybuffer' || this.options.responseType == 'blob') ){",
        "path": "Source/Request/Request.js",
        "position": null,
        "original_position": 10,
        "commit_id": "cf3351806c9f042c9a61f9444a2ea713a6ca37b9",
        "original_commit_id": "fbb9c954f68185dded59ff1cbc8f9fc30396851f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just put it on one line. Also there is an erroneous space at `) ){`\n",
        "created_at": "2013-01-18T11:50:27Z",
        "updated_at": "2013-01-18T14:00:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2433#discussion_r2694464",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2433",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/2694464"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2433#discussion_r2694464"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2433"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/2694469",
        "pull_request_review_id": null,
        "id": 2694469,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTQ0Njk=",
        "diff_hunk": "@@ -74,11 +74,21 @@ var Request = this.Request = new Class({\n \t\tif (progressSupport) xhr.onprogress = xhr.onloadstart = empty;\n \t\tclearTimeout(this.timer);\n \n-\t\tthis.response = {text: this.xhr.responseText || '', xml: this.xhr.responseXML};\n-\t\tif (this.options.isSuccess.call(this, this.status))\n-\t\t\tthis.success(this.response.text, this.response.xml);\n-\t\telse\n-\t\t\tthis.failure();\n+\t\tif (this.options.responseType \n+\t\t && (this.options.responseType == 'arraybuffer' || this.options.responseType == 'blob') ){\n+\t\t\tthis.response = {};\n+\t\t\tthis.response[this.options.responseType] = this.xhr.response || '';\n+\t\t\tif (this.options.isSuccess.call(this, this.status))",
        "path": "Source/Request/Request.js",
        "position": null,
        "original_position": 13,
        "commit_id": "cf3351806c9f042c9a61f9444a2ea713a6ca37b9",
        "original_commit_id": "fbb9c954f68185dded59ff1cbc8f9fc30396851f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Add curly brackets around ifs.\n",
        "created_at": "2013-01-18T11:50:54Z",
        "updated_at": "2013-01-18T14:00:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2433#discussion_r2694469",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2433",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/2694469"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2433#discussion_r2694469"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2433"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/2694474",
        "pull_request_review_id": null,
        "id": 2694474,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTQ0NzQ=",
        "diff_hunk": "@@ -74,11 +74,21 @@ var Request = this.Request = new Class({\n \t\tif (progressSupport) xhr.onprogress = xhr.onloadstart = empty;\n \t\tclearTimeout(this.timer);\n \n-\t\tthis.response = {text: this.xhr.responseText || '', xml: this.xhr.responseXML};\n-\t\tif (this.options.isSuccess.call(this, this.status))\n-\t\t\tthis.success(this.response.text, this.response.xml);\n-\t\telse\n-\t\t\tthis.failure();\n+\t\tif (this.options.responseType \n+\t\t && (this.options.responseType == 'arraybuffer' || this.options.responseType == 'blob') ){\n+\t\t\tthis.response = {};\n+\t\t\tthis.response[this.options.responseType] = this.xhr.response || '';\n+\t\t\tif (this.options.isSuccess.call(this, this.status))\n+\t\t\t\tthis.success(this.response[this.options.responseType]);\n+\t\t\telse\n+\t\t\t\tthis.failure();\n+\t\t} else {\n+\t\t\tthis.response = {text: this.xhr.responseText || '', xml: this.xhr.responseXML};\n+\t\t\tif (this.options.isSuccess.call(this, this.status))",
        "path": "Source/Request/Request.js",
        "position": null,
        "original_position": 19,
        "commit_id": "cf3351806c9f042c9a61f9444a2ea713a6ca37b9",
        "original_commit_id": "fbb9c954f68185dded59ff1cbc8f9fc30396851f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "idem.\n",
        "created_at": "2013-01-18T11:51:15Z",
        "updated_at": "2013-01-18T14:00:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2433#discussion_r2694474",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2433",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/2694474"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2433#discussion_r2694474"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2433"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/2694479",
        "pull_request_review_id": null,
        "id": 2694479,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTQ0Nzk=",
        "diff_hunk": "@@ -80,17 +81,29 @@ Fired when the Request is making progresses in the download or upload. (This is\n \t\turl: 'image.jpg',\n \t\tonProgress: function(event, xhr){\n \t\t\tvar loaded = event.loaded, total = event.total;\n-\n \t\t\tconsole.log(parseInt(loaded / total * 100, 10));\n \t\t}\n \t});\n \n \tmyRequest.send();\n \n+\tvar mySound = new Request({\n+\t\tmethod: \t'get',",
        "path": "Docs/Request/Request.md",
        "position": null,
        "original_position": 20,
        "commit_id": "cf3351806c9f042c9a61f9444a2ea713a6ca37b9",
        "original_commit_id": "fbb9c954f68185dded59ff1cbc8f9fc30396851f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "remove the extra spaces between `:` and `'get'`.\n",
        "created_at": "2013-01-18T11:51:47Z",
        "updated_at": "2013-01-18T14:00:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2433#discussion_r2694479",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2433",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/2694479"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2433#discussion_r2694479"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2433"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/3335378",
        "pull_request_review_id": null,
        "id": 3335378,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzUzNzg=",
        "diff_hunk": "@@ -792,6 +792,11 @@ var clean = function(item){\n \t\tdelete collected[uid];\n \t\tdelete storage[uid];\n \t}\n+    var props = ['_fireEvent','$family','$constructor'];\n+    props.each(function(property){\n+        if(property in item) delete item[property];",
        "path": "Source/Element/Element.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "f59f069d20ea44b8496333f56eef8c012ae34a6c",
        "original_commit_id": "f59f069d20ea44b8496333f56eef8c012ae34a6c",
        "user": {
            "login": "kguelzau",
            "id": 1053246,
            "node_id": "MDQ6VXNlcjEwNTMyNDY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1053246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kguelzau",
            "html_url": "https://github.com/kguelzau",
            "followers_url": "https://api.github.com/users/kguelzau/followers",
            "following_url": "https://api.github.com/users/kguelzau/following{/other_user}",
            "gists_url": "https://api.github.com/users/kguelzau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kguelzau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kguelzau/subscriptions",
            "organizations_url": "https://api.github.com/users/kguelzau/orgs",
            "repos_url": "https://api.github.com/users/kguelzau/repos",
            "events_url": "https://api.github.com/users/kguelzau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kguelzau/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"Object doesn't support htis action\" is still thrown at \"delete item[property]\" in IE8.\n",
        "created_at": "2013-03-12T14:12:28Z",
        "updated_at": "2013-03-12T14:12:28Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2351#discussion_r3335378",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2351",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/3335378"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2351#discussion_r3335378"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2351"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/7786482",
        "pull_request_review_id": null,
        "id": 7786482,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3ODY0ODI=",
        "diff_hunk": "@@ -20,33 +20,39 @@ var document = this.document;\n var window = document.window = this;\n \n var ua = navigator.userAgent.toLowerCase(),\n-\tplatform = navigator.platform.toLowerCase(),\n-\tUA = ua.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/) || [null, 'unknown', 0],\n-\tmode = UA[1] == 'ie' && document.documentMode;\n+\tplatform = navigator.platform.toLowerCase();\n \n-var Browser = this.Browser = {\n+var parse = function(ua, platform){\n+\tvar UA = ua.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/) || [null, 'unknown', 0],\n+\t\tmode = UA[1] == 'ie' && document.documentMode;\n \n-\textend: Function.prototype.extend,\n+\treturn {\n \n-\tname: (UA[1] == 'version') ? UA[3] : UA[1],\n+\t\textend: Function.prototype.extend,\n \n-\tversion: mode || parseFloat((UA[1] == 'opera' && UA[4]) ? UA[4] : UA[2]),\n+\t\tname: (UA[1] == 'version') ? UA[3] : UA[1],\n \n-\tPlatform: {\n-\t\tname: ua.match(/ip(?:ad|od|hone)/) ? 'ios' : (ua.match(/(?:webos|android)/) || platform.match(/mac|win|linux/) || ['other'])[0]\n-\t},\n+\t\tversion: mode || parseFloat((UA[1] == 'opera' && UA[4]) ? UA[4] : UA[2]),\n \n-\tFeatures: {\n-\t\txpath: !!(document.evaluate),\n-\t\tair: !!(window.runtime),\n-\t\tquery: !!(document.querySelector),\n-\t\tjson: !!(window.JSON)\n-\t},\n+\t\tPlatform: {\n+\t\t\tname: ua.match(/ip(?:ad|od|hone)/) ? 'ios' : (ua.match(/(?:webos|android)/) || platform.match(/mac|win|linux/) || ['other'])[0]\n+\t\t},\n \n-\tPlugins: {}\n+\t\tFeatures: {\n+\t\t\txpath: !!(document.evaluate),\n+\t\t\tair: !!(window.runtime),\n+\t\t\tquery: !!(document.querySelector),\n+\t\t\tjson: !!(window.JSON)\n+\t\t},\n \n+\t\tPlugins: {}",
        "path": "Source/Browser/Browser.js",
        "position": null,
        "original_position": 46,
        "commit_id": "e20ebdb598330aa0ac5ea48b8b982316af4791a4",
        "original_commit_id": "4831986bfd90f9d8e4539a6a95d9c37f89025c26",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I wouldn't include Features and Plugins, but add them later (using `extend`).\n",
        "created_at": "2013-11-20T10:14:52Z",
        "updated_at": "2013-11-20T18:21:19Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2541#discussion_r7786482",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2541",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/7786482"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2541#discussion_r7786482"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2541"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9154033",
        "pull_request_review_id": null,
        "id": 9154033,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxNTQwMzM=",
        "diff_hunk": "@@ -147,6 +147,12 @@ Element.implement({\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n \t\tvar result = this.style[property];\n+\t\tif (!result && property == 'backgroundPosition') return '0px 0px';",
        "path": "Source/Element/Element.Style.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "1110ceef4824383c3f89aff5c3ab29bc2da2634c",
        "original_commit_id": "1110ceef4824383c3f89aff5c3ab29bc2da2634c",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you are short circuiting too early here and causing a regression in IE. IE needs to run the code in [line 157](https://github.com/SergioCrisostomo/mootools-core/blob/background-position-FF/Source/Element/Element.Style.js#L157), which decomposes the X/Y components from the getter declared on [line 268](https://github.com/SergioCrisostomo/mootools-core/blob/background-position-FF/Source/Element/Element.Style.js#L268) (basically `getStyle` is ran recursively, once with `backgroundPositionX` and once with `backgroundPositionY`).  \n\nedit: added links to line numbers pointing to modified source to avoid confusion.\n",
        "created_at": "2014-01-24T16:35:34Z",
        "updated_at": "2014-01-24T17:12:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2554#discussion_r9154033",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2554",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9154033"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2554#discussion_r9154033"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2554"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9158255",
        "pull_request_review_id": null,
        "id": 9158255,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxNTgyNTU=",
        "diff_hunk": "@@ -147,6 +147,12 @@ Element.implement({\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n \t\tvar result = this.style[property];\n+\t\tif (!result && property == 'backgroundPosition') return '0px 0px';",
        "path": "Source/Element/Element.Style.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "1110ceef4824383c3f89aff5c3ab29bc2da2634c",
        "original_commit_id": "1110ceef4824383c3f89aff5c3ab29bc2da2634c",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@gonchuki thank you for valuable input!\n\nI tried this with a [fiddle](http://jsfiddle.net/6CbnX/show/) in IE6~8 and worked for me.\nPart of the problem I see is that `/^backgroundPosition[XY]?$/.test('backgroundPosition')` is `true`, so the next line will never be called and return is always `}) || '0px';` when property == 'backgroundPosition' (without X or Y).\n\nCan we drop the `?` in the regex so `backgroundPosition` (without X or Y) will not pass?\n",
        "created_at": "2014-01-24T18:43:22Z",
        "updated_at": "2014-01-24T19:43:03Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2554#discussion_r9158255",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2554",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9158255"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2554#discussion_r9158255"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2554"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9164124",
        "pull_request_review_id": null,
        "id": 9164124,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxNjQxMjQ=",
        "diff_hunk": "@@ -147,6 +147,12 @@ Element.implement({\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n \t\tvar result = this.style[property];\n+\t\tif (!result && property == 'backgroundPosition') return '0px 0px';",
        "path": "Source/Element/Element.Style.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "1110ceef4824383c3f89aff5c3ab29bc2da2634c",
        "original_commit_id": "1110ceef4824383c3f89aff5c3ab29bc2da2634c",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Dropping the `?` will disable normalization of keywords into their corresponding percentage values.  \nStill, Firefox should not be entering on that if clause as it doesn't have support for the nonstandard X/Y variants (that's what `hasBackgroundPositionXY` checks on initialization of the library) \n",
        "created_at": "2014-01-24T21:39:09Z",
        "updated_at": "2014-01-24T21:39:09Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2554#discussion_r9164124",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2554",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9164124"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2554#discussion_r9164124"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2554"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9164372",
        "pull_request_review_id": null,
        "id": 9164372,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxNjQzNzI=",
        "diff_hunk": "@@ -147,6 +147,12 @@ Element.implement({\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n \t\tvar result = this.style[property];\n+\t\tif (!result && property == 'backgroundPosition') return '0px 0px';",
        "path": "Source/Element/Element.Style.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "1110ceef4824383c3f89aff5c3ab29bc2da2634c",
        "original_commit_id": "1110ceef4824383c3f89aff5c3ab29bc2da2634c",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "By the way, I'm mobile for the rest of the weekend so can't test myself, but the specs I wrote back then should cover for most of the possible regressions when modifying that code. Did you run the test suite on IE? Tests should fail on IE with these changes. \n",
        "created_at": "2014-01-24T21:45:27Z",
        "updated_at": "2014-01-24T21:45:27Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2554#discussion_r9164372",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2554",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9164372"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2554#discussion_r9164372"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2554"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9284786",
        "pull_request_review_id": null,
        "id": 9284786,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyODQ3ODY=",
        "diff_hunk": "@@ -147,6 +147,12 @@ Element.implement({\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n \t\tvar result = this.style[property];\n+\t\tif (!result && property == 'backgroundPosition') return '0px 0px';",
        "path": "Source/Element/Element.Style.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "1110ceef4824383c3f89aff5c3ab29bc2da2634c",
        "original_commit_id": "1110ceef4824383c3f89aff5c3ab29bc2da2634c",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@gonchuki thanks again for input! I gave a new look to this, and in fact there is little margin here.\nI saw your PR to be more tolerant with the test and agree with it. But also agree that would be nice to be consistent with result. Would you be oposed (or see bad code) in this: https://github.com/SergioCrisostomo/mootools-core/commit/b06b788cc624799a5c8bae1f32be4b09127430ce\n\nThis time I did test it on the Specs with IE(6~9,11),  FF and Chrome.\n",
        "created_at": "2014-01-29T21:14:05Z",
        "updated_at": "2014-01-29T21:15:19Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2554#discussion_r9284786",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2554",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9284786"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2554#discussion_r9284786"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2554"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9572071",
        "pull_request_review_id": null,
        "id": 9572071,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzIwNzE=",
        "diff_hunk": "@@ -90,7 +103,7 @@ Element.implement({\n \t\t\tvar color = result.match(/rgba?\\([\\d\\s,]+\\)/);\n \t\t\tif (color) result = result.replace(color[0], color[0].rgbToHex());\n \t\t}\n-\t\tif (Browser.Engine.presto || (Browser.Engine.trident && !$chk(parseInt(result, 10)))){\n+\t\tif (!window.getComputedStyle && !$chk(parseInt(result, 10))){",
        "path": "Source/Element/Element.Style.js",
        "position": 60,
        "original_position": 60,
        "commit_id": "b8edadfcf641a8f73b0136299cb8c374142db51b",
        "original_commit_id": "b8edadfcf641a8f73b0136299cb8c374142db51b",
        "user": {
            "login": "megawac",
            "id": 3475472,
            "node_id": "MDQ6VXNlcjM0NzU0NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3475472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megawac",
            "html_url": "https://github.com/megawac",
            "followers_url": "https://api.github.com/users/megawac/followers",
            "following_url": "https://api.github.com/users/megawac/following{/other_user}",
            "gists_url": "https://api.github.com/users/megawac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megawac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megawac/subscriptions",
            "organizations_url": "https://api.github.com/users/megawac/orgs",
            "repos_url": "https://api.github.com/users/megawac/repos",
            "events_url": "https://api.github.com/users/megawac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megawac/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Isn't `$chk` deprecated - can't this be `isFinite(result)` or `Type.isNumber(parseInt(result, 10))`\n",
        "created_at": "2014-02-10T00:37:11Z",
        "updated_at": "2014-02-10T00:37:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2559#discussion_r9572071",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2559",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9572071"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2559#discussion_r9572071"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2559"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9572530",
        "pull_request_review_id": null,
        "id": 9572530,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzI1MzA=",
        "diff_hunk": "@@ -90,7 +103,7 @@ Element.implement({\n \t\t\tvar color = result.match(/rgba?\\([\\d\\s,]+\\)/);\n \t\t\tif (color) result = result.replace(color[0], color[0].rgbToHex());\n \t\t}\n-\t\tif (Browser.Engine.presto || (Browser.Engine.trident && !$chk(parseInt(result, 10)))){\n+\t\tif (!window.getComputedStyle && !$chk(parseInt(result, 10))){",
        "path": "Source/Element/Element.Style.js",
        "position": 60,
        "original_position": 60,
        "commit_id": "b8edadfcf641a8f73b0136299cb8c374142db51b",
        "original_commit_id": "b8edadfcf641a8f73b0136299cb8c374142db51b",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this is a patch for the 1.2.x branch to support people who are stuck on an older version but need to support IE11, only the minimal viable code was backported to avoid changing the behavior of the library.\n",
        "created_at": "2014-02-10T01:29:38Z",
        "updated_at": "2014-02-10T01:29:38Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2559#discussion_r9572530",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2559",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9572530"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2559#discussion_r9572530"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2559"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10233695",
        "pull_request_review_id": null,
        "id": 10233695,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMjMzNjk1",
        "diff_hunk": "@@ -87,7 +87,7 @@ Browser.Features.xhr = !!(Browser.Request);\n // Flash detection\n \n var version = (Function.attempt(function(){\n-\treturn navigator.plugins['Shockwave Flash'].description;\n+    \treturn navigator.plugins['Shockwave Flash']?navigator.plugins['Shockwave Flash'].description:null;\t",
        "path": "Source/Browser/Browser.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "98ec2c232e8be59bbe42f3d3d5fd5d1fba933d27",
        "original_commit_id": "98ec2c232e8be59bbe42f3d3d5fd5d1fba933d27",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Move the `navigator.plugins['Shockwave Flash']` to a variable outside.\nThen do: `return shockwavePlugin && shockwavePlugin.description;`\n",
        "created_at": "2014-03-03T22:47:45Z",
        "updated_at": "2014-03-03T22:47:45Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2509#discussion_r10233695",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2509",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10233695"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2509#discussion_r10233695"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2509"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10233716",
        "pull_request_review_id": null,
        "id": 10233716,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMjMzNzE2",
        "diff_hunk": "@@ -92,7 +92,7 @@ Fx.CSS = new Class({\n \t//renders the change to an element\n \n \trender: function(element, property, value, unit){\n-\t\telement.setStyle(property, this.serve(value, unit));\n+\t\t$(element).setStyle(property, this.serve(value, unit));",
        "path": "Source/Fx/Fx.CSS.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "98ec2c232e8be59bbe42f3d3d5fd5d1fba933d27",
        "original_commit_id": "98ec2c232e8be59bbe42f3d3d5fd5d1fba933d27",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We'll need a test case that shows that in IE < 8 render throws an error.\n",
        "created_at": "2014-03-03T22:48:10Z",
        "updated_at": "2014-03-03T22:48:10Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2509#discussion_r10233716",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2509",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10233716"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2509#discussion_r10233716"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2509"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10413676",
        "pull_request_review_id": null,
        "id": 10413676,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDEzNjc2",
        "diff_hunk": "@@ -142,9 +142,11 @@ Element.NativeEvents = {\n \terror: 1, abort: 1, scroll: 1 //misc\n };\n \n-Element.Events = {mousewheel: {\n-\tbase: (Browser.firefox) ? 'DOMMouseScroll' : 'mousewheel'\n-}};\n+Element.Events = {\n+\tmousewheel: {\n+\t\tbase: \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : document.onmousewheel !== undefined ? \"mousewheel\" : \"DOMMouseScroll\"",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 9,
        "commit_id": "8d57c00c227bcb3f1e8c462e4b0d781c852333bb",
        "original_commit_id": "d20772b5fc1f00b1b7e2c2c91a45c64324d23d75",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can't you use `document.documentElement` rather than creating a new element?\n",
        "created_at": "2014-03-09T13:03:24Z",
        "updated_at": "2014-03-09T17:56:20Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2572#discussion_r10413676",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2572",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10413676"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2572#discussion_r10413676"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2572"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10413679",
        "pull_request_review_id": null,
        "id": 10413679,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDEzNjc5",
        "diff_hunk": "@@ -142,9 +142,11 @@ Element.NativeEvents = {\n \terror: 1, abort: 1, scroll: 1 //misc\n };\n \n-Element.Events = {mousewheel: {\n-\tbase: (Browser.firefox) ? 'DOMMouseScroll' : 'mousewheel'\n-}};\n+Element.Events = {\n+\tmousewheel: {\n+\t\tbase: \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : document.onmousewheel !== undefined ? \"mousewheel\" : \"DOMMouseScroll\"",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 9,
        "commit_id": "8d57c00c227bcb3f1e8c462e4b0d781c852333bb",
        "original_commit_id": "d20772b5fc1f00b1b7e2c2c91a45c64324d23d75",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use single quotes.\n",
        "created_at": "2014-03-09T13:04:07Z",
        "updated_at": "2014-03-09T17:56:20Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2572#discussion_r10413679",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2572",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10413679"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2572#discussion_r10413679"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2572"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10413684",
        "pull_request_review_id": null,
        "id": 10413684,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDEzNjg0",
        "diff_hunk": "@@ -142,9 +142,11 @@ Element.NativeEvents = {\n \terror: 1, abort: 1, scroll: 1 //misc\n };\n \n-Element.Events = {mousewheel: {\n-\tbase: (Browser.firefox) ? 'DOMMouseScroll' : 'mousewheel'\n-}};\n+Element.Events = {\n+\tmousewheel: {\n+\t\tbase: \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : document.onmousewheel !== undefined ? \"mousewheel\" : \"DOMMouseScroll\"",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 9,
        "commit_id": "8d57c00c227bcb3f1e8c462e4b0d781c852333bb",
        "original_commit_id": "d20772b5fc1f00b1b7e2c2c91a45c64324d23d75",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nvar el = document.documentElement;\n// ...\n\nbase: 'onwheel' in el ? 'wheel' : 'onmousewheel' in el ? 'mousewheel' : 'DOMMouseScroll'\n```\n\ndoes that work?\n",
        "created_at": "2014-03-09T13:06:07Z",
        "updated_at": "2014-03-09T17:56:20Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2572#discussion_r10413684",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2572",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10413684"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2572#discussion_r10413684"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2572"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10413717",
        "pull_request_review_id": null,
        "id": 10413717,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDEzNzE3",
        "diff_hunk": "@@ -142,9 +142,11 @@ Element.NativeEvents = {\n \terror: 1, abort: 1, scroll: 1 //misc\n };\n \n-Element.Events = {mousewheel: {\n-\tbase: (Browser.firefox) ? 'DOMMouseScroll' : 'mousewheel'\n-}};\n+Element.Events = {\n+\tmousewheel: {\n+\t\tbase: \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : document.onmousewheel !== undefined ? \"mousewheel\" : \"DOMMouseScroll\"",
        "path": "Source/Element/Element.Event.js",
        "position": null,
        "original_position": 9,
        "commit_id": "8d57c00c227bcb3f1e8c462e4b0d781c852333bb",
        "original_commit_id": "d20772b5fc1f00b1b7e2c2c91a45c64324d23d75",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "it should, need tests, I took the ft from the moz page I linked in the pr message\n",
        "created_at": "2014-03-09T13:16:19Z",
        "updated_at": "2014-03-09T17:56:20Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2572#discussion_r10413717",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2572",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10413717"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2572#discussion_r10413717"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2572"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10416485",
        "pull_request_review_id": null,
        "id": 10416485,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDE2NDg1",
        "diff_hunk": "@@ -4,7 +4,7 @@\n   \"description\": \"MooTools is a compact, modular, Object-Oriented JavaScript framework designed for the intermediate to advanced JavaScript developer.\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n-    \"test\": \"./node_modules/.bin/grunt --verbose\"\n+    \"test\": \"grunt default:travis --verbose\"",
        "path": "package.json",
        "position": 5,
        "original_position": 5,
        "commit_id": "4c6ae5a5f66b78f4ad9f6f443867f6846cca428c",
        "original_commit_id": "4c6ae5a5f66b78f4ad9f6f443867f6846cca428c",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not as familiar. Is `npm test` used by reg. folks like me, or by travis? Reason is that not everyone should have access to travis (saucelabs) testing, but all of us would have access to PhantomJS (`grunt default`).\n",
        "created_at": "2014-03-09T23:12:33Z",
        "updated_at": "2014-03-09T23:12:33Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2575#discussion_r10416485",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2575",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10416485"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2575#discussion_r10416485"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2575"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10416501",
        "pull_request_review_id": null,
        "id": 10416501,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDE2NTAx",
        "diff_hunk": "@@ -4,7 +4,7 @@\n   \"description\": \"MooTools is a compact, modular, Object-Oriented JavaScript framework designed for the intermediate to advanced JavaScript developer.\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n-    \"test\": \"./node_modules/.bin/grunt --verbose\"\n+    \"test\": \"grunt default:travis --verbose\"",
        "path": "package.json",
        "position": 5,
        "original_position": 5,
        "commit_id": "4c6ae5a5f66b78f4ad9f6f443867f6846cca428c",
        "original_commit_id": "4c6ae5a5f66b78f4ad9f6f443867f6846cca428c",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`npm test` is used by travis.\n\nIt depends, sometimes `npm test` is for reg people too.\n\nIn our case we can just do `grunt` that runs phantomjs.\n",
        "created_at": "2014-03-09T23:15:07Z",
        "updated_at": "2014-03-09T23:15:07Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2575#discussion_r10416501",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2575",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10416501"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2575#discussion_r10416501"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2575"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10545654",
        "pull_request_review_id": null,
        "id": 10545654,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNTQ1NjU0",
        "diff_hunk": "@@ -33,10 +33,10 @@\n     \"grunt-mootools-packager\": \"^0.1.2\",\n     \"grunt-contrib-clean\": \"~0.5.0\",\n     \"grunt-contrib-connect\": \"~0.7.0\",\n-    \"grunt-karma\": \"~0.7.2\",\n+    \"grunt-karma\": \"0.8.0\",",
        "path": "package.json",
        "position": null,
        "original_position": 5,
        "commit_id": "11ff00a9c6e7c9eb59b834dcf6e0b2d5a918c9f9",
        "original_commit_id": "7891a04f611b0db6f62b763e490773bc0a9db9d1",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should be `~0.8.0`.\n",
        "created_at": "2014-03-12T22:45:33Z",
        "updated_at": "2014-03-12T22:54:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2577#discussion_r10545654",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2577",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10545654"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2577#discussion_r10545654"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2577"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9948695",
        "pull_request_review_id": null,
        "id": 9948695,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NDg2OTU=",
        "diff_hunk": "@@ -69,7 +69,7 @@ JSON.encode = JSON.stringify ? function(obj){\n \n JSON.decode = function(string, secure){\n \tif (!string || typeOf(string) != 'string') return null;\n-\n+\tsecure = secure == undefined ? true : secure;",
        "path": "Source/Utilities/JSON.js",
        "position": null,
        "original_position": 5,
        "commit_id": "fb967304d0964ba47adc7c20f6883a7555c2cdbd",
        "original_commit_id": "20a1d5a787f9384d40c31cfbcf11326443d3f5cc",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`if (secure == undefined) secure = true;`\n",
        "created_at": "2014-02-21T15:26:36Z",
        "updated_at": "2014-03-16T20:36:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9948695",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2562",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9948695"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9948695"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2562"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9948945",
        "pull_request_review_id": null,
        "id": 9948945,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NDg5NDU=",
        "diff_hunk": "@@ -69,7 +69,7 @@ JSON.encode = JSON.stringify ? function(obj){\n \n JSON.decode = function(string, secure){\n \tif (!string || typeOf(string) != 'string') return null;\n-\n+\tsecure = secure == undefined ? true : secure;",
        "path": "Source/Utilities/JSON.js",
        "position": null,
        "original_position": 5,
        "commit_id": "fb967304d0964ba47adc7c20f6883a7555c2cdbd",
        "original_commit_id": "20a1d5a787f9384d40c31cfbcf11326443d3f5cc",
        "user": {
            "login": "timwienk",
            "id": 150598,
            "node_id": "MDQ6VXNlcjE1MDU5OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/150598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timwienk",
            "html_url": "https://github.com/timwienk",
            "followers_url": "https://api.github.com/users/timwienk/followers",
            "following_url": "https://api.github.com/users/timwienk/following{/other_user}",
            "gists_url": "https://api.github.com/users/timwienk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timwienk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timwienk/subscriptions",
            "organizations_url": "https://api.github.com/users/timwienk/orgs",
            "repos_url": "https://api.github.com/users/timwienk/repos",
            "events_url": "https://api.github.com/users/timwienk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timwienk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually:\n\n``` javascript\nif (secure == null) secure = true;\n```\n",
        "created_at": "2014-02-21T15:32:28Z",
        "updated_at": "2014-03-16T20:36:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9948945",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2562",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9948945"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9948945"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2562"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9948961",
        "pull_request_review_id": null,
        "id": 9948961,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NDg5NjE=",
        "diff_hunk": "@@ -69,7 +69,7 @@ JSON.encode = JSON.stringify ? function(obj){\n \n JSON.decode = function(string, secure){\n \tif (!string || typeOf(string) != 'string') return null;\n-\n+\tsecure = secure == undefined ? true : secure;\n \tif (secure || JSON.secure){",
        "path": "Source/Utilities/JSON.js",
        "position": null,
        "original_position": 6,
        "commit_id": "fb967304d0964ba47adc7c20f6883a7555c2cdbd",
        "original_commit_id": "20a1d5a787f9384d40c31cfbcf11326443d3f5cc",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually you need to account for `JSON.secure`'s value.\n\nSee the following:\n\n| secure | JSON.secure | expected result |\n| --- | --- | --- |\n| null | null | secure |\n| null | false | not secured |\n| null | true | secure |\n| false | null | not secured |\n| false | false | not secured |\n| false | true | not secured |\n| true | null | secured |\n| true | false | secured |\n| true | true | secured |\n\nI think then we need to add a `JSON.secure = true;` some where and add `if (secure == undefined) secure = JSON.secure;`\n",
        "created_at": "2014-02-21T15:32:41Z",
        "updated_at": "2014-03-16T20:36:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9948961",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2562",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9948961"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9948961"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2562"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9971610",
        "pull_request_review_id": null,
        "id": 9971610,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzE2MTA=",
        "diff_hunk": "@@ -69,8 +69,13 @@ JSON.encode = JSON.stringify ? function(obj){\n \n JSON.decode = function(string, secure){\n \tif (!string || typeOf(string) != 'string') return null;\n+    \n+\t//<1.4compat>\n+\tif (typeof JSON.secure != \"undefined\" && !secure) secure = JSON.secure;",
        "path": "Source/Utilities/JSON.js",
        "position": null,
        "original_position": 6,
        "commit_id": "fb967304d0964ba47adc7c20f6883a7555c2cdbd",
        "original_commit_id": "f63dc19e4a073949a767ac88cbadf94adb66ba6d",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`if (secure == null) secure = JSON.secure;`\n\nYou need to define `JSON.secure = true;` outside  `JSON.decode`\n",
        "created_at": "2014-02-22T15:45:33Z",
        "updated_at": "2014-03-16T20:36:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9971610",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2562",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9971610"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9971610"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2562"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9971613",
        "pull_request_review_id": null,
        "id": 9971613,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzE2MTM=",
        "diff_hunk": "@@ -69,8 +69,13 @@ JSON.encode = JSON.stringify ? function(obj){\n \n JSON.decode = function(string, secure){\n \tif (!string || typeOf(string) != 'string') return null;\n+    \n+\t//<1.4compat>\n+\tif (typeof JSON.secure != \"undefined\" && !secure) secure = JSON.secure;",
        "path": "Source/Utilities/JSON.js",
        "position": null,
        "original_position": 6,
        "commit_id": "fb967304d0964ba47adc7c20f6883a7555c2cdbd",
        "original_commit_id": "f63dc19e4a073949a767ac88cbadf94adb66ba6d",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "and document JSON.secure as a global option.\n",
        "created_at": "2014-02-22T15:46:02Z",
        "updated_at": "2014-03-16T20:36:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9971613",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2562",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9971613"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9971613"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2562"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9971887",
        "pull_request_review_id": null,
        "id": 9971887,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzE4ODc=",
        "diff_hunk": "@@ -69,8 +69,13 @@ JSON.encode = JSON.stringify ? function(obj){\n \n JSON.decode = function(string, secure){\n \tif (!string || typeOf(string) != 'string') return null;\n+    \n+\t//<1.4compat>\n+\tif (typeof JSON.secure != \"undefined\" && !secure) secure = JSON.secure;",
        "path": "Source/Utilities/JSON.js",
        "position": null,
        "original_position": 6,
        "commit_id": "fb967304d0964ba47adc7c20f6883a7555c2cdbd",
        "original_commit_id": "f63dc19e4a073949a767ac88cbadf94adb66ba6d",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo  I like the idea to have a documented global JSON.secure, didn't think of that option actually.\n\nWe could just keep the code as current PR and document the possibility to use a global `JSON.secure`. \nYour last suggestion would make `JSON.secure` be ignored if secure is `false`, because `if (secure == null)` will turn false and we have a new L78 just looking for secure.\n\nAs it is it defaults to secure. If we add extra `JSON.secure = true;` as global, then the old code that followed the docs using `secure = false` will be forced to secure.\n\nIf we keep this PR, there is no break of BC in the code that active defined `secure` or `JSON.secure`.\n",
        "created_at": "2014-02-22T16:47:04Z",
        "updated_at": "2014-03-16T20:36:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9971887",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2562",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9971887"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9971887"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2562"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9971908",
        "pull_request_review_id": null,
        "id": 9971908,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzE5MDg=",
        "diff_hunk": "@@ -69,8 +69,13 @@ JSON.encode = JSON.stringify ? function(obj){\n \n JSON.decode = function(string, secure){\n \tif (!string || typeOf(string) != 'string') return null;\n+    \n+\t//<1.4compat>\n+\tif (typeof JSON.secure != \"undefined\" && !secure) secure = JSON.secure;\n+\t//</1.4compat>\n \n-\tif (secure || JSON.secure){\n+\tif (secure == null) secure = true; ",
        "path": "Source/Utilities/JSON.js",
        "position": null,
        "original_position": 10,
        "commit_id": "fb967304d0964ba47adc7c20f6883a7555c2cdbd",
        "original_commit_id": "f63dc19e4a073949a767ac88cbadf94adb66ba6d",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This would be `if (secure == null) secure = JSON.secure;`\n\nI don't understand what you mean. Look at the table I proposed. You would add JSON.secure = false in the 1.4compat block. \n\nI like to think of the right API and make the code work around it. You need to look at what it did before the changes, where the API should be, and make the changes considering those factors. \n",
        "created_at": "2014-02-22T16:52:02Z",
        "updated_at": "2014-03-16T20:36:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9971908",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2562",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9971908"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9971908"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2562"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9972359",
        "pull_request_review_id": null,
        "id": 9972359,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5NzIzNTk=",
        "diff_hunk": "@@ -0,0 +1,41 @@\n+/*\n+---\n+\n+name: JSON\n+\n+description: JSON encoder and decoder.\n+\n+license: MIT-style license.\n+\n+SeeAlso: <http://www.json.org/>\n+\n+requires: [Array, String, Number, Function]\n+\n+provides: JSON\n+\n+...\n+*/\n+describe('JSON', function(){\n+\n+\tvar goodString = '{\"name\":\"Jim Cowart\",\"location\":{\"city\":{\"name\":\"Chattanooga\",\"population\":167674}}}';\n+    var badString = 'alert(\"I\\'m a bad string!\")';",
        "path": "Specs/1.5base/Utilities/JSON.js",
        "position": null,
        "original_position": 21,
        "commit_id": "fb967304d0964ba47adc7c20f6883a7555c2cdbd",
        "original_commit_id": "3eb5ddccd9ce10d4faf11d156135b68a51b4d585",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you check the spacing. Looks like you have spaces at the beginning of the lines. \n\nAlso can you add a spec for `JSON.secure` global option.\n",
        "created_at": "2014-02-22T18:35:41Z",
        "updated_at": "2014-03-16T20:36:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9972359",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2562",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/9972359"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2562#discussion_r9972359"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2562"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10641381",
        "pull_request_review_id": null,
        "id": 10641381,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjQxMzgx",
        "diff_hunk": "@@ -33,7 +33,9 @@ Converts a JSON string into a JavaScript object.\n ### Arguments:\n \n 1. string - (*string*) The string to evaluate.\n-2. secure - (*boolean*, optional: defaults to false) If set to true, checks for any hazardous syntax and returns null if any found.\n+2. secure - (*boolean*, optional) If set to true, checks for any hazardous syntax and returns null if any found.",
        "path": "Docs/Utilities/JSON.md",
        "position": null,
        "original_position": 5,
        "commit_id": "fb967304d0964ba47adc7c20f6883a7555c2cdbd",
        "original_commit_id": "0f7f05984eb9374c910e992015f078e8d10bfa11",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`(*boolean*, optional: defaults to true)`\n",
        "created_at": "2014-03-16T20:18:49Z",
        "updated_at": "2014-03-16T20:36:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2562#discussion_r10641381",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2562",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10641381"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2562#discussion_r10641381"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2562"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10413720",
        "pull_request_review_id": null,
        "id": 10413720,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDEzNzIw",
        "diff_hunk": "@@ -12,9 +12,47 @@ Browser.Features {#Browser:Browser-Features}\n * Browser.Features.json - (*boolean*) True if the browser has a native JSON object.\n * Browser.Features.xhr - (*boolean*) True if the browser supports native XMLHTTP object.\n \n+Browser.Plugins {#Browser:Browser-Plugins}\n+------------------------------------------\n+\n+* Browser.Plugins.Flash - (*object*) - An object with properties corresponding to the `version` and `build` number of the installed Flash plugin. Note: if flash is not installed, both `Browser.Plugins.Flash.version` and `Browser.Plugins.Flash.build` will return zero.",
        "path": "Docs/Browser/Browser.md",
        "position": null,
        "original_position": 7,
        "commit_id": "121c4abb9817f501d2e4435466560cad52758b14",
        "original_commit_id": "c8ec4e9ace5f0c299319a64ebc1633a358ab0ac3",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This Flash stuff is also deprecated. 96098782616da / #2327 \n",
        "created_at": "2014-03-09T13:17:10Z",
        "updated_at": "2014-03-17T08:14:41Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2569#discussion_r10413720",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2569",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10413720"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2569#discussion_r10413720"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10634706",
        "pull_request_review_id": null,
        "id": 10634706,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjM0NzA2",
        "diff_hunk": "@@ -78,7 +78,7 @@ describe('Browser', function(){\n \n \tit('should think it is executed in a browser', function(){\n \t\tvar isPhantomJS = !!navigator.userAgent.match(/phantomjs/i);\n-\t\texpect(isPhantomJS || Browser.ie || Browser.safari || Browser.chrome || Browser.firefox || Browser.opera).toEqual(true);\n+\t\texpect(isPhantomJS || Browser.ie || Browser.modernie || Browser.safari || Browser.chrome || Browser.firefox || Browser.opera).toEqual(true);",
        "path": "Specs/Browser/Browser.js",
        "position": null,
        "original_position": 5,
        "commit_id": "121c4abb9817f501d2e4435466560cad52758b14",
        "original_commit_id": "9aa89ce52b612ef56cb58208537dec49a94e2ab3",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this should not be needed anymore after your latest changes.\n",
        "created_at": "2014-03-15T13:22:19Z",
        "updated_at": "2014-03-17T08:14:41Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2569#discussion_r10634706",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2569",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10634706"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2569#discussion_r10634706"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10634709",
        "pull_request_review_id": null,
        "id": 10634709,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjM0NzA5",
        "diff_hunk": "@@ -78,7 +78,7 @@ describe('Browser', function(){\n \n \tit('should think it is executed in a browser', function(){\n \t\tvar isPhantomJS = !!navigator.userAgent.match(/phantomjs/i);\n-\t\texpect(isPhantomJS || Browser.ie || Browser.safari || Browser.chrome || Browser.firefox || Browser.opera).toEqual(true);\n+\t\texpect(isPhantomJS || Browser.ie || Browser.modernie || Browser.safari || Browser.chrome || Browser.firefox || Browser.opera).toEqual(true);",
        "path": "Specs/Browser/Browser.js",
        "position": null,
        "original_position": 5,
        "commit_id": "121c4abb9817f501d2e4435466560cad52758b14",
        "original_commit_id": "9aa89ce52b612ef56cb58208537dec49a94e2ab3",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Exactly. Just remove my `Fix specs so it will look for Browser.modernie` commit 541ecb8\n",
        "created_at": "2014-03-15T13:23:51Z",
        "updated_at": "2014-03-17T08:14:41Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2569#discussion_r10634709",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2569",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10634709"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2569#discussion_r10634709"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10679072",
        "pull_request_review_id": null,
        "id": 10679072,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjc5MDcy",
        "diff_hunk": "@@ -92,7 +92,11 @@ Element.implement({\n \t},\n \n \tgetOffsets: function(){\n-\t\tif (this.getBoundingClientRect && !Browser.Platform.ios){\n+    var hasGetBoundingClientRect = this.getBoundingClientRect;",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 5,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fix tabs.\n",
        "created_at": "2014-03-17T21:10:38Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10679072",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10679072"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10679072"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10679569",
        "pull_request_review_id": null,
        "id": 10679569,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjc5NTY5",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "anutron",
            "id": 13230,
            "node_id": "MDQ6VXNlcjEzMjMw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anutron",
            "html_url": "https://github.com/anutron",
            "followers_url": "https://api.github.com/users/anutron/followers",
            "following_url": "https://api.github.com/users/anutron/following{/other_user}",
            "gists_url": "https://api.github.com/users/anutron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anutron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anutron/subscriptions",
            "organizations_url": "https://api.github.com/users/anutron/orgs",
            "repos_url": "https://api.github.com/users/anutron/repos",
            "events_url": "https://api.github.com/users/anutron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anutron/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wait. So all this commit does is remove support for these browser fixes unless compat is enabled? How does this work without the compat layer for those browsers? I.e. if you build this without compat, does this function no longer work? If `hasGetBoundingClientRect` is `false` and the user viewing a page on firefox, what's the result?\n\nWe should be replacing the code with feature detection entirely. If all the affected browsers have `hasGetBoundingClientRect` then you don't need to keep the browser sniff code in compat. Right?\n",
        "created_at": "2014-03-17T21:22:10Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10679569",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10679569"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10679569"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10679966",
        "pull_request_review_id": null,
        "id": 10679966,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjc5OTY2",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "As @kentaromiura stated, `getBoundingClientRect` is supported by all browsers now. This fix is for Firefox <= 2, which we don't (nobody) support anymore.\n",
        "created_at": "2014-03-17T21:30:33Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10679966",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10679966"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10679966"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10680275",
        "pull_request_review_id": null,
        "id": 10680275,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjgwMjc1",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this code is there because is some obsolete code that arrives directly from qooxdoo, we included that code in november 2007, so it's probably older than that.\nAlso for the ios it was there to support old ipods (before iphones), anyway we have a matrix testing now, and we'll fix everything that this will eventually break.\n",
        "created_at": "2014-03-17T21:37:42Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10680275",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10680275"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10680275"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10680385",
        "pull_request_review_id": null,
        "id": 10680385,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjgwMzg1",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "anutron",
            "id": 13230,
            "node_id": "MDQ6VXNlcjEzMjMw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anutron",
            "html_url": "https://github.com/anutron",
            "followers_url": "https://api.github.com/users/anutron/followers",
            "following_url": "https://api.github.com/users/anutron/following{/other_user}",
            "gists_url": "https://api.github.com/users/anutron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anutron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anutron/subscriptions",
            "organizations_url": "https://api.github.com/users/anutron/orgs",
            "repos_url": "https://api.github.com/users/anutron/repos",
            "events_url": "https://api.github.com/users/anutron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anutron/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd suggest we remove these blocks entirely. If the block above captures all browsers except firefox 2 and original ipods, then rely on the new implementation.\n",
        "created_at": "2014-03-17T21:40:38Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10680385",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10680385"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10680385"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10680445",
        "pull_request_review_id": null,
        "id": 10680445,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjgwNDQ1",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: for @anutron's suggestion of removing it entirely \u2192 cleaner code \u2192 better maintainability. \n",
        "created_at": "2014-03-17T21:42:07Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10680445",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10680445"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10680445"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10680499",
        "pull_request_review_id": null,
        "id": 10680499,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjgwNDk5",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I kept that because it's the best workaround in case that method is not present in some weird mobile oses/browsers.\n",
        "created_at": "2014-03-17T21:43:45Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10680499",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10680499"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10680499"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10680564",
        "pull_request_review_id": null,
        "id": 10680564,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjgwNTY0",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "anutron",
            "id": 13230,
            "node_id": "MDQ6VXNlcjEzMjMw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anutron",
            "html_url": "https://github.com/anutron",
            "followers_url": "https://api.github.com/users/anutron/followers",
            "following_url": "https://api.github.com/users/anutron/following{/other_user}",
            "gists_url": "https://api.github.com/users/anutron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anutron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anutron/subscriptions",
            "organizations_url": "https://api.github.com/users/anutron/orgs",
            "repos_url": "https://api.github.com/users/anutron/repos",
            "events_url": "https://api.github.com/users/anutron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anutron/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "But it only applies if `Browser.firefox`is true?\n",
        "created_at": "2014-03-17T21:45:29Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10680564",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10680564"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10680564"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10681310",
        "pull_request_review_id": null,
        "id": 10681310,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjgxMzEw",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd say add test coverage, and remove the block. If all green we have\n\"some\" guarantee that we didn't blow up the white house.\n\nWe should also check for code coverage to make sure that block of code is\nbeing run before.\n\nOn Mon, Mar 17, 2014 at 4:45 PM, Aaron Newton notifications@github.comwrote:\n\n> In Source/Element/Element.Dimensions.js:\n> \n> > ```\n> >     if (Browser.firefox && !borderBox(this)){\n> >         position.x -= leftBorder(this);\n> >         position.y -= topBorder(this);\n> >     }\n> > ```\n> > \n> > +//</1.5compat>\n> \n> But it only applies if Browser.firefoxis true?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mootools/mootools-core/pull/2581/files#r10680564\n> .\n",
        "created_at": "2014-03-17T22:06:25Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10681310",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10681310"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10681310"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10720483",
        "pull_request_review_id": null,
        "id": 10720483,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNzIwNDgz",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@arian do you have a link to your coverage tool?\nit would be nice to have a grunt task for cover the code, test the code and report the dead code.\nit would be cooler running in all the matrix the cov and merge the data in order to find code that never runs.\n\nEDIT: I think is this one : https://github.com/arian/CoverJS\n",
        "created_at": "2014-03-18T19:09:31Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10720483",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10720483"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10720483"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10721499",
        "pull_request_review_id": null,
        "id": 10721499,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNzIxNDk5",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Doesn't Karma have something for this? I recently used Istanbul.\n",
        "created_at": "2014-03-18T19:33:38Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10721499",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10721499"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10721499"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10721805",
        "pull_request_review_id": null,
        "id": 10721805,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNzIxODA1",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "https://github.com/karma-runner/karma-coverage\nOn Mar 18, 2014 2:33 PM, \"Arian Stolwijk\" notifications@github.com wrote:\n\n> In Source/Element/Element.Dimensions.js:\n> \n> > ```\n> >     if (Browser.firefox && !borderBox(this)){\n> >         position.x -= leftBorder(this);\n> >         position.y -= topBorder(this);\n> >     }\n> > ```\n> > \n> > +//</1.5compat>\n> \n> Doesn't Karma have something for this? I recently used Istanbul.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mootools/mootools-core/pull/2581/files#r10721499\n> .\n",
        "created_at": "2014-03-18T19:40:55Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10721805",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10721805"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10721805"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10951114",
        "pull_request_review_id": null,
        "id": 10951114,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTUxMTE0",
        "diff_hunk": "@@ -126,13 +130,15 @@ Element.implement({\n \t\t\t\tposition.x += leftBorder(element);\n \t\t\t\tposition.y += topBorder(element);\n \t\t\t}\n-\n+//</1.5compat>\n \t\t\telement = element.offsetParent;\n \t\t}\n+//<1.5compat>\n \t\tif (Browser.firefox && !borderBox(this)){\n \t\t\tposition.x -= leftBorder(this);\n \t\t\tposition.y -= topBorder(this);\n \t\t}\n+//</1.5compat>",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 35,
        "commit_id": "080d50a0327d096b5f24a80304a5695f39e76b47",
        "original_commit_id": "6bdfd0a6e5394219a570f5e62bc43bfb3d14ff48",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Added a new issue, so that karma-coverage will be added for 1.5.1, I'll leave the fallback for 1.5.0, change the compat1.5 to be 1.4 so we can merge this pr\n",
        "created_at": "2014-03-25T20:19:33Z",
        "updated_at": "2014-03-25T20:32:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10951114",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2581",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10951114"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2581#discussion_r10951114"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2581"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11033169",
        "pull_request_review_id": null,
        "id": 11033169,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMzMTY5",
        "diff_hunk": "@@ -44,13 +44,15 @@ var parse = function(ua, platform){\n \n \t};\n };\n-\n-var Browser = this.Browser = parse(ua, platform);\n+//</1.4compat>\n+var Browser = this.Browser = {extend: Function.prototype.extend}\n+//<1.4compat>\n+    Browser = this.Browser = parse(ua, platform);",
        "path": "Source/Browser/Browser.js",
        "position": 18,
        "original_position": 18,
        "commit_id": "38f6a16d67274bdfdb29d9b34b3673f1f23c0239",
        "original_commit_id": "38f6a16d67274bdfdb29d9b34b3673f1f23c0239",
        "user": {
            "login": "timwienk",
            "id": 150598,
            "node_id": "MDQ6VXNlcjE1MDU5OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/150598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timwienk",
            "html_url": "https://github.com/timwienk",
            "followers_url": "https://api.github.com/users/timwienk/followers",
            "following_url": "https://api.github.com/users/timwienk/following{/other_user}",
            "gists_url": "https://api.github.com/users/timwienk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timwienk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timwienk/subscriptions",
            "organizations_url": "https://api.github.com/users/timwienk/orgs",
            "repos_url": "https://api.github.com/users/timwienk/repos",
            "events_url": "https://api.github.com/users/timwienk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timwienk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This shouldn't be indented.\n",
        "created_at": "2014-03-27T17:09:11Z",
        "updated_at": "2014-03-27T17:09:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2582#discussion_r11033169",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2582",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11033169"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2582#discussion_r11033169"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2582"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11033171",
        "pull_request_review_id": null,
        "id": 11033171,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMzMTcx",
        "diff_hunk": "@@ -58,21 +60,24 @@ Browser.extend({\n \t\tquery: !!(document.querySelector),\n \t\tjson: !!(window.JSON)\n \t},\n-\tPlugins: {},\n-\tparse: parse\n+\tPlugins: {}\n });\n \n-Browser[Browser.name] = true;\n \n //<1.4compat>\n+Browser.extend({parse: parse})\n+\n+Browser[Browser.name] = true;\n+//</1.4compat>",
        "path": "Source/Browser/Browser.js",
        "position": 43,
        "original_position": 43,
        "commit_id": "38f6a16d67274bdfdb29d9b34b3673f1f23c0239",
        "original_commit_id": "38f6a16d67274bdfdb29d9b34b3673f1f23c0239",
        "user": {
            "login": "GCheung55",
            "id": 46033,
            "node_id": "MDQ6VXNlcjQ2MDMz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/46033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GCheung55",
            "html_url": "https://github.com/GCheung55",
            "followers_url": "https://api.github.com/users/GCheung55/followers",
            "following_url": "https://api.github.com/users/GCheung55/following{/other_user}",
            "gists_url": "https://api.github.com/users/GCheung55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GCheung55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GCheung55/subscriptions",
            "organizations_url": "https://api.github.com/users/GCheung55/orgs",
            "repos_url": "https://api.github.com/users/GCheung55/repos",
            "events_url": "https://api.github.com/users/GCheung55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GCheung55/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is line 71 and 72 necessary if 67 and 76 basically does the same thing?\n",
        "created_at": "2014-03-27T17:09:13Z",
        "updated_at": "2014-03-27T17:09:13Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2582#discussion_r11033171",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2582",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11033171"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2582#discussion_r11033171"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2582"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11033181",
        "pull_request_review_id": null,
        "id": 11033181,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMzMTgx",
        "diff_hunk": "@@ -44,13 +44,15 @@ var parse = function(ua, platform){\n \n \t};\n };\n-\n-var Browser = this.Browser = parse(ua, platform);\n+//</1.4compat>\n+var Browser = this.Browser = {extend: Function.prototype.extend}",
        "path": "Source/Browser/Browser.js",
        "position": 16,
        "original_position": 16,
        "commit_id": "38f6a16d67274bdfdb29d9b34b3673f1f23c0239",
        "original_commit_id": "38f6a16d67274bdfdb29d9b34b3673f1f23c0239",
        "user": {
            "login": "timwienk",
            "id": 150598,
            "node_id": "MDQ6VXNlcjE1MDU5OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/150598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timwienk",
            "html_url": "https://github.com/timwienk",
            "followers_url": "https://api.github.com/users/timwienk/followers",
            "following_url": "https://api.github.com/users/timwienk/following{/other_user}",
            "gists_url": "https://api.github.com/users/timwienk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timwienk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timwienk/subscriptions",
            "organizations_url": "https://api.github.com/users/timwienk/orgs",
            "repos_url": "https://api.github.com/users/timwienk/repos",
            "events_url": "https://api.github.com/users/timwienk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timwienk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Missing manual semicolon insertion.\n",
        "created_at": "2014-03-27T17:09:24Z",
        "updated_at": "2014-03-27T17:09:24Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2582#discussion_r11033181",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2582",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11033181"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2582#discussion_r11033181"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2582"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11236243",
        "pull_request_review_id": null,
        "id": 11236243,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjM2MjQz",
        "diff_hunk": "@@ -34,8 +34,8 @@ env:\n #    - BROWSER='ie6'             BUILD='nocompat'\n     \n   global:\n-    - secure: Y3xG8HHMX3rKYqG+OmucEHXSbC2JojqLd1ZijcR2D/Ca7t09kAGpqOHBu+j8wFCj6FZOUcMLQS3f7OygTelyvNGPMlhb0Wx1OCR4Cuj4UQjkXQebHbzMn+f4JXDgXWCEgczFv4joQw9ERGFSIOxZ75jed6bO09a1q9EDMlxHPBI=\n-    - secure: FabKSSkcb1n1N2S9esOhD/dziZZ3RzYYzCxHqL2EUe3E6WpkjK/m6ZuCu/3e76u35s2uUqpBOoJawC/eiQiJrMhGxpFMpTNI3133wSf/iCA7LDv5G5RWxYQMtwSwjKUwM2WzV3dtUfzLbqj9H/XZT1Q/wf+/NQvFWFljG5XyktU=\n+    - secure: myFP8vndNuVGr2b+WtP4efJ2fJL7By7PUi2yxgbUlaqK82qgkayrp7zu6G7YKYBtWRTaRvwybX4XVZn9zCvFm2xTB8xSeWy3bB63JZcYPGzLpwusgJ69Kr+K5dAn/EzIj23pIjqVic9XmEEFK1FqCLp8V2Ty4kl3RG7onfwALUo=",
        "path": ".travis.yml",
        "position": 6,
        "original_position": 6,
        "commit_id": "3a056d2553380a50eac37bf81b715dc6678a7576",
        "original_commit_id": "29804acbcecd8f5fd87e3b23ea4a82b72cb4c52b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is that your keys?\n",
        "created_at": "2014-04-03T01:24:15Z",
        "updated_at": "2014-04-03T10:02:59Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11236243",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2588",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11236243"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11236243"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2588"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11238699",
        "pull_request_review_id": null,
        "id": 11238699,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjM4Njk5",
        "diff_hunk": "@@ -34,8 +34,8 @@ env:\n #    - BROWSER='ie6'             BUILD='nocompat'\n     \n   global:\n-    - secure: Y3xG8HHMX3rKYqG+OmucEHXSbC2JojqLd1ZijcR2D/Ca7t09kAGpqOHBu+j8wFCj6FZOUcMLQS3f7OygTelyvNGPMlhb0Wx1OCR4Cuj4UQjkXQebHbzMn+f4JXDgXWCEgczFv4joQw9ERGFSIOxZ75jed6bO09a1q9EDMlxHPBI=\n-    - secure: FabKSSkcb1n1N2S9esOhD/dziZZ3RzYYzCxHqL2EUe3E6WpkjK/m6ZuCu/3e76u35s2uUqpBOoJawC/eiQiJrMhGxpFMpTNI3133wSf/iCA7LDv5G5RWxYQMtwSwjKUwM2WzV3dtUfzLbqj9H/XZT1Q/wf+/NQvFWFljG5XyktU=\n+    - secure: myFP8vndNuVGr2b+WtP4efJ2fJL7By7PUi2yxgbUlaqK82qgkayrp7zu6G7YKYBtWRTaRvwybX4XVZn9zCvFm2xTB8xSeWy3bB63JZcYPGzLpwusgJ69Kr+K5dAn/EzIj23pIjqVic9XmEEFK1FqCLp8V2Ty4kl3RG7onfwALUo=",
        "path": ".travis.yml",
        "position": 6,
        "original_position": 6,
        "commit_id": "3a056d2553380a50eac37bf81b715dc6678a7576",
        "original_commit_id": "29804acbcecd8f5fd87e3b23ea4a82b72cb4c52b",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo these are new keys. \nWe added a sub-account to the main account to prepare for other repos as [suggested here](https://saucelabs.com/docs/status-images). \n\nThis way More, Prime, etc can also have their own sub-account, and badge info will not be mixed.\n\nI wouldn't mind testing them in a branch first, if its ok for you guys.\n",
        "created_at": "2014-04-03T04:23:38Z",
        "updated_at": "2014-04-03T10:02:59Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11238699",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2588",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11238699"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11238699"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2588"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11239326",
        "pull_request_review_id": null,
        "id": 11239326,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjM5MzI2",
        "diff_hunk": "@@ -1,6 +1,17 @@\n # MooTools Core\n \n-[![Build Status](https://travis-ci.org/mootools/mootools-core.png?branch=master)](https://travis-ci.org/mootools/mootools-core)\n+<p align=\"right\">",
        "path": "README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "3a056d2553380a50eac37bf81b715dc6678a7576",
        "original_commit_id": "29804acbcecd8f5fd87e3b23ea4a82b72cb4c52b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no need for align?\n",
        "created_at": "2014-04-03T05:23:52Z",
        "updated_at": "2014-04-03T10:02:59Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11239326",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2588",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11239326"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11239326"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2588"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11239333",
        "pull_request_review_id": null,
        "id": 11239333,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjM5MzMz",
        "diff_hunk": "@@ -34,8 +34,8 @@ env:\n #    - BROWSER='ie6'             BUILD='nocompat'\n     \n   global:\n-    - secure: Y3xG8HHMX3rKYqG+OmucEHXSbC2JojqLd1ZijcR2D/Ca7t09kAGpqOHBu+j8wFCj6FZOUcMLQS3f7OygTelyvNGPMlhb0Wx1OCR4Cuj4UQjkXQebHbzMn+f4JXDgXWCEgczFv4joQw9ERGFSIOxZ75jed6bO09a1q9EDMlxHPBI=\n-    - secure: FabKSSkcb1n1N2S9esOhD/dziZZ3RzYYzCxHqL2EUe3E6WpkjK/m6ZuCu/3e76u35s2uUqpBOoJawC/eiQiJrMhGxpFMpTNI3133wSf/iCA7LDv5G5RWxYQMtwSwjKUwM2WzV3dtUfzLbqj9H/XZT1Q/wf+/NQvFWFljG5XyktU=\n+    - secure: myFP8vndNuVGr2b+WtP4efJ2fJL7By7PUi2yxgbUlaqK82qgkayrp7zu6G7YKYBtWRTaRvwybX4XVZn9zCvFm2xTB8xSeWy3bB63JZcYPGzLpwusgJ69Kr+K5dAn/EzIj23pIjqVic9XmEEFK1FqCLp8V2Ty4kl3RG7onfwALUo=",
        "path": ".travis.yml",
        "position": 6,
        "original_position": 6,
        "commit_id": "3a056d2553380a50eac37bf81b715dc6678a7576",
        "original_commit_id": "29804acbcecd8f5fd87e3b23ea4a82b72cb4c52b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "lgtm. \n",
        "created_at": "2014-04-03T05:24:15Z",
        "updated_at": "2014-04-03T10:02:59Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11239333",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2588",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11239333"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11239333"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2588"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11239398",
        "pull_request_review_id": null,
        "id": 11239398,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjM5Mzk4",
        "diff_hunk": "@@ -1,6 +1,17 @@\n # MooTools Core\n \n-[![Build Status](https://travis-ci.org/mootools/mootools-core.png?branch=master)](https://travis-ci.org/mootools/mootools-core)\n+<p align=\"right\">",
        "path": "README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "3a056d2553380a50eac37bf81b715dc6678a7576",
        "original_commit_id": "29804acbcecd8f5fd87e3b23ea4a82b72cb4c52b",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "hehe, it's a matter of taste. I can remove it. \nThe idea was to have more clear space, [like this](https://github.com/SergioCrisostomo/mootools-core) instead [of this](https://github.com/axemclion/grunt-saucelabs)\n",
        "created_at": "2014-04-03T05:30:41Z",
        "updated_at": "2014-04-03T10:02:59Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11239398",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2588",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11239398"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11239398"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2588"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11244749",
        "pull_request_review_id": null,
        "id": 11244749,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjQ0NzQ5",
        "diff_hunk": "@@ -1,6 +1,17 @@\n # MooTools Core\n \n-[![Build Status](https://travis-ci.org/mootools/mootools-core.png?branch=master)](https://travis-ci.org/mootools/mootools-core)\n+<p align=\"right\">",
        "path": "README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "3a056d2553380a50eac37bf81b715dc6678a7576",
        "original_commit_id": "29804acbcecd8f5fd87e3b23ea4a82b72cb4c52b",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "+1 for left, and just use markdown instead of html.\n",
        "created_at": "2014-04-03T09:46:43Z",
        "updated_at": "2014-04-03T10:02:59Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11244749",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2588",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11244749"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11244749"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2588"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11245265",
        "pull_request_review_id": null,
        "id": 11245265,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjQ1MjY1",
        "diff_hunk": "@@ -1,6 +1,17 @@\n # MooTools Core\n \n-[![Build Status](https://travis-ci.org/mootools/mootools-core.png?branch=master)](https://travis-ci.org/mootools/mootools-core)\n+<p align=\"right\">",
        "path": "README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "3a056d2553380a50eac37bf81b715dc6678a7576",
        "original_commit_id": "29804acbcecd8f5fd87e3b23ea4a82b72cb4c52b",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@arian, your wish is granted Sir :)\nRefactored to left.\n",
        "created_at": "2014-04-03T10:05:56Z",
        "updated_at": "2014-04-03T10:05:56Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11245265",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2588",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11245265"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2588#discussion_r11245265"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2588"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11186051",
        "pull_request_review_id": null,
        "id": 11186051,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg2MDUx",
        "diff_hunk": "@@ -116,10 +111,12 @@ var version = (Function.attempt(function(){\n \treturn new ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version');\n }) || '0 r0').match(/\\d+/g);\n \n-Browser.Plugins.Flash = {\n-\tversion: Number(version[0] || '0.' + version[1]) || 0,\n-\tbuild: Number(version[2]) || 0\n-};\n+Browser.Plugins = {\n+\tFlash: {\n+\t\tversion: Number(version[0] || '0.' + version[1]) || 0,\n+\t\tbuild: Number(version[2]) || 0\n+\t}\n+}",
        "path": "Source/Browser/Browser.js",
        "position": null,
        "original_position": 79,
        "commit_id": "914f8cc75cd5ead7aaf980730398684eb7819244",
        "original_commit_id": "4ae25e0e2347225c30f94f63d55832048b4612a2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`;`\n",
        "created_at": "2014-04-01T22:50:06Z",
        "updated_at": "2014-04-23T15:46:33Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2587#discussion_r11186051",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2587",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/11186051"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2587#discussion_r11186051"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2587"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12744247",
        "pull_request_review_id": null,
        "id": 12744247,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzQ0MjQ3",
        "diff_hunk": "@@ -100,6 +102,14 @@ this.Events = new Class({\n \t\t\t}\n \t\t}\n \t\treturn this;\n+\t},\n+\n+\tdisableEvent: function(type){\n+\t\tthis.$disabledEvents[type] = (this.$disabledEvents[type] || 0) + 1;",
        "path": "Source/Class/Class.Extras.js",
        "position": 23,
        "original_position": 23,
        "commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "original_commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not sure why you write `(this.$disabledEvents[type] || 0) + 1;`, looks unnecessary to me, but I might be missing something...\n\nCould be just `this.$disabledEvents[type] = !this.$disabledEvents[type];`\n",
        "created_at": "2014-05-16T15:35:56Z",
        "updated_at": "2014-05-16T15:35:56Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12744247",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2595",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12744247"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12744247"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2595"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12744251",
        "pull_request_review_id": null,
        "id": 12744251,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzQ0MjUx",
        "diff_hunk": "@@ -321,6 +321,61 @@ Removes all events of the given type from the stack of events of a Class instanc\n - removeEvents will not remove internal events. See [Events:removeEvent][].\n \n \n+Events Method: disableEvent {#Events:disableEvent}\n+--------------------------------------------------\n+\n+Disable an event type, preventing it from being fired.\n+\n+The function is nested, that is if you disable an event type twice you'll need to enable it twice for it to fire again.\n+\n+### Syntax:\n+\n+\tmyClass.disableEvent(type);\n+\n+### Arguments:\n+\n+1. type - The type of event (e.g. 'change').",
        "path": "Docs/Class/Class.Extras.md",
        "position": 17,
        "original_position": 17,
        "commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "original_commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The argument _type_ should also be here. _string_ in this case. So would be:\n\n> type - (_string_) The type of event (e.g. 'change').\n",
        "created_at": "2014-05-16T15:35:59Z",
        "updated_at": "2014-05-16T16:09:29Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12744251",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2595",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12744251"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12744251"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2595"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12744249",
        "pull_request_review_id": null,
        "id": 12744249,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzQ0MjQ5",
        "diff_hunk": "@@ -321,6 +321,61 @@ Removes all events of the given type from the stack of events of a Class instanc\n - removeEvents will not remove internal events. See [Events:removeEvent][].\n \n \n+Events Method: disableEvent {#Events:disableEvent}\n+--------------------------------------------------\n+\n+Disable an event type, preventing it from being fired.\n+\n+The function is nested, that is if you disable an event type twice you'll need to enable it twice for it to fire again.\n+\n+### Syntax:\n+\n+\tmyClass.disableEvent(type);\n+\n+### Arguments:\n+\n+1. type - The type of event (e.g. 'change').\n+\n+### Returns:\n+\n+* (*object*) The current class instance.\n+\n+### Example:\n+\n+We disable our 'change' event to prevent it from being fired after each criterion is reseted. The event type is finally enabled and a single 'change' event is fired.\n+\n+\tvar Criteria = new Class({\n+\t\tImplements: [ Events ],\n+\t\tchange: function(){\n+\t\t\tthis.fireEvent('change', this.getValue())\n+\t\t},\n+\t\treset: function(){\n+\t\t\tthis.disableEvent('change')\n+\t\t\tObject.each(this.criteria, function(criterion){\n+\t\t\t\tcriterion.reset();\n+\t\t\t});\n+\t\t\tthis.enableEvent('change').change()\n+\t\t}\n+\t});\n+\n+\n+Events Method: enableEvent {#Events:enableEvent}\n+\n+Enable a previously disabled event type so that it can be fired again.\n+\n+### Syntax:\n+\n+\tmyClass.enableEvent(type);\n+\n+### Arguments:\n+\n+1. type - Type type of event (e.g. 'change').",
        "path": "Docs/Class/Class.Extras.md",
        "position": 52,
        "original_position": 52,
        "commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "original_commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Same here:\n\n> type - (_string_) The type of event (e.g. 'change').\n",
        "created_at": "2014-05-16T15:35:57Z",
        "updated_at": "2014-05-16T16:09:36Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12744249",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2595",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12744249"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12744249"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2595"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12759453",
        "pull_request_review_id": null,
        "id": 12759453,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzU5NDUz",
        "diff_hunk": "@@ -100,6 +102,14 @@ this.Events = new Class({\n \t\t\t}\n \t\t}\n \t\treturn this;\n+\t},\n+\n+\tdisableEvent: function(type){\n+\t\tthis.$disabledEvents[type] = (this.$disabledEvents[type] || 0) + 1;\n+\t},\n+\n+\tenableEvent: function(type){\n+\t\tthis.$disabledEvents[type] = (this.$disabledEvents[type] || 0) - 1;",
        "path": "Source/Class/Class.Extras.js",
        "position": 27,
        "original_position": 27,
        "commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "original_commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "user": {
            "login": "DimitarChristoff",
            "id": 119500,
            "node_id": "MDQ6VXNlcjExOTUwMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/119500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DimitarChristoff",
            "html_url": "https://github.com/DimitarChristoff",
            "followers_url": "https://api.github.com/users/DimitarChristoff/followers",
            "following_url": "https://api.github.com/users/DimitarChristoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/DimitarChristoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DimitarChristoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DimitarChristoff/subscriptions",
            "organizations_url": "https://api.github.com/users/DimitarChristoff/orgs",
            "repos_url": "https://api.github.com/users/DimitarChristoff/repos",
            "events_url": "https://api.github.com/users/DimitarChristoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DimitarChristoff/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "breaks chaining, does not `return this;`\n",
        "created_at": "2014-05-16T20:58:51Z",
        "updated_at": "2014-05-16T20:58:51Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12759453",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2595",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12759453"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12759453"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2595"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12759440",
        "pull_request_review_id": null,
        "id": 12759440,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzU5NDQw",
        "diff_hunk": "@@ -100,6 +102,14 @@ this.Events = new Class({\n \t\t\t}\n \t\t}\n \t\treturn this;\n+\t},\n+\n+\tdisableEvent: function(type){\n+\t\tthis.$disabledEvents[type] = (this.$disabledEvents[type] || 0) + 1;",
        "path": "Source/Class/Class.Extras.js",
        "position": 23,
        "original_position": 23,
        "commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "original_commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "user": {
            "login": "DimitarChristoff",
            "id": 119500,
            "node_id": "MDQ6VXNlcjExOTUwMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/119500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DimitarChristoff",
            "html_url": "https://github.com/DimitarChristoff",
            "followers_url": "https://api.github.com/users/DimitarChristoff/followers",
            "following_url": "https://api.github.com/users/DimitarChristoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/DimitarChristoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DimitarChristoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DimitarChristoff/subscriptions",
            "organizations_url": "https://api.github.com/users/DimitarChristoff/orgs",
            "repos_url": "https://api.github.com/users/DimitarChristoff/repos",
            "events_url": "https://api.github.com/users/DimitarChristoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DimitarChristoff/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "he seems to use it as a `counter`, starting from 0+1 and so on, upping the value with each disable.\n\nconversely, `enableEvent` will decrement it.\n\nsince the check if an event has been disabled is `truthy` - `if (this.$disabledEvents[type]) return this;`, this approach will result in some side effects, eg.\n\n``` javascript\nthis.disableEvent('close'); // 1\nthis.enableEvent('close'); // 0\nthis.enableEvent('close'); // -1 - never less than -1, though.\nthis.fireEvent('close'); // nothing, $disabledEvents.close === . -1\n```\n\nNot really getting the idea behind the counter. \n\nalso, breaks chaining.\n",
        "created_at": "2014-05-16T20:58:27Z",
        "updated_at": "2014-05-16T21:20:30Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12759440",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2595",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12759440"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12759440"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2595"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12770159",
        "pull_request_review_id": null,
        "id": 12770159,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzcwMTU5",
        "diff_hunk": "@@ -100,6 +102,14 @@ this.Events = new Class({\n \t\t\t}\n \t\t}\n \t\treturn this;\n+\t},\n+\n+\tdisableEvent: function(type){\n+\t\tthis.$disabledEvents[type] = (this.$disabledEvents[type] || 0) + 1;",
        "path": "Source/Class/Class.Extras.js",
        "position": 23,
        "original_position": 23,
        "commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "original_commit_id": "88f8a042e73084cbf81888f91bd3f06f27be500b",
        "user": {
            "login": "olvlvl",
            "id": 155998,
            "node_id": "MDQ6VXNlcjE1NTk5OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/155998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olvlvl",
            "html_url": "https://github.com/olvlvl",
            "followers_url": "https://api.github.com/users/olvlvl/followers",
            "following_url": "https://api.github.com/users/olvlvl/following{/other_user}",
            "gists_url": "https://api.github.com/users/olvlvl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olvlvl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olvlvl/subscriptions",
            "organizations_url": "https://api.github.com/users/olvlvl/orgs",
            "repos_url": "https://api.github.com/users/olvlvl/repos",
            "events_url": "https://api.github.com/users/olvlvl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olvlvl/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If your code is bad, don't blame it on the framework :)\n",
        "created_at": "2014-05-17T18:58:47Z",
        "updated_at": "2014-05-17T18:58:47Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12770159",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2595",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/12770159"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2595#discussion_r12770159"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2595"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10234588",
        "pull_request_review_id": null,
        "id": 10234588,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMjM0NTg4",
        "diff_hunk": "@@ -49,7 +49,22 @@ Element.implement({\n \n \tgetSize: function(){\n \t\tif (isBody(this)) return this.getWindow().getSize();\n-\t\treturn {x: this.offsetWidth, y: this.offsetHeight};\n+\n+\t\tvar width = this.offsetWidth;\n+\t\tvar height = this.offsetHeight;\n+\n+\t\tif (width === undefined || height === undefined) && this.getBoundingClientRect) {",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 9,
        "commit_id": "5f43cfe25689692048bbeee3695bc1fd2297bc5f",
        "original_commit_id": "7f6ee9ff4e368719b8bfbc7069a3f92cf48f5bdc",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Did you test this? Looks like you have an extra `)`. \n\nPlease provide specs that show this working.\n",
        "created_at": "2014-03-03T23:07:37Z",
        "updated_at": "2014-05-19T08:27:02Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2517#discussion_r10234588",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2517",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/10234588"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2517#discussion_r10234588"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2517"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13221041",
        "pull_request_review_id": null,
        "id": 13221041,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjIxMDQx",
        "diff_hunk": "@@ -52,9 +52,8 @@ var DOMEvent = this.DOMEvent = new Type('DOMEvent', function(event, win){\n \t\t\tx: (event.pageX != null) ? event.pageX - win.pageXOffset : event.clientX,\n \t\t\ty: (event.pageY != null) ? event.pageY - win.pageYOffset : event.clientY\n \t\t};\n-\t\tif (type == 'DOMMouseScroll' || type == 'mousewheel')\n+\t\tif (type == 'DOMMouseScroll' || type == 'wheel' || type == 'mousewheel')",
        "path": "Source/Types/DOMEvent.js",
        "position": 14,
        "original_position": 14,
        "commit_id": "0e18532a27f0952ee1c892e63f9864b7dd3b80b1",
        "original_commit_id": "0e18532a27f0952ee1c892e63f9864b7dd3b80b1",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This still needs to take the `event.deltaX`, `Y` or `Z` into account.\n\nhttps://developer.mozilla.org/en-US/docs/Web/API/WheelEvent\n\nI'm not sure how that value should be normalized, compared to the wheelData.\n\nLooking at this (https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel#Listening_to_this_event_across_browser) polyfil, the relation is:\n\nevent.deltaY = - 1/40 \\* originalEvent.wheelDelta;\n",
        "created_at": "2014-05-30T08:45:04Z",
        "updated_at": "2014-05-30T08:45:04Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2599#discussion_r13221041",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2599",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13221041"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2599#discussion_r13221041"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2599"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13415866",
        "pull_request_review_id": null,
        "id": 13415866,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDE1ODY2",
        "diff_hunk": "@@ -72,10 +74,38 @@ module.exports = function(grunt) {\n \t\t\t\t},\n \t\t\t\tsrc: 'Specs/**/*.js',\n \t\t\t\tdest: 'mootools-specs.js'\n+\t\t\t},\n+\t\t\t\n+\t\t\t'dist-nocompat': {\n+\t\t\t\toptions: {\n+\t\t\t\t\tstrip: ['.*compat'],\n+\t\t\t\t\tonly: '<%= grunt.option(\"file\") && \"Core/\" + grunt.option(\"file\") %>'\n+\t\t\t\t},\n+\t\t\t\tsrc: ymlPackage.sources,\n+\t\t\t\tdest: 'dist/mootools-core.js'\n+\t\t\t},\n+\t\t\t\n+\t\t\t'dist-all': {\n+\t\t\t\tsrc: ymlPackage.sources,\n+\t\t\t\tdest: 'dist/mootools-core-compat.js'\n \t\t\t}\n \n \t\t},\n+\t\t\n+\t\tuglify: {\n+\t\t\toptions: {\n+\t\t\t\tmangle: false,\n+\t\t\t\tcompress: true\n+\t\t\t},\n+\t\t\tmy_target: {",
        "path": "Gruntfile.js",
        "position": null,
        "original_position": 36,
        "commit_id": "8acf50775c9c11de47c19e986acce7bfd3e6f3d3",
        "original_commit_id": "3b18183f1a00d48b494e98cf0c19562b89da0f3a",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Rename key to: `dist` \n",
        "created_at": "2014-06-04T22:44:14Z",
        "updated_at": "2014-06-05T08:00:46Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2604#discussion_r13415866",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2604",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13415866"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2604#discussion_r13415866"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2604"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13428247",
        "pull_request_review_id": null,
        "id": 13428247,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDI4MjQ3",
        "diff_hunk": "@@ -72,10 +74,38 @@ module.exports = function(grunt) {\n \t\t\t\t},\n \t\t\t\tsrc: 'Specs/**/*.js',\n \t\t\t\tdest: 'mootools-specs.js'\n+\t\t\t},\n+\t\t\t\n+\t\t\t'dist-nocompat': {\n+\t\t\t\toptions: {\n+\t\t\t\t\tstrip: ['.*compat'],\n+\t\t\t\t\tonly: '<%= grunt.option(\"file\") && \"Core/\" + grunt.option(\"file\") %>'\n+\t\t\t\t},\n+\t\t\t\tsrc: ymlPackage.sources,\n+\t\t\t\tdest: 'dist/mootools-core.js'\n+\t\t\t},\n+\t\t\t\n+\t\t\t'dist-all': {\n+\t\t\t\tsrc: ymlPackage.sources,\n+\t\t\t\tdest: 'dist/mootools-core-compat.js'\n \t\t\t}\n \n \t\t},\n+\t\t\n+\t\tuglify: {\n+\t\t\toptions: {\n+\t\t\t\tmangle: false,\n+\t\t\t\tcompress: true\n+\t\t\t},\n+\t\t\tmy_target: {",
        "path": "Gruntfile.js",
        "position": null,
        "original_position": 36,
        "commit_id": "8acf50775c9c11de47c19e986acce7bfd3e6f3d3",
        "original_commit_id": "3b18183f1a00d48b494e98cf0c19562b89da0f3a",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo good point, that is much better. Done!\n",
        "created_at": "2014-06-05T08:14:44Z",
        "updated_at": "2014-06-05T08:14:44Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2604#discussion_r13428247",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2604",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13428247"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2604#discussion_r13428247"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2604"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13592793",
        "pull_request_review_id": null,
        "id": 13592793,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTkyNzkz",
        "diff_hunk": "@@ -232,7 +232,7 @@ var Request = this.Request = new Class({\n });\n \n var methods = {};\n-['get', 'post', 'put', 'delete', 'GET', 'POST', 'PUT', 'DELETE'].each(function(method){\n+['get', 'post', 'put', 'delete', 'patch', 'head' 'GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'HEAD'].each(function(method){",
        "path": "Source/Request/Request.js",
        "position": null,
        "original_position": 5,
        "commit_id": "f20985aa9510fea4711525c5dbe197b3da4dc871",
        "original_commit_id": "19df06eec30443bb08274646b27511352fcb9feb",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd drop the caps.\n",
        "created_at": "2014-06-10T13:29:58Z",
        "updated_at": "2014-06-10T14:18:55Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2610#discussion_r13592793",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2610",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13592793"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2610#discussion_r13592793"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2610"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13592928",
        "pull_request_review_id": null,
        "id": 13592928,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTkyOTI4",
        "diff_hunk": "@@ -232,7 +232,7 @@ var Request = this.Request = new Class({\n });\n \n var methods = {};\n-['get', 'post', 'put', 'delete', 'GET', 'POST', 'PUT', 'DELETE'].each(function(method){\n+['get', 'post', 'put', 'delete', 'patch', 'head' 'GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'HEAD'].each(function(method){",
        "path": "Source/Request/Request.js",
        "position": null,
        "original_position": 5,
        "commit_id": "f20985aa9510fea4711525c5dbe197b3da4dc871",
        "original_commit_id": "19df06eec30443bb08274646b27511352fcb9feb",
        "user": {
            "login": "olvlvl",
            "id": 155998,
            "node_id": "MDQ6VXNlcjE1NTk5OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/155998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olvlvl",
            "html_url": "https://github.com/olvlvl",
            "followers_url": "https://api.github.com/users/olvlvl/followers",
            "following_url": "https://api.github.com/users/olvlvl/following{/other_user}",
            "gists_url": "https://api.github.com/users/olvlvl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olvlvl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olvlvl/subscriptions",
            "organizations_url": "https://api.github.com/users/olvlvl/orgs",
            "repos_url": "https://api.github.com/users/olvlvl/repos",
            "events_url": "https://api.github.com/users/olvlvl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olvlvl/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The caps are used in core. Constancy <3 (but I'm with you on that one)\n",
        "created_at": "2014-06-10T13:32:19Z",
        "updated_at": "2014-06-10T14:18:55Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2610#discussion_r13592928",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2610",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13592928"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2610#discussion_r13592928"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2610"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13800139",
        "pull_request_review_id": null,
        "id": 13800139,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODAwMTM5",
        "diff_hunk": "@@ -732,7 +732,7 @@ Element.implement({\n \thasClass: hasClassList ? function(className){\n \t\treturn this.classList.contains(className);\n \t} : function(className){\n-\t\treturn this.className.clean().contains(className, ' ');\n+\t\treturn (' ' + this.className.clean() + ' ').contains(' ' + className + ' ');",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 5,
        "commit_id": "25bffac34dc583d5a851d3b33df43a7dd27e80da",
        "original_commit_id": "afbb5384542933326c2d94e55e0e264c421430d9",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "or maybe `return this.className.split(/\\s+/).contains(className)`\n",
        "created_at": "2014-06-16T11:07:30Z",
        "updated_at": "2014-06-16T13:18:04Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2616#discussion_r13800139",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2616",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13800139"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2616#discussion_r13800139"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13803224",
        "pull_request_review_id": null,
        "id": 13803224,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODAzMjI0",
        "diff_hunk": "@@ -732,7 +732,7 @@ Element.implement({\n \thasClass: hasClassList ? function(className){\n \t\treturn this.classList.contains(className);\n \t} : function(className){\n-\t\treturn this.className.clean().contains(className, ' ');\n+\t\treturn (' ' + this.className.clean() + ' ').contains(' ' + className + ' ');",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 5,
        "commit_id": "25bffac34dc583d5a851d3b33df43a7dd27e80da",
        "original_commit_id": "afbb5384542933326c2d94e55e0e264c421430d9",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah I like the split version a little better.\n",
        "created_at": "2014-06-16T12:54:05Z",
        "updated_at": "2014-06-16T13:18:04Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2616#discussion_r13803224",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2616",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13803224"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2616#discussion_r13803224"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13804189",
        "pull_request_review_id": null,
        "id": 13804189,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODA0MTg5",
        "diff_hunk": "@@ -732,7 +732,7 @@ Element.implement({\n \thasClass: hasClassList ? function(className){\n \t\treturn this.classList.contains(className);\n \t} : function(className){\n-\t\treturn this.className.clean().contains(className, ' ');\n+\t\treturn (' ' + this.className.clean() + ' ').contains(' ' + className + ' ');",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 5,
        "commit_id": "25bffac34dc583d5a851d3b33df43a7dd27e80da",
        "original_commit_id": "afbb5384542933326c2d94e55e0e264c421430d9",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Updated.\n",
        "created_at": "2014-06-16T13:18:41Z",
        "updated_at": "2014-06-16T13:18:41Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2616#discussion_r13804189",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2616",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13804189"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2616#discussion_r13804189"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14330157",
        "pull_request_review_id": null,
        "id": 14330157,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzMwMTU3",
        "diff_hunk": "@@ -197,7 +198,7 @@ var Request = this.Request = new Class({\n \t\t}\n \n \t\txhr.open(method.toUpperCase(), url, this.options.async, this.options.user, this.options.password);\n-\t\tif (this.options.user && 'withCredentials' in xhr) xhr.withCredentials = true;\n+\t\tif ((this.options.user || this.options.withCredentials) && 'withCredentials' in xhr) xhr.withCredentials = true;",
        "path": "Source/Request/Request.js",
        "position": null,
        "original_position": 15,
        "commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "original_commit_id": "296fc8eaca0b5ef04c36e1dbce4f7039836dec89",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not just:\n\n``` js\nif (this.options.user && this.options.password && 'withCredentials' in xhr) ...\n```\n",
        "created_at": "2014-06-29T16:20:01Z",
        "updated_at": "2014-06-30T17:16:45Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14330157",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2486",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14330157"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14330157"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2486"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14330192",
        "pull_request_review_id": null,
        "id": 14330192,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzMwMTky",
        "diff_hunk": "@@ -197,7 +198,7 @@ var Request = this.Request = new Class({\n \t\t}\n \n \t\txhr.open(method.toUpperCase(), url, this.options.async, this.options.user, this.options.password);\n-\t\tif (this.options.user && 'withCredentials' in xhr) xhr.withCredentials = true;\n+\t\tif ((this.options.user || this.options.withCredentials) && 'withCredentials' in xhr) xhr.withCredentials = true;",
        "path": "Source/Request/Request.js",
        "position": null,
        "original_position": 15,
        "commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "original_commit_id": "296fc8eaca0b5ef04c36e1dbce4f7039836dec89",
        "user": {
            "login": "ccampbell",
            "id": 259316,
            "node_id": "MDQ6VXNlcjI1OTMxNg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/259316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ccampbell",
            "html_url": "https://github.com/ccampbell",
            "followers_url": "https://api.github.com/users/ccampbell/followers",
            "following_url": "https://api.github.com/users/ccampbell/following{/other_user}",
            "gists_url": "https://api.github.com/users/ccampbell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ccampbell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ccampbell/subscriptions",
            "organizations_url": "https://api.github.com/users/ccampbell/orgs",
            "repos_url": "https://api.github.com/users/ccampbell/repos",
            "events_url": "https://api.github.com/users/ccampbell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ccampbell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo I think you are missing the point of this pull request.  `xhr.withCredentials` does not require http authentication (as the current Mootools code suggests).  You should be able to specify this flag without providing a username or password.\n\nFrom the spec\n\n> The term user credentials for the purposes of this specification means cookies, HTTP authentication, and client-side SSL certificates. Specifically it does not refer to proxy authentication or the Origin header.\n",
        "created_at": "2014-06-29T16:31:29Z",
        "updated_at": "2014-06-30T17:16:45Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14330192",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2486",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14330192"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14330192"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2486"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14334594",
        "pull_request_review_id": null,
        "id": 14334594,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzM0NTk0",
        "diff_hunk": "@@ -197,7 +198,7 @@ var Request = this.Request = new Class({\n \t\t}\n \n \t\txhr.open(method.toUpperCase(), url, this.options.async, this.options.user, this.options.password);\n-\t\tif (this.options.user && 'withCredentials' in xhr) xhr.withCredentials = true;\n+\t\tif ((this.options.user || this.options.withCredentials) && 'withCredentials' in xhr) xhr.withCredentials = true;",
        "path": "Source/Request/Request.js",
        "position": null,
        "original_position": 15,
        "commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "original_commit_id": "296fc8eaca0b5ef04c36e1dbce4f7039836dec89",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "See the last comment on the PR.\n\nOn Sun, Jun 29, 2014 at 11:31 AM, Craig Campbell notifications@github.com\nwrote:\n\n> In Source/Request/Request.js:\n> \n> > @@ -197,7 +198,7 @@ var Request = this.Request = new Class({\n> >         }\n> > \n> > ```\n> >     xhr.open(method.toUpperCase(), url, this.options.async, this.options.user, this.options.password);\n> > ```\n> > -       if (this.options.user && 'withCredentials' in xhr) xhr.withCredentials = true;\n> > -       if ((this.options.user || this.options.withCredentials) && 'withCredentials' in xhr) xhr.withCredentials = true;\n> \n> @ibolmo https://github.com/ibolmo I think you are missing the point of\n> this pull request. xhr.withCredentials does not require http\n> authentication (as the current Mootools code suggests). You should be able\n> to specify this flag without providing a username or password.\n> \n> From the spec\n> \n> The term user credentials for the purposes of this specification means\n> cookies, HTTP authentication, and client-side SSL certificates.\n> Specifically it does not refer to proxy authentication or the Origin header.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mootools/mootools-core/pull/2486/files#r14330192.\n",
        "created_at": "2014-06-30T03:28:21Z",
        "updated_at": "2014-06-30T17:16:45Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14334594",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2486",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14334594"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14334594"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2486"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367650",
        "pull_request_review_id": null,
        "id": 14367650,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY3NjUw",
        "diff_hunk": "@@ -135,5 +135,41 @@ describe('Request', function(){\n \n \t});\n \n+\tit('should not set xhr.withCredentials flag by default', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(false);\n+\t});\n+\n+\t/*<1.4compat>*/\n+\tit('should set xhr.withCredentials flag in 1.4 for this.options.user', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other',\n+\t\t\tuser: 'someone'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(true);\n+\t});\n+\t/*</1.4compat>*/\n \n+\tvar dit = /*<1.4compat>*/xit || /*</1.4compat>*/it; // don't run unless no compat\n+\tdit('should not set xhr.withCredentials flag in 1.5 for this.options.user', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other',\n+\t\t\tuser: 'someone'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(false);",
        "path": "Specs/Request/Request.js",
        "position": 30,
        "original_position": 30,
        "commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "original_commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo this is failing in [some browsers](https://travis-ci.org/mootools/mootools-core/jobs/28801324) with `Expected undefined to be false.`\n\nCan we cast to boolean and use `expect(!!request.xhr.withCredentials).toBe(false);` ?\n",
        "created_at": "2014-06-30T18:46:21Z",
        "updated_at": "2014-06-30T18:46:21Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14367650",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2486",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367650"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14367650"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2486"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367719",
        "pull_request_review_id": null,
        "id": 14367719,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY3NzE5",
        "diff_hunk": "@@ -135,5 +135,41 @@ describe('Request', function(){\n \n \t});\n \n+\tit('should not set xhr.withCredentials flag by default', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(false);\n+\t});\n+\n+\t/*<1.4compat>*/\n+\tit('should set xhr.withCredentials flag in 1.4 for this.options.user', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other',\n+\t\t\tuser: 'someone'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(true);\n+\t});\n+\t/*</1.4compat>*/\n \n+\tvar dit = /*<1.4compat>*/xit || /*</1.4compat>*/it; // don't run unless no compat\n+\tdit('should not set xhr.withCredentials flag in 1.5 for this.options.user', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other',\n+\t\t\tuser: 'someone'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(false);",
        "path": "Specs/Request/Request.js",
        "position": 30,
        "original_position": 30,
        "commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "original_commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "user": {
            "login": "ccampbell",
            "id": 259316,
            "node_id": "MDQ6VXNlcjI1OTMxNg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/259316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ccampbell",
            "html_url": "https://github.com/ccampbell",
            "followers_url": "https://api.github.com/users/ccampbell/followers",
            "following_url": "https://api.github.com/users/ccampbell/following{/other_user}",
            "gists_url": "https://api.github.com/users/ccampbell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ccampbell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ccampbell/subscriptions",
            "organizations_url": "https://api.github.com/users/ccampbell/orgs",
            "repos_url": "https://api.github.com/users/ccampbell/repos",
            "events_url": "https://api.github.com/users/ccampbell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ccampbell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah, sorry, I was actually thinking about that, but all the tests passed in the build (from using the fake XHR object I suspect)\n",
        "created_at": "2014-06-30T18:47:24Z",
        "updated_at": "2014-06-30T18:47:24Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14367719",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2486",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367719"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14367719"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2486"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367768",
        "pull_request_review_id": null,
        "id": 14367768,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY3NzY4",
        "diff_hunk": "@@ -135,5 +135,41 @@ describe('Request', function(){\n \n \t});\n \n+\tit('should not set xhr.withCredentials flag by default', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(false);\n+\t});\n+\n+\t/*<1.4compat>*/\n+\tit('should set xhr.withCredentials flag in 1.4 for this.options.user', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other',\n+\t\t\tuser: 'someone'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(true);\n+\t});\n+\t/*</1.4compat>*/\n \n+\tvar dit = /*<1.4compat>*/xit || /*</1.4compat>*/it; // don't run unless no compat\n+\tdit('should not set xhr.withCredentials flag in 1.5 for this.options.user', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other',\n+\t\t\tuser: 'someone'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(false);",
        "path": "Specs/Request/Request.js",
        "position": 30,
        "original_position": 30,
        "commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "original_commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "user": {
            "login": "ccampbell",
            "id": 259316,
            "node_id": "MDQ6VXNlcjI1OTMxNg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/259316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ccampbell",
            "html_url": "https://github.com/ccampbell",
            "followers_url": "https://api.github.com/users/ccampbell/followers",
            "following_url": "https://api.github.com/users/ccampbell/following{/other_user}",
            "gists_url": "https://api.github.com/users/ccampbell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ccampbell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ccampbell/subscriptions",
            "organizations_url": "https://api.github.com/users/ccampbell/orgs",
            "repos_url": "https://api.github.com/users/ccampbell/repos",
            "events_url": "https://api.github.com/users/ccampbell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ccampbell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could also wrap the expect in \n\n``` javascript\nif (request.xhr.hasOwnProperty('withCredentials')) { ...\n```\n",
        "created_at": "2014-06-30T18:48:09Z",
        "updated_at": "2014-06-30T18:48:09Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14367768",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2486",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367768"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14367768"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2486"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367917",
        "pull_request_review_id": null,
        "id": 14367917,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY3OTE3",
        "diff_hunk": "@@ -135,5 +135,41 @@ describe('Request', function(){\n \n \t});\n \n+\tit('should not set xhr.withCredentials flag by default', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(false);\n+\t});\n+\n+\t/*<1.4compat>*/\n+\tit('should set xhr.withCredentials flag in 1.4 for this.options.user', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other',\n+\t\t\tuser: 'someone'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(true);\n+\t});\n+\t/*</1.4compat>*/\n \n+\tvar dit = /*<1.4compat>*/xit || /*</1.4compat>*/it; // don't run unless no compat\n+\tdit('should not set xhr.withCredentials flag in 1.5 for this.options.user', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other',\n+\t\t\tuser: 'someone'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(false);",
        "path": "Specs/Request/Request.js",
        "position": 30,
        "original_position": 30,
        "commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "original_commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ccampbell we have encrypted user/pass to sauce labs testing. That means pull requests are only tested against PhantomJS on Travis. We should maybe change that so that pull requests actually get tested in browsers and not only after merge.\n\nAnyway, this is a detail, I am really happy you proposed this fix.\n",
        "created_at": "2014-06-30T18:50:07Z",
        "updated_at": "2014-06-30T18:50:07Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14367917",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2486",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367917"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14367917"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2486"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14368416",
        "pull_request_review_id": null,
        "id": 14368416,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY4NDE2",
        "diff_hunk": "@@ -135,5 +135,41 @@ describe('Request', function(){\n \n \t});\n \n+\tit('should not set xhr.withCredentials flag by default', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(false);\n+\t});\n+\n+\t/*<1.4compat>*/\n+\tit('should set xhr.withCredentials flag in 1.4 for this.options.user', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other',\n+\t\t\tuser: 'someone'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(true);\n+\t});\n+\t/*</1.4compat>*/\n \n+\tvar dit = /*<1.4compat>*/xit || /*</1.4compat>*/it; // don't run unless no compat\n+\tdit('should not set xhr.withCredentials flag in 1.5 for this.options.user', function(){\n+\t\tvar request = new Request({\n+\t\t\turl: '/something/or/other',\n+\t\t\tuser: 'someone'\n+\t\t}).send();\n+\n+\t\texpect(request.xhr.withCredentials).toBe(false);",
        "path": "Specs/Request/Request.js",
        "position": 30,
        "original_position": 30,
        "commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "original_commit_id": "595356fa42bd6f6003359e448e9ba4ee1328b7f5",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ccampbell Olmo just fixed it with `.toBeFalsy()` \nThanks again, cheers.\n",
        "created_at": "2014-06-30T18:58:09Z",
        "updated_at": "2014-06-30T18:58:09Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14368416",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2486",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14368416"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2486#discussion_r14368416"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2486"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13675178",
        "pull_request_review_id": null,
        "id": 13675178,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjc1MTc4",
        "diff_hunk": "@@ -34,6 +34,18 @@ el = null;\n \n var hasGetComputedStyle = !!window.getComputedStyle;\n \n+var supportBorderRadius = false;\n+['borderRadius', 'MozBorderRadius', 'WebkitBorderRadius', 'OBorderRadius', 'KhtmlBorderRadius'].each(function(el){\n+\t\tif(document.body.style[el] != null) supportBorderRadius = true;\n+});",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 7,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "28d4c14f8f10ed92cd079bc925cb6f512cd760d2",
        "user": {
            "login": "anutron",
            "id": 13230,
            "node_id": "MDQ6VXNlcjEzMjMw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anutron",
            "html_url": "https://github.com/anutron",
            "followers_url": "https://api.github.com/users/anutron/followers",
            "following_url": "https://api.github.com/users/anutron/following{/other_user}",
            "gists_url": "https://api.github.com/users/anutron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anutron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anutron/subscriptions",
            "organizations_url": "https://api.github.com/users/anutron/orgs",
            "repos_url": "https://api.github.com/users/anutron/repos",
            "events_url": "https://api.github.com/users/anutron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anutron/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Are there any other styles that only work with the prefixes?\n",
        "created_at": "2014-06-11T21:23:51Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r13675178",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13675178"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r13675178"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13675256",
        "pull_request_review_id": null,
        "id": 13675256,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjc1MjU2",
        "diff_hunk": "@@ -34,6 +34,18 @@ el = null;\n \n var hasGetComputedStyle = !!window.getComputedStyle;\n \n+var supportBorderRadius = false;\n+['borderRadius', 'MozBorderRadius', 'WebkitBorderRadius', 'OBorderRadius', 'KhtmlBorderRadius'].each(function(el){\n+\t\tif(document.body.style[el] != null) supportBorderRadius = true;\n+});",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 7,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "28d4c14f8f10ed92cd079bc925cb6f512cd760d2",
        "user": {
            "login": "anutron",
            "id": 13230,
            "node_id": "MDQ6VXNlcjEzMjMw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anutron",
            "html_url": "https://github.com/anutron",
            "followers_url": "https://api.github.com/users/anutron/followers",
            "following_url": "https://api.github.com/users/anutron/following{/other_user}",
            "gists_url": "https://api.github.com/users/anutron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anutron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anutron/subscriptions",
            "organizations_url": "https://api.github.com/users/anutron/orgs",
            "repos_url": "https://api.github.com/users/anutron/repos",
            "events_url": "https://api.github.com/users/anutron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anutron/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also, you could optimize this slightly by using `.some` instead of `.each` - i.e.\n\n``` javascript\nvar supportBorderRadius = [x,y,z].some(function(style){ return document.body.style[style];});\n```\n\nAs a side note, I'd not use \"el\" as the variable name here...\n",
        "created_at": "2014-06-11T21:25:11Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r13675256",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13675256"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r13675256"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13675294",
        "pull_request_review_id": null,
        "id": 13675294,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjc1Mjk0",
        "diff_hunk": "@@ -34,6 +34,18 @@ el = null;\n \n var hasGetComputedStyle = !!window.getComputedStyle;\n \n+var supportBorderRadius = false;\n+['borderRadius', 'MozBorderRadius', 'WebkitBorderRadius', 'OBorderRadius', 'KhtmlBorderRadius'].each(function(el){\n+\t\tif(document.body.style[el] != null) supportBorderRadius = true;\n+});\n+var getBorderRadius = function(el){\n+\tresult = [];\n+\t['border-top-left-radius', 'border-top-right-radius', 'border-bottom-right-radius', 'border-bottom-left-radius'].each(function(corner){\n+\t\tresult.push(el.getStyle(corner) || '0px');\n+\t});\n+\treturn result.join(' ');\n+}",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 14,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "28d4c14f8f10ed92cd079bc925cb6f512cd760d2",
        "user": {
            "login": "anutron",
            "id": 13230,
            "node_id": "MDQ6VXNlcjEzMjMw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anutron",
            "html_url": "https://github.com/anutron",
            "followers_url": "https://api.github.com/users/anutron/followers",
            "following_url": "https://api.github.com/users/anutron/following{/other_user}",
            "gists_url": "https://api.github.com/users/anutron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anutron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anutron/subscriptions",
            "organizations_url": "https://api.github.com/users/anutron/orgs",
            "repos_url": "https://api.github.com/users/anutron/repos",
            "events_url": "https://api.github.com/users/anutron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anutron/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "missing `;`\n",
        "created_at": "2014-06-11T21:26:06Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r13675294",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13675294"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r13675294"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13675454",
        "pull_request_review_id": null,
        "id": 13675454,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjc1NDU0",
        "diff_hunk": "@@ -133,6 +145,7 @@ Element.implement({\n \tgetStyle: function(property){\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\t\tif (property.match(/borderRadius/)) return supportBorderRadius ? getBorderRadius(this) : null;",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 23,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "28d4c14f8f10ed92cd079bc925cb6f512cd760d2",
        "user": {
            "login": "anutron",
            "id": 13230,
            "node_id": "MDQ6VXNlcjEzMjMw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anutron",
            "html_url": "https://github.com/anutron",
            "followers_url": "https://api.github.com/users/anutron/followers",
            "following_url": "https://api.github.com/users/anutron/following{/other_user}",
            "gists_url": "https://api.github.com/users/anutron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anutron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anutron/subscriptions",
            "organizations_url": "https://api.github.com/users/anutron/orgs",
            "repos_url": "https://api.github.com/users/anutron/repos",
            "events_url": "https://api.github.com/users/anutron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anutron/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "define this regex outside the method, as using the literal here creates it every time getStyle is called and regex have a minor startup cost. I started to suggest avoiding `.match` but turns out it's faster than an indexOf search: http://jsperf.com/exec-vs-match-vs-test-vs-search/27\n",
        "created_at": "2014-06-11T21:29:17Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r13675454",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13675454"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r13675454"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13675928",
        "pull_request_review_id": null,
        "id": 13675928,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjc1OTI4",
        "diff_hunk": "@@ -34,6 +34,18 @@ el = null;\n \n var hasGetComputedStyle = !!window.getComputedStyle;\n \n+var supportBorderRadius = false;\n+['borderRadius', 'MozBorderRadius', 'WebkitBorderRadius', 'OBorderRadius', 'KhtmlBorderRadius'].each(function(el){\n+\t\tif(document.body.style[el] != null) supportBorderRadius = true;\n+});",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 7,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "28d4c14f8f10ed92cd079bc925cb6f512cd760d2",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm wondering if we really need all those prefixed versions. According to http://caniuse.com/border-radius only Firefox 3.x and Safari 4.x would need prefixes (as per our browser support matrix), Opera never shipped a stable version using the prefixed property and I'm unsure about Konqueror but quite sure it has been standardized to `border-radius` ages ago.\n",
        "created_at": "2014-06-11T21:40:16Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r13675928",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13675928"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r13675928"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14366754",
        "pull_request_review_id": null,
        "id": 14366754,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY2NzU0",
        "diff_hunk": "@@ -34,6 +34,16 @@ el = null;\n \n var hasGetComputedStyle = !!window.getComputedStyle;\n \n+var borderRadiusRegEx = new RegExp(/borderRadius/), ",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 4,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "6102fdfe56333b98acf46b8ceee30146971667d7",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No need for new RegExp\n",
        "created_at": "2014-06-30T18:31:05Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14366754",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14366754"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14366754"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14366966",
        "pull_request_review_id": null,
        "id": 14366966,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY2OTY2",
        "diff_hunk": "@@ -34,6 +34,16 @@ el = null;\n \n var hasGetComputedStyle = !!window.getComputedStyle;\n \n+var borderRadiusRegEx = new RegExp(/borderRadius/), \n+\tsupportBorderRadius = document.body.style.borderRadius != null ? true : false;\n+var getBorderRadius = function(el){\n+\tresult = [];\n+\t['border-top-left-radius', 'border-top-right-radius', 'border-bottom-right-radius', 'border-bottom-left-radius'].each(function(corner){\n+\t\tresult.push(el.getStyle(corner) || '0px');\n+\t});\n+\treturn result.join(' ');",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 11,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "6102fdfe56333b98acf46b8ceee30146971667d7",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nreturn ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'].map(function(corner){\n  return el.style[corner] || '0px';\n}).join(' ');\n```\n",
        "created_at": "2014-06-30T18:34:27Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14366966",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14366966"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14366966"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367160",
        "pull_request_review_id": null,
        "id": 14367160,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY3MTYw",
        "diff_hunk": "@@ -133,6 +143,7 @@ Element.implement({\n \tgetStyle: function(property){\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\t\tif (property.match(borderRadiusRegEx)) return supportBorderRadius ? getBorderRadius(this) : null;",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 21,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "6102fdfe56333b98acf46b8ceee30146971667d7",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually, get rid of the regex, and just do a:\n\n``` js\nif (~property.indexOf('borderRadius')) return supportBorderRadius && getBorderRadius(this);\n```\n\nand you can update the supportBorderRadius to:\n\n``` js\nsupportBorderRadius = document.body.style.borderRadius;\n```\n",
        "created_at": "2014-06-30T18:37:56Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14367160",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367160"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14367160"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367234",
        "pull_request_review_id": null,
        "id": 14367234,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY3MjM0",
        "diff_hunk": "@@ -372,4 +372,40 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('Border Radius', function(){\n+\t\n+\t\tvar supportBorderRadius = document.body.style.borderRadius != null ? true : false;\n+\t\tif (navigator.userAgent.match(/PhantomJS\\/1./)) supportBorderRadius = false;",
        "path": "Specs/Element/Element.Style.js",
        "position": 108,
        "original_position": 108,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "6102fdfe56333b98acf46b8ceee30146971667d7",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Did the supportBorderRadius not work for PhantomJS? \n",
        "created_at": "2014-06-30T18:39:12Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14367234",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367234"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14367234"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367363",
        "pull_request_review_id": null,
        "id": 14367363,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY3MzYz",
        "diff_hunk": "@@ -372,4 +372,40 @@ describe('Element.Style', function(){\n \t\t});\n \n \t});\n+\t\n+\tdescribe('Border Radius', function(){\n+\t\n+\t\tvar supportBorderRadius = document.body.style.borderRadius != null ? true : false;\n+\t\tif (navigator.userAgent.match(/PhantomJS\\/1./)) supportBorderRadius = false;",
        "path": "Specs/Element/Element.Style.js",
        "position": 108,
        "original_position": 108,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "6102fdfe56333b98acf46b8ceee30146971667d7",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Exactly, they use a old browser engine and I read somewhere that would be fixed in PhantomJS 2.0, current is 1.9.\n\n(really nice feedback you are leaving here and there, I will check it and update all over)\n",
        "created_at": "2014-06-30T18:41:14Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14367363",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367363"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14367363"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367398",
        "pull_request_review_id": null,
        "id": 14367398,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY3Mzk4",
        "diff_hunk": "@@ -133,6 +143,7 @@ Element.implement({\n \tgetStyle: function(property){\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\t\tif (property.match(borderRadiusRegEx)) return supportBorderRadius ? getBorderRadius(this) : null;",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 21,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "6102fdfe56333b98acf46b8ceee30146971667d7",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ah actually\n\n``` js\nif (supportBorderRadius && ~property.indexOf('borderRadius')) return getBorderRadius(this);\n```\n\nOr better yet:\n\n``` js\nif (supportBorderRadius && ~property.indexOf('borderRadius')) return ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'].map(function(corner){\n  return el.style[corner] || '0px';\n}).join(' ');\n```\n",
        "created_at": "2014-06-30T18:41:52Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14367398",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14367398"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14367398"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14398815",
        "pull_request_review_id": null,
        "id": 14398815,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzk4ODE1",
        "diff_hunk": "@@ -133,6 +134,11 @@ Element.implement({\n \tgetStyle: function(property){\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\t\tif (supportBorderRadius && ~property.indexOf('borderRadius')){",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 14,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "6626c0c6d128007570a96fa3da49230820a04d69",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I prefer `indexOf(x) != -1` for better readability.\n",
        "created_at": "2014-07-01T11:27:50Z",
        "updated_at": "2014-07-01T11:45:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14398815",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14398815"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14398815"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14399691",
        "pull_request_review_id": null,
        "id": 14399691,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzk5Njkx",
        "diff_hunk": "@@ -322,7 +324,7 @@ These aliases are:\n \n ### Note:\n \n-By default the emulation option is set to true, so the *put* and *delete* send methods are emulated and will actually send as *post* while the method name is sent as e.g. `_method=delete`.\n+By default the emulation option is set to true, so the *put*, *delete* and *patch* send methods are emulated and will actually send as *post* while the method name is sent as e.g. `_method=delete`.",
        "path": "Docs/Request/Request.md",
        "position": 14,
        "original_position": 14,
        "commit_id": "f20985aa9510fea4711525c5dbe197b3da4dc871",
        "original_commit_id": "f20985aa9510fea4711525c5dbe197b3da4dc871",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not `head`?\n",
        "created_at": "2014-07-01T11:56:22Z",
        "updated_at": "2014-07-01T11:56:22Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2610#discussion_r14399691",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2610",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14399691"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2610#discussion_r14399691"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2610"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14400320",
        "pull_request_review_id": null,
        "id": 14400320,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDAwMzIw",
        "diff_hunk": "@@ -133,6 +134,11 @@ Element.implement({\n \tgetStyle: function(property){\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\t\tif (supportBorderRadius && ~property.indexOf('borderRadius')){",
        "path": "Source/Element/Element.Style.js",
        "position": null,
        "original_position": 14,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "6626c0c6d128007570a96fa3da49230820a04d69",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@arian sure. Updated.\n",
        "created_at": "2014-07-01T12:15:42Z",
        "updated_at": "2014-07-01T12:15:42Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14400320",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14400320"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14400320"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13732821",
        "pull_request_review_id": null,
        "id": 13732821,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzMyODIx",
        "diff_hunk": "@@ -1015,11 +1029,15 @@ Element.Properties.html = {\n \tset: function(html){\n \t\tif (html == null) html = '';\n \t\telse if (typeOf(html) == 'array') html = html.join('');\n-\t\tthis.innerHTML = html;\n-\t},\n \n+\t\t/*<ltIE9>*/\n+\t\tif (!canChangeStyleHtml && this.styleSheet) this.styleSheet.cssText = html;\n+\t\telse /*</ltIE9>*/this.innerHTML = html;\n+\t},\n \terase: function(){\n-\t\tthis.innerHTML = '';\n+\t\t/*<ltIE9>*/\n+\t\tthis.set('html', '');\n+\t\t// /*</ltIE9>*/this.innerHTML = '';",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 36,
        "commit_id": "aec38985fcaf55f6c3413c707a46e6f9508b1b1e",
        "original_commit_id": "e8f0975dfea4a5e64cba7e8d6e44b2404779cfdc",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is this OK? (so we can remove this block in the future), or bad to mix comments & blocks like this?\n",
        "created_at": "2014-06-12T23:32:44Z",
        "updated_at": "2014-07-01T12:33:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2612#discussion_r13732821",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2612",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13732821"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2612#discussion_r13732821"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2612"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14366575",
        "pull_request_review_id": null,
        "id": 14366575,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY2NTc1",
        "diff_hunk": "@@ -1015,11 +1029,15 @@ Element.Properties.html = {\n \tset: function(html){\n \t\tif (html == null) html = '';\n \t\telse if (typeOf(html) == 'array') html = html.join('');\n-\t\tthis.innerHTML = html;\n-\t},\n \n+\t\t/*<ltIE9>*/\n+\t\tif (!canChangeStyleHtml && this.styleSheet) this.styleSheet.cssText = html;",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 29,
        "commit_id": "aec38985fcaf55f6c3413c707a46e6f9508b1b1e",
        "original_commit_id": "e8f0975dfea4a5e64cba7e8d6e44b2404779cfdc",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "just being picky, but I'd say: `if (this.stylesheet && !canChangeStyleHTML)` \n",
        "created_at": "2014-06-30T18:27:58Z",
        "updated_at": "2014-07-01T12:33:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2612#discussion_r14366575",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2612",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14366575"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2612#discussion_r14366575"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2612"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14366623",
        "pull_request_review_id": null,
        "id": 14366623,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzY2NjIz",
        "diff_hunk": "@@ -1015,11 +1029,15 @@ Element.Properties.html = {\n \tset: function(html){\n \t\tif (html == null) html = '';\n \t\telse if (typeOf(html) == 'array') html = html.join('');\n-\t\tthis.innerHTML = html;\n-\t},\n \n+\t\t/*<ltIE9>*/\n+\t\tif (!canChangeStyleHtml && this.styleSheet) this.styleSheet.cssText = html;\n+\t\telse /*</ltIE9>*/this.innerHTML = html;\n+\t},\n \terase: function(){\n-\t\tthis.innerHTML = '';\n+\t\t/*<ltIE9>*/\n+\t\tthis.set('html', '');\n+\t\t// /*</ltIE9>*/this.innerHTML = '';",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 36,
        "commit_id": "aec38985fcaf55f6c3413c707a46e6f9508b1b1e",
        "original_commit_id": "e8f0975dfea4a5e64cba7e8d6e44b2404779cfdc",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would just use `this.set('html', '');` it's BC with other versions anyway. \n",
        "created_at": "2014-06-30T18:28:45Z",
        "updated_at": "2014-07-01T12:33:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2612#discussion_r14366623",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2612",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14366623"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2612#discussion_r14366623"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2612"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14399270",
        "pull_request_review_id": null,
        "id": 14399270,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzk5Mjcw",
        "diff_hunk": "@@ -1068,6 +1084,9 @@ if (!supportsTableInnerHTML || !supportsTRInnerHTML || !supportsHTML5Elements){\n \n \t\treturn function(html){\n \t\t\tvar wrap = translations[this.get('tag')];\n+\t\t\t/*<ltIE9>*/\n+\t\t\tif (!wrap && this.styleSheet) return set.call(this, html);\n+\t\t\t/*</ltIE9>*/",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 44,
        "commit_id": "aec38985fcaf55f6c3413c707a46e6f9508b1b1e",
        "original_commit_id": "1a18928721581e47bce7cca2158a82e4fed36755",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`style` is not in the translations object right? Then you could move this line up.\n",
        "created_at": "2014-07-01T11:42:21Z",
        "updated_at": "2014-07-01T12:33:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2612#discussion_r14399270",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2612",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14399270"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2612#discussion_r14399270"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2612"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14400747",
        "pull_request_review_id": null,
        "id": 14400747,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDAwNzQ3",
        "diff_hunk": "@@ -1068,6 +1084,9 @@ if (!supportsTableInnerHTML || !supportsTRInnerHTML || !supportsHTML5Elements){\n \n \t\treturn function(html){\n \t\t\tvar wrap = translations[this.get('tag')];\n+\t\t\t/*<ltIE9>*/\n+\t\t\tif (!wrap && this.styleSheet) return set.call(this, html);\n+\t\t\t/*</ltIE9>*/",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 44,
        "commit_id": "aec38985fcaf55f6c3413c707a46e6f9508b1b1e",
        "original_commit_id": "1a18928721581e47bce7cca2158a82e4fed36755",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@arian good point. Moved it one line up.\n",
        "created_at": "2014-07-01T12:27:54Z",
        "updated_at": "2014-07-01T12:33:53Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2612#discussion_r14400747",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2612",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14400747"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2612#discussion_r14400747"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2612"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14403100",
        "pull_request_review_id": null,
        "id": 14403100,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDAzMTAw",
        "diff_hunk": "@@ -133,6 +134,11 @@ Element.implement({\n \tgetStyle: function(property){\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\t\tif (supportBorderRadius && property.indexOf('borderRadius') != -1){",
        "path": "Source/Element/Element.Style.js",
        "position": 14,
        "original_position": 14,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You didn't like the `~property.indexOf('borderRadius')` ? hehe.\n",
        "created_at": "2014-07-01T13:27:32Z",
        "updated_at": "2014-07-01T13:27:32Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14403100",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14403100"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14403100"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14404290",
        "pull_request_review_id": null,
        "id": 14404290,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDA0Mjkw",
        "diff_hunk": "@@ -133,6 +134,11 @@ Element.implement({\n \tgetStyle: function(property){\n \t\tif (property == 'opacity') return getOpacity(this);\n \t\tproperty = (property == 'float' ? floatName : property).camelCase();\n+\t\tif (supportBorderRadius && property.indexOf('borderRadius') != -1){",
        "path": "Source/Element/Element.Style.js",
        "position": 14,
        "original_position": 14,
        "commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "original_commit_id": "4bac80f11f3feae10ccc0696d5cc81a1c1a7db56",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo: @arian didn't. \nI'm easy, I just learn with both you guys :P\n",
        "created_at": "2014-07-01T13:47:20Z",
        "updated_at": "2014-07-01T13:47:20Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14404290",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2611",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14404290"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2611#discussion_r14404290"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2611"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13260650",
        "pull_request_review_id": null,
        "id": 13260650,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjYwNjUw",
        "diff_hunk": "@@ -49,7 +53,32 @@ Element.implement({\n \n \tgetSize: function(){\n \t\tif (isBody(this)) return this.getWindow().getSize();\n-\t\treturn {x: this.offsetWidth, y: this.offsetHeight};\n+\t\t\n+\t\t// This if clause is because IE8- cannot calculate getBoundingClientRect of elements with hidden visibility.\n+\t\tif (!document.addEventListener) return {x: this.offsetWidth, y: this.offsetHeight};\n+\t\t\n+\t\t// This section inside the `if == true` can be removed when FF fixed the svg size bug.",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 20,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "8c3045531eb882e168132f156c132cf828dfae27",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "A link to Bugzilla would be nice here so we can track which specific bug we are working around. \n",
        "created_at": "2014-05-31T11:23:54Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r13260650",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13260650"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r13260650"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13260655",
        "pull_request_review_id": null,
        "id": 13260655,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjYwNjU1",
        "diff_hunk": "@@ -49,7 +53,32 @@ Element.implement({\n \n \tgetSize: function(){\n \t\tif (isBody(this)) return this.getWindow().getSize();\n-\t\treturn {x: this.offsetWidth, y: this.offsetHeight};\n+\t\t\n+\t\t// This if clause is because IE8- cannot calculate getBoundingClientRect of elements with hidden visibility.\n+\t\tif (!document.addEventListener) return {x: this.offsetWidth, y: this.offsetHeight};\n+\t\t\n+\t\t// This section inside the `if == true` can be removed when FF fixed the svg size bug.\n+\t\t// The same applies to the computeSize function at L38 `var computeSize = function(v){`.",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 21,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "8c3045531eb882e168132f156c132cf828dfae27",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "L38? Line numbers are volatile, just mention what needs to be removed by name. \n",
        "created_at": "2014-05-31T11:25:47Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r13260655",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13260655"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r13260655"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13260681",
        "pull_request_review_id": null,
        "id": 13260681,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjYwNjgx",
        "diff_hunk": "@@ -49,7 +53,32 @@ Element.implement({\n \n \tgetSize: function(){\n \t\tif (isBody(this)) return this.getWindow().getSize();\n-\t\treturn {x: this.offsetWidth, y: this.offsetHeight};\n+\t\t\n+\t\t// This if clause is because IE8- cannot calculate getBoundingClientRect of elements with hidden visibility.\n+\t\tif (!document.addEventListener) return {x: this.offsetWidth, y: this.offsetHeight};",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 18,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "8c3045531eb882e168132f156c132cf828dfae27",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can we actually get a feature test for this bug? Piggybacking on the existence of `document.addEventListener` feels a bit hacky. \n\nAlso remember to enclose it in a `//<ltIE9>` block for packager, unless that was removed on the grunt version of it? \n",
        "created_at": "2014-05-31T11:37:51Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r13260681",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13260681"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r13260681"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13260687",
        "pull_request_review_id": null,
        "id": 13260687,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjYwNjg3",
        "diff_hunk": "@@ -35,6 +35,10 @@ var isOffsetStatic = function(el){\n \treturn isOffset(el) || (/^(?:table|td|th)$/i).test(el.tagName);\n };\n \n+var computeSize = function(v){",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 4,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "8c3045531eb882e168132f156c132cf828dfae27",
        "user": {
            "login": "gonchuki",
            "id": 19917,
            "node_id": "MDQ6VXNlcjE5OTE3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/19917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gonchuki",
            "html_url": "https://github.com/gonchuki",
            "followers_url": "https://api.github.com/users/gonchuki/followers",
            "following_url": "https://api.github.com/users/gonchuki/following{/other_user}",
            "gists_url": "https://api.github.com/users/gonchuki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gonchuki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gonchuki/subscriptions",
            "organizations_url": "https://api.github.com/users/gonchuki/orgs",
            "repos_url": "https://api.github.com/users/gonchuki/repos",
            "events_url": "https://api.github.com/users/gonchuki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gonchuki/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can we rename to `parseComputedStyle`? \n",
        "created_at": "2014-05-31T11:40:45Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r13260687",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13260687"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r13260687"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387317",
        "pull_request_review_id": null,
        "id": 14387317,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzg3MzE3",
        "diff_hunk": "@@ -49,7 +55,35 @@ Element.implement({\n \n \tgetSize: function(){\n \t\tif (isBody(this)) return this.getWindow().getSize();\n-\t\treturn {x: this.offsetWidth, y: this.offsetHeight};\n+\n+\t\t//<ltIE9>\n+\t\t// This if clause is because IE8- cannot calculate getBoundingClientRect of elements with hidden visibility.\n+\t\tif (!hasGetComputedStyle) return {x: this.offsetWidth, y: this.offsetHeight};",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 28,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "ab000ca681cc33b026d91001b15c965be6bb07a8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm a little confused on the comment, and the code. How's the global !hasGetComputedStyle relate with the visibility of this specific element?\n",
        "created_at": "2014-07-01T03:20:52Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14387317",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387317"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14387317"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387327",
        "pull_request_review_id": null,
        "id": 14387327,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzg3MzI3",
        "diff_hunk": "@@ -49,7 +55,35 @@ Element.implement({\n \n \tgetSize: function(){\n \t\tif (isBody(this)) return this.getWindow().getSize();\n-\t\treturn {x: this.offsetWidth, y: this.offsetHeight};\n+\n+\t\t//<ltIE9>\n+\t\t// This if clause is because IE8- cannot calculate getBoundingClientRect of elements with hidden visibility.\n+\t\tif (!hasGetComputedStyle) return {x: this.offsetWidth, y: this.offsetHeight};\n+\t\t//</ltIE9>\n+\n+\t\t// This section inside the `if == true` can be removed when FF fixed the svg size bug.",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 31,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "ab000ca681cc33b026d91001b15c965be6bb07a8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "maybe you meant: \"This svg section can be removed ...\"\n",
        "created_at": "2014-07-01T03:21:49Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14387327",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387327"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14387327"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387373",
        "pull_request_review_id": null,
        "id": 14387373,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzg3Mzcz",
        "diff_hunk": "@@ -49,7 +55,35 @@ Element.implement({\n \n \tgetSize: function(){\n \t\tif (isBody(this)) return this.getWindow().getSize();\n-\t\treturn {x: this.offsetWidth, y: this.offsetHeight};\n+\n+\t\t//<ltIE9>\n+\t\t// This if clause is because IE8- cannot calculate getBoundingClientRect of elements with hidden visibility.\n+\t\tif (!hasGetComputedStyle) return {x: this.offsetWidth, y: this.offsetHeight};\n+\t\t//</ltIE9>\n+\n+\t\t// This section inside the `if == true` can be removed when FF fixed the svg size bug.\n+\t\t// Bug info: https://bugzilla.mozilla.org/show_bug.cgi?id=530985\n+\t\t// The same applies to the parseComputedStyle function starting with `var parseComputedStyle = function(v){`.\n+\t\tif (this.get('tag') == 'svg'){\n+\n+\t\t\tvar gCS = window.getComputedStyle(this), bounds;\n+\t\t\tvar gCScomponents = {",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 37,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "ab000ca681cc33b026d91001b15c965be6bb07a8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You can move this outside of `getSize`. I'd also use `heightComponents` and `widthComponents` instead of an object.\n\nYou can also just do \n\n``` js\nvar gCS = window.getComputedStyle(this), bounds = {x: 0, y: 0};\n```\n",
        "created_at": "2014-07-01T03:24:41Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14387373",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387373"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14387373"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387424",
        "pull_request_review_id": null,
        "id": 14387424,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzg3NDI0",
        "diff_hunk": "@@ -49,7 +55,35 @@ Element.implement({\n \n \tgetSize: function(){\n \t\tif (isBody(this)) return this.getWindow().getSize();\n-\t\treturn {x: this.offsetWidth, y: this.offsetHeight};\n+\n+\t\t//<ltIE9>\n+\t\t// This if clause is because IE8- cannot calculate getBoundingClientRect of elements with hidden visibility.\n+\t\tif (!hasGetComputedStyle) return {x: this.offsetWidth, y: this.offsetHeight};\n+\t\t//</ltIE9>\n+\n+\t\t// This section inside the `if == true` can be removed when FF fixed the svg size bug.\n+\t\t// Bug info: https://bugzilla.mozilla.org/show_bug.cgi?id=530985\n+\t\t// The same applies to the parseComputedStyle function starting with `var parseComputedStyle = function(v){`.\n+\t\tif (this.get('tag') == 'svg'){\n+\n+\t\t\tvar gCS = window.getComputedStyle(this), bounds;\n+\t\t\tvar gCScomponents = {\n+\t\t\t\theight: ['height', 'paddingTop', 'paddingBottom', 'borderTopWidth', 'borderBottomWidth'],\n+\t\t\t\twidth: ['width', 'paddingLeft', 'paddingRight', 'borderLeftWidth', 'borderRightWidth']\n+\t\t\t};\n+\t\t\tbounds = {x: 0, y: 0};\n+\t\t\tgCScomponents.height.each(function(css){\n+\t\t\t\tbounds.y += parseComputedStyle(gCS[css]);\n+\t\t\t});\n+\t\t\tgCScomponents.width.each(function(css){\n+\t\t\t\tbounds.x += parseComputedStyle(gCS[css]);\n+\t\t\t});\n+\t\t\treturn bounds;\n+\n+\t\t} else {\n+\t\t\tbounds = this.getBoundingClientRect();\n+\t\t\treturn {x: bounds.width, y: bounds.height};",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 52,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "ab000ca681cc33b026d91001b15c965be6bb07a8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This just made me realize that `{x, y}` is really counter-intuitive. I would have expected `getSize` to return `{width, height}`. `x` and `y` are typically position. Oo. 2.0?\n",
        "created_at": "2014-07-01T03:28:31Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14387424",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387424"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14387424"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387482",
        "pull_request_review_id": null,
        "id": 14387482,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzg3NDgy",
        "diff_hunk": "@@ -35,6 +37,10 @@ var isOffsetStatic = function(el){\n \treturn isOffset(el) || (/^(?:table|td|th)$/i).test(el.tagName);\n };\n \n+var parseComputedStyle = function(v){\n+\treturn parseFloat(v.match(/([0-9.?]{1,})/));",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 14,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "ab000ca681cc33b026d91001b15c965be6bb07a8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why not just... \n\n``` js\nreturn parseFloat(...);\n```\n\nworksforme:\n\n```\nparseFloat('0px')\n0\nparseFloat('0.1px')\n0.1\nparseFloat('0.1px 0.1px')\n0.1\nparseFloat('0px')\n0\nparseFloat('5px')\n5\nparseFloat('500px')\n500\nparseFloat('500.0px')\n500\nparseFloat('-1.0px')\n-1\nparseFloat('-0.2px')\n-0.2\n```\n\nIf you agree, you can just drop this function and inline the `parseFloat`.\n",
        "created_at": "2014-07-01T03:33:45Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14387482",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387482"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14387482"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14402838",
        "pull_request_review_id": null,
        "id": 14402838,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDAyODM4",
        "diff_hunk": "@@ -27,6 +27,36 @@ element.appendChild(child);\n var brokenOffsetParent = (child.offsetParent === element);\n element = child = null;\n \n+var hasGetComputedStyle = !!window.getComputedStyle;\n+var canCalculateGBCRofHiddenElements = (function () {\n+\tvar div = new Element('div', {\n+\t\tstyles: {\n+\t\t\twidth: '100px',\n+\t\t\tvisibility: 'hidden'\n+\t\t}\n+\t});\n+\tdocument.body.appendChild(div);",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 12,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "68d4ea8fc2de0a4d5134f51af49f8ddd6549029b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ahh yikes. Any way the element wouldn't have to touch the DOM?\n",
        "created_at": "2014-07-01T13:21:58Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14402838",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14402838"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14402838"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14402889",
        "pull_request_review_id": null,
        "id": 14402889,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDAyODg5",
        "diff_hunk": "@@ -27,6 +27,36 @@ element.appendChild(child);\n var brokenOffsetParent = (child.offsetParent === element);\n element = child = null;\n \n+var hasGetComputedStyle = !!window.getComputedStyle;\n+var canCalculateGBCRofHiddenElements = (function () {\n+\tvar div = new Element('div', {\n+\t\tstyles: {\n+\t\t\twidth: '100px',\n+\t\t\tvisibility: 'hidden'\n+\t\t}\n+\t});\n+\tdocument.body.appendChild(div);\n+\tvar width = div.getBoundingClientRect().width;\n+\tdocument.body.removeChild(div);\n+\treturn !!width;\n+})();\n+\t\n+var svgCalculateSize = function(el){\n+\n+\tvar gCS = window.getComputedStyle(el), \n+\t\tbounds = {x: 0, y: 0},\n+\t\theightComponents = ['height', 'paddingTop', 'paddingBottom', 'borderTopWidth', 'borderBottomWidth'],",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 22,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "68d4ea8fc2de0a4d5134f51af49f8ddd6549029b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you can still move these outside the function. basically, save yourself the cost of creating them each time svgCalculateSize is called. \n",
        "created_at": "2014-07-01T13:22:58Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14402889",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14402889"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14402889"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14402912",
        "pull_request_review_id": null,
        "id": 14402912,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDAyOTEy",
        "diff_hunk": "@@ -49,7 +79,19 @@ Element.implement({\n \n \tgetSize: function(){\n \t\tif (isBody(this)) return this.getWindow().getSize();\n-\t\treturn {x: this.offsetWidth, y: this.offsetHeight};\n+\n+\t\t//<ltIE9>\n+\t\t// This if clause is because IE8- cannot calculate getBoundingClientRect of elements with hidden visibility.",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 44,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "68d4ea8fc2de0a4d5134f51af49f8ddd6549029b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you can now remove this comment since it's self explanatory.\n",
        "created_at": "2014-07-01T13:23:23Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14402912",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14402912"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14402912"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14402947",
        "pull_request_review_id": null,
        "id": 14402947,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDAyOTQ3",
        "diff_hunk": "@@ -49,7 +79,19 @@ Element.implement({\n \n \tgetSize: function(){\n \t\tif (isBody(this)) return this.getWindow().getSize();\n-\t\treturn {x: this.offsetWidth, y: this.offsetHeight};\n+\n+\t\t//<ltIE9>\n+\t\t// This if clause is because IE8- cannot calculate getBoundingClientRect of elements with hidden visibility.\n+\t\tif (!canCalculateGBCRofHiddenElements) return {x: this.offsetWidth, y: this.offsetHeight};\n+\t\t//</ltIE9>\n+\n+\t\t// This svg section under, calling `svgCalculateSize()`, can be removed when FF fixed the svg size bug.\n+\t\t// Bug info: https://bugzilla.mozilla.org/show_bug.cgi?id=530985\n+\t\t// The same applies to `svgCalculateSize` function.\n+\t\tif (this.get('tag') == 'svg') return svgCalculateSize(this);",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 51,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "68d4ea8fc2de0a4d5134f51af49f8ddd6549029b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I just realized that you'd be fixing this for all browsers. Any way to feature detect their bug?\n",
        "created_at": "2014-07-01T13:24:14Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14402947",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14402947"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14402947"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14402981",
        "pull_request_review_id": null,
        "id": 14402981,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDAyOTgx",
        "diff_hunk": "@@ -27,6 +27,36 @@ element.appendChild(child);\n var brokenOffsetParent = (child.offsetParent === element);\n element = child = null;\n \n+var hasGetComputedStyle = !!window.getComputedStyle;",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 4,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "68d4ea8fc2de0a4d5134f51af49f8ddd6549029b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No longer used.\n",
        "created_at": "2014-07-01T13:25:05Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14402981",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14402981"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14402981"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14404368",
        "pull_request_review_id": null,
        "id": 14404368,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDA0MzY4",
        "diff_hunk": "@@ -27,6 +27,36 @@ element.appendChild(child);\n var brokenOffsetParent = (child.offsetParent === element);\n element = child = null;\n \n+var hasGetComputedStyle = !!window.getComputedStyle;\n+var canCalculateGBCRofHiddenElements = (function () {\n+\tvar div = new Element('div', {\n+\t\tstyles: {\n+\t\t\twidth: '100px',\n+\t\t\tvisibility: 'hidden'\n+\t\t}\n+\t});\n+\tdocument.body.appendChild(div);",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 12,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "68d4ea8fc2de0a4d5134f51af49f8ddd6549029b",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo yeah :( not so good solution... that is why I had `!hasGetComputedStyle`, to browser detect. But will give it some more thinking.\n\nYou are right, of course.\n",
        "created_at": "2014-07-01T13:48:56Z",
        "updated_at": "2014-07-02T06:27:52Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14404368",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14404368"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14404368"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14442582",
        "pull_request_review_id": null,
        "id": 14442582,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDQyNTgy",
        "diff_hunk": "@@ -49,7 +79,19 @@ Element.implement({\n \n \tgetSize: function(){\n \t\tif (isBody(this)) return this.getWindow().getSize();\n-\t\treturn {x: this.offsetWidth, y: this.offsetHeight};\n+\n+\t\t//<ltIE9>\n+\t\t// This if clause is because IE8- cannot calculate getBoundingClientRect of elements with hidden visibility.\n+\t\tif (!canCalculateGBCRofHiddenElements) return {x: this.offsetWidth, y: this.offsetHeight};\n+\t\t//</ltIE9>\n+\n+\t\t// This svg section under, calling `svgCalculateSize()`, can be removed when FF fixed the svg size bug.\n+\t\t// Bug info: https://bugzilla.mozilla.org/show_bug.cgi?id=530985\n+\t\t// The same applies to `svgCalculateSize` function.\n+\t\tif (this.get('tag') == 'svg') return svgCalculateSize(this);",
        "path": "Source/Element/Element.Dimensions.js",
        "position": null,
        "original_position": 51,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "68d4ea8fc2de0a4d5134f51af49f8ddd6549029b",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo  Safari 5 also has problems to calculate `getBoundingClientRect` of svg elements. \nThis gives a consistent result. \nI cannot see a way to feature detect this without sniffing or appending to DOM.\n",
        "created_at": "2014-07-02T06:39:04Z",
        "updated_at": "2014-07-02T06:39:04Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14442582",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14442582"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14442582"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14452449",
        "pull_request_review_id": null,
        "id": 14452449,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDUyNDQ5",
        "diff_hunk": "@@ -27,6 +27,24 @@ element.appendChild(child);\n var brokenOffsetParent = (child.offsetParent === element);\n element = child = null;\n \n+var hasLimitedGetClientBoudingRect = !document.body.getBoundingClientRect().width;\n+var heightComponents = ['height', 'paddingTop', 'paddingBottom', 'borderTopWidth', 'borderBottomWidth'],\n+\twidthComponents = ['width', 'paddingLeft', 'paddingRight', 'borderLeftWidth', 'borderRightWidth'];\n+\n+var svgCalculateSize = function(el){\n+\n+\tvar gCS = window.getComputedStyle(el),\n+\t\tbounds = {x: 0, y: 0};\n+\n+\theightComponents.each(function(css){\n+\t\tbounds.y += parseFloat(gCS[css]);\n+\t});\n+\twidthComponents.each(function(css){\n+\t\tbounds.x += parseFloat(gCS[css]);\n+\t});\n+\treturn bounds;",
        "path": "Source/Element/Element.Dimensions.js",
        "position": 19,
        "original_position": 19,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Too bad we don't have `Array.reduce` in Core:\n\n``` js\nfunction sumProperty(val, css){\n    return val + parseFloat(gCS[css]);\n}\nreturn {\n    x: widthComponents.reduce(sumProperty, 0),\n    y: heightComponents.reduce(sumProperty, 0)\n};\n```\n",
        "created_at": "2014-07-02T11:51:42Z",
        "updated_at": "2014-07-02T11:51:54Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14452449",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14452449"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14452449"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14455394",
        "pull_request_review_id": null,
        "id": 14455394,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDU1Mzk0",
        "diff_hunk": "@@ -27,6 +27,24 @@ element.appendChild(child);\n var brokenOffsetParent = (child.offsetParent === element);\n element = child = null;\n \n+var hasLimitedGetClientBoudingRect = !document.body.getBoundingClientRect().width;\n+var heightComponents = ['height', 'paddingTop', 'paddingBottom', 'borderTopWidth', 'borderBottomWidth'],\n+\twidthComponents = ['width', 'paddingLeft', 'paddingRight', 'borderLeftWidth', 'borderRightWidth'];\n+\n+var svgCalculateSize = function(el){\n+\n+\tvar gCS = window.getComputedStyle(el),\n+\t\tbounds = {x: 0, y: 0};\n+\n+\theightComponents.each(function(css){\n+\t\tbounds.y += parseFloat(gCS[css]);\n+\t});\n+\twidthComponents.each(function(css){\n+\t\tbounds.x += parseFloat(gCS[css]);\n+\t});\n+\treturn bounds;",
        "path": "Source/Element/Element.Dimensions.js",
        "position": 19,
        "original_position": 19,
        "commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "original_commit_id": "81bd28925c640df5ff6b99e46c75c22fef8a5354",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We could add it, but I never liked the reduce interface. ;) 1.6? \n",
        "created_at": "2014-07-02T13:09:24Z",
        "updated_at": "2014-07-02T13:09:24Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14455394",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2602",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14455394"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2602#discussion_r14455394"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2602"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387656",
        "pull_request_review_id": null,
        "id": 14387656,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzg3NjU2",
        "diff_hunk": "@@ -218,6 +218,7 @@ Document.implement({\n \n \tnewElement: function(tag, props){\n \t\tif (props && props.checked != null) props.defaultChecked = props.checked;\n+\t\tif (tag == 'input' && (props.type == 'checkbox' || props.type == 'radio') && !props.hasOwnProperty('value')) props.value = 'on';",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 4,
        "commit_id": "bcf7c903aec4a27134690974c16724100633f625",
        "original_commit_id": "f054e2b5fb112743fd3487ee048a397773920078",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Would any point the tag not be input (for the case of type is checkbox or type). You also prob. shouldn't care if props.value is own property. I'd defer for someone to correct me, though. \n\nSimplifying to:\n\n``` js\nif ((props.type == 'checkbox' || props.type == 'radio') && !props.value) props.value = 'on';\n```\n",
        "created_at": "2014-07-01T03:45:56Z",
        "updated_at": "2014-07-02T21:39:48Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14387656",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2584",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14387656"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14387656"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2584"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14443072",
        "pull_request_review_id": null,
        "id": 14443072,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDQzMDcy",
        "diff_hunk": "@@ -218,6 +218,7 @@ Document.implement({\n \n \tnewElement: function(tag, props){\n \t\tif (props && props.checked != null) props.defaultChecked = props.checked;\n+\t\tif (tag == 'input' && (props.type == 'checkbox' || props.type == 'radio') && !props.hasOwnProperty('value')) props.value = 'on';",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 4,
        "commit_id": "bcf7c903aec4a27134690974c16724100633f625",
        "original_commit_id": "f054e2b5fb112743fd3487ee048a397773920078",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good point @ibolmo . That is more correct to what the W3 specs say:\n\n> If the field element has a value attribute specified, then let value be the value of that attribute; otherwise, let value be the string \"on\"\n\nWill update with \n\n```\n... props.value == null) props.value = 'on';\n```\n\nto not override cases where value is falsy but has been defined.\n",
        "created_at": "2014-07-02T07:01:35Z",
        "updated_at": "2014-07-02T21:39:48Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14443072",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2584",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14443072"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14443072"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2584"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14443989",
        "pull_request_review_id": null,
        "id": 14443989,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDQzOTg5",
        "diff_hunk": "@@ -218,6 +218,7 @@ Document.implement({\n \n \tnewElement: function(tag, props){\n \t\tif (props && props.checked != null) props.defaultChecked = props.checked;\n+\t\tif (tag == 'input' && (props.type == 'checkbox' || props.type == 'radio') && !props.hasOwnProperty('value')) props.value = 'on';",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 4,
        "commit_id": "bcf7c903aec4a27134690974c16724100633f625",
        "original_commit_id": "f054e2b5fb112743fd3487ee048a397773920078",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo  had to do `if (props && (props.type == 'checkbox' ...` anyway, for cases of new elements with no props. \nUpdated and re-tested the pull request.\n",
        "created_at": "2014-07-02T07:41:49Z",
        "updated_at": "2014-07-02T21:39:48Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14443989",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2584",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14443989"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14443989"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2584"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14455250",
        "pull_request_review_id": null,
        "id": 14455250,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDU1MjUw",
        "diff_hunk": "@@ -218,6 +218,7 @@ Document.implement({\n \n \tnewElement: function(tag, props){\n \t\tif (props && props.checked != null) props.defaultChecked = props.checked;\n+\t\tif (props && (props.type == 'checkbox' || props.type == 'radio') && props.value == null) props.value = 'on'; ",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 4,
        "commit_id": "bcf7c903aec4a27134690974c16724100633f625",
        "original_commit_id": "c2e745a10db389c21a19895ea2379b07a36cd99b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Join the previous line and you'll get:\n\n``` js\nif (props) {\n  if (props.checked != null) props.defaultChecked = props.checked;\n  if ((props.type == 'checkbox' || props.type == 'radio') && props.value == null) props.value = 'on';\n}\n```\n",
        "created_at": "2014-07-02T13:05:59Z",
        "updated_at": "2014-07-02T21:39:48Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14455250",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2584",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14455250"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14455250"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2584"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14455282",
        "pull_request_review_id": null,
        "id": 14455282,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDU1Mjgy",
        "diff_hunk": "@@ -218,6 +218,7 @@ Document.implement({\n \n \tnewElement: function(tag, props){\n \t\tif (props && props.checked != null) props.defaultChecked = props.checked;\n+\t\tif (props && (props.type == 'checkbox' || props.type == 'radio') && props.value == null) props.value = 'on'; ",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 4,
        "commit_id": "bcf7c903aec4a27134690974c16724100633f625",
        "original_commit_id": "c2e745a10db389c21a19895ea2379b07a36cd99b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually you can do similar with the next line too.\n",
        "created_at": "2014-07-02T13:06:36Z",
        "updated_at": "2014-07-02T21:39:48Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14455282",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2584",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14455282"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14455282"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2584"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14486435",
        "pull_request_review_id": null,
        "id": 14486435,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDg2NDM1",
        "diff_hunk": "@@ -218,6 +218,7 @@ Document.implement({\n \n \tnewElement: function(tag, props){\n \t\tif (props && props.checked != null) props.defaultChecked = props.checked;\n+\t\tif (props && (props.type == 'checkbox' || props.type == 'radio') && props.value == null) props.value = 'on'; ",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 4,
        "commit_id": "bcf7c903aec4a27134690974c16724100633f625",
        "original_commit_id": "c2e745a10db389c21a19895ea2379b07a36cd99b",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo good point!\nI re-tested and updated the PR. I will wait until this one is merged to continue on the other PR. I will need to Rebase since this changes lines I am also working on there.\n",
        "created_at": "2014-07-02T21:56:22Z",
        "updated_at": "2014-07-02T21:56:22Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14486435",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2584",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14486435"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2584#discussion_r14486435"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2584"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14452500",
        "pull_request_review_id": null,
        "id": 14452500,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDUyNTAw",
        "diff_hunk": "@@ -214,10 +214,33 @@ var escapeQuotes = function(html){\n };\n /*</ltIE8>*/\n \n+/*<ltIE9>*/\n+// #2479 - IE8 Cannot set HTML of style element\n+var canChangeStyleHtml = (function(){\n+    var div = document.createElement('style'),\n+        flag = false;\n+    try {\n+        div.innerHTML = '#justTesing{margin: 0px;}';\n+        flag = !!div.innerHTML;\n+    } catch(e){}\n+    return flag;\n+})();\n+/*</ltIE9>*/\n+\n Document.implement({\n \n \tnewElement: function(tag, props){\n \t\tif (props && props.checked != null) props.defaultChecked = props.checked;\n+\n+\t\t/*<ltIE9>*/ // IE needs the type to be set before changing content of style element\n+\t\tif (!canChangeStyleHtml && ~tag.indexOf('style')){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 23,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "7bcda90aba5ab4de073ee22c57296a07ade6e96a",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not `tag == 'style'`?\n",
        "created_at": "2014-07-02T11:53:54Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14452500",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14452500"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14452500"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14452516",
        "pull_request_review_id": null,
        "id": 14452516,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDUyNTE2",
        "diff_hunk": "@@ -214,10 +214,33 @@ var escapeQuotes = function(html){\n };\n /*</ltIE8>*/\n \n+/*<ltIE9>*/\n+// #2479 - IE8 Cannot set HTML of style element\n+var canChangeStyleHtml = (function(){\n+    var div = document.createElement('style'),\n+        flag = false;\n+    try {\n+        div.innerHTML = '#justTesing{margin: 0px;}';\n+        flag = !!div.innerHTML;\n+    } catch(e){}\n+    return flag;\n+})();\n+/*</ltIE9>*/\n+\n Document.implement({\n \n \tnewElement: function(tag, props){\n \t\tif (props && props.checked != null) props.defaultChecked = props.checked;\n+\n+\t\t/*<ltIE9>*/ // IE needs the type to be set before changing content of style element\n+\t\tif (!canChangeStyleHtml && ~tag.indexOf('style')){\n+\t\t\tvar styleElement = document.createElement('style');\n+\t\t\tstyleElement.setAttribute(\"type\", \"text/css\");",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 25,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "7bcda90aba5ab4de073ee22c57296a07ade6e96a",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use single quotes.\n",
        "created_at": "2014-07-02T11:54:25Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14452516",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14452516"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14452516"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14452579",
        "pull_request_review_id": null,
        "id": 14452579,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDUyNTc5",
        "diff_hunk": "@@ -631,6 +654,33 @@ if (volatileInputValue || !html5InputSupport) propertySetters.type = function(no\n };\n /*</IE>*/\n \n+/* <ltIE9> */\n+// oldIE can't set the CSS text to a <style> element: #2265\n+var canSetStyleText = (function(){\n+\tvar style = document.createElement('style');\n+\tstyle.type = 'text/css';\n+\ttry {\n+\t\tpropertySetters.text(style, 'a{left:0}');\n+\t\treturn propertyGetters.text(style).indexOf('left') != -1;",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 45,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "7bcda90aba5ab4de073ee22c57296a07ade6e96a",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "When using `top` we can save 2 times 1 character :smile: \n",
        "created_at": "2014-07-02T11:56:30Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14452579",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14452579"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14452579"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14454126",
        "pull_request_review_id": null,
        "id": 14454126,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDU0MTI2",
        "diff_hunk": "@@ -631,6 +654,33 @@ if (volatileInputValue || !html5InputSupport) propertySetters.type = function(no\n };\n /*</IE>*/\n \n+/* <ltIE9> */\n+// oldIE can't set the CSS text to a <style> element: #2265\n+var canSetStyleText = (function(){\n+\tvar style = document.createElement('style');\n+\tstyle.type = 'text/css';\n+\ttry {\n+\t\tpropertySetters.text(style, 'a{left:0}');\n+\t\treturn propertyGetters.text(style).indexOf('left') != -1;",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 45,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "7bcda90aba5ab4de073ee22c57296a07ade6e96a",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@arian  your eyes are shaper today than when you wrote that line yourself :smile:\n\nThank you for feedback! Updated the PR with the fixes you suggested.\n",
        "created_at": "2014-07-02T12:37:48Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14454126",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14454126"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14454126"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14455509",
        "pull_request_review_id": null,
        "id": 14455509,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDU1NTA5",
        "diff_hunk": "@@ -214,10 +214,33 @@ var escapeQuotes = function(html){\n };\n /*</ltIE8>*/\n \n+/*<ltIE9>*/\n+// #2479 - IE8 Cannot set HTML of style element\n+var canChangeStyleHtml = (function(){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 6,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "f9faf3ee2482c6b84c6051e2464d33924f58a1e8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "canChangeStyleHtml => canChangeStyleHTML\n",
        "created_at": "2014-07-02T13:11:57Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14455509",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14455509"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14455509"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14455730",
        "pull_request_review_id": null,
        "id": 14455730,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDU1NzMw",
        "diff_hunk": "@@ -631,6 +654,33 @@ if (volatileInputValue || !html5InputSupport) propertySetters.type = function(no\n };\n /*</IE>*/\n \n+/* <ltIE9> */\n+// oldIE can't set the CSS text to a <style> element: #2265\n+var canSetStyleText = (function(){\n+\tvar style = document.createElement('style');\n+\tstyle.type = 'text/css';\n+\ttry {\n+\t\tpropertySetters.text(style, 'a{top:0}');\n+\t\treturn propertyGetters.text(style).indexOf('top') != -1;\n+\t} catch(e){}\n+\tstyle = null;\n+\treturn false;\n+})();\n+\n+if (!canSetStyleText) (function(set, get){\n+\tpropertySetters.text = function(node, value){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 52,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "f9faf3ee2482c6b84c6051e2464d33924f58a1e8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What's the difference between setting the `'text'` and setting the '`html'` if they're both the same (ultimate outcome) couldn't we just piggy back on the prefix fix for `styleEl.set('html')`\n",
        "created_at": "2014-07-02T13:16:32Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14455730",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14455730"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14455730"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14502237",
        "pull_request_review_id": null,
        "id": 14502237,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTAyMjM3",
        "diff_hunk": "@@ -631,6 +654,33 @@ if (volatileInputValue || !html5InputSupport) propertySetters.type = function(no\n };\n /*</IE>*/\n \n+/* <ltIE9> */\n+// oldIE can't set the CSS text to a <style> element: #2265\n+var canSetStyleText = (function(){\n+\tvar style = document.createElement('style');\n+\tstyle.type = 'text/css';\n+\ttry {\n+\t\tpropertySetters.text(style, 'a{top:0}');\n+\t\treturn propertyGetters.text(style).indexOf('top') != -1;\n+\t} catch(e){}\n+\tstyle = null;\n+\treturn false;\n+})();\n+\n+if (!canSetStyleText) (function(set, get){\n+\tpropertySetters.text = function(node, value){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 52,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "f9faf3ee2482c6b84c6051e2464d33924f58a1e8",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo good point. Commented this with @arian also and changed the [html setter for style](https://github.com/SergioCrisostomo/mootools-core/blob/fix-2265-ieStyleText/Source/Element/Element.js#L1069), to point here, since we would need less code that way. \n\nUpdated, re-tested and rebased.\n",
        "created_at": "2014-07-03T08:28:22Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14502237",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14502237"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14502237"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14512980",
        "pull_request_review_id": null,
        "id": 14512980,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTEyOTgw",
        "diff_hunk": "@@ -631,6 +654,33 @@ if (volatileInputValue || !html5InputSupport) propertySetters.type = function(no\n };\n /*</IE>*/\n \n+/* <ltIE9> */\n+// oldIE can't set the CSS text to a <style> element: #2265\n+var canSetStyleText = (function(){\n+\tvar style = document.createElement('style');\n+\tstyle.type = 'text/css';\n+\ttry {\n+\t\tpropertySetters.text(style, 'a{top:0}');\n+\t\treturn propertyGetters.text(style).indexOf('top') != -1;\n+\t} catch(e){}\n+\tstyle = null;\n+\treturn false;\n+})();\n+\n+if (!canSetStyleText) (function(set, get){\n+\tpropertySetters.text = function(node, value){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 52,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "f9faf3ee2482c6b84c6051e2464d33924f58a1e8",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We'll my comment was to simplify this diff if HTML is already working.  Not the reverse. \n",
        "created_at": "2014-07-03T13:27:15Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14512980",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14512980"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14512980"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14535277",
        "pull_request_review_id": null,
        "id": 14535277,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTM1Mjc3",
        "diff_hunk": "@@ -214,12 +214,33 @@ var escapeQuotes = function(html){\n };\n /*</ltIE8>*/\n \n+/*<ltIE9>*/\n+// #2479 - IE8 Cannot set HTML of style element\n+var canChangeStyleHTML = (function(){\n+    var div = document.createElement('style'),\n+        flag = false;\n+    try {\n+        div.innerHTML = '#justTesing{margin: 0px;}';\n+        flag = !!div.innerHTML;\n+    } catch(e){}\n+    return flag;\n+})();\n+/*</ltIE9>*/\n+\n Document.implement({\n \n \tnewElement: function(tag, props){\n \t\tif (props){\n \t\t\tif (props.checked != null) props.defaultChecked = props.checked;\n \t\t\tif ((props.type == 'checkbox' || props.type == 'radio') && props.value == null) props.value = 'on'; \n+\t\t\t/*<ltIE9>*/ // IE needs the type to be set before changing content of style element\n+\t\t\tif (!canChangeStyleHTML && tag == 'style'){\n+\t\t\t\tvar styleElement = document.createElement('style');\n+\t\t\t\tstyleElement.setAttribute('type', 'text/css');\n+\t\t\t\tprops.type && delete props.type;",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 27,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "866d91490344b146803d54e5fa10dfabd8373930",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nit picking, but \n\n``` js\nif (props.type) delete props.type; \n```\n",
        "created_at": "2014-07-03T20:08:21Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14535277",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14535277"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14535277"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14535344",
        "pull_request_review_id": null,
        "id": 14535344,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTM1MzQ0",
        "diff_hunk": "@@ -531,9 +552,12 @@ properties.text = (document.createElement('div').textContent == null) ? 'innerTe\n \n Object.forEach(properties, function(real, key){\n \tpropertySetters[key] = function(node, value){\n-\t\tnode[real] = value;\n+\t\t/*<ltIE9>*/\n+\t\tif (node.get('tag') == 'style' && node.styleSheet) node.set('html', value);",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 40,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "866d91490344b146803d54e5fa10dfabd8373930",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Any case where `node.get('tag') == 'style'` would not have `node.styleSheet`? \n",
        "created_at": "2014-07-03T20:09:19Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14535344",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14535344"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14535344"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14535593",
        "pull_request_review_id": null,
        "id": 14535593,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTM1NTkz",
        "diff_hunk": "@@ -531,9 +552,12 @@ properties.text = (document.createElement('div').textContent == null) ? 'innerTe\n \n Object.forEach(properties, function(real, key){\n \tpropertySetters[key] = function(node, value){\n-\t\tnode[real] = value;\n+\t\t/*<ltIE9>*/\n+\t\tif (node.get('tag') == 'style' && node.styleSheet) node.set('html', value);",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 40,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "866d91490344b146803d54e5fa10dfabd8373930",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually this is odd. Why iterate through all the properties. \n\nThis would only be applicable to text.\n\n``` js\npropertySetters.text = (function(setter){\n  return function(node, value){\n    if (node.get('tag') == 'style') node.set('html', value);\n    else  setter(node, value);\n  };\n})(propertySetters.text);\n```\n",
        "created_at": "2014-07-03T20:14:50Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14535593",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14535593"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14535593"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14535684",
        "pull_request_review_id": null,
        "id": 14535684,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTM1Njg0",
        "diff_hunk": "@@ -531,9 +552,12 @@ properties.text = (document.createElement('div').textContent == null) ? 'innerTe\n \n Object.forEach(properties, function(real, key){\n \tpropertySetters[key] = function(node, value){\n-\t\tnode[real] = value;\n+\t\t/*<ltIE9>*/\n+\t\tif (node.get('tag') == 'style' && node.styleSheet) node.set('html', value);\n+\t\telse /*</ltIE9>*/node[real] = value;\t\t\n \t};\n \tpropertyGetters[key] = function(node){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 43,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "866d91490344b146803d54e5fa10dfabd8373930",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I wonder if the bug is also with getters, or just with setters. If it's with getters too, then I would do:\n\n``` js\npropertyGetters.text = (function(getter){\n  return function(node){\n    return  (node.get('tag') == 'style') ? node.innerHTML : getter(node);\n  };\n})(propertyGetters.text);\n```\n",
        "created_at": "2014-07-03T20:16:49Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14535684",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14535684"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14535684"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14535709",
        "pull_request_review_id": null,
        "id": 14535709,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTM1NzA5",
        "diff_hunk": "@@ -531,9 +552,12 @@ properties.text = (document.createElement('div').textContent == null) ? 'innerTe\n \n Object.forEach(properties, function(real, key){\n \tpropertySetters[key] = function(node, value){\n-\t\tnode[real] = value;\n+\t\t/*<ltIE9>*/\n+\t\tif (node.get('tag') == 'style' && node.styleSheet) node.set('html', value);",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 40,
        "commit_id": "dbabf06d7d5f08662a11cbe77b26222a61fb089d",
        "original_commit_id": "866d91490344b146803d54e5fa10dfabd8373930",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo true, that would be more clean.\n",
        "created_at": "2014-07-03T20:17:25Z",
        "updated_at": "2014-07-03T20:39:11Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14535709",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14535709"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2622#discussion_r14535709"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14563520",
        "pull_request_review_id": null,
        "id": 14563520,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTYzNTIw",
        "diff_hunk": "@@ -52,9 +52,8 @@ var DOMEvent = this.DOMEvent = new Type('DOMEvent', function(event, win){\n \t\t\tx: (event.pageX != null) ? event.pageX - win.pageXOffset : event.clientX,\n \t\t\ty: (event.pageY != null) ? event.pageY - win.pageYOffset : event.clientY\n \t\t};\n-\t\tif (type == 'DOMMouseScroll' || type == 'mousewheel')\n+\t\tif (type == 'DOMMouseScroll' || type == 'wheel' || type == 'mousewheel')\n \t\t\tthis.wheel = (event.wheelDelta) ? event.wheelDelta / 120 : -(event.detail || 0) / 3;",
        "path": "Source/Types/DOMEvent.js",
        "position": 15,
        "original_position": 15,
        "commit_id": "0e18532a27f0952ee1c892e63f9864b7dd3b80b1",
        "original_commit_id": "0e18532a27f0952ee1c892e63f9864b7dd3b80b1",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If Firefox is using `wheel` event, then `e.wheelDelta` is `undefined` and `event.detail` is `0` on both wheel directions. That is why I suggested (https://github.com/mootools/mootools-core/commit/1cd56d7e3fc4df43449b194c3ae8eb02b23d514d) the `e.deltaY` so the legacy `wheel` would have a value. \n\nI made a table with [related info here](https://docs.google.com/spreadsheets/d/1Gf41PhtPXZuwPGjh8Sc52s1JBd7VFPhpXtbbxLuLbjw/edit#gid=0). Otherwise I would be ok to have separate PR's for each also.\n",
        "created_at": "2014-07-04T15:37:34Z",
        "updated_at": "2014-07-04T15:38:39Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2599#discussion_r14563520",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2599",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14563520"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2599#discussion_r14563520"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2599"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14498234",
        "pull_request_review_id": null,
        "id": 14498234,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDk4MjM0",
        "diff_hunk": "@@ -161,8 +161,10 @@ if (document.execCommand) try {\n /*<ltIE9>*/\n if (this.attachEvent && !this.addEventListener){\n \tvar unloadEvent = function(){\n-\t\tthis.detachEvent('onunload', unloadEvent);\n-\t\tdocument.head = document.html = document.window = null;\n+\t  this.detachEvent('onunload', unloadEvent);\n+\t  document.head = document.html = document.window = null;\n+\t  // cleanup scope vars",
        "path": "Source/Browser/Browser.js",
        "position": null,
        "original_position": 8,
        "commit_id": "46788ee03f2b6462e491f963a3e4bc60c9f16f2a",
        "original_commit_id": "a0cd7efe42804532edc62974468d8364891ad52b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you can drop the comment, and could you use real tabs instead of spaces\n",
        "created_at": "2014-07-03T06:09:12Z",
        "updated_at": "2014-07-07T08:47:20Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2476#discussion_r14498234",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2476",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14498234"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2476#discussion_r14498234"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2476"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14498295",
        "pull_request_review_id": null,
        "id": 14498295,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDk4Mjk1",
        "diff_hunk": "@@ -24,13 +24,15 @@ var ready,\n \ttestElement = document.createElement('div');\n \n var domready = function(){\n-\tclearTimeout(timer);\n-\tif (ready) return;\n-\tBrowser.loaded = ready = true;\n-\tdocument.removeListener('DOMContentLoaded', domready).removeListener('readystatechange', check);\n-\n-\tdocument.fireEvent('domready');\n-\twindow.fireEvent('domready');\n+  clearTimeout(timer);\n+  if (!ready) {\n+    Browser.loaded = ready = true;\n+    document.removeListener('DOMContentLoaded', domready).removeListener('readystatechange', check);\n+    document.fireEvent('domready');\n+    window.fireEvent('domready');\n+  }\n+  // cleanup scope vars\n+  document = window = testElement = null;",
        "path": "Source/Utilities/DOMReady.js",
        "position": null,
        "original_position": 19,
        "commit_id": "46788ee03f2b6462e491f963a3e4bc60c9f16f2a",
        "original_commit_id": "a0cd7efe42804532edc62974468d8364891ad52b",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why need to reset here?\n",
        "created_at": "2014-07-03T06:12:33Z",
        "updated_at": "2014-07-07T08:47:20Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2476#discussion_r14498295",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2476",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14498295"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2476#discussion_r14498295"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2476"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14499866",
        "pull_request_review_id": null,
        "id": 14499866,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDk5ODY2",
        "diff_hunk": "@@ -24,13 +24,15 @@ var ready,\n \ttestElement = document.createElement('div');\n \n var domready = function(){\n-\tclearTimeout(timer);\n-\tif (ready) return;\n-\tBrowser.loaded = ready = true;\n-\tdocument.removeListener('DOMContentLoaded', domready).removeListener('readystatechange', check);\n-\n-\tdocument.fireEvent('domready');\n-\twindow.fireEvent('domready');\n+  clearTimeout(timer);\n+  if (!ready) {\n+    Browser.loaded = ready = true;\n+    document.removeListener('DOMContentLoaded', domready).removeListener('readystatechange', check);\n+    document.fireEvent('domready');\n+    window.fireEvent('domready');\n+  }\n+  // cleanup scope vars\n+  document = window = testElement = null;",
        "path": "Source/Utilities/DOMReady.js",
        "position": null,
        "original_position": 19,
        "commit_id": "46788ee03f2b6462e491f963a3e4bc60c9f16f2a",
        "original_commit_id": "a0cd7efe42804532edc62974468d8364891ad52b",
        "user": {
            "login": "kguelzau",
            "id": 1053246,
            "node_id": "MDQ6VXNlcjEwNTMyNDY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1053246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kguelzau",
            "html_url": "https://github.com/kguelzau",
            "followers_url": "https://api.github.com/users/kguelzau/followers",
            "following_url": "https://api.github.com/users/kguelzau/following{/other_user}",
            "gists_url": "https://api.github.com/users/kguelzau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kguelzau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kguelzau/subscriptions",
            "organizations_url": "https://api.github.com/users/kguelzau/orgs",
            "repos_url": "https://api.github.com/users/kguelzau/repos",
            "events_url": "https://api.github.com/users/kguelzau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kguelzau/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This was a trial and error fix for https://github.com/mootools/mootools-core/issues/2329#issuecomment-14787114.\nMemory is freed up while navigating away from index.html anyway, but for a one page webapp this is an issue.\nWe are using this patch for over 2 years now. Seems to work ;-)\n",
        "created_at": "2014-07-03T07:22:11Z",
        "updated_at": "2014-07-07T08:47:20Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2476#discussion_r14499866",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2476",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14499866"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2476#discussion_r14499866"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2476"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968792",
        "pull_request_review_id": null,
        "id": 14968792,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY4Nzky",
        "diff_hunk": "@@ -17,6 +17,16 @@ provides: Event\n (function(){\n \n var _keys = {};\n+var normalizeWheelSpeed = function(evt){\n+    var normalized;\n+    if (evt.wheelDelta){\n+        normalized = (evt.wheelDelta % 120 - 0) == -0 ? evt.wheelDelta / 120 : evt.wheelDelta / 12;\n+    } else {\n+        var rawAmount = evt.deltaY ? evt.deltaY : evt.detail;\n+        normalized = -(rawAmount % 3 ? rawAmount * 10 : rawAmount / 3);\n+    }\n+    return normalized;",
        "path": "Source/Types/DOMEvent.js",
        "position": null,
        "original_position": 12,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not just:\n\n``` js\nreturn event.wheelDelta ? event.wheelData / 120 : -(event.deltaY || event.detail || 0) / 3\n```\n\nI don't really understand the `(x % 120 - 0) == -0` or the `rawAmount % 3`.\n",
        "created_at": "2014-07-15T22:52:36Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968792",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968792"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968792"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968812",
        "pull_request_review_id": null,
        "id": 14968812,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY4ODEy",
        "diff_hunk": "@@ -376,4 +376,98 @@ describe('Element.removeEvent', function(){\n \n });\n \n+describe('Mouse wheel', function(){\n+\n+\tfunction attachProperties(e, direction){\n+\t\te.detail = 1 * direction;\n+\t\te.wheelDelta = 1 * direction;\n+\t\te.deltaY = -1 * direction;\n+\t}\n+\n+\tfunction createFakeWheel(event, wheelDirection){\n+\n+\t\tvar evt;\n+\t\ttry{",
        "path": "Specs/Element/Element.Event.js",
        "position": null,
        "original_position": 15,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`try {`\n",
        "created_at": "2014-07-15T22:53:07Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968812",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968812"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968812"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968825",
        "pull_request_review_id": null,
        "id": 14968825,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY4ODI1",
        "diff_hunk": "@@ -376,4 +376,98 @@ describe('Element.removeEvent', function(){\n \n });\n \n+describe('Mouse wheel', function(){\n+\n+\tfunction attachProperties(e, direction){\n+\t\te.detail = 1 * direction;\n+\t\te.wheelDelta = 1 * direction;\n+\t\te.deltaY = -1 * direction;\n+\t}\n+\n+\tfunction createFakeWheel(event, wheelDirection){\n+\n+\t\tvar evt;\n+\t\ttry{\n+\t\t\t// Firefox\n+\t\t\tevt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initMouseEvent(event, true, true, window, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore){}",
        "path": "Specs/Element/Element.Event.js",
        "position": null,
        "original_position": 21,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`} catch(){}`\n",
        "created_at": "2014-07-15T22:53:21Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968825",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968825"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968825"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968838",
        "pull_request_review_id": null,
        "id": 14968838,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY4ODM4",
        "diff_hunk": "@@ -17,6 +17,16 @@ provides: Event\n (function(){\n \n var _keys = {};\n+var normalizeWheelSpeed = function(evt){\n+    var normalized;\n+    if (evt.wheelDelta){\n+        normalized = (evt.wheelDelta % 120 - 0) == -0 ? evt.wheelDelta / 120 : evt.wheelDelta / 12;\n+    } else {\n+        var rawAmount = evt.deltaY ? evt.deltaY : evt.detail;\n+        normalized = -(rawAmount % 3 ? rawAmount * 10 : rawAmount / 3);\n+    }\n+    return normalized;",
        "path": "Source/Types/DOMEvent.js",
        "position": null,
        "original_position": 12,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `event` instead of `evt`\n",
        "created_at": "2014-07-15T22:53:41Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968838",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968838"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968838"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968883",
        "pull_request_review_id": null,
        "id": 14968883,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY4ODgz",
        "diff_hunk": "@@ -376,4 +376,98 @@ describe('Element.removeEvent', function(){\n \n });\n \n+describe('Mouse wheel', function(){\n+\n+\tfunction attachProperties(e, direction){\n+\t\te.detail = 1 * direction;\n+\t\te.wheelDelta = 1 * direction;\n+\t\te.deltaY = -1 * direction;\n+\t}\n+\n+\tfunction createFakeWheel(event, wheelDirection){\n+\n+\t\tvar evt;",
        "path": "Specs/Element/Element.Event.js",
        "position": null,
        "original_position": 14,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `event` and instead of `event` use type or something.\n",
        "created_at": "2014-07-15T22:54:22Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968883",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968883"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968883"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968943",
        "pull_request_review_id": null,
        "id": 14968943,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY4OTQz",
        "diff_hunk": "@@ -376,4 +376,98 @@ describe('Element.removeEvent', function(){\n \n });\n \n+describe('Mouse wheel', function(){\n+\n+\tfunction attachProperties(e, direction){\n+\t\te.detail = 1 * direction;\n+\t\te.wheelDelta = 1 * direction;\n+\t\te.deltaY = -1 * direction;\n+\t}\n+\n+\tfunction createFakeWheel(event, wheelDirection){\n+\n+\t\tvar evt;\n+\t\ttry{\n+\t\t\t// Firefox\n+\t\t\tevt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initMouseEvent(event, true, true, window, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore){}\n+\n+\t\ttry{\n+\t\t\t// Chrome, PhantomJS, Safari\n+\t\t\tevt = document.createEvent(\"WheelEvent\");\n+\t\t\tevt.initMouseEvent(event, 0, 100, window, 0, 0, 0, 0, null, null, null, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore2){}\n+\n+\t\ttry{\n+\t\t\t// IE9\n+\t\t\tevt = document.createEvent(\"HTMLEvents\");\n+\t\t\tevt.initEvent(event, true, false);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore3){}\n+\n+\t\ttry{\n+\t\t\t// IE10+, Safari\n+\t\t\tvar evt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initEvent(event, true, true);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore4){}\n+\n+\t\ttry{\n+\t\t\t// IE8\n+\t\t\tvar evt = document.createEventObject();\n+\t\t\tdocument.documentElement.fireEvent(event, evt);\n+\t\t}catch(ignore5){}",
        "path": "Specs/Element/Element.Event.js",
        "position": null,
        "original_position": 51,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe you can use `Function.attempt` for this:\n\n``` js\nvar event = Function.attempt(function(){\n    var event = // ...\n    return event;\n}, function(){\n    var event = // ...\n    return event;\n}, ...);\n```\n",
        "created_at": "2014-07-15T22:56:05Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968943",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968943"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968943"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968973",
        "pull_request_review_id": null,
        "id": 14968973,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY4OTcz",
        "diff_hunk": "@@ -376,4 +376,98 @@ describe('Element.removeEvent', function(){\n \n });\n \n+describe('Mouse wheel', function(){\n+\n+\tfunction attachProperties(e, direction){\n+\t\te.detail = 1 * direction;\n+\t\te.wheelDelta = 1 * direction;\n+\t\te.deltaY = -1 * direction;\n+\t}\n+\n+\tfunction createFakeWheel(event, wheelDirection){\n+\n+\t\tvar evt;\n+\t\ttry{\n+\t\t\t// Firefox\n+\t\t\tevt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initMouseEvent(event, true, true, window, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore){}\n+\n+\t\ttry{\n+\t\t\t// Chrome, PhantomJS, Safari\n+\t\t\tevt = document.createEvent(\"WheelEvent\");\n+\t\t\tevt.initMouseEvent(event, 0, 100, window, 0, 0, 0, 0, null, null, null, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore2){}\n+\n+\t\ttry{\n+\t\t\t// IE9\n+\t\t\tevt = document.createEvent(\"HTMLEvents\");\n+\t\t\tevt.initEvent(event, true, false);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore3){}\n+\n+\t\ttry{\n+\t\t\t// IE10+, Safari\n+\t\t\tvar evt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initEvent(event, true, true);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore4){}\n+\n+\t\ttry{\n+\t\t\t// IE8\n+\t\t\tvar evt = document.createEventObject();\n+\t\t\tdocument.documentElement.fireEvent(event, evt);\n+\t\t}catch(ignore5){}\n+\t}\n+\n+\tvar triggered = false,\n+\t\twheel = false, \n+\t\ttestWheel = !!window.addEventListener,\n+\t\tcallback = function(e){\n+\t\t\tif (e.wheel) wheel = e.wheel > 0 ? 'wheel moved up' : 'wheel moved down';\n+\t\t\ttriggered = 'triggered';\n+\t\t}",
        "path": "Specs/Element/Element.Event.js",
        "position": null,
        "original_position": 60,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just use multiple `var`s, looks less awkward with the callback.\nAlso you forgot the `;`\n",
        "created_at": "2014-07-15T22:56:45Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968973",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14968973"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14968973"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14969020",
        "pull_request_review_id": null,
        "id": 14969020,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY5MDIw",
        "diff_hunk": "@@ -376,4 +376,98 @@ describe('Element.removeEvent', function(){\n \n });\n \n+describe('Mouse wheel', function(){\n+\n+\tfunction attachProperties(e, direction){\n+\t\te.detail = 1 * direction;\n+\t\te.wheelDelta = 1 * direction;\n+\t\te.deltaY = -1 * direction;\n+\t}\n+\n+\tfunction createFakeWheel(event, wheelDirection){\n+\n+\t\tvar evt;\n+\t\ttry{\n+\t\t\t// Firefox\n+\t\t\tevt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initMouseEvent(event, true, true, window, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore){}\n+\n+\t\ttry{\n+\t\t\t// Chrome, PhantomJS, Safari\n+\t\t\tevt = document.createEvent(\"WheelEvent\");\n+\t\t\tevt.initMouseEvent(event, 0, 100, window, 0, 0, 0, 0, null, null, null, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore2){}\n+\n+\t\ttry{\n+\t\t\t// IE9\n+\t\t\tevt = document.createEvent(\"HTMLEvents\");\n+\t\t\tevt.initEvent(event, true, false);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore3){}\n+\n+\t\ttry{\n+\t\t\t// IE10+, Safari\n+\t\t\tvar evt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initEvent(event, true, true);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore4){}\n+\n+\t\ttry{\n+\t\t\t// IE8\n+\t\t\tvar evt = document.createEventObject();\n+\t\t\tdocument.documentElement.fireEvent(event, evt);\n+\t\t}catch(ignore5){}\n+\t}\n+\n+\tvar triggered = false,\n+\t\twheel = false, \n+\t\ttestWheel = !!window.addEventListener,\n+\t\tcallback = function(e){\n+\t\t\tif (e.wheel) wheel = e.wheel > 0 ? 'wheel moved up' : 'wheel moved down';\n+\t\t\ttriggered = 'triggered';\n+\t\t}\n+\n+\tbeforeEach(function(){\n+\t\twheel = triggered = false;\n+\t\twindow.addEvent('mousewheel', callback);\n+\t\tdocument.documentElement.addEvent('mousewheel', callback);\n+\t});\n+\n+\tafterEach(function(){\n+\t\twindow.removeEvent('mousewheel', callback);\n+\t\tdocument.documentElement.removeEvent('mousewheel', callback);\n+\t});\n+\n+\tit('should trigger/listen to mousewheel event', function(){\n+\t\t// http://jsfiddle.net/W6QrS/3\n+\n+\t\tArray.each(['mousewheel', 'wheel' ,'DOMMouseScroll' ], createFakeWheel);",
        "path": "Specs/Element/Element.Event.js",
        "position": null,
        "original_position": 76,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`[...].each(createFakeWheel)`\n\nActually `createFakeWheel` should be `dispatchFakeWheel` or something.\n",
        "created_at": "2014-07-15T22:57:55Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14969020",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14969020"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14969020"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14969075",
        "pull_request_review_id": null,
        "id": 14969075,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY5MDc1",
        "diff_hunk": "@@ -376,4 +376,98 @@ describe('Element.removeEvent', function(){\n \n });\n \n+describe('Mouse wheel', function(){\n+\n+\tfunction attachProperties(e, direction){\n+\t\te.detail = 1 * direction;\n+\t\te.wheelDelta = 1 * direction;\n+\t\te.deltaY = -1 * direction;\n+\t}\n+\n+\tfunction createFakeWheel(event, wheelDirection){\n+\n+\t\tvar evt;\n+\t\ttry{\n+\t\t\t// Firefox\n+\t\t\tevt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initMouseEvent(event, true, true, window, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore){}\n+\n+\t\ttry{\n+\t\t\t// Chrome, PhantomJS, Safari\n+\t\t\tevt = document.createEvent(\"WheelEvent\");\n+\t\t\tevt.initMouseEvent(event, 0, 100, window, 0, 0, 0, 0, null, null, null, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore2){}\n+\n+\t\ttry{\n+\t\t\t// IE9\n+\t\t\tevt = document.createEvent(\"HTMLEvents\");\n+\t\t\tevt.initEvent(event, true, false);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore3){}\n+\n+\t\ttry{\n+\t\t\t// IE10+, Safari\n+\t\t\tvar evt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initEvent(event, true, true);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore4){}\n+\n+\t\ttry{\n+\t\t\t// IE8\n+\t\t\tvar evt = document.createEventObject();\n+\t\t\tdocument.documentElement.fireEvent(event, evt);\n+\t\t}catch(ignore5){}\n+\t}\n+\n+\tvar triggered = false,\n+\t\twheel = false, \n+\t\ttestWheel = !!window.addEventListener,\n+\t\tcallback = function(e){\n+\t\t\tif (e.wheel) wheel = e.wheel > 0 ? 'wheel moved up' : 'wheel moved down';\n+\t\t\ttriggered = 'triggered';\n+\t\t}\n+\n+\tbeforeEach(function(){\n+\t\twheel = triggered = false;\n+\t\twindow.addEvent('mousewheel', callback);\n+\t\tdocument.documentElement.addEvent('mousewheel', callback);\n+\t});\n+\n+\tafterEach(function(){\n+\t\twindow.removeEvent('mousewheel', callback);\n+\t\tdocument.documentElement.removeEvent('mousewheel', callback);\n+\t});\n+\n+\tit('should trigger/listen to mousewheel event', function(){\n+\t\t// http://jsfiddle.net/W6QrS/3\n+\n+\t\tArray.each(['mousewheel', 'wheel' ,'DOMMouseScroll' ], createFakeWheel);\n+\t\texpect(triggered).toBeTruthy();\n+\t});\n+\n+\tit('should listen to mouse wheel direction', function(){\n+\t\t// http://jsfiddle.net/58yCr/\n+\n+\t\t// fire event with wheel going up\n+\t\tArray.each(['mousewheel', 'wheel' ,'DOMMouseScroll' ], function(ev){\n+\t\t\tcreateFakeWheel(ev, 120);\n+\t\t});\n+\t\ttestWheel && expect(wheel).toEqual('wheel moved up');\n+\t\twheel = false;\n+\n+\t\t// fire event with wheel going down\n+\t\tArray.each(['mousewheel', 'wheel' ,'DOMMouseScroll' ], function(ev){\n+\t\t\tcreateFakeWheel(ev, -120);\n+\t\t});\n+\t\ttestWheel && expect(wheel).toEqual('wheel moved down');",
        "path": "Specs/Element/Element.Event.js",
        "position": null,
        "original_position": 94,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nif (testWheel) // ...\n```\n",
        "created_at": "2014-07-15T22:59:11Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14969075",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14969075"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14969075"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14969095",
        "pull_request_review_id": null,
        "id": 14969095,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY5MDk1",
        "diff_hunk": "@@ -376,4 +376,98 @@ describe('Element.removeEvent', function(){\n \n });\n \n+describe('Mouse wheel', function(){\n+\n+\tfunction attachProperties(e, direction){\n+\t\te.detail = 1 * direction;\n+\t\te.wheelDelta = 1 * direction;\n+\t\te.deltaY = -1 * direction;\n+\t}\n+\n+\tfunction createFakeWheel(event, wheelDirection){\n+\n+\t\tvar evt;\n+\t\ttry{\n+\t\t\t// Firefox\n+\t\t\tevt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initMouseEvent(event, true, true, window, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore){}\n+\n+\t\ttry{\n+\t\t\t// Chrome, PhantomJS, Safari\n+\t\t\tevt = document.createEvent(\"WheelEvent\");\n+\t\t\tevt.initMouseEvent(event, 0, 100, window, 0, 0, 0, 0, null, null, null, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore2){}\n+\n+\t\ttry{\n+\t\t\t// IE9\n+\t\t\tevt = document.createEvent(\"HTMLEvents\");\n+\t\t\tevt.initEvent(event, true, false);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore3){}\n+\n+\t\ttry{\n+\t\t\t// IE10+, Safari\n+\t\t\tvar evt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initEvent(event, true, true);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore4){}\n+\n+\t\ttry{\n+\t\t\t// IE8\n+\t\t\tvar evt = document.createEventObject();\n+\t\t\tdocument.documentElement.fireEvent(event, evt);\n+\t\t}catch(ignore5){}\n+\t}\n+\n+\tvar triggered = false,\n+\t\twheel = false, \n+\t\ttestWheel = !!window.addEventListener,\n+\t\tcallback = function(e){\n+\t\t\tif (e.wheel) wheel = e.wheel > 0 ? 'wheel moved up' : 'wheel moved down';\n+\t\t\ttriggered = 'triggered';\n+\t\t}\n+\n+\tbeforeEach(function(){\n+\t\twheel = triggered = false;\n+\t\twindow.addEvent('mousewheel', callback);\n+\t\tdocument.documentElement.addEvent('mousewheel', callback);\n+\t});\n+\n+\tafterEach(function(){\n+\t\twindow.removeEvent('mousewheel', callback);\n+\t\tdocument.documentElement.removeEvent('mousewheel', callback);\n+\t});\n+\n+\tit('should trigger/listen to mousewheel event', function(){\n+\t\t// http://jsfiddle.net/W6QrS/3\n+\n+\t\tArray.each(['mousewheel', 'wheel' ,'DOMMouseScroll' ], createFakeWheel);\n+\t\texpect(triggered).toBeTruthy();\n+\t});\n+\n+\tit('should listen to mouse wheel direction', function(){\n+\t\t// http://jsfiddle.net/58yCr/\n+\n+\t\t// fire event with wheel going up\n+\t\tArray.each(['mousewheel', 'wheel' ,'DOMMouseScroll' ], function(ev){\n+\t\t\tcreateFakeWheel(ev, 120);\n+\t\t});\n+\t\ttestWheel && expect(wheel).toEqual('wheel moved up');\n+\t\twheel = false;\n+\n+\t\t// fire event with wheel going down\n+\t\tArray.each(['mousewheel', 'wheel' ,'DOMMouseScroll' ], function(ev){\n+\t\t\tcreateFakeWheel(ev, -120);\n+\t\t});\n+\t\ttestWheel && expect(wheel).toEqual('wheel moved down');",
        "path": "Specs/Element/Element.Event.js",
        "position": null,
        "original_position": 94,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can't you just return at the top of this function of `testWheel` is false?\n",
        "created_at": "2014-07-15T22:59:48Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14969095",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14969095"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14969095"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14969109",
        "pull_request_review_id": null,
        "id": 14969109,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY5MTA5",
        "diff_hunk": "@@ -376,4 +376,98 @@ describe('Element.removeEvent', function(){\n \n });\n \n+describe('Mouse wheel', function(){\n+\n+\tfunction attachProperties(e, direction){\n+\t\te.detail = 1 * direction;\n+\t\te.wheelDelta = 1 * direction;\n+\t\te.deltaY = -1 * direction;\n+\t}\n+\n+\tfunction createFakeWheel(event, wheelDirection){\n+\n+\t\tvar evt;\n+\t\ttry{\n+\t\t\t// Firefox\n+\t\t\tevt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initMouseEvent(event, true, true, window, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore){}\n+\n+\t\ttry{\n+\t\t\t// Chrome, PhantomJS, Safari\n+\t\t\tevt = document.createEvent(\"WheelEvent\");\n+\t\t\tevt.initMouseEvent(event, 0, 100, window, 0, 0, 0, 0, null, null, null, null);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore2){}\n+\n+\t\ttry{\n+\t\t\t// IE9\n+\t\t\tevt = document.createEvent(\"HTMLEvents\");\n+\t\t\tevt.initEvent(event, true, false);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore3){}\n+\n+\t\ttry{\n+\t\t\t// IE10+, Safari\n+\t\t\tvar evt = document.createEvent(\"MouseEvents\");\n+\t\t\tevt.initEvent(event, true, true);\n+\t\t\tattachProperties(evt, wheelDirection);\n+\t\t\twindow.dispatchEvent(evt);\n+\t\t}catch(ignore4){}\n+\n+\t\ttry{\n+\t\t\t// IE8\n+\t\t\tvar evt = document.createEventObject();\n+\t\t\tdocument.documentElement.fireEvent(event, evt);\n+\t\t}catch(ignore5){}\n+\t}\n+\n+\tvar triggered = false,\n+\t\twheel = false, \n+\t\ttestWheel = !!window.addEventListener,\n+\t\tcallback = function(e){\n+\t\t\tif (e.wheel) wheel = e.wheel > 0 ? 'wheel moved up' : 'wheel moved down';\n+\t\t\ttriggered = 'triggered';\n+\t\t}\n+\n+\tbeforeEach(function(){\n+\t\twheel = triggered = false;\n+\t\twindow.addEvent('mousewheel', callback);\n+\t\tdocument.documentElement.addEvent('mousewheel', callback);\n+\t});\n+\n+\tafterEach(function(){\n+\t\twindow.removeEvent('mousewheel', callback);\n+\t\tdocument.documentElement.removeEvent('mousewheel', callback);\n+\t});\n+\n+\tit('should trigger/listen to mousewheel event', function(){\n+\t\t// http://jsfiddle.net/W6QrS/3\n+\n+\t\tArray.each(['mousewheel', 'wheel' ,'DOMMouseScroll' ], createFakeWheel);\n+\t\texpect(triggered).toBeTruthy();\n+\t});\n+\n+\tit('should listen to mouse wheel direction', function(){\n+\t\t// http://jsfiddle.net/58yCr/\n+\n+\t\t// fire event with wheel going up\n+\t\tArray.each(['mousewheel', 'wheel' ,'DOMMouseScroll' ], function(ev){",
        "path": "Specs/Element/Element.Event.js",
        "position": null,
        "original_position": 84,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`ev` => `type`\n",
        "created_at": "2014-07-15T23:00:10Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14969109",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14969109"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14969109"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14984826",
        "pull_request_review_id": null,
        "id": 14984826,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTg0ODI2",
        "diff_hunk": "@@ -17,6 +17,16 @@ provides: Event\n (function(){\n \n var _keys = {};\n+var normalizeWheelSpeed = function(evt){\n+    var normalized;\n+    if (evt.wheelDelta){\n+        normalized = (evt.wheelDelta % 120 - 0) == -0 ? evt.wheelDelta / 120 : evt.wheelDelta / 12;\n+    } else {\n+        var rawAmount = evt.deltaY ? evt.deltaY : evt.detail;\n+        normalized = -(rawAmount % 3 ? rawAmount * 10 : rawAmount / 3);\n+    }\n+    return normalized;",
        "path": "Source/Types/DOMEvent.js",
        "position": null,
        "original_position": 12,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@arian I wanted to check `event.wheelDelta % 120` but since that can return `-0` I thought doing `(-0) - (-0)` so I get a consistent number (always `-0`) which I can compare with `== -0`, would there be a better way? `Math.abs`? Have `||` for both `0` and `-0`?\n\nThe `rawAmount % 3` is because FIrefox returns `3` and `0.1` multiples in respective Mac and Windows. This would detect that and normalize it.\n\nWe could just do the `return` as you suggest. That would not normalize the value but stll give a direction indicator and make it easier to maintain.\n",
        "created_at": "2014-07-16T07:56:01Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14984826",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14984826"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14984826"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14985122",
        "pull_request_review_id": null,
        "id": 14985122,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTg1MTIy",
        "diff_hunk": "@@ -17,6 +17,16 @@ provides: Event\n (function(){\n \n var _keys = {};\n+var normalizeWheelSpeed = function(evt){\n+    var normalized;\n+    if (evt.wheelDelta){\n+        normalized = (evt.wheelDelta % 120 - 0) == -0 ? evt.wheelDelta / 120 : evt.wheelDelta / 12;\n+    } else {\n+        var rawAmount = evt.deltaY ? evt.deltaY : evt.detail;\n+        normalized = -(rawAmount % 3 ? rawAmount * 10 : rawAmount / 3);\n+    }\n+    return normalized;",
        "path": "Source/Types/DOMEvent.js",
        "position": null,
        "original_position": 12,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Right, so there are four cases:\n1. multiples of 120\n2. multiples of 12\n3. multiples of 3\n4. multiples of 0.1\n\nDon't you have to do the `- 0` trick for the `% 3` as well?\nIn any case, `-0 == 0` returns `true`, so it shouldn't matter actually.\n",
        "created_at": "2014-07-16T08:06:41Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14985122",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14985122"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14985122"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14986034",
        "pull_request_review_id": null,
        "id": 14986034,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTg2MDM0",
        "diff_hunk": "@@ -17,6 +17,16 @@ provides: Event\n (function(){\n \n var _keys = {};\n+var normalizeWheelSpeed = function(evt){\n+    var normalized;\n+    if (evt.wheelDelta){\n+        normalized = (evt.wheelDelta % 120 - 0) == -0 ? evt.wheelDelta / 120 : evt.wheelDelta / 12;\n+    } else {\n+        var rawAmount = evt.deltaY ? evt.deltaY : evt.detail;\n+        normalized = -(rawAmount % 3 ? rawAmount * 10 : rawAmount / 3);\n+    }\n+    return normalized;",
        "path": "Source/Types/DOMEvent.js",
        "position": null,
        "original_position": 12,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "bd7bde0aaecdcf2ffda99160b3e424d6860d37d2",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@arian you are right, `-0 == 0` returns `true` anyway. \nWill wait for travis to get back and re-test it.\n",
        "created_at": "2014-07-16T08:38:04Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14986034",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14986034"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14986034"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14991936",
        "pull_request_review_id": null,
        "id": 14991936,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTkxOTM2",
        "diff_hunk": "@@ -17,6 +17,16 @@ provides: Event\n (function(){\n \n var _keys = {};\n+var normalizeWheelSpeed = function(event){\n+    var normalized;\n+    if (event.wheelDelta){\n+        normalized = event.wheelDelta % 120 == 0 ? event.wheelDelta / 120 : event.wheelDelta / 12;\n+    } else {\n+        var rawAmount = event.deltaY ? event.deltaY : event.detail;",
        "path": "Source/Types/DOMEvent.js",
        "position": null,
        "original_position": 9,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "b0f8b6842463e8c04392961ee3048fb8f045f4c5",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nvar rawAmount = event.deltaY || event.detail || 0;\n```\n",
        "created_at": "2014-07-16T11:28:12Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14991936",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14991936"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14991936"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14991969",
        "pull_request_review_id": null,
        "id": 14991969,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTkxOTY5",
        "diff_hunk": "@@ -17,6 +17,16 @@ provides: Event\n (function(){\n \n var _keys = {};\n+var normalizeWheelSpeed = function(event){\n+    var normalized;\n+    if (event.wheelDelta){\n+        normalized = event.wheelDelta % 120 == 0 ? event.wheelDelta / 120 : event.wheelDelta / 12;\n+    } else {\n+        var rawAmount = event.deltaY ? event.deltaY : event.detail;\n+        normalized = -(rawAmount % 3 ? rawAmount * 10 : rawAmount / 3);",
        "path": "Source/Types/DOMEvent.js",
        "position": null,
        "original_position": 10,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "b0f8b6842463e8c04392961ee3048fb8f045f4c5",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should the other way around, more consistent with the wheelDelta\n\n``` js\nrawAmount % 3 == 0 ? rawAmount / 3 : rawAmount * 10;\n```\n",
        "created_at": "2014-07-16T11:29:11Z",
        "updated_at": "2014-07-16T11:57:40Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14991969",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/14991969"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r14991969"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15003147",
        "pull_request_review_id": null,
        "id": 15003147,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDAzMTQ3",
        "diff_hunk": "@@ -17,6 +17,16 @@ provides: Event\n (function(){\n \n var _keys = {};\n+var normalizeWheelSpeed = function(event){\n+    var normalized;\n+    if (event.wheelDelta){\n+        normalized = event.wheelDelta % 120 == 0 ? event.wheelDelta / 120 : event.wheelDelta / 12;\n+    } else {\n+        var rawAmount = event.deltaY ? event.deltaY : event.detail;\n+        normalized = -(rawAmount % 3 ? rawAmount * 10 : rawAmount / 3);",
        "path": "Source/Types/DOMEvent.js",
        "position": null,
        "original_position": 10,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "b0f8b6842463e8c04392961ee3048fb8f045f4c5",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@arian, good point, that is better. \nRe-tested and added that to the PR\n",
        "created_at": "2014-07-16T15:08:16Z",
        "updated_at": "2014-07-16T15:08:16Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15003147",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15003147"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15003147"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15306986",
        "pull_request_review_id": null,
        "id": 15306986,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzA2OTg2",
        "diff_hunk": "@@ -52,9 +62,8 @@ var DOMEvent = this.DOMEvent = new Type('DOMEvent', function(event, win){\n \t\t\tx: (event.pageX != null) ? event.pageX - win.pageXOffset : event.clientX,\n \t\t\ty: (event.pageY != null) ? event.pageY - win.pageYOffset : event.clientY\n \t\t};\n-\t\tif (type == 'DOMMouseScroll' || type == 'mousewheel')\n-\t\t\tthis.wheel = (event.wheelDelta) ? event.wheelDelta / 120 : -(event.detail || 0) / 3;\n-\n+\t\tif (type == 'DOMMouseScroll' || type == 'wheel' || type == 'mousewheel')",
        "path": "Source/Types/DOMEvent.js",
        "position": 33,
        "original_position": 33,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "one line\n",
        "created_at": "2014-07-23T18:46:15Z",
        "updated_at": "2014-07-23T18:46:15Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15306986",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15306986"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15306986"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15308148",
        "pull_request_review_id": null,
        "id": 15308148,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzA4MTQ4",
        "diff_hunk": "@@ -17,6 +17,16 @@ provides: Event\n (function(){\n \n var _keys = {};\n+var normalizeWheelSpeed = function(event){",
        "path": "Source/Types/DOMEvent.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not really sure what the heuristic is. I'm going to do some numbers, and try to see if I can come up with the reasoning. \n",
        "created_at": "2014-07-23T19:03:07Z",
        "updated_at": "2014-07-23T19:03:07Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15308148",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15308148"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15308148"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15312042",
        "pull_request_review_id": null,
        "id": 15312042,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzEyMDQy",
        "diff_hunk": "@@ -52,9 +62,8 @@ var DOMEvent = this.DOMEvent = new Type('DOMEvent', function(event, win){\n \t\t\tx: (event.pageX != null) ? event.pageX - win.pageXOffset : event.clientX,\n \t\t\ty: (event.pageY != null) ? event.pageY - win.pageYOffset : event.clientY\n \t\t};\n-\t\tif (type == 'DOMMouseScroll' || type == 'mousewheel')\n-\t\t\tthis.wheel = (event.wheelDelta) ? event.wheelDelta / 120 : -(event.detail || 0) / 3;\n-\n+\t\tif (type == 'DOMMouseScroll' || type == 'wheel' || type == 'mousewheel')",
        "path": "Source/Types/DOMEvent.js",
        "position": 33,
        "original_position": 33,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "good point, that would be more clear, will fix.\n",
        "created_at": "2014-07-23T20:06:18Z",
        "updated_at": "2014-07-23T20:06:18Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15312042",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15312042"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15312042"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15312171",
        "pull_request_review_id": null,
        "id": 15312171,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzEyMTcx",
        "diff_hunk": "@@ -17,6 +17,16 @@ provides: Event\n (function(){\n \n var _keys = {};\n+var normalizeWheelSpeed = function(event){",
        "path": "Source/Types/DOMEvent.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sure, would be nice to kow if you come up with something new/better.\n",
        "created_at": "2014-07-23T20:08:07Z",
        "updated_at": "2014-07-23T20:08:07Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15312171",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15312171"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15312171"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15317417",
        "pull_request_review_id": null,
        "id": 15317417,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzE3NDE3",
        "diff_hunk": "@@ -17,6 +17,16 @@ provides: Event\n (function(){\n \n var _keys = {};\n+var normalizeWheelSpeed = function(event){",
        "path": "Source/Types/DOMEvent.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "original_commit_id": "0a27d9f6693db987c32ce2782e05574f018fdd0f",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Couldn't come up with something. :(\n\nOn Wed, Jul 23, 2014 at 3:08 PM, Sergio Crisostomo <notifications@github.com\n\n> wrote:\n> \n> In Source/Types/DOMEvent.js:\n> \n> > @@ -17,6 +17,16 @@ provides: Event\n> >  (function(){\n> > \n> >  var _keys = {};\n> > +var normalizeWheelSpeed = function(event){\n> \n> Sure, would be nice to kow if you come up with something new/better.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mootools/mootools-core/pull/2633/files#r15312171.\n",
        "created_at": "2014-07-23T21:32:12Z",
        "updated_at": "2014-07-23T21:32:12Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15317417",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2633",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/15317417"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2633#discussion_r15317417"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2633"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16379419",
        "pull_request_review_id": null,
        "id": 16379419,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzc5NDE5",
        "diff_hunk": "@@ -399,6 +399,34 @@ Strips the String of its *<script>* tags and anything in between them.\n \n \n \n+String method: splice {#String:splice}\n+--------------------------------------\n+\n+Similar to the [array.splice][], inserts a string before the specified position and removes unnecessary elements.\n+\n+### Syntax:\n+\n+\tmyString.splice(position, remove, insert);\n+\n+### Arguments:\n+\n+1. position - (*integer*) The position before which the insertion is made.\n+1. remove - (*integer*) Length of the text to be removed.\n+1. insert - (*string*) String to insert.\n+\n+### Returns:\n+\n+* (*string*) Modified string.\n+\n+### Examples:\n+\n+\t'Hello, big world!'.splice(6, 4, ''); // returns 'Hello, world!'\n+\t'Add here'.splice(3, 0, ' substring'); // returns 'Add substring here'",
        "path": "Docs/Types/String.md",
        "position": null,
        "original_position": 26,
        "commit_id": "0010b01bdff49dc043fca0cf4a3c8e5873a41418",
        "original_commit_id": "f72e68d0206eb87a1165d7ddccd139c4faa531ca",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This doesn't seem intuitive. One could argue this would have been the result: `'Add substring'`\n",
        "created_at": "2014-08-18T20:25:17Z",
        "updated_at": "2014-08-19T10:38:32Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16379419",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2642",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16379419"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16379419"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2642"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16379499",
        "pull_request_review_id": null,
        "id": 16379499,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzc5NDk5",
        "diff_hunk": "@@ -399,6 +399,34 @@ Strips the String of its *<script>* tags and anything in between them.\n \n \n \n+String method: splice {#String:splice}\n+--------------------------------------\n+\n+Similar to the [array.splice][], inserts a string before the specified position and removes unnecessary elements.\n+\n+### Syntax:\n+\n+\tmyString.splice(position, remove, insert);\n+\n+### Arguments:\n+\n+1. position - (*integer*) The position before which the insertion is made.\n+1. remove - (*integer*) Length of the text to be removed.\n+1. insert - (*string*) String to insert.\n+\n+### Returns:\n+\n+* (*string*) Modified string.\n+\n+### Examples:\n+\n+\t'Hello, big world!'.splice(6, 4, ''); // returns 'Hello, world!'\n+\t'Add here'.splice(3, 0, ' substring'); // returns 'Add substring here'",
        "path": "Docs/Types/String.md",
        "position": null,
        "original_position": 26,
        "commit_id": "0010b01bdff49dc043fca0cf4a3c8e5873a41418",
        "original_commit_id": "f72e68d0206eb87a1165d7ddccd139c4faa531ca",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I know it's suppose to mimic `Array.splice` ... just not exactly very readable. \n",
        "created_at": "2014-08-18T20:26:52Z",
        "updated_at": "2014-08-19T10:38:32Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16379499",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2642",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16379499"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16379499"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2642"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16379810",
        "pull_request_review_id": null,
        "id": 16379810,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzc5ODEw",
        "diff_hunk": "@@ -79,6 +79,10 @@ String.implement({\n \t\t\tif (match.charAt(0) == '\\\\') return match.slice(1);\n \t\t\treturn (object[name] != null) ? object[name] : '';\n \t\t});\n+\t},\n+\n+\tsplice: function(pos, rem, ins) {\n+\t\treturn (this.slice(0,pos) + ins + this.slice(pos + Math.abs(rem)));",
        "path": "Source/Types/String.js",
        "position": null,
        "original_position": 7,
        "commit_id": "0010b01bdff49dc043fca0cf4a3c8e5873a41418",
        "original_commit_id": "f72e68d0206eb87a1165d7ddccd139c4faa531ca",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Missing space after `0, pos`\n",
        "created_at": "2014-08-18T20:32:39Z",
        "updated_at": "2014-08-19T10:38:32Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16379810",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2642",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16379810"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16379810"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2642"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16380159",
        "pull_request_review_id": null,
        "id": 16380159,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzgwMTU5",
        "diff_hunk": "@@ -79,6 +79,10 @@ String.implement({\n \t\t\tif (match.charAt(0) == '\\\\') return match.slice(1);\n \t\t\treturn (object[name] != null) ? object[name] : '';\n \t\t});\n+\t},\n+\n+\tsplice: function(pos, rem, ins) {\n+\t\treturn (this.slice(0,pos) + ins + this.slice(pos + Math.abs(rem)));",
        "path": "Source/Types/String.js",
        "position": null,
        "original_position": 7,
        "commit_id": "0010b01bdff49dc043fca0cf4a3c8e5873a41418",
        "original_commit_id": "f72e68d0206eb87a1165d7ddccd139c4faa531ca",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If it should work the same as Array#splice, you should be able to insert all rest arguments in between.\n",
        "created_at": "2014-08-18T20:39:36Z",
        "updated_at": "2014-08-19T10:38:32Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16380159",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2642",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16380159"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16380159"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2642"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16381380",
        "pull_request_review_id": null,
        "id": 16381380,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzgxMzgw",
        "diff_hunk": "@@ -79,6 +79,10 @@ String.implement({\n \t\t\tif (match.charAt(0) == '\\\\') return match.slice(1);\n \t\t\treturn (object[name] != null) ? object[name] : '';\n \t\t});\n+\t},\n+\n+\tsplice: function(pos, rem, ins) {\n+\t\treturn (this.slice(0,pos) + ins + this.slice(pos + Math.abs(rem)));",
        "path": "Source/Types/String.js",
        "position": null,
        "original_position": 7,
        "commit_id": "0010b01bdff49dc043fca0cf4a3c8e5873a41418",
        "original_commit_id": "f72e68d0206eb87a1165d7ddccd139c4faa531ca",
        "user": {
            "login": "megawac",
            "id": 3475472,
            "node_id": "MDQ6VXNlcjM0NzU0NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3475472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megawac",
            "html_url": "https://github.com/megawac",
            "followers_url": "https://api.github.com/users/megawac/followers",
            "following_url": "https://api.github.com/users/megawac/following{/other_user}",
            "gists_url": "https://api.github.com/users/megawac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megawac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megawac/subscriptions",
            "organizations_url": "https://api.github.com/users/megawac/orgs",
            "repos_url": "https://api.github.com/users/megawac/repos",
            "events_url": "https://api.github.com/users/megawac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megawac/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Shouldn't `ins` be optional\n",
        "created_at": "2014-08-18T20:58:49Z",
        "updated_at": "2014-08-19T10:38:32Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16381380",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2642",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16381380"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16381380"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2642"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16381429",
        "pull_request_review_id": null,
        "id": 16381429,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzgxNDI5",
        "diff_hunk": "@@ -141,4 +141,13 @@ describe(\"String Methods\", function(){\n \t\texpect('this {should {break} mo} betta'.substitute({ 'break':'work' })).toEqual('this {should work mo} betta');\n \t});\n \n+\t// String.splice\n+\n+\tit('should add substrings and remove characters next to added', function () {\n+\t\texpect('Hello, big world!'.splice(6, 4, '')).toEqual('Hello, world!');\n+\t\texpect('Add here'.splice(3, 0, ' substring')).toEqual('Add substring here');\n+\t\texpect('Replace this word'.splice(8, 4, 'that')).toEqual('Replace that word');\n+\t\texpect('You can count from an end'.splice(-6, 2, 'the')).toEqual('You can count from the end');\n+\t});",
        "path": "Specs/Types/String.js",
        "position": null,
        "original_position": 11,
        "commit_id": "0010b01bdff49dc043fca0cf4a3c8e5873a41418",
        "original_commit_id": "f72e68d0206eb87a1165d7ddccd139c4faa531ca",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What if `remove` was `< 0`?\nWhat if `remove` and `insert` was missing?\nWhat if `position`, `remove`, and `insert` were missing?\n",
        "created_at": "2014-08-18T20:59:39Z",
        "updated_at": "2014-08-19T10:38:32Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16381429",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2642",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16381429"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16381429"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2642"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16381448",
        "pull_request_review_id": null,
        "id": 16381448,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzgxNDQ4",
        "diff_hunk": "@@ -141,4 +141,13 @@ describe(\"String Methods\", function(){\n \t\texpect('this {should {break} mo} betta'.substitute({ 'break':'work' })).toEqual('this {should work mo} betta');\n \t});\n \n+\t// String.splice\n+\n+\tit('should add substrings and remove characters next to added', function () {\n+\t\texpect('Hello, big world!'.splice(6, 4, '')).toEqual('Hello, world!');\n+\t\texpect('Add here'.splice(3, 0, ' substring')).toEqual('Add substring here');\n+\t\texpect('Replace this word'.splice(8, 4, 'that')).toEqual('Replace that word');\n+\t\texpect('You can count from an end'.splice(-6, 2, 'the')).toEqual('You can count from the end');\n+\t});",
        "path": "Specs/Types/String.js",
        "position": null,
        "original_position": 11,
        "commit_id": "0010b01bdff49dc043fca0cf4a3c8e5873a41418",
        "original_commit_id": "f72e68d0206eb87a1165d7ddccd139c4faa531ca",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What if `remove` was `> this.length`?\n",
        "created_at": "2014-08-18T20:59:55Z",
        "updated_at": "2014-08-19T10:38:32Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16381448",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2642",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16381448"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16381448"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2642"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16381514",
        "pull_request_review_id": null,
        "id": 16381514,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzgxNTE0",
        "diff_hunk": "@@ -141,4 +141,13 @@ describe(\"String Methods\", function(){\n \t\texpect('this {should {break} mo} betta'.substitute({ 'break':'work' })).toEqual('this {should work mo} betta');\n \t});\n \n+\t// String.splice\n+\n+\tit('should add substrings and remove characters next to added', function () {\n+\t\texpect('Hello, big world!'.splice(6, 4, '')).toEqual('Hello, world!');\n+\t\texpect('Add here'.splice(3, 0, ' substring')).toEqual('Add substring here');\n+\t\texpect('Replace this word'.splice(8, 4, 'that')).toEqual('Replace that word');\n+\t\texpect('You can count from an end'.splice(-6, 2, 'the')).toEqual('You can count from the end');\n+\t});",
        "path": "Specs/Types/String.js",
        "position": null,
        "original_position": 11,
        "commit_id": "0010b01bdff49dc043fca0cf4a3c8e5873a41418",
        "original_commit_id": "f72e68d0206eb87a1165d7ddccd139c4faa531ca",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What if `position` was `> this.length`? Pad with empty string? \n",
        "created_at": "2014-08-18T21:00:53Z",
        "updated_at": "2014-08-19T10:38:32Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16381514",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2642",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16381514"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2642#discussion_r16381514"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2642"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16774949",
        "pull_request_review_id": null,
        "id": 16774949,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Nzc0OTQ5",
        "diff_hunk": "@@ -57,7 +57,12 @@ var formObserver = function(type){\n \t\tremove: function(self, uid){\n \t\t\tvar list = self.retrieve(_key + type + 'listeners', {})[uid];\n \t\t\tif (list && list.forms) for (var i = list.forms.length; i--;){\n-\t\t\t\tlist.forms[i].removeEvent(type, list.fns[i]);\n+\t\t\t\t// the form may have been destroyed, so it won't have the\n+\t\t\t\t// removeEvent method anymore. In that case the event was\n+\t\t\t\t// removed as well.\n+\t\t\t\tif (list.forms[i].removeEvent){",
        "path": "Source/Element/Element.Delegation.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "98e1fc686448764a9b5fec119f02c91e5fb2461e",
        "original_commit_id": "98e1fc686448764a9b5fec119f02c91e5fb2461e",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "inline?\n",
        "created_at": "2014-08-27T13:39:15Z",
        "updated_at": "2014-08-27T13:39:15Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2646#discussion_r16774949",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2646",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16774949"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2646#discussion_r16774949"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2646"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16775207",
        "pull_request_review_id": null,
        "id": 16775207,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Nzc1MjA3",
        "diff_hunk": "@@ -57,7 +57,12 @@ var formObserver = function(type){\n \t\tremove: function(self, uid){\n \t\t\tvar list = self.retrieve(_key + type + 'listeners', {})[uid];\n \t\t\tif (list && list.forms) for (var i = list.forms.length; i--;){\n-\t\t\t\tlist.forms[i].removeEvent(type, list.fns[i]);\n+\t\t\t\t// the form may have been destroyed, so it won't have the\n+\t\t\t\t// removeEvent method anymore. In that case the event was\n+\t\t\t\t// removed as well.\n+\t\t\t\tif (list.forms[i].removeEvent){",
        "path": "Source/Element/Element.Delegation.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "98e1fc686448764a9b5fec119f02c91e5fb2461e",
        "original_commit_id": "98e1fc686448764a9b5fec119f02c91e5fb2461e",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "?\n",
        "created_at": "2014-08-27T13:44:19Z",
        "updated_at": "2014-08-27T13:44:19Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2646#discussion_r16775207",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2646",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16775207"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2646#discussion_r16775207"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2646"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16775978",
        "pull_request_review_id": null,
        "id": 16775978,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Nzc1OTc4",
        "diff_hunk": "@@ -57,7 +57,12 @@ var formObserver = function(type){\n \t\tremove: function(self, uid){\n \t\t\tvar list = self.retrieve(_key + type + 'listeners', {})[uid];\n \t\t\tif (list && list.forms) for (var i = list.forms.length; i--;){\n-\t\t\t\tlist.forms[i].removeEvent(type, list.fns[i]);\n+\t\t\t\t// the form may have been destroyed, so it won't have the\n+\t\t\t\t// removeEvent method anymore. In that case the event was\n+\t\t\t\t// removed as well.\n+\t\t\t\tif (list.forms[i].removeEvent){",
        "path": "Source/Element/Element.Delegation.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "98e1fc686448764a9b5fec119f02c91e5fb2461e",
        "original_commit_id": "98e1fc686448764a9b5fec119f02c91e5fb2461e",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nif (list.forms[i].removeEvent) list.forms[i].removeEvent(type, list.fns[i]);\n```\n",
        "created_at": "2014-08-27T13:57:25Z",
        "updated_at": "2014-08-27T13:57:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2646#discussion_r16775978",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2646",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16775978"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2646#discussion_r16775978"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2646"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16777060",
        "pull_request_review_id": null,
        "id": 16777060,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Nzc3MDYw",
        "diff_hunk": "@@ -57,7 +57,12 @@ var formObserver = function(type){\n \t\tremove: function(self, uid){\n \t\t\tvar list = self.retrieve(_key + type + 'listeners', {})[uid];\n \t\t\tif (list && list.forms) for (var i = list.forms.length; i--;){\n-\t\t\t\tlist.forms[i].removeEvent(type, list.fns[i]);\n+\t\t\t\t// the form may have been destroyed, so it won't have the\n+\t\t\t\t// removeEvent method anymore. In that case the event was\n+\t\t\t\t// removed as well.\n+\t\t\t\tif (list.forms[i].removeEvent){",
        "path": "Source/Element/Element.Delegation.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "98e1fc686448764a9b5fec119f02c91e5fb2461e",
        "original_commit_id": "98e1fc686448764a9b5fec119f02c91e5fb2461e",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sure, it's exactly the same, except the optimal syntactical brackets...\n",
        "created_at": "2014-08-27T14:12:48Z",
        "updated_at": "2014-08-27T14:12:48Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2646#discussion_r16777060",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2646",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16777060"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2646#discussion_r16777060"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2646"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16777446",
        "pull_request_review_id": null,
        "id": 16777446,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Nzc3NDQ2",
        "diff_hunk": "@@ -57,7 +57,12 @@ var formObserver = function(type){\n \t\tremove: function(self, uid){\n \t\t\tvar list = self.retrieve(_key + type + 'listeners', {})[uid];\n \t\t\tif (list && list.forms) for (var i = list.forms.length; i--;){\n-\t\t\t\tlist.forms[i].removeEvent(type, list.fns[i]);\n+\t\t\t\t// the form may have been destroyed, so it won't have the\n+\t\t\t\t// removeEvent method anymore. In that case the event was\n+\t\t\t\t// removed as well.\n+\t\t\t\tif (list.forms[i].removeEvent){",
        "path": "Source/Element/Element.Delegation.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "98e1fc686448764a9b5fec119f02c91e5fb2461e",
        "original_commit_id": "98e1fc686448764a9b5fec119f02c91e5fb2461e",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "lol yeah trying to be consistent with the rest of the codez\n\nOn Wed, Aug 27, 2014 at 9:12 AM, Arian Stolwijk notifications@github.com\nwrote:\n\n> In Source/Element/Element.Delegation.js:\n> \n> > @@ -57,7 +57,12 @@ var formObserver = function(type){\n> >         remove: function(self, uid){\n> >             var list = self.retrieve(_key + type + 'listeners', {})[uid];\n> >             if (list && list.forms) for (var i = list.forms.length; i--;){\n> > -               list.forms[i].removeEvent(type, list.fns[i]);\n> > -               // the form may have been destroyed, so it won't have the\n> > -               // removeEvent method anymore. In that case the event was\n> > -               // removed as well.\n> > -               if (list.forms[i].removeEvent){\n> \n> Sure, it's exactly the same, except the optimal syntactical brackets...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mootools/mootools-core/pull/2646/files#r16777060.\n",
        "created_at": "2014-08-27T14:18:20Z",
        "updated_at": "2014-08-27T14:18:20Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2646#discussion_r16777446",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2646",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/16777446"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2646#discussion_r16777446"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2646"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/17537556",
        "pull_request_review_id": null,
        "id": 17537556,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTM3NTU2",
        "diff_hunk": "@@ -46,7 +46,7 @@ var parse = function(ua, platform){\n var Browser = this.Browser = parse(navigator.userAgent, navigator.platform);\n \n if (Browser.name == 'ie'){\n-\tBrowser.version = document.documentMode;\n+\tBrowser.version = document.documentMode/*<ltIE8>*/ || parseFloat(navigator.appVersion.match(/MSIE ([\\d.]+)/)[1])/*</ltIE8>*/;",
        "path": "Source/Browser/Browser.js",
        "position": null,
        "original_position": 5,
        "commit_id": "a9628d3e1d8d031b6655d44985b7ff4f4c92016b",
        "original_commit_id": "6824ee0e83edee6d76cad5a42f35653c417083a7",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Doesn't the `Browser` object at this point already contain the version? And in the case `document.documentMode` is available, it should that instead.\n\n``` js\nif (Browser.name == 'ie' && document.documentMode){\n    Browser.version = document.documentMode;\n}\n```\n",
        "created_at": "2014-09-15T11:57:52Z",
        "updated_at": "2014-09-15T15:39:34Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2653#discussion_r17537556",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2653",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/17537556"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2653#discussion_r17537556"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2653"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/17547992",
        "pull_request_review_id": null,
        "id": 17547992,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTQ3OTky",
        "diff_hunk": "@@ -45,8 +45,8 @@ var parse = function(ua, platform){\n \n var Browser = this.Browser = parse(navigator.userAgent, navigator.platform);\n \n-if (Browser.name == 'ie'){\n-\tBrowser.version = document.documentMode;\n+if (Browser.name == 'ie' && document.documentMode){\n+    Browser.version = document.documentMode;",
        "path": "Source/Browser/Browser.js",
        "position": null,
        "original_position": 7,
        "commit_id": "a9628d3e1d8d031b6655d44985b7ff4f4c92016b",
        "original_commit_id": "2238f04d502b774e464eef2cea46e0df58f85ce7",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You changed the tab to 4 spaces...\n",
        "created_at": "2014-09-15T15:21:51Z",
        "updated_at": "2014-09-15T15:39:34Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2653#discussion_r17547992",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2653",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/17547992"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2653#discussion_r17547992"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2653"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/18430844",
        "pull_request_review_id": null,
        "id": 18430844,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDMwODQ0",
        "diff_hunk": "@@ -89,11 +89,21 @@ Array.implement({\n \t\t}\n \t\treturn result;\n \t},\n-\n-\tcontains: function(item, from){\n-\t\treturn this.indexOf(item, from) != -1;\n+\t/*<!ES7>*/\n+\tcontains: function contains(item) {\n+\t\tvar length = this.length;\n+\t\tif (length < 1) return false;\n+\t\tvar from = Math.floor(arguments[1] || 0);\n+\t\tif (from < 0) from = length + from;\n+\t\tif (from === -Infinity || from < 0) from = 0;\n+\t\t/* in ES6 max length is 2^53-1, currently limited to 2^32-1*/\n+\t\tif (from >= length || from > 0xFFFFFFFF) return false;\n+\t\tvar check = typeof item === 'number' && isNaN(item) ? isNaN : function(c){ return c === item };\n+\t\tfor (var i=from; i < length; i++)\n+\t\t\tif (check(this[i])) return true;",
        "path": "Source/Types/Array.js",
        "position": 18,
        "original_position": 18,
        "commit_id": "f445d77fd1ac9b40d3a0a685125aab99d93b752b",
        "original_commit_id": "17968413f457fd03054c5f403da3bae8e6217631",
        "user": {
            "login": "megawac",
            "id": 3475472,
            "node_id": "MDQ6VXNlcjM0NzU0NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3475472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megawac",
            "html_url": "https://github.com/megawac",
            "followers_url": "https://api.github.com/users/megawac/followers",
            "following_url": "https://api.github.com/users/megawac/following{/other_user}",
            "gists_url": "https://api.github.com/users/megawac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megawac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megawac/subscriptions",
            "organizations_url": "https://api.github.com/users/megawac/orgs",
            "repos_url": "https://api.github.com/users/megawac/repos",
            "events_url": "https://api.github.com/users/megawac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megawac/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I haven't read the spec, but do you have to consider sparse arrays?\n",
        "created_at": "2014-10-04T18:30:18Z",
        "updated_at": "2014-10-06T19:50:42Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2659#discussion_r18430844",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2659",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/18430844"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2659#discussion_r18430844"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2659"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/18434622",
        "pull_request_review_id": null,
        "id": 18434622,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDM0NjIy",
        "diff_hunk": "@@ -89,11 +89,21 @@ Array.implement({\n \t\t}\n \t\treturn result;\n \t},\n-\n-\tcontains: function(item, from){\n-\t\treturn this.indexOf(item, from) != -1;\n+\t/*<!ES7>*/\n+\tcontains: function contains(item) {\n+\t\tvar length = this.length;\n+\t\tif (length < 1) return false;\n+\t\tvar from = Math.floor(arguments[1] || 0);\n+\t\tif (from < 0) from = length + from;\n+\t\tif (from === -Infinity || from < 0) from = 0;\n+\t\t/* in ES6 max length is 2^53-1, currently limited to 2^32-1*/\n+\t\tif (from >= length || from > 0xFFFFFFFF) return false;\n+\t\tvar check = typeof item === 'number' && isNaN(item) ? isNaN : function(c){ return c === item };\n+\t\tfor (var i=from; i < length; i++)\n+\t\t\tif (check(this[i])) return true;",
        "path": "Source/Types/Array.js",
        "position": 18,
        "original_position": 18,
        "commit_id": "f445d77fd1ac9b40d3a0a685125aab99d93b752b",
        "original_commit_id": "17968413f457fd03054c5f403da3bae8e6217631",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yes: https://github.com/domenic/Array.prototype.contains/blob/master/test/Array.prototype.contains_holes.js, which I ported here: https://github.com/mootools/mootools-core/pull/2659/files#diff-49750e6e1a5e57da563b954301f388c0R427,\nbeware that the describe has a wrong description (I copy and paste that from the original which is not up to date) but I see it has been discussed on this issue: https://github.com/domenic/Array.prototype.contains/issues/15.\nI created a PR to update the description on their test and I just updated the description here as well.\n",
        "created_at": "2014-10-05T11:30:30Z",
        "updated_at": "2014-10-06T19:50:42Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2659#discussion_r18434622",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2659",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/18434622"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2659#discussion_r18434622"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2659"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/18437184",
        "pull_request_review_id": null,
        "id": 18437184,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDM3MTg0",
        "diff_hunk": "@@ -89,11 +89,21 @@ Array.implement({\n \t\t}\n \t\treturn result;\n \t},\n-\n-\tcontains: function(item, from){\n-\t\treturn this.indexOf(item, from) != -1;\n+\t/*<!ES7>*/\n+\tcontains: function contains(item) {\n+\t\tvar length = this.length;\n+\t\tif (length < 1) return false;\n+\t\tvar from = Math.floor(arguments[1] || 0);\n+\t\tif (from < 0) from = length + from;\n+\t\tif (from === -Infinity || from < 0) from = 0;\n+\t\t/* in ES6 max length is 2^53-1, currently limited to 2^32-1*/\n+\t\tif (from >= length || from > 0xFFFFFFFF) return false;\n+\t\tvar check = typeof item === 'number' && isNaN(item) ? isNaN : function(c){ return c === item };\n+\t\tfor (var i=from; i < length; i++)\n+\t\t\tif (check(this[i])) return true;",
        "path": "Source/Types/Array.js",
        "position": 18,
        "original_position": 18,
        "commit_id": "f445d77fd1ac9b40d3a0a685125aab99d93b752b",
        "original_commit_id": "17968413f457fd03054c5f403da3bae8e6217631",
        "user": {
            "login": "megawac",
            "id": 3475472,
            "node_id": "MDQ6VXNlcjM0NzU0NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3475472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megawac",
            "html_url": "https://github.com/megawac",
            "followers_url": "https://api.github.com/users/megawac/followers",
            "following_url": "https://api.github.com/users/megawac/following{/other_user}",
            "gists_url": "https://api.github.com/users/megawac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megawac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megawac/subscriptions",
            "organizations_url": "https://api.github.com/users/megawac/orgs",
            "repos_url": "https://api.github.com/users/megawac/repos",
            "events_url": "https://api.github.com/users/megawac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megawac/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's kind of unfortunate, I was going to suggest doing\n\n```\nif (item !== item) return this.slice(from).any(isNaN);\nelse return this.indexOf(item, from) != -1;\n```\n",
        "created_at": "2014-10-05T20:15:22Z",
        "updated_at": "2014-10-06T19:50:42Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2659#discussion_r18437184",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2659",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/18437184"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2659#discussion_r18437184"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2659"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13020002",
        "pull_request_review_id": null,
        "id": 13020002,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDIwMDAy",
        "diff_hunk": "@@ -75,6 +75,33 @@ describe('Fx.Tween', function(){\n \n \t});\n \n+\tit('should fade out an element and fade in when triggerd inside the onComplete event', function(){\n+\n+\t\tvar element = new Element('div').inject($(document.body));\n+\t\tvar firstOpacity, lastOpacity, lastVisibility, runOnce = true;\n+\t\telement.set('tween', {\n+\t\t\tduration: 100,\n+\t\t\tonComplete: function (){\n+                if(runOnce){",
        "path": "Specs/Fx/Fx.Tween.js",
        "position": 11,
        "original_position": 11,
        "commit_id": "14e5e70e53d32fe5e775ff795c0a95b4bd81dac7",
        "original_commit_id": "b3c009e1c35d1886c1d20ee414ce09911a9981d3",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "tab/space problems.\n",
        "created_at": "2014-05-23T21:35:37Z",
        "updated_at": "2015-02-06T18:27:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13020002",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2597",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13020002"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13020002"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2597"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13021029",
        "pull_request_review_id": null,
        "id": 13021029,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDIxMDI5",
        "diff_hunk": "@@ -87,11 +87,26 @@ Element.implement({\n \t\tif (!toggle) this.eliminate('fade:flag');\n \t\tfade[method].apply(fade, args);\n \t\tvar to = args[args.length - 1];\n-\t\tif (method == 'set' || to != 0) this.setStyle('visibility', to == 0 ? 'hidden' : 'visible');\n-\t\telse fade.chain(function(){\n-\t\t\tthis.element.setStyle('visibility', 'hidden');\n-\t\t\tthis.callChain();\n-\t\t});\n+\t\t\n+\t\tif (method == 'set'){",
        "path": "Source/Fx/Fx.Tween.js",
        "position": 10,
        "original_position": 10,
        "commit_id": "14e5e70e53d32fe5e775ff795c0a95b4bd81dac7",
        "original_commit_id": "b3c009e1c35d1886c1d20ee414ce09911a9981d3",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I have a problem with this method. I think we added for some stupid reason (that jQuery had a similar method). Anyway. We need to unroll this method like this:\n\n``` js\n    fade: function(method){\n        var tween = this.get('tween');\n        if (!method || method == 'toggle') method = this.getStyle('opacity') ? 'out' : 'in';\n        if (method == 'in') tween.start('opacity', 1);\n        if (method == 'out') tween.start('opacity', 0);\n        if (method == 'show') tween.set('opacity', 1);\n        if (method == 'hide') tween.set('opacity', 1);\n        return this;\n    },\n```\n\nOnly issue is the (stupid) edge cases. For example, I dropped the `args` magic. I mean that's ridiculous. Also the setting and unsetting of visibility shouldn't be fade's job. That should be `set('opacity')`'s job. Which I thought it did.  \n\nSo what's next? Could you do me the huge favor of using my code, and running the specs. Also, if they pass just give yourself 15 more minutes to think of all the possible (ridiculous) edge cases that `fade` might have supported. \n",
        "created_at": "2014-05-23T22:10:47Z",
        "updated_at": "2015-02-06T18:27:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13021029",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2597",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13021029"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13021029"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2597"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13021030",
        "pull_request_review_id": null,
        "id": 13021030,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDIxMDMw",
        "diff_hunk": "@@ -75,6 +75,33 @@ describe('Fx.Tween', function(){\n \n \t});\n \n+\tit('should fade out an element and fade in when triggerd inside the onComplete event', function(){\n+\n+\t\tvar element = new Element('div').inject($(document.body));\n+\t\tvar firstOpacity, lastOpacity, lastVisibility, runOnce = true;\n+\t\telement.set('tween', {\n+\t\t\tduration: 100,\n+\t\t\tonComplete: function (){\n+                if(runOnce){",
        "path": "Specs/Fx/Fx.Tween.js",
        "position": 11,
        "original_position": 11,
        "commit_id": "14e5e70e53d32fe5e775ff795c0a95b4bd81dac7",
        "original_commit_id": "b3c009e1c35d1886c1d20ee414ce09911a9981d3",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo will fix, thanks\n",
        "created_at": "2014-05-23T22:10:49Z",
        "updated_at": "2015-02-06T18:27:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13021030",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2597",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13021030"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13021030"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2597"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13021061",
        "pull_request_review_id": null,
        "id": 13021061,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDIxMDYx",
        "diff_hunk": "@@ -87,11 +87,26 @@ Element.implement({\n \t\tif (!toggle) this.eliminate('fade:flag');\n \t\tfade[method].apply(fade, args);\n \t\tvar to = args[args.length - 1];\n-\t\tif (method == 'set' || to != 0) this.setStyle('visibility', to == 0 ? 'hidden' : 'visible');\n-\t\telse fade.chain(function(){\n-\t\t\tthis.element.setStyle('visibility', 'hidden');\n-\t\t\tthis.callChain();\n-\t\t});\n+\t\t\n+\t\tif (method == 'set'){",
        "path": "Source/Fx/Fx.Tween.js",
        "position": 10,
        "original_position": 10,
        "commit_id": "14e5e70e53d32fe5e775ff795c0a95b4bd81dac7",
        "original_commit_id": "b3c009e1c35d1886c1d20ee414ce09911a9981d3",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo sure! the code \"as is\" is not very clear. Will try your version.\n",
        "created_at": "2014-05-23T22:12:30Z",
        "updated_at": "2015-02-06T18:27:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13021061",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2597",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13021061"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13021061"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2597"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13049288",
        "pull_request_review_id": null,
        "id": 13049288,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDQ5Mjg4",
        "diff_hunk": "@@ -87,11 +87,26 @@ Element.implement({\n \t\tif (!toggle) this.eliminate('fade:flag');\n \t\tfade[method].apply(fade, args);\n \t\tvar to = args[args.length - 1];\n-\t\tif (method == 'set' || to != 0) this.setStyle('visibility', to == 0 ? 'hidden' : 'visible');\n-\t\telse fade.chain(function(){\n-\t\t\tthis.element.setStyle('visibility', 'hidden');\n-\t\t\tthis.callChain();\n-\t\t});\n+\t\t\n+\t\tif (method == 'set'){",
        "path": "Source/Fx/Fx.Tween.js",
        "position": 10,
        "original_position": 10,
        "commit_id": "14e5e70e53d32fe5e775ff795c0a95b4bd81dac7",
        "original_commit_id": "b3c009e1c35d1886c1d20ee414ce09911a9981d3",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ibolmo probably the set on fade is there to support IE wrong opacity with nearest 0 values, iirc there was some issue with that, that's why it was setting visibility.\n",
        "created_at": "2014-05-26T14:42:03Z",
        "updated_at": "2015-02-06T18:27:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13049288",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2597",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13049288"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13049288"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2597"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13049675",
        "pull_request_review_id": null,
        "id": 13049675,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDQ5Njc1",
        "diff_hunk": "@@ -87,11 +87,26 @@ Element.implement({\n \t\tif (!toggle) this.eliminate('fade:flag');\n \t\tfade[method].apply(fade, args);\n \t\tvar to = args[args.length - 1];\n-\t\tif (method == 'set' || to != 0) this.setStyle('visibility', to == 0 ? 'hidden' : 'visible');\n-\t\telse fade.chain(function(){\n-\t\t\tthis.element.setStyle('visibility', 'hidden');\n-\t\t\tthis.callChain();\n-\t\t});\n+\t\t\n+\t\tif (method == 'set'){",
        "path": "Source/Fx/Fx.Tween.js",
        "position": 10,
        "original_position": 10,
        "commit_id": "14e5e70e53d32fe5e775ff795c0a95b4bd81dac7",
        "original_commit_id": "b3c009e1c35d1886c1d20ee414ce09911a9981d3",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah could be. Let's see what @SergioCrisostomo finds out. \n",
        "created_at": "2014-05-26T14:55:26Z",
        "updated_at": "2015-02-06T18:27:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13049675",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2597",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/13049675"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2597#discussion_r13049675"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2597"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24259680",
        "pull_request_review_id": null,
        "id": 24259680,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU5Njgw",
        "diff_hunk": "@@ -87,11 +87,26 @@ Element.implement({\n \t\tif (!toggle) this.eliminate('fade:flag');\n \t\tfade[method].apply(fade, args);\n \t\tvar to = args[args.length - 1];\n-\t\tif (method == 'set' || to != 0) this.setStyle('visibility', to == 0 ? 'hidden' : 'visible');\n-\t\telse fade.chain(function(){\n-\t\t\tthis.element.setStyle('visibility', 'hidden');\n-\t\t\tthis.callChain();\n-\t\t});\n+\t\t\n+\t\tif (method == 'set'){\n+\t\t\tthis.setStyle('visibility', to == 0 ? 'hidden' : 'visible');\n+\t\t} else if (to != 0){\n+\t\t\tif (fade.$chain.length){\n+\t\t\t\tfade.chain(function (){",
        "path": "Source/Fx/Fx.Tween.js",
        "position": null,
        "original_position": 14,
        "commit_id": "14e5e70e53d32fe5e775ff795c0a95b4bd81dac7",
        "original_commit_id": "b3c009e1c35d1886c1d20ee414ce09911a9981d3",
        "user": {
            "login": "ibolmo",
            "id": 27246,
            "node_id": "MDQ6VXNlcjI3MjQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibolmo",
            "html_url": "https://github.com/ibolmo",
            "followers_url": "https://api.github.com/users/ibolmo/followers",
            "following_url": "https://api.github.com/users/ibolmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibolmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibolmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibolmo/subscriptions",
            "organizations_url": "https://api.github.com/users/ibolmo/orgs",
            "repos_url": "https://api.github.com/users/ibolmo/repos",
            "events_url": "https://api.github.com/users/ibolmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibolmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "remove space in `function ()` same in L103.\n",
        "created_at": "2015-02-06T18:18:38Z",
        "updated_at": "2015-02-06T18:27:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2597#discussion_r24259680",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2597",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24259680"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2597#discussion_r24259680"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2597"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24073344",
        "pull_request_review_id": null,
        "id": 24073344,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDczMzQ0",
        "diff_hunk": "@@ -301,13 +306,24 @@ Number.extend('random', function(min, max){\n \treturn Math.floor(Math.random() * (max - min + 1) + min);\n });\n \n-// forEach, each\n+// forEach, each, keys\n \n-var hasOwnProperty = Object.prototype.hasOwnProperty;\n-Object.extend('forEach', function(object, fn, bind){\n-\tfor (var key in object){\n-\t\tif (hasOwnProperty.call(object, key)) fn.call(bind, object[key], key, object);\n+Object.extend({\n+\n+\tkeys: function(object){\n+\t\tvar keys = [];\n+\t\teachKey(object, function(key, value){\n+\t\t\tif (hasOwnProperty.call(object, key)) keys.push(key);\n+\t\t}, this);",
        "path": "Source/Core/Core.js",
        "position": null,
        "original_position": 63,
        "commit_id": "9f9128aa2df4bc667a305092e4842ee35b6d4006",
        "original_commit_id": "0ee7a00727dac4790a58b5cebe320bbc77033270",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You don't need this `this` here..\n",
        "created_at": "2015-02-04T10:11:12Z",
        "updated_at": "2015-02-08T15:42:58Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24073344",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2696",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24073344"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24073344"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2696"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24073423",
        "pull_request_review_id": null,
        "id": 24073423,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDczNDIz",
        "diff_hunk": "@@ -301,13 +306,24 @@ Number.extend('random', function(min, max){\n \treturn Math.floor(Math.random() * (max - min + 1) + min);\n });\n \n-// forEach, each\n+// forEach, each, keys\n \n-var hasOwnProperty = Object.prototype.hasOwnProperty;\n-Object.extend('forEach', function(object, fn, bind){\n-\tfor (var key in object){\n-\t\tif (hasOwnProperty.call(object, key)) fn.call(bind, object[key], key, object);\n+Object.extend({\n+\n+\tkeys: function(object){\n+\t\tvar keys = [];\n+\t\teachKey(object, function(key, value){\n+\t\t\tif (hasOwnProperty.call(object, key)) keys.push(key);\n+\t\t}, this);\n+\t\treturn keys;\n+\t},\n+\n+\tforEach: function(object, fn, bind){\n+\t\tObject.keys(object).forEach(function(key){",
        "path": "Source/Core/Core.js",
        "position": 81,
        "original_position": 68,
        "commit_id": "9f9128aa2df4bc667a305092e4842ee35b6d4006",
        "original_commit_id": "0ee7a00727dac4790a58b5cebe320bbc77033270",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Array.forEach is not defined at this point yet.. (but only a few lines after this). Maybe do the Object.\\* methods after the Array ones?\n",
        "created_at": "2015-02-04T10:12:25Z",
        "updated_at": "2015-02-08T15:42:58Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24073423",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2696",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24073423"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24073423"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2696"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24073531",
        "pull_request_review_id": null,
        "id": 24073531,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDczNTMx",
        "diff_hunk": "@@ -31,49 +31,46 @@ Object.extend({\n \n \tmap: function(object, fn, bind){\n \t\tvar results = {};\n-\t\tfor (var key in object){\n-\t\t\tif (hasOwnProperty.call(object, key)) results[key] = fn.call(bind, object[key], key, object);\n+\t\tvar keys = Object.keys(object);\n+\t\tfor (var i = 0; i < keys.length; i++){\n+\t\t\tvar key = keys[i];\n+\t\t\tresults[key] = fn.call(bind, object[key], key, object);\n \t\t}\n \t\treturn results;\n \t},\n \n \tfilter: function(object, fn, bind){\n \t\tvar results = {};\n-\t\tfor (var key in object){\n-\t\t\tvar value = object[key];\n-\t\t\tif (hasOwnProperty.call(object, key) && fn.call(bind, value, key, object)) results[key] = value;\n+\t\tvar keys = Object.keys(object);\n+\t\tfor (var i = 0; i < keys.length; i++){\n+\t\t\tvar key = keys[i], value = object[key];\n+\t\t\tif (fn.call(bind, value, key, object)) results[key] = value;\n \t\t}\n \t\treturn results;\n \t},\n \n \tevery: function(object, fn, bind){\n-\t\tfor (var key in object){\n-\t\t\tif (hasOwnProperty.call(object, key) && !fn.call(bind, object[key], key)) return false;\n+\t\tvar keys = Object.keys(object);\n+\t\tfor (var i = 0; i < keys.length; i++){\n+\t\t\tvar key = keys[i];\n+\t\t\tif (!fn.call(bind, object[key], key)) return false;\n \t\t}\n \t\treturn true;\n \t},\n \n \tsome: function(object, fn, bind){\n-\t\tfor (var key in object){\n-\t\t\tif (hasOwnProperty.call(object, key) && fn.call(bind, object[key], key)) return true;\n+\t\tvar keys = Object.keys(object);\n+\t\tfor (var i = 0; i < keys.length; i++){\n+\t\t\tvar key = keys[i];\n+\t\t\tif (fn.call(bind, object[key], key)) return true;\n \t\t}\n \t\treturn false;\n \t},\n \n-\tkeys: function(object){\n-\t\tvar keys = [];\n-\t\tfor (var key in object){\n-\t\t\tif (hasOwnProperty.call(object, key)) keys.push(key);\n-\t\t}\n-\t\treturn keys;\n-\t},\n-\n \tvalues: function(object){\n-\t\tvar values = [];\n-\t\tfor (var key in object){\n-\t\t\tif (hasOwnProperty.call(object, key)) values.push(object[key]);\n-\t\t}\n-\t\treturn values;\n+\t\treturn Object.keys(object).map(function(key){",
        "path": "Source/Types/Object.js",
        "position": null,
        "original_position": 63,
        "commit_id": "9f9128aa2df4bc667a305092e4842ee35b6d4006",
        "original_commit_id": "0ee7a00727dac4790a58b5cebe320bbc77033270",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Here you depend on one of the `Array` methods, which isn't required in the yaml. This code is definitely nicer, but not sure if we want to require Array for this, or just do the for-loop.\n",
        "created_at": "2015-02-04T10:14:06Z",
        "updated_at": "2015-02-08T15:42:58Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24073531",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2696",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24073531"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24073531"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2696"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24073573",
        "pull_request_review_id": null,
        "id": 24073573,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDczNTcz",
        "diff_hunk": "@@ -790,6 +811,32 @@ describe('Object.each', function(){\n \t\texpect(daysObj).toEqual({first: 'Sunday', second: 'Monday', third: 'Tuesday'});\n \t});\n \n+\t/*<ltIE8>*/",
        "path": "Specs/Core/Core.js",
        "position": null,
        "original_position": 32,
        "commit_id": "9f9128aa2df4bc667a305092e4842ee35b6d4006",
        "original_commit_id": "0ee7a00727dac4790a58b5cebe320bbc77033270",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is not just for lt IE8.\n",
        "created_at": "2015-02-04T10:14:48Z",
        "updated_at": "2015-02-08T15:42:58Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24073573",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2696",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24073573"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24073573"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2696"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24133450",
        "pull_request_review_id": null,
        "id": 24133450,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MTMzNDUw",
        "diff_hunk": "@@ -301,13 +306,24 @@ Number.extend('random', function(min, max){\n \treturn Math.floor(Math.random() * (max - min + 1) + min);\n });\n \n-// forEach, each\n+// forEach, each, keys\n \n-var hasOwnProperty = Object.prototype.hasOwnProperty;\n-Object.extend('forEach', function(object, fn, bind){\n-\tfor (var key in object){\n-\t\tif (hasOwnProperty.call(object, key)) fn.call(bind, object[key], key, object);\n+Object.extend({\n+\n+\tkeys: function(object){\n+\t\tvar keys = [];\n+\t\teachKey(object, function(key, value){\n+\t\t\tif (hasOwnProperty.call(object, key)) keys.push(key);\n+\t\t}, this);\n+\t\treturn keys;\n+\t},\n+\n+\tforEach: function(object, fn, bind){\n+\t\tObject.keys(object).forEach(function(key){",
        "path": "Source/Core/Core.js",
        "position": 81,
        "original_position": 68,
        "commit_id": "9f9128aa2df4bc667a305092e4842ee35b6d4006",
        "original_commit_id": "0ee7a00727dac4790a58b5cebe320bbc77033270",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually, you can use `eachKey` here directly:\n\n``` js\nforEach: eachKey\n```\n",
        "created_at": "2015-02-05T00:21:59Z",
        "updated_at": "2015-02-08T15:42:58Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24133450",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2696",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24133450"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24133450"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2696"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24133655",
        "pull_request_review_id": null,
        "id": 24133655,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MTMzNjU1",
        "diff_hunk": "@@ -57,27 +57,32 @@ var instanceOf = this.instanceOf = function(item, object){\n \treturn item instanceof object;\n };\n \n-// Function overloading\n-\n-var Function = this.Function;\n-\n+/*<ltIE8>*/\n var enumerables = true;\n for (var i in {toString: 1}) enumerables = null;\n if (enumerables) enumerables = ['hasOwnProperty', 'valueOf', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'constructor'];\n+/*</ltIE8>*/\n+var hasOwnProperty = Object.prototype.hasOwnProperty;\n+function eachKey(object, fn, thisArg){",
        "path": "Source/Core/Core.js",
        "position": null,
        "original_position": 14,
        "commit_id": "9f9128aa2df4bc667a305092e4842ee35b6d4006",
        "original_commit_id": "9d41b14bd26043dfe2819621022f2d0d9d67289f",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think `eachKey` isn't a very nice name. maybe `objectEach`, or just `each`?\n\nAlso I'm thinking if this shouldn't be:\n\n``` js\nvar objectKeys = Object.keys || function(object){\n   // ...\n   return keys;\n};\n```\n\nAnd use that in the overloadSetter, with a for-loop there.\n\nAnd below, just have:\n\n``` js\nObject.extend({\n  keys: objectKeys,\n  forEach: // ...\n});\n```\n",
        "created_at": "2015-02-05T00:25:52Z",
        "updated_at": "2015-02-08T15:42:58Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24133655",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2696",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24133655"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24133655"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2696"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24289125",
        "pull_request_review_id": null,
        "id": 24289125,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Mjg5MTI1",
        "diff_hunk": "@@ -57,24 +57,38 @@ var instanceOf = this.instanceOf = function(item, object){\n \treturn item instanceof object;\n };\n \n-// Function overloading\n-\n-var Function = this.Function;\n-\n+/*<ltIE8>*/\n var enumerables = true;\n for (var i in {toString: 1}) enumerables = null;\n if (enumerables) enumerables = ['hasOwnProperty', 'valueOf', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'constructor'];\n+/*</ltIE8>*/\n+var hasOwnProperty = Object.prototype.hasOwnProperty;\n+function objectKeys(object, alsoPrototypeChain){\n+\tvar keys = [];\n+    for (var k in object){\n+\t\tif (alsoPrototypeChain) keys.push(k);\n+\t\telse hasOwnProperty.call(object, k) && keys.push(k);",
        "path": "Source/Core/Core.js",
        "position": null,
        "original_position": 18,
        "commit_id": "9f9128aa2df4bc667a305092e4842ee35b6d4006",
        "original_commit_id": "7270530e0184915ac640eb677068879905ba4bac",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seriously, use `else if`, not the `x && y` thing!\n",
        "created_at": "2015-02-07T12:16:21Z",
        "updated_at": "2015-02-08T15:42:58Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24289125",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2696",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/24289125"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2696#discussion_r24289125"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2696"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/30105797",
        "pull_request_review_id": null,
        "id": 30105797,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMTA1Nzk3",
        "diff_hunk": "@@ -368,6 +368,7 @@ var cloneOf = function(item){\n };\n \n Array.implement('clone', function(){\n+\tif(this.slice) return this.slice(0);",
        "path": "Source/Core/Core.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "74ae790cf542dc27601a433ba49509e152529e91",
        "original_commit_id": "74ae790cf542dc27601a433ba49509e152529e91",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`Array.clone` [clones also eventual objects inside the array](https://github.com/nagaozen/mootools-core/blob/patch-1/Source/Core/Core.js#L362-L368). Doing a early return here using `return this.slice(0);` would keep the objects reference and add a new behaviour. http://jsfiddle.net/syv2he8o/\n",
        "created_at": "2015-05-12T05:30:33Z",
        "updated_at": "2015-05-12T05:33:22Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2719#discussion_r30105797",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2719",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/30105797"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2719#discussion_r30105797"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2719"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/23192040",
        "pull_request_review_id": null,
        "id": 23192040,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTkyMDQw",
        "diff_hunk": "@@ -77,6 +77,7 @@ if ('onreadystatechange' in document) document.addListener('readystatechange', c\n else shouldPoll = true;\n \n if (shouldPoll) poll();\n+if (!ready) check();",
        "path": "Source/Utilities/DOMReady.js",
        "position": null,
        "original_position": 4,
        "commit_id": "e9359e81bd64f4faba3a343bc2a2e21db51113c0",
        "original_commit_id": "aeb4c3850b2db1827cef4d3ec82fda853879e160",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Which check does it actually execute? The `readyState` or the `scroll` test. The last one isn't included in the minus-ie8 build.\n",
        "created_at": "2015-01-19T22:43:50Z",
        "updated_at": "2015-08-05T08:08:44Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2693#discussion_r23192040",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2693",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/23192040"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2693#discussion_r23192040"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2693"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/23196224",
        "pull_request_review_id": null,
        "id": 23196224,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTk2MjI0",
        "diff_hunk": "@@ -77,6 +77,7 @@ if ('onreadystatechange' in document) document.addListener('readystatechange', c\n else shouldPoll = true;\n \n if (shouldPoll) poll();\n+if (!ready) check();",
        "path": "Source/Utilities/DOMReady.js",
        "position": null,
        "original_position": 4,
        "commit_id": "e9359e81bd64f4faba3a343bc2a2e21db51113c0",
        "original_commit_id": "aeb4c3850b2db1827cef4d3ec82fda853879e160",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@arian good point. Did some more tests in Travis and in a IE8 VM using:\n\n```\nif (shouldPoll) poll();\nchecks.each(function(chk){\n    alert(chk + '');\n});\nif (!ready) check();\n```\n\nand all cases showed the `document.readyState` test function is tested first. \nI tested also removing that IE8 block [on Travis](https://travis-ci.org/SergioCrisostomo/mootools-core/builds/47588654) and it passed in all Browsers. \nIt looks clean in that way.\n\nWe could import some more tests from [the old PHP file](https://github.com/mootools/mootools-core/blob/master/Tests/DOMReady.php) if it feels like we are missing something, since the IE8 block seems redundant to these specs.\n",
        "created_at": "2015-01-20T00:31:18Z",
        "updated_at": "2015-08-05T08:08:44Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2693#discussion_r23196224",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2693",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/23196224"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2693#discussion_r23196224"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2693"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/23292277",
        "pull_request_review_id": null,
        "id": 23292277,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjkyMjc3",
        "diff_hunk": "@@ -77,6 +77,7 @@ if ('onreadystatechange' in document) document.addListener('readystatechange', c\n else shouldPoll = true;\n \n if (shouldPoll) poll();\n+if (!ready) check();",
        "path": "Source/Utilities/DOMReady.js",
        "position": null,
        "original_position": 4,
        "commit_id": "e9359e81bd64f4faba3a343bc2a2e21db51113c0",
        "original_commit_id": "aeb4c3850b2db1827cef4d3ec82fda853879e160",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "for the old php file, bear in mind the original case scenario which I described here:\n\nhttp://webreflection.blogspot.co.uk/2006/09/too-much-simple-domcontentloaded.html?showComment=1158586140000#c115858618235493470\n\nIt would be possible to simulate the php flush using a simple write in nodejs like in this stackoverflow question:\nhttp://stackoverflow.com/questions/16184103/how-to-flush-chunks-of-arbitrary-sizes-in-nodejs\n\nalso I think the fix should be done here https://github.com/SergioCrisostomo/mootools-core/blob/fix-2682/Source/Utilities/DOMReady.js#L76 basically if the event is supported we have to check if the document readystate is completed, if it is, we can just run the domready\n",
        "created_at": "2015-01-21T11:17:28Z",
        "updated_at": "2015-08-05T08:08:44Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2693#discussion_r23292277",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2693",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/23292277"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2693#discussion_r23292277"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2693"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/27759091",
        "pull_request_review_id": null,
        "id": 27759091,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzU5MDkx",
        "diff_hunk": "@@ -6,30 +6,96 @@ provides: ~\n ...\n */\n \n-/* todo\n-document.addListener = function(type, fn){\n-\tif (this.addEventListener) this.addEventListener(type, fn, false);\n-\telse this.attachEvent('on' + type, fn);\n-\treturn this;\n-};\n-\n-document.removeListener = function(type, fn){\n-\tif (this.removeEventListener) this.removeEventListener(type, fn, false);\n-\telse this.detachEvent('on' + type, fn);\n-\treturn this;\n-};\n-\n-\n-window.fireEvent =\n-document.fireEvent = function(type){\n-\tif (type == 'domready')\n-\tfor (var i = 0; i < domreadyCallbacks.length; ++i){\n+describe(\"DOMReady\", function(){\n+\n+\tvar win, frame, cb, ready;",
        "path": "Specs/Utilities/DOMReady.js",
        "position": 24,
        "original_position": 24,
        "commit_id": "e9359e81bd64f4faba3a343bc2a2e21db51113c0",
        "original_commit_id": "54ca50d03cd0f0c2bdb9112c4a5e1753b75257f1",
        "user": {
            "login": "anutron",
            "id": 13230,
            "node_id": "MDQ6VXNlcjEzMjMw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anutron",
            "html_url": "https://github.com/anutron",
            "followers_url": "https://api.github.com/users/anutron/followers",
            "following_url": "https://api.github.com/users/anutron/following{/other_user}",
            "gists_url": "https://api.github.com/users/anutron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anutron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anutron/subscriptions",
            "organizations_url": "https://api.github.com/users/anutron/orgs",
            "repos_url": "https://api.github.com/users/anutron/repos",
            "events_url": "https://api.github.com/users/anutron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anutron/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "not a fan of abbreviated variable names. code should be readable; let the minimizer worry about brevity. So, `callback` here.\n",
        "created_at": "2015-04-03T22:04:30Z",
        "updated_at": "2015-08-05T08:08:44Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2693#discussion_r27759091",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2693",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/27759091"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2693#discussion_r27759091"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2693"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/27759244",
        "pull_request_review_id": null,
        "id": 27759244,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzU5MjQ0",
        "diff_hunk": "@@ -6,30 +6,96 @@ provides: ~\n ...\n */\n \n-/* todo\n-document.addListener = function(type, fn){\n-\tif (this.addEventListener) this.addEventListener(type, fn, false);\n-\telse this.attachEvent('on' + type, fn);\n-\treturn this;\n-};\n-\n-document.removeListener = function(type, fn){\n-\tif (this.removeEventListener) this.removeEventListener(type, fn, false);\n-\telse this.detachEvent('on' + type, fn);\n-\treturn this;\n-};\n-\n-\n-window.fireEvent =\n-document.fireEvent = function(type){\n-\tif (type == 'domready')\n-\tfor (var i = 0; i < domreadyCallbacks.length; ++i){\n+describe(\"DOMReady\", function(){\n+\n+\tvar win, frame, cb, ready;",
        "path": "Specs/Utilities/DOMReady.js",
        "position": 24,
        "original_position": 24,
        "commit_id": "e9359e81bd64f4faba3a343bc2a2e21db51113c0",
        "original_commit_id": "54ca50d03cd0f0c2bdb9112c4a5e1753b75257f1",
        "user": {
            "login": "anutron",
            "id": 13230,
            "node_id": "MDQ6VXNlcjEzMjMw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anutron",
            "html_url": "https://github.com/anutron",
            "followers_url": "https://api.github.com/users/anutron/followers",
            "following_url": "https://api.github.com/users/anutron/following{/other_user}",
            "gists_url": "https://api.github.com/users/anutron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anutron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anutron/subscriptions",
            "organizations_url": "https://api.github.com/users/anutron/orgs",
            "repos_url": "https://api.github.com/users/anutron/repos",
            "events_url": "https://api.github.com/users/anutron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anutron/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "reading a big more I see this is the spec file, so I'm less pedantic about it... can leave it.\n",
        "created_at": "2015-04-03T22:06:49Z",
        "updated_at": "2015-08-05T08:08:44Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2693#discussion_r27759244",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2693",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/27759244"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2693#discussion_r27759244"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2693"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/28135277",
        "pull_request_review_id": null,
        "id": 28135277,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1Mjc3",
        "diff_hunk": "@@ -1,4 +1,14 @@\n \"use strict\";\n+var fs = require('fs');\n+var path = require('path');\n+var http = require('http');\n+var build = (function(){\n+\t// travis testing\n+\tif (process.env && process.env.BUILD) return process.env.BUILD == 'default' ? 'all' : 'nocompat'; \n+\t// local testing\n+\telse return process.argv[2] == null || process.argv[2] == 'all' ? 'all' : 'nocompat';\n+})();\n+require('./Tests/httpServer.js')(build);",
        "path": "Gruntfile.js",
        "position": null,
        "original_position": 11,
        "commit_id": "e9359e81bd64f4faba3a343bc2a2e21db51113c0",
        "original_commit_id": "54ca50d03cd0f0c2bdb9112c4a5e1753b75257f1",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is this in the Gruntfile? Now on every time your run a `grunt` command, it will start a server.\n",
        "created_at": "2015-04-10T10:34:07Z",
        "updated_at": "2015-08-05T08:08:44Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2693#discussion_r28135277",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2693",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/28135277"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2693#discussion_r28135277"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2693"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/28135472",
        "pull_request_review_id": null,
        "id": 28135472,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM1NDcy",
        "diff_hunk": "@@ -1,4 +1,14 @@\n \"use strict\";\n+var fs = require('fs');\n+var path = require('path');\n+var http = require('http');\n+var build = (function(){\n+\t// travis testing\n+\tif (process.env && process.env.BUILD) return process.env.BUILD == 'default' ? 'all' : 'nocompat'; \n+\t// local testing\n+\telse return process.argv[2] == null || process.argv[2] == 'all' ? 'all' : 'nocompat';\n+})();\n+require('./Tests/httpServer.js')(build);",
        "path": "Gruntfile.js",
        "position": null,
        "original_position": 11,
        "commit_id": "e9359e81bd64f4faba3a343bc2a2e21db51113c0",
        "original_commit_id": "54ca50d03cd0f0c2bdb9112c4a5e1753b75257f1",
        "user": {
            "login": "SergioCrisostomo",
            "id": 5614559,
            "node_id": "MDQ6VXNlcjU2MTQ1NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5614559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SergioCrisostomo",
            "html_url": "https://github.com/SergioCrisostomo",
            "followers_url": "https://api.github.com/users/SergioCrisostomo/followers",
            "following_url": "https://api.github.com/users/SergioCrisostomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/SergioCrisostomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SergioCrisostomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SergioCrisostomo/subscriptions",
            "organizations_url": "https://api.github.com/users/SergioCrisostomo/orgs",
            "repos_url": "https://api.github.com/users/SergioCrisostomo/repos",
            "events_url": "https://api.github.com/users/SergioCrisostomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SergioCrisostomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@arian the idea is to serve HTML pages to the specs. Like these: https://github.com/SergioCrisostomo/mootools-core/tree/fix-2682/Tests/DOMReady\n\nIt could also be used in specs for Slick in the future. If there is a better way let me know. \nIf this is a bad idea let me know also :smile: \n",
        "created_at": "2015-04-10T10:39:32Z",
        "updated_at": "2015-08-05T08:08:44Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2693#discussion_r28135472",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2693",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/28135472"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2693#discussion_r28135472"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2693"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/28137517",
        "pull_request_review_id": null,
        "id": 28137517,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTM3NTE3",
        "diff_hunk": "@@ -1,4 +1,14 @@\n \"use strict\";\n+var fs = require('fs');\n+var path = require('path');\n+var http = require('http');\n+var build = (function(){\n+\t// travis testing\n+\tif (process.env && process.env.BUILD) return process.env.BUILD == 'default' ? 'all' : 'nocompat'; \n+\t// local testing\n+\telse return process.argv[2] == null || process.argv[2] == 'all' ? 'all' : 'nocompat';\n+})();\n+require('./Tests/httpServer.js')(build);",
        "path": "Gruntfile.js",
        "position": null,
        "original_position": 11,
        "commit_id": "e9359e81bd64f4faba3a343bc2a2e21db51113c0",
        "original_commit_id": "54ca50d03cd0f0c2bdb9112c4a5e1753b75257f1",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The idea is ok, but the server should run as a grunt task. iirc you could use something like grunt-concurrent to run the tasks concurrently.\n\nNow, as I understand correctly, you always run this server every time the gruntfile is loaded.\n",
        "created_at": "2015-04-10T11:20:24Z",
        "updated_at": "2015-08-05T08:08:44Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2693#discussion_r28137517",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2693",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/28137517"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2693#discussion_r28137517"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2693"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/36620098",
        "pull_request_review_id": null,
        "id": 36620098,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwMDk4",
        "diff_hunk": "@@ -610,7 +610,7 @@ describe('instanceOf', function(){\n \t});\n \n \t// todo(ibolmo)\n-\tif (window.Element && Element.set) it(\"should return true for Element instances\", function(){\n+\tif (typeof window != 'undefined' && window.Element && Element.set) it(\"should return true for Element instances\", function(){",
        "path": "Specs/Core/Core.js",
        "position": null,
        "original_position": 5,
        "commit_id": "39ffbc52d0b496d570d64c547ce8ef6b16955c86",
        "original_commit_id": "a61c96d35cdad36dd97908513a3cdec8d42c5e60",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do the `typeof window` check in the `dit` definition?\n",
        "created_at": "2015-08-10T11:01:10Z",
        "updated_at": "2015-08-10T14:24:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2729#discussion_r36620098",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2729",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/36620098"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2729#discussion_r36620098"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2729"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/36620122",
        "pull_request_review_id": null,
        "id": 36620122,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwMTIy",
        "diff_hunk": "@@ -21,6 +26,14 @@ var packagerOptions = {\n         src: ymlPackage.sources,\n         dest: 'mootools-nocompat.js'\n     },\n+\tserver: {",
        "path": "Tests/gruntfile-options.js",
        "position": null,
        "original_position": 16,
        "commit_id": "39ffbc52d0b496d570d64c547ce8ef6b16955c86",
        "original_commit_id": "a61c96d35cdad36dd97908513a3cdec8d42c5e60",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "indentation.\n",
        "created_at": "2015-08-10T11:01:37Z",
        "updated_at": "2015-08-10T14:24:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2729#discussion_r36620122",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2729",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/36620122"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2729#discussion_r36620122"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2729"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/36620391",
        "pull_request_review_id": null,
        "id": 36620391,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwMzkx",
        "diff_hunk": "@@ -30,24 +30,25 @@\n   \"devDependencies\": {\n     \"grunt\": \"~0.4.2\",\n     \"grunt-cli\": \"~0.1.13\",\n-    \"grunt-mootools-packager\": \"^0.1.2\",\n     \"grunt-contrib-clean\": \"~0.5.0\",\n     \"grunt-contrib-connect\": \"~0.7.0\",\n     \"grunt-contrib-uglify\": \"^0.4.0\",\n     \"grunt-karma\": \"~0.8.0\",\n-    \"load-grunt-tasks\": \"~0.4.0\",\n-    \"requirejs\": \"~2.1.11\",\n+    \"grunt-mootools-packager\": \"^0.1.2\",\n+    \"jasmine\": \"^2.3.2\",\n+    \"js-yaml\": \"^3.0.2\",\n     \"karma\": \"~0.12.0\",\n-    \"karma-requirejs\": \"~0.2.1\",\n-    \"karma-jasmine\": \"~0.1.5\",\n-    \"karma-sinon\": \"~1.0.2\",\n-    \"karma-sauce-launcher\": \"~0.2.5\",\n-    \"karma-script-launcher\": \"~0.1.0\",\n-    \"karma-phantomjs-launcher\": \"~0.1.2\",\n     \"karma-chrome-launcher\": \"~0.1.2\",\n     \"karma-firefox-launcher\": \"~0.1.3\",\n     \"karma-ie-launcher\": \"~0.1\",\n+    \"karma-jasmine\": \"~0.1.5\",\n+    \"karma-phantomjs-launcher\": \"~0.1.2\",\n+    \"karma-requirejs\": \"~0.2.1\",\n     \"karma-safari-launcher\": \"~0.1\",\n-    \"js-yaml\": \"^3.0.2\"\n+    \"karma-sauce-launcher\": \"~0.2.5\",\n+    \"karma-script-launcher\": \"~0.1.0\",\n+    \"karma-sinon\": \"~1.0.2\",\n+    \"load-grunt-tasks\": \"~0.4.0\",\n+    \"requirejs\": \"~2.1.11\"",
        "path": "package.json",
        "position": null,
        "original_position": 33,
        "commit_id": "39ffbc52d0b496d570d64c547ce8ef6b16955c86",
        "original_commit_id": "a61c96d35cdad36dd97908513a3cdec8d42c5e60",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why do we need this?\n",
        "created_at": "2015-08-10T11:06:43Z",
        "updated_at": "2015-08-10T14:24:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2729#discussion_r36620391",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2729",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/36620391"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2729#discussion_r36620391"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2729"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/36620522",
        "pull_request_review_id": null,
        "id": 36620522,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwNTIy",
        "diff_hunk": "@@ -6,6 +6,11 @@ var ymlPackage = YAML.safeLoad(fs.readFileSync('package.yml', 'utf8'));\n var travisBuild = process.env.BUILD;\n var travisBrowser = process.env.BROWSER;\n var sauceBrowsers = JSON.parse(fs.readFileSync('Tests/browsers.json'));\n+var serverBuild = {\n+\tmodules: ['Core/Core', 'Core/Array', 'Core/String', 'Core/Number', 'Core/Function', 'Core/Object', 'Core/Class', 'Core/Class.Extras', 'Core/JSON'],\n+\tspecFiles: ['Specs/Core/*.js', 'Specs/Core/*.js', 'Specs/Core/*.js', 'Specs/Core/*.js', 'Specs/Core/*.js'],\n+\tstrip: ['1.2compat', '1.3compat', '1.4compat', '*compat', 'IE', 'ltIE8', 'ltIE9', '!ES5', '!ES5-bind'/*, '!ES6'*/, 'webkit', 'ltFF4']",
        "path": "Tests/gruntfile-options.js",
        "position": null,
        "original_position": 7,
        "commit_id": "39ffbc52d0b496d570d64c547ce8ef6b16955c86",
        "original_commit_id": "a61c96d35cdad36dd97908513a3cdec8d42c5e60",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You just defined this in Tests/dist-tasks.json as well...\n",
        "created_at": "2015-08-10T11:09:21Z",
        "updated_at": "2015-08-10T14:24:25Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2729#discussion_r36620522",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2729",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/36620522"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2729#discussion_r36620522"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2729"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/37705258",
        "pull_request_review_id": null,
        "id": 37705258,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1MjU4",
        "diff_hunk": "@@ -967,25 +968,26 @@ describe('String.uniqueID', function(){\n \n describe('typeOf Client', function(){\n \n-\tit(\"should return 'collection' for HTMLElements collections\", function(){\n+\tvar dit = typeof document == 'undefined' ? xit : it;\n+\tdit(\"should return 'collection' for HTMLElements collections\", function(){\n \t\texpect(typeOf(document.getElementsByTagName('*'))).toEqual('collection');\n \t});\n \n-\tit(\"should return 'element' for an Element\", function(){\n+\tdit(\"should return 'element' for an Element\", function(){\n \t\tvar div = document.createElement('div');\n \t\texpect(typeOf(div)).toEqual('element');\n \t});\n \n \t// todo(ibolmo)\n-\tif (window.Elements) it(\"should return 'elements' for Elements\", function(){\n+\tif (typeof window != 'undefined' && window.Elements) dit(\"should return 'elements' for Elements\", function(){",
        "path": "Specs/Core/Core.js",
        "position": 28,
        "original_position": 28,
        "commit_id": "39ffbc52d0b496d570d64c547ce8ef6b16955c86",
        "original_commit_id": "39ffbc52d0b496d570d64c547ce8ef6b16955c86",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "isn't this `if` included in the `dit` function?\n",
        "created_at": "2015-08-23T12:05:00Z",
        "updated_at": "2015-08-23T12:05:00Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2729#discussion_r37705258",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2729",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/37705258"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2729#discussion_r37705258"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2729"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/37705318",
        "pull_request_review_id": null,
        "id": 37705318,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1MzE4",
        "diff_hunk": "@@ -51,11 +54,21 @@ module.exports = function(grunt) {\n \n \tvar compatBuild = ['clean:specs', 'packager:all', 'packager:specs'];\n \tvar nocompatBuild = ['clean:specs', 'packager:nocompat', 'packager:specs-nocompat'];\n-\tvar tasks = options.travis.build == 'default' ? compatBuild : nocompatBuild;\n-\ttasks = usePhantom ? tasks.concat('karma:continuous') : tasks.concat('karma:sauceTask');\n+\tvar serverBuild = ['clean:specs', 'packager:server', 'packager:specs-server'];\n+\n+\tvar tasks = options.travis.build == 'default' ? compatBuild : options.travis.build == 'server' ? serverBuild : nocompatBuild;\n+\ttasks = options.travis.build == 'server' ? tasks.concat('server-jasmine-runner') : usePhantom ? tasks.concat('karma:continuous') : tasks.concat('karma:sauceTask');\n+\n+\t// to run only server specs and avoid running browser specs for in the different versions of node and iojs\n+\tif (options.travis.build && options.travis.build != 'server' && process.version.slice(1, 5) != '0.10') tasks = [];",
        "path": "Gruntfile.js",
        "position": 31,
        "original_position": 31,
        "commit_id": "39ffbc52d0b496d570d64c547ce8ef6b16955c86",
        "original_commit_id": "39ffbc52d0b496d570d64c547ce8ef6b16955c86",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2015-08-23T12:19:29Z",
        "updated_at": "2015-08-23T12:19:29Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2729#discussion_r37705318",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2729",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/37705318"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2729#discussion_r37705318"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2729"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/41543413",
        "pull_request_review_id": null,
        "id": 41543413,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQzNDEz",
        "diff_hunk": "@@ -0,0 +1,222 @@\n+/*\n+---\n+\n+name: Class.Thenable\n+\n+description: Contains a Utility Class that can be implemented into your own Classes to make them \"thenable\".\n+\n+license: MIT-style license.\n+\n+requires: Class\n+\n+provides: [Class.Thenable]\n+\n+...\n+*/\n+\n+(function(){\n+\n+var STATE_PENDING = 0,\n+\tSTATE_FULFILLED = 1,\n+\tSTATE_REJECTED = 2;\n+\n+var Thenable = Class.Thenable = new Class({\n+\n+\t$thenableState: STATE_PENDING,\n+\t$thenableResult: null,\n+\t$thenableReactions: [],\n+\n+\tresolve: function(value){\n+\t\tresolve(this, value);\n+\t\treturn this;\n+\t},\n+\n+\treject: function(reason){\n+\t\treject(this, reason);\n+\t\treturn this;\n+\t},\n+\n+\tgetThenableState: function(){\n+\t\tswitch (this.$thenableState){\n+\t\t\tcase STATE_PENDING:\n+\t\t\t\treturn 'pending';\n+\n+\t\t\tcase STATE_FULFILLED:\n+\t\t\t\treturn 'fulfilled';\n+\n+\t\t\tcase STATE_REJECTED:\n+\t\t\t\treturn 'rejected';\n+\t\t}\n+\t},\n+\n+\tresetThenable: function(reason){\n+\t\treject(this, reason);\n+\t\treset(this);\n+\t\treturn this;\n+\t},\n+\n+\tthen: function(onFulfilled, onRejected){\n+\t\tif (typeof onFulfilled !== 'function') onFulfilled = 'Identity';\n+\t\tif (typeof onRejected !== 'function') onRejected = 'Thrower';\n+\n+\t\tvar thenable = new Thenable();\n+\n+\t\tthis.$thenableReactions.push({\n+\t\t\tthenable: thenable,\n+\t\t\tfulfillHandler: onFulfilled,\n+\t\t\trejectHandler: onRejected\n+\t\t});\n+\n+\t\tif (this.$thenableState !== STATE_PENDING){\n+\t\t\treact(this);\n+\t\t}\n+\n+\t\treturn thenable;\n+\t},\n+\n+\t'catch': function(onRejected){\n+\t\treturn this.then(null, onRejected);\n+\t}\n+\n+});\n+\n+Thenable.extend({\n+\tresolve: function(value){\n+\t\tvar thenable;\n+\t\tif (value instanceof Thenable){\n+\t\t\tthenable = value;\n+\t\t} else {\n+\t\t\tthenable = new Thenable();\n+\t\t\tresolve(thenable, value);\n+\t\t}\n+\t\treturn thenable;\n+\t},\n+\treject: function(reason){\n+\t\tvar thenable = new Thenable();\n+\t\treject(thenable, reason);\n+\t\treturn thenable;\n+\t}\n+});\n+\n+// Private functions\n+\n+function resolve(thenable, value){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tif (thenable === value){\n+\t\t\treject(thenable, new TypeError('Tried to resolve a thenable with itself.'));\n+\t\t} else if (value && (typeof value === 'object' || typeof value === 'function')){\n+\t\t\ttry {\n+\t\t\t\tvar then = value.then;\n+\t\t\t} catch (exception){\n+\t\t\t\treject(thenable, exception);\n+\t\t\t}\n+\t\t\tif (typeof then === 'function'){\n+\t\t\t\tvar resolved = false;\n+\t\t\t\tdefer(function(){\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tthen.call(\n+\t\t\t\t\t\t\tvalue,\n+\t\t\t\t\t\t\tfunction(nextValue){\n+\t\t\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\t\t\tresolve(thenable, nextValue);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfunction(reason){\n+\t\t\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\t\t\treject(thenable, reason);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t);\n+\t\t\t\t\t} catch (exception) {\n+\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\treject(thenable, exception);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t} else {\n+\t\t\t\tfulfill(thenable, value);\n+\t\t\t}\n+\t\t} else {\n+\t\t\tfulfill(thenable, value);\n+\t\t}\n+\t}\n+}\n+\n+function fulfill(thenable, value){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tthenable.$thenableResult = value;\n+\t\tthenable.$thenableState = STATE_FULFILLED;\n+\n+\t\treact(thenable);\n+\t}\n+}\n+\n+function reject(thenable, reason){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tthenable.$thenableResult = reason;\n+\t\tthenable.$thenableState = STATE_REJECTED;\n+\n+\t\treact(thenable);\n+\t}\n+}\n+\n+function reset(thenable){\n+\tif (thenable.$thenableState !== STATE_PENDING){\n+\t\tthenable.$thenableResult = null;\n+\t\tthenable.$thenableState = STATE_PENDING;\n+\t}\n+}\n+\n+function react(thenable){\n+\tvar state = thenable.$thenableState,\n+\t\tresult = thenable.$thenableResult,\n+\t\treactions = thenable.$thenableReactions,\n+\t\ttype;\n+\n+\tif (state === STATE_FULFILLED){\n+\t\tthenable.$thenableReactions = [];\n+\t\ttype = 'fulfillHandler';\n+\t} else if (state == STATE_REJECTED){\n+\t\tthenable.$thenableReactions = [];\n+\t\ttype = 'rejectHandler';\n+\t}\n+\n+\tif (type){\n+\t\tdefer(handle.pass([result, reactions, type]));\n+\t}\n+}\n+\n+function handle(result, reactions, type){\n+\tfor (var i = 0, l = reactions.length; i < l; ++i){\n+\t\tvar reaction = reactions[i],\n+\t\t\thandler = reaction[type];\n+\n+\t\tif (handler === 'Identity'){\n+\t\t\tresolve(reaction.thenable, result);\n+\t\t} else if (handler === 'Thrower'){\n+\t\t\treject(reaction.thenable, result);\n+\t\t} else {\n+\t\t\ttry {\n+\t\t\t\tresolve(reaction.thenable, handler(result));\n+\t\t\t} catch (exception) {\n+\t\t\t\treject(reaction.thenable, exception);\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+var defer;\n+if (typeof process !== 'undefined' && typeof process.nextTick === 'function'){\n+\tdefer = process.nextTick;\n+} else if (typeof setImmediate !== 'undefined'){\n+\tdefer = setImmediate;\n+} else {\n+\tdefer = function(fn){\n+\t\tsetTimeout(fn, 0);\n+\t}",
        "path": "Source/Class/Class.Thenable.js",
        "position": null,
        "original_position": 219,
        "commit_id": "aedca5797792b1e6185d359db89f08081e3a471a",
        "original_commit_id": "0d0c73bd3f18b0ecff50d1f3ea9c67b96a672fe0",
        "user": {
            "login": "anutron",
            "id": 13230,
            "node_id": "MDQ6VXNlcjEzMjMw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anutron",
            "html_url": "https://github.com/anutron",
            "followers_url": "https://api.github.com/users/anutron/followers",
            "following_url": "https://api.github.com/users/anutron/following{/other_user}",
            "gists_url": "https://api.github.com/users/anutron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anutron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anutron/subscriptions",
            "organizations_url": "https://api.github.com/users/anutron/orgs",
            "repos_url": "https://api.github.com/users/anutron/repos",
            "events_url": "https://api.github.com/users/anutron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anutron/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`;`\n\n/shrug\n",
        "created_at": "2015-10-08T17:36:10Z",
        "updated_at": "2015-10-08T20:36:16Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2743#discussion_r41543413",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2743",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/41543413"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2743#discussion_r41543413"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2743"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/41545102",
        "pull_request_review_id": null,
        "id": 41545102,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ1MTAy",
        "diff_hunk": "@@ -0,0 +1,222 @@\n+/*\n+---\n+\n+name: Class.Thenable\n+\n+description: Contains a Utility Class that can be implemented into your own Classes to make them \"thenable\".\n+\n+license: MIT-style license.\n+\n+requires: Class\n+\n+provides: [Class.Thenable]\n+\n+...\n+*/\n+\n+(function(){\n+\n+var STATE_PENDING = 0,\n+\tSTATE_FULFILLED = 1,\n+\tSTATE_REJECTED = 2;\n+\n+var Thenable = Class.Thenable = new Class({\n+\n+\t$thenableState: STATE_PENDING,\n+\t$thenableResult: null,\n+\t$thenableReactions: [],\n+\n+\tresolve: function(value){\n+\t\tresolve(this, value);\n+\t\treturn this;\n+\t},\n+\n+\treject: function(reason){\n+\t\treject(this, reason);\n+\t\treturn this;\n+\t},\n+\n+\tgetThenableState: function(){\n+\t\tswitch (this.$thenableState){\n+\t\t\tcase STATE_PENDING:\n+\t\t\t\treturn 'pending';\n+\n+\t\t\tcase STATE_FULFILLED:\n+\t\t\t\treturn 'fulfilled';\n+\n+\t\t\tcase STATE_REJECTED:\n+\t\t\t\treturn 'rejected';\n+\t\t}\n+\t},\n+\n+\tresetThenable: function(reason){\n+\t\treject(this, reason);\n+\t\treset(this);\n+\t\treturn this;\n+\t},\n+\n+\tthen: function(onFulfilled, onRejected){\n+\t\tif (typeof onFulfilled !== 'function') onFulfilled = 'Identity';\n+\t\tif (typeof onRejected !== 'function') onRejected = 'Thrower';\n+\n+\t\tvar thenable = new Thenable();\n+\n+\t\tthis.$thenableReactions.push({\n+\t\t\tthenable: thenable,\n+\t\t\tfulfillHandler: onFulfilled,\n+\t\t\trejectHandler: onRejected\n+\t\t});\n+\n+\t\tif (this.$thenableState !== STATE_PENDING){\n+\t\t\treact(this);\n+\t\t}\n+\n+\t\treturn thenable;\n+\t},\n+\n+\t'catch': function(onRejected){\n+\t\treturn this.then(null, onRejected);\n+\t}\n+\n+});\n+\n+Thenable.extend({\n+\tresolve: function(value){\n+\t\tvar thenable;\n+\t\tif (value instanceof Thenable){\n+\t\t\tthenable = value;\n+\t\t} else {\n+\t\t\tthenable = new Thenable();\n+\t\t\tresolve(thenable, value);\n+\t\t}\n+\t\treturn thenable;\n+\t},\n+\treject: function(reason){\n+\t\tvar thenable = new Thenable();\n+\t\treject(thenable, reason);\n+\t\treturn thenable;\n+\t}\n+});\n+\n+// Private functions\n+\n+function resolve(thenable, value){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tif (thenable === value){\n+\t\t\treject(thenable, new TypeError('Tried to resolve a thenable with itself.'));\n+\t\t} else if (value && (typeof value === 'object' || typeof value === 'function')){\n+\t\t\ttry {\n+\t\t\t\tvar then = value.then;\n+\t\t\t} catch (exception){\n+\t\t\t\treject(thenable, exception);\n+\t\t\t}\n+\t\t\tif (typeof then === 'function'){\n+\t\t\t\tvar resolved = false;\n+\t\t\t\tdefer(function(){\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tthen.call(\n+\t\t\t\t\t\t\tvalue,\n+\t\t\t\t\t\t\tfunction(nextValue){\n+\t\t\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\t\t\tresolve(thenable, nextValue);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfunction(reason){\n+\t\t\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\t\t\treject(thenable, reason);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t);\n+\t\t\t\t\t} catch (exception) {\n+\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\treject(thenable, exception);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t} else {\n+\t\t\t\tfulfill(thenable, value);\n+\t\t\t}\n+\t\t} else {\n+\t\t\tfulfill(thenable, value);\n+\t\t}\n+\t}\n+}\n+\n+function fulfill(thenable, value){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tthenable.$thenableResult = value;\n+\t\tthenable.$thenableState = STATE_FULFILLED;\n+\n+\t\treact(thenable);\n+\t}\n+}\n+\n+function reject(thenable, reason){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tthenable.$thenableResult = reason;\n+\t\tthenable.$thenableState = STATE_REJECTED;\n+\n+\t\treact(thenable);\n+\t}\n+}\n+\n+function reset(thenable){\n+\tif (thenable.$thenableState !== STATE_PENDING){\n+\t\tthenable.$thenableResult = null;\n+\t\tthenable.$thenableState = STATE_PENDING;\n+\t}\n+}\n+\n+function react(thenable){\n+\tvar state = thenable.$thenableState,\n+\t\tresult = thenable.$thenableResult,\n+\t\treactions = thenable.$thenableReactions,\n+\t\ttype;\n+\n+\tif (state === STATE_FULFILLED){\n+\t\tthenable.$thenableReactions = [];\n+\t\ttype = 'fulfillHandler';\n+\t} else if (state == STATE_REJECTED){\n+\t\tthenable.$thenableReactions = [];\n+\t\ttype = 'rejectHandler';\n+\t}\n+\n+\tif (type){\n+\t\tdefer(handle.pass([result, reactions, type]));\n+\t}\n+}\n+\n+function handle(result, reactions, type){\n+\tfor (var i = 0, l = reactions.length; i < l; ++i){\n+\t\tvar reaction = reactions[i],\n+\t\t\thandler = reaction[type];\n+\n+\t\tif (handler === 'Identity'){\n+\t\t\tresolve(reaction.thenable, result);\n+\t\t} else if (handler === 'Thrower'){\n+\t\t\treject(reaction.thenable, result);\n+\t\t} else {\n+\t\t\ttry {\n+\t\t\t\tresolve(reaction.thenable, handler(result));\n+\t\t\t} catch (exception) {\n+\t\t\t\treject(reaction.thenable, exception);\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+var defer;\n+if (typeof process !== 'undefined' && typeof process.nextTick === 'function'){\n+\tdefer = process.nextTick;\n+} else if (typeof setImmediate !== 'undefined'){\n+\tdefer = setImmediate;\n+} else {\n+\tdefer = function(fn){\n+\t\tsetTimeout(fn, 0);\n+\t}",
        "path": "Source/Class/Class.Thenable.js",
        "position": null,
        "original_position": 219,
        "commit_id": "aedca5797792b1e6185d359db89f08081e3a471a",
        "original_commit_id": "0d0c73bd3f18b0ecff50d1f3ea9c67b96a672fe0",
        "user": {
            "login": "timwienk",
            "id": 150598,
            "node_id": "MDQ6VXNlcjE1MDU5OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/150598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timwienk",
            "html_url": "https://github.com/timwienk",
            "followers_url": "https://api.github.com/users/timwienk/followers",
            "following_url": "https://api.github.com/users/timwienk/following{/other_user}",
            "gists_url": "https://api.github.com/users/timwienk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timwienk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timwienk/subscriptions",
            "organizations_url": "https://api.github.com/users/timwienk/orgs",
            "repos_url": "https://api.github.com/users/timwienk/repos",
            "events_url": "https://api.github.com/users/timwienk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timwienk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks!\n",
        "created_at": "2015-10-08T17:50:38Z",
        "updated_at": "2015-10-08T20:36:16Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2743#discussion_r41545102",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2743",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/41545102"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2743#discussion_r41545102"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2743"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/41547839",
        "pull_request_review_id": null,
        "id": 41547839,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ3ODM5",
        "diff_hunk": "@@ -0,0 +1,222 @@\n+/*\n+---\n+\n+name: Class.Thenable\n+\n+description: Contains a Utility Class that can be implemented into your own Classes to make them \"thenable\".\n+\n+license: MIT-style license.\n+\n+requires: Class\n+\n+provides: [Class.Thenable]\n+\n+...\n+*/\n+\n+(function(){\n+\n+var STATE_PENDING = 0,\n+\tSTATE_FULFILLED = 1,\n+\tSTATE_REJECTED = 2;\n+\n+var Thenable = Class.Thenable = new Class({\n+\n+\t$thenableState: STATE_PENDING,\n+\t$thenableResult: null,\n+\t$thenableReactions: [],\n+\n+\tresolve: function(value){\n+\t\tresolve(this, value);\n+\t\treturn this;\n+\t},\n+\n+\treject: function(reason){\n+\t\treject(this, reason);\n+\t\treturn this;\n+\t},\n+\n+\tgetThenableState: function(){\n+\t\tswitch (this.$thenableState){\n+\t\t\tcase STATE_PENDING:\n+\t\t\t\treturn 'pending';\n+\n+\t\t\tcase STATE_FULFILLED:\n+\t\t\t\treturn 'fulfilled';\n+\n+\t\t\tcase STATE_REJECTED:\n+\t\t\t\treturn 'rejected';\n+\t\t}\n+\t},\n+\n+\tresetThenable: function(reason){\n+\t\treject(this, reason);\n+\t\treset(this);\n+\t\treturn this;\n+\t},\n+\n+\tthen: function(onFulfilled, onRejected){\n+\t\tif (typeof onFulfilled !== 'function') onFulfilled = 'Identity';\n+\t\tif (typeof onRejected !== 'function') onRejected = 'Thrower';\n+\n+\t\tvar thenable = new Thenable();\n+\n+\t\tthis.$thenableReactions.push({\n+\t\t\tthenable: thenable,\n+\t\t\tfulfillHandler: onFulfilled,\n+\t\t\trejectHandler: onRejected\n+\t\t});\n+\n+\t\tif (this.$thenableState !== STATE_PENDING){\n+\t\t\treact(this);\n+\t\t}\n+\n+\t\treturn thenable;\n+\t},\n+\n+\t'catch': function(onRejected){\n+\t\treturn this.then(null, onRejected);\n+\t}\n+\n+});\n+\n+Thenable.extend({\n+\tresolve: function(value){\n+\t\tvar thenable;\n+\t\tif (value instanceof Thenable){\n+\t\t\tthenable = value;\n+\t\t} else {\n+\t\t\tthenable = new Thenable();\n+\t\t\tresolve(thenable, value);\n+\t\t}\n+\t\treturn thenable;\n+\t},\n+\treject: function(reason){\n+\t\tvar thenable = new Thenable();\n+\t\treject(thenable, reason);\n+\t\treturn thenable;\n+\t}\n+});\n+\n+// Private functions\n+\n+function resolve(thenable, value){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tif (thenable === value){\n+\t\t\treject(thenable, new TypeError('Tried to resolve a thenable with itself.'));\n+\t\t} else if (value && (typeof value === 'object' || typeof value === 'function')){\n+\t\t\ttry {\n+\t\t\t\tvar then = value.then;\n+\t\t\t} catch (exception){\n+\t\t\t\treject(thenable, exception);\n+\t\t\t}\n+\t\t\tif (typeof then === 'function'){\n+\t\t\t\tvar resolved = false;\n+\t\t\t\tdefer(function(){\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tthen.call(\n+\t\t\t\t\t\t\tvalue,\n+\t\t\t\t\t\t\tfunction(nextValue){\n+\t\t\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\t\t\tresolve(thenable, nextValue);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfunction(reason){\n+\t\t\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\t\t\treject(thenable, reason);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t);\n+\t\t\t\t\t} catch (exception) {\n+\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\treject(thenable, exception);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t} else {\n+\t\t\t\tfulfill(thenable, value);\n+\t\t\t}\n+\t\t} else {\n+\t\t\tfulfill(thenable, value);\n+\t\t}\n+\t}\n+}\n+\n+function fulfill(thenable, value){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tthenable.$thenableResult = value;\n+\t\tthenable.$thenableState = STATE_FULFILLED;\n+\n+\t\treact(thenable);\n+\t}\n+}\n+\n+function reject(thenable, reason){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tthenable.$thenableResult = reason;\n+\t\tthenable.$thenableState = STATE_REJECTED;\n+\n+\t\treact(thenable);\n+\t}\n+}\n+\n+function reset(thenable){\n+\tif (thenable.$thenableState !== STATE_PENDING){\n+\t\tthenable.$thenableResult = null;\n+\t\tthenable.$thenableState = STATE_PENDING;\n+\t}\n+}\n+\n+function react(thenable){\n+\tvar state = thenable.$thenableState,\n+\t\tresult = thenable.$thenableResult,\n+\t\treactions = thenable.$thenableReactions,\n+\t\ttype;\n+\n+\tif (state === STATE_FULFILLED){\n+\t\tthenable.$thenableReactions = [];\n+\t\ttype = 'fulfillHandler';\n+\t} else if (state == STATE_REJECTED){\n+\t\tthenable.$thenableReactions = [];\n+\t\ttype = 'rejectHandler';\n+\t}\n+\n+\tif (type){\n+\t\tdefer(handle.pass([result, reactions, type]));\n+\t}\n+}\n+\n+function handle(result, reactions, type){\n+\tfor (var i = 0, l = reactions.length; i < l; ++i){\n+\t\tvar reaction = reactions[i],\n+\t\t\thandler = reaction[type];\n+\n+\t\tif (handler === 'Identity'){\n+\t\t\tresolve(reaction.thenable, result);\n+\t\t} else if (handler === 'Thrower'){\n+\t\t\treject(reaction.thenable, result);\n+\t\t} else {\n+\t\t\ttry {\n+\t\t\t\tresolve(reaction.thenable, handler(result));\n+\t\t\t} catch (exception) {\n+\t\t\t\treject(reaction.thenable, exception);\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+var defer;\n+if (typeof process !== 'undefined' && typeof process.nextTick === 'function'){\n+\tdefer = process.nextTick;\n+} else if (typeof setImmediate !== 'undefined'){\n+\tdefer = setImmediate;\n+} else {\n+\tdefer = function(fn){\n+\t\tsetTimeout(fn, 0);\n+\t}",
        "path": "Source/Class/Class.Thenable.js",
        "position": null,
        "original_position": 219,
        "commit_id": "aedca5797792b1e6185d359db89f08081e3a471a",
        "original_commit_id": "0d0c73bd3f18b0ecff50d1f3ea9c67b96a672fe0",
        "user": {
            "login": "timwienk",
            "id": 150598,
            "node_id": "MDQ6VXNlcjE1MDU5OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/150598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timwienk",
            "html_url": "https://github.com/timwienk",
            "followers_url": "https://api.github.com/users/timwienk/followers",
            "following_url": "https://api.github.com/users/timwienk/following{/other_user}",
            "gists_url": "https://api.github.com/users/timwienk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timwienk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timwienk/subscriptions",
            "organizations_url": "https://api.github.com/users/timwienk/orgs",
            "repos_url": "https://api.github.com/users/timwienk/repos",
            "events_url": "https://api.github.com/users/timwienk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timwienk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed and rebased, surely we don't need a commit for a `;`. :+1:\n",
        "created_at": "2015-10-08T18:13:32Z",
        "updated_at": "2015-10-08T20:36:16Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2743#discussion_r41547839",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2743",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/41547839"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2743#discussion_r41547839"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2743"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/41620927",
        "pull_request_review_id": null,
        "id": 41620927,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwOTI3",
        "diff_hunk": "@@ -0,0 +1,222 @@\n+/*\n+---\n+\n+name: Class.Thenable\n+\n+description: Contains a Utility Class that can be implemented into your own Classes to make them \"thenable\".\n+\n+license: MIT-style license.\n+\n+requires: Class\n+\n+provides: [Class.Thenable]\n+\n+...\n+*/\n+\n+(function(){\n+\n+var STATE_PENDING = 0,\n+\tSTATE_FULFILLED = 1,\n+\tSTATE_REJECTED = 2;\n+\n+var Thenable = Class.Thenable = new Class({\n+\n+\t$thenableState: STATE_PENDING,\n+\t$thenableResult: null,\n+\t$thenableReactions: [],\n+\n+\tresolve: function(value){\n+\t\tresolve(this, value);\n+\t\treturn this;\n+\t},\n+\n+\treject: function(reason){\n+\t\treject(this, reason);\n+\t\treturn this;\n+\t},\n+\n+\tgetThenableState: function(){\n+\t\tswitch (this.$thenableState){\n+\t\t\tcase STATE_PENDING:\n+\t\t\t\treturn 'pending';\n+\n+\t\t\tcase STATE_FULFILLED:\n+\t\t\t\treturn 'fulfilled';\n+\n+\t\t\tcase STATE_REJECTED:\n+\t\t\t\treturn 'rejected';\n+\t\t}\n+\t},\n+\n+\tresetThenable: function(reason){\n+\t\treject(this, reason);\n+\t\treset(this);\n+\t\treturn this;\n+\t},\n+\n+\tthen: function(onFulfilled, onRejected){\n+\t\tif (typeof onFulfilled !== 'function') onFulfilled = 'Identity';\n+\t\tif (typeof onRejected !== 'function') onRejected = 'Thrower';\n+\n+\t\tvar thenable = new Thenable();\n+\n+\t\tthis.$thenableReactions.push({\n+\t\t\tthenable: thenable,\n+\t\t\tfulfillHandler: onFulfilled,\n+\t\t\trejectHandler: onRejected\n+\t\t});\n+\n+\t\tif (this.$thenableState !== STATE_PENDING){\n+\t\t\treact(this);\n+\t\t}\n+\n+\t\treturn thenable;\n+\t},\n+\n+\t'catch': function(onRejected){\n+\t\treturn this.then(null, onRejected);\n+\t}\n+\n+});\n+\n+Thenable.extend({\n+\tresolve: function(value){\n+\t\tvar thenable;\n+\t\tif (value instanceof Thenable){\n+\t\t\tthenable = value;\n+\t\t} else {\n+\t\t\tthenable = new Thenable();\n+\t\t\tresolve(thenable, value);\n+\t\t}\n+\t\treturn thenable;\n+\t},\n+\treject: function(reason){\n+\t\tvar thenable = new Thenable();\n+\t\treject(thenable, reason);\n+\t\treturn thenable;\n+\t}\n+});\n+\n+// Private functions\n+\n+function resolve(thenable, value){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tif (thenable === value){\n+\t\t\treject(thenable, new TypeError('Tried to resolve a thenable with itself.'));\n+\t\t} else if (value && (typeof value === 'object' || typeof value === 'function')){\n+\t\t\ttry {\n+\t\t\t\tvar then = value.then;\n+\t\t\t} catch (exception){\n+\t\t\t\treject(thenable, exception);\n+\t\t\t}\n+\t\t\tif (typeof then === 'function'){\n+\t\t\t\tvar resolved = false;\n+\t\t\t\tdefer(function(){\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tthen.call(\n+\t\t\t\t\t\t\tvalue,\n+\t\t\t\t\t\t\tfunction(nextValue){\n+\t\t\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\t\t\tresolve(thenable, nextValue);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfunction(reason){\n+\t\t\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\t\t\treject(thenable, reason);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t);\n+\t\t\t\t\t} catch (exception) {\n+\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\treject(thenable, exception);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t} else {\n+\t\t\t\tfulfill(thenable, value);\n+\t\t\t}\n+\t\t} else {\n+\t\t\tfulfill(thenable, value);\n+\t\t}\n+\t}\n+}\n+\n+function fulfill(thenable, value){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tthenable.$thenableResult = value;\n+\t\tthenable.$thenableState = STATE_FULFILLED;\n+\n+\t\treact(thenable);\n+\t}\n+}\n+\n+function reject(thenable, reason){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tthenable.$thenableResult = reason;\n+\t\tthenable.$thenableState = STATE_REJECTED;\n+\n+\t\treact(thenable);\n+\t}\n+}\n+\n+function reset(thenable){\n+\tif (thenable.$thenableState !== STATE_PENDING){\n+\t\tthenable.$thenableResult = null;\n+\t\tthenable.$thenableState = STATE_PENDING;\n+\t}\n+}\n+\n+function react(thenable){",
        "path": "Source/Class/Class.Thenable.js",
        "position": 173,
        "original_position": 173,
        "commit_id": "aedca5797792b1e6185d359db89f08081e3a471a",
        "original_commit_id": "aedca5797792b1e6185d359db89f08081e3a471a",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Interesting implementation of _react_ :stuck_out_tongue_winking_eye: \n",
        "created_at": "2015-10-09T11:31:23Z",
        "updated_at": "2015-10-09T11:31:23Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2743#discussion_r41620927",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2743",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/41620927"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2743#discussion_r41620927"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2743"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/41625360",
        "pull_request_review_id": null,
        "id": 41625360,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI1MzYw",
        "diff_hunk": "@@ -0,0 +1,222 @@\n+/*\n+---\n+\n+name: Class.Thenable\n+\n+description: Contains a Utility Class that can be implemented into your own Classes to make them \"thenable\".\n+\n+license: MIT-style license.\n+\n+requires: Class\n+\n+provides: [Class.Thenable]\n+\n+...\n+*/\n+\n+(function(){\n+\n+var STATE_PENDING = 0,\n+\tSTATE_FULFILLED = 1,\n+\tSTATE_REJECTED = 2;\n+\n+var Thenable = Class.Thenable = new Class({\n+\n+\t$thenableState: STATE_PENDING,\n+\t$thenableResult: null,\n+\t$thenableReactions: [],\n+\n+\tresolve: function(value){\n+\t\tresolve(this, value);\n+\t\treturn this;\n+\t},\n+\n+\treject: function(reason){\n+\t\treject(this, reason);\n+\t\treturn this;\n+\t},\n+\n+\tgetThenableState: function(){\n+\t\tswitch (this.$thenableState){\n+\t\t\tcase STATE_PENDING:\n+\t\t\t\treturn 'pending';\n+\n+\t\t\tcase STATE_FULFILLED:\n+\t\t\t\treturn 'fulfilled';\n+\n+\t\t\tcase STATE_REJECTED:\n+\t\t\t\treturn 'rejected';\n+\t\t}\n+\t},\n+\n+\tresetThenable: function(reason){\n+\t\treject(this, reason);\n+\t\treset(this);\n+\t\treturn this;\n+\t},\n+\n+\tthen: function(onFulfilled, onRejected){\n+\t\tif (typeof onFulfilled !== 'function') onFulfilled = 'Identity';\n+\t\tif (typeof onRejected !== 'function') onRejected = 'Thrower';\n+\n+\t\tvar thenable = new Thenable();\n+\n+\t\tthis.$thenableReactions.push({\n+\t\t\tthenable: thenable,\n+\t\t\tfulfillHandler: onFulfilled,\n+\t\t\trejectHandler: onRejected\n+\t\t});\n+\n+\t\tif (this.$thenableState !== STATE_PENDING){\n+\t\t\treact(this);\n+\t\t}\n+\n+\t\treturn thenable;\n+\t},\n+\n+\t'catch': function(onRejected){\n+\t\treturn this.then(null, onRejected);\n+\t}\n+\n+});\n+\n+Thenable.extend({\n+\tresolve: function(value){\n+\t\tvar thenable;\n+\t\tif (value instanceof Thenable){\n+\t\t\tthenable = value;\n+\t\t} else {\n+\t\t\tthenable = new Thenable();\n+\t\t\tresolve(thenable, value);\n+\t\t}\n+\t\treturn thenable;\n+\t},\n+\treject: function(reason){\n+\t\tvar thenable = new Thenable();\n+\t\treject(thenable, reason);\n+\t\treturn thenable;\n+\t}\n+});\n+\n+// Private functions\n+\n+function resolve(thenable, value){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tif (thenable === value){\n+\t\t\treject(thenable, new TypeError('Tried to resolve a thenable with itself.'));\n+\t\t} else if (value && (typeof value === 'object' || typeof value === 'function')){\n+\t\t\ttry {\n+\t\t\t\tvar then = value.then;\n+\t\t\t} catch (exception){\n+\t\t\t\treject(thenable, exception);\n+\t\t\t}\n+\t\t\tif (typeof then === 'function'){\n+\t\t\t\tvar resolved = false;\n+\t\t\t\tdefer(function(){\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tthen.call(\n+\t\t\t\t\t\t\tvalue,\n+\t\t\t\t\t\t\tfunction(nextValue){\n+\t\t\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\t\t\tresolve(thenable, nextValue);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfunction(reason){\n+\t\t\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\t\t\treject(thenable, reason);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t);\n+\t\t\t\t\t} catch (exception) {\n+\t\t\t\t\t\tif (!resolved){\n+\t\t\t\t\t\t\tresolved = true;\n+\t\t\t\t\t\t\treject(thenable, exception);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t} else {\n+\t\t\t\tfulfill(thenable, value);\n+\t\t\t}\n+\t\t} else {\n+\t\t\tfulfill(thenable, value);\n+\t\t}\n+\t}\n+}\n+\n+function fulfill(thenable, value){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tthenable.$thenableResult = value;\n+\t\tthenable.$thenableState = STATE_FULFILLED;\n+\n+\t\treact(thenable);\n+\t}\n+}\n+\n+function reject(thenable, reason){\n+\tif (thenable.$thenableState === STATE_PENDING){\n+\t\tthenable.$thenableResult = reason;\n+\t\tthenable.$thenableState = STATE_REJECTED;\n+\n+\t\treact(thenable);\n+\t}\n+}\n+\n+function reset(thenable){\n+\tif (thenable.$thenableState !== STATE_PENDING){\n+\t\tthenable.$thenableResult = null;\n+\t\tthenable.$thenableState = STATE_PENDING;\n+\t}\n+}\n+\n+function react(thenable){",
        "path": "Source/Class/Class.Thenable.js",
        "position": 173,
        "original_position": 173,
        "commit_id": "aedca5797792b1e6185d359db89f08081e3a471a",
        "original_commit_id": "aedca5797792b1e6185d359db89f08081e3a471a",
        "user": {
            "login": "timwienk",
            "id": 150598,
            "node_id": "MDQ6VXNlcjE1MDU5OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/150598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timwienk",
            "html_url": "https://github.com/timwienk",
            "followers_url": "https://api.github.com/users/timwienk/followers",
            "following_url": "https://api.github.com/users/timwienk/following{/other_user}",
            "gists_url": "https://api.github.com/users/timwienk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timwienk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timwienk/subscriptions",
            "organizations_url": "https://api.github.com/users/timwienk/orgs",
            "repos_url": "https://api.github.com/users/timwienk/repos",
            "events_url": "https://api.github.com/users/timwienk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timwienk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":laughing:\n\nFor reference, the terminology is based on the [ES spec](http://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects), except slightly shorter named. This specific function basically implements [TriggerPromiseReactions](http://www.ecma-international.org/ecma-262/6.0/#sec-triggerpromisereactions), but naming it \"react\" seemed clear enough to me.\n",
        "created_at": "2015-10-09T12:40:33Z",
        "updated_at": "2015-10-09T12:42:02Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2743#discussion_r41625360",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2743",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/41625360"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2743#discussion_r41625360"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2743"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/46414865",
        "pull_request_review_id": null,
        "id": 46414865,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE0ODY1",
        "diff_hunk": "@@ -278,7 +278,7 @@ force('String', String, [\n \t'charAt', 'charCodeAt', 'concat', 'contains', 'indexOf', 'lastIndexOf', 'match', 'quote', 'replace', 'search',\n \t'slice', 'split', 'substr', 'substring', 'trim', 'toLowerCase', 'toUpperCase'\n ])('Array', Array, [\n-\t'pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift', 'concat', 'join', 'slice',\n+\t'pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift', 'concat', 'join', 'slice', 'from',",
        "path": "Source/Core/Core.js",
        "position": null,
        "original_position": 14,
        "commit_id": "d33af9b93618a9e93cd97f428bbd664a4983f58a",
        "original_commit_id": "587081581482e0cdad3f1452d54788ddace2ab45",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Aren't those only for the Array.prototype?\n",
        "created_at": "2015-12-02T13:45:40Z",
        "updated_at": "2015-12-08T21:29:08Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2758#discussion_r46414865",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2758",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/46414865"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2758#discussion_r46414865"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2758"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/46414967",
        "pull_request_review_id": null,
        "id": 46414967,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE0OTY3",
        "diff_hunk": "@@ -294,9 +294,76 @@ force('String', String, [\n \n Object.extend = extend.overloadSetter();\n \n+/*<!ES5>*/\n Date.extend('now', function(){\n \treturn +(new Date);\n });\n+/*</!ES5>*/\n+\n+/*<!ES6>*/\n+// Production steps of ECMA-262, Edition 6, 22.1.2.1\n+// Reference: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from\n+// MDN's implementation:\n+Array.extend('from', (function(){\n+\tvar toStr = Object.prototype.toString;\n+\tvar isCallable = function(fn){\n+\t\treturn typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n+\t};\n+\tvar toInteger = function(value){\n+\t\tvar number = Number(value);\n+\t\tif (isNaN(number)){\n+\t\t\treturn 0;\n+\t\t}\n+\t\tif (number === 0 || !isFinite(number)){\n+\t\t\treturn number;\n+\t\t}\n+\t\treturn (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n+\t};\n+\tvar maxSafeInteger = Math.pow(2, 53) - 1;\n+\tvar toLength = function(value){\n+\t\tvar len = toInteger(value);\n+\t\treturn Math.min(Math.max(len, 0), maxSafeInteger);\n+\t};\n+\n+\treturn function from(arrayLike /*, mapFn, thisArg */ ){\n+\t\tvar C = this;\n+\t\tvar items = Object(arrayLike);\n+\t\tif (arrayLike == null){\n+\t\t\tthrow new TypeError('Array.from requires an array-like object - not null or undefined');\n+\t\t}\n+\t\tvar mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n+\t\tvar T;\n+\t\tif (typeof mapFn !== 'undefined'){\n+\t\t\tif (!isCallable(mapFn)){\n+\t\t\t\tthrow new TypeError('Array.from: when provided, the second argument must be a function');\n+\t\t\t}\n+\n+\t\t\tif (arguments.length > 2){\n+\t\t\t\tT = arguments[2];\n+\t\t\t}\n+\t\t}\n+\t\tvar len = toLength(items.length);\n+\t\tvar A = isCallable(C) ? Object(new C(len)) : new Array(len);\n+\t\tvar k = 0;\n+\t\tvar kValue;\n+\t\twhile (k < len){\n+\t\t\tkValue = items[k];\n+\t\t\tif (mapFn){\n+\t\t\t\tA[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n+\t\t\t} else {\n+\t\t\t\tA[k] = kValue;\n+\t\t\t}\n+\t\t\tk += 1;\n+\t\t}\n+\t\tA.length = len;\n+\t\treturn A;\n+\t};\n+})());\n+/*</!ES6>*/\n+\n+/*<1.6compat>*/",
        "path": "Source/Core/Core.js",
        "position": null,
        "original_position": 89,
        "commit_id": "d33af9b93618a9e93cd97f428bbd664a4983f58a",
        "original_commit_id": "587081581482e0cdad3f1452d54788ddace2ab45",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That should be 1.5 compat right?\n",
        "created_at": "2015-12-02T13:46:20Z",
        "updated_at": "2015-12-08T21:29:08Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2758#discussion_r46414967",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2758",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/46414967"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2758#discussion_r46414967"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2758"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/47015206",
        "pull_request_review_id": null,
        "id": 47015206,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1MjA2",
        "diff_hunk": "@@ -778,11 +774,28 @@ Converts an RGB color value to hexadecimal. Input array must be in one of the fo\n - [String:rgbToHex][]\n \n \n+Deprecated Functions {#Deprecated-Functions}\n+============================================\n+\n+Function: Array.from {#Deprecated-Functions:Array:Array:from}\n+----------------------------------\n+\n+This method has been deprecated in MooTools 1.6, please use *[Array:convert][]* instead. \n+For backwards compatibility you can use the _compat layer_ that still uses the old implementation, overriding the Native ES6 implementation. \n+Please use instead _no compat_ version, unless you know why you have to use the _compat layer_.",
        "path": "Docs/Types/Array.md",
        "position": null,
        "original_position": 51,
        "commit_id": "d33af9b93618a9e93cd97f428bbd664a4983f58a",
        "original_commit_id": "4442799ef2d77837cae30db179bb7e7cf13b3845",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Doesn't read nicely?\n\n> Please use the _no compat_ version instead, unless ...\n",
        "created_at": "2015-12-08T21:20:56Z",
        "updated_at": "2015-12-08T21:29:08Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2758#discussion_r47015206",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2758",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/47015206"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2758#discussion_r47015206"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2758"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/47015282",
        "pull_request_review_id": null,
        "id": 47015282,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1Mjgy",
        "diff_hunk": "@@ -118,6 +118,11 @@ Function.prototype.implement = function(key, value){\n \tthis.prototype[key] = value;\n }.overloadSetter();\n \n+Array.convert = function(item){",
        "path": "Source/Core/Core.js",
        "position": null,
        "original_position": 4,
        "commit_id": "d33af9b93618a9e93cd97f428bbd664a4983f58a",
        "original_commit_id": "4442799ef2d77837cae30db179bb7e7cf13b3845",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nicer to move _below_ the `slice` declaration.\n",
        "created_at": "2015-12-08T21:21:31Z",
        "updated_at": "2015-12-08T21:29:08Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2758#discussion_r47015282",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2758",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/47015282"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2758#discussion_r47015282"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2758"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/664910",
        "pull_request_review_id": null,
        "id": 664910,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDkxMA==",
        "diff_hunk": "@@ -198,7 +198,19 @@ if (object[1] == 1) Elements.implement('splice', function(){\n }.protect());\n \n Array.forEachMethod(function(method, name){\n-\tElements.implement(name, method);\n+\tvar wrap;\n+\t\n+\tif(name in {map:1,splice:1,slice:1,clone:1}){\n+\t\twrap = function(){\n+\t\t\tvar result = method.apply(this, arguments);\n+\t\t\tif(typeOf(result) == 'array' && result.every(function(el){return typeOf(el) == 'element';})){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 10,
        "commit_id": "3f0a91d76492676e32b50b53fc4303c8f03b5d2e",
        "original_commit_id": "6567fa25f005875b14bb0573ed90761cab408d57",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In which cases do splice, slice and clone not return an array of elements? In that case you can skip this check (which could slow things down).\n",
        "created_at": "2012-04-10T12:19:49Z",
        "updated_at": "2017-08-24T10:09:07Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2346#discussion_r664910",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/664910"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2346#discussion_r664910"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/664915",
        "pull_request_review_id": null,
        "id": 664915,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDkxNQ==",
        "diff_hunk": "@@ -198,7 +198,19 @@ if (object[1] == 1) Elements.implement('splice', function(){\n }.protect());\n \n Array.forEachMethod(function(method, name){\n-\tElements.implement(name, method);\n+\tvar wrap;\n+\t\n+\tif(name in {map:1,splice:1,slice:1,clone:1}){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 7,
        "commit_id": "3f0a91d76492676e32b50b53fc4303c8f03b5d2e",
        "original_commit_id": "6567fa25f005875b14bb0573ed90761cab408d57",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd prefer `({map: 1, \u2026})[name]`. \n",
        "created_at": "2012-04-10T12:20:35Z",
        "updated_at": "2017-08-24T10:09:07Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2346#discussion_r664915",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/664915"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2346#discussion_r664915"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/664925",
        "pull_request_review_id": null,
        "id": 664925,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDkyNQ==",
        "diff_hunk": "@@ -198,7 +198,19 @@ if (object[1] == 1) Elements.implement('splice', function(){\n }.protect());\n \n Array.forEachMethod(function(method, name){\n-\tElements.implement(name, method);\n+\tvar wrap;\n+\t\n+\tif(name in {map:1,splice:1,slice:1,clone:1}){\n+\t\twrap = function(){\n+\t\t\tvar result = method.apply(this, arguments);\n+\t\t\tif(typeOf(result) == 'array' && result.every(function(el){return typeOf(el) == 'element';})){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 10,
        "commit_id": "3f0a91d76492676e32b50b53fc4303c8f03b5d2e",
        "original_commit_id": "6567fa25f005875b14bb0573ed90761cab408d57",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "when doesn't it return an array with those methods?\n",
        "created_at": "2012-04-10T12:23:39Z",
        "updated_at": "2017-08-24T10:09:07Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2346#discussion_r664925",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/664925"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2346#discussion_r664925"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/665908",
        "pull_request_review_id": null,
        "id": 665908,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTkwOA==",
        "diff_hunk": "@@ -198,7 +198,19 @@ if (object[1] == 1) Elements.implement('splice', function(){\n }.protect());\n \n Array.forEachMethod(function(method, name){\n-\tElements.implement(name, method);\n+\tvar wrap;\n+\t\n+\tif(name in {map:1,splice:1,slice:1,clone:1}){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 7,
        "commit_id": "3f0a91d76492676e32b50b53fc4303c8f03b5d2e",
        "original_commit_id": "6567fa25f005875b14bb0573ed90761cab408d57",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "normally I use the in form because on IE, with external object (ActiveX) sometimes just accessing a property or a method can throw an error, since in just check for existence without really access the object it doesn't throw any error, and is just a little faster, in this case I can safely switch to your notation.\n",
        "created_at": "2012-04-10T15:36:08Z",
        "updated_at": "2017-08-24T10:09:07Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2346#discussion_r665908",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/665908"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2346#discussion_r665908"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/665922",
        "pull_request_review_id": null,
        "id": 665922,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTkyMg==",
        "diff_hunk": "@@ -198,7 +198,19 @@ if (object[1] == 1) Elements.implement('splice', function(){\n }.protect());\n \n Array.forEachMethod(function(method, name){\n-\tElements.implement(name, method);\n+\tvar wrap;\n+\t\n+\tif(name in {map:1,splice:1,slice:1,clone:1}){\n+\t\twrap = function(){\n+\t\t\tvar result = method.apply(this, arguments);\n+\t\t\tif(typeOf(result) == 'array' && result.every(function(el){return typeOf(el) == 'element';})){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 10,
        "commit_id": "3f0a91d76492676e32b50b53fc4303c8f03b5d2e",
        "original_commit_id": "6567fa25f005875b14bb0573ed90761cab408d57",
        "user": {
            "login": "kentaromiura",
            "id": 87300,
            "node_id": "MDQ6VXNlcjg3MzAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/87300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentaromiura",
            "html_url": "https://github.com/kentaromiura",
            "followers_url": "https://api.github.com/users/kentaromiura/followers",
            "following_url": "https://api.github.com/users/kentaromiura/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentaromiura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentaromiura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentaromiura/subscriptions",
            "organizations_url": "https://api.github.com/users/kentaromiura/orgs",
            "repos_url": "https://api.github.com/users/kentaromiura/repos",
            "events_url": "https://api.github.com/users/kentaromiura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentaromiura/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "my fault, that checks were to let me test the other Array methods, they can safely be removed now\n",
        "created_at": "2012-04-10T15:38:11Z",
        "updated_at": "2017-08-24T10:09:07Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2346#discussion_r665922",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/665922"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2346#discussion_r665922"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/665958",
        "pull_request_review_id": null,
        "id": 665958,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTk1OA==",
        "diff_hunk": "@@ -198,7 +198,19 @@ if (object[1] == 1) Elements.implement('splice', function(){\n }.protect());\n \n Array.forEachMethod(function(method, name){\n-\tElements.implement(name, method);\n+\tvar wrap;\n+\t\n+\tif(name in {map:1,splice:1,slice:1,clone:1}){\n+\t\twrap = function(){\n+\t\t\tvar result = method.apply(this, arguments);\n+\t\t\tif(typeOf(result) == 'array' && result.every(function(el){return typeOf(el) == 'element';})){",
        "path": "Source/Element/Element.js",
        "position": null,
        "original_position": 10,
        "commit_id": "3f0a91d76492676e32b50b53fc4303c8f03b5d2e",
        "original_commit_id": "6567fa25f005875b14bb0573ed90761cab408d57",
        "user": {
            "login": "arian",
            "id": 109243,
            "node_id": "MDQ6VXNlcjEwOTI0Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arian",
            "html_url": "https://github.com/arian",
            "followers_url": "https://api.github.com/users/arian/followers",
            "following_url": "https://api.github.com/users/arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arian/orgs",
            "repos_url": "https://api.github.com/users/arian/repos",
            "events_url": "https://api.github.com/users/arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For `map` however you do need it, not for the others :D\n",
        "created_at": "2012-04-10T15:41:25Z",
        "updated_at": "2017-08-24T10:09:07Z",
        "html_url": "https://github.com/mootools/mootools-core/pull/2346#discussion_r665958",
        "pull_request_url": "https://api.github.com/repos/mootools/mootools-core/pulls/2346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/comments/665958"
            },
            "html": {
                "href": "https://github.com/mootools/mootools-core/pull/2346#discussion_r665958"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/mootools/mootools-core/pulls/2346"
            }
        }
    }
]