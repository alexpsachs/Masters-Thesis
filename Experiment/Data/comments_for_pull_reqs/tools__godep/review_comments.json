[
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/7419265",
        "pull_request_review_id": null,
        "id": 7419265,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0MTkyNjU=",
        "diff_hunk": "@@ -167,7 +179,7 @@ func (v *VCS) run1(dir string, cmdline string, kv []string, verbose bool) ([]byt\n \t}\n \targs := strings.Fields(cmdline)\n \tfor i, arg := range args {\n-\t\targs[i] = expand(m, arg)\n+\t\targs[i] = strings.TrimRight(expand(m, arg), \"+\")",
        "path": "vcs.go",
        "position": 24,
        "original_position": 24,
        "commit_id": "5bca05b79431a49c8688bab1d89bc7bc4b305872",
        "original_commit_id": "5bca05b79431a49c8688bab1d89bc7bc4b305872",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this line change related to the rest of the patch?\nWhat is its purpose?\n",
        "created_at": "2013-11-05T00:52:45Z",
        "updated_at": "2013-11-05T00:52:45Z",
        "html_url": "https://github.com/tools/godep/pull/20#discussion_r7419265",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/20",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/7419265"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/20#discussion_r7419265"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/20"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/7487613",
        "pull_request_review_id": null,
        "id": 7487613,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0ODc2MTM=",
        "diff_hunk": "@@ -167,7 +179,7 @@ func (v *VCS) run1(dir string, cmdline string, kv []string, verbose bool) ([]byt\n \t}\n \targs := strings.Fields(cmdline)\n \tfor i, arg := range args {\n-\t\targs[i] = expand(m, arg)\n+\t\targs[i] = strings.TrimRight(expand(m, arg), \"+\")",
        "path": "vcs.go",
        "position": 24,
        "original_position": 24,
        "commit_id": "5bca05b79431a49c8688bab1d89bc7bc4b305872",
        "original_commit_id": "5bca05b79431a49c8688bab1d89bc7bc4b305872",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hey @shivakumargn, I'm going to go ahead and assume\nthis line is noise from an unrelated change. Just let me\nknow if I've misunderstood.\n\nIf I don't hear anything after about a day, I'll go ahead and\nmerge this pull request and edit out this line.\n\nThanks!\n",
        "created_at": "2013-11-07T05:31:27Z",
        "updated_at": "2013-11-07T05:31:27Z",
        "html_url": "https://github.com/tools/godep/pull/20#discussion_r7487613",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/20",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/7487613"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/20#discussion_r7487613"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/20"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/7504528",
        "pull_request_review_id": null,
        "id": 7504528,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1MDQ1Mjg=",
        "diff_hunk": "@@ -167,7 +179,7 @@ func (v *VCS) run1(dir string, cmdline string, kv []string, verbose bool) ([]byt\n \t}\n \targs := strings.Fields(cmdline)\n \tfor i, arg := range args {\n-\t\targs[i] = expand(m, arg)\n+\t\targs[i] = strings.TrimRight(expand(m, arg), \"+\")",
        "path": "vcs.go",
        "position": 24,
        "original_position": 24,
        "commit_id": "5bca05b79431a49c8688bab1d89bc7bc4b305872",
        "original_commit_id": "5bca05b79431a49c8688bab1d89bc7bc4b305872",
        "user": {
            "login": "shivakumargn",
            "id": 171191,
            "node_id": "MDQ6VXNlcjE3MTE5MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/171191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shivakumargn",
            "html_url": "https://github.com/shivakumargn",
            "followers_url": "https://api.github.com/users/shivakumargn/followers",
            "following_url": "https://api.github.com/users/shivakumargn/following{/other_user}",
            "gists_url": "https://api.github.com/users/shivakumargn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shivakumargn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shivakumargn/subscriptions",
            "organizations_url": "https://api.github.com/users/shivakumargn/orgs",
            "repos_url": "https://api.github.com/users/shivakumargn/repos",
            "events_url": "https://api.github.com/users/shivakumargn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shivakumargn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The TrimRight is another trivial fix. Hg has a \"+\" appended in the revision numbers.\nNot trimming creates trouble for some cases.\n",
        "created_at": "2013-11-07T18:15:39Z",
        "updated_at": "2013-11-07T18:15:39Z",
        "html_url": "https://github.com/tools/godep/pull/20#discussion_r7504528",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/20",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/7504528"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/20#discussion_r7504528"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/20"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/7510227",
        "pull_request_review_id": null,
        "id": 7510227,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1MTAyMjc=",
        "diff_hunk": "@@ -167,7 +179,7 @@ func (v *VCS) run1(dir string, cmdline string, kv []string, verbose bool) ([]byt\n \t}\n \targs := strings.Fields(cmdline)\n \tfor i, arg := range args {\n-\t\targs[i] = expand(m, arg)\n+\t\targs[i] = strings.TrimRight(expand(m, arg), \"+\")",
        "path": "vcs.go",
        "position": 24,
        "original_position": 24,
        "commit_id": "5bca05b79431a49c8688bab1d89bc7bc4b305872",
        "original_commit_id": "5bca05b79431a49c8688bab1d89bc7bc4b305872",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I believe the + only appears when the working tree is dirty.\nGodep checks for that separately and refuses to include\na dirty repository as a dependency.\n\nFeel free to open a separate issue for this, but it shouldn't\nbe part of this patch. :)\n",
        "created_at": "2013-11-07T21:09:55Z",
        "updated_at": "2013-11-07T21:09:55Z",
        "html_url": "https://github.com/tools/godep/pull/20#discussion_r7510227",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/20",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/7510227"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/20#discussion_r7510227"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/20"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/12253144",
        "pull_request_review_id": null,
        "id": 12253144,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjUzMTQ0",
        "diff_hunk": "@@ -0,0 +1,124 @@\n+package main\n+\n+import (\n+\t\"os\"\n+\t\"path/filepath\"\n+\t\"strconv\"\n+\t\"strings\"\n+\n+\t\"go/parser\"\n+\t\"go/printer\"\n+\t\"go/token\"\n+\n+\t\"github.com/kr/fs\"\n+)\n+\n+// paths are the import paths to qualify\n+func rewrite(qual string, pkgs []*Package, paths []string) error {\n+\tfor _, path := range pkgDirs(pkgs) {\n+\t\terr := rewriteTree(path, qual, paths)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn rewriteTree(\"Godeps\", qual, paths)\n+}\n+\n+func pkgDirs(pkgs []*Package) []string {\n+\tvar a []string\n+\tfor _, pkg := range pkgs {\n+\t\tfor _, s := range pkg.allGoFiles() {\n+\t\t\ta = append(a, filepath.Join(pkg.Dir, s))\n+\t\t}\n+\t}\n+\treturn a\n+}\n+\n+func rewriteTree(path, qual string, paths []string) error {\n+\tw := fs.Walk(path)\n+\tfor w.Step() {\n+\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n+\t\t\terr := rewriteGoFile(w.Path(), qual, paths)\n+\t\t\tif err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+func rewriteGoFile(path, qual string, paths []string) error {\n+\tfset := token.NewFileSet()\n+\tf, err := parser.ParseFile(fset, path, nil, parser.ParseComments)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\tvar changed bool\n+\tfor _, s := range f.Imports {",
        "path": "rewrite.go",
        "position": 70,
        "original_position": 58,
        "commit_id": "983ff9241cead0f7e6ad0ae4a92b335c33ade8a2",
        "original_commit_id": "a99726cb881cc85593d2a28388bb206770c5d4b4",
        "user": {
            "login": "dmitshur",
            "id": 1924134,
            "node_id": "MDQ6VXNlcjE5MjQxMzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1924134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmitshur",
            "html_url": "https://github.com/dmitshur",
            "followers_url": "https://api.github.com/users/dmitshur/followers",
            "following_url": "https://api.github.com/users/dmitshur/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmitshur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmitshur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmitshur/subscriptions",
            "organizations_url": "https://api.github.com/users/dmitshur/orgs",
            "repos_url": "https://api.github.com/users/dmitshur/repos",
            "events_url": "https://api.github.com/users/dmitshur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmitshur/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Would it make sense to use [code.google.com/p/go.tools/astutil](http://godoc.org/code.google.com/p/go.tools/astutil) here?\n",
        "created_at": "2014-05-03T00:13:42Z",
        "updated_at": "2014-05-25T00:36:19Z",
        "html_url": "https://github.com/tools/godep/pull/82#discussion_r12253144",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/82",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/12253144"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/82#discussion_r12253144"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/82"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/12254270",
        "pull_request_review_id": null,
        "id": 12254270,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjU0Mjcw",
        "diff_hunk": "@@ -0,0 +1,124 @@\n+package main\n+\n+import (\n+\t\"os\"\n+\t\"path/filepath\"\n+\t\"strconv\"\n+\t\"strings\"\n+\n+\t\"go/parser\"\n+\t\"go/printer\"\n+\t\"go/token\"\n+\n+\t\"github.com/kr/fs\"\n+)\n+\n+// paths are the import paths to qualify\n+func rewrite(qual string, pkgs []*Package, paths []string) error {\n+\tfor _, path := range pkgDirs(pkgs) {\n+\t\terr := rewriteTree(path, qual, paths)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn rewriteTree(\"Godeps\", qual, paths)\n+}\n+\n+func pkgDirs(pkgs []*Package) []string {\n+\tvar a []string\n+\tfor _, pkg := range pkgs {\n+\t\tfor _, s := range pkg.allGoFiles() {\n+\t\t\ta = append(a, filepath.Join(pkg.Dir, s))\n+\t\t}\n+\t}\n+\treturn a\n+}\n+\n+func rewriteTree(path, qual string, paths []string) error {\n+\tw := fs.Walk(path)\n+\tfor w.Step() {\n+\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n+\t\t\terr := rewriteGoFile(w.Path(), qual, paths)\n+\t\t\tif err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+func rewriteGoFile(path, qual string, paths []string) error {\n+\tfset := token.NewFileSet()\n+\tf, err := parser.ParseFile(fset, path, nil, parser.ParseComments)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\tvar changed bool\n+\tfor _, s := range f.Imports {",
        "path": "rewrite.go",
        "position": 70,
        "original_position": 58,
        "commit_id": "983ff9241cead0f7e6ad0ae4a92b335c33ade8a2",
        "original_commit_id": "a99726cb881cc85593d2a28388bb206770c5d4b4",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe! Thanks for the tip.\n",
        "created_at": "2014-05-03T02:44:16Z",
        "updated_at": "2014-05-25T00:36:19Z",
        "html_url": "https://github.com/tools/godep/pull/82#discussion_r12254270",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/82",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/12254270"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/82#discussion_r12254270"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/82"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/12765495",
        "pull_request_review_id": null,
        "id": 12765495,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzY1NDk1",
        "diff_hunk": "@@ -0,0 +1,139 @@\n+package main\n+\n+import (\n+\t\"log\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\t\"strconv\"\n+\t\"strings\"\n+\n+\t\"go/parser\"\n+\t\"go/printer\"\n+\t\"go/token\"\n+\n+\t\"github.com/kr/fs\"\n+)\n+\n+// rewrite visits the go files in pkgs, plus all go files\n+// in the directory tree Godeps, rewriting import statments\n+// according to the rules for func qualify.\n+func rewrite(pkgs []*Package, qual string, paths []string) error {\n+\tfor _, path := range pkgFiles(pkgs) {\n+\t\terr := rewriteTree(path, qual, paths)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn rewriteTree(\"Godeps\", qual, paths)\n+}\n+\n+// pkgFiles returns the full filesystem path to all go files in pkgs.\n+func pkgFiles(pkgs []*Package) []string {\n+\tvar a []string\n+\tfor _, pkg := range pkgs {\n+\t\tfor _, s := range pkg.allGoFiles() {\n+\t\t\ta = append(a, filepath.Join(pkg.Dir, s))\n+\t\t}\n+\t}\n+\treturn a\n+}\n+\n+// rewriteTree recursively visits the go files in path, rewriting\n+// import statments according to the rules for func qualify.\n+func rewriteTree(path, qual string, paths []string) error {\n+\tw := fs.Walk(path)\n+\tfor w.Step() {\n+\t\tif w.Err() != nil {\n+\t\t\tlog.Println(\"rewrite:\", w.Err())\n+\t\t\tcontinue\n+\t\t}\n+\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n+\t\t\terr := rewriteGoFile(w.Path(), qual, paths)\n+\t\t\tif err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+// rewriteGoFile rewrites import statments in the named file\n+// according to the rules for func qualify.\n+func rewriteGoFile(name, qual string, paths []string) error {\n+\tfset := token.NewFileSet()\n+\tf, err := parser.ParseFile(fset, name, nil, parser.ParseComments)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\tvar changed bool\n+\tfor _, s := range f.Imports {\n+\t\tname, err := strconv.Unquote(s.Path.Value)\n+\t\tif err != nil {\n+\t\t\treturn err // can't happen\n+\t\t}\n+\t\tq := qualify(unqualify(name), qual, paths)\n+\t\tif q != name {\n+\t\t\ts.Path.Value = strconv.Quote(q)\n+\t\t\tchanged = true\n+\t\t}\n+\t}\n+\tif !changed {\n+\t\treturn nil\n+\t}\n+\n+\twpath := name + \".temp\"\n+\tw, err := os.Create(wpath)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\terr = (&printer.Config{Mode: printer.TabIndent | printer.UseSpaces, Tabwidth: 8}).Fprint(w, fset, f)",
        "path": "rewrite.go",
        "position": 90,
        "original_position": 90,
        "commit_id": "983ff9241cead0f7e6ad0ae4a92b335c33ade8a2",
        "original_commit_id": "96b816c92b71edd4f026cae584f08a915df9c4f9",
        "user": {
            "login": "dmitshur",
            "id": 1924134,
            "node_id": "MDQ6VXNlcjE5MjQxMzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1924134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmitshur",
            "html_url": "https://github.com/dmitshur",
            "followers_url": "https://api.github.com/users/dmitshur/followers",
            "following_url": "https://api.github.com/users/dmitshur/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmitshur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmitshur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmitshur/subscriptions",
            "organizations_url": "https://api.github.com/users/dmitshur/orgs",
            "repos_url": "https://api.github.com/users/dmitshur/repos",
            "events_url": "https://api.github.com/users/dmitshur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmitshur/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Extremely minor nitpick:\n\ngofmt defines the printerMode as `printer.UseSpaces | printer.TabIndent`, see [here](https://code.google.com/p/go/source/browse/src/cmd/gofmt/gofmt.go?r=386c6757d94c#40). Is there a reason you've swapped the order of the two to have TabIndent first?\n\nIt doesn't make any functional difference of course, but it matters if one tries to search/grep for that string. I'm just looking to learn if there's an advantage to deviate from what gofmt used as the order.\n",
        "created_at": "2014-05-17T02:22:44Z",
        "updated_at": "2014-05-25T00:36:19Z",
        "html_url": "https://github.com/tools/godep/pull/82#discussion_r12765495",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/82",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/12765495"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/82#discussion_r12765495"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/82"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/12765509",
        "pull_request_review_id": null,
        "id": 12765509,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzY1NTA5",
        "diff_hunk": "@@ -0,0 +1,124 @@\n+package main\n+\n+import (\n+\t\"os\"\n+\t\"path/filepath\"\n+\t\"strconv\"\n+\t\"strings\"\n+\n+\t\"go/parser\"\n+\t\"go/printer\"\n+\t\"go/token\"\n+\n+\t\"github.com/kr/fs\"\n+)\n+\n+// paths are the import paths to qualify\n+func rewrite(qual string, pkgs []*Package, paths []string) error {\n+\tfor _, path := range pkgDirs(pkgs) {\n+\t\terr := rewriteTree(path, qual, paths)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn rewriteTree(\"Godeps\", qual, paths)\n+}\n+\n+func pkgDirs(pkgs []*Package) []string {\n+\tvar a []string\n+\tfor _, pkg := range pkgs {\n+\t\tfor _, s := range pkg.allGoFiles() {\n+\t\t\ta = append(a, filepath.Join(pkg.Dir, s))\n+\t\t}\n+\t}\n+\treturn a\n+}\n+\n+func rewriteTree(path, qual string, paths []string) error {\n+\tw := fs.Walk(path)\n+\tfor w.Step() {\n+\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n+\t\t\terr := rewriteGoFile(w.Path(), qual, paths)\n+\t\t\tif err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+func rewriteGoFile(path, qual string, paths []string) error {\n+\tfset := token.NewFileSet()\n+\tf, err := parser.ParseFile(fset, path, nil, parser.ParseComments)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\tvar changed bool\n+\tfor _, s := range f.Imports {",
        "path": "rewrite.go",
        "position": 70,
        "original_position": 58,
        "commit_id": "983ff9241cead0f7e6ad0ae4a92b335c33ade8a2",
        "original_commit_id": "a99726cb881cc85593d2a28388bb206770c5d4b4",
        "user": {
            "login": "dmitshur",
            "id": 1924134,
            "node_id": "MDQ6VXNlcjE5MjQxMzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1924134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmitshur",
            "html_url": "https://github.com/dmitshur",
            "followers_url": "https://api.github.com/users/dmitshur/followers",
            "following_url": "https://api.github.com/users/dmitshur/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmitshur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmitshur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmitshur/subscriptions",
            "organizations_url": "https://api.github.com/users/dmitshur/orgs",
            "repos_url": "https://api.github.com/users/dmitshur/repos",
            "events_url": "https://api.github.com/users/dmitshur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmitshur/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, I've tried to see see if this can be rewritten to be cleaner using astutil, but I couldn't find a way. You're really iterating over all imports, doing some calculations on the import path, and updating it if necessary. astutil would've been helpful if you had to rewrite some specific imports without having to iterate over them.\n\nOh well.\n\nYou do skip the `imp.EndPos = imp.End()` step that astutil performs, as seen [here](https://code.google.com/p/go/source/browse/astutil/imports.go?repo=tools&r=1911e4f0ca34#192), but I don't think it makes a difference in this case.\n",
        "created_at": "2014-05-17T02:24:59Z",
        "updated_at": "2014-05-25T00:36:19Z",
        "html_url": "https://github.com/tools/godep/pull/82#discussion_r12765509",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/82",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/12765509"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/82#discussion_r12765509"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/82"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/12765936",
        "pull_request_review_id": null,
        "id": 12765936,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzY1OTM2",
        "diff_hunk": "@@ -0,0 +1,139 @@\n+package main\n+\n+import (\n+\t\"log\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\t\"strconv\"\n+\t\"strings\"\n+\n+\t\"go/parser\"\n+\t\"go/printer\"\n+\t\"go/token\"\n+\n+\t\"github.com/kr/fs\"\n+)\n+\n+// rewrite visits the go files in pkgs, plus all go files\n+// in the directory tree Godeps, rewriting import statments\n+// according to the rules for func qualify.\n+func rewrite(pkgs []*Package, qual string, paths []string) error {\n+\tfor _, path := range pkgFiles(pkgs) {\n+\t\terr := rewriteTree(path, qual, paths)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn rewriteTree(\"Godeps\", qual, paths)\n+}\n+\n+// pkgFiles returns the full filesystem path to all go files in pkgs.\n+func pkgFiles(pkgs []*Package) []string {\n+\tvar a []string\n+\tfor _, pkg := range pkgs {\n+\t\tfor _, s := range pkg.allGoFiles() {\n+\t\t\ta = append(a, filepath.Join(pkg.Dir, s))\n+\t\t}\n+\t}\n+\treturn a\n+}\n+\n+// rewriteTree recursively visits the go files in path, rewriting\n+// import statments according to the rules for func qualify.\n+func rewriteTree(path, qual string, paths []string) error {\n+\tw := fs.Walk(path)\n+\tfor w.Step() {\n+\t\tif w.Err() != nil {\n+\t\t\tlog.Println(\"rewrite:\", w.Err())\n+\t\t\tcontinue\n+\t\t}\n+\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n+\t\t\terr := rewriteGoFile(w.Path(), qual, paths)\n+\t\t\tif err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+// rewriteGoFile rewrites import statments in the named file\n+// according to the rules for func qualify.\n+func rewriteGoFile(name, qual string, paths []string) error {\n+\tfset := token.NewFileSet()\n+\tf, err := parser.ParseFile(fset, name, nil, parser.ParseComments)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\tvar changed bool\n+\tfor _, s := range f.Imports {\n+\t\tname, err := strconv.Unquote(s.Path.Value)\n+\t\tif err != nil {\n+\t\t\treturn err // can't happen\n+\t\t}\n+\t\tq := qualify(unqualify(name), qual, paths)\n+\t\tif q != name {\n+\t\t\ts.Path.Value = strconv.Quote(q)\n+\t\t\tchanged = true\n+\t\t}\n+\t}\n+\tif !changed {\n+\t\treturn nil\n+\t}\n+\n+\twpath := name + \".temp\"\n+\tw, err := os.Create(wpath)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\terr = (&printer.Config{Mode: printer.TabIndent | printer.UseSpaces, Tabwidth: 8}).Fprint(w, fset, f)",
        "path": "rewrite.go",
        "position": 90,
        "original_position": 90,
        "commit_id": "983ff9241cead0f7e6ad0ae4a92b335c33ade8a2",
        "original_commit_id": "96b816c92b71edd4f026cae584f08a915df9c4f9",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I probably wrote it that way because TabIndent is listed first\nin http://godoc.org/go/printer#Mode.\n",
        "created_at": "2014-05-17T03:59:55Z",
        "updated_at": "2014-05-25T00:36:19Z",
        "html_url": "https://github.com/tools/godep/pull/82#discussion_r12765936",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/82",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/12765936"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/82#discussion_r12765936"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/82"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/12765944",
        "pull_request_review_id": null,
        "id": 12765944,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzY1OTQ0",
        "diff_hunk": "@@ -0,0 +1,124 @@\n+package main\n+\n+import (\n+\t\"os\"\n+\t\"path/filepath\"\n+\t\"strconv\"\n+\t\"strings\"\n+\n+\t\"go/parser\"\n+\t\"go/printer\"\n+\t\"go/token\"\n+\n+\t\"github.com/kr/fs\"\n+)\n+\n+// paths are the import paths to qualify\n+func rewrite(qual string, pkgs []*Package, paths []string) error {\n+\tfor _, path := range pkgDirs(pkgs) {\n+\t\terr := rewriteTree(path, qual, paths)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn rewriteTree(\"Godeps\", qual, paths)\n+}\n+\n+func pkgDirs(pkgs []*Package) []string {\n+\tvar a []string\n+\tfor _, pkg := range pkgs {\n+\t\tfor _, s := range pkg.allGoFiles() {\n+\t\t\ta = append(a, filepath.Join(pkg.Dir, s))\n+\t\t}\n+\t}\n+\treturn a\n+}\n+\n+func rewriteTree(path, qual string, paths []string) error {\n+\tw := fs.Walk(path)\n+\tfor w.Step() {\n+\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n+\t\t\terr := rewriteGoFile(w.Path(), qual, paths)\n+\t\t\tif err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+func rewriteGoFile(path, qual string, paths []string) error {\n+\tfset := token.NewFileSet()\n+\tf, err := parser.ParseFile(fset, path, nil, parser.ParseComments)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\tvar changed bool\n+\tfor _, s := range f.Imports {",
        "path": "rewrite.go",
        "position": 70,
        "original_position": 58,
        "commit_id": "983ff9241cead0f7e6ad0ae4a92b335c33ade8a2",
        "original_commit_id": "a99726cb881cc85593d2a28388bb206770c5d4b4",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes. I don't have handy a list of the exact imports to rewrite.\nThat could be arranged, but it would take some changes to\nother parts of godep and it doesn't seem worthwhile.\n",
        "created_at": "2014-05-17T04:02:14Z",
        "updated_at": "2014-05-25T00:36:19Z",
        "html_url": "https://github.com/tools/godep/pull/82#discussion_r12765944",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/82",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/12765944"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/82#discussion_r12765944"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/82"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/12766187",
        "pull_request_review_id": null,
        "id": 12766187,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzY2MTg3",
        "diff_hunk": "@@ -0,0 +1,139 @@\n+package main\n+\n+import (\n+\t\"log\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\t\"strconv\"\n+\t\"strings\"\n+\n+\t\"go/parser\"\n+\t\"go/printer\"\n+\t\"go/token\"\n+\n+\t\"github.com/kr/fs\"\n+)\n+\n+// rewrite visits the go files in pkgs, plus all go files\n+// in the directory tree Godeps, rewriting import statments\n+// according to the rules for func qualify.\n+func rewrite(pkgs []*Package, qual string, paths []string) error {\n+\tfor _, path := range pkgFiles(pkgs) {\n+\t\terr := rewriteTree(path, qual, paths)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn rewriteTree(\"Godeps\", qual, paths)\n+}\n+\n+// pkgFiles returns the full filesystem path to all go files in pkgs.\n+func pkgFiles(pkgs []*Package) []string {\n+\tvar a []string\n+\tfor _, pkg := range pkgs {\n+\t\tfor _, s := range pkg.allGoFiles() {\n+\t\t\ta = append(a, filepath.Join(pkg.Dir, s))\n+\t\t}\n+\t}\n+\treturn a\n+}\n+\n+// rewriteTree recursively visits the go files in path, rewriting\n+// import statments according to the rules for func qualify.\n+func rewriteTree(path, qual string, paths []string) error {\n+\tw := fs.Walk(path)\n+\tfor w.Step() {\n+\t\tif w.Err() != nil {\n+\t\t\tlog.Println(\"rewrite:\", w.Err())\n+\t\t\tcontinue\n+\t\t}\n+\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n+\t\t\terr := rewriteGoFile(w.Path(), qual, paths)\n+\t\t\tif err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+// rewriteGoFile rewrites import statments in the named file\n+// according to the rules for func qualify.\n+func rewriteGoFile(name, qual string, paths []string) error {\n+\tfset := token.NewFileSet()\n+\tf, err := parser.ParseFile(fset, name, nil, parser.ParseComments)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\tvar changed bool\n+\tfor _, s := range f.Imports {\n+\t\tname, err := strconv.Unquote(s.Path.Value)\n+\t\tif err != nil {\n+\t\t\treturn err // can't happen\n+\t\t}\n+\t\tq := qualify(unqualify(name), qual, paths)\n+\t\tif q != name {\n+\t\t\ts.Path.Value = strconv.Quote(q)\n+\t\t\tchanged = true\n+\t\t}\n+\t}\n+\tif !changed {\n+\t\treturn nil\n+\t}\n+\n+\twpath := name + \".temp\"\n+\tw, err := os.Create(wpath)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\terr = (&printer.Config{Mode: printer.TabIndent | printer.UseSpaces, Tabwidth: 8}).Fprint(w, fset, f)",
        "path": "rewrite.go",
        "position": 90,
        "original_position": 90,
        "commit_id": "983ff9241cead0f7e6ad0ae4a92b335c33ade8a2",
        "original_commit_id": "96b816c92b71edd4f026cae584f08a915df9c4f9",
        "user": {
            "login": "dmitshur",
            "id": 1924134,
            "node_id": "MDQ6VXNlcjE5MjQxMzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1924134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmitshur",
            "html_url": "https://github.com/dmitshur",
            "followers_url": "https://api.github.com/users/dmitshur/followers",
            "following_url": "https://api.github.com/users/dmitshur/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmitshur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmitshur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmitshur/subscriptions",
            "organizations_url": "https://api.github.com/users/dmitshur/orgs",
            "repos_url": "https://api.github.com/users/dmitshur/repos",
            "events_url": "https://api.github.com/users/dmitshur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmitshur/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see. That's equally valid. Thanks.\n",
        "created_at": "2014-05-17T04:55:51Z",
        "updated_at": "2014-05-25T00:36:19Z",
        "html_url": "https://github.com/tools/godep/pull/82#discussion_r12766187",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/82",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/12766187"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/82#discussion_r12766187"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/82"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/15437738",
        "pull_request_review_id": null,
        "id": 15437738,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDM3NzM4",
        "diff_hunk": "@@ -148,6 +129,8 @@ func (g *Godeps) Load(pkgs []*Package) error {\n \t\t\terr1 = errors.New(\"error loading dependencies\")\n \t\t\tcontinue\n \t\t}\n+\t\tpkg.ImportPath = unqualify(pkg.ImportPath)\n+\t\tpkg.Dir = pkg.Root + \"/src/\" + pkg.ImportPath",
        "path": "dep.go",
        "position": null,
        "original_position": 49,
        "commit_id": "678faaa9490534abc66f1d100faafa8a6c528253",
        "original_commit_id": "14a33ff88e2c98281a87dfab604151d38d864813",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This might not work on windows.\nI think it needs to be something like:\n\n```\nfilepath.Join(pkg.Root, \"src\", filepath.FromSlash(pkg.ImportPath))\n```\n",
        "created_at": "2014-07-27T07:22:14Z",
        "updated_at": "2014-07-28T00:24:16Z",
        "html_url": "https://github.com/tools/godep/pull/99#discussion_r15437738",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/99",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/15437738"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/99#discussion_r15437738"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/99"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/15437764",
        "pull_request_review_id": null,
        "id": 15437764,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDM3NzY0",
        "diff_hunk": "@@ -327,7 +310,9 @@ func (d Dependency) checkout() error {\n func containsPathPrefix(pats []string, s string) bool {\n \tfor _, pat := range pats {\n \t\tif pat == s || strings.HasPrefix(s, pat+\"/\") {\n-\t\t\treturn true\n+\t\t\tif !strings.Contains(s, sep) {",
        "path": "dep.go",
        "position": null,
        "original_position": 58,
        "commit_id": "678faaa9490534abc66f1d100faafa8a6c528253",
        "original_commit_id": "14a33ff88e2c98281a87dfab604151d38d864813",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This doesn't belong in containsPathPrefix.\n\nWe shouldn't let the Godep magic string separator `/Godeps/_workspace/src/` affect the result of this function.\n",
        "created_at": "2014-07-27T07:30:07Z",
        "updated_at": "2014-07-28T00:24:16Z",
        "html_url": "https://github.com/tools/godep/pull/99#discussion_r15437764",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/99",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/15437764"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/99#discussion_r15437764"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/99"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/15437885",
        "pull_request_review_id": null,
        "id": 15437885,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDM3ODg1",
        "diff_hunk": "@@ -148,6 +129,8 @@ func (g *Godeps) Load(pkgs []*Package) error {\n \t\t\terr1 = errors.New(\"error loading dependencies\")\n \t\t\tcontinue\n \t\t}\n+\t\tpkg.ImportPath = unqualify(pkg.ImportPath)\n+\t\tpkg.Dir = pkg.Root + \"/src/\" + pkg.ImportPath",
        "path": "dep.go",
        "position": null,
        "original_position": 49,
        "commit_id": "678faaa9490534abc66f1d100faafa8a6c528253",
        "original_commit_id": "14a33ff88e2c98281a87dfab604151d38d864813",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "But this might be irrelevant \u2013 see comments below.\n",
        "created_at": "2014-07-27T07:47:49Z",
        "updated_at": "2014-07-28T00:24:16Z",
        "html_url": "https://github.com/tools/godep/pull/99#discussion_r15437885",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/99",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/15437885"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/99#discussion_r15437885"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/99"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/15437910",
        "pull_request_review_id": null,
        "id": 15437910,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDM3OTEw",
        "diff_hunk": "@@ -327,7 +310,9 @@ func (d Dependency) checkout() error {\n func containsPathPrefix(pats []string, s string) bool {\n \tfor _, pat := range pats {\n \t\tif pat == s || strings.HasPrefix(s, pat+\"/\") {\n-\t\t\treturn true\n+\t\t\tif !strings.Contains(s, sep) {",
        "path": "dep.go",
        "position": null,
        "original_position": 58,
        "commit_id": "678faaa9490534abc66f1d100faafa8a6c528253",
        "original_commit_id": "14a33ff88e2c98281a87dfab604151d38d864813",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In other words, I think we want to avoid calling this function in the first place with import paths containing sep.\n",
        "created_at": "2014-07-27T07:53:33Z",
        "updated_at": "2014-07-28T00:24:16Z",
        "html_url": "https://github.com/tools/godep/pull/99#discussion_r15437910",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/99",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/15437910"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/99#discussion_r15437910"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/99"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/15437928",
        "pull_request_review_id": null,
        "id": 15437928,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDM3OTI4",
        "diff_hunk": "@@ -298,7 +298,7 @@ func copyPkgFile(dstroot, srcroot string, w *fs.Walker) error {\n \tif err != nil { // this should never happen\n \t\treturn err\n \t}\n-\treturn copyFile(filepath.Join(dstroot, rel), w.Path())\n+\treturn copyFile(filepath.Join(dstroot, unqualify(rel)), w.Path())",
        "path": "save.go",
        "position": null,
        "original_position": 5,
        "commit_id": "678faaa9490534abc66f1d100faafa8a6c528253",
        "original_commit_id": "14a33ff88e2c98281a87dfab604151d38d864813",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think this has the same lurking bugs as above: treating rel as a slash-separated path rather than a filepath, and assuming that two dependencies come from the same root.\n\nAlso, I don't understand the purpose of the change to this line. In what circumstance is it necessary?\n",
        "created_at": "2014-07-27T07:58:13Z",
        "updated_at": "2014-07-28T00:24:16Z",
        "html_url": "https://github.com/tools/godep/pull/99#discussion_r15437928",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/99",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/15437928"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/99#discussion_r15437928"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/99"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/15437978",
        "pull_request_review_id": null,
        "id": 15437978,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDM3OTc4",
        "diff_hunk": "@@ -298,7 +298,7 @@ func copyPkgFile(dstroot, srcroot string, w *fs.Walker) error {\n \tif err != nil { // this should never happen\n \t\treturn err\n \t}\n-\treturn copyFile(filepath.Join(dstroot, rel), w.Path())\n+\treturn copyFile(filepath.Join(dstroot, unqualify(rel)), w.Path())",
        "path": "save.go",
        "position": null,
        "original_position": 5,
        "commit_id": "678faaa9490534abc66f1d100faafa8a6c528253",
        "original_commit_id": "14a33ff88e2c98281a87dfab604151d38d864813",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Note that walking the file tree skips all directories that start with _, a few lines above here.\n",
        "created_at": "2014-07-27T08:09:54Z",
        "updated_at": "2014-07-28T00:24:16Z",
        "html_url": "https://github.com/tools/godep/pull/99#discussion_r15437978",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/99",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/15437978"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/99#discussion_r15437978"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/99"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/15442670",
        "pull_request_review_id": null,
        "id": 15442670,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDQyNjcw",
        "diff_hunk": "@@ -91,29 +92,12 @@ func (g *Godeps) Load(pkgs []*Package) error {\n \t\tpath = append(path, p.ImportPath)\n \t\tpath = append(path, p.Deps...)\n \t}\n-\tsort.Strings(path)\n-\tpath = uniq(path)\n-\n-\t// Packages using 'godep save -r' contain rewritten\n-\t// import statements that fool go list into omitting\n-\t// further dependencies. In that case, the Godeps\n-\t// manifest has the full list.\n-\tfor _, s := range path {\n-\t\tdeps, err := readGodepsForImportPath(s)\n-\t\tif err != nil {\n-\t\t\tlog.Println(err)\n-\t\t\terr1 = errors.New(\"error loading packages\")\n-\t\t\tcontinue\n-\t\t}\n-\t\tfor _, dep := range deps {\n-\t\t\tpath = append(path, dep.ImportPath)\n-\t\t}\n-\t}\n-\tif err1 != nil {\n-\t\treturn err1\n+\tfor i, p := range(path) {\n+\t\tpath[i] = unqualify(p)\n \t}\n \tsort.Strings(path)\n \tpath = uniq(path)\n+",
        "path": "dep.go",
        "position": null,
        "original_position": 46,
        "commit_id": "678faaa9490534abc66f1d100faafa8a6c528253",
        "original_commit_id": "323602cf2031527612bf4c2e77f4db4dcc547169",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Looks like an accidental extra blank line here.\n",
        "created_at": "2014-07-27T23:35:07Z",
        "updated_at": "2014-07-28T00:24:16Z",
        "html_url": "https://github.com/tools/godep/pull/99#discussion_r15442670",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/99",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/15442670"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/99#discussion_r15442670"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/99"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/15442677",
        "pull_request_review_id": null,
        "id": 15442677,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDQyNjc3",
        "diff_hunk": "@@ -133,7 +117,7 @@ func (g *Godeps) Load(pkgs []*Package) error {\n \t\t\terr1 = errors.New(\"error loading dependencies\")\n \t\t\tcontinue\n \t\t}\n-\t\tif containsPathPrefix(seen, pkg.ImportPath) {\n+\t\tif !strings.Contains(pkg.ImportPath, sep) && containsPathPrefix(seen, pkg.ImportPath) {",
        "path": "dep.go",
        "position": null,
        "original_position": 55,
        "commit_id": "678faaa9490534abc66f1d100faafa8a6c528253",
        "original_commit_id": "323602cf2031527612bf4c2e77f4db4dcc547169",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I believe strings.Contains(pkg.ImportPath, sep) is a superfluous check \u2013\u00a0always false here, since we've called unqualify on all import paths beforehand.\n",
        "created_at": "2014-07-27T23:35:54Z",
        "updated_at": "2014-07-28T00:24:16Z",
        "html_url": "https://github.com/tools/godep/pull/99#discussion_r15442677",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/99",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/15442677"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/99#discussion_r15442677"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/99"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/15442680",
        "pull_request_review_id": null,
        "id": 15442680,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDQyNjgw",
        "diff_hunk": "@@ -148,6 +132,7 @@ func (g *Godeps) Load(pkgs []*Package) error {\n \t\t\terr1 = errors.New(\"error loading dependencies\")\n \t\t\tcontinue\n \t\t}\n+\t\tpkg.Dir = filepath.Join(pkg.Root, \"src\", filepath.FromSlash(pkg.ImportPath))",
        "path": "dep.go",
        "position": null,
        "original_position": 63,
        "commit_id": "678faaa9490534abc66f1d100faafa8a6c528253",
        "original_commit_id": "323602cf2031527612bf4c2e77f4db4dcc547169",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Isn't pkg.Dir already set here? What does this line accomplish?\n",
        "created_at": "2014-07-27T23:36:30Z",
        "updated_at": "2014-07-28T00:24:16Z",
        "html_url": "https://github.com/tools/godep/pull/99#discussion_r15442680",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/99",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/15442680"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/99#discussion_r15442680"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/99"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/21669186",
        "pull_request_review_id": null,
        "id": 21669186,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjY5MTg2",
        "diff_hunk": "@@ -339,6 +350,30 @@ func copyFile(dst, src string) error {\n \treturn err\n }\n \n+func copyWithoutImportComment(w io.Writer, r io.Reader) error {\n+\tsc := bufio.NewScanner(r)\n+\tfor sc.Scan() {\n+\t\t_, err := w.Write(append(stripImportComment(sc.Bytes()), '\\n'))\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+var importCommentRE = regexp.MustCompile(`\\s*(package\\s+\\w+)\\s+(?://\\s*import\\s+\"[^\"]*\"|/\\*\\s*import\\s+\"[^\"]*\"\\s*\\*/)\\s*`)\n+\n+// stripImportComment returns line with its import comment removed.\n+// If s is not a package statement containing an import comment,\n+// it is returned unaltered.\n+// See also http://golang.org/s/go14customimport.\n+func stripImportComment(line []byte) []byte {\n+\tif m := importCommentRE.FindSubmatch(line); m != nil {",
        "path": "save.go",
        "position": null,
        "original_position": 63,
        "commit_id": "330a9ac74c18f4f072c251c1ba5a9cab904c89a2",
        "original_commit_id": "90b46b087ed8cd2557c759f75e702fb06eb4a00a",
        "user": {
            "login": "dsymonds",
            "id": 31506,
            "node_id": "MDQ6VXNlcjMxNTA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/31506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsymonds",
            "html_url": "https://github.com/dsymonds",
            "followers_url": "https://api.github.com/users/dsymonds/followers",
            "following_url": "https://api.github.com/users/dsymonds/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsymonds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsymonds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsymonds/subscriptions",
            "organizations_url": "https://api.github.com/users/dsymonds/orgs",
            "repos_url": "https://api.github.com/users/dsymonds/repos",
            "events_url": "https://api.github.com/users/dsymonds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsymonds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You could make this cheaper and run faster by assuming that the source file is at least vaguely gofmt'd.\n\nvar pkgPrefix = []byte(\"package \") // up higher\n\nif !bytes.HasPrefix(line, pkgPrefix) { // fast path; this will skip all but one line in the file\n  return line\n}\n// ... do the regexp\n",
        "created_at": "2014-12-11T10:49:06Z",
        "updated_at": "2014-12-11T11:55:29Z",
        "html_url": "https://github.com/tools/godep/pull/157#discussion_r21669186",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/157",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/21669186"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/157#discussion_r21669186"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/21669217",
        "pull_request_review_id": null,
        "id": 21669217,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjY5MjE3",
        "diff_hunk": "@@ -339,6 +350,30 @@ func copyFile(dst, src string) error {\n \treturn err\n }\n \n+func copyWithoutImportComment(w io.Writer, r io.Reader) error {\n+\tsc := bufio.NewScanner(r)\n+\tfor sc.Scan() {\n+\t\t_, err := w.Write(append(stripImportComment(sc.Bytes()), '\\n'))\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+var importCommentRE = regexp.MustCompile(`\\s*(package\\s+\\w+)\\s+(?://\\s*import\\s+\"[^\"]*\"|/\\*\\s*import\\s+\"[^\"]*\"\\s*\\*/)\\s*`)",
        "path": "save.go",
        "position": null,
        "original_position": 56,
        "commit_id": "330a9ac74c18f4f072c251c1ba5a9cab904c89a2",
        "original_commit_id": "90b46b087ed8cd2557c759f75e702fb06eb4a00a",
        "user": {
            "login": "dsymonds",
            "id": 31506,
            "node_id": "MDQ6VXNlcjMxNTA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/31506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsymonds",
            "html_url": "https://github.com/dsymonds",
            "followers_url": "https://api.github.com/users/dsymonds/followers",
            "following_url": "https://api.github.com/users/dsymonds/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsymonds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsymonds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsymonds/subscriptions",
            "organizations_url": "https://api.github.com/users/dsymonds/orgs",
            "repos_url": "https://api.github.com/users/dsymonds/repos",
            "events_url": "https://api.github.com/users/dsymonds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsymonds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I believe raw strings would also be acceptable to the go tool, so you might want to add ` to the character class.\n",
        "created_at": "2014-12-11T10:49:57Z",
        "updated_at": "2014-12-11T11:55:29Z",
        "html_url": "https://github.com/tools/godep/pull/157#discussion_r21669217",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/157",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/21669217"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/157#discussion_r21669217"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/21671564",
        "pull_request_review_id": null,
        "id": 21671564,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjcxNTY0",
        "diff_hunk": "@@ -339,6 +350,30 @@ func copyFile(dst, src string) error {\n \treturn err\n }\n \n+func copyWithoutImportComment(w io.Writer, r io.Reader) error {\n+\tsc := bufio.NewScanner(r)\n+\tfor sc.Scan() {\n+\t\t_, err := w.Write(append(stripImportComment(sc.Bytes()), '\\n'))\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+var importCommentRE = regexp.MustCompile(`\\s*(package\\s+\\w+)\\s+(?://\\s*import\\s+\"[^\"]*\"|/\\*\\s*import\\s+\"[^\"]*\"\\s*\\*/)\\s*`)\n+\n+// stripImportComment returns line with its import comment removed.\n+// If s is not a package statement containing an import comment,\n+// it is returned unaltered.\n+// See also http://golang.org/s/go14customimport.\n+func stripImportComment(line []byte) []byte {\n+\tif m := importCommentRE.FindSubmatch(line); m != nil {",
        "path": "save.go",
        "position": null,
        "original_position": 63,
        "commit_id": "330a9ac74c18f4f072c251c1ba5a9cab904c89a2",
        "original_commit_id": "90b46b087ed8cd2557c759f75e702fb06eb4a00a",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done, thanks.\n",
        "created_at": "2014-12-11T11:42:13Z",
        "updated_at": "2014-12-11T11:55:29Z",
        "html_url": "https://github.com/tools/godep/pull/157#discussion_r21671564",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/157",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/21671564"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/157#discussion_r21671564"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/21671595",
        "pull_request_review_id": null,
        "id": 21671595,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjcxNTk1",
        "diff_hunk": "@@ -339,6 +350,30 @@ func copyFile(dst, src string) error {\n \treturn err\n }\n \n+func copyWithoutImportComment(w io.Writer, r io.Reader) error {\n+\tsc := bufio.NewScanner(r)\n+\tfor sc.Scan() {\n+\t\t_, err := w.Write(append(stripImportComment(sc.Bytes()), '\\n'))\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+var importCommentRE = regexp.MustCompile(`\\s*(package\\s+\\w+)\\s+(?://\\s*import\\s+\"[^\"]*\"|/\\*\\s*import\\s+\"[^\"]*\"\\s*\\*/)\\s*`)",
        "path": "save.go",
        "position": null,
        "original_position": 56,
        "commit_id": "330a9ac74c18f4f072c251c1ba5a9cab904c89a2",
        "original_commit_id": "90b46b087ed8cd2557c759f75e702fb06eb4a00a",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good catch, done.\n",
        "created_at": "2014-12-11T11:42:48Z",
        "updated_at": "2014-12-11T11:55:29Z",
        "html_url": "https://github.com/tools/godep/pull/157#discussion_r21671595",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/157",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/21671595"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/157#discussion_r21671595"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/30621214",
        "pull_request_review_id": null,
        "id": 30621214,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjIxMjE0",
        "diff_hunk": "@@ -82,21 +84,25 @@ func rewriteGoFile(name, qual string, paths []string) error {\n \tif !changed {\n \t\treturn nil\n \t}\n-\n+\tvar buffer bytes.Buffer\n+\tif err = printerConfig.Fprint(&buffer, fset, f); err != nil {\n+\t\treturn err\n+\t}\n+\tfset = token.NewFileSet()\n+\tf, err = parser.ParseFile(fset, \"\", &buffer, parser.ParseComments)",
        "path": "rewrite.go",
        "position": null,
        "original_position": 26,
        "commit_id": "98f5c2e8906df47a9eaafebbcd406adde2c8d0a7",
        "original_commit_id": "dc378878e14a4528fba9fec911fa35afd4c96c5f",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think you'd still want a unique fname here as the filename is still used to \"record position information\", but I'm not really 100% sure. \n",
        "created_at": "2015-05-19T17:00:29Z",
        "updated_at": "2015-05-20T14:19:04Z",
        "html_url": "https://github.com/tools/godep/pull/218#discussion_r30621214",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/218",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/30621214"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/218#discussion_r30621214"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/218"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/30706349",
        "pull_request_review_id": null,
        "id": 30706349,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzA2MzQ5",
        "diff_hunk": "@@ -82,21 +84,25 @@ func rewriteGoFile(name, qual string, paths []string) error {\n \tif !changed {\n \t\treturn nil\n \t}\n-\n+\tvar buffer bytes.Buffer\n+\tif err = printerConfig.Fprint(&buffer, fset, f); err != nil {\n+\t\treturn err\n+\t}\n+\tfset = token.NewFileSet()\n+\tf, err = parser.ParseFile(fset, \"\", &buffer, parser.ParseComments)",
        "path": "rewrite.go",
        "position": null,
        "original_position": 26,
        "commit_id": "98f5c2e8906df47a9eaafebbcd406adde2c8d0a7",
        "original_commit_id": "dc378878e14a4528fba9fec911fa35afd4c96c5f",
        "user": {
            "login": "jeeyoungk",
            "id": 232784,
            "node_id": "MDQ6VXNlcjIzMjc4NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/232784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeeyoungk",
            "html_url": "https://github.com/jeeyoungk",
            "followers_url": "https://api.github.com/users/jeeyoungk/followers",
            "following_url": "https://api.github.com/users/jeeyoungk/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeeyoungk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeeyoungk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeeyoungk/subscriptions",
            "organizations_url": "https://api.github.com/users/jeeyoungk/orgs",
            "repos_url": "https://api.github.com/users/jeeyoungk/repos",
            "events_url": "https://api.github.com/users/jeeyoungk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeeyoungk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I changed to to use the original `name` again, but i'm not sure what effect here.\n",
        "created_at": "2015-05-20T14:20:03Z",
        "updated_at": "2015-05-20T14:20:03Z",
        "html_url": "https://github.com/tools/godep/pull/218#discussion_r30706349",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/218",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/30706349"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/218#discussion_r30706349"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/218"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/32591279",
        "pull_request_review_id": null,
        "id": 32591279,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNTkxMjc5",
        "diff_hunk": "@@ -354,14 +354,35 @@ func copyFile(dst, src string) error {\n }\n \n func copyWithoutImportComment(w io.Writer, r io.Reader) error {\n-\tsc := bufio.NewScanner(r)\n-\tfor sc.Scan() {\n-\t\t_, err := w.Write(append(stripImportComment(sc.Bytes()), '\\n'))\n+\tvar eof bool\n+\tb := bufio.NewReader(r)\n+\tfor {\n+\t\tl, err := b.ReadBytes('\\n')\n \t\tif err != nil {\n-\t\t\treturn err\n+\t\t\tif err == io.EOF {",
        "path": "save.go",
        "position": null,
        "original_position": 13,
        "commit_id": "127c92d1389a785ece3bacc847286e769a711da3",
        "original_commit_id": "6ece99433b15601cf018d006f61c9ad73489dafe",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It would be pretty cool to pull this out in front of the surrounding if stmt:\n\n``` go\nl, err := b.ReadBytes('\\n')\neof := err == io.EOF\nif err != nil && err != io.EOF {\n  return err\n}\n```\n",
        "created_at": "2015-06-17T02:37:50Z",
        "updated_at": "2015-06-17T18:11:28Z",
        "html_url": "https://github.com/tools/godep/pull/231#discussion_r32591279",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/231",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/32591279"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/231#discussion_r32591279"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/231"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/32591392",
        "pull_request_review_id": null,
        "id": 32591392,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNTkxMzky",
        "diff_hunk": "@@ -354,14 +354,35 @@ func copyFile(dst, src string) error {\n }\n \n func copyWithoutImportComment(w io.Writer, r io.Reader) error {\n-\tsc := bufio.NewScanner(r)\n-\tfor sc.Scan() {\n-\t\t_, err := w.Write(append(stripImportComment(sc.Bytes()), '\\n'))\n+\tvar eof bool\n+\tb := bufio.NewReader(r)\n+\tfor {\n+\t\tl, err := b.ReadBytes('\\n')\n \t\tif err != nil {\n-\t\t\treturn err\n+\t\t\tif err == io.EOF {\n+\t\t\t\teof = true\n+\t\t\t} else {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\n+\t\t// If we have data then write it out...\n+\t\tif len(l) > 0 {\n+\t\t\t// Trim the \\n if it exists\n+\t\t\tif l[len(l)-1] == '\\n' {",
        "path": "save.go",
        "position": null,
        "original_position": 23,
        "commit_id": "127c92d1389a785ece3bacc847286e769a711da3",
        "original_commit_id": "6ece99433b15601cf018d006f61c9ad73489dafe",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think bytes.TrimRight would be more readable here.\n",
        "created_at": "2015-06-17T02:41:06Z",
        "updated_at": "2015-06-17T18:11:28Z",
        "html_url": "https://github.com/tools/godep/pull/231#discussion_r32591392",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/231",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/32591392"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/231#discussion_r32591392"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/231"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/32591432",
        "pull_request_review_id": null,
        "id": 32591432,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNTkxNDMy",
        "diff_hunk": "@@ -354,14 +354,35 @@ func copyFile(dst, src string) error {\n }\n \n func copyWithoutImportComment(w io.Writer, r io.Reader) error {\n-\tsc := bufio.NewScanner(r)\n-\tfor sc.Scan() {\n-\t\t_, err := w.Write(append(stripImportComment(sc.Bytes()), '\\n'))\n+\tvar eof bool\n+\tb := bufio.NewReader(r)\n+\tfor {\n+\t\tl, err := b.ReadBytes('\\n')\n \t\tif err != nil {\n-\t\t\treturn err\n+\t\t\tif err == io.EOF {\n+\t\t\t\teof = true\n+\t\t\t} else {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\n+\t\t// If we have data then write it out...\n+\t\tif len(l) > 0 {\n+\t\t\t// Trim the \\n if it exists\n+\t\t\tif l[len(l)-1] == '\\n' {\n+\t\t\t\tl = l[0 : len(l)-1]\n+\t\t\t}\n+\n+\t\t\tif _, err := w.Write(append(stripImportComment(l), '\\n')); err != nil {",
        "path": "save.go",
        "position": null,
        "original_position": 27,
        "commit_id": "127c92d1389a785ece3bacc847286e769a711da3",
        "original_commit_id": "6ece99433b15601cf018d006f61c9ad73489dafe",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Since the call to w.Write is made primarily for its side effect, IMO it doesn't belong inside the if-stmt, it should go on its own line above.\n",
        "created_at": "2015-06-17T02:42:05Z",
        "updated_at": "2015-06-17T18:11:28Z",
        "html_url": "https://github.com/tools/godep/pull/231#discussion_r32591432",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/231",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/32591432"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/231#discussion_r32591432"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/231"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/32656468",
        "pull_request_review_id": null,
        "id": 32656468,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNjU2NDY4",
        "diff_hunk": "@@ -354,14 +354,28 @@ func copyFile(dst, src string) error {\n }\n \n func copyWithoutImportComment(w io.Writer, r io.Reader) error {\n-\tsc := bufio.NewScanner(r)\n-\tfor sc.Scan() {\n-\t\t_, err := w.Write(append(stripImportComment(sc.Bytes()), '\\n'))\n-\t\tif err != nil {\n+\tb := bufio.NewReader(r)\n+\tfor {\n+\t\tl, err := b.ReadBytes('\\n')\n+\t\teof := err == io.EOF\n+\t\tif err != nil && err != io.EOF {\n \t\t\treturn err\n \t\t}\n+\n+\t\t// If we have data then write it out...\n+\t\tif len(l) > 0 {\n+\t\t\t// Strip off \\n if it exists because stripImportComment\n+\t\t\t_, err := w.Write(append(stripImportComment(bytes.TrimRight(l, \"\\n\")), '\\n'))\n+\t\t\tif err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\n+\t\t// If we're at the EOF exit",
        "path": "save.go",
        "position": null,
        "original_position": 25,
        "commit_id": "127c92d1389a785ece3bacc847286e769a711da3",
        "original_commit_id": "cc3f440b9af7117ddada7f0c746aa2cb77f241e2",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The comments in this function don't really add anything meaningful. I would delete them.\n",
        "created_at": "2015-06-17T18:09:41Z",
        "updated_at": "2015-06-17T18:11:28Z",
        "html_url": "https://github.com/tools/godep/pull/231#discussion_r32656468",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/231",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/32656468"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/231#discussion_r32656468"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/231"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/32656755",
        "pull_request_review_id": null,
        "id": 32656755,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNjU2NzU1",
        "diff_hunk": "@@ -354,14 +354,28 @@ func copyFile(dst, src string) error {\n }\n \n func copyWithoutImportComment(w io.Writer, r io.Reader) error {\n-\tsc := bufio.NewScanner(r)\n-\tfor sc.Scan() {\n-\t\t_, err := w.Write(append(stripImportComment(sc.Bytes()), '\\n'))\n-\t\tif err != nil {\n+\tb := bufio.NewReader(r)\n+\tfor {\n+\t\tl, err := b.ReadBytes('\\n')\n+\t\teof := err == io.EOF\n+\t\tif err != nil && err != io.EOF {\n \t\t\treturn err\n \t\t}\n+\n+\t\t// If we have data then write it out...\n+\t\tif len(l) > 0 {\n+\t\t\t// Strip off \\n if it exists because stripImportComment\n+\t\t\t_, err := w.Write(append(stripImportComment(bytes.TrimRight(l, \"\\n\")), '\\n'))\n+\t\t\tif err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t}\n+\n+\t\t// If we're at the EOF exit",
        "path": "save.go",
        "position": null,
        "original_position": 25,
        "commit_id": "127c92d1389a785ece3bacc847286e769a711da3",
        "original_commit_id": "cc3f440b9af7117ddada7f0c746aa2cb77f241e2",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Removed.\n",
        "created_at": "2015-06-17T18:11:54Z",
        "updated_at": "2015-06-17T18:11:54Z",
        "html_url": "https://github.com/tools/godep/pull/231#discussion_r32656755",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/231",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/32656755"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/231#discussion_r32656755"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/231"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/32767354",
        "pull_request_review_id": null,
        "id": 32767354,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzY3MzU0",
        "diff_hunk": "@@ -0,0 +1,76 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"log\"\n+\n+\t\"github.com/pmezard/go-difflib/difflib\"",
        "path": "diff.go",
        "position": null,
        "original_position": 7,
        "commit_id": "3f25b10ee977904c09e54bcf0a81f37001b66112",
        "original_commit_id": "aee175480cdff96dc5ebead223d35841986f36f5",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This reminds me, we should probably start using godep on itself soon. Not part of this change, but soon.\n",
        "created_at": "2015-06-18T19:14:02Z",
        "updated_at": "2015-06-19T21:47:35Z",
        "html_url": "https://github.com/tools/godep/pull/232#discussion_r32767354",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/232",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/32767354"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/232#discussion_r32767354"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/232"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/32771838",
        "pull_request_review_id": null,
        "id": 32771838,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzcxODM4",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package main\n+\n+import (\n+\t\"strings\"\n+\t\"testing\"\n+)\n+\n+const (\n+\td1 = `--- Godeps\n++++ $GOPATH\n+@@ -1,12 +1,12 @@\n+ {\n+        \"ImportPath\": \"C\",\n+        \"GoVersion\": \"go1.2\",\n+        \"Deps\": [\n+                {\n+                        \"ImportPath\": \"D101\",\n+-                       \"Comment\": \"D202\",\n++                       \"Comment\": \"D303\",\n+                        \"Rev\": \"\"\n+                }\n+        ]\n+ }\n+`\n+\n+\td2 = `--- Godeps\n++++ $GOPATH\n+@@ -1,12 +1,17 @@\n+ {\n+        \"ImportPath\": \"C\",\n+        \"GoVersion\": \"go1.2\",\n+        \"Deps\": [\n+                {\n+                        \"ImportPath\": \"D101\",\n+                        \"Comment\": \"D202\",\n+                        \"Rev\": \"\"\n++               },\n++               {\n++                       \"ImportPath\": \"D102\",\n++                       \"Comment\": \"D203\",\n++                       \"Rev\": \"\"\n+                }\n+        ]\n+ }\n+`\n+)\n+\n+var (\n+\tdep1 = Godeps{\n+\t\tImportPath: \"C\",\n+\t\tGoVersion:  \"go1.2\",\n+\t\tDeps: []Dependency{\n+\t\t\t{ImportPath: \"D101\", Comment: \"D202\"},\n+\t\t},\n+\t}\n+\n+\tdep2 = Godeps{\n+\t\tImportPath: \"C\",\n+\t\tGoVersion:  \"go1.2\",\n+\t\tDeps: []Dependency{\n+\t\t\t{ImportPath: \"D101\", Comment: \"D202\"},\n+\t\t},\n+\t}\n+)\n+\n+func TestDiff(t *testing.T) {\n+\t// Equiv Godeps, should yield and empty diff.\n+\tdiff, _ := diffStr(&dep1, &dep2)\n+\tif diff != \"\" {\n+\t\tt.Errorf(\"Diff is %v want ''\", diff)\n+\t}\n+\n+\t// Test modifications in packages make it to the diff.\n+\tdep2.Deps[0].Comment = \"D303\"\n+\tdiff, _ = diffStr(&dep1, &dep2)\n+\tif !diffsEqual(strings.Fields(diff), strings.Fields(d1)) {\n+\t\tt.Errorf(\"Expecting diffs to be equal. Obs <%q>. Exp <%q>\", diff, d1)\n+\t}\n+\n+\t// Test additional packages in new Godeps\n+\tdep2.Deps[0].Comment = \"D202\"\n+\tdep2.Deps = append(dep2.Deps, Dependency{ImportPath: \"D102\", Comment: \"D203\"})\n+\tdiff, _ = diffStr(&dep1, &dep2)\n+\n+\tif !diffsEqual(strings.Fields(diff), strings.Fields(d2)) {\n+\t\tt.Errorf(\"Expecting diffs to be equal. Obs <%v>. Exp <%v>\", diff, d2)\n+\t}\n+}\n+\n+// diffsEqual asserts that two slices are equivalent.\n+func diffsEqual(a, b []string) bool {\n+\tfor i := range a {",
        "path": "diff_test.go",
        "position": null,
        "original_position": 92,
        "commit_id": "3f25b10ee977904c09e54bcf0a81f37001b66112",
        "original_commit_id": "aee175480cdff96dc5ebead223d35841986f36f5",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What if b is a different length than a?\n\nMaybe fast path before this?\n\n``` go\nif len(a) != len(b) { return false }\n```\n",
        "created_at": "2015-06-18T20:02:57Z",
        "updated_at": "2015-06-19T21:47:35Z",
        "html_url": "https://github.com/tools/godep/pull/232#discussion_r32771838",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/232",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/32771838"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/232#discussion_r32771838"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/232"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/32777058",
        "pull_request_review_id": null,
        "id": 32777058,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzc3MDU4",
        "diff_hunk": "@@ -0,0 +1,76 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"log\"\n+\n+\t\"github.com/pmezard/go-difflib/difflib\"\n+)\n+\n+var cmdDiff = &Command{\n+\tUsage: \"diff\",\n+\tShort: \"shows the diff between current and previously saved set of godeps\",\n+\tLong: `\n+Shows the difference, in a unified diff format, between the \n+current set of godeps and those generated on a ",
        "path": "diff.go",
        "position": null,
        "original_position": 15,
        "commit_id": "3f25b10ee977904c09e54bcf0a81f37001b66112",
        "original_commit_id": "aee175480cdff96dc5ebead223d35841986f36f5",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I suggest s/godeps/dependencies/ because the current set isn't actually saved anywhere yet. As a user I don't conceptualize it as \"godeps\" until it's written to the file.\n",
        "created_at": "2015-06-18T20:52:40Z",
        "updated_at": "2015-06-19T21:47:35Z",
        "html_url": "https://github.com/tools/godep/pull/232#discussion_r32777058",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/232",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/32777058"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/232#discussion_r32777058"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/232"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/32777128",
        "pull_request_review_id": null,
        "id": 32777128,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzc3MTI4",
        "diff_hunk": "@@ -0,0 +1,76 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"log\"\n+\n+\t\"github.com/pmezard/go-difflib/difflib\"\n+)\n+\n+var cmdDiff = &Command{\n+\tUsage: \"diff\",\n+\tShort: \"shows the diff between current and previously saved set of godeps\",\n+\tLong: `\n+Shows the difference, in a unified diff format, between the \n+current set of godeps and those generated on a \n+previous 'go save' execution.\n+`,\n+\tRun: runDiff,\n+}\n+\n+func runDiff(cmd *Command, args []string) {\n+\tvar gold Godeps\n+\n+\t_, err := readOldGodeps(&gold)\n+\tif err != nil {\n+\t\tlog.Fatalln(err)\n+\t}\n+\n+\tpkgs := []string{\".\"}\n+\tdot, err := LoadPackages(pkgs...)\n+\tif err != nil {\n+\t\tlog.Fatalln(err)\n+\t}\n+\n+\tver, err := goVersion()\n+\tif err != nil {\n+\t\tlog.Fatalln(err)\n+\t}\n+\n+\tgnew := &Godeps{\n+\t\tImportPath: dot[0].ImportPath,\n+\t\tGoVersion:  ver,\n+\t}\n+\n+\terr = gnew.Load(dot)\n+\tif err != nil {\n+\t\tlog.Fatalln(err)\n+\t}\n+\n+\tdiff, _ := diffStr(&gold, gnew)\n+\tlog.Println(diff)\n+}\n+\n+// diffStr returns a unified diff string of two Godeps.\n+func diffStr(a, b *Godeps) (string, error) {\n+\tvar ab, bb bytes.Buffer\n+\n+\t_, err := a.WriteTo(&ab)\n+\tif err != nil {\n+\t\tlog.Fatalln(err)\n+\t}\n+\n+\t_, err = b.WriteTo(&bb)\n+\tif err != nil {\n+\t\tlog.Fatalln(err)\n+\t}\n+\n+\tdiff := difflib.UnifiedDiff{\n+\t\tA:        difflib.SplitLines(ab.String()),\n+\t\tB:        difflib.SplitLines(bb.String()),\n+\t\tFromFile: \"Godeps\",\n+\t\tToFile:   \"$GOPATH\",\n+\t\tContext:  10,\n+\t}\n+\treturn difflib.GetUnifiedDiffString(diff)",
        "path": "diff.go",
        "position": 79,
        "original_position": 75,
        "commit_id": "3f25b10ee977904c09e54bcf0a81f37001b66112",
        "original_commit_id": "aee175480cdff96dc5ebead223d35841986f36f5",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why return this error if it's just going to be ignored above?\n",
        "created_at": "2015-06-18T20:53:20Z",
        "updated_at": "2015-06-19T21:47:35Z",
        "html_url": "https://github.com/tools/godep/pull/232#discussion_r32777128",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/232",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/32777128"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/232#discussion_r32777128"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/232"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/32777174",
        "pull_request_review_id": null,
        "id": 32777174,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzc3MTc0",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package main\n+\n+import (\n+\t\"strings\"\n+\t\"testing\"\n+)\n+\n+const (\n+\td1 = `--- Godeps\n++++ $GOPATH\n+@@ -1,12 +1,12 @@\n+ {\n+        \"ImportPath\": \"C\",\n+        \"GoVersion\": \"go1.2\",\n+        \"Deps\": [\n+                {\n+                        \"ImportPath\": \"D101\",\n+-                       \"Comment\": \"D202\",\n++                       \"Comment\": \"D303\",\n+                        \"Rev\": \"\"\n+                }\n+        ]\n+ }\n+`\n+\n+\td2 = `--- Godeps\n++++ $GOPATH\n+@@ -1,12 +1,17 @@\n+ {\n+        \"ImportPath\": \"C\",\n+        \"GoVersion\": \"go1.2\",\n+        \"Deps\": [\n+                {\n+                        \"ImportPath\": \"D101\",\n+                        \"Comment\": \"D202\",\n+                        \"Rev\": \"\"\n++               },\n++               {\n++                       \"ImportPath\": \"D102\",\n++                       \"Comment\": \"D203\",\n++                       \"Rev\": \"\"\n+                }\n+        ]\n+ }\n+`\n+)\n+\n+var (\n+\tdep1 = Godeps{\n+\t\tImportPath: \"C\",\n+\t\tGoVersion:  \"go1.2\",\n+\t\tDeps: []Dependency{\n+\t\t\t{ImportPath: \"D101\", Comment: \"D202\"},\n+\t\t},\n+\t}\n+\n+\tdep2 = Godeps{\n+\t\tImportPath: \"C\",\n+\t\tGoVersion:  \"go1.2\",\n+\t\tDeps: []Dependency{\n+\t\t\t{ImportPath: \"D101\", Comment: \"D202\"},\n+\t\t},\n+\t}\n+)\n+\n+func TestDiff(t *testing.T) {\n+\t// Equiv Godeps, should yield and empty diff.",
        "path": "diff_test.go",
        "position": null,
        "original_position": 67,
        "commit_id": "3f25b10ee977904c09e54bcf0a81f37001b66112",
        "original_commit_id": "aee175480cdff96dc5ebead223d35841986f36f5",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/and/an/\n",
        "created_at": "2015-06-18T20:53:45Z",
        "updated_at": "2015-06-19T21:47:35Z",
        "html_url": "https://github.com/tools/godep/pull/232#discussion_r32777174",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/232",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/32777174"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/232#discussion_r32777174"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/232"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/33593101",
        "pull_request_review_id": null,
        "id": 33593101,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTkzMTAx",
        "diff_hunk": "@@ -0,0 +1,15 @@\n+language: go\n+\n+go: 1.4",
        "path": ".travis.yml",
        "position": 3,
        "original_position": 3,
        "commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "original_commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not 1.4.2 ? Or does 1.4 imply the latest from the 1.4.X line?\n",
        "created_at": "2015-06-30T16:29:15Z",
        "updated_at": "2015-06-30T16:29:15Z",
        "html_url": "https://github.com/tools/godep/pull/238#discussion_r33593101",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/238",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/33593101"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/238#discussion_r33593101"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/238"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/33593143",
        "pull_request_review_id": null,
        "id": 33593143,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTkzMTQz",
        "diff_hunk": "@@ -0,0 +1,15 @@\n+language: go\n+\n+go: 1.4\n+\n+script:\n+    - git config --global user.email \"you@example.com\"\n+    - git config --global user.name \"Your Name\"",
        "path": ".travis.yml",
        "position": 7,
        "original_position": 7,
        "commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "original_commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is this?\n",
        "created_at": "2015-06-30T16:29:39Z",
        "updated_at": "2015-06-30T16:29:39Z",
        "html_url": "https://github.com/tools/godep/pull/238#discussion_r33593143",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/238",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/33593143"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/238#discussion_r33593143"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/238"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/33593209",
        "pull_request_review_id": null,
        "id": 33593209,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTkzMjA5",
        "diff_hunk": "@@ -0,0 +1,15 @@\n+language: go\n+\n+go: 1.4\n+\n+script:\n+    - git config --global user.email \"you@example.com\"\n+    - git config --global user.name \"Your Name\"\n+    - test -z \"$(go fmt)\"\n+    - go vet\n+    - go test\n+    - go test -race",
        "path": ".travis.yml",
        "position": 11,
        "original_position": 11,
        "commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "original_commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Have you considered golint as well?\n",
        "created_at": "2015-06-30T16:30:23Z",
        "updated_at": "2015-06-30T16:30:23Z",
        "html_url": "https://github.com/tools/godep/pull/238#discussion_r33593209",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/238",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/33593209"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/238#discussion_r33593209"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/238"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/33596578",
        "pull_request_review_id": null,
        "id": 33596578,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTk2NTc4",
        "diff_hunk": "@@ -0,0 +1,15 @@\n+language: go\n+\n+go: 1.4\n+\n+script:\n+    - git config --global user.email \"you@example.com\"\n+    - git config --global user.name \"Your Name\"\n+    - test -z \"$(go fmt)\"\n+    - go vet\n+    - go test",
        "path": ".travis.yml",
        "position": 10,
        "original_position": 10,
        "commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "original_commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I usually add `-v` to my .travis.yml files as well.\n",
        "created_at": "2015-06-30T17:02:15Z",
        "updated_at": "2015-06-30T17:02:15Z",
        "html_url": "https://github.com/tools/godep/pull/238#discussion_r33596578",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/238",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/33596578"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/238#discussion_r33596578"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/238"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/33801046",
        "pull_request_review_id": null,
        "id": 33801046,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODAxMDQ2",
        "diff_hunk": "@@ -0,0 +1,15 @@\n+language: go\n+\n+go: 1.4\n+\n+script:\n+    - git config --global user.email \"you@example.com\"\n+    - git config --global user.name \"Your Name\"",
        "path": ".travis.yml",
        "position": 7,
        "original_position": 7,
        "commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "original_commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Godep's unit tests run git to synthesize repositories on disk, and git (at least on travis) requires these to be configured.\n",
        "created_at": "2015-07-02T17:21:19Z",
        "updated_at": "2015-07-02T17:21:19Z",
        "html_url": "https://github.com/tools/godep/pull/238#discussion_r33801046",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/238",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/33801046"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/238#discussion_r33801046"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/238"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/33801686",
        "pull_request_review_id": null,
        "id": 33801686,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODAxNjg2",
        "diff_hunk": "@@ -0,0 +1,15 @@\n+language: go\n+\n+go: 1.4\n+\n+script:\n+    - git config --global user.email \"you@example.com\"\n+    - git config --global user.name \"Your Name\"\n+    - test -z \"$(go fmt)\"\n+    - go vet\n+    - go test\n+    - go test -race",
        "path": ".travis.yml",
        "position": 11,
        "original_position": 11,
        "commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "original_commit_id": "e222432d081e1d86a61279d971be859640037c65",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's add golint in a separate commit, along with fixing the dozen or so things it complains about.\n",
        "created_at": "2015-07-02T17:28:15Z",
        "updated_at": "2015-07-02T17:28:15Z",
        "html_url": "https://github.com/tools/godep/pull/238#discussion_r33801686",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/238",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/33801686"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/238#discussion_r33801686"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/238"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/33938473",
        "pull_request_review_id": null,
        "id": 33938473,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTM4NDcz",
        "diff_hunk": "@@ -131,6 +133,13 @@ func (g *Godeps) Load(pkgs []*Package) error {\n \t\t\terr1 = errors.New(\"error loading dependencies\")\n \t\t\tcontinue\n \t\t}\n+\t\tif saveP {\n+\t\t\tfmt.Printf(\"godep: Would you like to index %s ?\\n[Y/n]:\", pkg.ImportPath)\n+\t\t\ttext, _ := reader.ReadString('\\n')\n+\t\t\tif text[0] == 'n' {\n+\t\t\t\tcontinue\n+\t\t\t}",
        "path": "dep.go",
        "position": 25,
        "original_position": 25,
        "commit_id": "92a7a62e85aedb342cf4d839e144b6ca2a80e46a",
        "original_commit_id": "92a7a62e85aedb342cf4d839e144b6ca2a80e46a",
        "user": {
            "login": "alexandercampbell",
            "id": 9295657,
            "node_id": "MDQ6VXNlcjkyOTU2NTc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9295657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexandercampbell",
            "html_url": "https://github.com/alexandercampbell",
            "followers_url": "https://api.github.com/users/alexandercampbell/followers",
            "following_url": "https://api.github.com/users/alexandercampbell/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexandercampbell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexandercampbell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexandercampbell/subscriptions",
            "organizations_url": "https://api.github.com/users/alexandercampbell/orgs",
            "repos_url": "https://api.github.com/users/alexandercampbell/repos",
            "events_url": "https://api.github.com/users/alexandercampbell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexandercampbell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This should be\n\n``` go\nif len(text) < 1 || text[0] != 'y' {\n        continue\n}\n```\n\nPrevent out-of-bounds index panic and be a little stricter about the input.\n",
        "created_at": "2015-07-06T14:22:45Z",
        "updated_at": "2015-07-06T14:22:45Z",
        "html_url": "https://github.com/tools/godep/pull/139#discussion_r33938473",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/139",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/33938473"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/139#discussion_r33938473"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/139"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/33938690",
        "pull_request_review_id": null,
        "id": 33938690,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTM4Njkw",
        "diff_hunk": "@@ -131,6 +133,13 @@ func (g *Godeps) Load(pkgs []*Package) error {\n \t\t\terr1 = errors.New(\"error loading dependencies\")\n \t\t\tcontinue\n \t\t}\n+\t\tif saveP {\n+\t\t\tfmt.Printf(\"godep: Would you like to index %s ?\\n[Y/n]:\", pkg.ImportPath)",
        "path": "dep.go",
        "position": 21,
        "original_position": 21,
        "commit_id": "92a7a62e85aedb342cf4d839e144b6ca2a80e46a",
        "original_commit_id": "92a7a62e85aedb342cf4d839e144b6ca2a80e46a",
        "user": {
            "login": "alexandercampbell",
            "id": 9295657,
            "node_id": "MDQ6VXNlcjkyOTU2NTc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9295657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexandercampbell",
            "html_url": "https://github.com/alexandercampbell",
            "followers_url": "https://api.github.com/users/alexandercampbell/followers",
            "following_url": "https://api.github.com/users/alexandercampbell/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexandercampbell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexandercampbell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexandercampbell/subscriptions",
            "organizations_url": "https://api.github.com/users/alexandercampbell/orgs",
            "repos_url": "https://api.github.com/users/alexandercampbell/repos",
            "events_url": "https://api.github.com/users/alexandercampbell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexandercampbell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "To fit better with Unix convention this should fit on one line.\n\n``` go\nfmt.Printf(`godep: index %q? [Y/n] `, pkg.ImportPath)\n```\n",
        "created_at": "2015-07-06T14:24:25Z",
        "updated_at": "2015-07-06T14:24:25Z",
        "html_url": "https://github.com/tools/godep/pull/139#discussion_r33938690",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/139",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/33938690"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/139#discussion_r33938690"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/139"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/34410092",
        "pull_request_review_id": null,
        "id": 34410092,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDEwMDky",
        "diff_hunk": "@@ -109,7 +109,14 @@ func rewriteGoFile(name, qual string, paths []string) error {\n // sep is the signature set of path elements that\n // precede the original path of an imported package\n // in a rewritten import path.\n-const sep = \"/Godeps/_workspace/src/\"\n+var sep = \"/Godeps/_workspace/src/\"\n+var VendorExperiment = os.Getenv(\"GO15VENDOREXPERIMENT\") == \"1\"\n+\n+func init() {",
        "path": "rewrite.go",
        "position": null,
        "original_position": 8,
        "commit_id": "549fe2ce5ae0c3675e6f8a3b754ff7e25f8ac08c",
        "original_commit_id": "5112a62d347a6a08643027fc838148e081ce0df1",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would suggest the signature `defaultSep(experiment bool) string` for this.\n",
        "created_at": "2015-07-11T06:06:16Z",
        "updated_at": "2015-07-12T04:31:04Z",
        "html_url": "https://github.com/tools/godep/pull/244#discussion_r34410092",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/244",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/34410092"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/244#discussion_r34410092"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/244"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/34410101",
        "pull_request_review_id": null,
        "id": 34410101,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDEwMTAx",
        "diff_hunk": "@@ -25,7 +25,8 @@ with the exact source control revision of each dependency, and copies\n their source code into a subdirectory.\n \n The list is written to Godeps/Godeps.json, and source code for all\n-dependencies is copied into Godeps/_workspace.\n+dependencies is copied into either Godeps/_workspace or, if the vendor\n+experiment it turned on, vendor.",
        "path": "save.go",
        "position": null,
        "original_position": 6,
        "commit_id": "549fe2ce5ae0c3675e6f8a3b754ff7e25f8ac08c",
        "original_commit_id": "5112a62d347a6a08643027fc838148e081ce0df1",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/it/is/\n",
        "created_at": "2015-07-11T06:07:37Z",
        "updated_at": "2015-07-12T04:31:04Z",
        "html_url": "https://github.com/tools/godep/pull/244#discussion_r34410101",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/244",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/34410101"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/244#discussion_r34410101"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/244"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/34413637",
        "pull_request_review_id": null,
        "id": 34413637,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDEzNjM3",
        "diff_hunk": "@@ -109,7 +109,14 @@ func rewriteGoFile(name, qual string, paths []string) error {\n // sep is the signature set of path elements that\n // precede the original path of an imported package\n // in a rewritten import path.\n-const sep = \"/Godeps/_workspace/src/\"\n+var sep = \"/Godeps/_workspace/src/\"\n+var VendorExperiment = os.Getenv(\"GO15VENDOREXPERIMENT\") == \"1\"\n+\n+func init() {",
        "path": "rewrite.go",
        "position": null,
        "original_position": 8,
        "commit_id": "549fe2ce5ae0c3675e6f8a3b754ff7e25f8ac08c",
        "original_commit_id": "5112a62d347a6a08643027fc838148e081ce0df1",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm. I likened it to flag handling, which is done elsewhere in init functions.\n\nAre you suggesting that init should call `defaultSep(VendorExperiment)` to set sep or that everywhere sep is currently used it should be replaced with `defaultSep(VendorExperiment)` ?\n",
        "created_at": "2015-07-11T15:31:22Z",
        "updated_at": "2015-07-12T04:31:04Z",
        "html_url": "https://github.com/tools/godep/pull/244#discussion_r34413637",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/244",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/34413637"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/244#discussion_r34413637"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/244"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/34415898",
        "pull_request_review_id": null,
        "id": 34415898,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDE1ODk4",
        "diff_hunk": "@@ -109,7 +109,14 @@ func rewriteGoFile(name, qual string, paths []string) error {\n // sep is the signature set of path elements that\n // precede the original path of an imported package\n // in a rewritten import path.\n-const sep = \"/Godeps/_workspace/src/\"\n+var sep = \"/Godeps/_workspace/src/\"\n+var VendorExperiment = os.Getenv(\"GO15VENDOREXPERIMENT\") == \"1\"\n+\n+func init() {",
        "path": "rewrite.go",
        "position": null,
        "original_position": 8,
        "commit_id": "549fe2ce5ae0c3675e6f8a3b754ff7e25f8ac08c",
        "original_commit_id": "5112a62d347a6a08643027fc838148e081ce0df1",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm suggesting the first, e.g. `var sep = defaultSep(VendorExperiment)`.\n\nFlags are defined in init functions only because they have to to avoid a cycle. (Try changing it to `var saveR = cmdSave.Flag.Bool(...)` to see what happens.)\n",
        "created_at": "2015-07-11T20:23:53Z",
        "updated_at": "2015-07-12T04:31:04Z",
        "html_url": "https://github.com/tools/godep/pull/244#discussion_r34415898",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/244",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/34415898"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/244#discussion_r34415898"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/244"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/34821206",
        "pull_request_review_id": null,
        "id": 34821206,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0ODIxMjA2",
        "diff_hunk": "@@ -48,11 +48,20 @@ func rewriteTree(path, qual string, paths []string) error {\n \t\t\tlog.Println(\"rewrite:\", w.Err())\n \t\t\tcontinue\n \t\t}\n-\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n-\t\t\terr := rewriteGoFile(w.Path(), qual, paths)\n+\t\tfilePath := w.Path()",
        "path": "rewrite.go",
        "position": 6,
        "original_position": 6,
        "commit_id": "622353fa1db45a52ec3cf9a871a33516e7729edb",
        "original_commit_id": "622353fa1db45a52ec3cf9a871a33516e7729edb",
        "user": {
            "login": "neurogeek",
            "id": 243474,
            "node_id": "MDQ6VXNlcjI0MzQ3NA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/243474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neurogeek",
            "html_url": "https://github.com/neurogeek",
            "followers_url": "https://api.github.com/users/neurogeek/followers",
            "following_url": "https://api.github.com/users/neurogeek/following{/other_user}",
            "gists_url": "https://api.github.com/users/neurogeek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neurogeek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neurogeek/subscriptions",
            "organizations_url": "https://api.github.com/users/neurogeek/orgs",
            "repos_url": "https://api.github.com/users/neurogeek/repos",
            "events_url": "https://api.github.com/users/neurogeek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neurogeek/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/filePath/path \n",
        "created_at": "2015-07-16T18:30:12Z",
        "updated_at": "2015-07-16T18:30:12Z",
        "html_url": "https://github.com/tools/godep/pull/201#discussion_r34821206",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/201",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/34821206"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/201#discussion_r34821206"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/201"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/34821210",
        "pull_request_review_id": null,
        "id": 34821210,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0ODIxMjEw",
        "diff_hunk": "@@ -48,11 +48,20 @@ func rewriteTree(path, qual string, paths []string) error {\n \t\t\tlog.Println(\"rewrite:\", w.Err())\n \t\t\tcontinue\n \t\t}\n-\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n-\t\t\terr := rewriteGoFile(w.Path(), qual, paths)\n+\t\tfilePath := w.Path()\n+\t\tif !w.Stat().IsDir() && strings.HasSuffix(filePath, \".go\") {\n+\t\t\tfileInfo, err := os.Lstat(filePath)\n \t\t\tif err != nil {\n \t\t\t\treturn err\n \t\t\t}\n+\n+\t\t\tif fileInfo.Mode() != os.ModeSymlink {",
        "path": "rewrite.go",
        "position": 13,
        "original_position": 13,
        "commit_id": "622353fa1db45a52ec3cf9a871a33516e7729edb",
        "original_commit_id": "622353fa1db45a52ec3cf9a871a33516e7729edb",
        "user": {
            "login": "neurogeek",
            "id": 243474,
            "node_id": "MDQ6VXNlcjI0MzQ3NA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/243474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neurogeek",
            "html_url": "https://github.com/neurogeek",
            "followers_url": "https://api.github.com/users/neurogeek/followers",
            "following_url": "https://api.github.com/users/neurogeek/following{/other_user}",
            "gists_url": "https://api.github.com/users/neurogeek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neurogeek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neurogeek/subscriptions",
            "organizations_url": "https://api.github.com/users/neurogeek/orgs",
            "repos_url": "https://api.github.com/users/neurogeek/repos",
            "events_url": "https://api.github.com/users/neurogeek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neurogeek/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/fileInfo/info\n\nI'd rather have something like:\ninfo.Mode() == os.ModeSymlink {\n  continue\n}\n\nerr = rewriteGoFile ...\n",
        "created_at": "2015-07-16T18:30:14Z",
        "updated_at": "2015-07-16T18:30:14Z",
        "html_url": "https://github.com/tools/godep/pull/201#discussion_r34821210",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/201",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/34821210"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/201#discussion_r34821210"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/201"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/33543230",
        "pull_request_review_id": null,
        "id": 33543230,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTQzMjMw",
        "diff_hunk": "@@ -364,6 +376,13 @@ func writeFile(name, body string) error {\n \treturn ioutil.WriteFile(name, []byte(body), 0666)\n }\n \n+func printVerbose(args ...interface{}) {\n+\tif saveVerbose {\n+\t\targs[0] = \"\\033[1m\" + fmt.Sprintf(\"%s\", args[0]) + \"\\033[0m:\\t\"",
        "path": "save.go",
        "position": null,
        "original_position": 84,
        "commit_id": "c90899b1c4a57d0622d99d5d32540ea74d084ce6",
        "original_commit_id": "11dae3947e154e4d7e0478ae497e1ba0f3585eff",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's not print out escape codes. Just ASCII text is preferable.\n",
        "created_at": "2015-06-30T06:21:49Z",
        "updated_at": "2015-07-21T13:40:41Z",
        "html_url": "https://github.com/tools/godep/pull/129#discussion_r33543230",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/129",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/33543230"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/129#discussion_r33543230"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/129"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/33543319",
        "pull_request_review_id": null,
        "id": 33543319,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTQzMzE5",
        "diff_hunk": "@@ -364,6 +376,13 @@ func writeFile(name, body string) error {\n \treturn ioutil.WriteFile(name, []byte(body), 0666)\n }\n \n+func printVerbose(args ...interface{}) {",
        "path": "save.go",
        "position": null,
        "original_position": 82,
        "commit_id": "c90899b1c4a57d0622d99d5d32540ea74d084ce6",
        "original_commit_id": "11dae3947e154e4d7e0478ae497e1ba0f3585eff",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/printVerbose/vprintln/\n\nThis should follow the naming convention from package fmt.\n",
        "created_at": "2015-06-30T06:24:04Z",
        "updated_at": "2015-07-21T13:40:41Z",
        "html_url": "https://github.com/tools/godep/pull/129#discussion_r33543319",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/129",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/33543319"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/129#discussion_r33543319"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/129"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/33543415",
        "pull_request_review_id": null,
        "id": 33543415,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTQzNDE1",
        "diff_hunk": "@@ -68,12 +68,13 @@ func rewriteGoFile(name, qual string, paths []string) error {\n \n \tvar changed bool\n \tfor _, s := range f.Imports {\n-\t\tname, err := strconv.Unquote(s.Path.Value)\n+\t\timportName, err := strconv.Unquote(s.Path.Value)\n \t\tif err != nil {\n \t\t\treturn err // can't happen\n \t\t}\n-\t\tq := qualify(unqualify(name), qual, paths)\n-\t\tif q != name {\n+\t\tq := qualify(unqualify(importName), qual, paths)\n+\t\tif q != importName {\n+\t\t\tprintVerbose(\"rewrite \"+name, s.Path.Value, \"\u2192\", q)",
        "path": "rewrite.go",
        "position": null,
        "original_position": 13,
        "commit_id": "c90899b1c4a57d0622d99d5d32540ea74d084ce6",
        "original_commit_id": "11dae3947e154e4d7e0478ae497e1ba0f3585eff",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The \u2192 looks nice, but it can be difficult to process with other tools like sed and grep. Let's try to stick to ASCII.\n",
        "created_at": "2015-06-30T06:25:33Z",
        "updated_at": "2015-07-21T13:40:41Z",
        "html_url": "https://github.com/tools/godep/pull/129#discussion_r33543415",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/129",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/33543415"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/129#discussion_r33543415"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/129"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/37121562",
        "pull_request_review_id": null,
        "id": 37121562,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTIxNTYy",
        "diff_hunk": "@@ -36,6 +36,13 @@ import C/Godeps/_workspace/src/D. This makes C's repo\n self-contained and causes 'go get' to build C with the\n right version of all dependencies.\n \n+If you don't want to use `-r`, you must make sure that the `Godeps/_workspace`",
        "path": "Readme.md",
        "position": null,
        "original_position": 4,
        "commit_id": "66fa30a455532b64a7f70f8716a274c833bee3c6",
        "original_commit_id": "7c2e175cb25fc999e800be1f47385e84c8d30210",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/don't want to/don't us/\n\n`Godeps/_workspace` is an implementation detail. If you are not using `-r` you should wrap your go commands with `godep`: eg. `godep go install -v ./...`\n\nIf you fix these issues then I'll merge it.\n",
        "created_at": "2015-08-14T21:32:08Z",
        "updated_at": "2015-08-15T00:27:36Z",
        "html_url": "https://github.com/tools/godep/pull/261#discussion_r37121562",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/261",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/37121562"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/261#discussion_r37121562"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/261"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/37128592",
        "pull_request_review_id": null,
        "id": 37128592,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI4NTky",
        "diff_hunk": "@@ -36,6 +36,13 @@ import C/Godeps/_workspace/src/D. This makes C's repo\n self-contained and causes 'go get' to build C with the\n right version of all dependencies.\n \n+If you don't want to use `-r`, you must make sure that the `Godeps/_workspace`",
        "path": "Readme.md",
        "position": null,
        "original_position": 4,
        "commit_id": "66fa30a455532b64a7f70f8716a274c833bee3c6",
        "original_commit_id": "7c2e175cb25fc999e800be1f47385e84c8d30210",
        "user": {
            "login": "glasser",
            "id": 16724,
            "node_id": "MDQ6VXNlcjE2NzI0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/16724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glasser",
            "html_url": "https://github.com/glasser",
            "followers_url": "https://api.github.com/users/glasser/followers",
            "following_url": "https://api.github.com/users/glasser/following{/other_user}",
            "gists_url": "https://api.github.com/users/glasser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glasser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glasser/subscriptions",
            "organizations_url": "https://api.github.com/users/glasser/orgs",
            "repos_url": "https://api.github.com/users/glasser/repos",
            "events_url": "https://api.github.com/users/glasser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glasser/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OK, updated.\n",
        "created_at": "2015-08-14T23:34:55Z",
        "updated_at": "2015-08-15T00:27:36Z",
        "html_url": "https://github.com/tools/godep/pull/261#discussion_r37128592",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/261",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/37128592"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/261#discussion_r37128592"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/261"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/37130166",
        "pull_request_review_id": null,
        "id": 37130166,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMwMTY2",
        "diff_hunk": "@@ -36,6 +36,16 @@ import C/Godeps/_workspace/src/D. This makes C's repo\n self-contained and causes 'go get' to build C with the\n right version of all dependencies.\n \n+If you don't use `-r`, then in order to actually use the fixed dependencies and",
        "path": "Readme.md",
        "position": null,
        "original_position": 4,
        "commit_id": "66fa30a455532b64a7f70f8716a274c833bee3c6",
        "original_commit_id": "43043fc3b98a42af8962892f8e21672a7f35a28c",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/actually//\n",
        "created_at": "2015-08-15T00:25:12Z",
        "updated_at": "2015-08-15T00:27:36Z",
        "html_url": "https://github.com/tools/godep/pull/261#discussion_r37130166",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/261",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/37130166"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/261#discussion_r37130166"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/261"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/37130262",
        "pull_request_review_id": null,
        "id": 37130262,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMwMjYy",
        "diff_hunk": "@@ -36,6 +36,16 @@ import C/Godeps/_workspace/src/D. This makes C's repo\n self-contained and causes 'go get' to build C with the\n right version of all dependencies.\n \n+If you don't use `-r`, then in order to actually use the fixed dependencies and",
        "path": "Readme.md",
        "position": null,
        "original_position": 4,
        "commit_id": "66fa30a455532b64a7f70f8716a274c833bee3c6",
        "original_commit_id": "43043fc3b98a42af8962892f8e21672a7f35a28c",
        "user": {
            "login": "glasser",
            "id": 16724,
            "node_id": "MDQ6VXNlcjE2NzI0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/16724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glasser",
            "html_url": "https://github.com/glasser",
            "followers_url": "https://api.github.com/users/glasser/followers",
            "following_url": "https://api.github.com/users/glasser/following{/other_user}",
            "gists_url": "https://api.github.com/users/glasser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glasser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glasser/subscriptions",
            "organizations_url": "https://api.github.com/users/glasser/orgs",
            "repos_url": "https://api.github.com/users/glasser/repos",
            "events_url": "https://api.github.com/users/glasser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glasser/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ok\n",
        "created_at": "2015-08-15T00:27:37Z",
        "updated_at": "2015-08-15T00:27:37Z",
        "html_url": "https://github.com/tools/godep/pull/261#discussion_r37130262",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/261",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/37130262"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/261#discussion_r37130262"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/261"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/38671419",
        "pull_request_review_id": null,
        "id": 38671419,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcxNDE5",
        "diff_hunk": "@@ -49,7 +50,11 @@ func rewriteTree(path, qual string, paths []string) error {\n \t\t\tlog.Println(\"rewrite:\", w.Err())\n \t\t\tcontinue\n \t\t}\n-\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n+\t\ts := w.Stat()\n+\t\tif s.IsDir() && s.Name() == \"testdata\" {\n+\t\t\tw.SkipDir()",
        "path": "rewrite.go",
        "position": null,
        "original_position": 15,
        "commit_id": "1d430ac238cb59404238eecb0a6b203d189f8a96",
        "original_commit_id": "dd636f10198bdccb8847e72d9ce3d72ff98d1095",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe add a `continue` after this?\n",
        "created_at": "2015-09-03T17:23:23Z",
        "updated_at": "2015-09-03T17:59:03Z",
        "html_url": "https://github.com/tools/godep/pull/267#discussion_r38671419",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/267",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/38671419"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/267#discussion_r38671419"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/267"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/38673118",
        "pull_request_review_id": null,
        "id": 38673118,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjczMTE4",
        "diff_hunk": "@@ -49,7 +50,12 @@ func rewriteTree(path, qual string, paths []string) error {\n \t\t\tlog.Println(\"rewrite:\", w.Err())\n \t\t\tcontinue\n \t\t}\n-\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n+\t\ts := w.Stat()",
        "path": "rewrite.go",
        "position": null,
        "original_position": 13,
        "commit_id": "1d430ac238cb59404238eecb0a6b203d189f8a96",
        "original_commit_id": "c6a06a8ff902dfbb130222f142682dacbecdd142",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For me anyway this makes the intent clearer:\n\n``` go\ns := w.Stat()\nswitch s.IsDir() {\n  case true:\n    if s.Name() == \"testdata\" {\n      w.SkipDir()\n      continue\n    }\n  case false:\n    if strings.HasSuffix(w.Path(), \".go\") {\n      if err := rewriteGoFile(w.Path(), qual, paths); err != nil {\n        return err\n      }\n    }\n}\n```\n\nFeel free not to change it though.\n",
        "created_at": "2015-09-03T17:37:24Z",
        "updated_at": "2015-09-03T17:59:03Z",
        "html_url": "https://github.com/tools/godep/pull/267#discussion_r38673118",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/267",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/38673118"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/267#discussion_r38673118"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/267"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/38677209",
        "pull_request_review_id": null,
        "id": 38677209,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc3MjA5",
        "diff_hunk": "@@ -49,10 +50,19 @@ func rewriteTree(path, qual string, paths []string) error {\n \t\t\tlog.Println(\"rewrite:\", w.Err())\n \t\t\tcontinue\n \t\t}\n-\t\tif !w.Stat().IsDir() && strings.HasSuffix(w.Path(), \".go\") {\n-\t\t\terr := rewriteGoFile(w.Path(), qual, paths)\n-\t\t\tif err != nil {\n-\t\t\t\treturn err\n+\t\ts := w.Stat()\n+\t\tswitch s.IsDir() {\n+\t\tcase true:\n+\t\t\tif s.Name() == \"testdata\" {\n+\t\t\t\tw.SkipDir()\n+\t\t\t\tcontinue",
        "path": "rewrite.go",
        "position": 21,
        "original_position": 21,
        "commit_id": "1d430ac238cb59404238eecb0a6b203d189f8a96",
        "original_commit_id": "1d430ac238cb59404238eecb0a6b203d189f8a96",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "heh. in this version the continue is superfluous AFAIK\n",
        "created_at": "2015-09-03T18:08:33Z",
        "updated_at": "2015-09-03T18:08:33Z",
        "html_url": "https://github.com/tools/godep/pull/267#discussion_r38677209",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/267",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/38677209"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/267#discussion_r38677209"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/267"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/20137456",
        "pull_request_review_id": null,
        "id": 20137456,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTM3NDU2",
        "diff_hunk": "@@ -36,6 +37,7 @@ var vcsBzr = &VCS{\n \tIdentifyCmd: \"version-info --custom --template {revision_id}\",\n \tDescribeCmd: \"revno\", // TODO(kr): find tag names if possible\n \tDiffCmd:     \"diff -r {rev}\",\n+\tListCmd:     \"ls -R\",",
        "path": "vcs.go",
        "position": 12,
        "original_position": 12,
        "commit_id": "f0c8bd59e50eac1c80e54330ead1c4bf0ee3a897",
        "original_commit_id": "4948869c1214024d0621eb41401149eaf9294382",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think this command `ls -R` is not going to produce output that works with `listFiles` as written below.\n\n```\n$ git ls-files\na/b\n$ ls -R\na\n\n./a:\nb\n```\n",
        "created_at": "2014-11-11T08:31:54Z",
        "updated_at": "2015-09-04T19:41:14Z",
        "html_url": "https://github.com/tools/godep/pull/144#discussion_r20137456",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/144",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/20137456"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/144#discussion_r20137456"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/144"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/20137475",
        "pull_request_review_id": null,
        "id": 20137475,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTM3NDc1",
        "diff_hunk": "@@ -36,6 +37,7 @@ var vcsBzr = &VCS{\n \tIdentifyCmd: \"version-info --custom --template {revision_id}\",\n \tDescribeCmd: \"revno\", // TODO(kr): find tag names if possible\n \tDiffCmd:     \"diff -r {rev}\",\n+\tListCmd:     \"ls -R\",",
        "path": "vcs.go",
        "position": 12,
        "original_position": 12,
        "commit_id": "f0c8bd59e50eac1c80e54330ead1c4bf0ee3a897",
        "original_commit_id": "4948869c1214024d0621eb41401149eaf9294382",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, nm, it's a ~~mercurial~~ bzr command.\n",
        "created_at": "2014-11-11T08:32:32Z",
        "updated_at": "2015-09-04T19:41:14Z",
        "html_url": "https://github.com/tools/godep/pull/144#discussion_r20137475",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/144",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/20137475"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/144#discussion_r20137475"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/144"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/39568967",
        "pull_request_review_id": null,
        "id": 39568967,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4OTY3",
        "diff_hunk": "@@ -1008,6 +1009,72 @@ func TestSave(t *testing.T) {\n \t\t\t\t},\n \t\t\t},\n \t\t},\n+\t\t{ // don't copy _test.go files\n+\t\t\tcwd: \"C\",\n+\t\t\tstart: []*node{\n+\t\t\t\t{\n+\t\t\t\t\t\"C\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"main.go\", pkg(\"main\", \"D\"), nil},\n+\t\t\t\t\t\t{\"+git\", \"\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"D\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"main.go\", pkg(\"D\"), nil},\n+\t\t\t\t\t\t{\"main_test.go\", pkg(\"D\"), nil},\n+\t\t\t\t\t\t{\"+git\", \"D1\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\twant: []*node{\n+\t\t\t\t{\"C/main.go\", pkg(\"main\", \"D\"), nil},\n+\t\t\t\t{\"C/Godeps/_workspace/src/D/main.go\", pkg(\"D\"), nil},\n+\t\t\t},\n+\t\t\twdep: Godeps{\n+\t\t\t\tImportPath: \"C\",\n+\t\t\t\tDeps: []Dependency{\n+\t\t\t\t\t{ImportPath: \"D\", Comment: \"D1\"},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t\t{ // don't copy _test.go files",
        "path": "save_test.go",
        "position": null,
        "original_position": 44,
        "commit_id": "87fb5cdc4cbd6f0150f2e58087e235e843065304",
        "original_commit_id": "ba84f2467a901268886355f4b7dbf575657eed91",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/don't/do/\n?\n",
        "created_at": "2015-09-15T21:37:35Z",
        "updated_at": "2015-09-16T23:55:11Z",
        "html_url": "https://github.com/tools/godep/pull/276#discussion_r39568967",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/276",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/39568967"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/276#discussion_r39568967"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/276"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/39694378",
        "pull_request_review_id": null,
        "id": 39694378,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0Mzc4",
        "diff_hunk": "@@ -1008,6 +1009,72 @@ func TestSave(t *testing.T) {\n \t\t\t\t},\n \t\t\t},\n \t\t},\n+\t\t{ // don't copy _test.go files\n+\t\t\tcwd: \"C\",\n+\t\t\tstart: []*node{\n+\t\t\t\t{\n+\t\t\t\t\t\"C\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"main.go\", pkg(\"main\", \"D\"), nil},\n+\t\t\t\t\t\t{\"+git\", \"\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"D\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"main.go\", pkg(\"D\"), nil},\n+\t\t\t\t\t\t{\"main_test.go\", pkg(\"D\"), nil},\n+\t\t\t\t\t\t{\"+git\", \"D1\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\twant: []*node{\n+\t\t\t\t{\"C/main.go\", pkg(\"main\", \"D\"), nil},\n+\t\t\t\t{\"C/Godeps/_workspace/src/D/main.go\", pkg(\"D\"), nil},\n+\t\t\t},\n+\t\t\twdep: Godeps{\n+\t\t\t\tImportPath: \"C\",\n+\t\t\t\tDeps: []Dependency{\n+\t\t\t\t\t{ImportPath: \"D\", Comment: \"D1\"},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t\t{ // don't copy _test.go files",
        "path": "save_test.go",
        "position": null,
        "original_position": 44,
        "commit_id": "87fb5cdc4cbd6f0150f2e58087e235e843065304",
        "original_commit_id": "ba84f2467a901268886355f4b7dbf575657eed91",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oops fixed.\n",
        "created_at": "2015-09-16T22:39:34Z",
        "updated_at": "2015-09-16T23:55:11Z",
        "html_url": "https://github.com/tools/godep/pull/276#discussion_r39694378",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/276",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/39694378"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/276#discussion_r39694378"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/276"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/41600603",
        "pull_request_review_id": null,
        "id": 41600603,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwNjAz",
        "diff_hunk": "@@ -1,19 +1,35 @@\n language: go\n-\n+sudo: false\n go: 1.4.2\n-\n script:\n-    # Godep's unit tests run git, and git complains\n-    # if we don't set these config parameters.\n-    # We put dummy values here because they don't matter.\n-    - git config --global user.email \"you@example.com\"\n-    - git config --global user.name \"Your Name\"\n-\n-    - test -z \"$(go fmt)\"\n-    - go vet\n-    - go test -v\n-    - go test -v -race\n-    - test -z \"$(goimports -l .)\"\n-\n+  # Godep's unit tests run git, and git complains\n+  # if we don't set these config parameters.\n+  # We put dummy values here because they don't matter.\n+- git config --global user.email \"you@example.com\"\n+- git config --global user.name \"Your Name\"\n+- test -z \"$(go fmt)\"\n+- go vet\n+- go test -v\n+- go test -v -race\n+- test -z \"$(goimports -l .)\"\n before_install:\n-    - go get golang.org/x/tools/cmd/vet golang.org/x/tools/cmd/goimports\n+- go get golang.org/x/tools/cmd/vet golang.org/x/tools/cmd/goimports\n+before_deploy:\n+- export OS_TARGETS=\"linux darwin windows\"\n+- export ARCH_TARGETS=\"386 amd64\"\n+- go get github.com/mitchellh/gox\n+- gox -os \"$OS_TARGETS\" -arch=\"$ARCH_TARGETS\" -build-toolchain\n+- gox -os \"$OS_TARGETS\" -arch=\"$ARCH_TARGETS\"\n+deploy:\n+  skip_cleanup: true\n+  provider: releases\n+  api_key:\n+    secure: Q1JP8LziaXMTxFmNXiyC1YhS9e4M4WnI6UDjRTMf6mm1LZeJyUFOCCtXnifL7RyCIR1hpjp6s8M1aWE+NpuweF96IZI3Uk4ASx5C8FePC4qvhsCdtJ2sLD2GTIrp9b0MS9/+ao20AIbpVDSaLaF9IjqXpMxMyM0P8P5coRTkwItlGxmQbVJW3YuiYcPa8UojwM4EyafO2CIoUKapW8lwb9KcimBJV8PfF/XZjPVhMkn2ABhh5Hqbn2zBJtvPYMMzi0CnY50JQF5LwN3vGTMpTsRP+lOLCNbOWfkl+2hgG7VpKrtx+cX62knOodpF457sIJ31KUzmeLUVBejTGb1zuVeTojuyi8Huo8YBIBCcN+p3Dqd+n2ZK45mIrheGiEJIkf/vI4MI6A01Nu/o+xU0IPsVfAL/xU5j5nntEGfFWVoclPrl9qcfqf74xdRcARzcCJVmdc8iw49DBDHJfnPa3zxzVz//00+Rz6mZXmhk+Npk/HLLNW59vmJIjP+8XOtPor7dST9HrS1a9AcnmIjNuw9yfbwK5769SDVxCKgqNwXW/Dy5F39aIH5AL4I4y9hCEeeT8ctvSJHGOyiB9MWU5jnt5tluPtz5opG51tFXnIYP/XaWpTfO+eJ6x55pbwT+n3LfRS5l1POM+jGAFF1MFWwc14RY7qynEIEzm4Wb/UE=",
        "path": ".travis.yml",
        "position": 42,
        "original_position": 42,
        "commit_id": "ecc11377d82520eb033a1ca5c23251d49e238be9",
        "original_commit_id": "ecc11377d82520eb033a1ca5c23251d49e238be9",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Does committing this secret to git mean that anyone on earth can publish a release binary? That seems like a problem.\n",
        "created_at": "2015-10-09T06:22:06Z",
        "updated_at": "2015-10-09T06:22:06Z",
        "html_url": "https://github.com/tools/godep/pull/290#discussion_r41600603",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/290",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/41600603"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/290#discussion_r41600603"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/290"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/41649555",
        "pull_request_review_id": null,
        "id": 41649555,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ5NTU1",
        "diff_hunk": "@@ -1,19 +1,35 @@\n language: go\n-\n+sudo: false\n go: 1.4.2\n-\n script:\n-    # Godep's unit tests run git, and git complains\n-    # if we don't set these config parameters.\n-    # We put dummy values here because they don't matter.\n-    - git config --global user.email \"you@example.com\"\n-    - git config --global user.name \"Your Name\"\n-\n-    - test -z \"$(go fmt)\"\n-    - go vet\n-    - go test -v\n-    - go test -v -race\n-    - test -z \"$(goimports -l .)\"\n-\n+  # Godep's unit tests run git, and git complains\n+  # if we don't set these config parameters.\n+  # We put dummy values here because they don't matter.\n+- git config --global user.email \"you@example.com\"\n+- git config --global user.name \"Your Name\"\n+- test -z \"$(go fmt)\"\n+- go vet\n+- go test -v\n+- go test -v -race\n+- test -z \"$(goimports -l .)\"\n before_install:\n-    - go get golang.org/x/tools/cmd/vet golang.org/x/tools/cmd/goimports\n+- go get golang.org/x/tools/cmd/vet golang.org/x/tools/cmd/goimports\n+before_deploy:\n+- export OS_TARGETS=\"linux darwin windows\"\n+- export ARCH_TARGETS=\"386 amd64\"\n+- go get github.com/mitchellh/gox\n+- gox -os \"$OS_TARGETS\" -arch=\"$ARCH_TARGETS\" -build-toolchain\n+- gox -os \"$OS_TARGETS\" -arch=\"$ARCH_TARGETS\"\n+deploy:\n+  skip_cleanup: true\n+  provider: releases\n+  api_key:\n+    secure: Q1JP8LziaXMTxFmNXiyC1YhS9e4M4WnI6UDjRTMf6mm1LZeJyUFOCCtXnifL7RyCIR1hpjp6s8M1aWE+NpuweF96IZI3Uk4ASx5C8FePC4qvhsCdtJ2sLD2GTIrp9b0MS9/+ao20AIbpVDSaLaF9IjqXpMxMyM0P8P5coRTkwItlGxmQbVJW3YuiYcPa8UojwM4EyafO2CIoUKapW8lwb9KcimBJV8PfF/XZjPVhMkn2ABhh5Hqbn2zBJtvPYMMzi0CnY50JQF5LwN3vGTMpTsRP+lOLCNbOWfkl+2hgG7VpKrtx+cX62knOodpF457sIJ31KUzmeLUVBejTGb1zuVeTojuyi8Huo8YBIBCcN+p3Dqd+n2ZK45mIrheGiEJIkf/vI4MI6A01Nu/o+xU0IPsVfAL/xU5j5nntEGfFWVoclPrl9qcfqf74xdRcARzcCJVmdc8iw49DBDHJfnPa3zxzVz//00+Rz6mZXmhk+Npk/HLLNW59vmJIjP+8XOtPor7dST9HrS1a9AcnmIjNuw9yfbwK5769SDVxCKgqNwXW/Dy5F39aIH5AL4I4y9hCEeeT8ctvSJHGOyiB9MWU5jnt5tluPtz5opG51tFXnIYP/XaWpTfO+eJ6x55pbwT+n3LfRS5l1POM+jGAFF1MFWwc14RY7qynEIEzm4Wb/UE=",
        "path": ".travis.yml",
        "position": 42,
        "original_position": 42,
        "commit_id": "ecc11377d82520eb033a1ca5c23251d49e238be9",
        "original_commit_id": "ecc11377d82520eb033a1ca5c23251d49e238be9",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "They are encrypted using a private key associated with this repo so I believe they won't decrypt properly for another repo / fork / etc (as per Travis docs).\n",
        "created_at": "2015-10-09T16:27:17Z",
        "updated_at": "2015-10-09T16:27:17Z",
        "html_url": "https://github.com/tools/godep/pull/290#discussion_r41649555",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/290",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/41649555"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/290#discussion_r41649555"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/290"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/42195346",
        "pull_request_review_id": null,
        "id": 42195346,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1MzQ2",
        "diff_hunk": "@@ -186,12 +187,14 @@ func save(pkgs []string) error {\n \n type revError struct {\n \tImportPath string\n+\tHavePath   string\n \tHaveRev    string\n \tWantRev    string\n }\n \n func (v *revError) Error() string {\n-\treturn v.ImportPath + \": revision is \" + v.HaveRev + \", want \" + v.WantRev\n+\treturn fmt.Sprintf(\"cannot save %s at revision %s: already have %s at revision %s.\\n\"+\n+\t\t\"Update %s first.\", v.ImportPath, v.WantRev, v.HavePath, v.HaveRev, v.HavePath)",
        "path": "save.go",
        "position": null,
        "original_position": 20,
        "commit_id": "434bfd2757fd8da801e155b0d46f44f8ff3e4f97",
        "original_commit_id": "ad1edcf6a20051569fb735c4d40f83f91b2cdccc",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "perhaps...\n\n``` go\n\"`go update %s` first.\", ....\n```\n\n?\n",
        "created_at": "2015-10-15T23:43:27Z",
        "updated_at": "2015-10-16T03:45:30Z",
        "html_url": "https://github.com/tools/godep/pull/291#discussion_r42195346",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/291",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/42195346"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/291#discussion_r42195346"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/291"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/42913890",
        "pull_request_review_id": null,
        "id": 42913890,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzODkw",
        "diff_hunk": "@@ -288,10 +302,35 @@ func copySrc(dir string, deps []Dependency) error {\n \t\t\t\tok = false\n \t\t\t}\n \t\t}\n+\n+\t\t// check parent directorys for legal files and copy\n+\t\tfor _, parent := range parents(rel) {",
        "path": "save.go",
        "position": null,
        "original_position": 35,
        "commit_id": "f70cd4b9b7a8ffa74a7cff961776cd71f8bc6691",
        "original_commit_id": "d598bb64133595d669bcbb150c74f4f46b69ba72",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There's no need to try to find the parent, vf already contains all files for the repo that contains the package. I realized that I didn't update the listFIles() doc comment. So I did: 2115b735b60387f29297a05fcfed85c77e40530f. Was that a source of confusion?\n",
        "created_at": "2015-10-23T21:01:25Z",
        "updated_at": "2015-11-01T19:39:29Z",
        "html_url": "https://github.com/tools/godep/pull/301#discussion_r42913890",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/301",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/42913890"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/301#discussion_r42913890"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/301"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/44462236",
        "pull_request_review_id": null,
        "id": 44462236,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyMjM2",
        "diff_hunk": "@@ -316,7 +325,7 @@ func copySrc(dir string, deps []Dependency) error {\n \t\tw = fs.Walk(rootdir)\n \t\tfor w.Step() {\n \t\t\tfname := filepath.Base(w.Path())\n-\t\t\tif IsLegalFile(fname) {\n+\t\t\tif IsLegalFile(fname) && !strings.Contains(w.Path(), sep) {",
        "path": "save.go",
        "position": 26,
        "original_position": 26,
        "commit_id": "d0070ef2f3b0ed90bfa949a138101a1fb429ebbf",
        "original_commit_id": "d0070ef2f3b0ed90bfa949a138101a1fb429ebbf",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you add a test case for this?\n",
        "created_at": "2015-11-10T20:46:26Z",
        "updated_at": "2015-11-10T20:46:26Z",
        "html_url": "https://github.com/tools/godep/pull/321#discussion_r44462236",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/321",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/44462236"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/321#discussion_r44462236"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/321"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/44378980",
        "pull_request_review_id": null,
        "id": 44378980,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4OTgw",
        "diff_hunk": "@@ -52,6 +52,8 @@ vendor experiment.\n \n If -v is given, verbose output is enabled.\n \n+If -m is given, only save out to the minor go version to Godeps.json.",
        "path": "save.go",
        "position": null,
        "original_position": 13,
        "commit_id": "ceeed9dbc21d92540a34cf6eaa18c508cbd5eb5c",
        "original_commit_id": "8f7c27e3360ab464ce54871d3d50c00eca279f50",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/minor/major/\n\nFor example, Go 1.5 is a major release, and 1.5.1 is a minor revision.\nSee https://golang.org/doc/devel/release.html.\n",
        "created_at": "2015-11-10T08:10:54Z",
        "updated_at": "2015-11-13T16:28:26Z",
        "html_url": "https://github.com/tools/godep/pull/318#discussion_r44378980",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/318",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/44378980"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/318#discussion_r44378980"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/318"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/46380006",
        "pull_request_review_id": null,
        "id": 46380006,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwMDA2",
        "diff_hunk": "@@ -27,46 +37,129 @@ type Package struct {\n \tError struct {\n \t\tErr string\n \t}\n+\n+\t// --- New stuff for now\n+\tImports []string\n }\n \n // LoadPackages loads the named packages using go list -json.\n-// Unlike the go tool, an empty argument list is treated as\n-// an empty list; \".\" must be given explicitly if desired.\n-func LoadPackages(name ...string) (a []*Package, err error) {\n-\tif len(name) == 0 {\n+// Unlike the go tool, an empty argument list is treated as an empty list; \".\"\n+// must be given explicitly if desired.\n+// IgnoredGoFiles will be processed and their dependencies resolved recursively\n+// Files with a build tag of `ignore` are skipped. Files with other build tags\n+// are however processed.\n+func LoadPackages(names ...string) (a []*Package, err error) {\n+\tif len(names) == 0 {\n \t\treturn nil, nil\n \t}\n-\targs := []string{\"list\", \"-e\", \"-json\"}\n-\tcmd := exec.Command(\"go\", append(args, name...)...)\n-\tr, err := cmd.StdoutPipe()\n-\tif err != nil {\n-\t\treturn nil, err\n+\tfor _, i := range importPaths(names) {\n+\t\tp, err := listPackage(i)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t\ta = append(a, p)\n \t}\n-\tcmd.Stderr = os.Stderr\n-\terr = cmd.Start()\n+\treturn a, nil\n+}\n+\n+// resolveIgnoredGoFiles for the given pkgs, recursively\n+func resolveIgnoredGoFiles(pkg *Package, pc map[string]*Package) error {\n+\tfmt.Println(\"resolveIgnoredGoFiles:\", pkg.ImportPath)\n+\tvar allDeps []string\n+\tallDeps = append(allDeps, pkg.ImportPath)\n+\tallDeps = append(allDeps, pkg.Deps...)\n+\tallDeps = append(allDeps, pkg.TestImports...)\n+\tallDeps = append(allDeps, pkg.XTestImports...)\n+\tallDeps = uniq(allDeps)\n+\tspkgs, err := LoadPackages(allDeps...)\n \tif err != nil {\n-\t\treturn nil, err\n+\t\treturn err\n \t}\n-\td := json.NewDecoder(r)\n-\tfor {\n-\t\tinfo := new(Package)\n-\t\terr = d.Decode(info)\n-\t\tif err == io.EOF {\n-\t\t\tbreak\n+\tfor _, sp := range spkgs {\n+\t\tif pc[sp.ImportPath] != nil {\n+\t\t\tcontinue\n \t\t}\n-\t\tif err != nil {\n-\t\t\tinfo.Error.Err = err.Error()\n+\t\tif len(sp.IgnoredGoFiles) > 0 {\n+\t\t\tpc[sp.ImportPath] = sp\n+\t\t\tni, nti, err := sp.ignoredGoFilesDeps()\n+\t\t\tfmt.Println(\"sp\", sp.ImportPath)\n+\t\t\tfmt.Println(\"ni\", ni)\n+\t\t\tfmt.Println(\"nti\", nti)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)\n+\t\t\t}\n+\t\t\tpkg.Deps = append(pkg.Deps, ni...)\n+\t\t\tpkg.TestImports = append(pkg.TestImports, nti...)\n+\t\t\tif len(ni) > 0 || len(nti) > 0 {\n+\t\t\t\terr := resolveIgnoredGoFiles(sp, pc)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t}\n \t\t}\n-\t\ta = append(a, info)\n \t}\n-\terr = cmd.Wait()\n-\tif err != nil {\n-\t\treturn nil, err\n+\treturn nil\n+}\n+\n+func (p *Package) ignoredGoFilesDeps() ([]string, []string, error) {\n+\tif p.Standard {\n+\t\treturn nil, nil, nil\n \t}\n-\treturn a, nil\n+\n+\tvar buildMatch = \"+build \"\n+\tvar buildFieldSplit = func(r rune) bool {\n+\t\treturn unicode.IsSpace(r) || r == ','\n+\t}\n+\tvar imports, testImports []string\n+\tfor _, fname := range p.IgnoredGoFiles {\n+\t\ttgt := filepath.Join(p.Dir, fname)\n+\t\tfset := token.NewFileSet()\n+\t\tf, err := parser.ParseFile(fset, tgt, nil, parser.ParseComments)\n+\t\tif err != nil {\n+\t\t\treturn nil, nil, err\n+\t\t}\n+\t\tif len(f.Comments) > 0 {\n+\t\t\tfor _, c := range f.Comments {",
        "path": "pkg.go",
        "position": null,
        "original_position": 142,
        "commit_id": "bd1a5cd1a59bff09fa53022436490eb03fb0dc4c",
        "original_commit_id": "7d63b15561ecd0d390c897dd9ed5016f6c57f8ce",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Looks like this scans all comments, but build tags have to appear near the top of the file. Might get false positives from looking at too many comments.\n\nAlso\u2026 is this necessary at all? Why not include \"ignore\" files too for the purposes of dependencies? Ignore doesn't necessarily mean \"this file is garbage\", it simply means \"don't build this file into the package\", same as any other unsatisfied constraint.\n",
        "created_at": "2015-12-02T06:05:38Z",
        "updated_at": "2015-12-08T01:23:24Z",
        "html_url": "https://github.com/tools/godep/pull/341#discussion_r46380006",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/341",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/46380006"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/341#discussion_r46380006"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/341"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/46380054",
        "pull_request_review_id": null,
        "id": 46380054,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwMDU0",
        "diff_hunk": "@@ -27,46 +37,129 @@ type Package struct {\n \tError struct {\n \t\tErr string\n \t}\n+\n+\t// --- New stuff for now\n+\tImports []string\n }\n \n // LoadPackages loads the named packages using go list -json.\n-// Unlike the go tool, an empty argument list is treated as\n-// an empty list; \".\" must be given explicitly if desired.\n-func LoadPackages(name ...string) (a []*Package, err error) {\n-\tif len(name) == 0 {\n+// Unlike the go tool, an empty argument list is treated as an empty list; \".\"\n+// must be given explicitly if desired.\n+// IgnoredGoFiles will be processed and their dependencies resolved recursively\n+// Files with a build tag of `ignore` are skipped. Files with other build tags\n+// are however processed.\n+func LoadPackages(names ...string) (a []*Package, err error) {\n+\tif len(names) == 0 {\n \t\treturn nil, nil\n \t}\n-\targs := []string{\"list\", \"-e\", \"-json\"}\n-\tcmd := exec.Command(\"go\", append(args, name...)...)\n-\tr, err := cmd.StdoutPipe()\n-\tif err != nil {\n-\t\treturn nil, err\n+\tfor _, i := range importPaths(names) {\n+\t\tp, err := listPackage(i)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t\ta = append(a, p)\n \t}\n-\tcmd.Stderr = os.Stderr\n-\terr = cmd.Start()\n+\treturn a, nil\n+}\n+\n+// resolveIgnoredGoFiles for the given pkgs, recursively\n+func resolveIgnoredGoFiles(pkg *Package, pc map[string]*Package) error {\n+\tfmt.Println(\"resolveIgnoredGoFiles:\", pkg.ImportPath)\n+\tvar allDeps []string\n+\tallDeps = append(allDeps, pkg.ImportPath)\n+\tallDeps = append(allDeps, pkg.Deps...)\n+\tallDeps = append(allDeps, pkg.TestImports...)\n+\tallDeps = append(allDeps, pkg.XTestImports...)\n+\tallDeps = uniq(allDeps)\n+\tspkgs, err := LoadPackages(allDeps...)\n \tif err != nil {\n-\t\treturn nil, err\n+\t\treturn err\n \t}\n-\td := json.NewDecoder(r)\n-\tfor {\n-\t\tinfo := new(Package)\n-\t\terr = d.Decode(info)\n-\t\tif err == io.EOF {\n-\t\t\tbreak\n+\tfor _, sp := range spkgs {\n+\t\tif pc[sp.ImportPath] != nil {\n+\t\t\tcontinue\n \t\t}\n-\t\tif err != nil {\n-\t\t\tinfo.Error.Err = err.Error()\n+\t\tif len(sp.IgnoredGoFiles) > 0 {\n+\t\t\tpc[sp.ImportPath] = sp\n+\t\t\tni, nti, err := sp.ignoredGoFilesDeps()\n+\t\t\tfmt.Println(\"sp\", sp.ImportPath)\n+\t\t\tfmt.Println(\"ni\", ni)\n+\t\t\tfmt.Println(\"nti\", nti)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)\n+\t\t\t}\n+\t\t\tpkg.Deps = append(pkg.Deps, ni...)\n+\t\t\tpkg.TestImports = append(pkg.TestImports, nti...)\n+\t\t\tif len(ni) > 0 || len(nti) > 0 {\n+\t\t\t\terr := resolveIgnoredGoFiles(sp, pc)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t}\n \t\t}\n-\t\ta = append(a, info)\n \t}\n-\terr = cmd.Wait()\n-\tif err != nil {\n-\t\treturn nil, err\n+\treturn nil\n+}\n+\n+func (p *Package) ignoredGoFilesDeps() ([]string, []string, error) {\n+\tif p.Standard {\n+\t\treturn nil, nil, nil\n \t}\n-\treturn a, nil\n+\n+\tvar buildMatch = \"+build \"\n+\tvar buildFieldSplit = func(r rune) bool {\n+\t\treturn unicode.IsSpace(r) || r == ','\n+\t}\n+\tvar imports, testImports []string\n+\tfor _, fname := range p.IgnoredGoFiles {\n+\t\ttgt := filepath.Join(p.Dir, fname)\n+\t\tfset := token.NewFileSet()\n+\t\tf, err := parser.ParseFile(fset, tgt, nil, parser.ParseComments)\n+\t\tif err != nil {\n+\t\t\treturn nil, nil, err\n+\t\t}\n+\t\tif len(f.Comments) > 0 {\n+\t\t\tfor _, c := range f.Comments {\n+\t\t\t\tct := c.Text()\n+\t\t\t\tif i := strings.Index(ct, buildMatch); i != -1 {\n+\t\t\t\t\tfor _, b := range strings.FieldsFunc(ct[i+len(buildMatch):], buildFieldSplit) {\n+\t\t\t\t\t\tif b == \"ignore\" {\n+\t\t\t\t\t\t\tcontinue",
        "path": "pkg.go",
        "position": null,
        "original_position": 147,
        "commit_id": "bd1a5cd1a59bff09fa53022436490eb03fb0dc4c",
        "original_commit_id": "7d63b15561ecd0d390c897dd9ed5016f6c57f8ce",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This doesn't seem to accomplish anything. The body of this loop is otherwise empty. Does there need to be a label on the outermost loop?\n",
        "created_at": "2015-12-02T06:06:36Z",
        "updated_at": "2015-12-08T01:23:24Z",
        "html_url": "https://github.com/tools/godep/pull/341#discussion_r46380054",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/341",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/46380054"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/341#discussion_r46380054"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/341"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/46380075",
        "pull_request_review_id": null,
        "id": 46380075,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwMDc1",
        "diff_hunk": "@@ -27,46 +37,129 @@ type Package struct {\n \tError struct {\n \t\tErr string\n \t}\n+\n+\t// --- New stuff for now\n+\tImports []string\n }\n \n // LoadPackages loads the named packages using go list -json.\n-// Unlike the go tool, an empty argument list is treated as\n-// an empty list; \".\" must be given explicitly if desired.\n-func LoadPackages(name ...string) (a []*Package, err error) {\n-\tif len(name) == 0 {\n+// Unlike the go tool, an empty argument list is treated as an empty list; \".\"\n+// must be given explicitly if desired.\n+// IgnoredGoFiles will be processed and their dependencies resolved recursively\n+// Files with a build tag of `ignore` are skipped. Files with other build tags\n+// are however processed.\n+func LoadPackages(names ...string) (a []*Package, err error) {\n+\tif len(names) == 0 {\n \t\treturn nil, nil\n \t}\n-\targs := []string{\"list\", \"-e\", \"-json\"}\n-\tcmd := exec.Command(\"go\", append(args, name...)...)\n-\tr, err := cmd.StdoutPipe()\n-\tif err != nil {\n-\t\treturn nil, err\n+\tfor _, i := range importPaths(names) {\n+\t\tp, err := listPackage(i)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t\ta = append(a, p)\n \t}\n-\tcmd.Stderr = os.Stderr\n-\terr = cmd.Start()\n+\treturn a, nil\n+}\n+\n+// resolveIgnoredGoFiles for the given pkgs, recursively\n+func resolveIgnoredGoFiles(pkg *Package, pc map[string]*Package) error {\n+\tfmt.Println(\"resolveIgnoredGoFiles:\", pkg.ImportPath)\n+\tvar allDeps []string\n+\tallDeps = append(allDeps, pkg.ImportPath)\n+\tallDeps = append(allDeps, pkg.Deps...)\n+\tallDeps = append(allDeps, pkg.TestImports...)\n+\tallDeps = append(allDeps, pkg.XTestImports...)\n+\tallDeps = uniq(allDeps)\n+\tspkgs, err := LoadPackages(allDeps...)\n \tif err != nil {\n-\t\treturn nil, err\n+\t\treturn err\n \t}\n-\td := json.NewDecoder(r)\n-\tfor {\n-\t\tinfo := new(Package)\n-\t\terr = d.Decode(info)\n-\t\tif err == io.EOF {\n-\t\t\tbreak\n+\tfor _, sp := range spkgs {\n+\t\tif pc[sp.ImportPath] != nil {\n+\t\t\tcontinue\n \t\t}\n-\t\tif err != nil {\n-\t\t\tinfo.Error.Err = err.Error()\n+\t\tif len(sp.IgnoredGoFiles) > 0 {\n+\t\t\tpc[sp.ImportPath] = sp\n+\t\t\tni, nti, err := sp.ignoredGoFilesDeps()\n+\t\t\tfmt.Println(\"sp\", sp.ImportPath)\n+\t\t\tfmt.Println(\"ni\", ni)\n+\t\t\tfmt.Println(\"nti\", nti)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)\n+\t\t\t}\n+\t\t\tpkg.Deps = append(pkg.Deps, ni...)\n+\t\t\tpkg.TestImports = append(pkg.TestImports, nti...)\n+\t\t\tif len(ni) > 0 || len(nti) > 0 {\n+\t\t\t\terr := resolveIgnoredGoFiles(sp, pc)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t}\n \t\t}\n-\t\ta = append(a, info)\n \t}\n-\terr = cmd.Wait()\n-\tif err != nil {\n-\t\treturn nil, err\n+\treturn nil\n+}\n+\n+func (p *Package) ignoredGoFilesDeps() ([]string, []string, error) {\n+\tif p.Standard {\n+\t\treturn nil, nil, nil\n \t}\n-\treturn a, nil\n+\n+\tvar buildMatch = \"+build \"\n+\tvar buildFieldSplit = func(r rune) bool {\n+\t\treturn unicode.IsSpace(r) || r == ','\n+\t}\n+\tvar imports, testImports []string\n+\tfor _, fname := range p.IgnoredGoFiles {\n+\t\ttgt := filepath.Join(p.Dir, fname)\n+\t\tfset := token.NewFileSet()\n+\t\tf, err := parser.ParseFile(fset, tgt, nil, parser.ParseComments)\n+\t\tif err != nil {\n+\t\t\treturn nil, nil, err\n+\t\t}\n+\t\tif len(f.Comments) > 0 {",
        "path": "pkg.go",
        "position": null,
        "original_position": 141,
        "commit_id": "bd1a5cd1a59bff09fa53022436490eb03fb0dc4c",
        "original_commit_id": "7d63b15561ecd0d390c897dd9ed5016f6c57f8ce",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This if statement looks redundant; if there are no comments, the for loop will run zero times.\n",
        "created_at": "2015-12-02T06:07:27Z",
        "updated_at": "2015-12-08T01:23:24Z",
        "html_url": "https://github.com/tools/godep/pull/341#discussion_r46380075",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/341",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/46380075"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/341#discussion_r46380075"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/341"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/46446315",
        "pull_request_review_id": null,
        "id": 46446315,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2MzE1",
        "diff_hunk": "@@ -27,46 +37,129 @@ type Package struct {\n \tError struct {\n \t\tErr string\n \t}\n+\n+\t// --- New stuff for now\n+\tImports []string\n }\n \n // LoadPackages loads the named packages using go list -json.\n-// Unlike the go tool, an empty argument list is treated as\n-// an empty list; \".\" must be given explicitly if desired.\n-func LoadPackages(name ...string) (a []*Package, err error) {\n-\tif len(name) == 0 {\n+// Unlike the go tool, an empty argument list is treated as an empty list; \".\"\n+// must be given explicitly if desired.\n+// IgnoredGoFiles will be processed and their dependencies resolved recursively\n+// Files with a build tag of `ignore` are skipped. Files with other build tags\n+// are however processed.\n+func LoadPackages(names ...string) (a []*Package, err error) {\n+\tif len(names) == 0 {\n \t\treturn nil, nil\n \t}\n-\targs := []string{\"list\", \"-e\", \"-json\"}\n-\tcmd := exec.Command(\"go\", append(args, name...)...)\n-\tr, err := cmd.StdoutPipe()\n-\tif err != nil {\n-\t\treturn nil, err\n+\tfor _, i := range importPaths(names) {\n+\t\tp, err := listPackage(i)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t\ta = append(a, p)\n \t}\n-\tcmd.Stderr = os.Stderr\n-\terr = cmd.Start()\n+\treturn a, nil\n+}\n+\n+// resolveIgnoredGoFiles for the given pkgs, recursively\n+func resolveIgnoredGoFiles(pkg *Package, pc map[string]*Package) error {\n+\tfmt.Println(\"resolveIgnoredGoFiles:\", pkg.ImportPath)\n+\tvar allDeps []string\n+\tallDeps = append(allDeps, pkg.ImportPath)\n+\tallDeps = append(allDeps, pkg.Deps...)\n+\tallDeps = append(allDeps, pkg.TestImports...)\n+\tallDeps = append(allDeps, pkg.XTestImports...)\n+\tallDeps = uniq(allDeps)\n+\tspkgs, err := LoadPackages(allDeps...)\n \tif err != nil {\n-\t\treturn nil, err\n+\t\treturn err\n \t}\n-\td := json.NewDecoder(r)\n-\tfor {\n-\t\tinfo := new(Package)\n-\t\terr = d.Decode(info)\n-\t\tif err == io.EOF {\n-\t\t\tbreak\n+\tfor _, sp := range spkgs {\n+\t\tif pc[sp.ImportPath] != nil {\n+\t\t\tcontinue\n \t\t}\n-\t\tif err != nil {\n-\t\t\tinfo.Error.Err = err.Error()\n+\t\tif len(sp.IgnoredGoFiles) > 0 {\n+\t\t\tpc[sp.ImportPath] = sp\n+\t\t\tni, nti, err := sp.ignoredGoFilesDeps()\n+\t\t\tfmt.Println(\"sp\", sp.ImportPath)\n+\t\t\tfmt.Println(\"ni\", ni)\n+\t\t\tfmt.Println(\"nti\", nti)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)\n+\t\t\t}\n+\t\t\tpkg.Deps = append(pkg.Deps, ni...)\n+\t\t\tpkg.TestImports = append(pkg.TestImports, nti...)\n+\t\t\tif len(ni) > 0 || len(nti) > 0 {\n+\t\t\t\terr := resolveIgnoredGoFiles(sp, pc)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t}\n \t\t}\n-\t\ta = append(a, info)\n \t}\n-\terr = cmd.Wait()\n-\tif err != nil {\n-\t\treturn nil, err\n+\treturn nil\n+}\n+\n+func (p *Package) ignoredGoFilesDeps() ([]string, []string, error) {\n+\tif p.Standard {\n+\t\treturn nil, nil, nil\n \t}\n-\treturn a, nil\n+\n+\tvar buildMatch = \"+build \"\n+\tvar buildFieldSplit = func(r rune) bool {\n+\t\treturn unicode.IsSpace(r) || r == ','\n+\t}\n+\tvar imports, testImports []string\n+\tfor _, fname := range p.IgnoredGoFiles {\n+\t\ttgt := filepath.Join(p.Dir, fname)\n+\t\tfset := token.NewFileSet()\n+\t\tf, err := parser.ParseFile(fset, tgt, nil, parser.ParseComments)\n+\t\tif err != nil {\n+\t\t\treturn nil, nil, err\n+\t\t}\n+\t\tif len(f.Comments) > 0 {\n+\t\t\tfor _, c := range f.Comments {",
        "path": "pkg.go",
        "position": null,
        "original_position": 142,
        "commit_id": "bd1a5cd1a59bff09fa53022436490eb03fb0dc4c",
        "original_commit_id": "7d63b15561ecd0d390c897dd9ed5016f6c57f8ce",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's not necessary, at least not now. This was left over from a different experiment. I've removed this method.\n",
        "created_at": "2015-12-02T17:34:11Z",
        "updated_at": "2015-12-08T01:23:24Z",
        "html_url": "https://github.com/tools/godep/pull/341#discussion_r46446315",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/341",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/46446315"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/341#discussion_r46446315"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/341"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/46446356",
        "pull_request_review_id": null,
        "id": 46446356,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2MzU2",
        "diff_hunk": "@@ -27,46 +37,129 @@ type Package struct {\n \tError struct {\n \t\tErr string\n \t}\n+\n+\t// --- New stuff for now\n+\tImports []string\n }\n \n // LoadPackages loads the named packages using go list -json.\n-// Unlike the go tool, an empty argument list is treated as\n-// an empty list; \".\" must be given explicitly if desired.\n-func LoadPackages(name ...string) (a []*Package, err error) {\n-\tif len(name) == 0 {\n+// Unlike the go tool, an empty argument list is treated as an empty list; \".\"\n+// must be given explicitly if desired.\n+// IgnoredGoFiles will be processed and their dependencies resolved recursively\n+// Files with a build tag of `ignore` are skipped. Files with other build tags\n+// are however processed.\n+func LoadPackages(names ...string) (a []*Package, err error) {\n+\tif len(names) == 0 {\n \t\treturn nil, nil\n \t}\n-\targs := []string{\"list\", \"-e\", \"-json\"}\n-\tcmd := exec.Command(\"go\", append(args, name...)...)\n-\tr, err := cmd.StdoutPipe()\n-\tif err != nil {\n-\t\treturn nil, err\n+\tfor _, i := range importPaths(names) {\n+\t\tp, err := listPackage(i)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t\ta = append(a, p)\n \t}\n-\tcmd.Stderr = os.Stderr\n-\terr = cmd.Start()\n+\treturn a, nil\n+}\n+\n+// resolveIgnoredGoFiles for the given pkgs, recursively\n+func resolveIgnoredGoFiles(pkg *Package, pc map[string]*Package) error {\n+\tfmt.Println(\"resolveIgnoredGoFiles:\", pkg.ImportPath)\n+\tvar allDeps []string\n+\tallDeps = append(allDeps, pkg.ImportPath)\n+\tallDeps = append(allDeps, pkg.Deps...)\n+\tallDeps = append(allDeps, pkg.TestImports...)\n+\tallDeps = append(allDeps, pkg.XTestImports...)\n+\tallDeps = uniq(allDeps)\n+\tspkgs, err := LoadPackages(allDeps...)\n \tif err != nil {\n-\t\treturn nil, err\n+\t\treturn err\n \t}\n-\td := json.NewDecoder(r)\n-\tfor {\n-\t\tinfo := new(Package)\n-\t\terr = d.Decode(info)\n-\t\tif err == io.EOF {\n-\t\t\tbreak\n+\tfor _, sp := range spkgs {\n+\t\tif pc[sp.ImportPath] != nil {\n+\t\t\tcontinue\n \t\t}\n-\t\tif err != nil {\n-\t\t\tinfo.Error.Err = err.Error()\n+\t\tif len(sp.IgnoredGoFiles) > 0 {\n+\t\t\tpc[sp.ImportPath] = sp\n+\t\t\tni, nti, err := sp.ignoredGoFilesDeps()\n+\t\t\tfmt.Println(\"sp\", sp.ImportPath)\n+\t\t\tfmt.Println(\"ni\", ni)\n+\t\t\tfmt.Println(\"nti\", nti)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)\n+\t\t\t}\n+\t\t\tpkg.Deps = append(pkg.Deps, ni...)\n+\t\t\tpkg.TestImports = append(pkg.TestImports, nti...)\n+\t\t\tif len(ni) > 0 || len(nti) > 0 {\n+\t\t\t\terr := resolveIgnoredGoFiles(sp, pc)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t}\n \t\t}\n-\t\ta = append(a, info)\n \t}\n-\terr = cmd.Wait()\n-\tif err != nil {\n-\t\treturn nil, err\n+\treturn nil\n+}\n+\n+func (p *Package) ignoredGoFilesDeps() ([]string, []string, error) {\n+\tif p.Standard {\n+\t\treturn nil, nil, nil\n \t}\n-\treturn a, nil\n+\n+\tvar buildMatch = \"+build \"\n+\tvar buildFieldSplit = func(r rune) bool {\n+\t\treturn unicode.IsSpace(r) || r == ','\n+\t}\n+\tvar imports, testImports []string\n+\tfor _, fname := range p.IgnoredGoFiles {\n+\t\ttgt := filepath.Join(p.Dir, fname)\n+\t\tfset := token.NewFileSet()\n+\t\tf, err := parser.ParseFile(fset, tgt, nil, parser.ParseComments)\n+\t\tif err != nil {\n+\t\t\treturn nil, nil, err\n+\t\t}\n+\t\tif len(f.Comments) > 0 {\n+\t\t\tfor _, c := range f.Comments {\n+\t\t\t\tct := c.Text()\n+\t\t\t\tif i := strings.Index(ct, buildMatch); i != -1 {\n+\t\t\t\t\tfor _, b := range strings.FieldsFunc(ct[i+len(buildMatch):], buildFieldSplit) {\n+\t\t\t\t\t\tif b == \"ignore\" {\n+\t\t\t\t\t\t\tcontinue",
        "path": "pkg.go",
        "position": null,
        "original_position": 147,
        "commit_id": "bd1a5cd1a59bff09fa53022436490eb03fb0dc4c",
        "original_commit_id": "7d63b15561ecd0d390c897dd9ed5016f6c57f8ce",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "removed unused method.\n",
        "created_at": "2015-12-02T17:34:32Z",
        "updated_at": "2015-12-08T01:23:24Z",
        "html_url": "https://github.com/tools/godep/pull/341#discussion_r46446356",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/341",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/46446356"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/341#discussion_r46446356"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/341"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/46446440",
        "pull_request_review_id": null,
        "id": 46446440,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2NDQw",
        "diff_hunk": "@@ -27,46 +37,129 @@ type Package struct {\n \tError struct {\n \t\tErr string\n \t}\n+\n+\t// --- New stuff for now\n+\tImports []string\n }\n \n // LoadPackages loads the named packages using go list -json.\n-// Unlike the go tool, an empty argument list is treated as\n-// an empty list; \".\" must be given explicitly if desired.\n-func LoadPackages(name ...string) (a []*Package, err error) {\n-\tif len(name) == 0 {\n+// Unlike the go tool, an empty argument list is treated as an empty list; \".\"\n+// must be given explicitly if desired.\n+// IgnoredGoFiles will be processed and their dependencies resolved recursively\n+// Files with a build tag of `ignore` are skipped. Files with other build tags\n+// are however processed.\n+func LoadPackages(names ...string) (a []*Package, err error) {\n+\tif len(names) == 0 {\n \t\treturn nil, nil\n \t}\n-\targs := []string{\"list\", \"-e\", \"-json\"}\n-\tcmd := exec.Command(\"go\", append(args, name...)...)\n-\tr, err := cmd.StdoutPipe()\n-\tif err != nil {\n-\t\treturn nil, err\n+\tfor _, i := range importPaths(names) {\n+\t\tp, err := listPackage(i)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t\ta = append(a, p)\n \t}\n-\tcmd.Stderr = os.Stderr\n-\terr = cmd.Start()\n+\treturn a, nil\n+}\n+\n+// resolveIgnoredGoFiles for the given pkgs, recursively\n+func resolveIgnoredGoFiles(pkg *Package, pc map[string]*Package) error {\n+\tfmt.Println(\"resolveIgnoredGoFiles:\", pkg.ImportPath)\n+\tvar allDeps []string\n+\tallDeps = append(allDeps, pkg.ImportPath)\n+\tallDeps = append(allDeps, pkg.Deps...)\n+\tallDeps = append(allDeps, pkg.TestImports...)\n+\tallDeps = append(allDeps, pkg.XTestImports...)\n+\tallDeps = uniq(allDeps)\n+\tspkgs, err := LoadPackages(allDeps...)\n \tif err != nil {\n-\t\treturn nil, err\n+\t\treturn err\n \t}\n-\td := json.NewDecoder(r)\n-\tfor {\n-\t\tinfo := new(Package)\n-\t\terr = d.Decode(info)\n-\t\tif err == io.EOF {\n-\t\t\tbreak\n+\tfor _, sp := range spkgs {\n+\t\tif pc[sp.ImportPath] != nil {\n+\t\t\tcontinue\n \t\t}\n-\t\tif err != nil {\n-\t\t\tinfo.Error.Err = err.Error()\n+\t\tif len(sp.IgnoredGoFiles) > 0 {\n+\t\t\tpc[sp.ImportPath] = sp\n+\t\t\tni, nti, err := sp.ignoredGoFilesDeps()\n+\t\t\tfmt.Println(\"sp\", sp.ImportPath)\n+\t\t\tfmt.Println(\"ni\", ni)\n+\t\t\tfmt.Println(\"nti\", nti)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)\n+\t\t\t}\n+\t\t\tpkg.Deps = append(pkg.Deps, ni...)\n+\t\t\tpkg.TestImports = append(pkg.TestImports, nti...)\n+\t\t\tif len(ni) > 0 || len(nti) > 0 {\n+\t\t\t\terr := resolveIgnoredGoFiles(sp, pc)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t}\n \t\t}\n-\t\ta = append(a, info)\n \t}\n-\terr = cmd.Wait()\n-\tif err != nil {\n-\t\treturn nil, err\n+\treturn nil\n+}\n+\n+func (p *Package) ignoredGoFilesDeps() ([]string, []string, error) {\n+\tif p.Standard {\n+\t\treturn nil, nil, nil\n \t}\n-\treturn a, nil\n+\n+\tvar buildMatch = \"+build \"\n+\tvar buildFieldSplit = func(r rune) bool {\n+\t\treturn unicode.IsSpace(r) || r == ','\n+\t}\n+\tvar imports, testImports []string\n+\tfor _, fname := range p.IgnoredGoFiles {\n+\t\ttgt := filepath.Join(p.Dir, fname)\n+\t\tfset := token.NewFileSet()\n+\t\tf, err := parser.ParseFile(fset, tgt, nil, parser.ParseComments)\n+\t\tif err != nil {\n+\t\t\treturn nil, nil, err\n+\t\t}\n+\t\tif len(f.Comments) > 0 {",
        "path": "pkg.go",
        "position": null,
        "original_position": 141,
        "commit_id": "bd1a5cd1a59bff09fa53022436490eb03fb0dc4c",
        "original_commit_id": "7d63b15561ecd0d390c897dd9ed5016f6c57f8ce",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "removed un-used method.\n",
        "created_at": "2015-12-02T17:35:03Z",
        "updated_at": "2015-12-08T01:23:24Z",
        "html_url": "https://github.com/tools/godep/pull/341#discussion_r46446440",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/341",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/46446440"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/341#discussion_r46446440"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/341"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/46926033",
        "pull_request_review_id": null,
        "id": 46926033,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2MDMz",
        "diff_hunk": "@@ -12,28 +13,64 @@ import (\n )\n \n var cmdUpdate = &Command{\n-\tUsage: \"update [packages]\",\n-\tShort: \"use different revision of selected packages\",\n+\tUsage: \"update [-goversion] [packages]\",\n+\tShort: \"update selected packages or the go version\",\n \tLong: `\n Update changes the named dependency packages to use the\n revision of each currently installed in GOPATH. New code will\n-be copied into Godeps and the new revision will be written to\n-the manifest.\n+be copied into the Godeps workspace or vendor folder and the \n+new revision will be written to the manifest.\n+\n+If \"-goversion\" is specified, update the recorded go version. \n \n For more about specifying packages, see 'go help packages'.\n `,\n \tRun: runUpdate,\n }\n+var (\n+\tupdateGoVer bool\n+)\n \n func init() {\n \tcmdUpdate.Flag.BoolVar(&saveT, \"t\", false, \"save test files during update\")\n+\tcmdUpdate.Flag.BoolVar(&updateGoVer, \"goversion\", false, \"update the recorded go version\")\n }\n \n func runUpdate(cmd *Command, args []string) {\n-\terr := update(args)\n+\tif updateGoVer {",
        "path": "update.go",
        "position": 44,
        "original_position": 41,
        "commit_id": "2721f686f09eda5ad81552eeb6ec91c407e000f7",
        "original_commit_id": "aa7d1e35f0f71b802e763a29026bac2f2a1efc0d",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nice.\n",
        "created_at": "2015-12-08T08:29:10Z",
        "updated_at": "2015-12-16T23:45:26Z",
        "html_url": "https://github.com/tools/godep/pull/342#discussion_r46926033",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/342",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/46926033"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/342#discussion_r46926033"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/342"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/46926077",
        "pull_request_review_id": null,
        "id": 46926077,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2MDc3",
        "diff_hunk": "@@ -64,8 +64,17 @@ func uniq(a []string) []string {\n \treturn a[:i]\n }\n \n-// goVersion returns the version string of the Go compiler\n-// currently installed, e.g. \"go1.1rc3\".\n+// trimGoVersion and return the major version\n+func trimGoVersion(version string) (string, error) {\n+\tp := strings.Split(version, \".\")\n+\tif len(p) < 2 {\n+\t\treturn \"\", fmt.Errorf(\"Error determing major go version from: %q\", version)\n+\t}\n+\treturn strings.Join([]string{p[0], p[1]}, \".\"), nil",
        "path": "dep.go",
        "position": null,
        "original_position": 12,
        "commit_id": "2721f686f09eda5ad81552eeb6ec91c407e000f7",
        "original_commit_id": "aa7d1e35f0f71b802e763a29026bac2f2a1efc0d",
        "user": {
            "login": "kr",
            "id": 4178,
            "node_id": "MDQ6VXNlcjQxNzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kr",
            "html_url": "https://github.com/kr",
            "followers_url": "https://api.github.com/users/kr/followers",
            "following_url": "https://api.github.com/users/kr/following{/other_user}",
            "gists_url": "https://api.github.com/users/kr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kr/subscriptions",
            "organizations_url": "https://api.github.com/users/kr/orgs",
            "repos_url": "https://api.github.com/users/kr/repos",
            "events_url": "https://api.github.com/users/kr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not `p[0] + \".\" + p[1]`?\n",
        "created_at": "2015-12-08T08:29:49Z",
        "updated_at": "2015-12-16T23:45:26Z",
        "html_url": "https://github.com/tools/godep/pull/342#discussion_r46926077",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/342",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/46926077"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/342#discussion_r46926077"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/342"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/46973867",
        "pull_request_review_id": null,
        "id": 46973867,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTczODY3",
        "diff_hunk": "@@ -64,8 +64,17 @@ func uniq(a []string) []string {\n \treturn a[:i]\n }\n \n-// goVersion returns the version string of the Go compiler\n-// currently installed, e.g. \"go1.1rc3\".\n+// trimGoVersion and return the major version\n+func trimGoVersion(version string) (string, error) {\n+\tp := strings.Split(version, \".\")\n+\tif len(p) < 2 {\n+\t\treturn \"\", fmt.Errorf(\"Error determing major go version from: %q\", version)\n+\t}\n+\treturn strings.Join([]string{p[0], p[1]}, \".\"), nil",
        "path": "dep.go",
        "position": null,
        "original_position": 12,
        "commit_id": "2721f686f09eda5ad81552eeb6ec91c407e000f7",
        "original_commit_id": "aa7d1e35f0f71b802e763a29026bac2f2a1efc0d",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Heh. No reason. That's better, I'll change it.\n",
        "created_at": "2015-12-08T16:14:51Z",
        "updated_at": "2015-12-16T23:45:26Z",
        "html_url": "https://github.com/tools/godep/pull/342#discussion_r46973867",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/342",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/46973867"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/342#discussion_r46973867"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/342"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/47422494",
        "pull_request_review_id": null,
        "id": 47422494,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIyNDk0",
        "diff_hunk": "@@ -95,6 +96,22 @@ func dotPackage() (*Package, error) {\n \treturn p[0], nil\n }\n \n+func projectPackages(dot *Package, a []*Package) []*Package {",
        "path": "save.go",
        "position": null,
        "original_position": 18,
        "commit_id": "6a27cbb25dd109863d4850b09633b0ac493fc5f0",
        "original_commit_id": "fbcd4e03918cf09eebe3f0302635e6e58f43031f",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "recent changes have done away with the dot package reference because we were only using the dir anyway.\n",
        "created_at": "2015-12-12T00:47:48Z",
        "updated_at": "2015-12-17T17:43:13Z",
        "html_url": "https://github.com/tools/godep/pull/343#discussion_r47422494",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/343",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/47422494"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/343#discussion_r47422494"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/343"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/47422498",
        "pull_request_review_id": null,
        "id": 47422498,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIyNDk4",
        "diff_hunk": "@@ -95,6 +96,22 @@ func dotPackage() (*Package, error) {\n \treturn p[0], nil\n }\n \n+func projectPackages(dot *Package, a []*Package) []*Package {\n+\tvar projPkgs []*Package\n+\tdDir, err := filepath.EvalSymlinks(dot.Dir)\n+\tif err != nil {\n+\t\tdDir = dot.Dir\n+\t}\n+\tdotDir := fmt.Sprintf(\"%s/\", dDir)",
        "path": "save.go",
        "position": null,
        "original_position": 24,
        "commit_id": "6a27cbb25dd109863d4850b09633b0ac493fc5f0",
        "original_commit_id": "fbcd4e03918cf09eebe3f0302635e6e58f43031f",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Probably want `dDir + filepath.Separator`\n",
        "created_at": "2015-12-12T00:47:55Z",
        "updated_at": "2015-12-17T17:43:13Z",
        "html_url": "https://github.com/tools/godep/pull/343#discussion_r47422498",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/343",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/47422498"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/343#discussion_r47422498"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/343"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/47422507",
        "pull_request_review_id": null,
        "id": 47422507,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIyNTA3",
        "diff_hunk": "@@ -95,6 +96,22 @@ func dotPackage() (*Package, error) {\n \treturn p[0], nil\n }\n \n+func projectPackages(dot *Package, a []*Package) []*Package {\n+\tvar projPkgs []*Package\n+\tdDir, err := filepath.EvalSymlinks(dot.Dir)\n+\tif err != nil {\n+\t\tdDir = dot.Dir\n+\t}\n+\tdotDir := fmt.Sprintf(\"%s/\", dDir)\n+\tfor _, p := range a {\n+\t\tpkgDir := fmt.Sprintf(\"%s/\", p.Dir)",
        "path": "save.go",
        "position": null,
        "original_position": 26,
        "commit_id": "6a27cbb25dd109863d4850b09633b0ac493fc5f0",
        "original_commit_id": "fbcd4e03918cf09eebe3f0302635e6e58f43031f",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ditto wrt seperator.\n",
        "created_at": "2015-12-12T00:48:05Z",
        "updated_at": "2015-12-17T17:43:13Z",
        "html_url": "https://github.com/tools/godep/pull/343#discussion_r47422507",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/343",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/47422507"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/343#discussion_r47422507"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/343"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/47935165",
        "pull_request_review_id": null,
        "id": 47935165,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1MTY1",
        "diff_hunk": "@@ -81,21 +82,46 @@ func runSave(cmd *Command, args []string) {\n \t}\n }\n \n-func dotPackageImportPath() (string, error) {\n+type dotPkg struct {\n+\timportPath string\n+\tdir        string\n+}\n+\n+func dotPackage() (*dotPkg, error) {",
        "path": "save.go",
        "position": null,
        "original_position": 24,
        "commit_id": "6a27cbb25dd109863d4850b09633b0ac493fc5f0",
        "original_commit_id": "76736d7ea4a6ba46d5fa897cc25265f3c6854a25",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We could just simple return a build.Package instead. I think I'd rather do that then add yet another \"package\" type to the code.\n",
        "created_at": "2015-12-17T17:34:34Z",
        "updated_at": "2015-12-17T17:43:13Z",
        "html_url": "https://github.com/tools/godep/pull/343#discussion_r47935165",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/343",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/47935165"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/343#discussion_r47935165"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/343"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/49636656",
        "pull_request_review_id": null,
        "id": 49636656,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM2NjU2",
        "diff_hunk": "@@ -36,7 +36,7 @@ func runDiff(cmd *Command, args []string) {\n \t\tGoVersion:  gold.GoVersion,\n \t}\n \n-\terr = gnew.fill(dot, dot[0].ImportPath)\n+\terr = gnew.fill(dot, dot[0].ImportPath, true)",
        "path": "diff.go",
        "position": 5,
        "original_position": 5,
        "commit_id": "308d0bfb2fbb038d2fa58cf41b9f8cd047c53c18",
        "original_commit_id": "308d0bfb2fbb038d2fa58cf41b9f8cd047c53c18",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What if this was saved with -T ?\n",
        "created_at": "2016-01-13T19:20:00Z",
        "updated_at": "2016-01-13T19:20:00Z",
        "html_url": "https://github.com/tools/godep/pull/389#discussion_r49636656",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/389",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/49636656"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/389#discussion_r49636656"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/389"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/49635571",
        "pull_request_review_id": null,
        "id": 49635571,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1NTcx",
        "diff_hunk": "@@ -56,19 +56,20 @@ files outside the project.\n If -t is given, test files (*_test.go files + testdata directories) are\n also saved.\n \n+If -T is given, packages required by test files are not saved. -T and -t must be given at the same time.\n For more about specifying packages, see 'go help packages'.\n `,\n \tRun: runSave,\n }\n \n var (\n-\tsaveR, saveT bool\n+\tsaveR, saveT, skipTestImports bool\n )\n \n func init() {\n \tcmdSave.Flag.BoolVar(&saveR, \"r\", false, \"rewrite import paths\")\n \tcmdSave.Flag.BoolVar(&saveT, \"t\", false, \"save test files\")\n-\n+\tcmdSave.Flag.BoolVar(&skipTestImports, \"T\", false, \"skip files that are imported by test files (it shouldn't be used with -t)\")",
        "path": "save.go",
        "position": 28,
        "original_position": 28,
        "commit_id": "308d0bfb2fbb038d2fa58cf41b9f8cd047c53c18",
        "original_commit_id": "308d0bfb2fbb038d2fa58cf41b9f8cd047c53c18",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's really \"Don't process dependencies imported by test files\"\n\nAlso `it shouldn't be used with -t` conflicts with message above (`-T and -t must be given at the same time`).\n",
        "created_at": "2016-01-13T19:13:09Z",
        "updated_at": "2016-01-13T19:20:47Z",
        "html_url": "https://github.com/tools/godep/pull/389#discussion_r49635571",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/389",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/49635571"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/389#discussion_r49635571"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/389"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/49660048",
        "pull_request_review_id": null,
        "id": 49660048,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwMDQ4",
        "diff_hunk": "@@ -86,10 +86,12 @@\n     * #350: undefined: build.MultiplePackageError\n     * #351: stow away helper files\n     * #353: cannot find package \"appengine\"\n+        * Ignore files with the `appengine` build tag\n \n # v33 2015/12/07\n \n * Replace the use of `go list`. This is a large change although all existing tests pass.\n+    * Ignore files with the `ignore` build tag. All other build tags are ignored.",
        "path": "Changelog.md",
        "position": null,
        "original_position": 9,
        "commit_id": "2b4818420790a5d30100ffb755c80f0877269455",
        "original_commit_id": "055577c14f5bb8990b7707c6f9e1d143f179a1be",
        "user": {
            "login": "dmitshur",
            "id": 1924134,
            "node_id": "MDQ6VXNlcjE5MjQxMzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1924134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmitshur",
            "html_url": "https://github.com/dmitshur",
            "followers_url": "https://api.github.com/users/dmitshur/followers",
            "following_url": "https://api.github.com/users/dmitshur/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmitshur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmitshur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmitshur/subscriptions",
            "organizations_url": "https://api.github.com/users/dmitshur/orgs",
            "repos_url": "https://api.github.com/users/dmitshur/repos",
            "events_url": "https://api.github.com/users/dmitshur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmitshur/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The phrasing is a little confusing. Ignore is used with 2 different meanings.\n\nHow about:\n\n> Ignore files with the `ignore` build tag. All other build tags are included and vendored.\n",
        "created_at": "2016-01-13T22:19:55Z",
        "updated_at": "2016-01-13T22:33:30Z",
        "html_url": "https://github.com/tools/godep/pull/397#discussion_r49660048",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/397",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/49660048"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/397#discussion_r49660048"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/397"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/49660111",
        "pull_request_review_id": null,
        "id": 49660111,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwMTEx",
        "diff_hunk": "@@ -52,6 +52,9 @@ command, you wrap it in one of these two ways:\n - When using a different command, set your `$GOPATH` using `godep path` as\n   described below.\n \n+Godep ignores files with either the `ignore` or `appengine` tags (does not process\n+the deps in those files).",
        "path": "Readme.md",
        "position": null,
        "original_position": 5,
        "commit_id": "2b4818420790a5d30100ffb755c80f0877269455",
        "original_commit_id": "055577c14f5bb8990b7707c6f9e1d143f179a1be",
        "user": {
            "login": "dmitshur",
            "id": 1924134,
            "node_id": "MDQ6VXNlcjE5MjQxMzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1924134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmitshur",
            "html_url": "https://github.com/dmitshur",
            "followers_url": "https://api.github.com/users/dmitshur/followers",
            "following_url": "https://api.github.com/users/dmitshur/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmitshur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmitshur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmitshur/subscriptions",
            "organizations_url": "https://api.github.com/users/dmitshur/orgs",
            "repos_url": "https://api.github.com/users/dmitshur/repos",
            "events_url": "https://api.github.com/users/dmitshur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmitshur/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"does not vendor\" maybe?\n",
        "created_at": "2016-01-13T22:20:24Z",
        "updated_at": "2016-01-13T22:33:30Z",
        "html_url": "https://github.com/tools/godep/pull/397#discussion_r49660111",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/397",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/49660111"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/397#discussion_r49660111"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/397"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/49661049",
        "pull_request_review_id": null,
        "id": 49661049,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxMDQ5",
        "diff_hunk": "@@ -52,6 +52,9 @@ command, you wrap it in one of these two ways:\n - When using a different command, set your `$GOPATH` using `godep path` as\n   described below.\n \n+Godep ignores files with either the `ignore` or `appengine` tags (does not process\n+the deps in those files).",
        "path": "Readme.md",
        "position": null,
        "original_position": 5,
        "commit_id": "2b4818420790a5d30100ffb755c80f0877269455",
        "original_commit_id": "055577c14f5bb8990b7707c6f9e1d143f179a1be",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "it will actually vendor the files, but doesn't process the imports from them.\n",
        "created_at": "2016-01-13T22:28:23Z",
        "updated_at": "2016-01-13T22:33:30Z",
        "html_url": "https://github.com/tools/godep/pull/397#discussion_r49661049",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/397",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/49661049"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/397#discussion_r49661049"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/397"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/49664157",
        "pull_request_review_id": null,
        "id": 49664157,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0MTU3",
        "diff_hunk": "@@ -52,6 +52,9 @@ command, you wrap it in one of these two ways:\n - When using a different command, set your `$GOPATH` using `godep path` as\n   described below.\n \n+Godep ignores files with either the `ignore` or `appengine` tags (does not process\n+the deps in those files).",
        "path": "Readme.md",
        "position": null,
        "original_position": 5,
        "commit_id": "2b4818420790a5d30100ffb755c80f0877269455",
        "original_commit_id": "055577c14f5bb8990b7707c6f9e1d143f179a1be",
        "user": {
            "login": "dmitshur",
            "id": 1924134,
            "node_id": "MDQ6VXNlcjE5MjQxMzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1924134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmitshur",
            "html_url": "https://github.com/dmitshur",
            "followers_url": "https://api.github.com/users/dmitshur/followers",
            "following_url": "https://api.github.com/users/dmitshur/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmitshur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmitshur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmitshur/subscriptions",
            "organizations_url": "https://api.github.com/users/dmitshur/orgs",
            "repos_url": "https://api.github.com/users/dmitshur/repos",
            "events_url": "https://api.github.com/users/dmitshur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmitshur/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Right. :+1: It does not vendor the dependencies of those files.\n",
        "created_at": "2016-01-13T22:53:30Z",
        "updated_at": "2016-01-13T22:53:30Z",
        "html_url": "https://github.com/tools/godep/pull/397#discussion_r49664157",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/397",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/49664157"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/397#discussion_r49664157"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/397"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/58589018",
        "pull_request_review_id": null,
        "id": 58589018,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTg5MDE4",
        "diff_hunk": "@@ -216,6 +217,10 @@ func fillPackage(p *build.Package) error {\n \tif p.Goroot {\n \t\treturn nil\n \t}\n+\tversion, err := goVersion()",
        "path": "list.go",
        "position": 12,
        "original_position": 12,
        "commit_id": "74d3780c1053a6ea2e6b0a082c10fe532950ffb1",
        "original_commit_id": "74d3780c1053a6ea2e6b0a082c10fe532950ffb1",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think this should use the recorded go version from the Godeps.json file, not whichever go version is currently running. \n",
        "created_at": "2016-04-05T18:18:06Z",
        "updated_at": "2016-04-05T18:18:06Z",
        "html_url": "https://github.com/tools/godep/pull/449#discussion_r58589018",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/449",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/58589018"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/449#discussion_r58589018"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/449"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/58589430",
        "pull_request_review_id": null,
        "id": 58589430,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTg5NDMw",
        "diff_hunk": "@@ -271,6 +276,18 @@ NextFile:\n \t\t\t\t\t\t\tp.IgnoredGoFiles = append(p.IgnoredGoFiles, fname)\n \t\t\t\t\t\t\tcontinue NextFile\n \t\t\t\t\t\t}\n+\t\t\t\t\t\tmatchesPositive, err := regexp.MatchString(\"go\\\\d+\\\\.\\\\d+\", b)",
        "path": "list.go",
        "position": 23,
        "original_position": 23,
        "commit_id": "74d3780c1053a6ea2e6b0a082c10fe532950ffb1",
        "original_commit_id": "74d3780c1053a6ea2e6b0a082c10fe532950ffb1",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "compile this regex at the package level in a variable and re-use maybe? allows this to be written nicer/shorter at least.\n",
        "created_at": "2016-04-05T18:20:22Z",
        "updated_at": "2016-04-05T18:20:22Z",
        "html_url": "https://github.com/tools/godep/pull/449#discussion_r58589430",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/449",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/58589430"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/449#discussion_r58589430"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/449"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/63102368",
        "pull_request_review_id": null,
        "id": 63102368,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTAyMzY4",
        "diff_hunk": "@@ -579,6 +579,106 @@ func TestUpdate(t *testing.T) {\n \t\t\t\t},\n \t\t\t},\n \t\t},\n+\t\t{ // 13 - package/..., missing packages\n+\t\t\tvendor: true,\n+\t\t\tcwd:    \"C\",\n+\t\t\targs:   []string{\"D/...\"},\n+\t\t\tstart: []*node{\n+\t\t\t\t{\n+\t\t\t\t\t\"D\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"A/main.go\", pkg(\"A\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"B/main.go\", pkg(\"B\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"+git\", \"D1\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"C\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"main.go\", pkg(\"main\", \"D/A\"), nil},\n+\t\t\t\t\t\t{\"Godeps/Godeps.json\", godeps(\"C\", \"D/A\", \"D1\", \"D/B\", \"D1\"), nil},\n+\t\t\t\t\t\t{\"vendor/D/A/main.go\", pkg(\"A\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"vendor/D/B/main.go\", pkg(\"B\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"+git\", \"\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t\t{\"D\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"A/main.go\", pkg(\"A\") + decl(\"D2\"), nil},\n+\t\t\t\t\t\t{\"B\", \"(rm)\", nil},\n+\t\t\t\t\t\t{\"+git\", \"D2\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\twant: []*node{\n+\t\t\t\t{\"C/vendor/D/A/main.go\", pkg(\"A\") + decl(\"D2\"), nil},\n+\t\t\t\t{\"C/vendor/D/B/main.go\", \"(absent)\", nil},\n+\t\t\t\t{\"C/vendor/D/E/main.go\", \"(absent)\", nil},\n+\t\t\t},\n+\t\t\twdep: Godeps{\n+\t\t\t\tImportPath: \"C\",\n+\t\t\t\tDeps: []Dependency{\n+\t\t\t\t\t{ImportPath: \"D/A\", Comment: \"D2\"},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t\t{ // 14 - Update package A, but not package B, which is missing from $GOPATH",
        "path": "update_test.go",
        "position": 59,
        "original_position": 59,
        "commit_id": "cdb5ef127ce3ff11698bae8c66bffdffec31d480",
        "original_commit_id": "a9a47e5822b5923f4b9291d41086edba72e9e163",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@yields This works, at least on this branch. Does this demonstrate what you were talking about in #465?\n",
        "created_at": "2016-05-12T21:40:43Z",
        "updated_at": "2016-05-13T23:04:23Z",
        "html_url": "https://github.com/tools/godep/pull/467#discussion_r63102368",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/467",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/63102368"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/467#discussion_r63102368"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/467"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/63151223",
        "pull_request_review_id": null,
        "id": 63151223,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTUxMjIz",
        "diff_hunk": "@@ -579,6 +579,106 @@ func TestUpdate(t *testing.T) {\n \t\t\t\t},\n \t\t\t},\n \t\t},\n+\t\t{ // 13 - package/..., missing packages\n+\t\t\tvendor: true,\n+\t\t\tcwd:    \"C\",\n+\t\t\targs:   []string{\"D/...\"},\n+\t\t\tstart: []*node{\n+\t\t\t\t{\n+\t\t\t\t\t\"D\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"A/main.go\", pkg(\"A\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"B/main.go\", pkg(\"B\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"+git\", \"D1\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"C\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"main.go\", pkg(\"main\", \"D/A\"), nil},\n+\t\t\t\t\t\t{\"Godeps/Godeps.json\", godeps(\"C\", \"D/A\", \"D1\", \"D/B\", \"D1\"), nil},\n+\t\t\t\t\t\t{\"vendor/D/A/main.go\", pkg(\"A\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"vendor/D/B/main.go\", pkg(\"B\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"+git\", \"\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t\t{\"D\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"A/main.go\", pkg(\"A\") + decl(\"D2\"), nil},\n+\t\t\t\t\t\t{\"B\", \"(rm)\", nil},\n+\t\t\t\t\t\t{\"+git\", \"D2\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\twant: []*node{\n+\t\t\t\t{\"C/vendor/D/A/main.go\", pkg(\"A\") + decl(\"D2\"), nil},\n+\t\t\t\t{\"C/vendor/D/B/main.go\", \"(absent)\", nil},\n+\t\t\t\t{\"C/vendor/D/E/main.go\", \"(absent)\", nil},\n+\t\t\t},\n+\t\t\twdep: Godeps{\n+\t\t\t\tImportPath: \"C\",\n+\t\t\t\tDeps: []Dependency{\n+\t\t\t\t\t{ImportPath: \"D/A\", Comment: \"D2\"},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t\t{ // 14 - Update package A, but not package B, which is missing from $GOPATH",
        "path": "update_test.go",
        "position": 59,
        "original_position": 59,
        "commit_id": "cdb5ef127ce3ff11698bae8c66bffdffec31d480",
        "original_commit_id": "a9a47e5822b5923f4b9291d41086edba72e9e163",
        "user": {
            "login": "yields",
            "id": 1661587,
            "node_id": "MDQ6VXNlcjE2NjE1ODc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1661587?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yields",
            "html_url": "https://github.com/yields",
            "followers_url": "https://api.github.com/users/yields/followers",
            "following_url": "https://api.github.com/users/yields/following{/other_user}",
            "gists_url": "https://api.github.com/users/yields/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yields/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yields/subscriptions",
            "organizations_url": "https://api.github.com/users/yields/orgs",
            "repos_url": "https://api.github.com/users/yields/repos",
            "events_url": "https://api.github.com/users/yields/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yields/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks for the quick fix!\n\nI've just tried this locally, it updates the pkg/a correctly, but there are two small UX issues:\n- it still outputs an error that `pkg/b` was not found\n- it doesn't work for `pkg/a/sub`, so you have to do `pkg/a/...`\n\nAnything i can do to help get this merged? :)\n",
        "created_at": "2016-05-13T08:50:42Z",
        "updated_at": "2016-05-13T23:04:23Z",
        "html_url": "https://github.com/tools/godep/pull/467#discussion_r63151223",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/467",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/63151223"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/467#discussion_r63151223"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/467"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/63262285",
        "pull_request_review_id": null,
        "id": 63262285,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjYyMjg1",
        "diff_hunk": "@@ -579,6 +579,106 @@ func TestUpdate(t *testing.T) {\n \t\t\t\t},\n \t\t\t},\n \t\t},\n+\t\t{ // 13 - package/..., missing packages\n+\t\t\tvendor: true,\n+\t\t\tcwd:    \"C\",\n+\t\t\targs:   []string{\"D/...\"},\n+\t\t\tstart: []*node{\n+\t\t\t\t{\n+\t\t\t\t\t\"D\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"A/main.go\", pkg(\"A\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"B/main.go\", pkg(\"B\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"+git\", \"D1\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"C\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"main.go\", pkg(\"main\", \"D/A\"), nil},\n+\t\t\t\t\t\t{\"Godeps/Godeps.json\", godeps(\"C\", \"D/A\", \"D1\", \"D/B\", \"D1\"), nil},\n+\t\t\t\t\t\t{\"vendor/D/A/main.go\", pkg(\"A\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"vendor/D/B/main.go\", pkg(\"B\") + decl(\"D1\"), nil},\n+\t\t\t\t\t\t{\"+git\", \"\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t\t{\"D\",\n+\t\t\t\t\t\"\",\n+\t\t\t\t\t[]*node{\n+\t\t\t\t\t\t{\"A/main.go\", pkg(\"A\") + decl(\"D2\"), nil},\n+\t\t\t\t\t\t{\"B\", \"(rm)\", nil},\n+\t\t\t\t\t\t{\"+git\", \"D2\", nil},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\twant: []*node{\n+\t\t\t\t{\"C/vendor/D/A/main.go\", pkg(\"A\") + decl(\"D2\"), nil},\n+\t\t\t\t{\"C/vendor/D/B/main.go\", \"(absent)\", nil},\n+\t\t\t\t{\"C/vendor/D/E/main.go\", \"(absent)\", nil},\n+\t\t\t},\n+\t\t\twdep: Godeps{\n+\t\t\t\tImportPath: \"C\",\n+\t\t\t\tDeps: []Dependency{\n+\t\t\t\t\t{ImportPath: \"D/A\", Comment: \"D2\"},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t\t{ // 14 - Update package A, but not package B, which is missing from $GOPATH",
        "path": "update_test.go",
        "position": 59,
        "original_position": 59,
        "commit_id": "cdb5ef127ce3ff11698bae8c66bffdffec31d480",
        "original_commit_id": "a9a47e5822b5923f4b9291d41086edba72e9e163",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "merging now. I'll look at cleaning up UX next week. That may actually be harder. ;-) \n",
        "created_at": "2016-05-13T23:01:02Z",
        "updated_at": "2016-05-13T23:04:23Z",
        "html_url": "https://github.com/tools/godep/pull/467#discussion_r63262285",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/467",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/63262285"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/467#discussion_r63262285"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/467"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/tools/godep/pulls/comments/72138271",
        "pull_request_review_id": null,
        "id": 72138271,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcyMTM4Mjcx",
        "diff_hunk": "@@ -0,0 +1,57 @@\n+package main\n+\n+import (\n+\t\"fmt\"\n+\t\"io\"\n+\t\"log\"\n+\t\"os\"\n+\t\"os/exec\"\n+)\n+\n+var cmdForeach = &Command{\n+\tName:  \"foreach\",\n+\tShort: \"run a command in each dependency's path\",\n+\tLong: `\n+Foreach runs the provided command for each dependency path in GOPATH. This can\n+be useful for checking out the master branch after running \"godep restore\" to\n+avoid breaking \"go get -u\".\n+\n+`,\n+\tRun:          runForeach,\n+\tOnlyInGOPATH: true,\n+}\n+\n+func runForeach(cmd *Command, args []string) {\n+\tg, err := loadDefaultGodepsFile()\n+\tif err != nil {\n+\t\tlog.Fatalln(err)\n+\t}\n+\n+\tif args == nil || len(args) < 1 {\n+\t\tlog.Fatalln(\"Must provide a command to foreach\")\n+\t}\n+\n+\tfor _, dep := range g.Deps {\n+\t\tc := exec.Command(args[0], args[1:]...)\n+\t\tc.Dir = getRoot(dep.root, dep.ImportPath)",
        "path": "foreach.go",
        "position": 36,
        "original_position": 36,
        "commit_id": "3742c992d8a8a9a4f52ac7c8f927ff4643238d95",
        "original_commit_id": "3742c992d8a8a9a4f52ac7c8f927ff4643238d95",
        "user": {
            "login": "freeformz",
            "id": 103,
            "node_id": "MDQ6VXNlcjEwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freeformz",
            "html_url": "https://github.com/freeformz",
            "followers_url": "https://api.github.com/users/freeformz/followers",
            "following_url": "https://api.github.com/users/freeformz/following{/other_user}",
            "gists_url": "https://api.github.com/users/freeformz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freeformz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freeformz/subscriptions",
            "organizations_url": "https://api.github.com/users/freeformz/orgs",
            "repos_url": "https://api.github.com/users/freeformz/repos",
            "events_url": "https://api.github.com/users/freeformz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freeformz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should this be run for each dep or each repo?\n",
        "created_at": "2016-07-25T20:29:20Z",
        "updated_at": "2016-07-25T20:29:20Z",
        "html_url": "https://github.com/tools/godep/pull/499#discussion_r72138271",
        "pull_request_url": "https://api.github.com/repos/tools/godep/pulls/499",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/tools/godep/pulls/comments/72138271"
            },
            "html": {
                "href": "https://github.com/tools/godep/pull/499#discussion_r72138271"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/tools/godep/pulls/499"
            }
        }
    }
]