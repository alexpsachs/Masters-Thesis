[
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5404",
        "pull_request_review_id": null,
        "id": 5404,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ=",
        "diff_hunk": "@@ -0,0 +1,185 @@\n+# Generated file, on Tue Mar 01 18:44:46 +0100 2011.  Do not edit this file, but lib/fixtures/currencies.yml instead. and run rake money:generate.\n+TABLE = {",
        "path": "lib/money/currencies.rb",
        "position": null,
        "original_position": 2,
        "commit_id": "59e445816c7a156673ff85e45e73c7a34ee03aea",
        "original_commit_id": "cfb43c460fe8208ac5a14577adf2c00ce70d70cd",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This should be contained by\n\n```\nclass Money\n  class Currency\n    ..\n  end\nend\n```\n",
        "created_at": "2011-03-01T19:17:26Z",
        "updated_at": "2011-03-02T09:29:39Z",
        "html_url": "https://github.com/RubyMoney/money/pull/60#discussion_r5404",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/60",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5404"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/60#discussion_r5404"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/60"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5406",
        "pull_request_review_id": null,
        "id": 5406,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY=",
        "diff_hunk": "@@ -21,174 +24,7 @@ class Money\n     # See http://en.wikipedia.org/wiki/List_of_circulating_currencies and\n     # http://search.cpan.org/~tnguyen/Locale-Currency-Format-1.28/Format.pm\n \n-    TABLE = {\n-      :aed => { :priority => 100, :iso_code => \"AED\", :name => \"United Arab Emirates Dirham\",               :symbol => \"\u062f.\u0625\",           :subunit => \"Fils\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :afn => { :priority => 100, :iso_code => \"AFN\", :name => \"Afghan Afghani\",                            :symbol => \"\u060b\",             :subunit => \"Pul\",           :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :all => { :priority => 100, :iso_code => \"ALL\", :name => \"Albanian Lek\",                              :symbol => \"L\",             :subunit => \"Qintar\",        :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :amd => { :priority => 100, :iso_code => \"AMD\", :name => \"Armenian Dram\",                             :symbol => \"\u0564\u0580.\",           :subunit => \"Luma\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :ang => { :priority => 100, :iso_code => \"ANG\", :name => \"Netherlands Antillean Gulden\",              :symbol => \"\u0192\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x0192;\", :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :aoa => { :priority => 100, :iso_code => \"AOA\", :name => \"Angolan Kwanza\",                            :symbol => \"Kz\",            :subunit => \"C\u00eantimo\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :ars => { :priority => 100, :iso_code => \"ARS\", :name => \"Argentine Peso\",                            :symbol => \"$\",             :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20B1;\", :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :aud => { :priority =>   4, :iso_code => \"AUD\", :name => \"Australian Dollar\",                         :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :awg => { :priority => 100, :iso_code => \"AWG\", :name => \"Aruban Florin\",                             :symbol => \"\u0192\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x0192;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :azn => { :priority => 100, :iso_code => \"AZN\", :name => \"Azerbaijani Manat\",                         :symbol => nil,             :subunit => \"Q\u0259pik\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :bam => { :priority => 100, :iso_code => \"BAM\", :name => \"Bosnia and Herzegovina Convertible Mark\",   :symbol => \"KM or \u041a\u041c\",      :subunit => \"Fening\",        :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :bbd => { :priority => 100, :iso_code => \"BBD\", :name => \"Barbadian Dollar\",                          :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"$\",       :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :bdt => { :priority => 100, :iso_code => \"BDT\", :name => \"Bangladeshi Taka\",                          :symbol => \"\u09f3\",             :subunit => \"Paisa\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :bgn => { :priority => 100, :iso_code => \"BGN\", :name => \"Bulgarian Lev\",                             :symbol => \"\u043b\u0432\",            :subunit => \"Stotinka\",      :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :bhd => { :priority => 100, :iso_code => \"BHD\", :name => \"Bahraini Dinar\",                            :symbol => \"\u0628.\u062f\",           :subunit => \"Fils\",         :subunit_to_unit => 1000,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :bif => { :priority => 100, :iso_code => \"BIF\", :name => \"Burundian Franc\",                           :symbol => \"Fr\",            :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :bmd => { :priority => 100, :iso_code => \"BMD\", :name => \"Bermudian Dollar\",                          :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :bnd => { :priority => 100, :iso_code => \"BND\", :name => \"Brunei Dollar\",                             :symbol => \"$\",             :subunit => \"Sen\",           :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :bob => { :priority => 100, :iso_code => \"BOB\", :name => \"Bolivian Boliviano\",                        :symbol => \"Bs.\",           :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :brl => { :priority => 100, :iso_code => \"BRL\", :name => \"Brazilian Real\",                            :symbol => \"R$ \",            :subunit => \"Centavo\",      :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"R\\$\",      :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :bsd => { :priority => 100, :iso_code => \"BSD\", :name => \"Bahamian Dollar\",                           :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :btn => { :priority => 100, :iso_code => \"BTN\", :name => \"Bhutanese Ngultrum\",                        :symbol => nil,             :subunit => \"Chertrum\",      :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :bwp => { :priority => 100, :iso_code => \"BWP\", :name => \"Botswana Pula\",                             :symbol => \"P\",             :subunit => \"Thebe\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :byr => { :priority => 100, :iso_code => \"BYR\", :name => \"Belarusian Ruble\",                          :symbol => \"Br\",            :subunit => \"Kapyeyka\",      :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :bzd => { :priority => 100, :iso_code => \"BZD\", :name => \"Belize Dollar\",                             :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :cad => { :priority =>   5, :iso_code => \"CAD\", :name => \"Canadian Dollar\",                           :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :cdf => { :priority => 100, :iso_code => \"CDF\", :name => \"Congolese Franc\",                           :symbol => \"Fr\",            :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :chf => { :priority => 100, :iso_code => \"CHF\", :name => \"Swiss Franc\",                               :symbol => \"Fr\",            :subunit => \"Rappen\",        :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :clp => { :priority => 100, :iso_code => \"CLP\", :name => \"Chilean Peso\",                              :symbol => \"$\",             :subunit => \"Peso\",       :subunit_to_unit => 1,       :symbol_first => true, :html_entity => \"&#x20B1;\", :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :cny => { :priority => 100, :iso_code => \"CNY\", :name => \"Chinese Renminbi Yuan\",                     :symbol => \"\u00a5\",             :subunit => \"Fen\",           :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x5713;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :cop => { :priority => 100, :iso_code => \"COP\", :name => \"Colombian Peso\",                            :symbol => \"$\",             :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20B1;\", :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :crc => { :priority => 100, :iso_code => \"CRC\", :name => \"Costa Rican Col\u00f3n\",                         :symbol => \"\u20a1\",             :subunit => \"C\u00e9ntimo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20A1;\", :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :cuc => { :priority => 100, :iso_code => \"CUC\", :name => \"Cuban Convertible Peso\",                    :symbol => \"$\",             :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :cup => { :priority => 100, :iso_code => \"CUP\", :name => \"Cuban Peso\",                                :symbol => \"$\",             :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20B1;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :cve => { :priority => 100, :iso_code => \"CVE\", :name => \"Cape Verdean Escudo\",                       :symbol => \"$ or Esc\",      :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :czk => { :priority => 100, :iso_code => \"CZK\", :name => \"Czech Koruna\",                              :symbol => \"K\u010d\",            :subunit => \"Hal\u00e9\u0159\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :djf => { :priority => 100, :iso_code => \"DJF\", :name => \"Djiboutian Franc\",                          :symbol => \"Fr\",            :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :dkk => { :priority => 100, :iso_code => \"DKK\", :name => \"Danish Krone\",                              :symbol => \"kr\",            :subunit => \"\u00d8re\",           :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :dop => { :priority => 100, :iso_code => \"DOP\", :name => \"Dominican Peso\",                            :symbol => \"$\",             :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20B1;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :dzd => { :priority => 100, :iso_code => \"DZD\", :name => \"Algerian Dinar\",                            :symbol => \"\u062f.\u062c\",           :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :eek => { :priority => 100, :iso_code => \"EEK\", :name => \"Estonian Kroon\",                            :symbol => \"KR\",            :subunit => \"Sent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :egp => { :priority => 100, :iso_code => \"EGP\", :name => \"Egyptian Pound\",                            :symbol => \"\u00a3 or \u062c.\u0645\",      :subunit => \"Piastre\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x00A3;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :ern => { :priority => 100, :iso_code => \"ERN\", :name => \"Eritrean Nakfa\",                            :symbol => \"Nfk\",           :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :etb => { :priority => 100, :iso_code => \"ETB\", :name => \"Ethiopian Birr\",                            :symbol => nil,             :subunit => \"Santim\",        :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :eur => { :priority =>   2, :iso_code => \"EUR\", :name => \"Euro\",                                      :symbol => \"\u20ac\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x20AC;\", :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :fjd => { :priority => 100, :iso_code => \"FJD\", :name => \"Fijian Dollar\",                             :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :fkp => { :priority => 100, :iso_code => \"FKP\", :name => \"Falkland Pound\",                            :symbol => \"\u00a3\",             :subunit => \"Penny\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x00A3;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :gbp => { :priority =>   3, :iso_code => \"GBP\", :name => \"British Pound\",                             :symbol => \"\u00a3\",             :subunit => \"Penny\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x00A3;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :gel => { :priority => 100, :iso_code => \"GEL\", :name => \"Georgian Lari\",                             :symbol => \"\u10da\",             :subunit => \"Tetri\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :ghs => { :priority => 100, :iso_code => \"GHS\", :name => \"Ghanaian Cedi\",                             :symbol => \"\u20b5\",             :subunit => \"Pesewa\",        :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20B5;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :gip => { :priority => 100, :iso_code => \"GIP\", :name => \"Gibraltar Pound\",                           :symbol => \"\u00a3\",             :subunit => \"Penny\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x00A3;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :gmd => { :priority => 100, :iso_code => \"GMD\", :name => \"Gambian Dalasi\",                            :symbol => \"D\",             :subunit => \"Butut\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :gnf => { :priority => 100, :iso_code => \"GNF\", :name => \"Guinean Franc\",                             :symbol => \"Fr\",            :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :gtq => { :priority => 100, :iso_code => \"GTQ\", :name => \"Guatemalan Quetzal\",                        :symbol => \"Q\",             :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :gyd => { :priority => 100, :iso_code => \"GYD\", :name => \"Guyanese Dollar\",                           :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"$\",       :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :hkd => { :priority => 100, :iso_code => \"HKD\", :name => \"Hong Kong Dollar\",                          :symbol => \"$\",             :subunit => \"Ho\",            :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",       :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :hnl => { :priority => 100, :iso_code => \"HNL\", :name => \"Honduran Lempira\",                          :symbol => \"L\",             :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :hrk => { :priority => 100, :iso_code => \"HRK\", :name => \"Croatian Kuna\",                             :symbol => \"kn\",            :subunit => \"Lipa\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :htg => { :priority => 100, :iso_code => \"HTG\", :name => \"Haitian Gourde\",                            :symbol => \"G\",             :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :huf => { :priority => 100, :iso_code => \"HUF\", :name => \"Hungarian Forint\",                          :symbol => \"Ft\",            :subunit => \"Fill\u00e9r\",        :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :idr => { :priority => 100, :iso_code => \"IDR\", :name => \"Indonesian Rupiah\",                         :symbol => \"Rp\",            :subunit => \"Sen\",           :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :ils => { :priority => 100, :iso_code => \"ILS\", :name => \"Israeli New Sheqel\",                        :symbol => \"\u20aa\",             :subunit => \"Agora\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20AA;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :inr => { :priority => 100, :iso_code => \"INR\", :name => \"Indian Rupee\",                              :symbol => \"\u20a8\",             :subunit => \"Paisa\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20A8;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :iqd => { :priority => 100, :iso_code => \"IQD\", :name => \"Iraqi Dinar\",                               :symbol => \"\u0639.\u062f\",           :subunit => \"Fils\",          :subunit_to_unit => 1000, :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :irr => { :priority => 100, :iso_code => \"IRR\", :name => \"Iranian Rial\",                              :symbol => \"\ufdfc\",             :subunit => \"Dinar\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#xFDFC;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :isk => { :priority => 100, :iso_code => \"ISK\", :name => \"Icelandic Kr\u00f3na\",                           :symbol => \"kr\",            :subunit => \"Eyrir\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :jmd => { :priority => 100, :iso_code => \"JMD\", :name => \"Jamaican Dollar\",                           :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :jod => { :priority => 100, :iso_code => \"JOD\", :name => \"Jordanian Dinar\",                           :symbol => \"\u062f.\u0627\",           :subunit => \"Piastre\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :jpy => { :priority =>   6, :iso_code => \"JPY\", :name => \"Japanese Yen\",                              :symbol => \"\u00a5\",             :subunit => \"Sen\",           :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x00A5;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :kes => { :priority => 100, :iso_code => \"KES\", :name => \"Kenyan Shilling\",                           :symbol => \"Sh\",            :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :kgs => { :priority => 100, :iso_code => \"KGS\", :name => \"Kyrgyzstani Som\",                           :symbol => nil,             :subunit => \"Tyiyn\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :khr => { :priority => 100, :iso_code => \"KHR\", :name => \"Cambodian Riel\",                            :symbol => \"\u17db\",             :subunit => \"Sen\",           :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x17DB;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :kmf => { :priority => 100, :iso_code => \"KMF\", :name => \"Comorian Franc\",                            :symbol => \"Fr\",            :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :kpw => { :priority => 100, :iso_code => \"KPW\", :name => \"North Korean Won\",                          :symbol => \"\u20a9\",             :subunit => \"Ch\u014fn\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x20A9;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :krw => { :priority => 100, :iso_code => \"KRW\", :name => \"South Korean Won\",                          :symbol => \"\u20a9\",             :subunit => \"Jeon\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20A9;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :kwd => { :priority => 100, :iso_code => \"KWD\", :name => \"Kuwaiti Dinar\",                             :symbol => \"\u062f.\u0643\",           :subunit => \"Fils\",         :subunit_to_unit => 1000,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :kyd => { :priority => 100, :iso_code => \"KYD\", :name => \"Cayman Islands Dollar\",                     :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :kzt => { :priority => 100, :iso_code => \"KZT\", :name => \"Kazakhstani Tenge\",                         :symbol => \"\u3012\",             :subunit => \"Tiyn\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :lak => { :priority => 100, :iso_code => \"LAK\", :name => \"Lao Kip\",                                   :symbol => \"\u20ad\",             :subunit => \"Att\",           :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x20AD;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :lbp => { :priority => 100, :iso_code => \"LBP\", :name => \"Lebanese Lira\",                             :symbol => \"\u0644.\u0644\",           :subunit => \"Piastre\",      :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x00A3;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :lkr => { :priority => 100, :iso_code => \"LKR\", :name => \"Sri Lankan Rupee\",                          :symbol => \"\u20a8\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x0BF9;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :lrd => { :priority => 100, :iso_code => \"LRD\", :name => \"Liberian Dollar\",                           :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :lsl => { :priority => 100, :iso_code => \"LSL\", :name => \"Lesotho Loti\",                              :symbol => \"L\",             :subunit => \"Sente\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :ltl => { :priority => 100, :iso_code => \"LTL\", :name => \"Lithuanian Litas\",                          :symbol => \"Lt\",            :subunit => \"Centas\",        :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :lvl => { :priority => 100, :iso_code => \"LVL\", :name => \"Latvian Lats\",                              :symbol => \"Ls\",            :subunit => \"Sant\u012bms\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :lyd => { :priority => 100, :iso_code => \"LYD\", :name => \"Libyan Dinar\",                              :symbol => \"\u0644.\u062f\",           :subunit => \"Dirham\",       :subunit_to_unit => 1000,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mad => { :priority => 100, :iso_code => \"MAD\", :name => \"Moroccan Dirham\",                           :symbol => \"\u062f.\u0645.\",          :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mdl => { :priority => 100, :iso_code => \"MDL\", :name => \"Moldovan Leu\",                              :symbol => \"L\",             :subunit => \"Ban\",           :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mga => { :priority => 100, :iso_code => \"MGA\", :name => \"Malagasy Ariary\",                           :symbol => nil,             :subunit => \"Iraimbilanja\",  :subunit_to_unit => 5,    :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mkd => { :priority => 100, :iso_code => \"MKD\", :name => \"Macedonian Denar\",                          :symbol => \"\u0434\u0435\u043d\",           :subunit => \"Deni\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mmk => { :priority => 100, :iso_code => \"MMK\", :name => \"Myanmar Kyat\",                              :symbol => \"K\",             :subunit => \"Pya\",           :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mnt => { :priority => 100, :iso_code => \"MNT\", :name => \"Mongolian T\u00f6gr\u00f6g\",                          :symbol => \"\u20ae\",             :subunit => \"M\u00f6ng\u00f6\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x20AE;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mop => { :priority => 100, :iso_code => \"MOP\", :name => \"Macanese Pataca\",                           :symbol => \"P\",             :subunit => \"Avo\",           :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mro => { :priority => 100, :iso_code => \"MRO\", :name => \"Mauritanian Ouguiya\",                       :symbol => \"UM\",            :subunit => \"Khoums\",        :subunit_to_unit => 5,    :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mur => { :priority => 100, :iso_code => \"MUR\", :name => \"Mauritian Rupee\",                           :symbol => \"\u20a8\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20A8;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mvr => { :priority => 100, :iso_code => \"MVR\", :name => \"Maldivian Rufiyaa\",                         :symbol => \"\u0783.\",            :subunit => \"Laari\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mwk => { :priority => 100, :iso_code => \"MWK\", :name => \"Malawian Kwacha\",                           :symbol => \"MK\",            :subunit => \"Tambala\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mxn => { :priority => 100, :iso_code => \"MXN\", :name => \"Mexican Peso\",                              :symbol => \"$\",             :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :myr => { :priority => 100, :iso_code => \"MYR\", :name => \"Malaysian Ringgit\",                         :symbol => \"RM\",            :subunit => \"Sen\",           :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :mzn => { :priority => 100, :iso_code => \"MZN\", :name => \"Mozambican Metical\",                        :symbol => \"MTn\",           :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :nad => { :priority => 100, :iso_code => \"NAD\", :name => \"Namibian Dollar\",                           :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"$\",       :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :ngn => { :priority => 100, :iso_code => \"NGN\", :name => \"Nigerian Naira\",                            :symbol => \"\u20a6\",             :subunit => \"Kobo\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x20A6;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :nio => { :priority => 100, :iso_code => \"NIO\", :name => \"Nicaraguan C\u00f3rdoba\",                        :symbol => \"C$\",            :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :nok => { :priority => 100, :iso_code => \"NOK\", :name => \"Norwegian Krone\",                           :symbol => \"kr\",            :subunit => \"\u00d8re\",           :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"kr\",       :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :npr => { :priority => 100, :iso_code => \"NPR\", :name => \"Nepalese Rupee\",                            :symbol => \"\u20a8\",             :subunit => \"Paisa\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20A8;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :nzd => { :priority => 100, :iso_code => \"NZD\", :name => \"New Zealand Dollar\",                        :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :omr => { :priority => 100, :iso_code => \"OMR\", :name => \"Omani Rial\",                                :symbol => \"\u0631.\u0639.\",          :subunit => \"Baisa\",        :subunit_to_unit => 1000,  :symbol_first => true, :html_entity => \"&#xFDFC;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :pab => { :priority => 100, :iso_code => \"PAB\", :name => \"Panamanian Balboa\",                         :symbol => \"B/.\",           :subunit => \"Cent\u00e9simo\",     :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :pen => { :priority => 100, :iso_code => \"PEN\", :name => \"Peruvian Nuevo Sol\",                        :symbol => \"S/.\",           :subunit => \"C\u00e9ntimo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"S/.\",      :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :pgk => { :priority => 100, :iso_code => \"PGK\", :name => \"Papua New Guinean Kina\",                    :symbol => \"K\",             :subunit => \"Toea\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :php => { :priority => 100, :iso_code => \"PHP\", :name => \"Philippine Peso\",                           :symbol => \"\u20b1\",             :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x20B1;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :pkr => { :priority => 100, :iso_code => \"PKR\", :name => \"Pakistani Rupee\",                           :symbol => \"\u20a8\",             :subunit => \"Paisa\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20A8;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :pln => { :priority => 100, :iso_code => \"PLN\", :name => \"Polish Z\u0142oty\",                              :symbol => \"z\u0142\",            :subunit => \"Grosz\",         :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :pyg => { :priority => 100, :iso_code => \"PYG\", :name => \"Paraguayan Guaran\u00ed\",                        :symbol => \"\u20b2\",             :subunit => \"C\u00e9ntimo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20B2;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :qar => { :priority => 100, :iso_code => \"QAR\", :name => \"Qatari Riyal\",                              :symbol => \"\u0631.\u0642\",           :subunit => \"Dirham\",        :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#xFDFC;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :ron => { :priority => 100, :iso_code => \"RON\", :name => \"Romanian Leu\",                              :symbol => \"L\",             :subunit => \"Ban\",           :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :rsd => { :priority => 100, :iso_code => \"RSD\", :name => \"Serbian Dinar\",                             :symbol => \"din. or \u0434\u0438\u043d.\",  :subunit => \"Para\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :rub => { :priority => 100, :iso_code => \"RUB\", :name => \"Russian Ruble\",                             :symbol => \"\u0440.\",            :subunit => \"Kopek\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x0440;&#x0443;&#x0431;\", :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :rwf => { :priority => 100, :iso_code => \"RWF\", :name => \"Rwandan Franc\",                             :symbol => \"Fr\",            :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :sar => { :priority => 100, :iso_code => \"SAR\", :name => \"Saudi Riyal\",                               :symbol => \"\u0631.\u0633\",           :subunit => \"Hallallah\",    :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#xFDFC;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :sbd => { :priority => 100, :iso_code => \"SBD\", :name => \"Solomon Islands Dollar\",                    :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :scr => { :priority => 100, :iso_code => \"SCR\", :name => \"Seychellois Rupee\",                         :symbol => \"\u20a8\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x20A8;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :sdg => { :priority => 100, :iso_code => \"SDG\", :name => \"Sudanese Pound\",                            :symbol => \"\u00a3\",             :subunit => \"Piastre\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :sek => { :priority => 100, :iso_code => \"SEK\", :name => \"Swedish Krona\",                             :symbol => \"kr\",            :subunit => \"\u00d6re\",           :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :sgd => { :priority => 100, :iso_code => \"SGD\", :name => \"Singapore Dollar\",                          :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :shp => { :priority => 100, :iso_code => \"SHP\", :name => \"Saint Helenian Pound\",                      :symbol => \"\u00a3\",             :subunit => \"Penny\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x00A3;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :skk => { :priority => 100, :iso_code => \"SKK\", :name => \"Slovak Koruna\",                             :symbol => \"Sk\",            :subunit => \"Halier\",        :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :sll => { :priority => 100, :iso_code => \"SLL\", :name => \"Sierra Leonean Leone\",                      :symbol => \"Le\",            :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :sos => { :priority => 100, :iso_code => \"SOS\", :name => \"Somali Shilling\",                           :symbol => \"Sh\",            :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :srd => { :priority => 100, :iso_code => \"SRD\", :name => \"Surinamese Dollar\",                         :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :std => { :priority => 100, :iso_code => \"STD\", :name => \"S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra\",               :symbol => \"Db\",            :subunit => \"C\u00eantimo\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :svc => { :priority => 100, :iso_code => \"SVC\", :name => \"Salvadoran Col\u00f3n\",                          :symbol => \"\u20a1\",             :subunit => \"Centavo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20A1;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :syp => { :priority => 100, :iso_code => \"SYP\", :name => \"Syrian Pound\",                              :symbol => \"\u00a3 or \u0644.\u0633\",     :subunit => \"Piastre\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x00A3;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :szl => { :priority => 100, :iso_code => \"SZL\", :name => \"Swazi Lilangeni\",                           :symbol => \"L\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :thb => { :priority => 100, :iso_code => \"THB\", :name => \"Thai Baht\",                                 :symbol => \"\u0e3f\",             :subunit => \"Satang\",        :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x0E3F;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :tjs => { :priority => 100, :iso_code => \"TJS\", :name => \"Tajikistani Somoni\",                        :symbol => \"\u0405\u041c\",            :subunit => \"Diram\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :tmm => { :priority => 100, :iso_code => \"TMM\", :name => \"Turkmenistani Manat\",                       :symbol => \"m\",             :subunit => \"Tennesi\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :tnd => { :priority => 100, :iso_code => \"TND\", :name => \"Tunisian Dinar\",                            :symbol => \"\u062f.\u062a\",           :subunit => \"Millime\",       :subunit_to_unit => 1000, :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :top => { :priority => 100, :iso_code => \"TOP\", :name => \"Tongan Pa\u02bbanga\",                            :symbol => \"T$\",            :subunit => \"Seniti\",        :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :try => { :priority => 100, :iso_code => \"TRY\", :name => \"Turkish New Lira\",                          :symbol => \"YTL\",           :subunit => \"New kuru\u015f\",     :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :ttd => { :priority => 100, :iso_code => \"TTD\", :name => \"Trinidad and Tobago Dollar\",                :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :twd => { :priority => 100, :iso_code => \"TWD\", :name => \"New Taiwan Dollar\",                         :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :tzs => { :priority => 100, :iso_code => \"TZS\", :name => \"Tanzanian Shilling\",                        :symbol => \"Sh\",            :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :uah => { :priority => 100, :iso_code => \"UAH\", :name => \"Ukrainian Hryvnia\",                         :symbol => \"\u20b4\",             :subunit => \"Kopiyka\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#x20B4\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :ugx => { :priority => 100, :iso_code => \"UGX\", :name => \"Ugandan Shilling\",                          :symbol => \"Sh\",            :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :usd => { :priority =>   1, :iso_code => \"USD\", :name => \"United States Dollar\",                      :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :uyu => { :priority => 100, :iso_code => \"UYU\", :name => \"Uruguayan Peso\",                            :symbol => \"$\",             :subunit => \"Cent\u00e9simo\",     :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20B1;\", :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :uzs => { :priority => 100, :iso_code => \"UZS\", :name => \"Uzbekistani Som\",                           :symbol => nil,             :subunit => \"Tiyin\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :vef => { :priority => 100, :iso_code => \"VEF\", :name => \"Venezuelan Bol\u00edvar\",                        :symbol => \"Bs F\",          :subunit => \"C\u00e9ntimo\",       :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"\",         :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :vnd => { :priority => 100, :iso_code => \"VND\", :name => \"Vietnamese \u0110\u1ed3ng\",                           :symbol => \"\u20ab\",             :subunit => \"H\u00e0o\",           :subunit_to_unit => 10,   :symbol_first => true, :html_entity => \"&#x20AB;\", :decimal_mark => \",\", :thousands_separator => \".\"},\n-      :vuv => { :priority => 100, :iso_code => \"VUV\", :name => \"Vanuatu Vatu\",                              :symbol => \"Vt\",            :subunit => nil,             :subunit_to_unit => 1,    :symbol_first => true, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :wst => { :priority => 100, :iso_code => \"WST\", :name => \"Samoan Tala\",                               :symbol => \"T\",             :subunit => \"Sene\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :xaf => { :priority => 100, :iso_code => \"XAF\", :name => \"Central African Cfa Franc\",                 :symbol => \"Fr\",            :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :xcd => { :priority => 100, :iso_code => \"XCD\", :name => \"East Caribbean Dollar\",                     :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :xof => { :priority => 100, :iso_code => \"XOF\", :name => \"West African Cfa Franc\",                    :symbol => \"Fr\",            :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :xpf => { :priority => 100, :iso_code => \"XPF\", :name => \"Cfp Franc\",                                 :symbol => \"Fr\",            :subunit => \"Centime\",       :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :yer => { :priority => 100, :iso_code => \"YER\", :name => \"Yemeni Rial\",                               :symbol => \"\ufdfc\",             :subunit => \"Fils\",          :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"&#xFDFC;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :zar => { :priority => 100, :iso_code => \"ZAR\", :name => \"South African Rand\",                        :symbol => \"R\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x0052;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :zmk => { :priority => 100, :iso_code => \"ZMK\", :name => \"Zambian Kwacha\",                            :symbol => \"ZK\",            :subunit => \"Ngwee\",         :subunit_to_unit => 100,  :symbol_first => false, :html_entity => \"\",         :decimal_mark => \".\", :thousands_separator => \",\"},\n-      :zwd => { :priority => 100, :iso_code => \"ZWD\", :name => \"Zimbabwean Dollar\",                         :symbol => \"$\",             :subunit => \"Cent\",          :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"$\",        :decimal_mark => \".\", :thousands_separator => \",\"},\n-\n-      # aliases for BC with documentation before Currency\n-      :yen => { :priority => 100, :iso_code => \"JPY\", :name => \"Japanese Yen\",                              :symbol => \"\u00a5\",             :subunit => \"Sen\",           :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x00A5;\", :decimal_mark => \".\", :thousands_separator => \",\"},\n-\n-      # kept for backwards compatibility, real entry is :ghs\n-      :ghc => { :priority => 100, :iso_code => \"GHS\", :name => \"Ghanaian Cedi\",                             :symbol => \"\u20b5\",             :subunit => \"Pesewa\",        :subunit_to_unit => 100,  :symbol_first => true, :html_entity => \"&#x20B5;\", :decimal_mark => \".\", :thousands_separator => \",\"  }\n-    }\n+    require \"#{File.dirname(__FILE__)}/currencies\"",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 182,
        "commit_id": "59e445816c7a156673ff85e45e73c7a34ee03aea",
        "original_commit_id": "cfb43c460fe8208ac5a14577adf2c00ce70d70cd",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This should be moved to the top of the file, after `currencies.rb` has been updated as described.\n",
        "created_at": "2011-03-01T19:18:02Z",
        "updated_at": "2011-03-02T09:29:39Z",
        "html_url": "https://github.com/RubyMoney/money/pull/60#discussion_r5406",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/60",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5406"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/60#discussion_r5406"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/60"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/15904",
        "pull_request_review_id": null,
        "id": 15904,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTA0",
        "diff_hunk": "@@ -722,7 +722,7 @@ class Money\n   #   Money.new(100, \"USD\").thousands_separator #=> \",\"\n   if Object.const_defined?(\"I18n\")\n     def thousands_separator\n-      I18n.t(:\"number.format.thousands_separator\", :default => currency.thousands_separator || \",\")\n+      I18n.t(:\"number.currency.separator\", :default => currency.thousands_separator || \",\")",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "7e4897fa897e09b3fb4a8fd1f085b788f4f5cb4b",
        "original_commit_id": "dea9861c64ec7aef0860d862df708359c7f95a04",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should be something like the following:\n\n```\nI18n.t(:\"number.currency.format.delimiter\" || :\"number.format.delimiter\", :default => currency.thousands_separator || \",\")\n```\n",
        "created_at": "2011-04-06T14:05:06Z",
        "updated_at": "2011-04-06T21:19:06Z",
        "html_url": "https://github.com/RubyMoney/money/pull/63#discussion_r15904",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/63",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/15904"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/63#discussion_r15904"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/63"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/15905",
        "pull_request_review_id": null,
        "id": 15905,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTA1",
        "diff_hunk": "@@ -741,7 +741,7 @@ class Money\n   #   Money.new(100, \"USD\").decimal_mark #=> \".\"\n   if Object.const_defined?(\"I18n\")\n     def decimal_mark\n-      I18n.t(:\"number.format.decimal_mark\", :default => currency.decimal_mark || \".\")\n+      I18n.t(:\"number.currency.delimiter\", :default => currency.decimal_mark || \".\")",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "7e4897fa897e09b3fb4a8fd1f085b788f4f5cb4b",
        "original_commit_id": "dea9861c64ec7aef0860d862df708359c7f95a04",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should be something like the following:\n\n```\nI18n.t(:\"number.currency.format.separator\" || :\"number.format.separator\", :default => currency.decimal_mark|| \",\")\n```\n",
        "created_at": "2011-04-06T14:05:37Z",
        "updated_at": "2011-04-06T21:19:06Z",
        "html_url": "https://github.com/RubyMoney/money/pull/63#discussion_r15905",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/63",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/15905"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/63#discussion_r15905"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/63"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23453",
        "pull_request_review_id": null,
        "id": 23453,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDUz",
        "diff_hunk": "@@ -1,9 +1,15 @@\n # encoding: utf-8\n require 'money/bank/variable_exchange'\n+require 'money/money/arithmetic'\n+require 'money/money/parsing'\n+require 'money/money/formating'\n \n # Represents an amount of money in a given currency.\n class Money\n   include Comparable\n+  include Arithmetic\n+  include Formating",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 11,
        "commit_id": "247bb873c5661413df5cd4bce5e9e727a31596d5",
        "original_commit_id": "d9c1dc1107638b6e3a57fd36d7b0545e92a6b4f9",
        "user": {
            "login": "weppos",
            "id": 5387,
            "node_id": "MDQ6VXNlcjUzODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/weppos",
            "html_url": "https://github.com/weppos",
            "followers_url": "https://api.github.com/users/weppos/followers",
            "following_url": "https://api.github.com/users/weppos/following{/other_user}",
            "gists_url": "https://api.github.com/users/weppos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/weppos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weppos/subscriptions",
            "organizations_url": "https://api.github.com/users/weppos/orgs",
            "repos_url": "https://api.github.com/users/weppos/repos",
            "events_url": "https://api.github.com/users/weppos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/weppos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`Formating` => `Formatting`?\n",
        "created_at": "2011-04-27T12:14:28Z",
        "updated_at": "2011-04-27T12:44:11Z",
        "html_url": "https://github.com/RubyMoney/money/pull/69#discussion_r23453",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/69",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23453"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/69#discussion_r23453"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/69"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23456",
        "pull_request_review_id": null,
        "id": 23456,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDU2",
        "diff_hunk": "@@ -1,9 +1,15 @@\n # encoding: utf-8\n require 'money/bank/variable_exchange'\n+require 'money/money/arithmetic'\n+require 'money/money/parsing'\n+require 'money/money/formating'\n \n # Represents an amount of money in a given currency.\n class Money\n   include Comparable\n+  include Arithmetic\n+  include Formating",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 11,
        "commit_id": "247bb873c5661413df5cd4bce5e9e727a31596d5",
        "original_commit_id": "d9c1dc1107638b6e3a57fd36d7b0545e92a6b4f9",
        "user": {
            "login": "Jell",
            "id": 184571,
            "node_id": "MDQ6VXNlcjE4NDU3MQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/184571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jell",
            "html_url": "https://github.com/Jell",
            "followers_url": "https://api.github.com/users/Jell/followers",
            "following_url": "https://api.github.com/users/Jell/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jell/subscriptions",
            "organizations_url": "https://api.github.com/users/Jell/orgs",
            "repos_url": "https://api.github.com/users/Jell/repos",
            "events_url": "https://api.github.com/users/Jell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Arf, that comes from me being french. I can fix that.\n",
        "created_at": "2011-04-27T12:17:12Z",
        "updated_at": "2011-04-27T12:44:11Z",
        "html_url": "https://github.com/RubyMoney/money/pull/69#discussion_r23456",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/69",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23456"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/69#discussion_r23456"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/69"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23461",
        "pull_request_review_id": null,
        "id": 23461,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDYx",
        "diff_hunk": "@@ -1,9 +1,15 @@\n # encoding: utf-8\n require 'money/bank/variable_exchange'\n+require 'money/money/arithmetic'\n+require 'money/money/parsing'\n+require 'money/money/formating'\n \n # Represents an amount of money in a given currency.\n class Money\n   include Comparable\n+  include Arithmetic\n+  include Formating",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 11,
        "commit_id": "247bb873c5661413df5cd4bce5e9e727a31596d5",
        "original_commit_id": "d9c1dc1107638b6e3a57fd36d7b0545e92a6b4f9",
        "user": {
            "login": "Jell",
            "id": 184571,
            "node_id": "MDQ6VXNlcjE4NDU3MQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/184571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jell",
            "html_url": "https://github.com/Jell",
            "followers_url": "https://api.github.com/users/Jell/followers",
            "following_url": "https://api.github.com/users/Jell/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jell/subscriptions",
            "organizations_url": "https://api.github.com/users/Jell/orgs",
            "repos_url": "https://api.github.com/users/Jell/repos",
            "events_url": "https://api.github.com/users/Jell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done.\n",
        "created_at": "2011-04-27T12:23:44Z",
        "updated_at": "2011-04-27T12:44:11Z",
        "html_url": "https://github.com/RubyMoney/money/pull/69#discussion_r23461",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/69",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23461"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/69#discussion_r23461"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/69"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23463",
        "pull_request_review_id": null,
        "id": 23463,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDYz",
        "diff_hunk": "@@ -0,0 +1,326 @@",
        "path": "spec/money/formating_spec.rb",
        "position": null,
        "original_position": 0,
        "commit_id": "247bb873c5661413df5cd4bce5e9e727a31596d5",
        "original_commit_id": "86a7bf90ed6fe7a6ae3fbbedf667a1e41b82a23c",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Looks like you missing the spec too.\n",
        "created_at": "2011-04-27T12:26:04Z",
        "updated_at": "2011-04-27T12:44:11Z",
        "html_url": "https://github.com/RubyMoney/money/pull/69#discussion_r23463",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/69",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23463"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/69#discussion_r23463"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/69"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23466",
        "pull_request_review_id": null,
        "id": 23466,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDY2",
        "diff_hunk": "@@ -0,0 +1,326 @@",
        "path": "spec/money/formating_spec.rb",
        "position": null,
        "original_position": 0,
        "commit_id": "247bb873c5661413df5cd4bce5e9e727a31596d5",
        "original_commit_id": "86a7bf90ed6fe7a6ae3fbbedf667a1e41b82a23c",
        "user": {
            "login": "Jell",
            "id": 184571,
            "node_id": "MDQ6VXNlcjE4NDU3MQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/184571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jell",
            "html_url": "https://github.com/Jell",
            "followers_url": "https://api.github.com/users/Jell/followers",
            "following_url": "https://api.github.com/users/Jell/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jell/subscriptions",
            "organizations_url": "https://api.github.com/users/Jell/orgs",
            "repos_url": "https://api.github.com/users/Jell/repos",
            "events_url": "https://api.github.com/users/Jell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":/\n",
        "created_at": "2011-04-27T12:30:00Z",
        "updated_at": "2011-04-27T12:44:11Z",
        "html_url": "https://github.com/RubyMoney/money/pull/69#discussion_r23466",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/69",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23466"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/69#discussion_r23466"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/69"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23467",
        "pull_request_review_id": null,
        "id": 23467,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDY3",
        "diff_hunk": "@@ -0,0 +1,326 @@",
        "path": "spec/money/formating_spec.rb",
        "position": null,
        "original_position": 0,
        "commit_id": "247bb873c5661413df5cd4bce5e9e727a31596d5",
        "original_commit_id": "86a7bf90ed6fe7a6ae3fbbedf667a1e41b82a23c",
        "user": {
            "login": "Jell",
            "id": 184571,
            "node_id": "MDQ6VXNlcjE4NDU3MQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/184571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jell",
            "html_url": "https://github.com/Jell",
            "followers_url": "https://api.github.com/users/Jell/followers",
            "following_url": "https://api.github.com/users/Jell/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jell/subscriptions",
            "organizations_url": "https://api.github.com/users/Jell/orgs",
            "repos_url": "https://api.github.com/users/Jell/repos",
            "events_url": "https://api.github.com/users/Jell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed. Sorry, kind of sloppy today.\n",
        "created_at": "2011-04-27T12:33:00Z",
        "updated_at": "2011-04-27T12:44:11Z",
        "html_url": "https://github.com/RubyMoney/money/pull/69#discussion_r23467",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/69",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23467"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/69#discussion_r23467"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/69"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23620",
        "pull_request_review_id": null,
        "id": 23620,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjIw",
        "diff_hunk": "@@ -155,6 +155,8 @@ class Money\n                   else\n                     \"#{self.to_s}\"\n                   end\n+                  \n+      formatted = \"#{self.to_s.to_i}\" if rules.has_key?(:no_cents_if_whole) && cents % 100 == 0",
        "path": "lib/money/money/formatting.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "a6d0da35dc0bd195cca0b1e7bbe0b038a370c908",
        "original_commit_id": "a5137e933e24d9f2e41e749d559575a02ed7511d",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This doesn't account for currencies whose `subunit_to_unit` isn't 100. I'd also like to see documentation for this option. The code should probably look like:\n\n``` ruby\nif rules[:no_cents_if_whole] && cents % currency.subunit_to_unit == 0\n  formatted = \"#{self.to_s.to_i}\"\nend\n```\n",
        "created_at": "2011-04-27T18:50:04Z",
        "updated_at": "2011-04-27T20:17:46Z",
        "html_url": "https://github.com/RubyMoney/money/pull/71#discussion_r23620",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/71",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23620"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/71#discussion_r23620"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/71"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23623",
        "pull_request_review_id": null,
        "id": 23623,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjIz",
        "diff_hunk": "@@ -155,6 +155,8 @@ class Money\n                   else\n                     \"#{self.to_s}\"\n                   end\n+                  \n+      formatted = \"#{self.to_s.to_i}\" if rules.has_key?(:no_cents_if_whole) && cents % 100 == 0",
        "path": "lib/money/money/formatting.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "a6d0da35dc0bd195cca0b1e7bbe0b038a370c908",
        "original_commit_id": "a5137e933e24d9f2e41e749d559575a02ed7511d",
        "user": {
            "login": "nurey",
            "id": 28474,
            "node_id": "MDQ6VXNlcjI4NDc0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/28474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nurey",
            "html_url": "https://github.com/nurey",
            "followers_url": "https://api.github.com/users/nurey/followers",
            "following_url": "https://api.github.com/users/nurey/following{/other_user}",
            "gists_url": "https://api.github.com/users/nurey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nurey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nurey/subscriptions",
            "organizations_url": "https://api.github.com/users/nurey/orgs",
            "repos_url": "https://api.github.com/users/nurey/repos",
            "events_url": "https://api.github.com/users/nurey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nurey/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Updated the code as per your comments. Please review.\n\nOn 2011-04-27, at 2:50 PM, semmons99 wrote:\n\n> > @@ -155,6 +155,8 @@ class Money\n> >                   else\n> >                     \"#{self.to_s}\"\n> >                   end\n> > -   \n> > -      formatted = \"#{self.to_s.to_i}\" if rules.has_key?(:no_cents_if_whole) && cents % 100 == 0\n> \n> This doesn't account for currencies whose subunit_to_unit isn't 100. I'd also like to see documentation for this option. The code should probably look like:\n> \n> ``` ruby\n> if rules[:no_cents_if_whole] && cents % currency.subunit_to_unit == 0\n>  formatted = \"#{self.to_s.to_i}\"\n> end\n> ```\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/RubyMoney/money/pull/71/files#r23620\n",
        "created_at": "2011-04-27T19:12:58Z",
        "updated_at": "2011-04-27T20:17:46Z",
        "html_url": "https://github.com/RubyMoney/money/pull/71#discussion_r23623",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/71",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23623"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/71#discussion_r23623"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/71"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23625",
        "pull_request_review_id": null,
        "id": 23625,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjI1",
        "diff_hunk": "@@ -191,6 +191,11 @@ describe Money do\n     specify \"#format(:no_cents => true) should respect :subunit_to_unit currency property\" do\n       Money.new(10_00, \"BHD\").format(:no_cents => true).should == \"\u0628.\u062f1\"\n     end\n+    \n+    specify \"#format(:no_cents_if_whole => true) works as documented\" do\n+      Money.ca_dollar(10000).format(:no_cents_if_whole => true).should == \"$100\"\n+      Money.ca_dollar(10034).format(:no_cents_if_whole => true).should == \"$100.34\"",
        "path": "spec/money/formatting_spec.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "a6d0da35dc0bd195cca0b1e7bbe0b038a370c908",
        "original_commit_id": "b26ad252e2bbfb20ae8389bb1143d4b113a24005",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you add tests here for currencies whose `subunit_to_unit` isn't 100? Also, please add a spec for when `:no_cents_if_whole => false`.\n",
        "created_at": "2011-04-27T19:16:00Z",
        "updated_at": "2011-04-27T20:17:46Z",
        "html_url": "https://github.com/RubyMoney/money/pull/71#discussion_r23625",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/71",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23625"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/71#discussion_r23625"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/71"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23626",
        "pull_request_review_id": null,
        "id": 23626,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjI2",
        "diff_hunk": "@@ -62,6 +62,12 @@ class Money\n     #   Money.ca_dollar(100).format(:no_cents => true) #=> \"$1\"\n     #   Money.ca_dollar(599).format(:no_cents => true) #=> \"$5\"\n     #\n+    # @option *rules [Boolean] :no_cents_if_whole (false) Whether cents should be omitted if the cent value is zero",
        "path": "lib/money/money/formatting.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "a6d0da35dc0bd195cca0b1e7bbe0b038a370c908",
        "original_commit_id": "b26ad252e2bbfb20ae8389bb1143d4b113a24005",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Be sure to wrap all lines at 80 characters.\n",
        "created_at": "2011-04-27T19:16:44Z",
        "updated_at": "2011-04-27T20:17:47Z",
        "html_url": "https://github.com/RubyMoney/money/pull/71#discussion_r23626",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/71",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23626"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/71#discussion_r23626"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/71"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23640",
        "pull_request_review_id": null,
        "id": 23640,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjQw",
        "diff_hunk": "@@ -191,6 +191,11 @@ describe Money do\n     specify \"#format(:no_cents => true) should respect :subunit_to_unit currency property\" do\n       Money.new(10_00, \"BHD\").format(:no_cents => true).should == \"\u0628.\u062f1\"\n     end\n+    \n+    specify \"#format(:no_cents_if_whole => true) works as documented\" do\n+      Money.ca_dollar(10000).format(:no_cents_if_whole => true).should == \"$100\"\n+      Money.ca_dollar(10034).format(:no_cents_if_whole => true).should == \"$100.34\"",
        "path": "spec/money/formatting_spec.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "a6d0da35dc0bd195cca0b1e7bbe0b038a370c908",
        "original_commit_id": "b26ad252e2bbfb20ae8389bb1143d4b113a24005",
        "user": {
            "login": "nurey",
            "id": 28474,
            "node_id": "MDQ6VXNlcjI4NDc0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/28474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nurey",
            "html_url": "https://github.com/nurey",
            "followers_url": "https://api.github.com/users/nurey/followers",
            "following_url": "https://api.github.com/users/nurey/following{/other_user}",
            "gists_url": "https://api.github.com/users/nurey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nurey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nurey/subscriptions",
            "organizations_url": "https://api.github.com/users/nurey/orgs",
            "repos_url": "https://api.github.com/users/nurey/repos",
            "events_url": "https://api.github.com/users/nurey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nurey/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm having trouble with unicode editing. I was trying to add something like:\n      Money.new(10_50, \"BHD\").format(:no_cents_if_whole => true).should == \"1.050\"\nHow do you encode the value in bahrain?\n",
        "created_at": "2011-04-27T19:35:30Z",
        "updated_at": "2011-04-27T20:17:47Z",
        "html_url": "https://github.com/RubyMoney/money/pull/71#discussion_r23640",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/71",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23640"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/71#discussion_r23640"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/71"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/42814",
        "pull_request_review_id": null,
        "id": 42814,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE0",
        "diff_hunk": "@@ -256,6 +256,16 @@ class Money\n     \"#{unit}#{decimal_mark}#{subunit}\"\n   end\n \n+  # Return the amount of money as a BigDecimal.\n+  #\n+  # @return [BigDecimal]\n+  #\n+  # @example\n+  #   Money.us_dollar(100).to_d => BigDecimal.new(\"1.0\")\n+  def to_d\n+    (BigDecimal.new(cents.to_s) / currency.subunit_to_unit)",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 11,
        "commit_id": "098af602cf0c44b5510849a2601fc1e74ec49e7c",
        "original_commit_id": "75ab18752843762c93970b8722390862ff3c7b44",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you change this to `BigDecimal(cents.to_s) / BigDecimal(currency.subunit_to_unit.to_s)`\n\nBigDecimal will automatically be coerced into a Float if `subunit_to_unit` happens to be a Float. This should protect us.\n",
        "created_at": "2011-06-10T11:19:43Z",
        "updated_at": "2011-06-10T11:46:45Z",
        "html_url": "https://github.com/RubyMoney/money/pull/83#discussion_r42814",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/83",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/42814"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/83#discussion_r42814"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/83"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/42819",
        "pull_request_review_id": null,
        "id": 42819,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE5",
        "diff_hunk": "@@ -256,6 +256,16 @@ class Money\n     \"#{unit}#{decimal_mark}#{subunit}\"\n   end\n \n+  # Return the amount of money as a BigDecimal.\n+  #\n+  # @return [BigDecimal]\n+  #\n+  # @example\n+  #   Money.us_dollar(100).to_d => BigDecimal.new(\"1.0\")\n+  def to_d\n+    (BigDecimal.new(cents.to_s) / currency.subunit_to_unit)",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 11,
        "commit_id": "098af602cf0c44b5510849a2601fc1e74ec49e7c",
        "original_commit_id": "75ab18752843762c93970b8722390862ff3c7b44",
        "user": {
            "login": "pixeltrix",
            "id": 6321,
            "node_id": "MDQ6VXNlcjYzMjE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pixeltrix",
            "html_url": "https://github.com/pixeltrix",
            "followers_url": "https://api.github.com/users/pixeltrix/followers",
            "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
            "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
            "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
            "repos_url": "https://api.github.com/users/pixeltrix/repos",
            "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, sorry I'd assumed it would always be an integer - updated now\n",
        "created_at": "2011-06-10T11:49:17Z",
        "updated_at": "2011-06-10T11:49:17Z",
        "html_url": "https://github.com/RubyMoney/money/pull/83#discussion_r42819",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/83",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/42819"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/83#discussion_r42819"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/83"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/59647",
        "pull_request_review_id": null,
        "id": 59647,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjQ3",
        "diff_hunk": "@@ -184,7 +184,7 @@ class Money\n   #\n   def initialize(cents, currency = Money.default_currency, bank = Money.default_bank)",
        "path": "lib/money/money.rb",
        "position": 2,
        "original_position": 2,
        "commit_id": "58b8107c0f493327c6c81673c325a32bd60ae217",
        "original_commit_id": "58b8107c0f493327c6c81673c325a32bd60ae217",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`currency` is already being set to `Money.default_currency`. I think you're passing `nil` as a second parameter in your code.\n",
        "created_at": "2011-07-07T11:23:00Z",
        "updated_at": "2011-07-07T11:23:00Z",
        "html_url": "https://github.com/RubyMoney/money/pull/93#discussion_r59647",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/93",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/59647"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/93#discussion_r59647"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/93"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/59678",
        "pull_request_review_id": null,
        "id": 59678,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Njc4",
        "diff_hunk": "@@ -184,7 +184,7 @@ class Money\n   #\n   def initialize(cents, currency = Money.default_currency, bank = Money.default_bank)",
        "path": "lib/money/money.rb",
        "position": 2,
        "original_position": 2,
        "commit_id": "58b8107c0f493327c6c81673c325a32bd60ae217",
        "original_commit_id": "58b8107c0f493327c6c81673c325a32bd60ae217",
        "user": {
            "login": "jasontorres",
            "id": 2481,
            "node_id": "MDQ6VXNlcjI0ODE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasontorres",
            "html_url": "https://github.com/jasontorres",
            "followers_url": "https://api.github.com/users/jasontorres/followers",
            "following_url": "https://api.github.com/users/jasontorres/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasontorres/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasontorres/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasontorres/subscriptions",
            "organizations_url": "https://api.github.com/users/jasontorres/orgs",
            "repos_url": "https://api.github.com/users/jasontorres/repos",
            "events_url": "https://api.github.com/users/jasontorres/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasontorres/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indeed, but it doesn't have the same behaviour if I access an existing record e.g. via ActiveRecord\n\nIn my example. \n    Bid.find(109).amount\n    => #< Money cents:25000 currency: >\n",
        "created_at": "2011-07-07T12:37:00Z",
        "updated_at": "2011-07-07T12:37:48Z",
        "html_url": "https://github.com/RubyMoney/money/pull/93#discussion_r59678",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/93",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/59678"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/93#discussion_r59678"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/93"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/59691",
        "pull_request_review_id": null,
        "id": 59691,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Njkx",
        "diff_hunk": "@@ -184,7 +184,7 @@ class Money\n   #\n   def initialize(cents, currency = Money.default_currency, bank = Money.default_bank)",
        "path": "lib/money/money.rb",
        "position": 2,
        "original_position": 2,
        "commit_id": "58b8107c0f493327c6c81673c325a32bd60ae217",
        "original_commit_id": "58b8107c0f493327c6c81673c325a32bd60ae217",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We can't really make this change, as it will change existing behavior for other users who might want the `nil` currency. Since you're upgrading the app, you probably should update your tables to populate the currency field (my guess is it didn't exist with the money version you were using). The other option if you're not concerned with using currency, or want a user defined currency would be to use the [cashrb gem](https://github.com/semmons99/cashrb). I wrote it as a simpler alternative to the money gem.\n",
        "created_at": "2011-07-07T12:53:03Z",
        "updated_at": "2011-07-07T12:53:03Z",
        "html_url": "https://github.com/RubyMoney/money/pull/93#discussion_r59691",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/93",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/59691"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/93#discussion_r59691"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/93"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/59694",
        "pull_request_review_id": null,
        "id": 59694,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Njk0",
        "diff_hunk": "@@ -184,7 +184,7 @@ class Money\n   #\n   def initialize(cents, currency = Money.default_currency, bank = Money.default_bank)",
        "path": "lib/money/money.rb",
        "position": 2,
        "original_position": 2,
        "commit_id": "58b8107c0f493327c6c81673c325a32bd60ae217",
        "original_commit_id": "58b8107c0f493327c6c81673c325a32bd60ae217",
        "user": {
            "login": "jasontorres",
            "id": 2481,
            "node_id": "MDQ6VXNlcjI0ODE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasontorres",
            "html_url": "https://github.com/jasontorres",
            "followers_url": "https://api.github.com/users/jasontorres/followers",
            "following_url": "https://api.github.com/users/jasontorres/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasontorres/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasontorres/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasontorres/subscriptions",
            "organizations_url": "https://api.github.com/users/jasontorres/orgs",
            "repos_url": "https://api.github.com/users/jasontorres/repos",
            "events_url": "https://api.github.com/users/jasontorres/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasontorres/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hey no problem. I'll probably just monkey patch it on my version, kinda need it like that. Because either that for me or take the risk of modifying a lot of code on the project. So no big deal. I'll take a look at cashrb. Thanks!\n",
        "created_at": "2011-07-07T13:00:06Z",
        "updated_at": "2011-07-07T13:00:06Z",
        "html_url": "https://github.com/RubyMoney/money/pull/93#discussion_r59694",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/93",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/59694"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/93#discussion_r59694"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/93"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/139208",
        "pull_request_review_id": null,
        "id": 139208,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTIwOA==",
        "diff_hunk": "@@ -0,0 +1,17 @@\n+module CurrencyLoader\n+  extend self\n+\n+  DATA_PATH = File.dirname(__FILE__) + '/../../config/'",
        "path": "lib/money/currency_loader.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "3111113060e630b181dd6d050014ce73fec3aa06",
        "original_commit_id": "b3a9deaf3aaf2a252b533d2a922b119fc9f416f7",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you change this to:\n\n``` ruby\nrequire 'pathname'\nDATA_PATH = Pathname.new(__FILE__).dirname + \"../../config/\"\n```\n\nUsing Pathname will make sure that we run on any OS. Once that's changed, I'll go ahead and accept the pull request :)\n",
        "created_at": "2011-09-24T02:09:22Z",
        "updated_at": "2011-09-24T03:26:23Z",
        "html_url": "https://github.com/RubyMoney/money/pull/109#discussion_r139208",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/109",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/139208"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/109#discussion_r139208"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/109"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/242578",
        "pull_request_review_id": null,
        "id": 242578,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU3OA==",
        "diff_hunk": "@@ -242,5 +242,21 @@ class Money\n       cents != 0 ? self : nil\n     end\n \n+\n+    # Returns a new Money object containing the difference between the two",
        "path": "lib/money/money/arithmetic.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "fa838fa69d5cad49fd7c2fd5da2d7643cb3d1ece",
        "original_commit_id": "0d259d7012fac7d79457f6e197dafa015bb393f7",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This description and example does not match what's happening here.\n",
        "created_at": "2011-11-21T17:31:52Z",
        "updated_at": "2011-11-21T17:36:16Z",
        "html_url": "https://github.com/RubyMoney/money/pull/122#discussion_r242578",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/122",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/242578"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/122#discussion_r242578"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/122"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/242619",
        "pull_request_review_id": null,
        "id": 242619,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjYxOQ==",
        "diff_hunk": "@@ -242,5 +242,21 @@ class Money\n       cents != 0 ? self : nil\n     end\n \n+\n+    # Returns a new Money object containing the difference between the two",
        "path": "lib/money/money/arithmetic.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "fa838fa69d5cad49fd7c2fd5da2d7643cb3d1ece",
        "original_commit_id": "0d259d7012fac7d79457f6e197dafa015bb393f7",
        "user": {
            "login": "pelle",
            "id": 8680,
            "node_id": "MDQ6VXNlcjg2ODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8680?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pelle",
            "html_url": "https://github.com/pelle",
            "followers_url": "https://api.github.com/users/pelle/followers",
            "following_url": "https://api.github.com/users/pelle/following{/other_user}",
            "gists_url": "https://api.github.com/users/pelle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pelle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pelle/subscriptions",
            "organizations_url": "https://api.github.com/users/pelle/orgs",
            "repos_url": "https://api.github.com/users/pelle/repos",
            "events_url": "https://api.github.com/users/pelle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pelle/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "fixed.\n",
        "created_at": "2011-11-21T17:40:32Z",
        "updated_at": "2011-11-21T17:40:32Z",
        "html_url": "https://github.com/RubyMoney/money/pull/122#discussion_r242619",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/122",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/242619"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/122#discussion_r242619"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/122"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/302359",
        "pull_request_review_id": null,
        "id": 302359,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMjM1OQ==",
        "diff_hunk": "@@ -51,6 +51,16 @@\n       Money.parse('hellothere').should    == empty_price\n       Money.parse('').should              == empty_price\n     end\n+\n+    it \"should handle negative inputs\" do",
        "path": "spec/money/parsing_spec.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "a2b6639ecd4c8c34db4cbda567fe701fd8df9dd6",
        "original_commit_id": "97dc6fac5f8eab9e8a105d41dd44937c6730b95a",
        "user": {
            "login": "weppos",
            "id": 5387,
            "node_id": "MDQ6VXNlcjUzODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/weppos",
            "html_url": "https://github.com/weppos",
            "followers_url": "https://api.github.com/users/weppos/followers",
            "following_url": "https://api.github.com/users/weppos/following{/other_user}",
            "gists_url": "https://api.github.com/users/weppos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/weppos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weppos/subscriptions",
            "organizations_url": "https://api.github.com/users/weppos/orgs",
            "repos_url": "https://api.github.com/users/weppos/repos",
            "events_url": "https://api.github.com/users/weppos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/weppos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please don't begin examples names with the word 'should'. It's redundant and results in hard to read spec output.\n\n```\nit \"handles negative inputs\" do\n```\n\nAlso, I encourage you to split assertions with different meanings into separate groups.\n\n```\nit \"raises ArgumentError when unable to detect polarity\" do\n  lambda { Money.parse('-$5.95-') }.should raise_error ArgumentError\nend\n```\n",
        "created_at": "2011-12-19T14:06:38Z",
        "updated_at": "2011-12-19T14:10:59Z",
        "html_url": "https://github.com/RubyMoney/money/pull/133#discussion_r302359",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/133",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/302359"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/133#discussion_r302359"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/133"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/302390",
        "pull_request_review_id": null,
        "id": 302390,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMjM5MA==",
        "diff_hunk": "@@ -51,6 +51,16 @@\n       Money.parse('hellothere').should    == empty_price\n       Money.parse('').should              == empty_price\n     end\n+\n+    it \"should handle negative inputs\" do",
        "path": "spec/money/parsing_spec.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "a2b6639ecd4c8c34db4cbda567fe701fd8df9dd6",
        "original_commit_id": "97dc6fac5f8eab9e8a105d41dd44937c6730b95a",
        "user": {
            "login": "nubs",
            "id": 57673,
            "node_id": "MDQ6VXNlcjU3Njcz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/57673?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nubs",
            "html_url": "https://github.com/nubs",
            "followers_url": "https://api.github.com/users/nubs/followers",
            "following_url": "https://api.github.com/users/nubs/following{/other_user}",
            "gists_url": "https://api.github.com/users/nubs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nubs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nubs/subscriptions",
            "organizations_url": "https://api.github.com/users/nubs/orgs",
            "repos_url": "https://api.github.com/users/nubs/repos",
            "events_url": "https://api.github.com/users/nubs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nubs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Makes sense.  Updated\n",
        "created_at": "2011-12-19T14:18:55Z",
        "updated_at": "2011-12-19T14:18:55Z",
        "html_url": "https://github.com/RubyMoney/money/pull/133#discussion_r302390",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/133",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/302390"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/133#discussion_r302390"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/133"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/481164",
        "pull_request_review_id": null,
        "id": 481164,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE2NA==",
        "diff_hunk": "@@ -263,9 +263,9 @@ def symbol_first?\n       !!@symbol_first\n     end\n \n-    DECIMAL_PLACES_MAP = {\n+    # Cache decimal places for subunit_to_unit values.  Common ones pre-cached.\n+    DECIMAL_PLACES_CACHE = { ",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "f135b59f0b5f43bd278ff3520d8ac828803fc271",
        "original_commit_id": "35b84a72207e43e5653cb190843d161e243a8cde",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Instead of using constants, try using class instance variables like I did in #144.\n",
        "created_at": "2012-02-23T17:25:52Z",
        "updated_at": "2012-02-23T20:27:43Z",
        "html_url": "https://github.com/RubyMoney/money/pull/148#discussion_r481164",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/148",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/481164"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/148#discussion_r481164"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/481869",
        "pull_request_review_id": null,
        "id": 481869,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg2OQ==",
        "diff_hunk": "@@ -263,9 +263,9 @@ def symbol_first?\n       !!@symbol_first\n     end\n \n-    DECIMAL_PLACES_MAP = {\n+    # Cache decimal places for subunit_to_unit values.  Common ones pre-cached.\n+    DECIMAL_PLACES_CACHE = { ",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "f135b59f0b5f43bd278ff3520d8ac828803fc271",
        "original_commit_id": "35b84a72207e43e5653cb190843d161e243a8cde",
        "user": {
            "login": "enebo",
            "id": 19819,
            "node_id": "MDQ6VXNlcjE5ODE5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/19819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/enebo",
            "html_url": "https://github.com/enebo",
            "followers_url": "https://api.github.com/users/enebo/followers",
            "following_url": "https://api.github.com/users/enebo/following{/other_user}",
            "gists_url": "https://api.github.com/users/enebo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/enebo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/enebo/subscriptions",
            "organizations_url": "https://api.github.com/users/enebo/orgs",
            "repos_url": "https://api.github.com/users/enebo/repos",
            "events_url": "https://api.github.com/users/enebo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/enebo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If you are going to take it that direction, then why not an actual class variable (@@decimal_places_cache)?  I was trying to understand why you guys got rid of the constant in that patch and I figured there was no ability to override behavior/contract of [] easily without making the constant a specialized type.  Although there was a mention Constants should not change state in one of the comments.  The constant argument did not quite make sense to me since every class is actually a constant (by Ruby constant definition rules), so I am a little confused.\n\nI will change it to whatever the consensus is though?  Still want an instance variable on class or is a class variable ok?\n",
        "created_at": "2012-02-23T19:24:50Z",
        "updated_at": "2012-02-23T20:27:43Z",
        "html_url": "https://github.com/RubyMoney/money/pull/148#discussion_r481869",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/148",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/481869"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/148#discussion_r481869"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/481917",
        "pull_request_review_id": null,
        "id": 481917,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkxNw==",
        "diff_hunk": "@@ -263,9 +263,9 @@ def symbol_first?\n       !!@symbol_first\n     end\n \n-    DECIMAL_PLACES_MAP = {\n+    # Cache decimal places for subunit_to_unit values.  Common ones pre-cached.\n+    DECIMAL_PLACES_CACHE = { ",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "f135b59f0b5f43bd278ff3520d8ac828803fc271",
        "original_commit_id": "35b84a72207e43e5653cb190843d161e243a8cde",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@@class_variables are bad in Ruby. You don't want to [ever use them](http://www.oreillynet.com/ruby/blog/2007/01/nubygems_dont_use_class_variab_1.html). Essentially, they don't just apply to themselves and subclasses, thet apply back up their parents and into other siblings. So, we use class instance variables instead which don't suffer from this problem.\n\nCONSTANTS are meant to be constant. Once they're populated, they should not be changed. Ruby doesn't inforce this, but it does throw warnings. So instead of using a CONSTANT I just went with traditional class methods that use class instance variables to memoize results when appropriate. In the end it's really about doing the least surprising thing. Manipulating a CONSTANT is surprising, so we should avoid doing it.\n\nNot that it really matters, but I don't see how a Ruby class is a constant. If you feel like explaining that idea more, I'd be interested, but if you don't have time, don't worry about it. I'll look into it myself.\n",
        "created_at": "2012-02-23T19:37:45Z",
        "updated_at": "2012-02-23T20:27:43Z",
        "html_url": "https://github.com/RubyMoney/money/pull/148#discussion_r481917",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/148",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/481917"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/148#discussion_r481917"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/481985",
        "pull_request_review_id": null,
        "id": 481985,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4NQ==",
        "diff_hunk": "@@ -263,9 +263,9 @@ def symbol_first?\n       !!@symbol_first\n     end\n \n-    DECIMAL_PLACES_MAP = {\n+    # Cache decimal places for subunit_to_unit values.  Common ones pre-cached.\n+    DECIMAL_PLACES_CACHE = { ",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "f135b59f0b5f43bd278ff3520d8ac828803fc271",
        "original_commit_id": "35b84a72207e43e5653cb190843d161e243a8cde",
        "user": {
            "login": "enebo",
            "id": 19819,
            "node_id": "MDQ6VXNlcjE5ODE5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/19819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/enebo",
            "html_url": "https://github.com/enebo",
            "followers_url": "https://api.github.com/users/enebo/followers",
            "following_url": "https://api.github.com/users/enebo/following{/other_user}",
            "gists_url": "https://api.github.com/users/enebo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/enebo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/enebo/subscriptions",
            "organizations_url": "https://api.github.com/users/enebo/orgs",
            "repos_url": "https://api.github.com/users/enebo/repos",
            "events_url": "https://api.github.com/users/enebo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/enebo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fair enough re-class variables.  I can see that over a period of time a namespace collision could cause havoc.  I actually rarely use them myself (but then I do use constants frquently).\n\nBy definition, anything bound to any variable that starts with a capital letter in Ruby is a constant.  Perhaps, not the definition you have in mind, but in the mind of Ruby you can easily see it:\n\nruby -e 'p Object.constants'\n\nYou can see this is mostly class definitions of core Ruby.  I don't really have qualms with your goal, but if you really desire constants to be unmodifiable (e.g. constant as in not changing state vs not being reassign a new object), then it might also be worthwhile to freeze the constant:\n\nruby -e 'Foo = {}; Foo.freeze; Foo[1] = 1'\n\nThe fact that you need to freeze to get this behavior tells me Matz did not really intend Ruby constants to be unmodifiable.  Like I said, I can understand why you may want to use constants in the way you describe but from my perspective (someone who implements Ruby fulltime), I got confused by the statement constants should never be modified.\n\nI will update this pull request to use class instance variables.\n",
        "created_at": "2012-02-23T19:55:03Z",
        "updated_at": "2012-02-23T20:27:43Z",
        "html_url": "https://github.com/RubyMoney/money/pull/148#discussion_r481985",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/148",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/481985"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/148#discussion_r481985"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/482050",
        "pull_request_review_id": null,
        "id": 482050,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA1MA==",
        "diff_hunk": "@@ -263,9 +263,9 @@ def symbol_first?\n       !!@symbol_first\n     end\n \n-    DECIMAL_PLACES_MAP = {\n+    # Cache decimal places for subunit_to_unit values.  Common ones pre-cached.\n+    DECIMAL_PLACES_CACHE = { ",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "f135b59f0b5f43bd278ff3520d8ac828803fc271",
        "original_commit_id": "35b84a72207e43e5653cb190843d161e243a8cde",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah. I get what you're saying regarding constants. I should clarify the argument that by convention I don't change `SCREAMING_SNAKECASE` constants. I agree that Matz didn't really intend there to be true static constants in Ruby. It's more of a community convention that I try to follow.\n",
        "created_at": "2012-02-23T20:10:06Z",
        "updated_at": "2012-02-23T20:27:43Z",
        "html_url": "https://github.com/RubyMoney/money/pull/148#discussion_r482050",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/148",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/482050"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/148#discussion_r482050"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/482074",
        "pull_request_review_id": null,
        "id": 482074,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA3NA==",
        "diff_hunk": "@@ -263,9 +263,9 @@ def symbol_first?\n       !!@symbol_first\n     end\n \n-    DECIMAL_PLACES_MAP = {\n+    # Cache decimal places for subunit_to_unit values.  Common ones pre-cached.\n+    DECIMAL_PLACES_CACHE = { ",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "f135b59f0b5f43bd278ff3520d8ac828803fc271",
        "original_commit_id": "35b84a72207e43e5653cb190843d161e243a8cde",
        "user": {
            "login": "enebo",
            "id": 19819,
            "node_id": "MDQ6VXNlcjE5ODE5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/19819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/enebo",
            "html_url": "https://github.com/enebo",
            "followers_url": "https://api.github.com/users/enebo/followers",
            "following_url": "https://api.github.com/users/enebo/following{/other_user}",
            "gists_url": "https://api.github.com/users/enebo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/enebo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/enebo/subscriptions",
            "organizations_url": "https://api.github.com/users/enebo/orgs",
            "repos_url": "https://api.github.com/users/enebo/repos",
            "events_url": "https://api.github.com/users/enebo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/enebo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ok. fair enough.  You might want to freeze all the constants though then you will also get enforcement of the convention.\n",
        "created_at": "2012-02-23T20:13:18Z",
        "updated_at": "2012-02-23T20:27:43Z",
        "html_url": "https://github.com/RubyMoney/money/pull/148#discussion_r482074",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/148",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/482074"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/148#discussion_r482074"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/482108",
        "pull_request_review_id": null,
        "id": 482108,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwOA==",
        "diff_hunk": "@@ -263,9 +263,9 @@ def symbol_first?\n       !!@symbol_first\n     end\n \n-    DECIMAL_PLACES_MAP = {\n+    # Cache decimal places for subunit_to_unit values.  Common ones pre-cached.\n+    DECIMAL_PLACES_CACHE = { ",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "f135b59f0b5f43bd278ff3520d8ac828803fc271",
        "original_commit_id": "35b84a72207e43e5653cb190843d161e243a8cde",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nah. It's only a convention (maybe a suggestion is a better phrase). If someone wants to twist the gem by modifying the CONSTANTS I'm fine with that. :smile:\n",
        "created_at": "2012-02-23T20:18:51Z",
        "updated_at": "2012-02-23T20:27:43Z",
        "html_url": "https://github.com/RubyMoney/money/pull/148#discussion_r482108",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/148",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/482108"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/148#discussion_r482108"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/482225",
        "pull_request_review_id": null,
        "id": 482225,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIyNQ==",
        "diff_hunk": "@@ -263,9 +263,9 @@ def symbol_first?\n       !!@symbol_first\n     end\n \n-    DECIMAL_PLACES_MAP = {\n+    # Cache decimal places for subunit_to_unit values.  Common ones pre-cached.\n+    DECIMAL_PLACES_CACHE = { ",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "f135b59f0b5f43bd278ff3520d8ac828803fc271",
        "original_commit_id": "35b84a72207e43e5653cb190843d161e243a8cde",
        "user": {
            "login": "enebo",
            "id": 19819,
            "node_id": "MDQ6VXNlcjE5ODE5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/19819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/enebo",
            "html_url": "https://github.com/enebo",
            "followers_url": "https://api.github.com/users/enebo/followers",
            "following_url": "https://api.github.com/users/enebo/following{/other_user}",
            "gists_url": "https://api.github.com/users/enebo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/enebo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/enebo/subscriptions",
            "organizations_url": "https://api.github.com/users/enebo/orgs",
            "repos_url": "https://api.github.com/users/enebo/repos",
            "events_url": "https://api.github.com/users/enebo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/enebo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah that's a good point it.  People hacking around something would be pretty frustrated with the extra hurdle.\n",
        "created_at": "2012-02-23T20:31:55Z",
        "updated_at": "2012-02-23T20:31:55Z",
        "html_url": "https://github.com/RubyMoney/money/pull/148#discussion_r482225",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/148",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/482225"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/148#discussion_r482225"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/538619",
        "pull_request_review_id": null,
        "id": 538619,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxOQ==",
        "diff_hunk": "@@ -32,11 +34,22 @@ module ClassMethods\n       # @see Money.from_string\n       #\n       def parse(input, currency = nil)\n-        i = input.to_s\n+        i = input.to_s.strip\n+\n+        # raise Money::Currency.table.collect{|c| c[1][:symbol]}.inspect\n \n-        # Get the currency.\n-        m = i.scan /([A-Z]{2,3})/\n+        # Check the first character for a currency symbol, alternatively get it from the stated currency string\n+        if ['$','\u20ac','\u00a3'].include? i[0,1]",
        "path": "lib/money/money/parsing.rb",
        "position": null,
        "original_position": 18,
        "commit_id": "f1051054ba51f6b8bf885a4faaac690f106cdcfa",
        "original_commit_id": "fda7c80c80b64944deb02f37f665daa2b305ebca",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Since this will change default behavior of everyone using the library, I'd like to make them able to \"opt-in\". Could you update this code such that they call it like this, `Monday.parse(\"$1.25\", :assume_from_symbol)` or something similar? Essentially they can pass that symbol (or something similar) instead of an actual currency and it will use your assumptions.\n",
        "created_at": "2012-03-09T12:05:40Z",
        "updated_at": "2012-03-09T14:47:56Z",
        "html_url": "https://github.com/RubyMoney/money/pull/155#discussion_r538619",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/155",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/538619"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/155#discussion_r538619"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/155"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/538624",
        "pull_request_review_id": null,
        "id": 538624,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYyNA==",
        "diff_hunk": "@@ -32,11 +34,22 @@ module ClassMethods\n       # @see Money.from_string\n       #\n       def parse(input, currency = nil)\n-        i = input.to_s\n+        i = input.to_s.strip\n+\n+        # raise Money::Currency.table.collect{|c| c[1][:symbol]}.inspect\n \n-        # Get the currency.\n-        m = i.scan /([A-Z]{2,3})/\n+        # Check the first character for a currency symbol, alternatively get it from the stated currency string\n+        if ['$','\u20ac','\u00a3'].include? i[0,1]",
        "path": "lib/money/money/parsing.rb",
        "position": null,
        "original_position": 18,
        "commit_id": "f1051054ba51f6b8bf885a4faaac690f106cdcfa",
        "original_commit_id": "fda7c80c80b64944deb02f37f665daa2b305ebca",
        "user": {
            "login": "neilmiddleton",
            "id": 60786,
            "node_id": "MDQ6VXNlcjYwNzg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/60786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neilmiddleton",
            "html_url": "https://github.com/neilmiddleton",
            "followers_url": "https://api.github.com/users/neilmiddleton/followers",
            "following_url": "https://api.github.com/users/neilmiddleton/following{/other_user}",
            "gists_url": "https://api.github.com/users/neilmiddleton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neilmiddleton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neilmiddleton/subscriptions",
            "organizations_url": "https://api.github.com/users/neilmiddleton/orgs",
            "repos_url": "https://api.github.com/users/neilmiddleton/repos",
            "events_url": "https://api.github.com/users/neilmiddleton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neilmiddleton/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sorry - I don't understand - this gem still works exactly as before, unless you pass in a string that starts with '$', '\u00a3', or '\u20ac'.  The current version of the gem ignores these and assumes you want USD.\n",
        "created_at": "2012-03-09T12:10:18Z",
        "updated_at": "2012-03-09T14:47:56Z",
        "html_url": "https://github.com/RubyMoney/money/pull/155#discussion_r538624",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/155",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/538624"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/155#discussion_r538624"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/155"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/538842",
        "pull_request_review_id": null,
        "id": 538842,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg0Mg==",
        "diff_hunk": "@@ -32,11 +34,22 @@ module ClassMethods\n       # @see Money.from_string\n       #\n       def parse(input, currency = nil)\n-        i = input.to_s\n+        i = input.to_s.strip\n+\n+        # raise Money::Currency.table.collect{|c| c[1][:symbol]}.inspect\n \n-        # Get the currency.\n-        m = i.scan /([A-Z]{2,3})/\n+        # Check the first character for a currency symbol, alternatively get it from the stated currency string\n+        if ['$','\u20ac','\u00a3'].include? i[0,1]",
        "path": "lib/money/money/parsing.rb",
        "position": null,
        "original_position": 18,
        "commit_id": "f1051054ba51f6b8bf885a4faaac690f106cdcfa",
        "original_commit_id": "fda7c80c80b64944deb02f37f665daa2b305ebca",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Right. That changes the default behavior of just ignoring the symbol. There are users who currently parse strings like \"$1.25 ARS\" and expect the resulting currency to be \"ARS\", but your change will result in \"USD\". We need to have them \"opt-in\" to your new assumption by explicitly passing an indicator.\n",
        "created_at": "2012-03-09T13:40:52Z",
        "updated_at": "2012-03-09T14:47:56Z",
        "html_url": "https://github.com/RubyMoney/money/pull/155#discussion_r538842",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/155",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/538842"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/155#discussion_r538842"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/155"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/562222",
        "pull_request_review_id": null,
        "id": 562222,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjIyMg==",
        "diff_hunk": "@@ -403,5 +406,41 @@\n     end\n   end\n \n+  context \"custom currencies with 4 decimal places\" do\n+    before :each do\n+      Money::Currency.register(JSON.parse(BAR, :symbolize_names => true))\n+      Money::Currency.register(JSON.parse(EU4, :symbolize_names => true))\n+    end\n+\n+    it \"should respect custom subunit to unit, decimal and thousands separator\" do",
        "path": "spec/money/formatting_spec.rb",
        "position": null,
        "original_position": 20,
        "commit_id": "2b13de9e9d98096c2ab39000d4bd8d0a7242522b",
        "original_commit_id": "f134342b0ee39027ece7b75d1e78a298d83ababf",
        "user": {
            "login": "weppos",
            "id": 5387,
            "node_id": "MDQ6VXNlcjUzODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/weppos",
            "html_url": "https://github.com/weppos",
            "followers_url": "https://api.github.com/users/weppos/followers",
            "following_url": "https://api.github.com/users/weppos/following{/other_user}",
            "gists_url": "https://api.github.com/users/weppos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/weppos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weppos/subscriptions",
            "organizations_url": "https://api.github.com/users/weppos/orgs",
            "repos_url": "https://api.github.com/users/weppos/repos",
            "events_url": "https://api.github.com/users/weppos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/weppos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please avoid using \"should\".\n\n```\nit \"respects...\n```\n",
        "created_at": "2012-03-15T10:42:16Z",
        "updated_at": "2012-03-19T08:45:04Z",
        "html_url": "https://github.com/RubyMoney/money/pull/156#discussion_r562222",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/156",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/562222"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/156#discussion_r562222"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/156"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/562385",
        "pull_request_review_id": null,
        "id": 562385,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjM4NQ==",
        "diff_hunk": "@@ -204,7 +204,14 @@ def format(*rules)\n       end\n \n       # Apply thousands_separator\n-      formatted.gsub!(/(\\d)(?=(?:\\d{3})+(?:[^\\d]|$))/, \"\\\\1#{thousands_separator_value}\")\n+      escaped_dmark = Regexp.escape(decimal_mark)",
        "path": "lib/money/money/formatting.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "2b13de9e9d98096c2ab39000d4bd8d0a7242522b",
        "original_commit_id": "f134342b0ee39027ece7b75d1e78a298d83ababf",
        "user": {
            "login": "weppos",
            "id": 5387,
            "node_id": "MDQ6VXNlcjUzODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/weppos",
            "html_url": "https://github.com/weppos",
            "followers_url": "https://api.github.com/users/weppos/followers",
            "following_url": "https://api.github.com/users/weppos/following{/other_user}",
            "gists_url": "https://api.github.com/users/weppos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/weppos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weppos/subscriptions",
            "organizations_url": "https://api.github.com/users/weppos/orgs",
            "repos_url": "https://api.github.com/users/weppos/repos",
            "events_url": "https://api.github.com/users/weppos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/weppos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What about\n\n```\nregexp_decimal = Regexp.escape(decimal_mark)\nregexp_format  = if formatted =~ /#{regexp_decimal}/\n      /(\\d)(?=(?:\\d{3})+(?:#{regexp_decimal}))/\n    else\n      /(\\d)(?=(?:\\d{3})+(?:[^\\d]{1}|$))/\n    end\n\nformatted.gsub!(regexp_format, \"\\\\1#{thousands_separator_value}\")\n```\n\n?\n",
        "created_at": "2012-03-15T11:56:00Z",
        "updated_at": "2012-03-19T08:45:04Z",
        "html_url": "https://github.com/RubyMoney/money/pull/156#discussion_r562385",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/156",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/562385"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/156#discussion_r562385"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/156"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/562427",
        "pull_request_review_id": null,
        "id": 562427,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQyNw==",
        "diff_hunk": "@@ -403,5 +406,41 @@\n     end\n   end\n \n+  context \"custom currencies with 4 decimal places\" do\n+    before :each do\n+      Money::Currency.register(JSON.parse(BAR, :symbolize_names => true))\n+      Money::Currency.register(JSON.parse(EU4, :symbolize_names => true))\n+    end\n+\n+    it \"should respect custom subunit to unit, decimal and thousands separator\" do",
        "path": "spec/money/formatting_spec.rb",
        "position": null,
        "original_position": 20,
        "commit_id": "2b13de9e9d98096c2ab39000d4bd8d0a7242522b",
        "original_commit_id": "f134342b0ee39027ece7b75d1e78a298d83ababf",
        "user": {
            "login": "alup",
            "id": 150174,
            "node_id": "MDQ6VXNlcjE1MDE3NA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/150174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alup",
            "html_url": "https://github.com/alup",
            "followers_url": "https://api.github.com/users/alup/followers",
            "following_url": "https://api.github.com/users/alup/following{/other_user}",
            "gists_url": "https://api.github.com/users/alup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alup/subscriptions",
            "organizations_url": "https://api.github.com/users/alup/orgs",
            "repos_url": "https://api.github.com/users/alup/repos",
            "events_url": "https://api.github.com/users/alup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alup/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done!\n",
        "created_at": "2012-03-15T12:19:32Z",
        "updated_at": "2012-03-19T08:45:04Z",
        "html_url": "https://github.com/RubyMoney/money/pull/156#discussion_r562427",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/156",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/562427"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/156#discussion_r562427"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/156"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/562428",
        "pull_request_review_id": null,
        "id": 562428,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQyOA==",
        "diff_hunk": "@@ -204,7 +204,14 @@ def format(*rules)\n       end\n \n       # Apply thousands_separator\n-      formatted.gsub!(/(\\d)(?=(?:\\d{3})+(?:[^\\d]|$))/, \"\\\\1#{thousands_separator_value}\")\n+      escaped_dmark = Regexp.escape(decimal_mark)",
        "path": "lib/money/money/formatting.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "2b13de9e9d98096c2ab39000d4bd8d0a7242522b",
        "original_commit_id": "f134342b0ee39027ece7b75d1e78a298d83ababf",
        "user": {
            "login": "alup",
            "id": 150174,
            "node_id": "MDQ6VXNlcjE1MDE3NA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/150174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alup",
            "html_url": "https://github.com/alup",
            "followers_url": "https://api.github.com/users/alup/followers",
            "following_url": "https://api.github.com/users/alup/following{/other_user}",
            "gists_url": "https://api.github.com/users/alup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alup/subscriptions",
            "organizations_url": "https://api.github.com/users/alup/orgs",
            "repos_url": "https://api.github.com/users/alup/repos",
            "events_url": "https://api.github.com/users/alup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alup/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thnx, indeed it is better.\nI fixed it.\n",
        "created_at": "2012-03-15T12:20:28Z",
        "updated_at": "2012-03-19T08:45:04Z",
        "html_url": "https://github.com/RubyMoney/money/pull/156#discussion_r562428",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/156",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/562428"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/156#discussion_r562428"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/156"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/585160",
        "pull_request_review_id": null,
        "id": 585160,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTE2MA==",
        "diff_hunk": "@@ -292,41 +295,47 @@ def extract_cents(input, currency = Money.default_currency)\n             # assign first decimal_mark for reusability\n             decimal_mark = used_decimal_marks.first\n \n-            # decimal_mark is used as a decimal_mark when there are multiple instances, always\n-            if num.scan(decimal_mark).length > 1 # multiple matches; treat as decimal_mark\n-              major, minor = num.gsub(decimal_mark, ''), 0\n-            else\n-              # ex: 1,000 - 1.0000 - 10001.000\n-              # split number into possible major (dollars) and minor (cents) values\n-              possible_major, possible_minor = num.split(decimal_mark)\n-              possible_major ||= \"0\"\n-              possible_minor ||= \"00\"\n+            # When we have identified the decimal mark character\n+            if decimal_char && decimal_char == decimal_mark",
        "path": "lib/money/money/parsing.rb",
        "position": null,
        "original_position": 24,
        "commit_id": "6204908424f6ba7476271336fe9771482c7d3297",
        "original_commit_id": "d8c908d28dfb537c44cd4b420b129b77c684c639",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can't this be rewritten as `if decimal_mark == decimal_char`\n",
        "created_at": "2012-03-21T14:21:12Z",
        "updated_at": "2012-03-21T17:41:41Z",
        "html_url": "https://github.com/RubyMoney/money/pull/159#discussion_r585160",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/159",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/585160"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/159#discussion_r585160"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/159"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/586549",
        "pull_request_review_id": null,
        "id": 586549,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjU0OQ==",
        "diff_hunk": "@@ -292,41 +295,47 @@ def extract_cents(input, currency = Money.default_currency)\n             # assign first decimal_mark for reusability\n             decimal_mark = used_decimal_marks.first\n \n-            # decimal_mark is used as a decimal_mark when there are multiple instances, always\n-            if num.scan(decimal_mark).length > 1 # multiple matches; treat as decimal_mark\n-              major, minor = num.gsub(decimal_mark, ''), 0\n-            else\n-              # ex: 1,000 - 1.0000 - 10001.000\n-              # split number into possible major (dollars) and minor (cents) values\n-              possible_major, possible_minor = num.split(decimal_mark)\n-              possible_major ||= \"0\"\n-              possible_minor ||= \"00\"\n+            # When we have identified the decimal mark character\n+            if decimal_char && decimal_char == decimal_mark",
        "path": "lib/money/money/parsing.rb",
        "position": null,
        "original_position": 24,
        "commit_id": "6204908424f6ba7476271336fe9771482c7d3297",
        "original_commit_id": "d8c908d28dfb537c44cd4b420b129b77c684c639",
        "user": {
            "login": "alup",
            "id": 150174,
            "node_id": "MDQ6VXNlcjE1MDE3NA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/150174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alup",
            "html_url": "https://github.com/alup",
            "followers_url": "https://api.github.com/users/alup/followers",
            "following_url": "https://api.github.com/users/alup/following{/other_user}",
            "gists_url": "https://api.github.com/users/alup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alup/subscriptions",
            "organizations_url": "https://api.github.com/users/alup/orgs",
            "repos_url": "https://api.github.com/users/alup/repos",
            "events_url": "https://api.github.com/users/alup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alup/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done!\n",
        "created_at": "2012-03-21T17:42:56Z",
        "updated_at": "2012-03-21T17:42:56Z",
        "html_url": "https://github.com/RubyMoney/money/pull/159#discussion_r586549",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/159",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/586549"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/159#discussion_r586549"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/159"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/813306",
        "pull_request_review_id": null,
        "id": 813306,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMzMwNg==",
        "diff_hunk": "@@ -380,17 +415,17 @@ def allocate(splits)\n     allocations = splits.inject(0.0) {|sum, i| sum += i }\n     raise ArgumentError, \"splits add to more then 100%\" if (allocations - 1.0) > Float::EPSILON\n \n-    left_over = cents\n+    left_over = cents.to_i",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 103,
        "commit_id": "9f649d9c0fc463e0180a66ed9f1f6d478fadbfca",
        "original_commit_id": "2c50375788a49f5c752f511b11b2641a2509b814",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You shouldn't have to call `cents.to_i` since you `#cents` properly returns a Integer/BigDecimal depending on infinite_precision's value.\n",
        "created_at": "2012-05-13T11:20:21Z",
        "updated_at": "2012-05-14T22:13:19Z",
        "html_url": "https://github.com/RubyMoney/money/pull/169#discussion_r813306",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/169",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/813306"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/169#discussion_r813306"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/834904",
        "pull_request_review_id": null,
        "id": 834904,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgzNDkwNA==",
        "diff_hunk": "@@ -23,7 +23,7 @@ Gem::Specification.new do |s|\n   s.add_development_dependency \"guard-spork\", \"~> 0.6.1\"\n   s.add_development_dependency \"guard-rspec\", \"~> 0.7.0\"\n \n-  s.requirements << \"json\"\n+  s.requirements << \"multi_json\"",
        "path": "money.gemspec",
        "position": null,
        "original_position": 14,
        "commit_id": "e4895bc49a500b2221160b10e50ce484ed28a174",
        "original_commit_id": "cf0f4e12bdf16c3b43b59d712a556cc09ca214ef",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we no longer need this. Before this has here because \"json\" was included in 1.9+ but not 1.8.\n",
        "created_at": "2012-05-16T20:57:47Z",
        "updated_at": "2012-05-16T21:16:18Z",
        "html_url": "https://github.com/RubyMoney/money/pull/170#discussion_r834904",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/170",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/834904"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/170#discussion_r834904"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/170"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/1689449",
        "pull_request_review_id": null,
        "id": 1689449,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODk0NDk=",
        "diff_hunk": "@@ -15,3 +15,7 @@ doc/\n .rbenv-version\n .rbx\n .rvmrc\n+\n+# Vim\n+*.swp\n+*.swo",
        "path": ".gitignore",
        "position": null,
        "original_position": 7,
        "commit_id": "a29cd92170985aac04b72dec3dae746573ca9b7e",
        "original_commit_id": "73bc958cf6be7fb820c157c7e9640c66763e0903",
        "user": {
            "login": "alup",
            "id": 150174,
            "node_id": "MDQ6VXNlcjE1MDE3NA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/150174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alup",
            "html_url": "https://github.com/alup",
            "followers_url": "https://api.github.com/users/alup/followers",
            "following_url": "https://api.github.com/users/alup/following{/other_user}",
            "gists_url": "https://api.github.com/users/alup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alup/subscriptions",
            "organizations_url": "https://api.github.com/users/alup/orgs",
            "repos_url": "https://api.github.com/users/alup/repos",
            "events_url": "https://api.github.com/users/alup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alup/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "These are not needed. Use the user's home .gitignore file for user specific ignore preferences. \n\nPer project .gitignore should only include project specific types.\n",
        "created_at": "2012-09-25T20:45:36Z",
        "updated_at": "2012-09-26T13:27:54Z",
        "html_url": "https://github.com/RubyMoney/money/pull/213#discussion_r1689449",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/213",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/1689449"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/213#discussion_r1689449"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/213"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/1689534",
        "pull_request_review_id": null,
        "id": 1689534,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODk1MzQ=",
        "diff_hunk": "@@ -15,3 +15,7 @@ doc/\n .rbenv-version\n .rbx\n .rvmrc\n+\n+# Vim\n+*.swp\n+*.swo",
        "path": ".gitignore",
        "position": null,
        "original_position": 7,
        "commit_id": "a29cd92170985aac04b72dec3dae746573ca9b7e",
        "original_commit_id": "73bc958cf6be7fb820c157c7e9640c66763e0903",
        "user": {
            "login": "mikabytes",
            "id": 1054229,
            "node_id": "MDQ6VXNlcjEwNTQyMjk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1054229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikabytes",
            "html_url": "https://github.com/mikabytes",
            "followers_url": "https://api.github.com/users/mikabytes/followers",
            "following_url": "https://api.github.com/users/mikabytes/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikabytes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikabytes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikabytes/subscriptions",
            "organizations_url": "https://api.github.com/users/mikabytes/orgs",
            "repos_url": "https://api.github.com/users/mikabytes/repos",
            "events_url": "https://api.github.com/users/mikabytes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikabytes/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah, good point. I have reverted that commit in my fork, now just need to figure out how to sync it with this pull request\n",
        "created_at": "2012-09-25T20:52:52Z",
        "updated_at": "2012-09-26T13:27:54Z",
        "html_url": "https://github.com/RubyMoney/money/pull/213#discussion_r1689534",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/213",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/1689534"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/213#discussion_r1689534"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/213"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/2285760",
        "pull_request_review_id": null,
        "id": 2285760,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODU3NjA=",
        "diff_hunk": "@@ -146,6 +146,35 @@ def expectation.fractional\n         m.fractional.should be_a(Fixnum)\n       end\n     end\n+    \n+    it \"when loading a serialized Money object from YAML fractional rounding always works on bigdecimal\" do",
        "path": "spec/money_spec.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "1e5a5383b810f736becc54e2521691405c06ead5",
        "original_commit_id": "61e5c72ce2beacdda9f3931738adf78a250c742e",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` ruby\ncontext \"loading a serialized Money via YAML\" do\n  it \"uses BigDecimal when rounding\" do\n```\n",
        "created_at": "2012-12-01T15:06:40Z",
        "updated_at": "2012-12-02T08:18:44Z",
        "html_url": "https://github.com/RubyMoney/money/pull/232#discussion_r2285760",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/232",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/2285760"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/232#discussion_r2285760"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/232"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/2285764",
        "pull_request_review_id": null,
        "id": 2285764,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODU3NjQ=",
        "diff_hunk": "@@ -146,6 +146,35 @@ def expectation.fractional\n         m.fractional.should be_a(Fixnum)\n       end\n     end\n+    \n+    it \"when loading a serialized Money object from YAML fractional rounding always works on bigdecimal\" do\n+      # Loading a YAML serialized money object is a common use case when dealing with persisting the money object in a queue, for example delayed_job",
        "path": "spec/money_spec.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "1e5a5383b810f736becc54e2521691405c06ead5",
        "original_commit_id": "61e5c72ce2beacdda9f3931738adf78a250c742e",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No real need for this comment, the context+spec should be enough. Also, always try to respect 80 character line widths.\n",
        "created_at": "2012-12-01T15:07:25Z",
        "updated_at": "2012-12-02T08:18:44Z",
        "html_url": "https://github.com/RubyMoney/money/pull/232#discussion_r2285764",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/232",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/2285764"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/232#discussion_r2285764"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/232"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/2566060",
        "pull_request_review_id": null,
        "id": 2566060,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjYwNjA=",
        "diff_hunk": "@@ -35,6 +35,22 @@ def find(id)\n         new(id) if self.table[id]\n       end\n \n+      # Lookup a currency with given +num+ as an ISO 4217 numeric and returns an\n+      # +Currency+ instance on success, +nil+ otherwise.\n+      #\n+      # @param [Integer, #to_i] num used to look into +table+ in +iso_numeric+\n+      # and find the right currency id.\n+      #\n+      # @return [Money::Currency]\n+      #\n+      # @example\n+      #   Money::Currency.find_numeric(978) #=> #<Money::Currency id: eur ...>\n+      #   Money::Currency.find_numeric(1) #=> nil\n+      def find_numeric(num)\n+        id = (self.table.select { |cur| self.table[cur][:iso_numeric].to_i == num }).keys.first\n+        new(id) if self.table[id]\n+      end\n+",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "4d0f9e18430a8632a6bd0d960212000f8d020b55",
        "original_commit_id": "c51f899e5d4763e993cf54081daffc4eca963b66",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could be simplified as follows:\n\n``` ruby\ndef find_by_iso_numeric(num)\n  num = num.to_s #performance, let's only do this once\n  id = self.table.find{|key, val| val[:iso_numeric] == num}[0]\n  new(id)\nend\n```\n",
        "created_at": "2013-01-07T16:39:07Z",
        "updated_at": "2013-01-08T07:26:51Z",
        "html_url": "https://github.com/RubyMoney/money/pull/240#discussion_r2566060",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/240",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/2566060"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/240#discussion_r2566060"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/240"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/2574036",
        "pull_request_review_id": null,
        "id": 2574036,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzQwMzY=",
        "diff_hunk": "@@ -35,6 +35,22 @@ def find(id)\n         new(id) if self.table[id]\n       end\n \n+      # Lookup a currency with given +num+ as an ISO 4217 numeric and returns an\n+      # +Currency+ instance on success, +nil+ otherwise.\n+      #\n+      # @param [Integer, #to_i] num used to look into +table+ in +iso_numeric+\n+      # and find the right currency id.\n+      #\n+      # @return [Money::Currency]\n+      #\n+      # @example\n+      #   Money::Currency.find_numeric(978) #=> #<Money::Currency id: eur ...>\n+      #   Money::Currency.find_numeric(1) #=> nil\n+      def find_numeric(num)\n+        id = (self.table.select { |cur| self.table[cur][:iso_numeric].to_i == num }).keys.first\n+        new(id) if self.table[id]\n+      end\n+",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "4d0f9e18430a8632a6bd0d960212000f8d020b55",
        "original_commit_id": "c51f899e5d4763e993cf54081daffc4eca963b66",
        "user": {
            "login": "cathper",
            "id": 226549,
            "node_id": "MDQ6VXNlcjIyNjU0OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/226549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cathper",
            "html_url": "https://github.com/cathper",
            "followers_url": "https://api.github.com/users/cathper/followers",
            "following_url": "https://api.github.com/users/cathper/following{/other_user}",
            "gists_url": "https://api.github.com/users/cathper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cathper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cathper/subscriptions",
            "organizations_url": "https://api.github.com/users/cathper/orgs",
            "repos_url": "https://api.github.com/users/cathper/repos",
            "events_url": "https://api.github.com/users/cathper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cathper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The [0] will only work if the find does not give you nil.\n\nI suggest\n\n``` ruby\nid, garbage = self.table.find...\n```\n\nwhich I will push after some specs.\n",
        "created_at": "2013-01-08T07:04:01Z",
        "updated_at": "2013-01-08T07:41:54Z",
        "html_url": "https://github.com/RubyMoney/money/pull/240#discussion_r2574036",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/240",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/2574036"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/240#discussion_r2574036"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/240"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5841093",
        "pull_request_review_id": null,
        "id": 5841093,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDEwOTM=",
        "diff_hunk": "@@ -283,6 +275,16 @@ def zero?\n     def nonzero?\n       fractional != 0 ? self : nil\n     end\n+    \n+    private\n+    \n+    def fractional_from_other(other_money)",
        "path": "lib/money/money/arithmetic.rb",
        "position": 42,
        "original_position": 42,
        "commit_id": "0dca982ca2f61e6cdf09b0b21fd6688168408066",
        "original_commit_id": "0dca982ca2f61e6cdf09b0b21fd6688168408066",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think this name implies we're converting the argument into our currency. What if we added an argument to `#fractional` like below that also converts it? I'm going to use ruby2.0 keyword args in the example. We'd need to use an options hash.\n\n``` ruby\ndef fractional(exchange_to: self.currency)\n  fraction = self.exchange_to(exchange_to).instance_variable_get(:@fractional)\n\n  # ... same as before ...\nend\n```\n\nThoughts?\n",
        "created_at": "2013-08-19T12:56:00Z",
        "updated_at": "2013-08-19T12:56:18Z",
        "html_url": "https://github.com/RubyMoney/money/pull/306#discussion_r5841093",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/306",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5841093"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/306#discussion_r5841093"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/306"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5841821",
        "pull_request_review_id": null,
        "id": 5841821,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE4MjE=",
        "diff_hunk": "@@ -283,6 +275,16 @@ def zero?\n     def nonzero?\n       fractional != 0 ? self : nil\n     end\n+    \n+    private\n+    \n+    def fractional_from_other(other_money)",
        "path": "lib/money/money/arithmetic.rb",
        "position": 42,
        "original_position": 42,
        "commit_id": "0dca982ca2f61e6cdf09b0b21fd6688168408066",
        "original_commit_id": "0dca982ca2f61e6cdf09b0b21fd6688168408066",
        "user": {
            "login": "viettienn",
            "id": 577690,
            "node_id": "MDQ6VXNlcjU3NzY5MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/577690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viettienn",
            "html_url": "https://github.com/viettienn",
            "followers_url": "https://api.github.com/users/viettienn/followers",
            "following_url": "https://api.github.com/users/viettienn/following{/other_user}",
            "gists_url": "https://api.github.com/users/viettienn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viettienn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viettienn/subscriptions",
            "organizations_url": "https://api.github.com/users/viettienn/orgs",
            "repos_url": "https://api.github.com/users/viettienn/repos",
            "events_url": "https://api.github.com/users/viettienn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viettienn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Checking the code further, I found that we are actually already checking if same currency in bank#exchange_with (https://github.com/RubyMoney/money/blob/master/lib/money/bank/variable_exchange.rb#L88) which is called from money#exchange_to so that for me it's safe to just shorten the code like this:\n\n``` ruby\n def +(other_money)\n     Money.new(fractional + other_money.exchange_to(currency).fractional, currency)\n   end\n```\n\nHow do you guys think?\n",
        "created_at": "2013-08-19T13:33:05Z",
        "updated_at": "2013-08-19T13:33:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/306#discussion_r5841821",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/306",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5841821"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/306#discussion_r5841821"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/306"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5845465",
        "pull_request_review_id": null,
        "id": 5845465,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDU0NjU=",
        "diff_hunk": "@@ -283,6 +275,16 @@ def zero?\n     def nonzero?\n       fractional != 0 ? self : nil\n     end\n+    \n+    private\n+    \n+    def fractional_from_other(other_money)",
        "path": "lib/money/money/arithmetic.rb",
        "position": 42,
        "original_position": 42,
        "commit_id": "0dca982ca2f61e6cdf09b0b21fd6688168408066",
        "original_commit_id": "0dca982ca2f61e6cdf09b0b21fd6688168408066",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What about this, just to make reading it a little easier?\n\n``` ruby\ndef +(other_money)\n  other_money = other_money.exchange_to(self.currency)\n  Money.new(fractional + other_money.fractional, self.currency)\nend\n```\n",
        "created_at": "2013-08-19T15:43:22Z",
        "updated_at": "2013-08-19T15:43:22Z",
        "html_url": "https://github.com/RubyMoney/money/pull/306#discussion_r5845465",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/306",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5845465"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/306#discussion_r5845465"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/306"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5857011",
        "pull_request_review_id": null,
        "id": 5857011,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTcwMTE=",
        "diff_hunk": "@@ -283,6 +275,16 @@ def zero?\n     def nonzero?\n       fractional != 0 ? self : nil\n     end\n+    \n+    private\n+    \n+    def fractional_from_other(other_money)",
        "path": "lib/money/money/arithmetic.rb",
        "position": 42,
        "original_position": 42,
        "commit_id": "0dca982ca2f61e6cdf09b0b21fd6688168408066",
        "original_commit_id": "0dca982ca2f61e6cdf09b0b21fd6688168408066",
        "user": {
            "login": "viettienn",
            "id": 577690,
            "node_id": "MDQ6VXNlcjU3NzY5MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/577690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viettienn",
            "html_url": "https://github.com/viettienn",
            "followers_url": "https://api.github.com/users/viettienn/followers",
            "following_url": "https://api.github.com/users/viettienn/following{/other_user}",
            "gists_url": "https://api.github.com/users/viettienn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viettienn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viettienn/subscriptions",
            "organizations_url": "https://api.github.com/users/viettienn/orgs",
            "repos_url": "https://api.github.com/users/viettienn/repos",
            "events_url": "https://api.github.com/users/viettienn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viettienn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2013-08-19T23:03:59Z",
        "updated_at": "2013-08-19T23:03:59Z",
        "html_url": "https://github.com/RubyMoney/money/pull/306#discussion_r5857011",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/306",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/5857011"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/306#discussion_r5857011"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/306"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/6305385",
        "pull_request_review_id": null,
        "id": 6305385,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMDUzODU=",
        "diff_hunk": "@@ -260,6 +260,23 @@\n       m = Money.from_bigdecimal(BigDecimal.new(\"1\"), \"EUR\")\n       m.currency.should == Money::Currency.wrap(\"EUR\")\n     end\n+\n+    context \"infinite_precision = true\" do\n+      before do\n+        Money.infinite_precision = true\n+      end\n+\n+      after do\n+        Money.infinite_precision = false",
        "path": "spec/money/parsing_spec.rb",
        "position": 11,
        "original_position": 11,
        "commit_id": "0f7feaef78940d1d9feabfe0b4cca9afbd21f1e3",
        "original_commit_id": "0f7feaef78940d1d9feabfe0b4cca9afbd21f1e3",
        "user": {
            "login": "asellitt",
            "id": 1116257,
            "node_id": "MDQ6VXNlcjExMTYyNTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1116257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asellitt",
            "html_url": "https://github.com/asellitt",
            "followers_url": "https://api.github.com/users/asellitt/followers",
            "following_url": "https://api.github.com/users/asellitt/following{/other_user}",
            "gists_url": "https://api.github.com/users/asellitt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asellitt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asellitt/subscriptions",
            "organizations_url": "https://api.github.com/users/asellitt/orgs",
            "repos_url": "https://api.github.com/users/asellitt/repos",
            "events_url": "https://api.github.com/users/asellitt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asellitt/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You don't have to do this. Rspec will automatically clean up for you.\n",
        "created_at": "2013-09-11T20:09:50Z",
        "updated_at": "2013-09-11T20:09:50Z",
        "html_url": "https://github.com/RubyMoney/money/pull/315#discussion_r6305385",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/315",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/6305385"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/315#discussion_r6305385"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/315"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/6305440",
        "pull_request_review_id": null,
        "id": 6305440,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMDU0NDA=",
        "diff_hunk": "@@ -260,6 +260,23 @@\n       m = Money.from_bigdecimal(BigDecimal.new(\"1\"), \"EUR\")\n       m.currency.should == Money::Currency.wrap(\"EUR\")\n     end\n+\n+    context \"infinite_precision = true\" do\n+      before do\n+        Money.infinite_precision = true\n+      end\n+\n+      after do\n+        Money.infinite_precision = false",
        "path": "spec/money/parsing_spec.rb",
        "position": 11,
        "original_position": 11,
        "commit_id": "0f7feaef78940d1d9feabfe0b4cca9afbd21f1e3",
        "original_commit_id": "0f7feaef78940d1d9feabfe0b4cca9afbd21f1e3",
        "user": {
            "login": "fklingler",
            "id": 282439,
            "node_id": "MDQ6VXNlcjI4MjQzOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/282439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fklingler",
            "html_url": "https://github.com/fklingler",
            "followers_url": "https://api.github.com/users/fklingler/followers",
            "following_url": "https://api.github.com/users/fklingler/following{/other_user}",
            "gists_url": "https://api.github.com/users/fklingler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fklingler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fklingler/subscriptions",
            "organizations_url": "https://api.github.com/users/fklingler/orgs",
            "repos_url": "https://api.github.com/users/fklingler/repos",
            "events_url": "https://api.github.com/users/fklingler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fklingler/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, I didn't know. I just copied the code here: https://github.com/RubyMoney/money/blob/master/spec/money/arithmetic_spec.rb#L344-L351\n",
        "created_at": "2013-09-11T20:11:40Z",
        "updated_at": "2013-09-11T20:11:40Z",
        "html_url": "https://github.com/RubyMoney/money/pull/315#discussion_r6305440",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/315",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/6305440"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/315#discussion_r6305440"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/315"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/7235620",
        "pull_request_review_id": null,
        "id": 7235620,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcyMzU2MjA=",
        "diff_hunk": "@@ -128,26 +128,34 @@ class << self\n     attr_accessor :conversion_precision\n   end\n \n-  # Set the default bank for creating new +Money+ objects.\n-  self.default_bank = Bank::VariableExchange.instance\n+  def self.set_up_default\n+    # Set the default bank for creating new +Money+ objects.\n+    self.default_bank = Bank::VariableExchange.instance\n \n-  # Set the default currency for creating new +Money+ object.\n-  self.default_currency = Currency.new(\"USD\")\n+    # Set the default currency for creating new +Money+ object.\n+    self.default_currency = Currency.new(\"USD\")\n \n-  # Default to using i18n\n-  self.use_i18n = true\n+    # Default to using i18n\n+    self.use_i18n = true\n \n-  # Default to not using currency symbol assumptions when parsing\n-  self.assume_from_symbol = false\n+    # Default to not using currency symbol assumptions when parsing\n+    self.assume_from_symbol = false\n \n-  # Default to not using infinite precision cents\n-  self.infinite_precision = false\n+    # Default to not using infinite precision cents\n+    self.infinite_precision = false\n \n-  # Default to bankers rounding\n-  self.rounding_mode = BigDecimal::ROUND_HALF_EVEN\n+    # Default to bankers rounding\n+    self.rounding_mode = BigDecimal::ROUND_HALF_EVEN\n \n-  # Default the conversion of Rationals precision to 16\n-  self.conversion_precision = 16\n+    # Default the conversion of Rationals precision to 16\n+    self.conversion_precision = 16\n+  end\n+\n+  def self.inherited(base)\n+    base.set_up_default\n+  end\n+\n+  set_up_default",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 45,
        "commit_id": "9488ad72cb86045fbf60342d5caaca093cc602b3",
        "original_commit_id": "ed5a18d34828f4942bc3dd1ffdd071740d919edd",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "let's rename this to `setup_defaults`\n",
        "created_at": "2013-10-27T02:56:06Z",
        "updated_at": "2013-10-27T03:10:06Z",
        "html_url": "https://github.com/RubyMoney/money/pull/330#discussion_r7235620",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/330",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/7235620"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/330#discussion_r7235620"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/330"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/7789031",
        "pull_request_review_id": null,
        "id": 7789031,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3ODkwMzE=",
        "diff_hunk": "@@ -0,0 +1,18 @@\n+# encoding: utf-8\n+\n+require \"spec_helper\"\n+\n+describe Money do\n+  describe \"#deprecate\" do\n+    let(:error_message) { \"Deprecated method triggered here\" }\n+\n+    it \"should send a deprecation message with caller\" do\n+      Money.should_receive(:warn).with do |message|\n+        message.should =~ /DEPRECATION WARNING: #{error_message} \\(called from:.*:\\d+\\)/\n+      end\n+\n+      Money.deprecate(error_message)\n+    end\n+  end\n+end\n+",
        "path": "spec/money/deprecations_spec.rb",
        "position": null,
        "original_position": 18,
        "commit_id": "4eabfc09b5c6f1305eb6eca936688c63002aae01",
        "original_commit_id": "dbab47d28989efc2d01d3cf42bd3d21689e27702",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please remove the extra newline here.\n",
        "created_at": "2013-11-20T12:24:22Z",
        "updated_at": "2013-11-20T12:28:21Z",
        "html_url": "https://github.com/RubyMoney/money/pull/340#discussion_r7789031",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/340",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/7789031"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/340#discussion_r7789031"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/340"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/7956554",
        "pull_request_review_id": null,
        "id": 7956554,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5NTY1NTQ=",
        "diff_hunk": "@@ -157,6 +155,25 @@ def self.inherited(base)\n \n   setup_defaults\n \n+  # Use this to return the rounding mode.  You may also pass it a \n+  # rounding mode and a block to temporatly change it.\n+  #\n+  # @return [BigDecimal::ROUND_MODE]\n+  #\n+  # @example\n+  #   Money.rounding_mode(BigDecimal::ROUND_HALF_UP) do\n+  #     fee = Money.new(1200) * BigDecimal.new('0.029')\n+  #   end\n+  def self.rounding_mode(mode=nil)",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 24,
        "commit_id": "4aaee8410bfb323854964ecb5ab0fb28f62f51a9",
        "original_commit_id": "d27c6013d43cf5995f90f1dc301f106b91dbe871",
        "user": {
            "login": "ohthatjames",
            "id": 81839,
            "node_id": "MDQ6VXNlcjgxODM5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/81839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ohthatjames",
            "html_url": "https://github.com/ohthatjames",
            "followers_url": "https://api.github.com/users/ohthatjames/followers",
            "following_url": "https://api.github.com/users/ohthatjames/following{/other_user}",
            "gists_url": "https://api.github.com/users/ohthatjames/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ohthatjames/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ohthatjames/subscriptions",
            "organizations_url": "https://api.github.com/users/ohthatjames/orgs",
            "repos_url": "https://api.github.com/users/ohthatjames/repos",
            "events_url": "https://api.github.com/users/ohthatjames/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ohthatjames/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I can see 2 issues around this:\n\n1) It's not thread-safe: if two threads call `Money.rounding_mode` then you may get inconsistent results.\n2) If the yield fails for any reason you may be left in an inconsistent state because you haven't set the rounding mode back. Suggest you use an `ensure` to set the rounding mode back.\n",
        "created_at": "2013-11-27T13:22:00Z",
        "updated_at": "2013-12-19T05:35:28Z",
        "html_url": "https://github.com/RubyMoney/money/pull/343#discussion_r7956554",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/343",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/7956554"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/343#discussion_r7956554"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/343"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/7963943",
        "pull_request_review_id": null,
        "id": 7963943,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5NjM5NDM=",
        "diff_hunk": "@@ -157,6 +155,25 @@ def self.inherited(base)\n \n   setup_defaults\n \n+  # Use this to return the rounding mode.  You may also pass it a \n+  # rounding mode and a block to temporatly change it.\n+  #\n+  # @return [BigDecimal::ROUND_MODE]\n+  #\n+  # @example\n+  #   Money.rounding_mode(BigDecimal::ROUND_HALF_UP) do\n+  #     fee = Money.new(1200) * BigDecimal.new('0.029')\n+  #   end\n+  def self.rounding_mode(mode=nil)",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 24,
        "commit_id": "4aaee8410bfb323854964ecb5ab0fb28f62f51a9",
        "original_commit_id": "d27c6013d43cf5995f90f1dc301f106b91dbe871",
        "user": {
            "login": "hadees",
            "id": 15341,
            "node_id": "MDQ6VXNlcjE1MzQx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15341?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hadees",
            "html_url": "https://github.com/hadees",
            "followers_url": "https://api.github.com/users/hadees/followers",
            "following_url": "https://api.github.com/users/hadees/following{/other_user}",
            "gists_url": "https://api.github.com/users/hadees/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hadees/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hadees/subscriptions",
            "organizations_url": "https://api.github.com/users/hadees/orgs",
            "repos_url": "https://api.github.com/users/hadees/repos",
            "events_url": "https://api.github.com/users/hadees/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hadees/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fair points, I was also thinking maybe `rounding_mode` should return yield results instead of the current rounding mode because when you are temporarily changing it getting back the current mode isn't really that useful but getting back the results of a calculation would be.\n\nWhat would be the right way to make it thread safe?\n",
        "created_at": "2013-11-27T17:29:53Z",
        "updated_at": "2013-12-19T05:35:28Z",
        "html_url": "https://github.com/RubyMoney/money/pull/343#discussion_r7963943",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/343",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/7963943"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/343#discussion_r7963943"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/343"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8579345",
        "pull_request_review_id": null,
        "id": 8579345,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NzkzNDU=",
        "diff_hunk": "@@ -184,8 +184,12 @@ def self.rounding_mode(mode=nil)\n   #\n   # @example\n   #   Money.empty #=> #<Money @fractional=0>\n-  def self.empty(currency = default_currency)\n-    Money.new(0, currency)\n+  class << self",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "ed37f7544e2e8702ecf801afa1c29ca6ba0a276d",
        "original_commit_id": "057d00aa919db62c9c75a6b1679058e1730697a6",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we already have a `class << self` section. I'd move this there instead of creating another.\n",
        "created_at": "2013-12-29T17:24:06Z",
        "updated_at": "2013-12-30T16:50:45Z",
        "html_url": "https://github.com/RubyMoney/money/pull/348#discussion_r8579345",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/348",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8579345"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/348#discussion_r8579345"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/348"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8579349",
        "pull_request_review_id": null,
        "id": 8579349,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NzkzNDk=",
        "diff_hunk": "@@ -375,11 +388,11 @@ def m.amount\n     it \"works as documented\" do\n       currency = Money::Currency.new(\"EUR\")\n       currency.should_receive(:symbol).and_return(\"\u20ac\")\n-      Money.empty(currency).symbol.should == \"\u20ac\"\n+      Money.new(0, currency).symbol.should == \"\u20ac\"",
        "path": "spec/money_spec.rb",
        "position": 25,
        "original_position": 25,
        "commit_id": "ed37f7544e2e8702ecf801afa1c29ca6ba0a276d",
        "original_commit_id": "057d00aa919db62c9c75a6b1679058e1730697a6",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why was this test changed?\n",
        "created_at": "2013-12-29T17:25:23Z",
        "updated_at": "2013-12-30T16:50:45Z",
        "html_url": "https://github.com/RubyMoney/money/pull/348#discussion_r8579349",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/348",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8579349"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/348#discussion_r8579349"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/348"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8585596",
        "pull_request_review_id": null,
        "id": 8585596,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1ODU1OTY=",
        "diff_hunk": "@@ -184,8 +184,12 @@ def self.rounding_mode(mode=nil)\n   #\n   # @example\n   #   Money.empty #=> #<Money @fractional=0>\n-  def self.empty(currency = default_currency)\n-    Money.new(0, currency)\n+  class << self",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "ed37f7544e2e8702ecf801afa1c29ca6ba0a276d",
        "original_commit_id": "057d00aa919db62c9c75a6b1679058e1730697a6",
        "user": {
            "login": "krishicks",
            "id": 79357,
            "node_id": "MDQ6VXNlcjc5MzU3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/79357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krishicks",
            "html_url": "https://github.com/krishicks",
            "followers_url": "https://api.github.com/users/krishicks/followers",
            "following_url": "https://api.github.com/users/krishicks/following{/other_user}",
            "gists_url": "https://api.github.com/users/krishicks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krishicks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krishicks/subscriptions",
            "organizations_url": "https://api.github.com/users/krishicks/orgs",
            "repos_url": "https://api.github.com/users/krishicks/repos",
            "events_url": "https://api.github.com/users/krishicks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krishicks/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's not possible to move the alias to that section as the method isn't yet defined.\n",
        "created_at": "2013-12-30T15:08:56Z",
        "updated_at": "2013-12-30T16:50:45Z",
        "html_url": "https://github.com/RubyMoney/money/pull/348#discussion_r8585596",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/348",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8585596"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/348#discussion_r8585596"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/348"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8585647",
        "pull_request_review_id": null,
        "id": 8585647,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1ODU2NDc=",
        "diff_hunk": "@@ -375,11 +388,11 @@ def m.amount\n     it \"works as documented\" do\n       currency = Money::Currency.new(\"EUR\")\n       currency.should_receive(:symbol).and_return(\"\u20ac\")\n-      Money.empty(currency).symbol.should == \"\u20ac\"\n+      Money.new(0, currency).symbol.should == \"\u20ac\"",
        "path": "spec/money_spec.rb",
        "position": 25,
        "original_position": 25,
        "commit_id": "ed37f7544e2e8702ecf801afa1c29ca6ba0a276d",
        "original_commit_id": "057d00aa919db62c9c75a6b1679058e1730697a6",
        "user": {
            "login": "krishicks",
            "id": 79357,
            "node_id": "MDQ6VXNlcjc5MzU3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/79357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krishicks",
            "html_url": "https://github.com/krishicks",
            "followers_url": "https://api.github.com/users/krishicks/followers",
            "following_url": "https://api.github.com/users/krishicks/following{/other_user}",
            "gists_url": "https://api.github.com/users/krishicks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krishicks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krishicks/subscriptions",
            "organizations_url": "https://api.github.com/users/krishicks/orgs",
            "repos_url": "https://api.github.com/users/krishicks/repos",
            "events_url": "https://api.github.com/users/krishicks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krishicks/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Money.empty is now cached; the test fails because the currency that is stubbed is not the one that's returned.\n\nI had a different version that rewrote this to use a currency that has no symbol, but decided this would be more obvious.\n",
        "created_at": "2013-12-30T15:12:05Z",
        "updated_at": "2013-12-30T16:50:45Z",
        "html_url": "https://github.com/RubyMoney/money/pull/348#discussion_r8585647",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/348",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8585647"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/348#discussion_r8585647"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/348"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8587027",
        "pull_request_review_id": null,
        "id": 8587027,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1ODcwMjc=",
        "diff_hunk": "@@ -184,8 +184,12 @@ def self.rounding_mode(mode=nil)\n   #\n   # @example\n   #   Money.empty #=> #<Money @fractional=0>\n-  def self.empty(currency = default_currency)\n-    Money.new(0, currency)\n+  class << self",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "ed37f7544e2e8702ecf801afa1c29ca6ba0a276d",
        "original_commit_id": "057d00aa919db62c9c75a6b1679058e1730697a6",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we should be able to move both the method definition and the alias there.\n",
        "created_at": "2013-12-30T16:32:24Z",
        "updated_at": "2013-12-30T16:50:45Z",
        "html_url": "https://github.com/RubyMoney/money/pull/348#discussion_r8587027",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/348",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8587027"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/348#discussion_r8587027"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/348"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8587043",
        "pull_request_review_id": null,
        "id": 8587043,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1ODcwNDM=",
        "diff_hunk": "@@ -375,11 +388,11 @@ def m.amount\n     it \"works as documented\" do\n       currency = Money::Currency.new(\"EUR\")\n       currency.should_receive(:symbol).and_return(\"\u20ac\")\n-      Money.empty(currency).symbol.should == \"\u20ac\"\n+      Money.new(0, currency).symbol.should == \"\u20ac\"",
        "path": "spec/money_spec.rb",
        "position": 25,
        "original_position": 25,
        "commit_id": "ed37f7544e2e8702ecf801afa1c29ca6ba0a276d",
        "original_commit_id": "057d00aa919db62c9c75a6b1679058e1730697a6",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "okay\n",
        "created_at": "2013-12-30T16:32:57Z",
        "updated_at": "2013-12-30T16:50:45Z",
        "html_url": "https://github.com/RubyMoney/money/pull/348#discussion_r8587043",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/348",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8587043"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/348#discussion_r8587043"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/348"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8716253",
        "pull_request_review_id": null,
        "id": 8716253,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3MTYyNTM=",
        "diff_hunk": "@@ -2,7 +2,7 @@ class Numeric\n   alias_method :_to_money, :to_money\n   def to_money(*args)\n     unless Money.silence_core_extensions_deprecations\n-      Money.deprecate \"as of Money 6.1.0 you must `require 'monetize/core_extensions'` to use Numeric#to_money.\"\n+      Money.deprecate \"as of Money 6.1.0 you must `require 'money/core_extensions'` to use Numeric#to_money.\"",
        "path": "lib/money/core_extensions/numeric.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "7358b48befdfa33d326502c8ec2f8afe7da8772f",
        "original_commit_id": "7358b48befdfa33d326502c8ec2f8afe7da8772f",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is incorrect. In 6.1.0 you will be required to use monetize/core_extensions as all core_extensions will be dropped from the money gem.\n",
        "created_at": "2014-01-08T05:58:27Z",
        "updated_at": "2014-01-08T05:58:27Z",
        "html_url": "https://github.com/RubyMoney/money/pull/355#discussion_r8716253",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/355",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/8716253"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/355#discussion_r8716253"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/355"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/13857345",
        "pull_request_review_id": null,
        "id": 13857345,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODU3MzQ1",
        "diff_hunk": "@@ -680,4 +680,24 @@ def m.amount\n       obj.as_euro.should == Money.new(1, \"EUR\")\n     end\n   end\n+\n+  describe \".default_currency\" do\n+    before do\n+      @default_currency = Money.default_currency\n+    end\n+\n+    it \"accepts a lambda\" do\n+      Money.default_currency = lambda { :eur }\n+      Money.default_currency.should == Money::Currency.new(:eur)\n+    end\n+\n+    it \"accepts a symbol\" do\n+      Money.default_currency = :eur\n+      Money.default_currency.should == Money::Currency.new(:eur)\n+    end\n+\n+    after do",
        "path": "spec/money_spec.rb",
        "position": 20,
        "original_position": 20,
        "commit_id": "84a552d629e2ac292dfe62083de7e4a05994fb7e",
        "original_commit_id": "84a552d629e2ac292dfe62083de7e4a05994fb7e",
        "user": {
            "login": "RKushnir",
            "id": 205906,
            "node_id": "MDQ6VXNlcjIwNTkwNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/205906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RKushnir",
            "html_url": "https://github.com/RKushnir",
            "followers_url": "https://api.github.com/users/RKushnir/followers",
            "following_url": "https://api.github.com/users/RKushnir/following{/other_user}",
            "gists_url": "https://api.github.com/users/RKushnir/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RKushnir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RKushnir/subscriptions",
            "organizations_url": "https://api.github.com/users/RKushnir/orgs",
            "repos_url": "https://api.github.com/users/RKushnir/repos",
            "events_url": "https://api.github.com/users/RKushnir/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RKushnir/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`after` should go just after `before`, it's a convention in this file and in general.\n",
        "created_at": "2014-06-17T13:11:46Z",
        "updated_at": "2014-06-17T13:11:46Z",
        "html_url": "https://github.com/RubyMoney/money/pull/359#discussion_r13857345",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/359",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/13857345"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/359#discussion_r13857345"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/359"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/13869584",
        "pull_request_review_id": null,
        "id": 13869584,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODY5NTg0",
        "diff_hunk": "@@ -680,4 +680,24 @@ def m.amount\n       obj.as_euro.should == Money.new(1, \"EUR\")\n     end\n   end\n+\n+  describe \".default_currency\" do\n+    before do\n+      @default_currency = Money.default_currency\n+    end\n+\n+    it \"accepts a lambda\" do\n+      Money.default_currency = lambda { :eur }\n+      Money.default_currency.should == Money::Currency.new(:eur)\n+    end\n+\n+    it \"accepts a symbol\" do\n+      Money.default_currency = :eur\n+      Money.default_currency.should == Money::Currency.new(:eur)\n+    end\n+\n+    after do",
        "path": "spec/money_spec.rb",
        "position": 20,
        "original_position": 20,
        "commit_id": "84a552d629e2ac292dfe62083de7e4a05994fb7e",
        "original_commit_id": "84a552d629e2ac292dfe62083de7e4a05994fb7e",
        "user": {
            "login": "lunks",
            "id": 91118,
            "node_id": "MDQ6VXNlcjkxMTE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/91118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lunks",
            "html_url": "https://github.com/lunks",
            "followers_url": "https://api.github.com/users/lunks/followers",
            "following_url": "https://api.github.com/users/lunks/following{/other_user}",
            "gists_url": "https://api.github.com/users/lunks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lunks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lunks/subscriptions",
            "organizations_url": "https://api.github.com/users/lunks/orgs",
            "repos_url": "https://api.github.com/users/lunks/repos",
            "events_url": "https://api.github.com/users/lunks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lunks/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2014-06-17T16:26:05Z",
        "updated_at": "2014-06-17T16:26:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/359#discussion_r13869584",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/359",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/13869584"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/359#discussion_r13869584"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/359"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/13869757",
        "pull_request_review_id": null,
        "id": 13869757,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODY5NzU3",
        "diff_hunk": "@@ -680,4 +680,24 @@ def m.amount\n       obj.as_euro.should == Money.new(1, \"EUR\")\n     end\n   end\n+\n+  describe \".default_currency\" do\n+    before do\n+      @default_currency = Money.default_currency\n+    end\n+\n+    it \"accepts a lambda\" do\n+      Money.default_currency = lambda { :eur }\n+      Money.default_currency.should == Money::Currency.new(:eur)\n+    end\n+\n+    it \"accepts a symbol\" do\n+      Money.default_currency = :eur\n+      Money.default_currency.should == Money::Currency.new(:eur)\n+    end\n+\n+    after do",
        "path": "spec/money_spec.rb",
        "position": 20,
        "original_position": 20,
        "commit_id": "84a552d629e2ac292dfe62083de7e4a05994fb7e",
        "original_commit_id": "84a552d629e2ac292dfe62083de7e4a05994fb7e",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Feel free to submit a PR.\n",
        "created_at": "2014-06-17T16:29:05Z",
        "updated_at": "2014-06-17T16:29:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/359#discussion_r13869757",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/359",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/13869757"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/359#discussion_r13869757"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/359"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/13877660",
        "pull_request_review_id": null,
        "id": 13877660,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODc3NjYw",
        "diff_hunk": "@@ -680,4 +680,24 @@ def m.amount\n       obj.as_euro.should == Money.new(1, \"EUR\")\n     end\n   end\n+\n+  describe \".default_currency\" do\n+    before do\n+      @default_currency = Money.default_currency\n+    end\n+\n+    it \"accepts a lambda\" do\n+      Money.default_currency = lambda { :eur }\n+      Money.default_currency.should == Money::Currency.new(:eur)\n+    end\n+\n+    it \"accepts a symbol\" do\n+      Money.default_currency = :eur\n+      Money.default_currency.should == Money::Currency.new(:eur)\n+    end\n+\n+    after do",
        "path": "spec/money_spec.rb",
        "position": 20,
        "original_position": 20,
        "commit_id": "84a552d629e2ac292dfe62083de7e4a05994fb7e",
        "original_commit_id": "84a552d629e2ac292dfe62083de7e4a05994fb7e",
        "user": {
            "login": "RKushnir",
            "id": 205906,
            "node_id": "MDQ6VXNlcjIwNTkwNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/205906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RKushnir",
            "html_url": "https://github.com/RKushnir",
            "followers_url": "https://api.github.com/users/RKushnir/followers",
            "following_url": "https://api.github.com/users/RKushnir/following{/other_user}",
            "gists_url": "https://api.github.com/users/RKushnir/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RKushnir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RKushnir/subscriptions",
            "organizations_url": "https://api.github.com/users/RKushnir/orgs",
            "repos_url": "https://api.github.com/users/RKushnir/repos",
            "events_url": "https://api.github.com/users/RKushnir/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RKushnir/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@semmons99 done\n",
        "created_at": "2014-06-17T18:43:35Z",
        "updated_at": "2014-06-17T18:43:35Z",
        "html_url": "https://github.com/RubyMoney/money/pull/359#discussion_r13877660",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/359",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/13877660"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/359#discussion_r13877660"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/359"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14244253",
        "pull_request_review_id": null,
        "id": 14244253,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjQ0MjUz",
        "diff_hunk": "@@ -564,5 +564,59 @@ def to_money\n       result = 2 * Money.new(4, 'USD')\n       result.should == Money.new(8, 'USD')\n     end\n+\n+    it \"raises TypeError dividing by a Money (unless other is a Money)\" do\n+      expect {\n+        2 / Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"raises TypeError subtracting by a Money (unless other is a Money)\" do\n+      expect {\n+        2 - Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"raises TypeError adding by a Money (unless other is a Money)\" do\n+      expect {\n+        2 + Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"works correctly with multiplication\" do\n+      expect {\n+        2 * Money.new(2, 'USD')\n+      }.to_not raise_exception\n+      result = 2 * Money.new(2, 'USD')",
        "path": "spec/money/arithmetic_spec.rb",
        "position": null,
        "original_position": 27,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "21d90fe300311c4ddcca744e04163c56ddfbd7ba",
        "user": {
            "login": "calebthompson",
            "id": 711717,
            "node_id": "MDQ6VXNlcjcxMTcxNw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/711717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/calebthompson",
            "html_url": "https://github.com/calebthompson",
            "followers_url": "https://api.github.com/users/calebthompson/followers",
            "following_url": "https://api.github.com/users/calebthompson/following{/other_user}",
            "gists_url": "https://api.github.com/users/calebthompson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/calebthompson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/calebthompson/subscriptions",
            "organizations_url": "https://api.github.com/users/calebthompson/orgs",
            "repos_url": "https://api.github.com/users/calebthompson/repos",
            "events_url": "https://api.github.com/users/calebthompson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/calebthompson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Throw in a test for another Numeric, like Decimal, please.\n",
        "created_at": "2014-06-26T14:47:27Z",
        "updated_at": "2014-06-26T18:13:40Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14244253",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14244253"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14244253"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14252367",
        "pull_request_review_id": null,
        "id": 14252367,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUyMzY3",
        "diff_hunk": "@@ -564,5 +564,59 @@ def to_money\n       result = 2 * Money.new(4, 'USD')\n       result.should == Money.new(8, 'USD')\n     end\n+\n+    it \"raises TypeError dividing by a Money (unless other is a Money)\" do\n+      expect {\n+        2 / Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"raises TypeError subtracting by a Money (unless other is a Money)\" do\n+      expect {\n+        2 - Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"raises TypeError adding by a Money (unless other is a Money)\" do\n+      expect {\n+        2 + Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"works correctly with multiplication\" do\n+      expect {\n+        2 * Money.new(2, 'USD')\n+      }.to_not raise_exception\n+      result = 2 * Money.new(2, 'USD')",
        "path": "spec/money/arithmetic_spec.rb",
        "position": null,
        "original_position": 27,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "21d90fe300311c4ddcca744e04163c56ddfbd7ba",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "added\n",
        "created_at": "2014-06-26T16:59:35Z",
        "updated_at": "2014-06-26T18:13:40Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14252367",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14252367"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14252367"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14252904",
        "pull_request_review_id": null,
        "id": 14252904,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUyOTA0",
        "diff_hunk": "@@ -564,5 +564,73 @@ def to_money\n       result = 2 * Money.new(4, 'USD')\n       result.should == Money.new(8, 'USD')\n     end\n+\n+    it \"raises TypeError dividing by a Money (unless other is a Money)\" do\n+      expect {\n+        2 / Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"raises TypeError subtracting by a Money (unless other is a Money)\" do\n+      expect {\n+        2 - Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"raises TypeError adding by a Money (unless other is a Money)\" do\n+      expect {\n+        2 + Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"works correctly with multiplication\" do\n+      expect {\n+        2 * Money.new(2, 'USD')\n+      }.to_not raise_exception\n+      result = 2 * Money.new(2, 'USD')\n+      expect(result).to eq(Money.new(4, 'USD'))\n+    end\n+\n+    it \"doesn't work with non-numerics\" do\n+      expect {\n+        \"2\" * Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"correctly handles <=>\" do\n+      expect {\n+        2 < Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+\n+      expect {\n+        2 > Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+\n+      expect {\n+        2 <= Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+\n+      expect {\n+        2 >= Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+\n+      expect {\n+        2 <=> Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"works with numerics other than integer\" do",
        "path": "spec/money/arithmetic_spec.rb",
        "position": null,
        "original_position": 59,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "6fe5c7fbf942e8ddff79a5193976659346d01af6",
        "user": {
            "login": "lunks",
            "id": 91118,
            "node_id": "MDQ6VXNlcjkxMTE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/91118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lunks",
            "html_url": "https://github.com/lunks",
            "followers_url": "https://api.github.com/users/lunks/followers",
            "following_url": "https://api.github.com/users/lunks/following{/other_user}",
            "gists_url": "https://api.github.com/users/lunks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lunks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lunks/subscriptions",
            "organizations_url": "https://api.github.com/users/lunks/orgs",
            "repos_url": "https://api.github.com/users/lunks/repos",
            "events_url": "https://api.github.com/users/lunks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lunks/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`works` is not a good wording here IMHO. `fails` would actually suit this test case more.\n",
        "created_at": "2014-06-26T17:10:58Z",
        "updated_at": "2014-06-26T18:13:40Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14252904",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14252904"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14252904"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14252988",
        "pull_request_review_id": null,
        "id": 14252988,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUyOTg4",
        "diff_hunk": "@@ -564,5 +564,73 @@ def to_money\n       result = 2 * Money.new(4, 'USD')\n       result.should == Money.new(8, 'USD')\n     end\n+\n+    it \"raises TypeError dividing by a Money (unless other is a Money)\" do\n+      expect {\n+        2 / Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"raises TypeError subtracting by a Money (unless other is a Money)\" do\n+      expect {\n+        2 - Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"raises TypeError adding by a Money (unless other is a Money)\" do\n+      expect {\n+        2 + Money.new(2, 'USD')\n+      }.to raise_exception(TypeError)\n+    end\n+\n+    it \"works correctly with multiplication\" do",
        "path": "spec/money/arithmetic_spec.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "6fe5c7fbf942e8ddff79a5193976659346d01af6",
        "user": {
            "login": "calebthompson",
            "id": 711717,
            "node_id": "MDQ6VXNlcjcxMTcxNw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/711717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/calebthompson",
            "html_url": "https://github.com/calebthompson",
            "followers_url": "https://api.github.com/users/calebthompson/followers",
            "following_url": "https://api.github.com/users/calebthompson/following{/other_user}",
            "gists_url": "https://api.github.com/users/calebthompson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/calebthompson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/calebthompson/subscriptions",
            "organizations_url": "https://api.github.com/users/calebthompson/orgs",
            "repos_url": "https://api.github.com/users/calebthompson/repos",
            "events_url": "https://api.github.com/users/calebthompson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/calebthompson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"works\" isn't great verbiage here either. \"Does not raise an exception for numerics\" would be better, I think. The \"2 \\* 2 = 4\" test should almost be separate.\n",
        "created_at": "2014-06-26T17:12:47Z",
        "updated_at": "2014-06-26T18:13:40Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14252988",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14252988"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14252988"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14272351",
        "pull_request_review_id": null,
        "id": 14272351,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjcyMzUx",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "fotos",
            "id": 11336,
            "node_id": "MDQ6VXNlcjExMzM2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fotos",
            "html_url": "https://github.com/fotos",
            "followers_url": "https://api.github.com/users/fotos/followers",
            "following_url": "https://api.github.com/users/fotos/following{/other_user}",
            "gists_url": "https://api.github.com/users/fotos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fotos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fotos/subscriptions",
            "organizations_url": "https://api.github.com/users/fotos/orgs",
            "repos_url": "https://api.github.com/users/fotos/repos",
            "events_url": "https://api.github.com/users/fotos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fotos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This operation should be allowed. Addition is commutative.\n",
        "created_at": "2014-06-26T23:10:10Z",
        "updated_at": "2014-06-26T23:10:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14272351",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14272351"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14272351"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14272374",
        "pull_request_review_id": null,
        "id": 14272374,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjcyMzc0",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end\n+    def -(other) raise TypeError; end\n+    def /(other) raise TypeError; end\n+    def <=>(other) raise TypeError; end\n+",
        "path": "lib/money/money/arithmetic.rb",
        "position": 9,
        "original_position": 9,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "fotos",
            "id": 11336,
            "node_id": "MDQ6VXNlcjExMzM2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fotos",
            "html_url": "https://github.com/fotos",
            "followers_url": "https://api.github.com/users/fotos/followers",
            "following_url": "https://api.github.com/users/fotos/following{/other_user}",
            "gists_url": "https://api.github.com/users/fotos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fotos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fotos/subscriptions",
            "organizations_url": "https://api.github.com/users/fotos/orgs",
            "repos_url": "https://api.github.com/users/fotos/repos",
            "events_url": "https://api.github.com/users/fotos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fotos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perhaps you should include modulo (%) operation as well.\n\nRight now it returns:\n\n``` Ruby\nNoMethodError: undefined method `%' for #<struct Money::CoercedNumber value=4>\n```\n",
        "created_at": "2014-06-26T23:10:55Z",
        "updated_at": "2014-06-26T23:10:55Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14272374",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14272374"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14272374"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14281035",
        "pull_request_review_id": null,
        "id": 14281035,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjgxMDM1",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "$2 + 4 doesn't make any sense you can only add two Money objects together.\n",
        "created_at": "2014-06-27T06:35:45Z",
        "updated_at": "2014-06-27T06:35:45Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14281035",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14281035"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14281035"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14282556",
        "pull_request_review_id": null,
        "id": 14282556,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjgyNTU2",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "fotos",
            "id": 11336,
            "node_id": "MDQ6VXNlcjExMzM2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fotos",
            "html_url": "https://github.com/fotos",
            "followers_url": "https://api.github.com/users/fotos/followers",
            "following_url": "https://api.github.com/users/fotos/following{/other_user}",
            "gists_url": "https://api.github.com/users/fotos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fotos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fotos/subscriptions",
            "organizations_url": "https://api.github.com/users/fotos/orgs",
            "repos_url": "https://api.github.com/users/fotos/repos",
            "events_url": "https://api.github.com/users/fotos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fotos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If addition doesn't make any sense then neither does multiplication. Multiplication is, in essence, [equivalent](1) to the addition of one number with itself as many times as the value of the other number. How can we support the multiplication without addition? How is multiplication different (in terms of semantics)?\n",
        "created_at": "2014-06-27T07:43:18Z",
        "updated_at": "2014-06-27T07:43:18Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14282556",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14282556"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14282556"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14282640",
        "pull_request_review_id": null,
        "id": 14282640,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjgyNjQw",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@fotos Intuitively, I would perfectly accept \"(2) \\* (3 meters)\" as \"6 meters\", whereas \"2 + (3 meters)\" doesn't have matching units. Notice that \"(2) \\* (3 meters)\" means \"(3 meters) + (3 meters)\" which does indeed have matching units.\n\nRandom somewhat relevant link: http://www.chem.ox.ac.uk/teaching/Physics%20for%20CHemists/Units.html\n",
        "created_at": "2014-06-27T07:47:39Z",
        "updated_at": "2014-06-27T07:47:39Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14282640",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14282640"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14282640"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14282804",
        "pull_request_review_id": null,
        "id": 14282804,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjgyODA0",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "fotos",
            "id": 11336,
            "node_id": "MDQ6VXNlcjExMzM2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fotos",
            "html_url": "https://github.com/fotos",
            "followers_url": "https://api.github.com/users/fotos/followers",
            "following_url": "https://api.github.com/users/fotos/following{/other_user}",
            "gists_url": "https://api.github.com/users/fotos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fotos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fotos/subscriptions",
            "organizations_url": "https://api.github.com/users/fotos/orgs",
            "repos_url": "https://api.github.com/users/fotos/repos",
            "events_url": "https://api.github.com/users/fotos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fotos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ct-clearhaus OK, then what is \"money\" x \"money\"? :wink: The example is not appropriate. If it doesn't make sense, then we shouldn't allow the multiplication of `Money` (rhetorical question)?\n\nI think you miss the whole point of coercion. It's perfectly acceptable, as used in everyday practice, to say that if one operand is numeric you can coerce it as the \"base unit\" and perform the operation.\n",
        "created_at": "2014-06-27T07:54:56Z",
        "updated_at": "2014-06-27T07:54:56Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14282804",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14282804"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14282804"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14283041",
        "pull_request_review_id": null,
        "id": 14283041,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjgzMDQx",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@fotos \"(2 meters) \\* (3 meters)\" is \"6 square-meters\". You don't have \"square-USD\", so that doesn't make sense. However, \"(2) \\* (3 meters)\" is \"6 meters\".\n\nIf you add in coercion, it should be (1) consistent, (2) intuitive. Otherwise, we should stick to what we learned in an elementary school physical class :-)\n",
        "created_at": "2014-06-27T08:04:00Z",
        "updated_at": "2014-06-27T08:04:17Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14283041",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14283041"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14283041"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14283143",
        "pull_request_review_id": null,
        "id": 14283143,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjgzMTQz",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wrt. coercion, I'd expect that `1 + Money.new(100)` should be ... uhm, `Money.new(101)` or `Money.new(200)`? There's a built in ambiguity that can be fixed \"by convention\", but I don't think it's a great solution. Forcing the user to explicitly call `#to_money` or `Money.new` is a better solution IMO.\n",
        "created_at": "2014-06-27T08:07:57Z",
        "updated_at": "2014-06-27T08:07:57Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14283143",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14283143"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14283143"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14283507",
        "pull_request_review_id": null,
        "id": 14283507,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjgzNTA3",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "fotos",
            "id": 11336,
            "node_id": "MDQ6VXNlcjExMzM2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fotos",
            "html_url": "https://github.com/fotos",
            "followers_url": "https://api.github.com/users/fotos/followers",
            "following_url": "https://api.github.com/users/fotos/following{/other_user}",
            "gists_url": "https://api.github.com/users/fotos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fotos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fotos/subscriptions",
            "organizations_url": "https://api.github.com/users/fotos/orgs",
            "repos_url": "https://api.github.com/users/fotos/repos",
            "events_url": "https://api.github.com/users/fotos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fotos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ct-clearhaus so, I ask again, what is \"4 (dollars) \\* 4 (dollars)\"? Of course it is \"16 (dollars)\" as everyday life (and elementary school) taught us and definitely not square dollars. But then, again, what is \"4 (unitless) \\* 4 (dollars)\"? Can it be the same result \"16 (dollars)\"? Didn't we (implicitly) coerce 4 into \"(dollars)\" before performing the operation?\n\nMy whole point is that we should either allow all operations (`Numeric` \\* `Money`) and accept (implicitly) that the numeric is in the **base unit** of the Money operand. Just like we do in everyday life.\n\nRight now:\n\n```\n4.to_money == Money.new(400, 'USD')\n```\n\nAnd if you do this:\n\n```\n4 + Money.new(4, 'USD')\n```\n\nI expect it to be equivalent to\n\n```\n4.to_money + Money.new(4, 'USD')\n=> #<Money fractional:404 currency:USD>\n```\n\nIf you think about it, it makes sense.\n",
        "created_at": "2014-06-27T08:21:27Z",
        "updated_at": "2014-06-27T08:21:27Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14283507",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14283507"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14283507"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14283594",
        "pull_request_review_id": null,
        "id": 14283594,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjgzNTk0",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "fotos",
            "id": 11336,
            "node_id": "MDQ6VXNlcjExMzM2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fotos",
            "html_url": "https://github.com/fotos",
            "followers_url": "https://api.github.com/users/fotos/followers",
            "following_url": "https://api.github.com/users/fotos/following{/other_user}",
            "gists_url": "https://api.github.com/users/fotos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fotos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fotos/subscriptions",
            "organizations_url": "https://api.github.com/users/fotos/orgs",
            "repos_url": "https://api.github.com/users/fotos/repos",
            "events_url": "https://api.github.com/users/fotos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fotos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree that we should either explicitly request for `#to_money` conversions or imply that the numeric is in the base currency. One or the other. But it should be consistent and that means we shouldn't allow any operations between `Numeric` and `Money`, not even `Money.new(2, 'USD') * 2` which is currently allowed.\n\nPersonally I'd go the other way around (coerce values) but that solution (require explicit `#to_money` conversion) is acceptable as well.\n",
        "created_at": "2014-06-27T08:24:32Z",
        "updated_at": "2014-06-27T08:24:32Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14283594",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14283594"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14283594"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14283824",
        "pull_request_review_id": null,
        "id": 14283824,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjgzODI0",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@fotos I disagree. \"(4 dollars) \\* (4 dollars)\" is \"4 dollars^2\" which doesn't make sense. In everyday life, I've never multiplied currencies. If \"(4 dollars) \\* (4 dollars)\" should make sense, then what should \"(4 dollars) \\* (4 euros)\" mean? And should the result be in euro or dollar? I don't like that kind of ambiguity.\n\n_If_ `4 + Money.new(x, 'USD')` should somehow make sense, then, yes, indeed, it should equal `Money.new(x + 4, 'USD')`. [Edit: or, well ... then `4.to_money + Money.new(x, 'USD')` is different from `4 + Money.new(x, 'USD')` ... which would be strange for users, I guess.] [Edit2: Maybe I could accept `Money.new(100, 'USD').add(Money.new(100, 'EUR'))` to exchange `Money.new(100, 'EUR')` to USD and then add the fractionals, but having `Money.new(100, 'EUR') + Money.new(100, 'USD')` and `Money.new(100, 'USD') + Money.new(100, 'EUR')` being different kills commutativity of `+`.]\n\nI'd much prefer an explicit `#to_money` call rather than weirdness like `Money.new(100, 'EUR') + Money.new(100, 'USD')` to not raise an error.\n",
        "created_at": "2014-06-27T08:32:26Z",
        "updated_at": "2014-06-27T08:37:59Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14283824",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14283824"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14283824"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14284129",
        "pull_request_review_id": null,
        "id": 14284129,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjg0MTI5",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Our friends over at python-money does coerce on addition e.g.:\nhttps://code.google.com/p/python-money/source/browse/trunk/money/Money.py#57\n",
        "created_at": "2014-06-27T08:43:37Z",
        "updated_at": "2014-06-27T08:43:37Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14284129",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14284129"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14284129"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14284153",
        "pull_request_review_id": null,
        "id": 14284153,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjg0MTUz",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "fotos",
            "id": 11336,
            "node_id": "MDQ6VXNlcjExMzM2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fotos",
            "html_url": "https://github.com/fotos",
            "followers_url": "https://api.github.com/users/fotos/followers",
            "following_url": "https://api.github.com/users/fotos/following{/other_user}",
            "gists_url": "https://api.github.com/users/fotos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fotos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fotos/subscriptions",
            "organizations_url": "https://api.github.com/users/fotos/orgs",
            "repos_url": "https://api.github.com/users/fotos/repos",
            "events_url": "https://api.github.com/users/fotos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fotos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's simple: you wouldn't allow operations between `Money` that are in different currencies. If they are the same currency you can safely perform the operations.\n\nAlso if the currency is not explicitly defined, as in the case of Numeric, you can implicitly accept say the Numeric is in the basic unit and of same currency of the Money operand. I think I explained this bit a couple of times.\n\nWell I hope I made my point clear in the previous comments. IMHO the operations are simple and can be well defined (and coerced where necessary / appropriate) without being confusing whatsoever.\n",
        "created_at": "2014-06-27T08:44:44Z",
        "updated_at": "2014-06-27T08:44:44Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14284153",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14284153"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14284153"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14284210",
        "pull_request_review_id": null,
        "id": 14284210,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjg0MjEw",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "fotos",
            "id": 11336,
            "node_id": "MDQ6VXNlcjExMzM2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fotos",
            "html_url": "https://github.com/fotos",
            "followers_url": "https://api.github.com/users/fotos/followers",
            "following_url": "https://api.github.com/users/fotos/following{/other_user}",
            "gists_url": "https://api.github.com/users/fotos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fotos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fotos/subscriptions",
            "organizations_url": "https://api.github.com/users/fotos/orgs",
            "repos_url": "https://api.github.com/users/fotos/repos",
            "events_url": "https://api.github.com/users/fotos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fotos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd like to create an appropriate PR, as I believe the operations should work, this weekend, if you have no objections. I need to find a couple of hours to work on this issue. There is no point in debating how it should work. A working example might be more convincing. :smile:\n",
        "created_at": "2014-06-27T08:47:42Z",
        "updated_at": "2014-06-27T08:47:42Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14284210",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14284210"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14284210"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14284423",
        "pull_request_review_id": null,
        "id": 14284423,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjg0NDIz",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "original_commit_id": "f808668509b5ebaf0511118e0fb33c629744e1c3",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In python-money, `Money.new(100, 'USD') + Money.new(100, 'EUR')` equals `Money.new(100 + Money.new(100, 'EUR').exchange_to('USD').fractional, 'USD')` as far as I understand the code.\nAlso, `Money.new(100, 'USD') * Money.new(100, 'USD')` raises an error.\n\nBoth makes perfectly sense. That's adding coercion consistently to the rules I outlined in https://github.com/RubyMoney/money/pull/405#issuecomment-47310481\n\nYou are right. Let's stop writing prose and start writing code :-)\nI'll try to find time to follow you.\n",
        "created_at": "2014-06-27T08:54:58Z",
        "updated_at": "2014-06-27T08:54:58Z",
        "html_url": "https://github.com/RubyMoney/money/pull/405#discussion_r14284423",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/405",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/14284423"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/405#discussion_r14284423"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/405"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503490",
        "pull_request_review_id": null,
        "id": 16503490,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTAzNDkw",
        "diff_hunk": "@@ -3,6 +3,7 @@\n Gemfile.lock\n pkg/*\n bin/\n+vendor/ruby",
        "path": ".gitignore",
        "position": null,
        "original_position": 4,
        "commit_id": "15d7b1dc28f3ba060e04ca9f3a8b77e321a943d2",
        "original_commit_id": "615befd862e69886bd67d9deb1657f2c671903bc",
        "user": {
            "login": "jerhinesmith",
            "id": 153623,
            "node_id": "MDQ6VXNlcjE1MzYyMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/153623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerhinesmith",
            "html_url": "https://github.com/jerhinesmith",
            "followers_url": "https://api.github.com/users/jerhinesmith/followers",
            "following_url": "https://api.github.com/users/jerhinesmith/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerhinesmith/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerhinesmith/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerhinesmith/subscriptions",
            "organizations_url": "https://api.github.com/users/jerhinesmith/orgs",
            "repos_url": "https://api.github.com/users/jerhinesmith/repos",
            "events_url": "https://api.github.com/users/jerhinesmith/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerhinesmith/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I can remove this if necessary -- I just always have my gems default to vendor/ruby\n",
        "created_at": "2014-08-20T20:40:49Z",
        "updated_at": "2014-08-20T23:08:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/425#discussion_r16503490",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/425",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503490"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/425#discussion_r16503490"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/425"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503566",
        "pull_request_review_id": null,
        "id": 16503566,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTAzNTY2",
        "diff_hunk": "@@ -29,7 +29,8 @@ MSG\n \n   s.add_development_dependency \"bundler\", \"~> 1.3\"\n   s.add_development_dependency \"rake\"\n-  s.add_development_dependency \"rspec\", \"~> 2.14\"\n+  s.add_development_dependency \"rspec\", \"~> 2.99\"\n+  s.add_development_dependency \"rspec-its\", \"~> 1.0.1\"",
        "path": "money.gemspec",
        "position": null,
        "original_position": 6,
        "commit_id": "15d7b1dc28f3ba060e04ca9f3a8b77e321a943d2",
        "original_commit_id": "615befd862e69886bd67d9deb1657f2c671903bc",
        "user": {
            "login": "jerhinesmith",
            "id": 153623,
            "node_id": "MDQ6VXNlcjE1MzYyMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/153623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerhinesmith",
            "html_url": "https://github.com/jerhinesmith",
            "followers_url": "https://api.github.com/users/jerhinesmith/followers",
            "following_url": "https://api.github.com/users/jerhinesmith/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerhinesmith/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerhinesmith/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerhinesmith/subscriptions",
            "organizations_url": "https://api.github.com/users/jerhinesmith/orgs",
            "repos_url": "https://api.github.com/users/jerhinesmith/repos",
            "events_url": "https://api.github.com/users/jerhinesmith/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerhinesmith/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Added to fix deprecation warnings relevant to:\n\n```\nUse of rspec-core's `its` method is deprecated. Use the rspec-its gem instead.\n```\n\nAll warnings thrown from `formatting_spec.rb`.\n",
        "created_at": "2014-08-20T20:41:55Z",
        "updated_at": "2014-08-20T23:08:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/425#discussion_r16503566",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/425",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503566"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/425#discussion_r16503566"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/425"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503601",
        "pull_request_review_id": null,
        "id": 16503601,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTAzNjAx",
        "diff_hunk": "@@ -3,6 +3,7 @@\n Gemfile.lock\n pkg/*\n bin/\n+vendor/ruby",
        "path": ".gitignore",
        "position": null,
        "original_position": 4,
        "commit_id": "15d7b1dc28f3ba060e04ca9f3a8b77e321a943d2",
        "original_commit_id": "615befd862e69886bd67d9deb1657f2c671903bc",
        "user": {
            "login": "lunks",
            "id": 91118,
            "node_id": "MDQ6VXNlcjkxMTE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/91118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lunks",
            "html_url": "https://github.com/lunks",
            "followers_url": "https://api.github.com/users/lunks/followers",
            "following_url": "https://api.github.com/users/lunks/following{/other_user}",
            "gists_url": "https://api.github.com/users/lunks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lunks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lunks/subscriptions",
            "organizations_url": "https://api.github.com/users/lunks/orgs",
            "repos_url": "https://api.github.com/users/lunks/repos",
            "events_url": "https://api.github.com/users/lunks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lunks/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, please remove this.\n",
        "created_at": "2014-08-20T20:42:24Z",
        "updated_at": "2014-08-20T23:08:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/425#discussion_r16503601",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/425",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503601"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/425#discussion_r16503601"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/425"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503658",
        "pull_request_review_id": null,
        "id": 16503658,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTAzNjU4",
        "diff_hunk": "@@ -29,7 +29,8 @@ MSG\n \n   s.add_development_dependency \"bundler\", \"~> 1.3\"\n   s.add_development_dependency \"rake\"\n-  s.add_development_dependency \"rspec\", \"~> 2.14\"\n+  s.add_development_dependency \"rspec\", \"~> 2.99\"\n+  s.add_development_dependency \"rspec-its\", \"~> 1.0.1\"",
        "path": "money.gemspec",
        "position": null,
        "original_position": 6,
        "commit_id": "15d7b1dc28f3ba060e04ca9f3a8b77e321a943d2",
        "original_commit_id": "615befd862e69886bd67d9deb1657f2c671903bc",
        "user": {
            "login": "lunks",
            "id": 91118,
            "node_id": "MDQ6VXNlcjkxMTE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/91118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lunks",
            "html_url": "https://github.com/lunks",
            "followers_url": "https://api.github.com/users/lunks/followers",
            "following_url": "https://api.github.com/users/lunks/following{/other_user}",
            "gists_url": "https://api.github.com/users/lunks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lunks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lunks/subscriptions",
            "organizations_url": "https://api.github.com/users/lunks/orgs",
            "repos_url": "https://api.github.com/users/lunks/repos",
            "events_url": "https://api.github.com/users/lunks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lunks/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm in favor of removing `its` and updating the specs to just use plain rspec. cc @RubyMoney/money-devs \n",
        "created_at": "2014-08-20T20:43:01Z",
        "updated_at": "2014-08-20T23:08:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/425#discussion_r16503658",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/425",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503658"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/425#discussion_r16503658"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/425"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503772",
        "pull_request_review_id": null,
        "id": 16503772,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTAzNzcy",
        "diff_hunk": "@@ -57,17 +57,17 @@ def setup\n     end\n \n     it \"returns true when currencies match\" do\n-      subject.send(:same_currency?, 'USD', 'USD').should be_true\n-      subject.send(:same_currency?, Money::Currency.wrap('USD'), 'USD').should be_true\n-      subject.send(:same_currency?, 'USD', Money::Currency.wrap('USD')).should be_true\n-      subject.send(:same_currency?, Money::Currency.wrap('USD'), Money::Currency.wrap('USD')).should be_true\n+      subject.send(:same_currency?, 'USD', 'USD').should be_truthy",
        "path": "spec/bank/base_spec.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "15d7b1dc28f3ba060e04ca9f3a8b77e321a943d2",
        "original_commit_id": "615befd862e69886bd67d9deb1657f2c671903bc",
        "user": {
            "login": "lunks",
            "id": 91118,
            "node_id": "MDQ6VXNlcjkxMTE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/91118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lunks",
            "html_url": "https://github.com/lunks",
            "followers_url": "https://api.github.com/users/lunks/followers",
            "following_url": "https://api.github.com/users/lunks/following{/other_user}",
            "gists_url": "https://api.github.com/users/lunks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lunks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lunks/subscriptions",
            "organizations_url": "https://api.github.com/users/lunks/orgs",
            "repos_url": "https://api.github.com/users/lunks/repos",
            "events_url": "https://api.github.com/users/lunks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lunks/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Looking at the code I think `be false`/`be true` should work here. Use it instead of the more vague `be_truthy`/`be_falsey`.\n",
        "created_at": "2014-08-20T20:44:15Z",
        "updated_at": "2014-08-20T23:08:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/425#discussion_r16503772",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/425",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503772"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/425#discussion_r16503772"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/425"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503809",
        "pull_request_review_id": null,
        "id": 16503809,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTAzODA5",
        "diff_hunk": "@@ -29,7 +29,8 @@ MSG\n \n   s.add_development_dependency \"bundler\", \"~> 1.3\"\n   s.add_development_dependency \"rake\"\n-  s.add_development_dependency \"rspec\", \"~> 2.14\"\n+  s.add_development_dependency \"rspec\", \"~> 2.99\"\n+  s.add_development_dependency \"rspec-its\", \"~> 1.0.1\"",
        "path": "money.gemspec",
        "position": null,
        "original_position": 6,
        "commit_id": "15d7b1dc28f3ba060e04ca9f3a8b77e321a943d2",
        "original_commit_id": "615befd862e69886bd67d9deb1657f2c671903bc",
        "user": {
            "login": "jerhinesmith",
            "id": 153623,
            "node_id": "MDQ6VXNlcjE1MzYyMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/153623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerhinesmith",
            "html_url": "https://github.com/jerhinesmith",
            "followers_url": "https://api.github.com/users/jerhinesmith/followers",
            "following_url": "https://api.github.com/users/jerhinesmith/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerhinesmith/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerhinesmith/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerhinesmith/subscriptions",
            "organizations_url": "https://api.github.com/users/jerhinesmith/orgs",
            "repos_url": "https://api.github.com/users/jerhinesmith/repos",
            "events_url": "https://api.github.com/users/jerhinesmith/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerhinesmith/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, I was thinking the same thing.\n",
        "created_at": "2014-08-20T20:44:42Z",
        "updated_at": "2014-08-20T23:08:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/425#discussion_r16503809",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/425",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16503809"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/425#discussion_r16503809"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/425"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16507468",
        "pull_request_review_id": null,
        "id": 16507468,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTA3NDY4",
        "diff_hunk": "@@ -3,6 +3,7 @@\n Gemfile.lock\n pkg/*\n bin/\n+vendor/ruby",
        "path": ".gitignore",
        "position": null,
        "original_position": 4,
        "commit_id": "15d7b1dc28f3ba060e04ca9f3a8b77e321a943d2",
        "original_commit_id": "615befd862e69886bd67d9deb1657f2c671903bc",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I personally have a global gitignore in my home dir to skip this. I do the same thing.\n",
        "created_at": "2014-08-20T21:37:50Z",
        "updated_at": "2014-08-20T23:08:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/425#discussion_r16507468",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/425",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16507468"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/425#discussion_r16507468"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/425"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16507498",
        "pull_request_review_id": null,
        "id": 16507498,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTA3NDk4",
        "diff_hunk": "@@ -29,7 +29,8 @@ MSG\n \n   s.add_development_dependency \"bundler\", \"~> 1.3\"\n   s.add_development_dependency \"rake\"\n-  s.add_development_dependency \"rspec\", \"~> 2.14\"\n+  s.add_development_dependency \"rspec\", \"~> 2.99\"\n+  s.add_development_dependency \"rspec-its\", \"~> 1.0.1\"",
        "path": "money.gemspec",
        "position": null,
        "original_position": 6,
        "commit_id": "15d7b1dc28f3ba060e04ca9f3a8b77e321a943d2",
        "original_commit_id": "615befd862e69886bd67d9deb1657f2c671903bc",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, just remove the usage of `its` instead of bringing in the extra gem\n",
        "created_at": "2014-08-20T21:38:22Z",
        "updated_at": "2014-08-20T23:08:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/425#discussion_r16507498",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/425",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16507498"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/425#discussion_r16507498"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/425"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16507518",
        "pull_request_review_id": null,
        "id": 16507518,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTA3NTE4",
        "diff_hunk": "@@ -57,17 +57,17 @@ def setup\n     end\n \n     it \"returns true when currencies match\" do\n-      subject.send(:same_currency?, 'USD', 'USD').should be_true\n-      subject.send(:same_currency?, Money::Currency.wrap('USD'), 'USD').should be_true\n-      subject.send(:same_currency?, 'USD', Money::Currency.wrap('USD')).should be_true\n-      subject.send(:same_currency?, Money::Currency.wrap('USD'), Money::Currency.wrap('USD')).should be_true\n+      subject.send(:same_currency?, 'USD', 'USD').should be_truthy",
        "path": "spec/bank/base_spec.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "15d7b1dc28f3ba060e04ca9f3a8b77e321a943d2",
        "original_commit_id": "615befd862e69886bd67d9deb1657f2c671903bc",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "agreed\n",
        "created_at": "2014-08-20T21:38:39Z",
        "updated_at": "2014-08-20T23:08:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/425#discussion_r16507518",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/425",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/16507518"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/425#discussion_r16507518"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/425"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/17312545",
        "pull_request_review_id": null,
        "id": 17312545,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzEyNTQ1",
        "diff_hunk": "@@ -47,11 +47,27 @@ def fractional\n     # from YAML, @fractional can end up being set to a Float.\n     fractional = as_d(@fractional)\n \n-    if self.class.infinite_precision\n-      fractional\n-    else\n-      fractional.round(0, self.class.rounding_mode).to_i\n+    return_value(fractional)\n+  end\n+  \n+  # Round a given amount of money to the nearest possible amount in cash value. For\n+  # example, in Swiss francs (CHF), the smallest possible amount of cash value is\n+  # CHF 0.05. Therefore, this method rounds CHF 0.07 to CHF 0.05, and CHF 0.08 to\n+  # CHF 0.10.\n+  #\n+  # @return [Integer] when infinite_precision is false\n+  # @return [BigDecimal] when infinite_precision is true\n+  #\n+  # @see infinite_precision\n+  def round_to_nearest_cash_value\n+    unless self.currency.smallest_denomination\n+      raise 'Not supported for this currency'",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "2d7d4a70790ecde8b34c7d921499ce40447bd811",
        "original_commit_id": "b1a30668a9419ac5b89a7912343038d0e360a6a3",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "please raise a specific Money based error here, no just a bare error\n",
        "created_at": "2014-09-09T16:39:40Z",
        "updated_at": "2014-09-11T07:16:41Z",
        "html_url": "https://github.com/RubyMoney/money/pull/433#discussion_r17312545",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/433",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/17312545"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/433#discussion_r17312545"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/433"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/17312642",
        "pull_request_review_id": null,
        "id": 17312642,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzEyNjQy",
        "diff_hunk": "@@ -144,7 +145,7 @@ def to_s\n \n   describe \"#inspect\" do\n     it \"works as documented\" do\n-      expect(Money::Currency.new(:usd).inspect).to eq %Q{#<Money::Currency id: usd, priority: 1, symbol_first: true, thousands_separator: ,, html_entity: $, decimal_mark: ., name: United States Dollar, symbol: $, subunit_to_unit: 100, exponent: 2.0, iso_code: USD, iso_numeric: 840, subunit: Cent>}\n+      expect(Money::Currency.new(:usd).inspect).to eq %Q{#<Money::Currency id: usd, priority: 1, symbol_first: true, thousands_separator: ,, html_entity: $, decimal_mark: ., name: United States Dollar, symbol: $, subunit_to_unit: 100, exponent: 2.0, iso_code: USD, iso_numeric: 840, subunit: Cent, smallest_denomination: 1>}\n     end\n   end\n ",
        "path": "spec/currency_spec.rb",
        "position": 43,
        "original_position": 43,
        "commit_id": "2d7d4a70790ecde8b34c7d921499ce40447bd811",
        "original_commit_id": "b1a30668a9419ac5b89a7912343038d0e360a6a3",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd expect more test for this new functionality. Especially around the different sizes of denominations positive/negative values, etc.\n",
        "created_at": "2014-09-09T16:41:00Z",
        "updated_at": "2014-09-11T07:16:41Z",
        "html_url": "https://github.com/RubyMoney/money/pull/433#discussion_r17312642",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/433",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/17312642"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/433#discussion_r17312642"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/433"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/17353581",
        "pull_request_review_id": null,
        "id": 17353581,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzUzNTgx",
        "diff_hunk": "@@ -47,11 +50,27 @@ def fractional\n     # from YAML, @fractional can end up being set to a Float.\n     fractional = as_d(@fractional)\n \n-    if self.class.infinite_precision\n-      fractional\n-    else\n-      fractional.round(0, self.class.rounding_mode).to_i\n+    return_value(fractional)\n+  end\n+  \n+  # Round a given amount of money to the nearest possible amount in cash value. For\n+  # example, in Swiss francs (CHF), the smallest possible amount of cash value is\n+  # CHF 0.05. Therefore, this method rounds CHF 0.07 to CHF 0.05, and CHF 0.08 to\n+  # CHF 0.10.\n+  #\n+  # @return [Integer] when infinite_precision is false\n+  # @return [BigDecimal] when infinite_precision is true\n+  #\n+  # @see infinite_precision\n+  def round_to_nearest_cash_value\n+    unless self.currency.smallest_denomination\n+      raise UndefinedSmallestDenomination, 'Smallest denomination of this currency is not defined'\n     end\n+    \n+    smallest_denomination = as_d(self.currency.smallest_denomination)\n+    rounded_value = (fractional / smallest_denomination).round * smallest_denomination",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "2d7d4a70790ecde8b34c7d921499ce40447bd811",
        "original_commit_id": "718bbc853bc0f9602c71926db3a19b1a6b5b80b6",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Shouldn't we use the same rounding mode `#return_value` does?\n",
        "created_at": "2014-09-10T10:29:26Z",
        "updated_at": "2014-09-11T07:16:41Z",
        "html_url": "https://github.com/RubyMoney/money/pull/433#discussion_r17353581",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/433",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/17353581"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/433#discussion_r17353581"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/433"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/17353621",
        "pull_request_review_id": null,
        "id": 17353621,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzUzNjIx",
        "diff_hunk": "@@ -293,6 +293,62 @@ def expectation.fractional\n       end\n     end\n   end\n+  \n+  describe \"#round_to_nearest_cash_value\" do\n+    it \"rounds to the nearest possible cash value\" do",
        "path": "spec/money_spec.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "2d7d4a70790ecde8b34c7d921499ce40447bd811",
        "original_commit_id": "718bbc853bc0f9602c71926db3a19b1a6b5b80b6",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can we see the same tests with negative amounts?\n",
        "created_at": "2014-09-10T10:30:40Z",
        "updated_at": "2014-09-11T07:16:41Z",
        "html_url": "https://github.com/RubyMoney/money/pull/433#discussion_r17353621",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/433",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/17353621"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/433#discussion_r17353621"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/433"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19706048",
        "pull_request_review_id": null,
        "id": 19706048,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzA2MDQ4",
        "diff_hunk": "@@ -1797,12 +1797,12 @@\n     \"priority\": 100,\n     \"iso_code\": \"RUB\",\n     \"name\": \"Russian Ruble\",\n-    \"symbol\": \"\u0440\u0443\u0431\",\n-    \"alternate_symbols\": [\"\u0440.\", \"\u20bd\"],\n-    \"subunit\": \"Kopek\",\n+    \"symbol\": \"\u20bd\",\n+    \"alternate_symbols\": [\"\u0440\u0443\u0431.\", \"\u0440.\"],\n+    \"subunit\": \"Kopeyka\",",
        "path": "config/currency_iso.json",
        "position": null,
        "original_position": 9,
        "commit_id": "fe458403e8632a107c37ac326d9dbddcd6cfe079",
        "original_commit_id": "c9129fb370e4e1776e6fc6e2a82933721172056a",
        "user": {
            "login": "ggilder",
            "id": 331289,
            "node_id": "MDQ6VXNlcjMzMTI4OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/331289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggilder",
            "html_url": "https://github.com/ggilder",
            "followers_url": "https://api.github.com/users/ggilder/followers",
            "following_url": "https://api.github.com/users/ggilder/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggilder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggilder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggilder/subscriptions",
            "organizations_url": "https://api.github.com/users/ggilder/orgs",
            "repos_url": "https://api.github.com/users/ggilder/repos",
            "events_url": "https://api.github.com/users/ggilder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggilder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this a difference between singular and plural forms, or just the wrong word? [Wikipedia](http://en.wikipedia.org/wiki/Russian_ruble) still mostly uses \"kopek\" it seems.\n",
        "created_at": "2014-11-01T17:38:29Z",
        "updated_at": "2014-11-03T16:27:26Z",
        "html_url": "https://github.com/RubyMoney/money/pull/457#discussion_r19706048",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/457",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19706048"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/457#discussion_r19706048"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/457"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19706079",
        "pull_request_review_id": null,
        "id": 19706079,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzA2MDc5",
        "diff_hunk": "@@ -1797,12 +1797,12 @@\n     \"priority\": 100,\n     \"iso_code\": \"RUB\",\n     \"name\": \"Russian Ruble\",\n-    \"symbol\": \"\u0440\u0443\u0431\",\n-    \"alternate_symbols\": [\"\u0440.\", \"\u20bd\"],\n-    \"subunit\": \"Kopek\",\n+    \"symbol\": \"\u20bd\",\n+    \"alternate_symbols\": [\"\u0440\u0443\u0431.\", \"\u0440.\"],\n+    \"subunit\": \"Kopeyka\",\n     \"subunit_to_unit\": 100,\n     \"symbol_first\": false,\n-    \"html_entity\": \"&#x0440;&#x0443;&#x0431;\",\n+    \"html_entity\": \"&#8381;\",",
        "path": "config/currency_iso.json",
        "position": null,
        "original_position": 13,
        "commit_id": "fe458403e8632a107c37ac326d9dbddcd6cfe079",
        "original_commit_id": "c9129fb370e4e1776e6fc6e2a82933721172056a",
        "user": {
            "login": "ggilder",
            "id": 331289,
            "node_id": "MDQ6VXNlcjMzMTI4OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/331289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggilder",
            "html_url": "https://github.com/ggilder",
            "followers_url": "https://api.github.com/users/ggilder/followers",
            "following_url": "https://api.github.com/users/ggilder/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggilder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggilder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggilder/subscriptions",
            "organizations_url": "https://api.github.com/users/ggilder/orgs",
            "repos_url": "https://api.github.com/users/ggilder/repos",
            "events_url": "https://api.github.com/users/ggilder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggilder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It looks like we have a bit stronger convention of using the hex encoding; i.e. `&#x20BD;` \u2014 I think that's also typically how you see Unicode code points referred to in other documentation.\n",
        "created_at": "2014-11-01T17:41:56Z",
        "updated_at": "2014-11-03T16:27:26Z",
        "html_url": "https://github.com/RubyMoney/money/pull/457#discussion_r19706079",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/457",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19706079"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/457#discussion_r19706079"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/457"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19706096",
        "pull_request_review_id": null,
        "id": 19706096,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzA2MDk2",
        "diff_hunk": "@@ -1797,12 +1797,12 @@\n     \"priority\": 100,\n     \"iso_code\": \"RUB\",\n     \"name\": \"Russian Ruble\",\n-    \"symbol\": \"\u0440\u0443\u0431\",\n-    \"alternate_symbols\": [\"\u0440.\", \"\u20bd\"],\n-    \"subunit\": \"Kopek\",\n+    \"symbol\": \"\u20bd\",\n+    \"alternate_symbols\": [\"\u0440\u0443\u0431.\", \"\u0440.\"],\n+    \"subunit\": \"Kopeyka\",",
        "path": "config/currency_iso.json",
        "position": null,
        "original_position": 9,
        "commit_id": "fe458403e8632a107c37ac326d9dbddcd6cfe079",
        "original_commit_id": "c9129fb370e4e1776e6fc6e2a82933721172056a",
        "user": {
            "login": "newstler",
            "id": 403994,
            "node_id": "MDQ6VXNlcjQwMzk5NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/403994?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newstler",
            "html_url": "https://github.com/newstler",
            "followers_url": "https://api.github.com/users/newstler/followers",
            "following_url": "https://api.github.com/users/newstler/following{/other_user}",
            "gists_url": "https://api.github.com/users/newstler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newstler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newstler/subscriptions",
            "organizations_url": "https://api.github.com/users/newstler/orgs",
            "repos_url": "https://api.github.com/users/newstler/repos",
            "events_url": "https://api.github.com/users/newstler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newstler/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, it's my fault, I didn't look into the dictionary. In English (and many other languages) the right word is **kopeck**. The plural form is just **kopecks**. Kopeyka is how it's right in Russian. Btw, is I18n available?\n",
        "created_at": "2014-11-01T17:44:50Z",
        "updated_at": "2014-11-03T16:27:26Z",
        "html_url": "https://github.com/RubyMoney/money/pull/457#discussion_r19706096",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/457",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19706096"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/457#discussion_r19706096"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/457"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19706113",
        "pull_request_review_id": null,
        "id": 19706113,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzA2MTEz",
        "diff_hunk": "@@ -1797,12 +1797,12 @@\n     \"priority\": 100,\n     \"iso_code\": \"RUB\",\n     \"name\": \"Russian Ruble\",\n-    \"symbol\": \"\u0440\u0443\u0431\",\n-    \"alternate_symbols\": [\"\u0440.\", \"\u20bd\"],\n-    \"subunit\": \"Kopek\",\n+    \"symbol\": \"\u20bd\",\n+    \"alternate_symbols\": [\"\u0440\u0443\u0431.\", \"\u0440.\"],\n+    \"subunit\": \"Kopeyka\",\n     \"subunit_to_unit\": 100,\n     \"symbol_first\": false,\n-    \"html_entity\": \"&#x0440;&#x0443;&#x0431;\",\n+    \"html_entity\": \"&#8381;\",",
        "path": "config/currency_iso.json",
        "position": null,
        "original_position": 13,
        "commit_id": "fe458403e8632a107c37ac326d9dbddcd6cfe079",
        "original_commit_id": "c9129fb370e4e1776e6fc6e2a82933721172056a",
        "user": {
            "login": "newstler",
            "id": 403994,
            "node_id": "MDQ6VXNlcjQwMzk5NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/403994?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newstler",
            "html_url": "https://github.com/newstler",
            "followers_url": "https://api.github.com/users/newstler/followers",
            "following_url": "https://api.github.com/users/newstler/following{/other_user}",
            "gists_url": "https://api.github.com/users/newstler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newstler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newstler/subscriptions",
            "organizations_url": "https://api.github.com/users/newstler/orgs",
            "repos_url": "https://api.github.com/users/newstler/repos",
            "events_url": "https://api.github.com/users/newstler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newstler/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, I didn't notice it's Unicode and took HTML code.\n",
        "created_at": "2014-11-01T17:48:05Z",
        "updated_at": "2014-11-03T16:27:26Z",
        "html_url": "https://github.com/RubyMoney/money/pull/457#discussion_r19706113",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/457",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19706113"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/457#discussion_r19706113"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/457"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19706318",
        "pull_request_review_id": null,
        "id": 19706318,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzA2MzE4",
        "diff_hunk": "@@ -1797,12 +1797,12 @@\n     \"priority\": 100,\n     \"iso_code\": \"RUB\",\n     \"name\": \"Russian Ruble\",\n-    \"symbol\": \"\u0440\u0443\u0431\",\n-    \"alternate_symbols\": [\"\u0440.\", \"\u20bd\"],\n-    \"subunit\": \"Kopek\",\n+    \"symbol\": \"\u20bd\",\n+    \"alternate_symbols\": [\"\u0440\u0443\u0431.\", \"\u0440.\"],\n+    \"subunit\": \"Kopeyka\",",
        "path": "config/currency_iso.json",
        "position": null,
        "original_position": 9,
        "commit_id": "fe458403e8632a107c37ac326d9dbddcd6cfe079",
        "original_commit_id": "c9129fb370e4e1776e6fc6e2a82933721172056a",
        "user": {
            "login": "ggilder",
            "id": 331289,
            "node_id": "MDQ6VXNlcjMzMTI4OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/331289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggilder",
            "html_url": "https://github.com/ggilder",
            "followers_url": "https://api.github.com/users/ggilder/followers",
            "following_url": "https://api.github.com/users/ggilder/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggilder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggilder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggilder/subscriptions",
            "organizations_url": "https://api.github.com/users/ggilder/orgs",
            "repos_url": "https://api.github.com/users/ggilder/repos",
            "events_url": "https://api.github.com/users/ggilder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggilder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, I think that part of the change should be reverted then. I don't think we have i18n support for this particular part; this gem leaves localization up to your application or something like rails-i18n.\n",
        "created_at": "2014-11-01T18:18:04Z",
        "updated_at": "2014-11-03T16:27:26Z",
        "html_url": "https://github.com/RubyMoney/money/pull/457#discussion_r19706318",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/457",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19706318"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/457#discussion_r19706318"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/457"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19717253",
        "pull_request_review_id": null,
        "id": 19717253,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzE3MjUz",
        "diff_hunk": "@@ -1797,12 +1797,12 @@\n     \"priority\": 100,\n     \"iso_code\": \"RUB\",\n     \"name\": \"Russian Ruble\",\n-    \"symbol\": \"\u0440\u0443\u0431\",\n-    \"alternate_symbols\": [\"\u0440.\", \"\u20bd\"],\n-    \"subunit\": \"Kopek\",\n+    \"symbol\": \"\u20bd\",\n+    \"alternate_symbols\": [\"\u0440\u0443\u0431.\", \"\u0440.\"],\n+    \"subunit\": \"Kopeck\",",
        "path": "config/currency_iso.json",
        "position": 9,
        "original_position": 9,
        "commit_id": "fe458403e8632a107c37ac326d9dbddcd6cfe079",
        "original_commit_id": "9f3bbe1ce51e9c8c0c2ea60aca59d69854397ced",
        "user": {
            "login": "ggilder",
            "id": 331289,
            "node_id": "MDQ6VXNlcjMzMTI4OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/331289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggilder",
            "html_url": "https://github.com/ggilder",
            "followers_url": "https://api.github.com/users/ggilder/followers",
            "following_url": "https://api.github.com/users/ggilder/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggilder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggilder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggilder/subscriptions",
            "organizations_url": "https://api.github.com/users/ggilder/orgs",
            "repos_url": "https://api.github.com/users/ggilder/repos",
            "events_url": "https://api.github.com/users/ggilder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggilder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It seems like both spellings are used, but \"kopek\" seems to be more common: http://www.google.com/trends/explore#q=kopek%2C%20kopeck&cmpt=q\n",
        "created_at": "2014-11-03T01:39:45Z",
        "updated_at": "2014-11-03T16:27:26Z",
        "html_url": "https://github.com/RubyMoney/money/pull/457#discussion_r19717253",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/457",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19717253"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/457#discussion_r19717253"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/457"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19717313",
        "pull_request_review_id": null,
        "id": 19717313,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzE3MzEz",
        "diff_hunk": "@@ -1797,12 +1797,12 @@\n     \"priority\": 100,\n     \"iso_code\": \"RUB\",\n     \"name\": \"Russian Ruble\",\n-    \"symbol\": \"\u0440\u0443\u0431\",\n-    \"alternate_symbols\": [\"\u0440.\", \"\u20bd\"],\n-    \"subunit\": \"Kopek\",\n+    \"symbol\": \"\u20bd\",\n+    \"alternate_symbols\": [\"\u0440\u0443\u0431.\", \"\u0440.\"],\n+    \"subunit\": \"Kopeck\",",
        "path": "config/currency_iso.json",
        "position": 9,
        "original_position": 9,
        "commit_id": "fe458403e8632a107c37ac326d9dbddcd6cfe079",
        "original_commit_id": "9f3bbe1ce51e9c8c0c2ea60aca59d69854397ced",
        "user": {
            "login": "newstler",
            "id": 403994,
            "node_id": "MDQ6VXNlcjQwMzk5NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/403994?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newstler",
            "html_url": "https://github.com/newstler",
            "followers_url": "https://api.github.com/users/newstler/followers",
            "following_url": "https://api.github.com/users/newstler/following{/other_user}",
            "gists_url": "https://api.github.com/users/newstler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newstler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newstler/subscriptions",
            "organizations_url": "https://api.github.com/users/newstler/orgs",
            "repos_url": "https://api.github.com/users/newstler/repos",
            "events_url": "https://api.github.com/users/newstler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newstler/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, but the results are different: [Kopek](https://www.google.ru/search?newwindow=1&q=kopek) vs. [Kopeck](https://www.google.ru/search?newwindow=1&q=kopeck) ;-)\n",
        "created_at": "2014-11-03T01:46:17Z",
        "updated_at": "2014-11-03T16:27:26Z",
        "html_url": "https://github.com/RubyMoney/money/pull/457#discussion_r19717313",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/457",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19717313"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/457#discussion_r19717313"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/457"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19717327",
        "pull_request_review_id": null,
        "id": 19717327,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzE3MzI3",
        "diff_hunk": "@@ -1797,12 +1797,12 @@\n     \"priority\": 100,\n     \"iso_code\": \"RUB\",\n     \"name\": \"Russian Ruble\",\n-    \"symbol\": \"\u0440\u0443\u0431\",\n-    \"alternate_symbols\": [\"\u0440.\", \"\u20bd\"],\n-    \"subunit\": \"Kopek\",\n+    \"symbol\": \"\u20bd\",\n+    \"alternate_symbols\": [\"\u0440\u0443\u0431.\", \"\u0440.\"],\n+    \"subunit\": \"Kopeck\",",
        "path": "config/currency_iso.json",
        "position": 9,
        "original_position": 9,
        "commit_id": "fe458403e8632a107c37ac326d9dbddcd6cfe079",
        "original_commit_id": "9f3bbe1ce51e9c8c0c2ea60aca59d69854397ced",
        "user": {
            "login": "ggilder",
            "id": 331289,
            "node_id": "MDQ6VXNlcjMzMTI4OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/331289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggilder",
            "html_url": "https://github.com/ggilder",
            "followers_url": "https://api.github.com/users/ggilder/followers",
            "following_url": "https://api.github.com/users/ggilder/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggilder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggilder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggilder/subscriptions",
            "organizations_url": "https://api.github.com/users/ggilder/orgs",
            "repos_url": "https://api.github.com/users/ggilder/repos",
            "events_url": "https://api.github.com/users/ggilder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggilder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Haha... gotcha. Thanks for the cute puppies :wink: \n",
        "created_at": "2014-11-03T01:48:41Z",
        "updated_at": "2014-11-03T16:27:26Z",
        "html_url": "https://github.com/RubyMoney/money/pull/457#discussion_r19717327",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/457",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19717327"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/457#discussion_r19717327"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/457"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19717347",
        "pull_request_review_id": null,
        "id": 19717347,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzE3MzQ3",
        "diff_hunk": "@@ -1797,12 +1797,12 @@\n     \"priority\": 100,\n     \"iso_code\": \"RUB\",\n     \"name\": \"Russian Ruble\",\n-    \"symbol\": \"\u0440\u0443\u0431\",\n-    \"alternate_symbols\": [\"\u0440.\", \"\u20bd\"],\n-    \"subunit\": \"Kopek\",\n+    \"symbol\": \"\u20bd\",\n+    \"alternate_symbols\": [\"\u0440\u0443\u0431.\", \"\u0440.\"],\n+    \"subunit\": \"Kopeck\",",
        "path": "config/currency_iso.json",
        "position": 9,
        "original_position": 9,
        "commit_id": "fe458403e8632a107c37ac326d9dbddcd6cfe079",
        "original_commit_id": "9f3bbe1ce51e9c8c0c2ea60aca59d69854397ced",
        "user": {
            "login": "newstler",
            "id": 403994,
            "node_id": "MDQ6VXNlcjQwMzk5NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/403994?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newstler",
            "html_url": "https://github.com/newstler",
            "followers_url": "https://api.github.com/users/newstler/followers",
            "following_url": "https://api.github.com/users/newstler/following{/other_user}",
            "gists_url": "https://api.github.com/users/newstler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newstler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newstler/subscriptions",
            "organizations_url": "https://api.github.com/users/newstler/orgs",
            "repos_url": "https://api.github.com/users/newstler/repos",
            "events_url": "https://api.github.com/users/newstler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newstler/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're welcome, they're definitely much popular than the smallest russian coin ))\n",
        "created_at": "2014-11-03T01:50:55Z",
        "updated_at": "2014-11-03T16:27:26Z",
        "html_url": "https://github.com/RubyMoney/money/pull/457#discussion_r19717347",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/457",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19717347"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/457#discussion_r19717347"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/457"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19746754",
        "pull_request_review_id": null,
        "id": 19746754,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzQ2NzU0",
        "diff_hunk": "@@ -1797,12 +1797,12 @@\n     \"priority\": 100,\n     \"iso_code\": \"RUB\",\n     \"name\": \"Russian Ruble\",\n-    \"symbol\": \"\u0440\u0443\u0431\",\n-    \"alternate_symbols\": [\"\u0440.\", \"\u20bd\"],\n-    \"subunit\": \"Kopek\",\n+    \"symbol\": \"\u20bd\",\n+    \"alternate_symbols\": [\"\u0440\u0443\u0431.\", \"\u0440.\"],\n+    \"subunit\": \"Kopeck\",",
        "path": "config/currency_iso.json",
        "position": 9,
        "original_position": 9,
        "commit_id": "fe458403e8632a107c37ac326d9dbddcd6cfe079",
        "original_commit_id": "9f3bbe1ce51e9c8c0c2ea60aca59d69854397ced",
        "user": {
            "login": "lunks",
            "id": 91118,
            "node_id": "MDQ6VXNlcjkxMTE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/91118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lunks",
            "html_url": "https://github.com/lunks",
            "followers_url": "https://api.github.com/users/lunks/followers",
            "following_url": "https://api.github.com/users/lunks/following{/other_user}",
            "gists_url": "https://api.github.com/users/lunks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lunks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lunks/subscriptions",
            "organizations_url": "https://api.github.com/users/lunks/orgs",
            "repos_url": "https://api.github.com/users/lunks/repos",
            "events_url": "https://api.github.com/users/lunks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lunks/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It bugs me why we don't we have puppies in kopeck coins. Thanks for the PR!\n",
        "created_at": "2014-11-03T17:03:18Z",
        "updated_at": "2014-11-03T17:03:18Z",
        "html_url": "https://github.com/RubyMoney/money/pull/457#discussion_r19746754",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/457",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19746754"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/457#discussion_r19746754"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/457"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19747368",
        "pull_request_review_id": null,
        "id": 19747368,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzQ3MzY4",
        "diff_hunk": "@@ -1797,12 +1797,12 @@\n     \"priority\": 100,\n     \"iso_code\": \"RUB\",\n     \"name\": \"Russian Ruble\",\n-    \"symbol\": \"\u0440\u0443\u0431\",\n-    \"alternate_symbols\": [\"\u0440.\", \"\u20bd\"],\n-    \"subunit\": \"Kopek\",\n+    \"symbol\": \"\u20bd\",\n+    \"alternate_symbols\": [\"\u0440\u0443\u0431.\", \"\u0440.\"],\n+    \"subunit\": \"Kopeck\",",
        "path": "config/currency_iso.json",
        "position": 9,
        "original_position": 9,
        "commit_id": "fe458403e8632a107c37ac326d9dbddcd6cfe079",
        "original_commit_id": "9f3bbe1ce51e9c8c0c2ea60aca59d69854397ced",
        "user": {
            "login": "newstler",
            "id": 403994,
            "node_id": "MDQ6VXNlcjQwMzk5NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/403994?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newstler",
            "html_url": "https://github.com/newstler",
            "followers_url": "https://api.github.com/users/newstler/followers",
            "following_url": "https://api.github.com/users/newstler/following{/other_user}",
            "gists_url": "https://api.github.com/users/newstler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newstler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newstler/subscriptions",
            "organizations_url": "https://api.github.com/users/newstler/orgs",
            "repos_url": "https://api.github.com/users/newstler/repos",
            "events_url": "https://api.github.com/users/newstler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newstler/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If you're really interested, in Russian it's called _kopeyka_, from word _kopyo_, which means spear. It's because there is horseman with a spear is depicted on the reverse side of the coin. The horseman is [St. George Victory Bringer](https://en.wikipedia.org/wiki/Saint_George_and_the_Dragon).\nWelcome!\n",
        "created_at": "2014-11-03T17:12:32Z",
        "updated_at": "2014-11-03T17:12:32Z",
        "html_url": "https://github.com/RubyMoney/money/pull/457#discussion_r19747368",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/457",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/19747368"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/457#discussion_r19747368"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/457"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/22862286",
        "pull_request_review_id": null,
        "id": 22862286,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODYyMjg2",
        "diff_hunk": "@@ -28,6 +30,7 @@ class UndefinedSmallestDenomination < StandardError; end\n   def cents\n     fractional\n   end\n+  alias_method :pence, :cents",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 20,
        "commit_id": "11f838af4213962fb6e401a038c497bc0d04941a",
        "original_commit_id": "ba1cca03b20dc49e38378ff60ca99116b488f23b",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm fine with all changes but this. `cents` is a vestige from an early age of the gem that I'd like to remove for the more general `fractional`.\n",
        "created_at": "2015-01-13T13:51:22Z",
        "updated_at": "2015-01-13T13:55:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/477#discussion_r22862286",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/477",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/22862286"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/477#discussion_r22862286"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/477"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/22862669",
        "pull_request_review_id": null,
        "id": 22862669,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODYyNjY5",
        "diff_hunk": "@@ -28,6 +30,7 @@ class UndefinedSmallestDenomination < StandardError; end\n   def cents\n     fractional\n   end\n+  alias_method :pence, :cents",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 20,
        "commit_id": "11f838af4213962fb6e401a038c497bc0d04941a",
        "original_commit_id": "ba1cca03b20dc49e38378ff60ca99116b488f23b",
        "user": {
            "login": "georgemillo",
            "id": 2656485,
            "node_id": "MDQ6VXNlcjI2NTY0ODU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2656485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/georgemillo",
            "html_url": "https://github.com/georgemillo",
            "followers_url": "https://api.github.com/users/georgemillo/followers",
            "following_url": "https://api.github.com/users/georgemillo/following{/other_user}",
            "gists_url": "https://api.github.com/users/georgemillo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/georgemillo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/georgemillo/subscriptions",
            "organizations_url": "https://api.github.com/users/georgemillo/orgs",
            "repos_url": "https://api.github.com/users/georgemillo/repos",
            "events_url": "https://api.github.com/users/georgemillo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/georgemillo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Okay, I've removed it and rebased.\n\nWhy remove cents though? It seems useful to me as (I imagine) that the Money gem will be used with USD (and CAD, AUD, NZD, several other currencies which use 'cents') very frequently and this could make code more readable.\n\nThat being said, I think the name 'cents' is kinda ambiguous. If you told me in English to give you the \"cents\" from \"$12.34\", I wouldn't be sure if you meant \"1234 cents\" or \"34 cents\" (i.e. just the part after the decimal point.) A more clear name might be `in_cents`.\n",
        "created_at": "2015-01-13T13:58:15Z",
        "updated_at": "2015-01-13T13:58:28Z",
        "html_url": "https://github.com/RubyMoney/money/pull/477#discussion_r22862669",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/477",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/22862669"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/477#discussion_r22862669"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/477"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23887323",
        "pull_request_review_id": null,
        "id": 23887323,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODg3MzIz",
        "diff_hunk": "@@ -357,15 +357,15 @@\n     \"name\": \"Belarusian Ruble\",\n     \"symbol\": \"Br\",\n     \"disambiguate_symbol\": \"BYR\",\n-    \"alternate_symbols\": [\"\"],\n-    \"subunit\": \"Kapyeyka\",\n-    \"subunit_to_unit\": 100,\n+    \"alternate_symbols\": [\"\u0431\u0435\u0440. \u0440\u0443\u0431.\",\"\u0440\u0443\u0431.\", \"\u0440.\"],",
        "path": "config/currency_iso.json",
        "position": 7,
        "original_position": 7,
        "commit_id": "7810d3f8f0562987235c2ae8c04c53a16d9f74e8",
        "original_commit_id": "7810d3f8f0562987235c2ae8c04c53a16d9f74e8",
        "user": {
            "login": "alovak",
            "id": 19233,
            "node_id": "MDQ6VXNlcjE5MjMz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/19233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alovak",
            "html_url": "https://github.com/alovak",
            "followers_url": "https://api.github.com/users/alovak/followers",
            "following_url": "https://api.github.com/users/alovak/following{/other_user}",
            "gists_url": "https://api.github.com/users/alovak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alovak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alovak/subscriptions",
            "organizations_url": "https://api.github.com/users/alovak/orgs",
            "repos_url": "https://api.github.com/users/alovak/repos",
            "events_url": "https://api.github.com/users/alovak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alovak/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\u0431\u0435\u0440.?\n",
        "created_at": "2015-01-31T07:06:05Z",
        "updated_at": "2015-01-31T07:06:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/487#discussion_r23887323",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/487",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23887323"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/487#discussion_r23887323"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/487"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23891376",
        "pull_request_review_id": null,
        "id": 23891376,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODkxMzc2",
        "diff_hunk": "@@ -357,15 +357,15 @@\n     \"name\": \"Belarusian Ruble\",\n     \"symbol\": \"Br\",\n     \"disambiguate_symbol\": \"BYR\",\n-    \"alternate_symbols\": [\"\"],\n-    \"subunit\": \"Kapyeyka\",\n-    \"subunit_to_unit\": 100,\n+    \"alternate_symbols\": [\"\u0431\u0435\u0440. \u0440\u0443\u0431.\",\"\u0440\u0443\u0431.\", \"\u0440.\"],",
        "path": "config/currency_iso.json",
        "position": 7,
        "original_position": 7,
        "commit_id": "7810d3f8f0562987235c2ae8c04c53a16d9f74e8",
        "original_commit_id": "7810d3f8f0562987235c2ae8c04c53a16d9f74e8",
        "user": {
            "login": "seongreen",
            "id": 159871,
            "node_id": "MDQ6VXNlcjE1OTg3MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/159871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seongreen",
            "html_url": "https://github.com/seongreen",
            "followers_url": "https://api.github.com/users/seongreen/followers",
            "following_url": "https://api.github.com/users/seongreen/following{/other_user}",
            "gists_url": "https://api.github.com/users/seongreen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seongreen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seongreen/subscriptions",
            "organizations_url": "https://api.github.com/users/seongreen/orgs",
            "repos_url": "https://api.github.com/users/seongreen/repos",
            "events_url": "https://api.github.com/users/seongreen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seongreen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":) Mistake. Could you fix to \"\u0431\u0435\u043b.\" or need to do a pull request ?\n",
        "created_at": "2015-01-31T19:33:47Z",
        "updated_at": "2015-01-31T19:33:47Z",
        "html_url": "https://github.com/RubyMoney/money/pull/487#discussion_r23891376",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/487",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23891376"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/487#discussion_r23891376"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/487"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23891434",
        "pull_request_review_id": null,
        "id": 23891434,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODkxNDM0",
        "diff_hunk": "@@ -357,15 +357,15 @@\n     \"name\": \"Belarusian Ruble\",\n     \"symbol\": \"Br\",\n     \"disambiguate_symbol\": \"BYR\",\n-    \"alternate_symbols\": [\"\"],\n-    \"subunit\": \"Kapyeyka\",\n-    \"subunit_to_unit\": 100,\n+    \"alternate_symbols\": [\"\u0431\u0435\u0440. \u0440\u0443\u0431.\",\"\u0440\u0443\u0431.\", \"\u0440.\"],",
        "path": "config/currency_iso.json",
        "position": 7,
        "original_position": 7,
        "commit_id": "7810d3f8f0562987235c2ae8c04c53a16d9f74e8",
        "original_commit_id": "7810d3f8f0562987235c2ae8c04c53a16d9f74e8",
        "user": {
            "login": "semmons99",
            "id": 27679,
            "node_id": "MDQ6VXNlcjI3Njc5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semmons99",
            "html_url": "https://github.com/semmons99",
            "followers_url": "https://api.github.com/users/semmons99/followers",
            "following_url": "https://api.github.com/users/semmons99/following{/other_user}",
            "gists_url": "https://api.github.com/users/semmons99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semmons99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semmons99/subscriptions",
            "organizations_url": "https://api.github.com/users/semmons99/orgs",
            "repos_url": "https://api.github.com/users/semmons99/repos",
            "events_url": "https://api.github.com/users/semmons99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semmons99/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "PR please\n\nOn Sat, Jan 31, 2015 at 2:33 PM, seongreen notifications@github.com\nwrote:\n\n> > @@ -357,15 +357,15 @@\n> >      \"name\": \"Belarusian Ruble\",\n> >      \"symbol\": \"Br\",\n> >      \"disambiguate_symbol\": \"BYR\",\n> > -    \"alternate_symbols\": [\"\"],\n> > -    \"subunit\": \"Kapyeyka\",\n> > -    \"subunit_to_unit\": 100,\n> > -    \"alternate_symbols\": [\"\u0431\u0435\u0440. \u0440\u0443\u0431.\",\"\u0440\u0443\u0431.\", \"\u0440.\"],\n> >   :) Mistake. Could you fix to \"\u0431\u0435\u043b.\" or need to do a pull request ?\n> >   ---\n> >   Reply to this email directly or view it on GitHub:\n> >   https://github.com/RubyMoney/money/pull/487/files#r23891376\n",
        "created_at": "2015-01-31T19:40:35Z",
        "updated_at": "2015-01-31T19:40:35Z",
        "html_url": "https://github.com/RubyMoney/money/pull/487#discussion_r23891434",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/487",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/23891434"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/487#discussion_r23891434"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/487"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/25283507",
        "pull_request_review_id": null,
        "id": 25283507,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjgzNTA3",
        "diff_hunk": "@@ -343,6 +344,15 @@ def regexp_format(formatted, rules, decimal_mark, symbol_value)\n     end\n   end\n \n+  def translate_formatting_rules(rules)\n+    begin\n+      rules[:symbol] = I18n.t currency.iso_code, :scope => \"number.currency.symbol\", :raise => true",
        "path": "lib/money/money/formatting.rb",
        "position": 58,
        "original_position": 14,
        "commit_id": "d36f9f95c7c6e423fa1d44bfdde773d295ca1048",
        "original_commit_id": "588371c5834f905902634038f4df3b80b096dd46",
        "user": {
            "login": "ggilder",
            "id": 331289,
            "node_id": "MDQ6VXNlcjMzMTI4OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/331289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggilder",
            "html_url": "https://github.com/ggilder",
            "followers_url": "https://api.github.com/users/ggilder/followers",
            "following_url": "https://api.github.com/users/ggilder/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggilder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggilder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggilder/subscriptions",
            "organizations_url": "https://api.github.com/users/ggilder/orgs",
            "repos_url": "https://api.github.com/users/ggilder/repos",
            "events_url": "https://api.github.com/users/ggilder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggilder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This pattern seems pretty expensive in a situation where no translations are used. Can this entire behavior be made optional, as it seems like it's probably not the majority use case?\n",
        "created_at": "2015-02-24T19:27:41Z",
        "updated_at": "2015-02-24T20:24:42Z",
        "html_url": "https://github.com/RubyMoney/money/pull/499#discussion_r25283507",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/499",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/25283507"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/499#discussion_r25283507"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/499"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/25287117",
        "pull_request_review_id": null,
        "id": 25287117,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjg3MTE3",
        "diff_hunk": "@@ -343,6 +344,15 @@ def regexp_format(formatted, rules, decimal_mark, symbol_value)\n     end\n   end\n \n+  def translate_formatting_rules(rules)\n+    begin\n+      rules[:symbol] = I18n.t currency.iso_code, :scope => \"number.currency.symbol\", :raise => true",
        "path": "lib/money/money/formatting.rb",
        "position": 58,
        "original_position": 14,
        "commit_id": "d36f9f95c7c6e423fa1d44bfdde773d295ca1048",
        "original_commit_id": "588371c5834f905902634038f4df3b80b096dd46",
        "user": {
            "login": "douglasmiller",
            "id": 1467444,
            "node_id": "MDQ6VXNlcjE0Njc0NDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1467444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/douglasmiller",
            "html_url": "https://github.com/douglasmiller",
            "followers_url": "https://api.github.com/users/douglasmiller/followers",
            "following_url": "https://api.github.com/users/douglasmiller/following{/other_user}",
            "gists_url": "https://api.github.com/users/douglasmiller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/douglasmiller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/douglasmiller/subscriptions",
            "organizations_url": "https://api.github.com/users/douglasmiller/orgs",
            "repos_url": "https://api.github.com/users/douglasmiller/repos",
            "events_url": "https://api.github.com/users/douglasmiller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/douglasmiller/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah good point. I'll add a `:translate` options to the rules hash\n",
        "created_at": "2015-02-24T20:04:46Z",
        "updated_at": "2015-02-24T20:24:42Z",
        "html_url": "https://github.com/RubyMoney/money/pull/499#discussion_r25287117",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/499",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/25287117"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/499#discussion_r25287117"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/499"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/26327146",
        "pull_request_review_id": null,
        "id": 26327146,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzI3MTQ2",
        "diff_hunk": "@@ -345,7 +345,7 @@ def regexp_format(formatted, rules, decimal_mark, symbol_value)\n \n   def localize_formatting_rules(rules)\n     if currency.iso_code == \"JPY\" && I18n.locale == :ja\n-      rules[:symbol] = \"\u5186\" unless rules[:symbol] == false\n+      rules[:symbol] = \"\u5186\" if rules[:symbol] == true",
        "path": "lib/money/money/formatting.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "30f085a1f53a7c03bd45ae993b367fe3374a66d4",
        "original_commit_id": "30f085a1f53a7c03bd45ae993b367fe3374a66d4",
        "user": {
            "login": "ggilder",
            "id": 331289,
            "node_id": "MDQ6VXNlcjMzMTI4OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/331289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggilder",
            "html_url": "https://github.com/ggilder",
            "followers_url": "https://api.github.com/users/ggilder/followers",
            "following_url": "https://api.github.com/users/ggilder/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggilder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggilder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggilder/subscriptions",
            "organizations_url": "https://api.github.com/users/ggilder/orgs",
            "repos_url": "https://api.github.com/users/ggilder/repos",
            "events_url": "https://api.github.com/users/ggilder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggilder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Normally I would say just `if rules[:symbol]` instead of explicitly testing against `true`, but I don't know if that's semantically correct for the possible values of `rules[:symbol]` here... maybe @jkingdon or @semmons99 has an opinion\n",
        "created_at": "2015-03-12T17:56:24Z",
        "updated_at": "2015-03-12T17:56:24Z",
        "html_url": "https://github.com/RubyMoney/money/pull/502#discussion_r26327146",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/502",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/26327146"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/502#discussion_r26327146"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/502"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/26335709",
        "pull_request_review_id": null,
        "id": 26335709,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzM1NzA5",
        "diff_hunk": "@@ -345,7 +345,7 @@ def regexp_format(formatted, rules, decimal_mark, symbol_value)\n \n   def localize_formatting_rules(rules)\n     if currency.iso_code == \"JPY\" && I18n.locale == :ja\n-      rules[:symbol] = \"\u5186\" unless rules[:symbol] == false\n+      rules[:symbol] = \"\u5186\" if rules[:symbol] == true",
        "path": "lib/money/money/formatting.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "30f085a1f53a7c03bd45ae993b367fe3374a66d4",
        "original_commit_id": "30f085a1f53a7c03bd45ae993b367fe3374a66d4",
        "user": {
            "login": "jkingdon",
            "id": 16878,
            "node_id": "MDQ6VXNlcjE2ODc4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/16878?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jkingdon",
            "html_url": "https://github.com/jkingdon",
            "followers_url": "https://api.github.com/users/jkingdon/followers",
            "following_url": "https://api.github.com/users/jkingdon/following{/other_user}",
            "gists_url": "https://api.github.com/users/jkingdon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jkingdon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jkingdon/subscriptions",
            "organizations_url": "https://api.github.com/users/jkingdon/orgs",
            "repos_url": "https://api.github.com/users/jkingdon/repos",
            "events_url": "https://api.github.com/users/jkingdon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jkingdon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would think that we'd want `money.format(:symbol => '\u00a5')` to work, and should add a spec for that.\n\nWe do already have a spec for `expect(money.format(:symbol => false)).to eq \"1,000\"` which is the case in which `if rules[:symbol]` would not suffice.\n",
        "created_at": "2015-03-12T19:25:37Z",
        "updated_at": "2015-03-12T19:25:37Z",
        "html_url": "https://github.com/RubyMoney/money/pull/502#discussion_r26335709",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/502",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/26335709"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/502#discussion_r26335709"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/502"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/30811941",
        "pull_request_review_id": null,
        "id": 30811941,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODExOTQx",
        "diff_hunk": "@@ -238,11 +238,116 @@ Money.add_rate(\"USD\", \"EUR\", 0.5)\n Money.new(1000, \"EUR\") + Money.new(1000, \"USD\") == Money.new(1500, \"EUR\")\n ```\n \n-There is nothing stopping you from creating bank objects which scrapes\n+### Exchange rate stores\n+\n+The default bank is initialized with an in-memory store for exchange rates.\n+\n+```ruby\n+Money.default_bank = Money::Bank::VariableExchange.new(Money::RatesStore::Memory.new)\n+```\n+\n+You can pass you own store implementation, ie. for storing and retrieving rates off a database, file, cache, etc.\n+\n+```ruby\n+Money.default_bank = Money::Bank::VariableExchange.new(MyCustomStore.new)\n+```\n+\n+Stores must implement the following interface:\n+\n+```ruby\n+# Add new exchange rate.\n+# @param [String] iso_from Currency ISO code. ex. 'USD'\n+# @param [String] iso_to Currency ISO code. ex. 'CAD'\n+# @param [Numeric] rate Exchange rate. ex. 0.0016\n+#\n+# @return [Numeric] rate.\n+def add_rate(iso_from, iso_to, rate); end\n+\n+# Get rate. Must be idempotent. ie. adding the same rate must not produce duplicates.\n+# @param [String] iso_from Currency ISO code. ex. 'USD'\n+# @param [String] iso_to Currency ISO code. ex. 'CAD'\n+#\n+# @return [Numeric] rate.\n+def get_rate(iso_from, iso_to); end\n+\n+# Iterate over rate tupes (iso_from, iso_to, rate)",
        "path": "README.md",
        "position": null,
        "original_position": 37,
        "commit_id": "80313791944b2e4489d07081d6ba7cd8894f695d",
        "original_commit_id": "e9583be9215c9e75b4ddc90851df9563d88c0b0d",
        "user": {
            "login": "lunks",
            "id": 91118,
            "node_id": "MDQ6VXNlcjkxMTE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/91118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lunks",
            "html_url": "https://github.com/lunks",
            "followers_url": "https://api.github.com/users/lunks/followers",
            "following_url": "https://api.github.com/users/lunks/following{/other_user}",
            "gists_url": "https://api.github.com/users/lunks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lunks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lunks/subscriptions",
            "organizations_url": "https://api.github.com/users/lunks/orgs",
            "repos_url": "https://api.github.com/users/lunks/repos",
            "events_url": "https://api.github.com/users/lunks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lunks/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think this is a typo: _tupe_ should be _tuple_, shouldn't it?\n",
        "created_at": "2015-05-21T15:12:06Z",
        "updated_at": "2015-05-21T20:59:27Z",
        "html_url": "https://github.com/RubyMoney/money/pull/516#discussion_r30811941",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/516",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/30811941"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/516#discussion_r30811941"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/516"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/30811963",
        "pull_request_review_id": null,
        "id": 30811963,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODExOTYz",
        "diff_hunk": "@@ -238,11 +238,116 @@ Money.add_rate(\"USD\", \"EUR\", 0.5)\n Money.new(1000, \"EUR\") + Money.new(1000, \"USD\") == Money.new(1500, \"EUR\")\n ```\n \n-There is nothing stopping you from creating bank objects which scrapes\n+### Exchange rate stores\n+\n+The default bank is initialized with an in-memory store for exchange rates.\n+\n+```ruby\n+Money.default_bank = Money::Bank::VariableExchange.new(Money::RatesStore::Memory.new)\n+```\n+\n+You can pass you own store implementation, ie. for storing and retrieving rates off a database, file, cache, etc.\n+\n+```ruby\n+Money.default_bank = Money::Bank::VariableExchange.new(MyCustomStore.new)\n+```\n+\n+Stores must implement the following interface:\n+\n+```ruby\n+# Add new exchange rate.\n+# @param [String] iso_from Currency ISO code. ex. 'USD'\n+# @param [String] iso_to Currency ISO code. ex. 'CAD'\n+# @param [Numeric] rate Exchange rate. ex. 0.0016\n+#\n+# @return [Numeric] rate.\n+def add_rate(iso_from, iso_to, rate); end\n+\n+# Get rate. Must be idempotent. ie. adding the same rate must not produce duplicates.",
        "path": "README.md",
        "position": 30,
        "original_position": 30,
        "commit_id": "80313791944b2e4489d07081d6ba7cd8894f695d",
        "original_commit_id": "e9583be9215c9e75b4ddc90851df9563d88c0b0d",
        "user": {
            "login": "lunks",
            "id": 91118,
            "node_id": "MDQ6VXNlcjkxMTE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/91118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lunks",
            "html_url": "https://github.com/lunks",
            "followers_url": "https://api.github.com/users/lunks/followers",
            "following_url": "https://api.github.com/users/lunks/following{/other_user}",
            "gists_url": "https://api.github.com/users/lunks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lunks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lunks/subscriptions",
            "organizations_url": "https://api.github.com/users/lunks/orgs",
            "repos_url": "https://api.github.com/users/lunks/repos",
            "events_url": "https://api.github.com/users/lunks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lunks/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "_i.e._\n",
        "created_at": "2015-05-21T15:12:19Z",
        "updated_at": "2015-05-21T20:59:27Z",
        "html_url": "https://github.com/RubyMoney/money/pull/516#discussion_r30811963",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/516",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/30811963"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/516#discussion_r30811963"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/516"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32722251",
        "pull_request_review_id": null,
        "id": 32722251,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzIyMjUx",
        "diff_hunk": "@@ -186,6 +187,27 @@ def to_s\n       it \"raises UnknownCurrency with unknown currency\" do\n         expect { Currency.new(\"xxx\") }.to raise_error(Currency::UnknownCurrency, /xxx/)\n       end\n+\n+      it 'returns old object for the same :key' do\n+        expect(Currency.new(\"USD\").object_id).to eq(Currency.new(\"USD\").object_id)\n+        expect(Currency.new(\"USD\").object_id).to eq(Currency.new(:usd).object_id)\n+        expect(Currency.new(\"USD\").object_id).to eq(Currency.new(:USD).object_id)\n+        expect(Currency.new(\"USD\").object_id).to eq(Currency.new('usd').object_id)\n+        expect(Currency.new(\"USD\").object_id).to eq(Currency.new('Usd').object_id)",
        "path": "spec/currency_spec.rb",
        "position": null,
        "original_position": 33,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "a31dae48a9f05c5e71eac618f11bce7fa40a349f",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I hope, `.to be` would be better. Same for other examples.\n",
        "created_at": "2015-06-18T12:01:44Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32722251",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32722251"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32722251"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32722399",
        "pull_request_review_id": null,
        "id": 32722399,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzIyMzk5",
        "diff_hunk": "@@ -32,6 +34,23 @@ class UnknownCurrency < ArgumentError; end\n \n     class << self\n \n+      def new(id)\n+        id = id.to_s.downcase\n+        unless stringified_keys.include?(id)\n+          raise UnknownCurrency, \"Unknown currency '#{id}'\"\n+        end\n+\n+        instance(id.to_s.downcase) || super",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "a31dae48a9f05c5e71eac618f11bce7fa40a349f",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why not just a `instances[]`? also id is already `.to_s.downcase`'ed\n",
        "created_at": "2015-06-18T12:03:52Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32722399",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32722399"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32722399"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32722528",
        "pull_request_review_id": null,
        "id": 32722528,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzIyNTI4",
        "diff_hunk": "@@ -186,6 +187,27 @@ def to_s\n       it \"raises UnknownCurrency with unknown currency\" do\n         expect { Currency.new(\"xxx\") }.to raise_error(Currency::UnknownCurrency, /xxx/)\n       end\n+\n+      it 'returns old object for the same :key' do\n+        expect(Currency.new(\"USD\").object_id).to eq(Currency.new(\"USD\").object_id)\n+        expect(Currency.new(\"USD\").object_id).to eq(Currency.new(:usd).object_id)\n+        expect(Currency.new(\"USD\").object_id).to eq(Currency.new(:USD).object_id)\n+        expect(Currency.new(\"USD\").object_id).to eq(Currency.new('usd').object_id)\n+        expect(Currency.new(\"USD\").object_id).to eq(Currency.new('Usd').object_id)",
        "path": "spec/currency_spec.rb",
        "position": null,
        "original_position": 33,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "a31dae48a9f05c5e71eac618f11bce7fa40a349f",
        "user": {
            "login": "Funfun",
            "id": 15877,
            "node_id": "MDQ6VXNlcjE1ODc3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Funfun",
            "html_url": "https://github.com/Funfun",
            "followers_url": "https://api.github.com/users/Funfun/followers",
            "following_url": "https://api.github.com/users/Funfun/following{/other_user}",
            "gists_url": "https://api.github.com/users/Funfun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Funfun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Funfun/subscriptions",
            "organizations_url": "https://api.github.com/users/Funfun/orgs",
            "repos_url": "https://api.github.com/users/Funfun/repos",
            "events_url": "https://api.github.com/users/Funfun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Funfun/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "good one, i will change!\n",
        "created_at": "2015-06-18T12:06:08Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32722528",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32722528"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32722528"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32722577",
        "pull_request_review_id": null,
        "id": 32722577,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzIyNTc3",
        "diff_hunk": "@@ -32,6 +34,23 @@ class UnknownCurrency < ArgumentError; end\n \n     class << self\n \n+      def new(id)\n+        id = id.to_s.downcase\n+        unless stringified_keys.include?(id)\n+          raise UnknownCurrency, \"Unknown currency '#{id}'\"\n+        end\n+\n+        instance(id.to_s.downcase) || super",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "a31dae48a9f05c5e71eac618f11bce7fa40a349f",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also seems like there should be `super(id)` to use string, when it was called with sym.\n",
        "created_at": "2015-06-18T12:07:02Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32722577",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32722577"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32722577"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32722779",
        "pull_request_review_id": null,
        "id": 32722779,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzIyNzc5",
        "diff_hunk": "@@ -32,6 +34,23 @@ class UnknownCurrency < ArgumentError; end\n \n     class << self\n \n+      def new(id)\n+        id = id.to_s.downcase\n+        unless stringified_keys.include?(id)\n+          raise UnknownCurrency, \"Unknown currency '#{id}'\"\n+        end\n+\n+        instance(id.to_s.downcase) || super",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "a31dae48a9f05c5e71eac618f11bce7fa40a349f",
        "user": {
            "login": "Funfun",
            "id": 15877,
            "node_id": "MDQ6VXNlcjE1ODc3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Funfun",
            "html_url": "https://github.com/Funfun",
            "followers_url": "https://api.github.com/users/Funfun/followers",
            "following_url": "https://api.github.com/users/Funfun/following{/other_user}",
            "gists_url": "https://api.github.com/users/Funfun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Funfun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Funfun/subscriptions",
            "organizations_url": "https://api.github.com/users/Funfun/orgs",
            "repos_url": "https://api.github.com/users/Funfun/repos",
            "events_url": "https://api.github.com/users/Funfun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Funfun/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "agree, unnecessary \n",
        "created_at": "2015-06-18T12:11:45Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32722779",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32722779"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32722779"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32723478",
        "pull_request_review_id": null,
        "id": 32723478,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzIzNDc4",
        "diff_hunk": "@@ -32,6 +34,23 @@ class UnknownCurrency < ArgumentError; end\n \n     class << self\n \n+      def new(id)\n+        id = id.to_s.downcase\n+        unless stringified_keys.include?(id)\n+          raise UnknownCurrency, \"Unknown currency '#{id}'\"\n+        end\n+\n+        instance(id.to_s.downcase) || super",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "a31dae48a9f05c5e71eac618f11bce7fa40a349f",
        "user": {
            "login": "Funfun",
            "id": 15877,
            "node_id": "MDQ6VXNlcjE1ODc3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Funfun",
            "html_url": "https://github.com/Funfun",
            "followers_url": "https://api.github.com/users/Funfun/followers",
            "following_url": "https://api.github.com/users/Funfun/following{/other_user}",
            "gists_url": "https://api.github.com/users/Funfun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Funfun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Funfun/subscriptions",
            "organizations_url": "https://api.github.com/users/Funfun/orgs",
            "repos_url": "https://api.github.com/users/Funfun/repos",
            "events_url": "https://api.github.com/users/Funfun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Funfun/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good mention about passing id to super, but i'm wondering why tests still green calling without args.\n",
        "created_at": "2015-06-18T12:23:15Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32723478",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32723478"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32723478"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32723550",
        "pull_request_review_id": null,
        "id": 32723550,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzIzNTUw",
        "diff_hunk": "@@ -32,6 +34,19 @@ class UnknownCurrency < ArgumentError; end\n \n     class << self\n \n+      def new(id)\n+        id = id.to_s.downcase\n+        unless stringified_keys.include?(id)\n+          raise UnknownCurrency, \"Unknown currency '#{id}'\"\n+        end\n+\n+        instances[id] || super",
        "path": "lib/money/currency.rb",
        "position": 19,
        "original_position": 19,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "ca09a1bb71fd98aad1af19065f1c44101e0bf72d",
        "user": {
            "login": "Funfun",
            "id": 15877,
            "node_id": "MDQ6VXNlcjE1ODc3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Funfun",
            "html_url": "https://github.com/Funfun",
            "followers_url": "https://api.github.com/users/Funfun/followers",
            "following_url": "https://api.github.com/users/Funfun/following{/other_user}",
            "gists_url": "https://api.github.com/users/Funfun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Funfun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Funfun/subscriptions",
            "organizations_url": "https://api.github.com/users/Funfun/orgs",
            "repos_url": "https://api.github.com/users/Funfun/repos",
            "events_url": "https://api.github.com/users/Funfun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Funfun/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@printercu Good mention about passing id to super, but i'm wondering why are the tests still green when its called without args.\n",
        "created_at": "2015-06-18T12:24:29Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32723550",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32723550"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32723550"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32723791",
        "pull_request_review_id": null,
        "id": 32723791,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzIzNzkx",
        "diff_hunk": "@@ -186,6 +187,27 @@ def to_s\n       it \"raises UnknownCurrency with unknown currency\" do\n         expect { Currency.new(\"xxx\") }.to raise_error(Currency::UnknownCurrency, /xxx/)\n       end\n+\n+      it 'returns old object for the same :key' do\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new(\"USD\").object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new(:usd).object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new(:USD).object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new('usd').object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new('Usd').object_id)",
        "path": "spec/currency_spec.rb",
        "position": null,
        "original_position": 33,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "ca09a1bb71fd98aad1af19065f1c44101e0bf72d",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oh, i mean `expect(Currency.new(\"USD\")).to be(Currency.new(\"USD\"))`. `be` checks that objects are the same.\n",
        "created_at": "2015-06-18T12:27:29Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32723791",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32723791"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32723791"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32723919",
        "pull_request_review_id": null,
        "id": 32723919,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzIzOTE5",
        "diff_hunk": "@@ -186,6 +187,27 @@ def to_s\n       it \"raises UnknownCurrency with unknown currency\" do\n         expect { Currency.new(\"xxx\") }.to raise_error(Currency::UnknownCurrency, /xxx/)\n       end\n+\n+      it 'returns old object for the same :key' do\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new(\"USD\").object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new(:usd).object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new(:USD).object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new('usd').object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new('Usd').object_id)",
        "path": "spec/currency_spec.rb",
        "position": null,
        "original_position": 33,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "ca09a1bb71fd98aad1af19065f1c44101e0bf72d",
        "user": {
            "login": "Funfun",
            "id": 15877,
            "node_id": "MDQ6VXNlcjE1ODc3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Funfun",
            "html_url": "https://github.com/Funfun",
            "followers_url": "https://api.github.com/users/Funfun/followers",
            "following_url": "https://api.github.com/users/Funfun/following{/other_user}",
            "gists_url": "https://api.github.com/users/Funfun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Funfun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Funfun/subscriptions",
            "organizations_url": "https://api.github.com/users/Funfun/orgs",
            "repos_url": "https://api.github.com/users/Funfun/repos",
            "events_url": "https://api.github.com/users/Funfun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Funfun/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oh, i missed a point, sure, i will fix\n",
        "created_at": "2015-06-18T12:29:08Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32723919",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32723919"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32723919"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32724267",
        "pull_request_review_id": null,
        "id": 32724267,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzI0MjY3",
        "diff_hunk": "@@ -186,6 +187,27 @@ def to_s\n       it \"raises UnknownCurrency with unknown currency\" do\n         expect { Currency.new(\"xxx\") }.to raise_error(Currency::UnknownCurrency, /xxx/)\n       end\n+\n+      it 'returns old object for the same :key' do\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new(\"USD\").object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new(:usd).object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new(:USD).object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new('usd').object_id)\n+        expect(Currency.new(\"USD\").object_id).to be(Currency.new('Usd').object_id)\n+\n+        ids = []\n+        [\n+          Thread.new{ ids << Currency.new(\"USD\").object_id },\n+          Thread.new{ ids << Currency.new(\"USD\").object_id }\n+        ].each(&:join)",
        "path": "spec/currency_spec.rb",
        "position": null,
        "original_position": 39,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "ca09a1bb71fd98aad1af19065f1c44101e0bf72d",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For now this one doesn't test anything 'cause usd currency is already in a hash. You should add `Currency.instances.clear` before an example. Also this one seems to be failed in jruby.\n\nTo avoid duplication you can use `2.times.map { Thread.new {} }.each(&:join)`.\n",
        "created_at": "2015-06-18T12:33:30Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32724267",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32724267"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32724267"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32729130",
        "pull_request_review_id": null,
        "id": 32729130,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzI5MTMw",
        "diff_hunk": "@@ -32,6 +34,19 @@ class UnknownCurrency < ArgumentError; end\n \n     class << self\n \n+      def new(id)\n+        id = id.to_s.downcase\n+        unless stringified_keys.include?(id)\n+          raise UnknownCurrency, \"Unknown currency '#{id}'\"\n+        end\n+\n+        instances[id] || super",
        "path": "lib/money/currency.rb",
        "position": 19,
        "original_position": 19,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "ca09a1bb71fd98aad1af19065f1c44101e0bf72d",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Uh. seems like i didn't new ruby enough. It passes modified vars to super.\n",
        "created_at": "2015-06-18T13:29:41Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32729130",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32729130"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32729130"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32729582",
        "pull_request_review_id": null,
        "id": 32729582,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzI5NTgy",
        "diff_hunk": "@@ -186,6 +188,24 @@ def to_s\n       it \"raises UnknownCurrency with unknown currency\" do\n         expect { Currency.new(\"xxx\") }.to raise_error(Currency::UnknownCurrency, /xxx/)\n       end\n+\n+      it 'returns old object for the same :key' do\n+        expect(Currency.new(\"USD\")).to be(Currency.new(\"USD\"))\n+        expect(Currency.new(\"USD\")).to be(Currency.new(:usd))\n+        expect(Currency.new(\"USD\")).to be(Currency.new(:USD))\n+        expect(Currency.new(\"USD\")).to be(Currency.new('usd'))\n+        expect(Currency.new(\"USD\")).to be(Currency.new('Usd'))\n+\n+        ids = []\n+        [ 2.times.map{ Thread.new{ ids << Currency.new(\"USD\").object_id } } ].each(&:join)",
        "path": "spec/currency_spec.rb",
        "position": null,
        "original_position": 44,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "73ad3bc96f05288a44c752c993c01ef2864fe07d",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Usd is created 2 lines before. Maybe it'll be better to extract it to separate example.\n",
        "created_at": "2015-06-18T13:34:27Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32729582",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32729582"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32729582"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32730563",
        "pull_request_review_id": null,
        "id": 32730563,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzMwNTYz",
        "diff_hunk": "@@ -243,12 +264,11 @@ def stringify_keys\n     # @example\n     #   Money::Currency.new(:usd) #=> #<Money::Currency id: usd ...>\n     def initialize(id)\n-      id = id.to_s.downcase\n-      unless self.class.stringified_keys.include?(id)\n-        raise UnknownCurrency, \"Unknown currency '#{id}'\"\n-      end\n       @id = id.to_sym\n       initialize_data!\n+      self.class.instances_mutex.synchronize do\n+        self.class.instances[id] = self\n+      end",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 109,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "73ad3bc96f05288a44c752c993c01ef2864fe07d",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This won't help 'cause `.new` still be able to run twice. I think it's not a big deal to have few Currency instances in this case, while it's threadsafe and there should not be errors. If we really want to have same instances, we should use `thread_safe` gem with smth like this\n\n``` ruby\nalias_method :original_new, :new\ndef new(id)\n  instances[id]\nend\n\n@instanses = ThreadSafe::Hash.new { |h, k| h[k] = original_new(k) }\n# I'm not really sure if it checks and calls block atomically\n```\n",
        "created_at": "2015-06-18T13:44:36Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32730563",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32730563"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32730563"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32731142",
        "pull_request_review_id": null,
        "id": 32731142,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzMxMTQy",
        "diff_hunk": "@@ -243,12 +264,11 @@ def stringify_keys\n     # @example\n     #   Money::Currency.new(:usd) #=> #<Money::Currency id: usd ...>\n     def initialize(id)\n-      id = id.to_s.downcase\n-      unless self.class.stringified_keys.include?(id)\n-        raise UnknownCurrency, \"Unknown currency '#{id}'\"\n-      end\n       @id = id.to_sym\n       initialize_data!\n+      self.class.instances_mutex.synchronize do\n+        self.class.instances[id] = self\n+      end",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 109,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "73ad3bc96f05288a44c752c993c01ef2864fe07d",
        "user": {
            "login": "Funfun",
            "id": 15877,
            "node_id": "MDQ6VXNlcjE1ODc3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Funfun",
            "html_url": "https://github.com/Funfun",
            "followers_url": "https://api.github.com/users/Funfun/followers",
            "following_url": "https://api.github.com/users/Funfun/following{/other_user}",
            "gists_url": "https://api.github.com/users/Funfun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Funfun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Funfun/subscriptions",
            "organizations_url": "https://api.github.com/users/Funfun/orgs",
            "repos_url": "https://api.github.com/users/Funfun/repos",
            "events_url": "https://api.github.com/users/Funfun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Funfun/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also found a `thread_safe` gem useful in this case, but if are you ok with few instances, then i will remove tests for thread safety at all\n",
        "created_at": "2015-06-18T13:50:17Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32731142",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32731142"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32731142"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32731426",
        "pull_request_review_id": null,
        "id": 32731426,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzMxNDI2",
        "diff_hunk": "@@ -243,12 +264,11 @@ def stringify_keys\n     # @example\n     #   Money::Currency.new(:usd) #=> #<Money::Currency id: usd ...>\n     def initialize(id)\n-      id = id.to_s.downcase\n-      unless self.class.stringified_keys.include?(id)\n-        raise UnknownCurrency, \"Unknown currency '#{id}'\"\n-      end\n       @id = id.to_sym\n       initialize_data!\n+      self.class.instances_mutex.synchronize do\n+        self.class.instances[id] = self\n+      end",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 109,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "73ad3bc96f05288a44c752c993c01ef2864fe07d",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Or better way:\n\n``` ruby\ndef new\n  #...\n  @instanses ||= ThreadSafe::Hash.new { |h, k| h[k] = super(k) }\n  @instances[id]\nend\n```\n\nI think it can be used now (with `Hash`). And there will be no need to expose `@instance` and use it in `initialize`.\n",
        "created_at": "2015-06-18T13:53:13Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32731426",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32731426"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32731426"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32731624",
        "pull_request_review_id": null,
        "id": 32731624,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzMxNjI0",
        "diff_hunk": "@@ -243,12 +264,11 @@ def stringify_keys\n     # @example\n     #   Money::Currency.new(:usd) #=> #<Money::Currency id: usd ...>\n     def initialize(id)\n-      id = id.to_s.downcase\n-      unless self.class.stringified_keys.include?(id)\n-        raise UnknownCurrency, \"Unknown currency '#{id}'\"\n-      end\n       @id = id.to_sym\n       initialize_data!\n+      self.class.instances_mutex.synchronize do\n+        self.class.instances[id] = self\n+      end",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 109,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "73ad3bc96f05288a44c752c993c01ef2864fe07d",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's wait someone else also checks the pr. wdyt about my previous comment?\n",
        "created_at": "2015-06-18T13:54:53Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32731624",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32731624"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32731624"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32732492",
        "pull_request_review_id": null,
        "id": 32732492,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzMyNDky",
        "diff_hunk": "@@ -243,12 +264,11 @@ def stringify_keys\n     # @example\n     #   Money::Currency.new(:usd) #=> #<Money::Currency id: usd ...>\n     def initialize(id)\n-      id = id.to_s.downcase\n-      unless self.class.stringified_keys.include?(id)\n-        raise UnknownCurrency, \"Unknown currency '#{id}'\"\n-      end\n       @id = id.to_sym\n       initialize_data!\n+      self.class.instances_mutex.synchronize do\n+        self.class.instances[id] = self\n+      end",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 109,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "73ad3bc96f05288a44c752c993c01ef2864fe07d",
        "user": {
            "login": "Funfun",
            "id": 15877,
            "node_id": "MDQ6VXNlcjE1ODc3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Funfun",
            "html_url": "https://github.com/Funfun",
            "followers_url": "https://api.github.com/users/Funfun/followers",
            "following_url": "https://api.github.com/users/Funfun/following{/other_user}",
            "gists_url": "https://api.github.com/users/Funfun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Funfun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Funfun/subscriptions",
            "organizations_url": "https://api.github.com/users/Funfun/orgs",
            "repos_url": "https://api.github.com/users/Funfun/repos",
            "events_url": "https://api.github.com/users/Funfun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Funfun/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "i will push fixes\n",
        "created_at": "2015-06-18T14:02:59Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32732492",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32732492"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32732492"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32733299",
        "pull_request_review_id": null,
        "id": 32733299,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzMzMjk5",
        "diff_hunk": "@@ -243,12 +264,11 @@ def stringify_keys\n     # @example\n     #   Money::Currency.new(:usd) #=> #<Money::Currency id: usd ...>\n     def initialize(id)\n-      id = id.to_s.downcase\n-      unless self.class.stringified_keys.include?(id)\n-        raise UnknownCurrency, \"Unknown currency '#{id}'\"\n-      end\n       @id = id.to_sym\n       initialize_data!\n+      self.class.instances_mutex.synchronize do\n+        self.class.instances[id] = self\n+      end",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 109,
        "commit_id": "df4ed88215c07fdc97839c7d7b3b8284c4980f00",
        "original_commit_id": "73ad3bc96f05288a44c752c993c01ef2864fe07d",
        "user": {
            "login": "Funfun",
            "id": 15877,
            "node_id": "MDQ6VXNlcjE1ODc3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Funfun",
            "html_url": "https://github.com/Funfun",
            "followers_url": "https://api.github.com/users/Funfun/followers",
            "following_url": "https://api.github.com/users/Funfun/following{/other_user}",
            "gists_url": "https://api.github.com/users/Funfun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Funfun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Funfun/subscriptions",
            "organizations_url": "https://api.github.com/users/Funfun/orgs",
            "repos_url": "https://api.github.com/users/Funfun/repos",
            "events_url": "https://api.github.com/users/Funfun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Funfun/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "i don't think so `@instanses ||= ThreadSafe::Hash.new { |h, k| h[k] = super(k) }` is safe operation cause operator `||=` in not safe. \n",
        "created_at": "2015-06-18T14:09:44Z",
        "updated_at": "2015-06-18T14:23:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/529#discussion_r32733299",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/32733299"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/529#discussion_r32733299"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34435725",
        "pull_request_review_id": null,
        "id": 34435725,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDM1NzI1",
        "diff_hunk": "@@ -34,18 +34,17 @@ def initialize(method, currency, attribute)\n     class UnknownCurrency < ArgumentError; end\n \n     class << self\n-      alias_method :original_new, :new\n       def new(id)\n         id = id.to_s.downcase\n         unless stringified_keys.include?(id)\n           raise UnknownCurrency, \"Unknown currency '#{id}'\"\n         end\n \n-        @@mutex.synchronize { instances[id] } || super\n+        @@mutex.synchronize { instances[id] ||= super }",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 12,
        "commit_id": "d2717849d12e17aeb8eb25913292f5d5dd867f24",
        "original_commit_id": "ad07ea9ec1ff5967c69b427193afc4dfede3e439",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`instances[id] || @@mutex.synchronize { instances[id] ||= super }` should be much faster and still thread-safe, wdyt? \nalso `Hash.new -> {}` can be replaced\n",
        "created_at": "2015-07-13T06:21:14Z",
        "updated_at": "2015-07-14T17:28:30Z",
        "html_url": "https://github.com/RubyMoney/money/pull/538#discussion_r34435725",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/538",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34435725"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/538#discussion_r34435725"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/538"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34435830",
        "pull_request_review_id": null,
        "id": 34435830,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDM1ODMw",
        "diff_hunk": "@@ -34,18 +34,17 @@ def initialize(method, currency, attribute)\n     class UnknownCurrency < ArgumentError; end\n \n     class << self\n-      alias_method :original_new, :new\n       def new(id)\n         id = id.to_s.downcase\n         unless stringified_keys.include?(id)\n           raise UnknownCurrency, \"Unknown currency '#{id}'\"\n         end\n \n-        @@mutex.synchronize { instances[id] } || super\n+        @@mutex.synchronize { instances[id] ||= super }\n       end\n \n       def instances\n-        @instances ||= Hash.new { |h, k| h[k] = original_new(k) }\n+        @instances ||= Hash.new",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "d2717849d12e17aeb8eb25913292f5d5dd867f24",
        "original_commit_id": "ad07ea9ec1ff5967c69b427193afc4dfede3e439",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've missed: my variant won't be thread-safe, while this is lazy. Init could be moved out to class definition, and replaced with attr_reader.\n",
        "created_at": "2015-07-13T06:25:01Z",
        "updated_at": "2015-07-14T17:28:31Z",
        "html_url": "https://github.com/RubyMoney/money/pull/538#discussion_r34435830",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/538",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34435830"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/538#discussion_r34435830"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/538"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34445613",
        "pull_request_review_id": null,
        "id": 34445613,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDQ1NjEz",
        "diff_hunk": "@@ -34,18 +34,17 @@ def initialize(method, currency, attribute)\n     class UnknownCurrency < ArgumentError; end\n \n     class << self\n-      alias_method :original_new, :new\n       def new(id)\n         id = id.to_s.downcase\n         unless stringified_keys.include?(id)\n           raise UnknownCurrency, \"Unknown currency '#{id}'\"\n         end\n \n-        @@mutex.synchronize { instances[id] } || super\n+        @@mutex.synchronize { instances[id] ||= super }",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 12,
        "commit_id": "d2717849d12e17aeb8eb25913292f5d5dd867f24",
        "original_commit_id": "ad07ea9ec1ff5967c69b427193afc4dfede3e439",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm afraid it won't work, because access to `instances[id]` should be synchronized as well, otherwise it causes random failures.\n",
        "created_at": "2015-07-13T09:18:39Z",
        "updated_at": "2015-07-14T17:28:31Z",
        "html_url": "https://github.com/RubyMoney/money/pull/538#discussion_r34445613",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/538",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34445613"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/538#discussion_r34445613"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/538"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34445706",
        "pull_request_review_id": null,
        "id": 34445706,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDQ1NzA2",
        "diff_hunk": "@@ -34,18 +34,17 @@ def initialize(method, currency, attribute)\n     class UnknownCurrency < ArgumentError; end\n \n     class << self\n-      alias_method :original_new, :new\n       def new(id)\n         id = id.to_s.downcase\n         unless stringified_keys.include?(id)\n           raise UnknownCurrency, \"Unknown currency '#{id}'\"\n         end\n \n-        @@mutex.synchronize { instances[id] } || super\n+        @@mutex.synchronize { instances[id] ||= super }\n       end\n \n       def instances\n-        @instances ||= Hash.new { |h, k| h[k] = original_new(k) }\n+        @instances ||= Hash.new",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "d2717849d12e17aeb8eb25913292f5d5dd867f24",
        "original_commit_id": "ad07ea9ec1ff5967c69b427193afc4dfede3e439",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, we can definitely move this to class-level. I'll update the PR.\n",
        "created_at": "2015-07-13T09:20:19Z",
        "updated_at": "2015-07-14T17:28:31Z",
        "html_url": "https://github.com/RubyMoney/money/pull/538#discussion_r34445706",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/538",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34445706"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/538#discussion_r34445706"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/538"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34447779",
        "pull_request_review_id": null,
        "id": 34447779,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDQ3Nzc5",
        "diff_hunk": "@@ -34,18 +34,17 @@ def initialize(method, currency, attribute)\n     class UnknownCurrency < ArgumentError; end\n \n     class << self\n-      alias_method :original_new, :new\n       def new(id)\n         id = id.to_s.downcase\n         unless stringified_keys.include?(id)\n           raise UnknownCurrency, \"Unknown currency '#{id}'\"\n         end\n \n-        @@mutex.synchronize { instances[id] } || super\n+        @@mutex.synchronize { instances[id] ||= super }",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 12,
        "commit_id": "d2717849d12e17aeb8eb25913292f5d5dd867f24",
        "original_commit_id": "ad07ea9ec1ff5967c69b427193afc4dfede3e439",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you please provide example of concurrency? I think while there is `||=` inside `.synchronize` everything should be ok. It would just improve performance by avoiding synchronisation when it's not needed, and synchronising otherwise.\n",
        "created_at": "2015-07-13T09:51:30Z",
        "updated_at": "2015-07-14T17:28:31Z",
        "html_url": "https://github.com/RubyMoney/money/pull/538#discussion_r34447779",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/538",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34447779"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/538#discussion_r34447779"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/538"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34489129",
        "pull_request_review_id": null,
        "id": 34489129,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDg5MTI5",
        "diff_hunk": "@@ -242,6 +238,8 @@ def stringify_keys\n     #   @return [Integer] Smallest amount of cash possible (in the subunit of\n     #     this currency)\n \n+    attr_reader :instances\n+",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "d2717849d12e17aeb8eb25913292f5d5dd867f24",
        "original_commit_id": "13203b34659de1af86cb4602b63d2872d8b7cc00",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is it useful anymore?\n",
        "created_at": "2015-07-13T17:38:26Z",
        "updated_at": "2015-07-14T17:28:31Z",
        "html_url": "https://github.com/RubyMoney/money/pull/538#discussion_r34489129",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/538",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34489129"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/538#discussion_r34489129"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/538"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34555015",
        "pull_request_review_id": null,
        "id": 34555015,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NTU1MDE1",
        "diff_hunk": "@@ -242,6 +238,8 @@ def stringify_keys\n     #   @return [Integer] Smallest amount of cash possible (in the subunit of\n     #     this currency)\n \n+    attr_reader :instances\n+",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "d2717849d12e17aeb8eb25913292f5d5dd867f24",
        "original_commit_id": "13203b34659de1af86cb4602b63d2872d8b7cc00",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Forgot to remove this, should be gone now.\n",
        "created_at": "2015-07-14T10:32:34Z",
        "updated_at": "2015-07-14T17:28:31Z",
        "html_url": "https://github.com/RubyMoney/money/pull/538#discussion_r34555015",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/538",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34555015"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/538#discussion_r34555015"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/538"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34598735",
        "pull_request_review_id": null,
        "id": 34598735,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NTk4NzM1",
        "diff_hunk": "@@ -34,18 +35,17 @@ def initialize(method, currency, attribute)\n     class UnknownCurrency < ArgumentError; end\n \n     class << self\n-      alias_method :original_new, :new\n       def new(id)\n         id = id.to_s.downcase\n         unless stringified_keys.include?(id)\n           raise UnknownCurrency, \"Unknown currency '#{id}'\"\n         end\n \n-        @@mutex.synchronize { instances[id] } || super\n+        _instances[id] || @@mutex.synchronize { _instances[id] ||= super }\n       end\n \n-      def instances\n-        @instances ||= Hash.new { |h, k| h[k] = original_new(k) }\n+      def _instances",
        "path": "lib/money/currency.rb",
        "position": 25,
        "original_position": 25,
        "commit_id": "d2717849d12e17aeb8eb25913292f5d5dd867f24",
        "original_commit_id": "d2717849d12e17aeb8eb25913292f5d5dd867f24",
        "user": {
            "login": "ggilder",
            "id": 331289,
            "node_id": "MDQ6VXNlcjMzMTI4OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/331289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggilder",
            "html_url": "https://github.com/ggilder",
            "followers_url": "https://api.github.com/users/ggilder/followers",
            "following_url": "https://api.github.com/users/ggilder/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggilder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggilder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggilder/subscriptions",
            "organizations_url": "https://api.github.com/users/ggilder/orgs",
            "repos_url": "https://api.github.com/users/ggilder/repos",
            "events_url": "https://api.github.com/users/ggilder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggilder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't really see the point of this method; why not just use `@@instances` where you need it?\n",
        "created_at": "2015-07-14T18:01:35Z",
        "updated_at": "2015-07-14T18:01:35Z",
        "html_url": "https://github.com/RubyMoney/money/pull/538#discussion_r34598735",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/538",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34598735"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/538#discussion_r34598735"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/538"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34606326",
        "pull_request_review_id": null,
        "id": 34606326,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NjA2MzI2",
        "diff_hunk": "@@ -34,18 +35,17 @@ def initialize(method, currency, attribute)\n     class UnknownCurrency < ArgumentError; end\n \n     class << self\n-      alias_method :original_new, :new\n       def new(id)\n         id = id.to_s.downcase\n         unless stringified_keys.include?(id)\n           raise UnknownCurrency, \"Unknown currency '#{id}'\"\n         end\n \n-        @@mutex.synchronize { instances[id] } || super\n+        _instances[id] || @@mutex.synchronize { _instances[id] ||= super }\n       end\n \n-      def instances\n-        @instances ||= Hash.new { |h, k| h[k] = original_new(k) }\n+      def _instances",
        "path": "lib/money/currency.rb",
        "position": 25,
        "original_position": 25,
        "commit_id": "d2717849d12e17aeb8eb25913292f5d5dd867f24",
        "original_commit_id": "d2717849d12e17aeb8eb25913292f5d5dd867f24",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's just a getter for easier debugging/development/testing, that's all. That's also why I prefixed it with `_`.\n",
        "created_at": "2015-07-14T19:06:13Z",
        "updated_at": "2015-07-14T22:03:46Z",
        "html_url": "https://github.com/RubyMoney/money/pull/538#discussion_r34606326",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/538",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/34606326"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/538#discussion_r34606326"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/538"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/38055038",
        "pull_request_review_id": null,
        "id": 38055038,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU1MDM4",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end\n+    def -(other) raise TypeError; end\n+    def /(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "dad3542a3789d34aaa3a24920e640d0fb920a2ca",
        "original_commit_id": "dad3542a3789d34aaa3a24920e640d0fb920a2ca",
        "user": {
            "login": "createdbypete",
            "id": 703621,
            "node_id": "MDQ6VXNlcjcwMzYyMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/703621?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/createdbypete",
            "html_url": "https://github.com/createdbypete",
            "followers_url": "https://api.github.com/users/createdbypete/followers",
            "following_url": "https://api.github.com/users/createdbypete/following{/other_user}",
            "gists_url": "https://api.github.com/users/createdbypete/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/createdbypete/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/createdbypete/subscriptions",
            "organizations_url": "https://api.github.com/users/createdbypete/orgs",
            "repos_url": "https://api.github.com/users/createdbypete/repos",
            "events_url": "https://api.github.com/users/createdbypete/events{/privacy}",
            "received_events_url": "https://api.github.com/users/createdbypete/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would say division is valid for coercion as you would not divide `$10` by `$2`, but you would divide `$10` by `2`.\n",
        "created_at": "2015-08-27T01:41:29Z",
        "updated_at": "2015-08-27T06:34:06Z",
        "html_url": "https://github.com/RubyMoney/money/pull/535#discussion_r38055038",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/535",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/38055038"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/535#discussion_r38055038"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/535"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/38066039",
        "pull_request_review_id": null,
        "id": 38066039,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2MDM5",
        "diff_hunk": "@@ -1,4 +1,17 @@\n class Money\n+  CoercedNumber = Struct.new(:value) do\n+    include Comparable\n+\n+    def +(other) raise TypeError; end\n+    def -(other) raise TypeError; end\n+    def /(other) raise TypeError; end",
        "path": "lib/money/money/arithmetic.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "dad3542a3789d34aaa3a24920e640d0fb920a2ca",
        "original_commit_id": "dad3542a3789d34aaa3a24920e640d0fb920a2ca",
        "user": {
            "login": "createdbypete",
            "id": 703621,
            "node_id": "MDQ6VXNlcjcwMzYyMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/703621?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/createdbypete",
            "html_url": "https://github.com/createdbypete",
            "followers_url": "https://api.github.com/users/createdbypete/followers",
            "following_url": "https://api.github.com/users/createdbypete/following{/other_user}",
            "gists_url": "https://api.github.com/users/createdbypete/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/createdbypete/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/createdbypete/subscriptions",
            "organizations_url": "https://api.github.com/users/createdbypete/orgs",
            "repos_url": "https://api.github.com/users/createdbypete/repos",
            "events_url": "https://api.github.com/users/createdbypete/events{/privacy}",
            "received_events_url": "https://api.github.com/users/createdbypete/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The `%` modulo operator should also be included with the same treatment as division.\n",
        "created_at": "2015-08-27T06:35:23Z",
        "updated_at": "2015-08-27T06:35:47Z",
        "html_url": "https://github.com/RubyMoney/money/pull/535#discussion_r38066039",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/535",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/38066039"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/535#discussion_r38066039"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/535"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/57318718",
        "pull_request_review_id": null,
        "id": 57318718,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzE4NzE4",
        "diff_hunk": "@@ -1155,8 +1155,8 @@\n     \"priority\": 100,\n     \"iso_code\": \"KWD\",\n     \"name\": \"Kuwaiti Dinar\",\n-    \"symbol\": \"\u062f.\u0643\",\n-    \"alternate_symbols\": [\"K.D.\"],\n+    \"symbol\": \"K.D. \",",
        "path": "config/currency_iso.json",
        "position": 17,
        "original_position": 17,
        "commit_id": "2afea67900324e01145d4caa22dd34cfe0050d3e",
        "original_commit_id": "2afea67900324e01145d4caa22dd34cfe0050d3e",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Here is space after the last dot. Is it ok?\n",
        "created_at": "2016-03-24T13:52:59Z",
        "updated_at": "2016-03-24T13:52:59Z",
        "html_url": "https://github.com/RubyMoney/money/pull/617#discussion_r57318718",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/617",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/57318718"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/617#discussion_r57318718"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/617"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/57320637",
        "pull_request_review_id": null,
        "id": 57320637,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzIwNjM3",
        "diff_hunk": "@@ -1155,8 +1155,8 @@\n     \"priority\": 100,\n     \"iso_code\": \"KWD\",\n     \"name\": \"Kuwaiti Dinar\",\n-    \"symbol\": \"\u062f.\u0643\",\n-    \"alternate_symbols\": [\"K.D.\"],\n+    \"symbol\": \"K.D. \",",
        "path": "config/currency_iso.json",
        "position": 17,
        "original_position": 17,
        "commit_id": "2afea67900324e01145d4caa22dd34cfe0050d3e",
        "original_commit_id": "2afea67900324e01145d4caa22dd34cfe0050d3e",
        "user": {
            "login": "mark-jacobs",
            "id": 7295573,
            "node_id": "MDQ6VXNlcjcyOTU1NzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7295573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mark-jacobs",
            "html_url": "https://github.com/mark-jacobs",
            "followers_url": "https://api.github.com/users/mark-jacobs/followers",
            "following_url": "https://api.github.com/users/mark-jacobs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mark-jacobs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mark-jacobs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mark-jacobs/subscriptions",
            "organizations_url": "https://api.github.com/users/mark-jacobs/orgs",
            "repos_url": "https://api.github.com/users/mark-jacobs/repos",
            "events_url": "https://api.github.com/users/mark-jacobs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mark-jacobs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Didn't mean to create a pull request, it's closed.\n\nOn 24 March 2016 at 13:53, printercu notifications@github.com wrote:\n\n> In config/currency_iso.json\n> https://github.com/RubyMoney/money/pull/617#discussion_r57318718:\n> \n> > @@ -1155,8 +1155,8 @@\n> >      \"priority\": 100,\n> >      \"iso_code\": \"KWD\",\n> >      \"name\": \"Kuwaiti Dinar\",\n> > -    \"symbol\": \"\u062f.\u0643\",\n> > -    \"alternate_symbols\": [\"K.D.\"],\n> > -    \"symbol\": \"K.D. \",\n> \n> Here is space after the last dot. Is it ok?\n> \n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly or view it on GitHub\n> https://github.com/RubyMoney/money/pull/617/files/2afea67900324e01145d4caa22dd34cfe0050d3e#r57318718\n\n## \n\nMark Jacobs\n_Trainee Developer_\n\nhttp://www.current-rms.com/ http://www.current-rms.com/\nhttps://www.facebook.com/currentrms/ https://twitter.com/currentrms\nhttps://www.linkedin.com/company/current-rms\n\nhttp://www.current-rms.com/shows/\n\n_An inspHire Ltd http://www.insphire.com/ product_\n",
        "created_at": "2016-03-24T14:06:07Z",
        "updated_at": "2016-03-24T14:06:07Z",
        "html_url": "https://github.com/RubyMoney/money/pull/617#discussion_r57320637",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/617",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/57320637"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/617#discussion_r57320637"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/617"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/57422131",
        "pull_request_review_id": null,
        "id": 57422131,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDIyMTMx",
        "diff_hunk": "@@ -135,6 +135,17 @@\n       after  { I18n.locale = @_locale }\n     end\n \n+    context \"Locale fr-CA\" do\n+      before { @_locale = I18n.locale; I18n.locale = :\"fr-CA\" }",
        "path": "spec/money/formatting_spec.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "2d5cc69041901f379b0990638aef76d277ae998c",
        "original_commit_id": "8f2b7254198855b5fc5bcbe955e7cfc7b950460f",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you please change to `around { |ex| I18n.with_locale(smth) { ex.run } }`\n",
        "created_at": "2016-03-25T06:09:18Z",
        "updated_at": "2016-03-25T20:40:15Z",
        "html_url": "https://github.com/RubyMoney/money/pull/618#discussion_r57422131",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/618",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/57422131"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/618#discussion_r57422131"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/618"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/57468641",
        "pull_request_review_id": null,
        "id": 57468641,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY4NjQx",
        "diff_hunk": "@@ -135,6 +135,17 @@\n       after  { I18n.locale = @_locale }\n     end\n \n+    context \"Locale fr-CA\" do\n+      before { @_locale = I18n.locale; I18n.locale = :\"fr-CA\" }",
        "path": "spec/money/formatting_spec.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "2d5cc69041901f379b0990638aef76d277ae998c",
        "original_commit_id": "8f2b7254198855b5fc5bcbe955e7cfc7b950460f",
        "user": {
            "login": "hoverlover",
            "id": 169285,
            "node_id": "MDQ6VXNlcjE2OTI4NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/169285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hoverlover",
            "html_url": "https://github.com/hoverlover",
            "followers_url": "https://api.github.com/users/hoverlover/followers",
            "following_url": "https://api.github.com/users/hoverlover/following{/other_user}",
            "gists_url": "https://api.github.com/users/hoverlover/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hoverlover/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hoverlover/subscriptions",
            "organizations_url": "https://api.github.com/users/hoverlover/orgs",
            "repos_url": "https://api.github.com/users/hoverlover/repos",
            "events_url": "https://api.github.com/users/hoverlover/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hoverlover/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done!\n",
        "created_at": "2016-03-25T17:41:58Z",
        "updated_at": "2016-03-25T20:40:15Z",
        "html_url": "https://github.com/RubyMoney/money/pull/618#discussion_r57468641",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/618",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/57468641"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/618#discussion_r57468641"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/618"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67624171",
        "pull_request_review_id": null,
        "id": 67624171,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjI0MTcx",
        "diff_hunk": "@@ -41,9 +41,9 @@ class << self\n     def default_currency=(val)\n       block =\n         if val.respond_to?(:call)\n-          -> { Money::Currency.new(val.call) }",
        "path": "lib/money.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "7d37cb74421776d308a35ad1b5167baaf58ab99b",
        "original_commit_id": "71c151ab174f0382b645b1831e5de55c8aec66b1",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Any ideas why this was used in the first place?\n",
        "created_at": "2016-06-19T21:31:09Z",
        "updated_at": "2016-06-19T21:31:09Z",
        "html_url": "https://github.com/RubyMoney/money/pull/622#discussion_r67624171",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/622",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67624171"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/622#discussion_r67624171"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67795416",
        "pull_request_review_id": null,
        "id": 67795416,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3Nzk1NDE2",
        "diff_hunk": "@@ -41,9 +41,9 @@ class << self\n     def default_currency=(val)\n       block =\n         if val.respond_to?(:call)\n-          -> { Money::Currency.new(val.call) }",
        "path": "lib/money.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "7d37cb74421776d308a35ad1b5167baaf58ab99b",
        "original_commit_id": "71c151ab174f0382b645b1831e5de55c8aec66b1",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Where is this line from? Can't find it.\n",
        "created_at": "2016-06-21T01:29:32Z",
        "updated_at": "2016-06-21T01:29:32Z",
        "html_url": "https://github.com/RubyMoney/money/pull/622#discussion_r67795416",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67795416"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/622#discussion_r67795416"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67846591",
        "pull_request_review_id": null,
        "id": 67846591,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODQ2NTkx",
        "diff_hunk": "@@ -41,9 +41,9 @@ class << self\n     def default_currency=(val)\n       block =\n         if val.respond_to?(:call)\n-          -> { Money::Currency.new(val.call) }",
        "path": "lib/money.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "7d37cb74421776d308a35ad1b5167baaf58ab99b",
        "original_commit_id": "71c151ab174f0382b645b1831e5de55c8aec66b1",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You've removed it in 71c151ab174f0382b645b1831e5de55c8aec66b1\n",
        "created_at": "2016-06-21T10:48:52Z",
        "updated_at": "2016-06-21T10:48:52Z",
        "html_url": "https://github.com/RubyMoney/money/pull/622#discussion_r67846591",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/622",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67846591"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/622#discussion_r67846591"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67854143",
        "pull_request_review_id": null,
        "id": 67854143,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODU0MTQz",
        "diff_hunk": "@@ -41,9 +41,9 @@ class << self\n     def default_currency=(val)\n       block =\n         if val.respond_to?(:call)\n-          -> { Money::Currency.new(val.call) }",
        "path": "lib/money.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "7d37cb74421776d308a35ad1b5167baaf58ab99b",
        "original_commit_id": "71c151ab174f0382b645b1831e5de55c8aec66b1",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't understand question.\n",
        "created_at": "2016-06-21T11:54:38Z",
        "updated_at": "2016-06-21T11:54:38Z",
        "html_url": "https://github.com/RubyMoney/money/pull/622#discussion_r67854143",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67854143"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/622#discussion_r67854143"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67866029",
        "pull_request_review_id": null,
        "id": 67866029,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODY2MDI5",
        "diff_hunk": "@@ -41,9 +41,9 @@ class << self\n     def default_currency=(val)\n       block =\n         if val.respond_to?(:call)\n-          -> { Money::Currency.new(val.call) }",
        "path": "lib/money.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "7d37cb74421776d308a35ad1b5167baaf58ab99b",
        "original_commit_id": "71c151ab174f0382b645b1831e5de55c8aec66b1",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What was the reason for `-> { Money::Currency.new(val.call) }`? You removed it, but I'm just making sure that this wasn't a workaround for some weird use-case.\n",
        "created_at": "2016-06-21T13:21:40Z",
        "updated_at": "2016-06-21T13:21:40Z",
        "html_url": "https://github.com/RubyMoney/money/pull/622#discussion_r67866029",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/622",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67866029"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/622#discussion_r67866029"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67910186",
        "pull_request_review_id": null,
        "id": 67910186,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTEwMTg2",
        "diff_hunk": "@@ -41,9 +41,9 @@ class << self\n     def default_currency=(val)\n       block =\n         if val.respond_to?(:call)\n-          -> { Money::Currency.new(val.call) }",
        "path": "lib/money.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "7d37cb74421776d308a35ad1b5167baaf58ab99b",
        "original_commit_id": "71c151ab174f0382b645b1831e5de55c8aec66b1",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've changed to `define_method`. So why don't you comment in the last version? It'll be easy to understand.\n\nI've dropped support for returning symbol from proc `Money.default_currency = -> { :usd }`, and encouraged to return currency object (`-> { Currency.new(:usd) }`). Now there is no implicit conversion: what you return is what you get.\n",
        "created_at": "2016-06-21T17:09:49Z",
        "updated_at": "2016-06-21T17:09:49Z",
        "html_url": "https://github.com/RubyMoney/money/pull/622#discussion_r67910186",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/67910186"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/622#discussion_r67910186"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/68297327",
        "pull_request_review_id": null,
        "id": 68297327,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Mjk3MzI3",
        "diff_hunk": "@@ -41,9 +41,9 @@ class << self\n     def default_currency=(val)\n       block =\n         if val.respond_to?(:call)\n-          -> { Money::Currency.new(val.call) }",
        "path": "lib/money.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "7d37cb74421776d308a35ad1b5167baaf58ab99b",
        "original_commit_id": "71c151ab174f0382b645b1831e5de55c8aec66b1",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sure thing, what do you mean by the last version though?\n\nI don't think we should drop support for inferring currency from the returned string or symbol, since it doesn't require a lot of a handling, but is a nice feature that I'm sure people are using.\n",
        "created_at": "2016-06-23T19:15:34Z",
        "updated_at": "2016-06-23T19:15:34Z",
        "html_url": "https://github.com/RubyMoney/money/pull/622#discussion_r68297327",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/622",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/68297327"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/622#discussion_r68297327"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/69295632",
        "pull_request_review_id": null,
        "id": 69295632,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Mjk1NjMy",
        "diff_hunk": "@@ -2407,6 +2407,66 @@\n     \"thousands_separator\": \",\",\n     \"iso_numeric\": \"959\"\n   },\n+  \"xba\": {\n+    \"priority\": 100,\n+    \"iso_code\": \"XBA\",\n+    \"name\": \"European Composite Unit\",\n+    \"symbol\": \"\",\n+    \"disambiguate_symbol\": \"XBA\",\n+    \"alternate_symbols\": [],\n+    \"subunit\": \"\",\n+    \"subunit_to_unit\": 1,\n+    \"symbol_first\": false,\n+    \"html_entity\": \"\",\n+    \"decimal_mark\": \".\",\n+    \"thousands_separator\": \",\",\n+    \"iso_numeric\": \"955\"\n+  },\n+  \"xbb\": {\n+    \"priority\": 100,\n+    \"iso_code\": \"XBB\",\n+    \"name\": \"European Monetary Unit\",\n+    \"symbol\": \"\",\n+    \"disambiguate_symbol\": \"XBB\",\n+    \"alternate_symbols\": [],\n+    \"subunit\": \"\",\n+    \"subunit_to_unit\": 1,\n+    \"symbol_first\": false,\n+    \"html_entity\": \"\",\n+    \"decimal_mark\": \".\",\n+    \"thousands_separator\": \",\",\n+    \"iso_numeric\": \"956\"\n+  },\n+  \"xbc\": {\n+    \"priority\": 100,\n+    \"iso_code\": \"XBC\",\n+    \"name\": \"European Unit of Account 9\",\n+    \"symbol\": \"\",\n+    \"disambiguate_symbol\": \"XBC\",\n+    \"alternate_symbols\": [],\n+    \"subunit\": \"\",\n+    \"subunit_to_unit\": 1,\n+    \"symbol_first\": false,\n+    \"html_entity\": \"\",\n+    \"decimal_mark\": \".\",\n+    \"thousands_separator\": \",\",\n+    \"iso_numeric\": \"957\"\n+  },\n+    \"xbd\": {",
        "path": "config/currency_iso.json",
        "position": null,
        "original_position": 49,
        "commit_id": "810d1e7555f6c32a6b3ab8785c570de979cee9a4",
        "original_commit_id": "20733f54606afc17a108eb68327e66816971cebc",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "missed extra indent in here\n",
        "created_at": "2016-07-01T13:00:13Z",
        "updated_at": "2016-07-01T13:51:18Z",
        "html_url": "https://github.com/RubyMoney/money/pull/643#discussion_r69295632",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/643",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/69295632"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/643#discussion_r69295632"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/643"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/70924348",
        "pull_request_review_id": null,
        "id": 70924348,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwOTI0MzQ4",
        "diff_hunk": "@@ -216,14 +217,7 @@ def export_rates(format, file = nil, opts = {})\n           RATE_FORMATS.include? format\n \n         store.transaction do\n-          s = case format\n-          when :json\n-            JSON.dump(rates)\n-          when :ruby\n-            Marshal.dump(rates)\n-          when :yaml\n-            YAML.dump(rates)\n-          end\n+          s = FORMAT_IMPORTERS[format].send(:dump, rates)",
        "path": "lib/money/bank/variable_exchange.rb",
        "position": null,
        "original_position": 20,
        "commit_id": "703e93f43ec6d897ddf58ad77a6de64c78b304ac",
        "original_commit_id": "fef4439b6d335b67b8f30192dd5dc96722542d44",
        "user": {
            "login": "epidemian",
            "id": 722544,
            "node_id": "MDQ6VXNlcjcyMjU0NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/722544?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/epidemian",
            "html_url": "https://github.com/epidemian",
            "followers_url": "https://api.github.com/users/epidemian/followers",
            "following_url": "https://api.github.com/users/epidemian/following{/other_user}",
            "gists_url": "https://api.github.com/users/epidemian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/epidemian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/epidemian/subscriptions",
            "organizations_url": "https://api.github.com/users/epidemian/orgs",
            "repos_url": "https://api.github.com/users/epidemian/repos",
            "events_url": "https://api.github.com/users/epidemian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/epidemian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is the use of `send` here necessary? The `dump` method seemed to be public judging by the previous code, so doing `FORMAT_IMPORTERS[format].dump(rates)` should work.\n",
        "created_at": "2016-07-15T05:46:47Z",
        "updated_at": "2016-07-15T11:59:26Z",
        "html_url": "https://github.com/RubyMoney/money/pull/647#discussion_r70924348",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/647",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/70924348"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/647#discussion_r70924348"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/647"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/70924392",
        "pull_request_review_id": null,
        "id": 70924392,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwOTI0Mzky",
        "diff_hunk": "@@ -264,14 +258,7 @@ def import_rates(format, s, opts = {})\n           RATE_FORMATS.include? format\n \n         store.transaction do\n-          data = case format\n-           when :json\n-             JSON.load(s)\n-           when :ruby\n-             Marshal.load(s)\n-           when :yaml\n-             YAML.load(s)\n-           end\n+          data = FORMAT_IMPORTERS[format].send(:load, s)",
        "path": "lib/money/bank/variable_exchange.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "703e93f43ec6d897ddf58ad77a6de64c78b304ac",
        "original_commit_id": "fef4439b6d335b67b8f30192dd5dc96722542d44",
        "user": {
            "login": "epidemian",
            "id": 722544,
            "node_id": "MDQ6VXNlcjcyMjU0NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/722544?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/epidemian",
            "html_url": "https://github.com/epidemian",
            "followers_url": "https://api.github.com/users/epidemian/followers",
            "following_url": "https://api.github.com/users/epidemian/following{/other_user}",
            "gists_url": "https://api.github.com/users/epidemian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/epidemian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/epidemian/subscriptions",
            "organizations_url": "https://api.github.com/users/epidemian/orgs",
            "repos_url": "https://api.github.com/users/epidemian/repos",
            "events_url": "https://api.github.com/users/epidemian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/epidemian/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Same as above :)\n",
        "created_at": "2016-07-15T05:47:44Z",
        "updated_at": "2016-07-15T11:59:26Z",
        "html_url": "https://github.com/RubyMoney/money/pull/647#discussion_r70924392",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/647",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/70924392"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/647#discussion_r70924392"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/647"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/81346413",
        "pull_request_review_id": 2333436,
        "id": 81346413,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMzQ2NDEz",
        "diff_hunk": "@@ -433,10 +433,12 @@ def exchange_to(other_currency, &rounding_method)\n     if self.currency == other_currency\n       self\n     else\n-      @bank.exchange_with(self, other_currency, &rounding_method)\n+      @bank.exchange_with(self, other_currency, exchanged_at: exchanged_at, &rounding_method)",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "e7634fa9b1380c32c948a8f8e973b366c941f5f7",
        "original_commit_id": "b95390ab72d694cc96905141eeb0e2993e20c72b",
        "user": {
            "login": "kaspernj",
            "id": 234531,
            "node_id": "MDQ6VXNlcjIzNDUzMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/234531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kaspernj",
            "html_url": "https://github.com/kaspernj",
            "followers_url": "https://api.github.com/users/kaspernj/followers",
            "following_url": "https://api.github.com/users/kaspernj/following{/other_user}",
            "gists_url": "https://api.github.com/users/kaspernj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kaspernj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kaspernj/subscriptions",
            "organizations_url": "https://api.github.com/users/kaspernj/orgs",
            "repos_url": "https://api.github.com/users/kaspernj/repos",
            "events_url": "https://api.github.com/users/kaspernj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kaspernj/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Check arity for support for 3 arguments to keep backwards compatibility\n",
        "created_at": "2016-09-30T14:13:30Z",
        "updated_at": "2016-10-01T09:59:33Z",
        "html_url": "https://github.com/RubyMoney/money/pull/658#discussion_r81346413",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/658",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/81346413"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/658#discussion_r81346413"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/658"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/81346820",
        "pull_request_review_id": 2333878,
        "id": 81346820,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMzQ2ODIw",
        "diff_hunk": "@@ -433,10 +433,12 @@ def exchange_to(other_currency, &rounding_method)\n     if self.currency == other_currency\n       self\n     else\n-      @bank.exchange_with(self, other_currency, &rounding_method)\n+      @bank.exchange_with(self, other_currency, exchanged_at: exchanged_at, &rounding_method)",
        "path": "lib/money/money.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "e7634fa9b1380c32c948a8f8e973b366c941f5f7",
        "original_commit_id": "b95390ab72d694cc96905141eeb0e2993e20c72b",
        "user": {
            "login": "kaspernj",
            "id": 234531,
            "node_id": "MDQ6VXNlcjIzNDUzMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/234531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kaspernj",
            "html_url": "https://github.com/kaspernj",
            "followers_url": "https://api.github.com/users/kaspernj/followers",
            "following_url": "https://api.github.com/users/kaspernj/following{/other_user}",
            "gists_url": "https://api.github.com/users/kaspernj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kaspernj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kaspernj/subscriptions",
            "organizations_url": "https://api.github.com/users/kaspernj/orgs",
            "repos_url": "https://api.github.com/users/kaspernj/repos",
            "events_url": "https://api.github.com/users/kaspernj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kaspernj/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed in 5483695\n",
        "created_at": "2016-09-30T14:15:43Z",
        "updated_at": "2016-10-01T09:59:33Z",
        "html_url": "https://github.com/RubyMoney/money/pull/658#discussion_r81346820",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/658",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/81346820"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/658#discussion_r81346820"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/658"
            }
        },
        "in_reply_to_id": 81346413
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/85510586",
        "pull_request_review_id": 6223108,
        "id": 85510586,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NTEwNTg2",
        "diff_hunk": "@@ -387,7 +387,11 @@ def localize_formatting_rules(rules)\n   def symbol_value_from(rules)\n     if rules.has_key?(:symbol)\n       if rules[:symbol] === true\n-        symbol\n+        if rules[:disambiguate] and currency.disambiguate_symbol",
        "path": "lib/money/money/formatting.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "f401e30d9144bba1ff4ca607bb0b3ff85f8b31af",
        "original_commit_id": "13f646b68a27736d6687423c03577b19ee638d8e",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please use `&&` instead\n",
        "created_at": "2016-10-28T10:59:28Z",
        "updated_at": "2016-10-28T20:33:27Z",
        "html_url": "https://github.com/RubyMoney/money/pull/663#discussion_r85510586",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/663",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/85510586"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/663#discussion_r85510586"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/663"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/85510638",
        "pull_request_review_id": 6223108,
        "id": 85510638,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NTEwNjM4",
        "diff_hunk": "@@ -22,6 +22,7 @@ Chad Boyd\n Choongmin Lee\n Chris Kampmeier\n Christian Billen\n+Christopher Locke",
        "path": "AUTHORS",
        "position": null,
        "original_position": 4,
        "commit_id": "f401e30d9144bba1ff4ca607bb0b3ff85f8b31af",
        "original_commit_id": "13f646b68a27736d6687423c03577b19ee638d8e",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is updated automatically, please revert this change\n",
        "created_at": "2016-10-28T11:00:04Z",
        "updated_at": "2016-10-28T20:33:27Z",
        "html_url": "https://github.com/RubyMoney/money/pull/663#discussion_r85510638",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/663",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/85510638"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/663#discussion_r85510638"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/663"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/94125574",
        "pull_request_review_id": 14655994,
        "id": 94125574,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0MTI1NTc0",
        "diff_hunk": "@@ -1,6 +1,6 @@\n source 'https://rubygems.org'\n \n-gem 'coveralls', :require => false\n+gem 'coveralls', '~> 0.8.17', :require => false",
        "path": "Gemfile",
        "position": null,
        "original_position": 4,
        "commit_id": "ad7794c8294a726793405d08976c2e45789da851",
        "original_commit_id": "8a9a7a115fd4bba1f901e950c0be7fd4b51ecd3e",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`>=` should work better. `~>` would not allow to use `0.9.x` in future.",
        "created_at": "2016-12-29T11:12:47Z",
        "updated_at": "2017-01-03T10:52:53Z",
        "html_url": "https://github.com/RubyMoney/money/pull/673#discussion_r94125574",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/673",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/94125574"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/673#discussion_r94125574"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/673"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/94125966",
        "pull_request_review_id": 14656413,
        "id": 94125966,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0MTI1OTY2",
        "diff_hunk": "@@ -1,6 +1,6 @@\n source 'https://rubygems.org'\n \n-gem 'coveralls', :require => false\n+gem 'coveralls', '~> 0.8.17', :require => false",
        "path": "Gemfile",
        "position": null,
        "original_position": 4,
        "commit_id": "ad7794c8294a726793405d08976c2e45789da851",
        "original_commit_id": "8a9a7a115fd4bba1f901e950c0be7fd4b51ecd3e",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good point, thanks!",
        "created_at": "2016-12-29T11:19:11Z",
        "updated_at": "2017-01-03T10:52:53Z",
        "html_url": "https://github.com/RubyMoney/money/pull/673#discussion_r94125966",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/673",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/94125966"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/673#discussion_r94125966"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/673"
            }
        },
        "in_reply_to_id": 94125574
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/109849668",
        "pull_request_review_id": 30976506,
        "id": 109849668,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTg0OTY2OA==",
        "diff_hunk": "@@ -1253,7 +1253,7 @@\n     \"subunit\": \"Cent\",\n     \"subunit_to_unit\": 100,\n     \"symbol_first\": false,\n-    \"html_entity\": \"&#x0BF9;\",\n+    \"html_entity\": \"\u20a8\",",
        "path": "config/currency_iso.json",
        "position": null,
        "original_position": 5,
        "commit_id": "e111bf5a4da3c95b5ffdada7f05522ded6c371ee",
        "original_commit_id": "49be6770627ccdb5d00883c3f20dce1433da97f1",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You are right, the previous entity was wrong, but the new one should be `&#8360;`, not a unicode character",
        "created_at": "2017-04-05T07:49:55Z",
        "updated_at": "2017-04-05T11:02:25Z",
        "html_url": "https://github.com/RubyMoney/money/pull/694#discussion_r109849668",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/694",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/109849668"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/694#discussion_r109849668"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/694"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/109853298",
        "pull_request_review_id": 30980361,
        "id": 109853298,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTg1MzI5OA==",
        "diff_hunk": "@@ -1253,7 +1253,7 @@\n     \"subunit\": \"Cent\",\n     \"subunit_to_unit\": 100,\n     \"symbol_first\": false,\n-    \"html_entity\": \"&#x0BF9;\",\n+    \"html_entity\": \"\u20a8\",",
        "path": "config/currency_iso.json",
        "position": null,
        "original_position": 5,
        "commit_id": "e111bf5a4da3c95b5ffdada7f05522ded6c371ee",
        "original_commit_id": "49be6770627ccdb5d00883c3f20dce1433da97f1",
        "user": {
            "login": "dilumn",
            "id": 5271382,
            "node_id": "MDQ6VXNlcjUyNzEzODI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5271382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dilumn",
            "html_url": "https://github.com/dilumn",
            "followers_url": "https://api.github.com/users/dilumn/followers",
            "following_url": "https://api.github.com/users/dilumn/following{/other_user}",
            "gists_url": "https://api.github.com/users/dilumn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dilumn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dilumn/subscriptions",
            "organizations_url": "https://api.github.com/users/dilumn/orgs",
            "repos_url": "https://api.github.com/users/dilumn/repos",
            "events_url": "https://api.github.com/users/dilumn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dilumn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ok I'll updated the pull request within today",
        "created_at": "2017-04-05T08:09:50Z",
        "updated_at": "2017-04-05T11:02:25Z",
        "html_url": "https://github.com/RubyMoney/money/pull/694#discussion_r109853298",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/694",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/109853298"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/694#discussion_r109853298"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/694"
            }
        },
        "in_reply_to_id": 109849668
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/109866917",
        "pull_request_review_id": 30995190,
        "id": 109866917,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTg2NjkxNw==",
        "diff_hunk": "@@ -1253,7 +1253,7 @@\n     \"subunit\": \"Cent\",\n     \"subunit_to_unit\": 100,\n     \"symbol_first\": false,\n-    \"html_entity\": \"&#x0BF9;\",\n+    \"html_entity\": \"\u20a8\",",
        "path": "config/currency_iso.json",
        "position": null,
        "original_position": 5,
        "commit_id": "e111bf5a4da3c95b5ffdada7f05522ded6c371ee",
        "original_commit_id": "49be6770627ccdb5d00883c3f20dce1433da97f1",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Great! I'll merge it and release an update soon after",
        "created_at": "2017-04-05T09:18:01Z",
        "updated_at": "2017-04-05T11:02:25Z",
        "html_url": "https://github.com/RubyMoney/money/pull/694#discussion_r109866917",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/694",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/109866917"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/694#discussion_r109866917"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/694"
            }
        },
        "in_reply_to_id": 109849668
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/110840183",
        "pull_request_review_id": 32039625,
        "id": 110840183,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDg0MDE4Mw==",
        "diff_hunk": "@@ -1584,6 +1584,7 @@\n     \"iso_code\": \"NIO\",\n     \"name\": \"Nicaraguan C\u00f3rdoba\",\n     \"symbol\": \"C$\",\n+    \"disambiguate_symbol\": \"NIO$\",",
        "path": "config/currency_iso.json",
        "position": 4,
        "original_position": 4,
        "commit_id": "1f450f017ddbb81ca1f8fd01f0786fa72128af1b",
        "original_commit_id": "1f450f017ddbb81ca1f8fd01f0786fa72128af1b",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this actually being used anywhere? I've tried googling, but unfortunately found no results\u2026",
        "created_at": "2017-04-11T08:22:08Z",
        "updated_at": "2017-04-11T08:22:16Z",
        "html_url": "https://github.com/RubyMoney/money/pull/698#discussion_r110840183",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/698",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/110840183"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/698#discussion_r110840183"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/698"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/110960682",
        "pull_request_review_id": 32169837,
        "id": 110960682,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDk2MDY4Mg==",
        "diff_hunk": "@@ -1584,6 +1584,7 @@\n     \"iso_code\": \"NIO\",\n     \"name\": \"Nicaraguan C\u00f3rdoba\",\n     \"symbol\": \"C$\",\n+    \"disambiguate_symbol\": \"NIO$\",",
        "path": "config/currency_iso.json",
        "position": 4,
        "original_position": 4,
        "commit_id": "1f450f017ddbb81ca1f8fd01f0786fa72128af1b",
        "original_commit_id": "1f450f017ddbb81ca1f8fd01f0786fa72128af1b",
        "user": {
            "login": "archana-juvo",
            "id": 21180573,
            "node_id": "MDQ6VXNlcjIxMTgwNTcz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/21180573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/archana-juvo",
            "html_url": "https://github.com/archana-juvo",
            "followers_url": "https://api.github.com/users/archana-juvo/followers",
            "following_url": "https://api.github.com/users/archana-juvo/following{/other_user}",
            "gists_url": "https://api.github.com/users/archana-juvo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/archana-juvo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/archana-juvo/subscriptions",
            "organizations_url": "https://api.github.com/users/archana-juvo/orgs",
            "repos_url": "https://api.github.com/users/archana-juvo/repos",
            "events_url": "https://api.github.com/users/archana-juvo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/archana-juvo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Symbol `C$` is same for CAD and NIO. That's why I added `NIO$` like how there is `CAD$`. This wasn't an issue in this code before as `symbol_before` was set to false, which was wrong and got fixed in earlier commit.",
        "created_at": "2017-04-11T17:11:44Z",
        "updated_at": "2017-04-11T17:11:44Z",
        "html_url": "https://github.com/RubyMoney/money/pull/698#discussion_r110960682",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/698",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/110960682"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/698#discussion_r110960682"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/698"
            }
        },
        "in_reply_to_id": 110840183
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/110989862",
        "pull_request_review_id": 32201511,
        "id": 110989862,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDk4OTg2Mg==",
        "diff_hunk": "@@ -1584,6 +1584,7 @@\n     \"iso_code\": \"NIO\",\n     \"name\": \"Nicaraguan C\u00f3rdoba\",\n     \"symbol\": \"C$\",\n+    \"disambiguate_symbol\": \"NIO$\",",
        "path": "config/currency_iso.json",
        "position": 4,
        "original_position": 4,
        "commit_id": "1f450f017ddbb81ca1f8fd01f0786fa72128af1b",
        "original_commit_id": "1f450f017ddbb81ca1f8fd01f0786fa72128af1b",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, I see. I guess we can add this, since it's a very rare use case when you'll have these two currencies formatted with their symbols.",
        "created_at": "2017-04-11T19:14:57Z",
        "updated_at": "2017-04-11T19:14:57Z",
        "html_url": "https://github.com/RubyMoney/money/pull/698#discussion_r110989862",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/698",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/110989862"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/698#discussion_r110989862"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/698"
            }
        },
        "in_reply_to_id": 110840183
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/158582539",
        "pull_request_review_id": 85423402,
        "id": 158582539,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODU4MjUzOQ==",
        "diff_hunk": "@@ -618,9 +618,9 @@ def m.amount\n       it \"does not lose pennies\" do\n         moneys = Money.us_dollar(-100).allocate([0.333, 0.333, 0.333])\n \n-        expect(moneys[0].cents).to eq -34\n-        expect(moneys[1].cents).to eq -33\n-        expect(moneys[2].cents).to eq -33\n+        expect(moneys[0].cents).to eq(-34)\n+        expect(moneys[1].cents).to eq(-33)\n+        expect(moneys[2].cents).to eq(-33)",
        "path": "spec/money_spec.rb",
        "position": 18,
        "original_position": 18,
        "commit_id": "fae23e7f95ae7900e84d2a1cfe98f30b2151aad1",
        "original_commit_id": "fae23e7f95ae7900e84d2a1cfe98f30b2151aad1",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\ud83d\udc4d ^",
        "created_at": "2017-12-23T13:37:09Z",
        "updated_at": "2017-12-23T13:37:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/735#discussion_r158582539",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/735",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/158582539"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/735#discussion_r158582539"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/735"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/178440094",
        "pull_request_review_id": 108500814,
        "id": 178440094,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODQ0MDA5NA==",
        "diff_hunk": "@@ -312,8 +312,9 @@ def marshal_dump; end\n The following example implements an `ActiveRecord` store to save exchange rates to a database.\n \n ```ruby\n-# DB columns :from[String], :to[String], :rate[Float]\n+# rails g model exchange_rate from:string to:string rate:float\n \n+# for Rails 5 replace ActiveRecord::Base to ApplicationRecord",
        "path": "README.md",
        "position": null,
        "original_position": 7,
        "commit_id": "9754961ca47cca392b37d26d88c33d54829a9769",
        "original_commit_id": "d26edc5573eea85a5a0f130b9db0402531340f73",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`with` instead of `to`",
        "created_at": "2018-03-31T19:33:08Z",
        "updated_at": "2018-04-01T18:47:22Z",
        "html_url": "https://github.com/RubyMoney/money/pull/758#discussion_r178440094",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/758",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/178440094"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/758#discussion_r178440094"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/758"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/178466111",
        "pull_request_review_id": 108526146,
        "id": 178466111,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODQ2NjExMQ==",
        "diff_hunk": "@@ -312,8 +312,9 @@ def marshal_dump; end\n The following example implements an `ActiveRecord` store to save exchange rates to a database.\n \n ```ruby\n-# DB columns :from[String], :to[String], :rate[Float]\n+# rails g model exchange_rate from:string to:string rate:float\n \n+# for Rails 5 replace ActiveRecord::Base to ApplicationRecord",
        "path": "README.md",
        "position": null,
        "original_position": 7,
        "commit_id": "9754961ca47cca392b37d26d88c33d54829a9769",
        "original_commit_id": "d26edc5573eea85a5a0f130b9db0402531340f73",
        "user": {
            "login": "spk",
            "id": 98590,
            "node_id": "MDQ6VXNlcjk4NTkw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/98590?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spk",
            "html_url": "https://github.com/spk",
            "followers_url": "https://api.github.com/users/spk/followers",
            "following_url": "https://api.github.com/users/spk/following{/other_user}",
            "gists_url": "https://api.github.com/users/spk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spk/subscriptions",
            "organizations_url": "https://api.github.com/users/spk/orgs",
            "repos_url": "https://api.github.com/users/spk/repos",
            "events_url": "https://api.github.com/users/spk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks @antstorm I just amended the commit",
        "created_at": "2018-04-01T18:47:58Z",
        "updated_at": "2018-04-01T18:47:58Z",
        "html_url": "https://github.com/RubyMoney/money/pull/758#discussion_r178466111",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/758",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/178466111"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/758#discussion_r178466111"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/758"
            }
        },
        "in_reply_to_id": 178440094
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/178988641",
        "pull_request_review_id": 109148271,
        "id": 178988641,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODk4ODY0MQ==",
        "diff_hunk": "@@ -1,23 +1,24 @@\n+---\n language: ruby\n sudo: false\n rvm:\n   - 1.9.3\n-  - 2.0.0\n-  - 2.1.10\n-  - 2.2.9\n-  - 2.3.6\n-  - 2.4.3\n-  - 2.5.0\n-  - rbx-2\n+  - 2.0\n+  - 2.1\n+  - 2.2\n+  - 2.3\n+  - 2.4\n+  - 2.5.1",
        "path": ".travis.yml",
        "position": null,
        "original_position": 18,
        "commit_id": "d548ee427bc8e6e308f224897231823f0e86fa04",
        "original_commit_id": "661d7e46ce71f81955509682586c0a34a6023f87",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is this different from all the other version definitions?",
        "created_at": "2018-04-03T23:16:52Z",
        "updated_at": "2018-04-04T11:42:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/759#discussion_r178988641",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/759",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/178988641"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/759#discussion_r178988641"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/759"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/179110189",
        "pull_request_review_id": 109290025,
        "id": 179110189,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTExMDE4OQ==",
        "diff_hunk": "@@ -1,23 +1,24 @@\n+---\n language: ruby\n sudo: false\n rvm:\n   - 1.9.3\n-  - 2.0.0\n-  - 2.1.10\n-  - 2.2.9\n-  - 2.3.6\n-  - 2.4.3\n-  - 2.5.0\n-  - rbx-2\n+  - 2.0\n+  - 2.1\n+  - 2.2\n+  - 2.3\n+  - 2.4\n+  - 2.5.1",
        "path": ".travis.yml",
        "position": null,
        "original_position": 18,
        "commit_id": "d548ee427bc8e6e308f224897231823f0e86fa04",
        "original_commit_id": "661d7e46ce71f81955509682586c0a34a6023f87",
        "user": {
            "login": "spk",
            "id": 98590,
            "node_id": "MDQ6VXNlcjk4NTkw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/98590?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spk",
            "html_url": "https://github.com/spk",
            "followers_url": "https://api.github.com/users/spk/followers",
            "following_url": "https://api.github.com/users/spk/following{/other_user}",
            "gists_url": "https://api.github.com/users/spk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spk/subscriptions",
            "organizations_url": "https://api.github.com/users/spk/orgs",
            "repos_url": "https://api.github.com/users/spk/repos",
            "events_url": "https://api.github.com/users/spk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed in d548ee427bc8e6e308f224897231823f0e86fa04",
        "created_at": "2018-04-04T11:43:17Z",
        "updated_at": "2018-04-04T11:43:17Z",
        "html_url": "https://github.com/RubyMoney/money/pull/759#discussion_r179110189",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/759",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/179110189"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/759#discussion_r179110189"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/759"
            }
        },
        "in_reply_to_id": 178988641
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187900652",
        "pull_request_review_id": 119770717,
        "id": 187900652,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzkwMDY1Mg==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 28,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`until remaining_parts.empty? do` perhaps?",
        "created_at": "2018-05-14T10:14:33Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r187900652",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187900652"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r187900652"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187938993",
        "pull_request_review_id": 119770717,
        "id": 187938993,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzkzODk5Mw==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think the strategy is brilliant! \ud83c\udfc6\r\n\r\nI tried to come up with a \"less imperative\" version, but could only golf it as far as this (which I don't really like because of the indexing mess):\r\n\r\n```ruby\r\n    def generate\r\n      remaining_amount = amount\r\n\r\n      parts.reverse.map.with_index do |part, i|\r\n        current_split = remaining_amount * part / parts[0..(-i-1)].inject(0, :+)\r\n        current_split = current_split.truncate if whole_amounts\r\n\r\n        remaining_amount -= current_split\r\n\r\n        current_split\r\n      end.reverse\r\n    end\r\n```",
        "created_at": "2018-05-14T12:44:59Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r187938993",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187938993"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r187938993"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187945932",
        "pull_request_review_id": 119824826,
        "id": 187945932,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk0NTkzMg==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 28,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`while x.any?`?",
        "created_at": "2018-05-14T13:09:02Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r187945932",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187945932"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r187945932"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187900652
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187947238",
        "pull_request_review_id": 119826471,
        "id": 187947238,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk0NzIzOA==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end\n+\n+    private\n+\n+    attr_reader :amount, :parts, :whole_amounts\n+\n+    def parse_parts(parts_or_number)",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "While this is so simple I would inline it with `parts = Array.new(parts, 1) if parts.is_a?(Numeric)` in initialize.",
        "created_at": "2018-05-14T13:13:34Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r187947238",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187947238"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r187947238"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187948794",
        "pull_request_review_id": 119828363,
        "id": 187948794,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk0ODc5NA==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should `.ceil` instead of `.truncate` allow to avoid double reverse?",
        "created_at": "2018-05-14T13:18:19Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r187948794",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187948794"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r187948794"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187938993
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187951855",
        "pull_request_review_id": 119832222,
        "id": 187951855,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk1MTg1NQ==",
        "diff_hunk": "@@ -463,49 +464,27 @@ def as_euro\n     exchange_to(\"EUR\")\n   end\n \n-  # Allocates money between different parties without losing pennies.\n-  # After the mathematical split has been performed, leftover pennies will\n-  # be distributed round-robin amongst the parties. This means that parties\n-  # listed first will likely receive more pennies than ones that are listed later\n+  # Splits a given amount in parts without loosing pennies. The left-over pennies will be\n+  # distributed round-robin amongst the parties. This means that parties listed first will likely\n+  # receive more pennies than ones that are listed later.\n   #\n-  # @param [Array<Numeric>] splits [2, 1, 1] to give twice as much to party1 as party2 or party3\n-  #   which results in 50% of the cash to party1, 25% to party2, and 25% to party3.\n+  # @param [Array<Numeric>, Numeric] pass [2, 1, 1] to give twice as much to party1 as party2 or\n+  # party3 which results in 50% of the cash to party1, 25% to party2, and 25% to party3. Passing a\n+  # number instead of an array will split the amount evenly (without loosing pennies when rounding).\n   #\n   # @return [Array<Money>]\n   #\n   # @example\n-  #   Money.new(5,   \"USD\").allocate([0.3, 0.7])         #=> [Money.new(2), Money.new(3)]\n+  #   Money.new(5,   \"USD\").allocate([0.3, 0.7]) #=> [Money.new(2), Money.new(3)]\n   #   Money.new(100, \"USD\").allocate([1, 1, 1]) #=> [Money.new(34), Money.new(33), Money.new(33)]\n+  #   Money.new(100, \"USD\").allocate(2) #=> [Money.new(50), Money.new(50)]\n+  #   Money.new(100, \"USD\").allocate(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n   #\n-  def allocate(splits)\n-    amounts, left_over = amounts_from_splits(splits)\n-\n-    unless self.class.infinite_precision\n-      delta = left_over > 0 ? 1 : -1\n-      # Distribute left over pennies amongst allocations\n-      left_over.to_i.abs.times { |i| amounts[i % amounts.length] += delta }\n-    end\n-\n-    amounts.collect { |fractional| self.class.new(fractional, currency) }\n-  end\n-\n-  # Split money amongst parties evenly without losing pennies.\n-  #\n-  # @param [Numeric] num number of parties.\n-  #\n-  # @return [Array<Money>]\n-  #\n-  # @example\n-  #   Money.new(100, \"USD\").split(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n-  def split(num)\n-    raise ArgumentError, \"need at least one party\" if num < 1\n-\n-    if self.class.infinite_precision\n-      split_infinite(num)\n-    else\n-      split_flat(num)\n-    end\n+  def allocate(parts)",
        "path": "lib/money/money.rb",
        "position": 63,
        "original_position": 63,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "WDYT about extracting this methods to `Money::Allocate` and including it into Money? With @ct-clearhaus 's suggestions `generate` becomes clean and straightforward, so it can be used without instantiating an object and be implemented as private method or class method of new module?",
        "created_at": "2018-05-14T13:27:51Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r187951855",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187951855"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r187951855"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187992954",
        "pull_request_review_id": 119882395,
        "id": 187992954,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk5Mjk1NA==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not bad thinking! However, the `reverse` is there to leave the \"extra pennies\" (that are left \"in the end\" of the `map`) to the first parts.\r\n\r\nFor instance, if we are to divide `amount = 10` into `parts = [1,1,2]` (spec in line 83); the `map` \"loops\" would have this before subtracting from `remaining_amount`:\r\n```\r\n[part, i, remaining_amount.to_s, current_split.to_s]\r\n[2   , 0, \"10\"                 , \"5\"]\r\n[1   , 1, \"5\"                  , \"2\"]\r\n[1   , 2, \"3\"                  , \"3\"]\r\n```\r\n\r\nOr, slightly more intricate, if we divide `amount = BigDecimal(10)` into `parts = [1,1,1]` with `whole_amounts = false` (spec in line 105):\r\n```\r\n[part, i, remaining_amount.to_s      , current_split.to_s]\r\n[1   , 0, \"0.1E3\"                    , \"0.33333333333333333333E2\"]\r\n[1   , 1, \"0.66666666666666666667E2\" , \"0.333333333333333333335E2\"]\r\n[1   , 2, \"0.333333333333333333335E2\", \"0.333333333333333333335E2\"]\r\n```\r\n\r\nBy removing both `reverse`s and replacing `truncate` with `ceil` (and replacing `parts[0..(-i-1)]` with `parts[i..-1]` and `#to_f`-ing the division because integer division by default truncates) we get\r\n```\r\n[1, 0, \"10\", \"2\"]\r\n[1, 1, \"8\", \"2\"]\r\n[2, 2, \"6\", \"6\"]\r\n```\r\nwhich is wrong (according to the spec that the extra pennies to go to the first parts) and\r\n```\r\n[1, 0, \"0.1E3\"                    , \"0.33333333333333333333E2\"]\r\n[1, 1, \"0.66666666666666666667E2\" , \"0.333333333333333333335E2\"]\r\n[1, 2, \"0.333333333333333333335E2\", \"0.333333333333333333335E2\"]\r\n```\r\nwhich is also wrong because it's not afterwards reversed; thus, the last two parts receives the extra.\r\n\r\nIn other words, if the spec was to send the extra pennies to the last, you'd be right.",
        "created_at": "2018-05-14T15:18:45Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r187992954",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187992954"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r187992954"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187938993
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187994115",
        "pull_request_review_id": 119883768,
        "id": 187994115,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk5NDExNQ==",
        "diff_hunk": "@@ -0,0 +1,118 @@\n+# encoding: utf-8\n+\n+describe Money::Allocation do\n+  describe 'given number as argument' do\n+    it 'raises an error when invalid argument is given' do\n+      expect { described_class.new(100, 0) }.to raise_error(ArgumentError)\n+      expect { described_class.new(100, -1) }.to raise_error(ArgumentError)\n+    end\n+\n+    context 'whole amounts' do\n+      it 'returns the amount when 1 is given' do\n+        expect(described_class.new(100, 1).generate).to eq([100])\n+      end\n+\n+      it 'splits the amount into equal parts' do\n+        expect(described_class.new(100, 2).generate).to eq([50, 50])\n+        expect(described_class.new(100, 4).generate).to eq([25, 25, 25, 25])\n+        expect(described_class.new(100, 5).generate).to eq([20, 20, 20, 20, 20])\n+      end\n+\n+      it 'does not loose pennies' do\n+        expect(described_class.new(5, 2).generate).to eq([3, 2])\n+        expect(described_class.new(2, 3).generate).to eq([1, 1, 0])\n+        expect(described_class.new(100, 3).generate).to eq([34, 33, 33])\n+        expect(described_class.new(100, 6).generate).to eq([17, 17, 17, 17, 16, 16])\n+      end\n+    end\n+\n+    context 'fractional amounts' do\n+      it 'returns the amount when 1 is given' do\n+        expect(described_class.new(BigDecimal(100), 1, false).generate).to eq([BigDecimal(100)])\n+      end\n+\n+      it 'splits the amount into equal parts' do\n+        expect(described_class.new(BigDecimal(100), 2, false).generate).to eq([50, 50])\n+        expect(described_class.new(BigDecimal(100), 4, false).generate).to eq([25, 25, 25, 25])\n+        expect(described_class.new(BigDecimal(100), 5, false).generate).to eq([20, 20, 20, 20, 20])\n+      end\n+\n+      it 'splits the amount into equal fractions' do\n+        expect(described_class.new(BigDecimal(5), 2, false).generate).to eq([2.5, 2.5])\n+        expect(described_class.new(BigDecimal(5), 4, false).generate).to eq([1.25, 1.25, 1.25, 1.25])\n+      end\n+\n+      it 'handles splits into repeating decimals' do\n+        amount = BigDecimal(100)\n+        parts = described_class.new(amount, 3, false).generate\n+\n+        expect(parts).to eq([\n+          BigDecimal('33.3333333333333333335'),\n+          BigDecimal('33.3333333333333333335'),\n+          BigDecimal('33.333333333333333333')\n+        ])\n+        expect(parts.inject(0, :+)).to eq(amount)\n+      end\n+    end\n+  end\n+\n+  describe 'given array as argument' do\n+    it 'raises an error when invalid argument is given' do\n+      expect { described_class.new(100, []) }.to raise_error(ArgumentError)\n+    end\n+\n+    context 'whole amounts' do\n+      it 'returns the amount when array contains only one element' do\n+        expect(described_class.new(100, [1]).generate).to eq([100])\n+        expect(described_class.new(100, [5]).generate).to eq([100])\n+      end\n+\n+      it 'splits the amount into whole parts respecting the order' do\n+        expect(described_class.new(100, [1, 1]).generate).to eq([50, 50])\n+        expect(described_class.new(100, [1, 1, 2]).generate).to eq([25, 25, 50])\n+        expect(described_class.new(100, [7, 3]).generate).to eq([70, 30])\n+      end\n+\n+      it 'accepts floats as arguments' do\n+        expect(described_class.new(100, [1.0, 1.0]).generate).to eq([50, 50])\n+        expect(described_class.new(100, [0.1, 0.1, 0.2]).generate).to eq([25, 25, 50])\n+        expect(described_class.new(100, [0.07, 0.03]).generate).to eq([70, 30])\n+      end\n+\n+      it 'does not loose pennies' do\n+        expect(described_class.new(10, [1, 1, 2]).generate).to eq([3, 2, 5])\n+        expect(described_class.new(100, [1, 1, 1]).generate).to eq([34, 33, 33])\n+      end\n+    end\n+\n+    context 'fractional amounts' do\n+      it 'returns the amount when array contains only one element' do\n+        expect(described_class.new(BigDecimal(100), [1], false).generate).to eq([100])\n+        expect(described_class.new(BigDecimal(100), [5], false).generate).to eq([100])\n+      end\n+\n+      it 'splits the amount into whole parts respecting the order' do\n+        expect(described_class.new(BigDecimal(100), [1, 1], false).generate).to eq([50, 50])\n+        expect(described_class.new(BigDecimal(100), [1, 1, 2], false).generate).to eq([25, 25, 50])\n+        expect(described_class.new(BigDecimal(100), [7, 3], false).generate).to eq([70, 30])\n+      end\n+\n+      it 'splits the amount proportionally to the given parts' do\n+        expect(described_class.new(BigDecimal(10), [1, 1, 2], false).generate).to eq([2.5, 2.5, 5])",
        "path": "spec/money/allocation_spec.rb",
        "position": null,
        "original_position": 101,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Adding this would make the spec fail:\r\n```\r\nexpect(described_class.new(10, [1, 1, 2], false).generate).to eq([2.5, 2.5, 5])\r\n```\r\n\r\n@antstorm That is expected, right?\r\n\r\nShould we add a spec like\r\n```\r\nexpect(described_class.new(10, [1, 1, 2], false).generate).to eq([3, 2, 5])\r\n```\r\nsomewhere?",
        "created_at": "2018-05-14T15:21:45Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r187994115",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/187994115"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r187994115"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188010498",
        "pull_request_review_id": 119903904,
        "id": 188010498,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODAxMDQ5OA==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please take a look: https://gist.github.com/printercu/f9dbde27172ca4a57533d1dcdd95f2a3\r\n\r\nIt works the same way: greater values appear in the begining. But it gives different results, and it's not clear for me which is better. For example, split 10 into 1, 1, 2: `[3, 2, 5]` or `[3, 3, 4]`.",
        "created_at": "2018-05-14T16:07:40Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188010498",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188010498"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188010498"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187938993
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188010560",
        "pull_request_review_id": 119903980,
        "id": 188010560,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODAxMDU2MA==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Storing `remaining_parts_sum` and subbing current part from it reduces O(n) from n^2 to n.",
        "created_at": "2018-05-14T16:07:52Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188010560",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188010560"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188010560"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188012813",
        "pull_request_review_id": 119906804,
        "id": 188012813,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODAxMjgxMw==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Update gist from https://github.com/RubyMoney/money/pull/772/files#r188010498 in this way.",
        "created_at": "2018-05-14T16:15:18Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188012813",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188012813"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188012813"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 188010560
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188103210",
        "pull_request_review_id": 120015578,
        "id": 188103210,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODEwMzIxMA==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "To be honest with you, I'm not sure what's the best approach here. Unless you guys have a strong preference to change the leftover penny distribution, I think it makes sense to stick to existing spec and keep the old tests \u2014 this allows us to put this in a minor release.\r\n\r\nAlso, note:\r\n\r\n```ruby\r\nsplit 9.0, [1, 1, 2]\r\n=> [3, 2, 4]\r\nsplit2 9.0, [1, 1, 2]\r\n=> [3, 2, 4]\r\n```\r\n\r\nSo it seems like the decision here is to either favour a distribution of the result closer to the given parts or closer parts / amount ratio. And it kinda makes sense to have this behaviour selectable by user.",
        "created_at": "2018-05-14T21:24:04Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188103210",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188103210"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188103210"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187938993
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188107475",
        "pull_request_review_id": 120020732,
        "id": 188107475,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODEwNzQ3NQ==",
        "diff_hunk": "@@ -463,49 +464,27 @@ def as_euro\n     exchange_to(\"EUR\")\n   end\n \n-  # Allocates money between different parties without losing pennies.\n-  # After the mathematical split has been performed, leftover pennies will\n-  # be distributed round-robin amongst the parties. This means that parties\n-  # listed first will likely receive more pennies than ones that are listed later\n+  # Splits a given amount in parts without loosing pennies. The left-over pennies will be\n+  # distributed round-robin amongst the parties. This means that parties listed first will likely\n+  # receive more pennies than ones that are listed later.\n   #\n-  # @param [Array<Numeric>] splits [2, 1, 1] to give twice as much to party1 as party2 or party3\n-  #   which results in 50% of the cash to party1, 25% to party2, and 25% to party3.\n+  # @param [Array<Numeric>, Numeric] pass [2, 1, 1] to give twice as much to party1 as party2 or\n+  # party3 which results in 50% of the cash to party1, 25% to party2, and 25% to party3. Passing a\n+  # number instead of an array will split the amount evenly (without loosing pennies when rounding).\n   #\n   # @return [Array<Money>]\n   #\n   # @example\n-  #   Money.new(5,   \"USD\").allocate([0.3, 0.7])         #=> [Money.new(2), Money.new(3)]\n+  #   Money.new(5,   \"USD\").allocate([0.3, 0.7]) #=> [Money.new(2), Money.new(3)]\n   #   Money.new(100, \"USD\").allocate([1, 1, 1]) #=> [Money.new(34), Money.new(33), Money.new(33)]\n+  #   Money.new(100, \"USD\").allocate(2) #=> [Money.new(50), Money.new(50)]\n+  #   Money.new(100, \"USD\").allocate(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n   #\n-  def allocate(splits)\n-    amounts, left_over = amounts_from_splits(splits)\n-\n-    unless self.class.infinite_precision\n-      delta = left_over > 0 ? 1 : -1\n-      # Distribute left over pennies amongst allocations\n-      left_over.to_i.abs.times { |i| amounts[i % amounts.length] += delta }\n-    end\n-\n-    amounts.collect { |fractional| self.class.new(fractional, currency) }\n-  end\n-\n-  # Split money amongst parties evenly without losing pennies.\n-  #\n-  # @param [Numeric] num number of parties.\n-  #\n-  # @return [Array<Money>]\n-  #\n-  # @example\n-  #   Money.new(100, \"USD\").split(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n-  def split(num)\n-    raise ArgumentError, \"need at least one party\" if num < 1\n-\n-    if self.class.infinite_precision\n-      split_infinite(num)\n-    else\n-      split_flat(num)\n-    end\n+  def allocate(parts)",
        "path": "lib/money/money.rb",
        "position": 63,
        "original_position": 63,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see this as inheritance vs composition decision. While there's a certain appeal in including this directly into Money, I don't think there's much benefit in doing so \u2014 object instantiation is cheap in ruby (plus it's just 1 object) and it's easier to add more complex behaviour (like switchable distribution) to a separate class.\r\n\r\nHappy to discuss this further if you feel like I'm missing something here.",
        "created_at": "2018-05-14T21:41:26Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188107475",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188107475"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188107475"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187951855
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188109065",
        "pull_request_review_id": 120022649,
        "id": 188109065,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODEwOTA2NQ==",
        "diff_hunk": "@@ -0,0 +1,118 @@\n+# encoding: utf-8\n+\n+describe Money::Allocation do\n+  describe 'given number as argument' do\n+    it 'raises an error when invalid argument is given' do\n+      expect { described_class.new(100, 0) }.to raise_error(ArgumentError)\n+      expect { described_class.new(100, -1) }.to raise_error(ArgumentError)\n+    end\n+\n+    context 'whole amounts' do\n+      it 'returns the amount when 1 is given' do\n+        expect(described_class.new(100, 1).generate).to eq([100])\n+      end\n+\n+      it 'splits the amount into equal parts' do\n+        expect(described_class.new(100, 2).generate).to eq([50, 50])\n+        expect(described_class.new(100, 4).generate).to eq([25, 25, 25, 25])\n+        expect(described_class.new(100, 5).generate).to eq([20, 20, 20, 20, 20])\n+      end\n+\n+      it 'does not loose pennies' do\n+        expect(described_class.new(5, 2).generate).to eq([3, 2])\n+        expect(described_class.new(2, 3).generate).to eq([1, 1, 0])\n+        expect(described_class.new(100, 3).generate).to eq([34, 33, 33])\n+        expect(described_class.new(100, 6).generate).to eq([17, 17, 17, 17, 16, 16])\n+      end\n+    end\n+\n+    context 'fractional amounts' do\n+      it 'returns the amount when 1 is given' do\n+        expect(described_class.new(BigDecimal(100), 1, false).generate).to eq([BigDecimal(100)])\n+      end\n+\n+      it 'splits the amount into equal parts' do\n+        expect(described_class.new(BigDecimal(100), 2, false).generate).to eq([50, 50])\n+        expect(described_class.new(BigDecimal(100), 4, false).generate).to eq([25, 25, 25, 25])\n+        expect(described_class.new(BigDecimal(100), 5, false).generate).to eq([20, 20, 20, 20, 20])\n+      end\n+\n+      it 'splits the amount into equal fractions' do\n+        expect(described_class.new(BigDecimal(5), 2, false).generate).to eq([2.5, 2.5])\n+        expect(described_class.new(BigDecimal(5), 4, false).generate).to eq([1.25, 1.25, 1.25, 1.25])\n+      end\n+\n+      it 'handles splits into repeating decimals' do\n+        amount = BigDecimal(100)\n+        parts = described_class.new(amount, 3, false).generate\n+\n+        expect(parts).to eq([\n+          BigDecimal('33.3333333333333333335'),\n+          BigDecimal('33.3333333333333333335'),\n+          BigDecimal('33.333333333333333333')\n+        ])\n+        expect(parts.inject(0, :+)).to eq(amount)\n+      end\n+    end\n+  end\n+\n+  describe 'given array as argument' do\n+    it 'raises an error when invalid argument is given' do\n+      expect { described_class.new(100, []) }.to raise_error(ArgumentError)\n+    end\n+\n+    context 'whole amounts' do\n+      it 'returns the amount when array contains only one element' do\n+        expect(described_class.new(100, [1]).generate).to eq([100])\n+        expect(described_class.new(100, [5]).generate).to eq([100])\n+      end\n+\n+      it 'splits the amount into whole parts respecting the order' do\n+        expect(described_class.new(100, [1, 1]).generate).to eq([50, 50])\n+        expect(described_class.new(100, [1, 1, 2]).generate).to eq([25, 25, 50])\n+        expect(described_class.new(100, [7, 3]).generate).to eq([70, 30])\n+      end\n+\n+      it 'accepts floats as arguments' do\n+        expect(described_class.new(100, [1.0, 1.0]).generate).to eq([50, 50])\n+        expect(described_class.new(100, [0.1, 0.1, 0.2]).generate).to eq([25, 25, 50])\n+        expect(described_class.new(100, [0.07, 0.03]).generate).to eq([70, 30])\n+      end\n+\n+      it 'does not loose pennies' do\n+        expect(described_class.new(10, [1, 1, 2]).generate).to eq([3, 2, 5])\n+        expect(described_class.new(100, [1, 1, 1]).generate).to eq([34, 33, 33])\n+      end\n+    end\n+\n+    context 'fractional amounts' do\n+      it 'returns the amount when array contains only one element' do\n+        expect(described_class.new(BigDecimal(100), [1], false).generate).to eq([100])\n+        expect(described_class.new(BigDecimal(100), [5], false).generate).to eq([100])\n+      end\n+\n+      it 'splits the amount into whole parts respecting the order' do\n+        expect(described_class.new(BigDecimal(100), [1, 1], false).generate).to eq([50, 50])\n+        expect(described_class.new(BigDecimal(100), [1, 1, 2], false).generate).to eq([25, 25, 50])\n+        expect(described_class.new(BigDecimal(100), [7, 3], false).generate).to eq([70, 30])\n+      end\n+\n+      it 'splits the amount proportionally to the given parts' do\n+        expect(described_class.new(BigDecimal(10), [1, 1, 2], false).generate).to eq([2.5, 2.5, 5])",
        "path": "spec/money/allocation_spec.rb",
        "position": null,
        "original_position": 101,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Since it's hooked into `Money`, the `whole_amounts` is coupled to the type of the amount. I'll add a spec that you've suggested to make it intentional, but if you think like there's a point in treating the amount like a float when `whole_amounts` is `false`, I can make it work as well.",
        "created_at": "2018-05-14T21:48:13Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188109065",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188109065"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188109065"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187994115
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188109213",
        "pull_request_review_id": 120022849,
        "id": 188109213,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODEwOTIxMw==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Great suggestion, thank you!",
        "created_at": "2018-05-14T21:48:52Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188109213",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188109213"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188109213"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 188010560
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188116228",
        "pull_request_review_id": 120031128,
        "id": 188116228,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODExNjIyOA==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "One more note:\r\n\r\n```ruby\r\nsplit 10.0, [1, 1, 2]\r\n=> [3, 2, 5]\r\nsplit2 10.0, [1, 1, 2]\r\n=> [3, 3, 4]\r\n\r\nsplit 10.0, [1, 2, 1]\r\n=> [3, 5, 2]\r\nsplit2 10.0, [1, 2, 1]\r\n=> [3, 5, 2]\r\n\r\nsplit 10.0, [2, 1, 1]\r\n=> [6, 2, 2]\r\nsplit2 10.0, [2, 1, 1]\r\n=> [5, 3, 2]\r\n```\r\n\r\nI think this suggests that `.truncate` is more consistent, always adding the leftover penny to the first party.",
        "created_at": "2018-05-14T22:22:03Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188116228",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188116228"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188116228"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187938993
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188174087",
        "pull_request_review_id": 120096503,
        "id": 188174087,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODE3NDA4Nw==",
        "diff_hunk": "@@ -463,49 +464,27 @@ def as_euro\n     exchange_to(\"EUR\")\n   end\n \n-  # Allocates money between different parties without losing pennies.\n-  # After the mathematical split has been performed, leftover pennies will\n-  # be distributed round-robin amongst the parties. This means that parties\n-  # listed first will likely receive more pennies than ones that are listed later\n+  # Splits a given amount in parts without loosing pennies. The left-over pennies will be\n+  # distributed round-robin amongst the parties. This means that parties listed first will likely\n+  # receive more pennies than ones that are listed later.\n   #\n-  # @param [Array<Numeric>] splits [2, 1, 1] to give twice as much to party1 as party2 or party3\n-  #   which results in 50% of the cash to party1, 25% to party2, and 25% to party3.\n+  # @param [Array<Numeric>, Numeric] pass [2, 1, 1] to give twice as much to party1 as party2 or\n+  # party3 which results in 50% of the cash to party1, 25% to party2, and 25% to party3. Passing a\n+  # number instead of an array will split the amount evenly (without loosing pennies when rounding).\n   #\n   # @return [Array<Money>]\n   #\n   # @example\n-  #   Money.new(5,   \"USD\").allocate([0.3, 0.7])         #=> [Money.new(2), Money.new(3)]\n+  #   Money.new(5,   \"USD\").allocate([0.3, 0.7]) #=> [Money.new(2), Money.new(3)]\n   #   Money.new(100, \"USD\").allocate([1, 1, 1]) #=> [Money.new(34), Money.new(33), Money.new(33)]\n+  #   Money.new(100, \"USD\").allocate(2) #=> [Money.new(50), Money.new(50)]\n+  #   Money.new(100, \"USD\").allocate(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n   #\n-  def allocate(splits)\n-    amounts, left_over = amounts_from_splits(splits)\n-\n-    unless self.class.infinite_precision\n-      delta = left_over > 0 ? 1 : -1\n-      # Distribute left over pennies amongst allocations\n-      left_over.to_i.abs.times { |i| amounts[i % amounts.length] += delta }\n-    end\n-\n-    amounts.collect { |fractional| self.class.new(fractional, currency) }\n-  end\n-\n-  # Split money amongst parties evenly without losing pennies.\n-  #\n-  # @param [Numeric] num number of parties.\n-  #\n-  # @return [Array<Money>]\n-  #\n-  # @example\n-  #   Money.new(100, \"USD\").split(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n-  def split(num)\n-    raise ArgumentError, \"need at least one party\" if num < 1\n-\n-    if self.class.infinite_precision\n-      split_infinite(num)\n-    else\n-      split_flat(num)\n-    end\n+  def allocate(parts)",
        "path": "lib/money/money.rb",
        "position": 63,
        "original_position": 63,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Here is what I suggest:\r\n\r\n```ruby\r\nclass Money\r\n  module Allocation\r\n    class << self\r\n     def split(amount, parts, ...)\r\n    end\r\n\r\n    def allocate(...)\r\n      Allocate.split(...)\r\n    end\r\n\r\n    alias_method :split, :allocate\r\n  end\r\nend\r\n\r\n# in lib/money.rb\r\nclass Money\r\n  include Allocation\r\nend\r\n```\r\n\r\nThis way allocation methods are in separate module, because it's like an extended. Similar to `Arithmetics`. If you want you can keep a class `Money::Allocation::Generator`, but for now I see no pros in using it vs a static method.\r\n",
        "created_at": "2018-05-15T06:12:10Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188174087",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188174087"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188174087"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187951855
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188192661",
        "pull_request_review_id": 120118104,
        "id": 188192661,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODE5MjY2MQ==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> (...) and it's not clear for me which is better. (...)\r\n\r\nMe neither. I expect it's possible to find cases where the cumulative relative error will favour any of the two. If that's correct, then it's just an arbitrary choice between the two, and in that case, I agree that the current spec should be favoured.\r\n\r\nI guess an alternative strategy to the double reverse could be \"Work your way from below and mirror around zero\", say:\r\n\r\n* \"From below\": `remaining_amount = -amount` and `+=` (rather than `-=`; for negative numbers, `ceil` is the same as `truncate` so choose either)\r\n* \"Mirror\": `.reverse.map{|x| x+amount}`\r\n\r\nI suspect the performance is quite alike.\r\n\r\nSpeaking about performance, as long as the complexity is in terms of `parts.length` I wouldn't care much. If users have \"too long `parts`\" then they may optimise and contribute \ud83d\ude09\r\n\r\nI wonder if anyone is actually using this `split` method? I notice that https://github.com/carlospalol/money/ does not have such a thing \ud83d\ude42",
        "created_at": "2018-05-15T07:47:40Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188192661",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188192661"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188192661"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187938993
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188192759",
        "pull_request_review_id": 120118210,
        "id": 188192759,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODE5Mjc1OQ==",
        "diff_hunk": "@@ -463,49 +464,27 @@ def as_euro\n     exchange_to(\"EUR\")\n   end\n \n-  # Allocates money between different parties without losing pennies.\n-  # After the mathematical split has been performed, leftover pennies will\n-  # be distributed round-robin amongst the parties. This means that parties\n-  # listed first will likely receive more pennies than ones that are listed later\n+  # Splits a given amount in parts without loosing pennies. The left-over pennies will be\n+  # distributed round-robin amongst the parties. This means that parties listed first will likely\n+  # receive more pennies than ones that are listed later.\n   #\n-  # @param [Array<Numeric>] splits [2, 1, 1] to give twice as much to party1 as party2 or party3\n-  #   which results in 50% of the cash to party1, 25% to party2, and 25% to party3.\n+  # @param [Array<Numeric>, Numeric] pass [2, 1, 1] to give twice as much to party1 as party2 or\n+  # party3 which results in 50% of the cash to party1, 25% to party2, and 25% to party3. Passing a\n+  # number instead of an array will split the amount evenly (without loosing pennies when rounding).\n   #\n   # @return [Array<Money>]\n   #\n   # @example\n-  #   Money.new(5,   \"USD\").allocate([0.3, 0.7])         #=> [Money.new(2), Money.new(3)]\n+  #   Money.new(5,   \"USD\").allocate([0.3, 0.7]) #=> [Money.new(2), Money.new(3)]\n   #   Money.new(100, \"USD\").allocate([1, 1, 1]) #=> [Money.new(34), Money.new(33), Money.new(33)]\n+  #   Money.new(100, \"USD\").allocate(2) #=> [Money.new(50), Money.new(50)]\n+  #   Money.new(100, \"USD\").allocate(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n   #\n-  def allocate(splits)\n-    amounts, left_over = amounts_from_splits(splits)\n-\n-    unless self.class.infinite_precision\n-      delta = left_over > 0 ? 1 : -1\n-      # Distribute left over pennies amongst allocations\n-      left_over.to_i.abs.times { |i| amounts[i % amounts.length] += delta }\n-    end\n-\n-    amounts.collect { |fractional| self.class.new(fractional, currency) }\n-  end\n-\n-  # Split money amongst parties evenly without losing pennies.\n-  #\n-  # @param [Numeric] num number of parties.\n-  #\n-  # @return [Array<Money>]\n-  #\n-  # @example\n-  #   Money.new(100, \"USD\").split(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n-  def split(num)\n-    raise ArgumentError, \"need at least one party\" if num < 1\n-\n-    if self.class.infinite_precision\n-      split_infinite(num)\n-    else\n-      split_flat(num)\n-    end\n+  def allocate(parts)",
        "path": "lib/money/money.rb",
        "position": 63,
        "original_position": 63,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Don't you think this is creating a tight coupling between the two? As of the code in the PR \u2014 `Money::Allocation` does not depend on Money in any way. Some obvious benefits I see are: \r\n\r\n- Being able to easier test it in isolation (no need to instantiate all the Money objects to check results)\r\n- `Allocation` is not concerned with aliasing the method for backwards-compatibility (which I think it shouldn't)\r\n- The public method is defined on the `Money` directly, making it easier to find (less indirection)\r\n- Any changes to how `infinite_precision` or `initialize` work will not affect this class in any way\r\n\r\nCorrect me if I'm wrong, but what you are suggesting is essentially splitting the code between different files without adding a class boundary. Why do you think it's a better approach?",
        "created_at": "2018-05-15T07:48:06Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188192759",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188192759"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188192759"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187951855
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188193750",
        "pull_request_review_id": 120119398,
        "id": 188193750,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODE5Mzc1MA==",
        "diff_hunk": "@@ -0,0 +1,118 @@\n+# encoding: utf-8\n+\n+describe Money::Allocation do\n+  describe 'given number as argument' do\n+    it 'raises an error when invalid argument is given' do\n+      expect { described_class.new(100, 0) }.to raise_error(ArgumentError)\n+      expect { described_class.new(100, -1) }.to raise_error(ArgumentError)\n+    end\n+\n+    context 'whole amounts' do\n+      it 'returns the amount when 1 is given' do\n+        expect(described_class.new(100, 1).generate).to eq([100])\n+      end\n+\n+      it 'splits the amount into equal parts' do\n+        expect(described_class.new(100, 2).generate).to eq([50, 50])\n+        expect(described_class.new(100, 4).generate).to eq([25, 25, 25, 25])\n+        expect(described_class.new(100, 5).generate).to eq([20, 20, 20, 20, 20])\n+      end\n+\n+      it 'does not loose pennies' do\n+        expect(described_class.new(5, 2).generate).to eq([3, 2])\n+        expect(described_class.new(2, 3).generate).to eq([1, 1, 0])\n+        expect(described_class.new(100, 3).generate).to eq([34, 33, 33])\n+        expect(described_class.new(100, 6).generate).to eq([17, 17, 17, 17, 16, 16])\n+      end\n+    end\n+\n+    context 'fractional amounts' do\n+      it 'returns the amount when 1 is given' do\n+        expect(described_class.new(BigDecimal(100), 1, false).generate).to eq([BigDecimal(100)])\n+      end\n+\n+      it 'splits the amount into equal parts' do\n+        expect(described_class.new(BigDecimal(100), 2, false).generate).to eq([50, 50])\n+        expect(described_class.new(BigDecimal(100), 4, false).generate).to eq([25, 25, 25, 25])\n+        expect(described_class.new(BigDecimal(100), 5, false).generate).to eq([20, 20, 20, 20, 20])\n+      end\n+\n+      it 'splits the amount into equal fractions' do\n+        expect(described_class.new(BigDecimal(5), 2, false).generate).to eq([2.5, 2.5])\n+        expect(described_class.new(BigDecimal(5), 4, false).generate).to eq([1.25, 1.25, 1.25, 1.25])\n+      end\n+\n+      it 'handles splits into repeating decimals' do\n+        amount = BigDecimal(100)\n+        parts = described_class.new(amount, 3, false).generate\n+\n+        expect(parts).to eq([\n+          BigDecimal('33.3333333333333333335'),\n+          BigDecimal('33.3333333333333333335'),\n+          BigDecimal('33.333333333333333333')\n+        ])\n+        expect(parts.inject(0, :+)).to eq(amount)\n+      end\n+    end\n+  end\n+\n+  describe 'given array as argument' do\n+    it 'raises an error when invalid argument is given' do\n+      expect { described_class.new(100, []) }.to raise_error(ArgumentError)\n+    end\n+\n+    context 'whole amounts' do\n+      it 'returns the amount when array contains only one element' do\n+        expect(described_class.new(100, [1]).generate).to eq([100])\n+        expect(described_class.new(100, [5]).generate).to eq([100])\n+      end\n+\n+      it 'splits the amount into whole parts respecting the order' do\n+        expect(described_class.new(100, [1, 1]).generate).to eq([50, 50])\n+        expect(described_class.new(100, [1, 1, 2]).generate).to eq([25, 25, 50])\n+        expect(described_class.new(100, [7, 3]).generate).to eq([70, 30])\n+      end\n+\n+      it 'accepts floats as arguments' do\n+        expect(described_class.new(100, [1.0, 1.0]).generate).to eq([50, 50])\n+        expect(described_class.new(100, [0.1, 0.1, 0.2]).generate).to eq([25, 25, 50])\n+        expect(described_class.new(100, [0.07, 0.03]).generate).to eq([70, 30])\n+      end\n+\n+      it 'does not loose pennies' do\n+        expect(described_class.new(10, [1, 1, 2]).generate).to eq([3, 2, 5])\n+        expect(described_class.new(100, [1, 1, 1]).generate).to eq([34, 33, 33])\n+      end\n+    end\n+\n+    context 'fractional amounts' do\n+      it 'returns the amount when array contains only one element' do\n+        expect(described_class.new(BigDecimal(100), [1], false).generate).to eq([100])\n+        expect(described_class.new(BigDecimal(100), [5], false).generate).to eq([100])\n+      end\n+\n+      it 'splits the amount into whole parts respecting the order' do\n+        expect(described_class.new(BigDecimal(100), [1, 1], false).generate).to eq([50, 50])\n+        expect(described_class.new(BigDecimal(100), [1, 1, 2], false).generate).to eq([25, 25, 50])\n+        expect(described_class.new(BigDecimal(100), [7, 3], false).generate).to eq([70, 30])\n+      end\n+\n+      it 'splits the amount proportionally to the given parts' do\n+        expect(described_class.new(BigDecimal(10), [1, 1, 2], false).generate).to eq([2.5, 2.5, 5])",
        "path": "spec/money/allocation_spec.rb",
        "position": null,
        "original_position": 101,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think what you made is perfectly fine! I just stumbled upon the corner case \u2014 which is kinda even an \"outside (out of scope) corner\" \ud83d\ude09",
        "created_at": "2018-05-15T07:52:15Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188193750",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188193750"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188193750"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187994115
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188197853",
        "pull_request_review_id": 120124260,
        "id": 188197853,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODE5Nzg1Mw==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No idea if anyone is actually using this method :) I can definitely see how it can be extremely useful in certain situations, but that's definitely not your typical scenario.",
        "created_at": "2018-05-15T08:08:36Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188197853",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188197853"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188197853"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187938993
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188209966",
        "pull_request_review_id": 120138769,
        "id": 188209966,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODIwOTk2Ng==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`.lazy` before first `.reverse` may help avoiding actual reverses. But I don't know if it's available in all rubies supported by gem.",
        "created_at": "2018-05-15T08:51:16Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188209966",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188209966"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188209966"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187938993
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188215050",
        "pull_request_review_id": 120144647,
        "id": 188215050,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODIxNTA1MA==",
        "diff_hunk": "@@ -463,49 +464,27 @@ def as_euro\n     exchange_to(\"EUR\")\n   end\n \n-  # Allocates money between different parties without losing pennies.\n-  # After the mathematical split has been performed, leftover pennies will\n-  # be distributed round-robin amongst the parties. This means that parties\n-  # listed first will likely receive more pennies than ones that are listed later\n+  # Splits a given amount in parts without loosing pennies. The left-over pennies will be\n+  # distributed round-robin amongst the parties. This means that parties listed first will likely\n+  # receive more pennies than ones that are listed later.\n   #\n-  # @param [Array<Numeric>] splits [2, 1, 1] to give twice as much to party1 as party2 or party3\n-  #   which results in 50% of the cash to party1, 25% to party2, and 25% to party3.\n+  # @param [Array<Numeric>, Numeric] pass [2, 1, 1] to give twice as much to party1 as party2 or\n+  # party3 which results in 50% of the cash to party1, 25% to party2, and 25% to party3. Passing a\n+  # number instead of an array will split the amount evenly (without loosing pennies when rounding).\n   #\n   # @return [Array<Money>]\n   #\n   # @example\n-  #   Money.new(5,   \"USD\").allocate([0.3, 0.7])         #=> [Money.new(2), Money.new(3)]\n+  #   Money.new(5,   \"USD\").allocate([0.3, 0.7]) #=> [Money.new(2), Money.new(3)]\n   #   Money.new(100, \"USD\").allocate([1, 1, 1]) #=> [Money.new(34), Money.new(33), Money.new(33)]\n+  #   Money.new(100, \"USD\").allocate(2) #=> [Money.new(50), Money.new(50)]\n+  #   Money.new(100, \"USD\").allocate(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n   #\n-  def allocate(splits)\n-    amounts, left_over = amounts_from_splits(splits)\n-\n-    unless self.class.infinite_precision\n-      delta = left_over > 0 ? 1 : -1\n-      # Distribute left over pennies amongst allocations\n-      left_over.to_i.abs.times { |i| amounts[i % amounts.length] += delta }\n-    end\n-\n-    amounts.collect { |fractional| self.class.new(fractional, currency) }\n-  end\n-\n-  # Split money amongst parties evenly without losing pennies.\n-  #\n-  # @param [Numeric] num number of parties.\n-  #\n-  # @return [Array<Money>]\n-  #\n-  # @example\n-  #   Money.new(100, \"USD\").split(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n-  def split(num)\n-    raise ArgumentError, \"need at least one party\" if num < 1\n-\n-    if self.class.infinite_precision\n-      split_infinite(num)\n-    else\n-      split_flat(num)\n-    end\n+  def allocate(parts)",
        "path": "lib/money/money.rb",
        "position": 63,
        "original_position": 63,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "1) It's even easier, because there is no need to instantiate `Allocation` as it's now. Just `Money::Allocation.split`, similar to testing my example from gist.\r\n2, 3) This is just collecting methods together by functionality. Why there is separate Arithmetics module? Then let's move all methods to Money.\r\n\r\nI just want to keep different functionality separate from other. Money should include only the basics. Allocations are not essential for most of users, so related methods must be kept separately. I use this test: what should i do to remove functionality? With module I need just remove include and delete file, without - look for all related methods and files and remove them one by one.",
        "created_at": "2018-05-15T09:07:38Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188215050",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188215050"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188215050"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187951855
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188234635",
        "pull_request_review_id": 120167927,
        "id": 188234635,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODIzNDYzNQ==",
        "diff_hunk": "@@ -463,49 +464,27 @@ def as_euro\n     exchange_to(\"EUR\")\n   end\n \n-  # Allocates money between different parties without losing pennies.\n-  # After the mathematical split has been performed, leftover pennies will\n-  # be distributed round-robin amongst the parties. This means that parties\n-  # listed first will likely receive more pennies than ones that are listed later\n+  # Splits a given amount in parts without loosing pennies. The left-over pennies will be\n+  # distributed round-robin amongst the parties. This means that parties listed first will likely\n+  # receive more pennies than ones that are listed later.\n   #\n-  # @param [Array<Numeric>] splits [2, 1, 1] to give twice as much to party1 as party2 or party3\n-  #   which results in 50% of the cash to party1, 25% to party2, and 25% to party3.\n+  # @param [Array<Numeric>, Numeric] pass [2, 1, 1] to give twice as much to party1 as party2 or\n+  # party3 which results in 50% of the cash to party1, 25% to party2, and 25% to party3. Passing a\n+  # number instead of an array will split the amount evenly (without loosing pennies when rounding).\n   #\n   # @return [Array<Money>]\n   #\n   # @example\n-  #   Money.new(5,   \"USD\").allocate([0.3, 0.7])         #=> [Money.new(2), Money.new(3)]\n+  #   Money.new(5,   \"USD\").allocate([0.3, 0.7]) #=> [Money.new(2), Money.new(3)]\n   #   Money.new(100, \"USD\").allocate([1, 1, 1]) #=> [Money.new(34), Money.new(33), Money.new(33)]\n+  #   Money.new(100, \"USD\").allocate(2) #=> [Money.new(50), Money.new(50)]\n+  #   Money.new(100, \"USD\").allocate(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n   #\n-  def allocate(splits)\n-    amounts, left_over = amounts_from_splits(splits)\n-\n-    unless self.class.infinite_precision\n-      delta = left_over > 0 ? 1 : -1\n-      # Distribute left over pennies amongst allocations\n-      left_over.to_i.abs.times { |i| amounts[i % amounts.length] += delta }\n-    end\n-\n-    amounts.collect { |fractional| self.class.new(fractional, currency) }\n-  end\n-\n-  # Split money amongst parties evenly without losing pennies.\n-  #\n-  # @param [Numeric] num number of parties.\n-  #\n-  # @return [Array<Money>]\n-  #\n-  # @example\n-  #   Money.new(100, \"USD\").split(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n-  def split(num)\n-    raise ArgumentError, \"need at least one party\" if num < 1\n-\n-    if self.class.infinite_precision\n-      split_infinite(num)\n-    else\n-      split_flat(num)\n-    end\n+  def allocate(parts)",
        "path": "lib/money/money.rb",
        "position": 63,
        "original_position": 63,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "ct-clearhaus",
            "id": 6168505,
            "node_id": "MDQ6VXNlcjYxNjg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6168505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ct-clearhaus",
            "html_url": "https://github.com/ct-clearhaus",
            "followers_url": "https://api.github.com/users/ct-clearhaus/followers",
            "following_url": "https://api.github.com/users/ct-clearhaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/ct-clearhaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ct-clearhaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ct-clearhaus/subscriptions",
            "organizations_url": "https://api.github.com/users/ct-clearhaus/orgs",
            "repos_url": "https://api.github.com/users/ct-clearhaus/repos",
            "events_url": "https://api.github.com/users/ct-clearhaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ct-clearhaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "+1 for \"minimality\".",
        "created_at": "2018-05-15T10:13:03Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188234635",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188234635"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188234635"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187951855
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188437028",
        "pull_request_review_id": 120415840,
        "id": 188437028,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQzNzAyOA==",
        "diff_hunk": "@@ -463,49 +464,27 @@ def as_euro\n     exchange_to(\"EUR\")\n   end\n \n-  # Allocates money between different parties without losing pennies.\n-  # After the mathematical split has been performed, leftover pennies will\n-  # be distributed round-robin amongst the parties. This means that parties\n-  # listed first will likely receive more pennies than ones that are listed later\n+  # Splits a given amount in parts without loosing pennies. The left-over pennies will be\n+  # distributed round-robin amongst the parties. This means that parties listed first will likely\n+  # receive more pennies than ones that are listed later.\n   #\n-  # @param [Array<Numeric>] splits [2, 1, 1] to give twice as much to party1 as party2 or party3\n-  #   which results in 50% of the cash to party1, 25% to party2, and 25% to party3.\n+  # @param [Array<Numeric>, Numeric] pass [2, 1, 1] to give twice as much to party1 as party2 or\n+  # party3 which results in 50% of the cash to party1, 25% to party2, and 25% to party3. Passing a\n+  # number instead of an array will split the amount evenly (without loosing pennies when rounding).\n   #\n   # @return [Array<Money>]\n   #\n   # @example\n-  #   Money.new(5,   \"USD\").allocate([0.3, 0.7])         #=> [Money.new(2), Money.new(3)]\n+  #   Money.new(5,   \"USD\").allocate([0.3, 0.7]) #=> [Money.new(2), Money.new(3)]\n   #   Money.new(100, \"USD\").allocate([1, 1, 1]) #=> [Money.new(34), Money.new(33), Money.new(33)]\n+  #   Money.new(100, \"USD\").allocate(2) #=> [Money.new(50), Money.new(50)]\n+  #   Money.new(100, \"USD\").allocate(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n   #\n-  def allocate(splits)\n-    amounts, left_over = amounts_from_splits(splits)\n-\n-    unless self.class.infinite_precision\n-      delta = left_over > 0 ? 1 : -1\n-      # Distribute left over pennies amongst allocations\n-      left_over.to_i.abs.times { |i| amounts[i % amounts.length] += delta }\n-    end\n-\n-    amounts.collect { |fractional| self.class.new(fractional, currency) }\n-  end\n-\n-  # Split money amongst parties evenly without losing pennies.\n-  #\n-  # @param [Numeric] num number of parties.\n-  #\n-  # @return [Array<Money>]\n-  #\n-  # @example\n-  #   Money.new(100, \"USD\").split(3) #=> [Money.new(34), Money.new(33), Money.new(33)]\n-  def split(num)\n-    raise ArgumentError, \"need at least one party\" if num < 1\n-\n-    if self.class.infinite_precision\n-      split_infinite(num)\n-    else\n-      split_flat(num)\n-    end\n+  def allocate(parts)",
        "path": "lib/money/money.rb",
        "position": 63,
        "original_position": 63,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@printercu while it's less flexible, I see the reason for moving to class methods for now, I'll make this change.\r\n\r\nAs for grouping methods by functionality \u2014 yes, sometimes there is a need to do so and Arithmetics is a good example, but it also indicates that the public interface for this class is too big. In case you're familiar with SOLID design principles, it's the violation of the Interface Segregation principle \u2014 you're making collaborators depend on a bunch of stuff they don't need/use.\r\n\r\nNormally OO design is judged by how easy it is to change things. In your suggestion the `Money` depends on `Allocation`, as well as `Allocation` depends on `Money` \u2014 adding more reasons for both to change.\r\n\r\nI suggest we agree to disagree here. However I would appreciate some input on things that matter \u2014 see the comment at the bottom of this PR.",
        "created_at": "2018-05-15T21:09:09Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188437028",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188437028"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188437028"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187951855
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188457062",
        "pull_request_review_id": 120439817,
        "id": 188457062,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQ1NzA2Mg==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do\n+        parts_sum = remaining_parts.inject(0, :+)\n+        part = remaining_parts.shift\n+\n+        current_split = remaining_amount * part / parts_sum\n+        current_split = current_split.truncate if whole_amounts\n+\n+        result << current_split\n+        remaining_amount -= current_split\n+      end\n+\n+      result.reverse\n+    end",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've modified it so it now doesn't have any `.reverse` calls",
        "created_at": "2018-05-15T22:36:35Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188457062",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188457062"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188457062"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187938993
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188458412",
        "pull_request_review_id": 120441344,
        "id": 188458412,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQ1ODQxMg==",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+# encoding: utf-8\n+\n+class Money\n+  class Allocation\n+    # Splits a given amount in parts without loosing pennies.\n+    # The left-over pennies will be distributed round-robin amongst the parties. This means that\n+    # parties listed first will likely receive more pennies than ones that are listed later.\n+    #\n+    # The results should always add up to the original amount.\n+    #\n+    # The parts can be specified as:\n+    #   Numeric \u2014 performs the split between a given number of parties evenely\n+    #   Array<Numeric> \u2014 allocates the amounts proportionally to the given array\n+    #\n+    def initialize(amount, parts, whole_amounts = true)\n+      @amount = amount\n+      @parts = parse_parts(parts)\n+      @whole_amounts = whole_amounts\n+\n+      raise ArgumentError, 'need at least one party' if @parts.empty?\n+    end\n+\n+    def generate\n+      result = []\n+      remaining_amount = amount\n+      remaining_parts = parts.reverse\n+\n+      while !remaining_parts.empty? do",
        "path": "lib/money/money/allocation.rb",
        "position": null,
        "original_position": 28,
        "commit_id": "3a5bb8b04391ab8905af850fa0970ead24526004",
        "original_commit_id": "8dd990ab686d5722651068e7e4aa466f70b4b89a",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "FYI, `.any?` is an Enumerable method that loops over the collection, avoiding",
        "created_at": "2018-05-15T22:43:56Z",
        "updated_at": "2018-05-19T23:17:36Z",
        "html_url": "https://github.com/RubyMoney/money/pull/772#discussion_r188458412",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/772",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/188458412"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/772#discussion_r188458412"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/772"
            }
        },
        "in_reply_to_id": 187900652
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/194652227",
        "pull_request_review_id": 127862097,
        "id": 194652227,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDY1MjIyNw==",
        "diff_hunk": "@@ -209,14 +209,26 @@ def initialize(money, *rules)\n     def to_s\n       return free_text if show_free_text?\n \n+      if rules[:html_wrap_symbol]\n+        warn \"[DEPRECATION] `html_wrap_symbol` is deprecated. Symbol will always be wrapped if `html: true` option is present.\"\n+      end\n+\n       whole_part, decimal_part = extract_whole_and_decimal_parts\n \n       # Format whole and decimal parts separately\n       decimal_part = format_decimal_part(decimal_part)\n       whole_part = format_whole_part(whole_part)\n \n       # Assemble the final formatted amount\n-      formatted = [whole_part, decimal_part].compact.join(decimal_mark)\n+      formatted = if rules[:html]\n+        if decimal_part.nil?\n+          \"<span class=\\\"money-whole\\\">#{whole_part}</span>\"",
        "path": "lib/money/money/formatter.rb",
        "position": null,
        "original_position": 32,
        "commit_id": "652aeda8913500d8764e63f53014bd9da11da9f4",
        "original_commit_id": "ac249746764eeaf17b0e1e8753f068cc0e96bbc5",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you please add a method that does this? Something like `wrap(whole_part, 'whole')` that returns a wrapped string. Otherwise there's a lot of duplication now",
        "created_at": "2018-06-12T08:23:55Z",
        "updated_at": "2018-06-12T09:38:29Z",
        "html_url": "https://github.com/RubyMoney/money/pull/777#discussion_r194652227",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/777",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/194652227"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/777#discussion_r194652227"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/777"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/194652713",
        "pull_request_review_id": 127862672,
        "id": 194652713,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDY1MjcxMw==",
        "diff_hunk": "@@ -209,14 +209,26 @@ def initialize(money, *rules)\n     def to_s\n       return free_text if show_free_text?\n \n+      if rules[:html_wrap_symbol]\n+        warn \"[DEPRECATION] `html_wrap_symbol` is deprecated. Symbol will always be wrapped if `html: true` option is present.\"\n+      end\n+\n       whole_part, decimal_part = extract_whole_and_decimal_parts\n \n       # Format whole and decimal parts separately\n       decimal_part = format_decimal_part(decimal_part)\n       whole_part = format_whole_part(whole_part)\n \n       # Assemble the final formatted amount\n-      formatted = [whole_part, decimal_part].compact.join(decimal_mark)\n+      formatted = if rules[:html]\n+        if decimal_part.nil?\n+          \"<span class=\\\"money-whole\\\">#{whole_part}</span>\"",
        "path": "lib/money/money/formatter.rb",
        "position": null,
        "original_position": 32,
        "commit_id": "652aeda8913500d8764e63f53014bd9da11da9f4",
        "original_commit_id": "ac249746764eeaf17b0e1e8753f068cc0e96bbc5",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Potentially you can move all the checks for `if rules[:html]` to that method as well",
        "created_at": "2018-06-12T08:25:39Z",
        "updated_at": "2018-06-12T09:38:29Z",
        "html_url": "https://github.com/RubyMoney/money/pull/777#discussion_r194652713",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/777",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/194652713"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/777#discussion_r194652713"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/777"
            }
        },
        "in_reply_to_id": 194652227
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/194653448",
        "pull_request_review_id": 127863506,
        "id": 194653448,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDY1MzQ0OA==",
        "diff_hunk": "@@ -132,11 +132,11 @@ class Formatter\n     #   Money.new(100000, \"FOO\").format #=> \"$1,000.00\"\n     #\n     # @option rules [Boolean] :html (false) Whether the currency should be",
        "path": "lib/money/money/formatter.rb",
        "position": null,
        "original_position": 3,
        "commit_id": "652aeda8913500d8764e63f53014bd9da11da9f4",
        "original_commit_id": "ac249746764eeaf17b0e1e8753f068cc0e96bbc5",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should say that every part should be HTML-formatted",
        "created_at": "2018-06-12T08:28:06Z",
        "updated_at": "2018-06-12T09:38:29Z",
        "html_url": "https://github.com/RubyMoney/money/pull/777#discussion_r194653448",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/777",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/194653448"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/777#discussion_r194653448"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/777"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209497458",
        "pull_request_review_id": 145521261,
        "id": 209497458,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ5NzQ1OA==",
        "diff_hunk": "@@ -215,6 +215,10 @@ def self.define_i18n_method(method, name, character)\n     #   #         CAD: \"CAD$\"\n     #   Money.new(10000, \"CAD\").format(:translate => true) #=> \"CAD$100.00\"\n     #\n+    # @example\n+    #   Money.new(89000, :btc).format(:drop_trailing_zeros => true) #=> B\u20e60.00089\n+    #   Money.new(110, :usd).format(:drop_trailing_zeros => true)   #=> $1.1\n+    #",
        "path": "lib/money/money/formatting.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "69e099f0f0a4b71d504001a57c65566a7a42ac64",
        "original_commit_id": "69e099f0f0a4b71d504001a57c65566a7a42ac64",
        "user": {
            "login": "AlexWayfer",
            "id": 6510020,
            "node_id": "MDQ6VXNlcjY1MTAwMjA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6510020?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlexWayfer",
            "html_url": "https://github.com/AlexWayfer",
            "followers_url": "https://api.github.com/users/AlexWayfer/followers",
            "following_url": "https://api.github.com/users/AlexWayfer/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlexWayfer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlexWayfer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlexWayfer/subscriptions",
            "organizations_url": "https://api.github.com/users/AlexWayfer/orgs",
            "repos_url": "https://api.github.com/users/AlexWayfer/repos",
            "events_url": "https://api.github.com/users/AlexWayfer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlexWayfer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You forgot about `@option` documentation above.",
        "created_at": "2018-08-13T05:56:34Z",
        "updated_at": "2018-08-13T05:58:00Z",
        "html_url": "https://github.com/RubyMoney/money/pull/574#discussion_r209497458",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/574",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209497458"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/574#discussion_r209497458"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/574"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209423976",
        "pull_request_review_id": 145443508,
        "id": 209423976,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMzk3Ng==",
        "diff_hunk": "@@ -201,6 +201,24 @@ def unregister(curr)\n         existed ? true : false\n       end\n \n+      # Returns if a code currency is ISO.\n+      #\n+      # @param [Symbol] code currency\n+      #\n+      # @return [Boolean]\n+      #\n+      # @example\n+      #   Money::Currency.is_iso?(:eur)\n+      #\n+      def is_iso?(id)\n+        currencies = load_currencies_iso",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "6f3b2290565d84ea3ef5fe34b7c242b8e2dde543",
        "original_commit_id": "15eec6924bfbf6939f42362725823dc333eb938f",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This will load the whole currencies file every time you call this method, which can be potentially expensive. Consider tapping into an existing pre-loaded table",
        "created_at": "2018-08-11T10:54:19Z",
        "updated_at": "2018-08-16T16:01:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/791#discussion_r209423976",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/791",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209423976"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/791#discussion_r209423976"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/791"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209423996",
        "pull_request_review_id": 145443508,
        "id": 209423996,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMzk5Ng==",
        "diff_hunk": "@@ -201,6 +201,24 @@ def unregister(curr)\n         existed ? true : false\n       end\n \n+      # Returns if a code currency is ISO.\n+      #\n+      # @param [Symbol] code currency\n+      #\n+      # @return [Boolean]\n+      #\n+      # @example\n+      #   Money::Currency.is_iso?(:eur)\n+      #\n+      def is_iso?(id)\n+        currencies = load_currencies_iso\n+        if currencies[id].nil?",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 15,
        "commit_id": "6f3b2290565d84ea3ef5fe34b7c242b8e2dde543",
        "original_commit_id": "15eec6924bfbf6939f42362725823dc333eb938f",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nit: `!!currencies[id]` should cast it to boolean",
        "created_at": "2018-08-11T10:55:13Z",
        "updated_at": "2018-08-16T16:01:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/791#discussion_r209423996",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/791",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209423996"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/791#discussion_r209423996"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/791"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209424026",
        "pull_request_review_id": 145443508,
        "id": 209424026,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDAyNg==",
        "diff_hunk": "@@ -201,6 +201,24 @@ def unregister(curr)\n         existed ? true : false\n       end\n \n+      # Returns if a code currency is ISO.\n+      #\n+      # @param [Symbol] code currency\n+      #\n+      # @return [Boolean]\n+      #\n+      # @example\n+      #   Money::Currency.is_iso?(:eur)\n+      #\n+      def is_iso?(id)",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "6f3b2290565d84ea3ef5fe34b7c242b8e2dde543",
        "original_commit_id": "15eec6924bfbf6939f42362725823dc333eb938f",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nit: I think `iso?` would be a bit more idiomatic ruby \u2014 `?` already suggests that it returns a boolean result, no need for `is_`",
        "created_at": "2018-08-11T10:56:51Z",
        "updated_at": "2018-08-16T16:01:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/791#discussion_r209424026",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/791",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209424026"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/791#discussion_r209424026"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/791"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209424036",
        "pull_request_review_id": 145443508,
        "id": 209424036,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDAzNg==",
        "diff_hunk": "@@ -3,11 +3,18 @@ class Currency\n     module Loader\n       DATA_PATH = File.expand_path(\"../../../../config\", __FILE__)\n \n+      # Loads and returns the currencies ISO stored in JSON files in the config directory.\n+      #\n+      # @return [Hash]\n+      def load_currencies_iso\n+        parse_currency_file(\"currency_iso.json\")\n+      end\n+\n       # Loads and returns the currencies stored in JSON files in the config directory.\n       #\n       # @return [Hash]\n       def load_currencies\n-        currencies = parse_currency_file(\"currency_iso.json\")\n+        currencies = load_currencies_iso()",
        "path": "lib/money/currency/loader.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "6f3b2290565d84ea3ef5fe34b7c242b8e2dde543",
        "original_commit_id": "15eec6924bfbf6939f42362725823dc333eb938f",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nit: Method calls without arguments do not need `()` in ruby",
        "created_at": "2018-08-11T10:57:31Z",
        "updated_at": "2018-08-16T16:01:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/791#discussion_r209424036",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/791",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209424036"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/791#discussion_r209424036"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/791"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209424056",
        "pull_request_review_id": 145443508,
        "id": 209424056,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDA1Ng==",
        "diff_hunk": "@@ -321,6 +321,16 @@ def to_s\n       end\n     end\n \n+    describe \"iso code\" do",
        "path": "spec/currency_spec.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "6f3b2290565d84ea3ef5fe34b7c242b8e2dde543",
        "original_commit_id": "15eec6924bfbf6939f42362725823dc333eb938f",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "please use the method name here (look at other describe blocks for examples), it improves navigation",
        "created_at": "2018-08-11T10:58:36Z",
        "updated_at": "2018-08-16T16:01:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/791#discussion_r209424056",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/791",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/209424056"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/791#discussion_r209424056"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/791"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/210503954",
        "pull_request_review_id": 146730970,
        "id": 210503954,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDUwMzk1NA==",
        "diff_hunk": "@@ -401,6 +400,17 @@ def symbol_first?\n       !!@symbol_first\n     end\n \n+    # Returns if a code currency is ISO.\n+    #\n+    # @return [Boolean]\n+    #\n+    # @example\n+    #   Money::Currency.new(:usd).iso?\n+    #\n+    def iso?()",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "6f3b2290565d84ea3ef5fe34b7c242b8e2dde543",
        "original_commit_id": "0e9ace41bb984ed9da0362c04c51eb74372e400b",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nit: no need for `()` here",
        "created_at": "2018-08-16T07:46:38Z",
        "updated_at": "2018-08-16T16:01:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/791#discussion_r210503954",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/791",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/210503954"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/791#discussion_r210503954"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/791"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/210575690",
        "pull_request_review_id": 146818555,
        "id": 210575690,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDU3NTY5MA==",
        "diff_hunk": "@@ -401,6 +400,17 @@ def symbol_first?\n       !!@symbol_first\n     end\n \n+    # Returns if a code currency is ISO.\n+    #\n+    # @return [Boolean]\n+    #\n+    # @example\n+    #   Money::Currency.new(:usd).iso?\n+    #\n+    def iso?()",
        "path": "lib/money/currency.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "6f3b2290565d84ea3ef5fe34b7c242b8e2dde543",
        "original_commit_id": "0e9ace41bb984ed9da0362c04c51eb74372e400b",
        "user": {
            "login": "mapeveri",
            "id": 6276555,
            "node_id": "MDQ6VXNlcjYyNzY1NTU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6276555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mapeveri",
            "html_url": "https://github.com/mapeveri",
            "followers_url": "https://api.github.com/users/mapeveri/followers",
            "following_url": "https://api.github.com/users/mapeveri/following{/other_user}",
            "gists_url": "https://api.github.com/users/mapeveri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mapeveri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mapeveri/subscriptions",
            "organizations_url": "https://api.github.com/users/mapeveri/orgs",
            "repos_url": "https://api.github.com/users/mapeveri/repos",
            "events_url": "https://api.github.com/users/mapeveri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mapeveri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ready the change :)",
        "created_at": "2018-08-16T12:28:36Z",
        "updated_at": "2018-08-16T16:01:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/791#discussion_r210575690",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/791",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/210575690"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/791#discussion_r210575690"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/791"
            }
        },
        "in_reply_to_id": 210503954
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/210651416",
        "pull_request_review_id": 146912183,
        "id": 210651416,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDY1MTQxNg==",
        "diff_hunk": "@@ -321,6 +321,16 @@ def to_s\n       end\n     end\n \n+    describe \"#iso?\" do\n+      it \"Iso code true\" do\n+        expect(Money::Currency.new(:eur).iso?).to be true\n+      end\n+\n+      it \"Iso code false\" do",
        "path": "spec/currency_spec.rb",
        "position": null,
        "original_position": 9,
        "commit_id": "6f3b2290565d84ea3ef5fe34b7c242b8e2dde543",
        "original_commit_id": "c75f4d49f1074b7d2efdcb807ad713850b473b72",
        "user": {
            "login": "printercu",
            "id": 1144890,
            "node_id": "MDQ6VXNlcjExNDQ4OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1144890?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/printercu",
            "html_url": "https://github.com/printercu",
            "followers_url": "https://api.github.com/users/printercu/followers",
            "following_url": "https://api.github.com/users/printercu/following{/other_user}",
            "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
            "organizations_url": "https://api.github.com/users/printercu/orgs",
            "repos_url": "https://api.github.com/users/printercu/repos",
            "events_url": "https://api.github.com/users/printercu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/printercu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "just FYI. It's better to use more fluent descriptions, which are read like usual English. Something like `it 'returns true for iso currency'` or even `it 'is true ...'`. You can find more examples and advices in http://betterspecs.org/",
        "created_at": "2018-08-16T15:57:29Z",
        "updated_at": "2018-08-16T16:01:05Z",
        "html_url": "https://github.com/RubyMoney/money/pull/791#discussion_r210651416",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/791",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/210651416"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/791#discussion_r210651416"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/791"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/210087989",
        "pull_request_review_id": 146232504,
        "id": 210087989,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDA4Nzk4OQ==",
        "diff_hunk": "@@ -2,7 +2,6 @@\n language: ruby\n sudo: false\n rvm:\n-  - 1.9.3",
        "path": ".travis.yml",
        "position": null,
        "original_position": 4,
        "commit_id": "d69cca7cc783a301c58380c9bfbe9aa79f736f71",
        "original_commit_id": "efacac7123dd0b4d3498c2c429f72ebabffd21a8",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do we have to drop `1.9.3` with this PR? The issue is that it will have to be a major version update in this case",
        "created_at": "2018-08-14T20:13:24Z",
        "updated_at": "2018-08-30T08:32:32Z",
        "html_url": "https://github.com/RubyMoney/money/pull/789#discussion_r210087989",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/789",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/210087989"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/789#discussion_r210087989"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/789"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/210153149",
        "pull_request_review_id": 146309953,
        "id": 210153149,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE1MzE0OQ==",
        "diff_hunk": "@@ -2,7 +2,6 @@\n language: ruby\n sudo: false\n rvm:\n-  - 1.9.3",
        "path": ".travis.yml",
        "position": null,
        "original_position": 4,
        "commit_id": "d69cca7cc783a301c58380c9bfbe9aa79f736f71",
        "original_commit_id": "efacac7123dd0b4d3498c2c429f72ebabffd21a8",
        "user": {
            "login": "AlexWayfer",
            "id": 6510020,
            "node_id": "MDQ6VXNlcjY1MTAwMjA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6510020?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlexWayfer",
            "html_url": "https://github.com/AlexWayfer",
            "followers_url": "https://api.github.com/users/AlexWayfer/followers",
            "following_url": "https://api.github.com/users/AlexWayfer/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlexWayfer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlexWayfer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlexWayfer/subscriptions",
            "organizations_url": "https://api.github.com/users/AlexWayfer/orgs",
            "repos_url": "https://api.github.com/users/AlexWayfer/repos",
            "events_url": "https://api.github.com/users/AlexWayfer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlexWayfer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> Do we have to drop 1.9.3 with this PR?\r\n\r\nYes: https://travis-ci.org/RubyMoney/money/jobs/415723861\r\n\r\nI'm even can't build `ruby-1.9.3-p551`. It's totally unsupported version since 23 Feb 2015: https://www.ruby-lang.org/en/news/2015/02/23/support-for-ruby-1-9-3-has-ended/\r\n\r\nI'm OK with a major version update.",
        "created_at": "2018-08-15T01:51:36Z",
        "updated_at": "2018-08-30T08:32:32Z",
        "html_url": "https://github.com/RubyMoney/money/pull/789#discussion_r210153149",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/789",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/210153149"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/789#discussion_r210153149"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/789"
            }
        },
        "in_reply_to_id": 210087989
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/213635565",
        "pull_request_review_id": 150510921,
        "id": 213635565,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzYzNTU2NQ==",
        "diff_hunk": "@@ -2271,19 +2271,20 @@\n     \"iso_numeric\": \"860\",\n     \"smallest_denomination\": 100\n   },\n-  \"vef\": {\n+  \"ves\": {\n     \"priority\": 100,\n-    \"iso_code\": \"VEF\",\n+    \"iso_code\": \"VES\",\n     \"name\": \"Venezuelan Bol\u00edvar\",",
        "path": "config/currency_iso.json",
        "position": null,
        "original_position": 9,
        "commit_id": "cc3c8dbda91b2f63a745d67509989f2aa737f9ee",
        "original_commit_id": "ac2010b00fd94ef0be9149f183c75876586a0caf",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It looks like the name of the new currency is \"Venezuelan Bol\u00edvar Soberano\"",
        "created_at": "2018-08-29T11:12:55Z",
        "updated_at": "2018-09-05T06:50:42Z",
        "html_url": "https://github.com/RubyMoney/money/pull/801#discussion_r213635565",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/801",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/213635565"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/801#discussion_r213635565"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/801"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/213132641",
        "pull_request_review_id": 149904971,
        "id": 213132641,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzEzMjY0MQ==",
        "diff_hunk": "@@ -226,23 +226,44 @@ def initialize(money, *rules)\n \n     def to_s\n       return free_text if show_free_text?\n+      log_warnings\n+      append_currency_symbol(append_sign(format_decimal_and_whole_part))\n+    end\n+\n+    def thousands_separator\n+      lookup :thousands_separator\n+    end\n+\n+    def decimal_mark\n+      lookup :decimal_mark\n+    end\n \n+    alias_method :delimiter, :thousands_separator\n+    alias_method :separator, :decimal_mark\n+\n+    private\n+\n+    attr_reader :money, :currency, :rules\n+\n+    def log_warnings",
        "path": "lib/money/money/formatter.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "2b4e57e319e2d07f05dd5bf422b36d9e39573254",
        "original_commit_id": "eb10df6c0e9964d791e3b5dc996d960564ab2034",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Have a look at https://github.com/RubyMoney/money/blob/master/lib/money/money/formatting_rules.rb#L97 I think it's a better place for these deprecations",
        "created_at": "2018-08-27T22:14:51Z",
        "updated_at": "2018-09-23T11:15:35Z",
        "html_url": "https://github.com/RubyMoney/money/pull/802#discussion_r213132641",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/802",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/213132641"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/802#discussion_r213132641"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/802"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/213133921",
        "pull_request_review_id": 149904971,
        "id": 213133921,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzEzMzkyMQ==",
        "diff_hunk": "@@ -226,23 +226,44 @@ def initialize(money, *rules)\n \n     def to_s\n       return free_text if show_free_text?\n+      log_warnings\n+      append_currency_symbol(append_sign(format_decimal_and_whole_part))",
        "path": "lib/money/money/formatter.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "2b4e57e319e2d07f05dd5bf422b36d9e39573254",
        "original_commit_id": "eb10df6c0e9964d791e3b5dc996d960564ab2034",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It might be a bit more readable to split this into 3 lines, something like:\r\n\r\n```ruby\r\nresult = format_decimal_and_whole_part\r\nformatted = append_sign(result)\r\nappend_currency_symbol(result)\r\n```\r\n\r\n",
        "created_at": "2018-08-27T22:21:24Z",
        "updated_at": "2018-09-23T11:15:35Z",
        "html_url": "https://github.com/RubyMoney/money/pull/802#discussion_r213133921",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/802",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/213133921"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/802#discussion_r213133921"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/802"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/213134114",
        "pull_request_review_id": 149904971,
        "id": 213134114,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzEzNDExNA==",
        "diff_hunk": "@@ -226,23 +226,44 @@ def initialize(money, *rules)\n \n     def to_s\n       return free_text if show_free_text?\n+      log_warnings\n+      append_currency_symbol(append_sign(format_decimal_and_whole_part))\n+    end\n+\n+    def thousands_separator\n+      lookup :thousands_separator\n+    end\n+\n+    def decimal_mark\n+      lookup :decimal_mark\n+    end\n \n+    alias_method :delimiter, :thousands_separator\n+    alias_method :separator, :decimal_mark\n+\n+    private\n+\n+    attr_reader :money, :currency, :rules\n+\n+    def log_warnings\n       if rules[:html]\n         warn \"[DEPRECATION] `html` is deprecated - use `html_wrap` instead. Please note that `html_wrap` will wrap all parts of currency and if you use `with_currency` option, currency element class changes from `currency` to `money-currency`.\"\n       end\n \n       if rules[:html_wrap_symbol]\n         warn \"[DEPRECATION] `html_wrap_symbol` is deprecated - use `html_wrap` instead. Please note that `html_wrap` will wrap all parts of currency.\"\n       end\n+    end\n \n+    def format_decimal_and_whole_part",
        "path": "lib/money/money/formatter.rb",
        "position": null,
        "original_position": 33,
        "commit_id": "2b4e57e319e2d07f05dd5bf422b36d9e39573254",
        "original_commit_id": "eb10df6c0e9964d791e3b5dc996d960564ab2034",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nit: `format_number` might be a better name for this method",
        "created_at": "2018-08-27T22:22:18Z",
        "updated_at": "2018-09-23T11:15:35Z",
        "html_url": "https://github.com/RubyMoney/money/pull/802#discussion_r213134114",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/802",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/213134114"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/802#discussion_r213134114"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/802"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245483413",
        "pull_request_review_id": 189603037,
        "id": 245483413,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTQ4MzQxMw==",
        "diff_hunk": "@@ -23,7 +23,7 @@ matrix:\n     - rvm: rbx-3\n   fast_finish: true\n before_install:\n-  - gem update bundler\n+  - gem install bundler --version 1.17.3",
        "path": ".travis.yml",
        "position": null,
        "original_position": 5,
        "commit_id": "4571521d71b931dbb70412b71f97cb34faf2fff6",
        "original_commit_id": "ea05b8ec4dccc57bbe7920be48bae2484eea8df8",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "perfect, can you please update this to `--version '~> 1.17'` in order to relax requirements a little bit?",
        "created_at": "2019-01-05T17:28:03Z",
        "updated_at": "2019-01-07T01:00:32Z",
        "html_url": "https://github.com/RubyMoney/money/pull/842#discussion_r245483413",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/842",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245483413"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/842#discussion_r245483413"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/842"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245483655",
        "pull_request_review_id": 189603316,
        "id": 245483655,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTQ4MzY1NQ==",
        "diff_hunk": "@@ -12,5 +12,6 @@ elsif RUBY_VERSION =~ /^1/\n   gem 'tins',           '~> 1.6.0'\n   gem 'term-ansicolor', '< 1.4'\n end\n+gem 'i18n', '1.2.0' if RUBY_VERSION =~ /^2\\.[012]/",
        "path": "Gemfile",
        "position": null,
        "original_position": 4,
        "commit_id": "4571521d71b931dbb70412b71f97cb34faf2fff6",
        "original_commit_id": "ea05b8ec4dccc57bbe7920be48bae2484eea8df8",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`RUBY_VERSION < '2.3'` should do the work and include 1.9",
        "created_at": "2019-01-05T17:38:05Z",
        "updated_at": "2019-01-07T01:00:32Z",
        "html_url": "https://github.com/RubyMoney/money/pull/842#discussion_r245483655",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/842",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245483655"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/842#discussion_r245483655"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/842"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245483693",
        "pull_request_review_id": 189603365,
        "id": 245483693,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTQ4MzY5Mw==",
        "diff_hunk": "@@ -12,5 +12,6 @@ elsif RUBY_VERSION =~ /^1/\n   gem 'tins',           '~> 1.6.0'\n   gem 'term-ansicolor', '< 1.4'\n end\n+gem 'i18n', '1.2.0' if RUBY_VERSION =~ /^2\\.[012]/",
        "path": "Gemfile",
        "position": null,
        "original_position": 4,
        "commit_id": "4571521d71b931dbb70412b71f97cb34faf2fff6",
        "original_commit_id": "ea05b8ec4dccc57bbe7920be48bae2484eea8df8",
        "user": {
            "login": "antstorm",
            "id": 118353,
            "node_id": "MDQ6VXNlcjExODM1Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/118353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antstorm",
            "html_url": "https://github.com/antstorm",
            "followers_url": "https://api.github.com/users/antstorm/followers",
            "following_url": "https://api.github.com/users/antstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/antstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/antstorm/orgs",
            "repos_url": "https://api.github.com/users/antstorm/repos",
            "events_url": "https://api.github.com/users/antstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also, will this work outside of TravisCI? As far as I remember `Gemfile` entries were ignored when using a gem",
        "created_at": "2019-01-05T17:39:49Z",
        "updated_at": "2019-01-07T01:00:32Z",
        "html_url": "https://github.com/RubyMoney/money/pull/842#discussion_r245483693",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/842",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245483693"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/842#discussion_r245483693"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/842"
            }
        },
        "in_reply_to_id": 245483655
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245530794",
        "pull_request_review_id": 189653770,
        "id": 245530794,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTUzMDc5NA==",
        "diff_hunk": "@@ -12,5 +12,6 @@ elsif RUBY_VERSION =~ /^1/\n   gem 'tins',           '~> 1.6.0'\n   gem 'term-ansicolor', '< 1.4'\n end\n+gem 'i18n', '1.2.0' if RUBY_VERSION =~ /^2\\.[012]/",
        "path": "Gemfile",
        "position": null,
        "original_position": 4,
        "commit_id": "4571521d71b931dbb70412b71f97cb34faf2fff6",
        "original_commit_id": "ea05b8ec4dccc57bbe7920be48bae2484eea8df8",
        "user": {
            "login": "orien",
            "id": 497874,
            "node_id": "MDQ6VXNlcjQ5Nzg3NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/497874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orien",
            "html_url": "https://github.com/orien",
            "followers_url": "https://api.github.com/users/orien/followers",
            "following_url": "https://api.github.com/users/orien/following{/other_user}",
            "gists_url": "https://api.github.com/users/orien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orien/subscriptions",
            "organizations_url": "https://api.github.com/users/orien/orgs",
            "repos_url": "https://api.github.com/users/orien/repos",
            "events_url": "https://api.github.com/users/orien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orien/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The `Gemfile` is used by Bundler, so this will effect TravisCI and developers of the Money gem.\r\n\r\nThis won't influence the gem once it's released to Rubygems. And nor should it. Project teams should be managing their own dependencies for their Ruby runtime specifics.",
        "created_at": "2019-01-07T00:50:16Z",
        "updated_at": "2019-01-07T01:00:32Z",
        "html_url": "https://github.com/RubyMoney/money/pull/842#discussion_r245530794",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/842",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245530794"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/842#discussion_r245530794"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/842"
            }
        },
        "in_reply_to_id": 245483655
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245531444",
        "pull_request_review_id": 189654634,
        "id": 245531444,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTUzMTQ0NA==",
        "diff_hunk": "@@ -12,5 +12,6 @@ elsif RUBY_VERSION =~ /^1/\n   gem 'tins',           '~> 1.6.0'\n   gem 'term-ansicolor', '< 1.4'\n end\n+gem 'i18n', '1.2.0' if RUBY_VERSION =~ /^2\\.[012]/",
        "path": "Gemfile",
        "position": null,
        "original_position": 4,
        "commit_id": "4571521d71b931dbb70412b71f97cb34faf2fff6",
        "original_commit_id": "ea05b8ec4dccc57bbe7920be48bae2484eea8df8",
        "user": {
            "login": "orien",
            "id": 497874,
            "node_id": "MDQ6VXNlcjQ5Nzg3NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/497874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orien",
            "html_url": "https://github.com/orien",
            "followers_url": "https://api.github.com/users/orien/followers",
            "following_url": "https://api.github.com/users/orien/following{/other_user}",
            "gists_url": "https://api.github.com/users/orien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orien/subscriptions",
            "organizations_url": "https://api.github.com/users/orien/orgs",
            "repos_url": "https://api.github.com/users/orien/repos",
            "events_url": "https://api.github.com/users/orien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orien/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Looks like the Ruby 1.9.3 job is installing i18n v0.9.5 for other reasons.\r\nhttps://travis-ci.org/RubyMoney/money/jobs/476150499#L522",
        "created_at": "2019-01-07T01:04:09Z",
        "updated_at": "2019-01-07T01:04:10Z",
        "html_url": "https://github.com/RubyMoney/money/pull/842#discussion_r245531444",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/842",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245531444"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/842#discussion_r245531444"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/842"
            }
        },
        "in_reply_to_id": 245483655
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245531492",
        "pull_request_review_id": 189654680,
        "id": 245531492,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTUzMTQ5Mg==",
        "diff_hunk": "@@ -12,5 +12,6 @@ elsif RUBY_VERSION =~ /^1/\n   gem 'tins',           '~> 1.6.0'\n   gem 'term-ansicolor', '< 1.4'\n end\n+gem 'i18n', '1.2.0' if RUBY_VERSION =~ /^2\\.[012]/",
        "path": "Gemfile",
        "position": null,
        "original_position": 4,
        "commit_id": "4571521d71b931dbb70412b71f97cb34faf2fff6",
        "original_commit_id": "ea05b8ec4dccc57bbe7920be48bae2484eea8df8",
        "user": {
            "login": "orien",
            "id": 497874,
            "node_id": "MDQ6VXNlcjQ5Nzg3NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/497874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orien",
            "html_url": "https://github.com/orien",
            "followers_url": "https://api.github.com/users/orien/followers",
            "following_url": "https://api.github.com/users/orien/following{/other_user}",
            "gists_url": "https://api.github.com/users/orien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orien/subscriptions",
            "organizations_url": "https://api.github.com/users/orien/orgs",
            "repos_url": "https://api.github.com/users/orien/repos",
            "events_url": "https://api.github.com/users/orien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orien/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Change applied in 42f1745.",
        "created_at": "2019-01-07T01:04:48Z",
        "updated_at": "2019-01-07T01:04:48Z",
        "html_url": "https://github.com/RubyMoney/money/pull/842#discussion_r245531492",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/842",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245531492"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/842#discussion_r245531492"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/842"
            }
        },
        "in_reply_to_id": 245483655
    },
    {
        "url": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245531515",
        "pull_request_review_id": 189654712,
        "id": 245531515,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTUzMTUxNQ==",
        "diff_hunk": "@@ -23,7 +23,7 @@ matrix:\n     - rvm: rbx-3\n   fast_finish: true\n before_install:\n-  - gem update bundler\n+  - gem install bundler --version 1.17.3",
        "path": ".travis.yml",
        "position": null,
        "original_position": 5,
        "commit_id": "4571521d71b931dbb70412b71f97cb34faf2fff6",
        "original_commit_id": "ea05b8ec4dccc57bbe7920be48bae2484eea8df8",
        "user": {
            "login": "orien",
            "id": 497874,
            "node_id": "MDQ6VXNlcjQ5Nzg3NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/497874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orien",
            "html_url": "https://github.com/orien",
            "followers_url": "https://api.github.com/users/orien/followers",
            "following_url": "https://api.github.com/users/orien/following{/other_user}",
            "gists_url": "https://api.github.com/users/orien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orien/subscriptions",
            "organizations_url": "https://api.github.com/users/orien/orgs",
            "repos_url": "https://api.github.com/users/orien/repos",
            "events_url": "https://api.github.com/users/orien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orien/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Change applied in 4571521.",
        "created_at": "2019-01-07T01:05:18Z",
        "updated_at": "2019-01-07T01:05:18Z",
        "html_url": "https://github.com/RubyMoney/money/pull/842#discussion_r245531515",
        "pull_request_url": "https://api.github.com/repos/RubyMoney/money/pulls/842",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/comments/245531515"
            },
            "html": {
                "href": "https://github.com/RubyMoney/money/pull/842#discussion_r245531515"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RubyMoney/money/pulls/842"
            }
        },
        "in_reply_to_id": 245483413
    }
]