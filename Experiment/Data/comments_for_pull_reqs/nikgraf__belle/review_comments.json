[
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/30703311",
        "pull_request_review_id": null,
        "id": 30703311,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzAzMzEx",
        "diff_hunk": "@@ -0,0 +1,136 @@\n+\"use strict\";\n+\n+import React, {Component} from 'react';\n+import {extend, omit} from 'underscore';\n+import style from '../style/rating.js'\n+import {injectStyles, removeStyle} from '../utils/inject-style';\n+\n+/**\n+ * Rating component: shows 5 stars for rating. Allows to display, update, disable rating.\n+ */\n+export default class Rating extends Component {\n+\n+  constructor(properties) {\n+    super(properties);\n+    this.state = {\n+      rating: this.props.value,\n+      hoverRating: undefined\n+    };\n+  }\n+\n+  /**\n+   * Function to apply pseudo classes to rating and rating holder divs.\n+   */\n+  componentWillMount() {\n+    const id = this._reactInternalInstance._rootNodeID.replace(/\\./g, '-');\n+    this.ratingStyleId = `rating-style-id${id}`;\n+    this.ratingHolderStyleId = `rating-holder-style-id${id}`;\n+    updatePseudoClassStyle(this.ratingStyleId, style.ratingStyleBefore);\n+    updatePseudoClassStyle(this.ratingHolderStyleId, style.ratingHolderStyleBefore);\n+  }\n+\n+  /**\n+   * Funtion to remove pseudo classes from dom once component is removed.\n+   */\n+  componentWillUnmount() {\n+    removeStyle(this.ratingStyleId);\n+    removeStyle(this.ratingHolderStyleId);\n+  }\n+\n+  /**\n+   * Calculate width of highlighted stars, the function uses this.state.hoverRating\n+   * if it exists else it uses this.state.rating.\n+   */\n+  _getWidth() {\n+    var value = this.state.hoverRating?this.state.hoverRating:this.state.rating;\n+    return (Math.round(value) * 20) + '%';\n+  }\n+\n+  /**\n+   * When mouse hover overs the component this function will set the hoverRating\n+   * in the component state depending on mouse position.\n+   */\n+  _onMouseMove(e) {\n+    if(!this.props.disabled) {\n+      const wrapperNode = React.findDOMNode(this.refs.holder);\n+      const holderWidth = wrapperNode.getBoundingClientRect().width;\n+      const mouseMoved = e.pageX - wrapperNode.getBoundingClientRect().left;\n+      const newRating = mouseMoved * 5 / holderWidth;\n+      this.setState({\n+        hoverRating: newRating\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Function will reset hover rating as mouse leaves.\n+   */\n+  _onMouseLeave() {\n+    if(!this.props.disabled) {\n+      this.setState({\n+        hoverRating: undefined\n+      });\n+    }\n+  }\n+\n+  /**\n+   * The function will update rating when component is clicked.\n+   */\n+  _onClick() {\n+    if(!this.props.disabled) {\n+      this.setState({\n+        rating: this.state.hoverRating\n+      });\n+    }\n+  }\n+\n+  //We may not allow custom styling to component since that can interfere with the rating calculations.\n+  /**\n+   * Function to render component.\n+   */\n+  render () {\n+    const width = this._getWidth();\n+    const ratingCalculatedStyle = extend({}, style.ratingStyle, {width: width});\n+\n+    return <div ref=\"holder\"\n+                style={style.ratingHolderStyle}\n+                className={ this.ratingHolderStyleId }\n+                onMouseMove={ this._onMouseMove.bind(this) }\n+                onMouseLeave={ this._onMouseLeave.bind(this) }\n+                onClick={ this._onClick.bind(this) }>\n+                <div style={ratingCalculatedStyle}\n+                  className={ this.ratingStyleId }></div>\n+              </div>;\n+  }\n+}\n+\n+/**\n+ * Props of Rating component\n+ */\n+Rating.propTypes = {\n+  value: React.PropTypes.oneOf([0, 1, 2, 3, 4, 5]).isRequired,\n+  disabled: React.PropTypes.bool\n+};\n+\n+/**\n+ * Setting default prop values.\n+ */\n+Rating.defaultProps = {\n+  disabled: false\n+};\n+\n+Rating.displayName = 'Belle Rating';\n+\n+/**\n+ * Function to create pseudo classes for styles.\n+ */\n+function updatePseudoClassStyle(styleId, style) {\n+  const styles = [\n+    {\n+      id: styleId,\n+      style: style,\n+      pseudoClass: ':before'\n+    }\n+  ];\n+  injectStyles(styles);",
        "path": "src/components/Rating.jsx",
        "position": 135,
        "original_position": 135,
        "commit_id": "9f5f59c36cf28341eb89b037025bf63960a2d4b9",
        "original_commit_id": "9f5f59c36cf28341eb89b037025bf63960a2d4b9",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ideally this should not be called multiple times as it triggers a DOM manipulation. I would recommend to update the `updatePseudoClassStyle` & take both styleIDs\n",
        "created_at": "2015-05-20T13:53:10Z",
        "updated_at": "2015-05-20T13:53:10Z",
        "html_url": "https://github.com/nikgraf/belle/pull/25#discussion_r30703311",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/25",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/30703311"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/25#discussion_r30703311"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/25"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/30946638",
        "pull_request_review_id": null,
        "id": 30946638,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTQ2NjM4",
        "diff_hunk": "@@ -342,6 +342,10 @@ export default class Select extends Component {\n    * Pressing Escape will close the options area.\n    */\n   _onKeyDown (event) {\n+    if (this.props.disabled) {\n+      event.preventDefault();\n+      return;",
        "path": "src/components/Select.jsx",
        "position": 15,
        "original_position": 15,
        "commit_id": "3cd278434d5431a704ef7583cc36b5cac16e7099",
        "original_commit_id": "3cd278434d5431a704ef7583cc36b5cac16e7099",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If you return early here this whole block never will be called:\n\n```\nif (this.props.wrapperProperties && this.props.wrapperProperties.onKeyDown) {\n  this.props.wrapperProperties.onKeyDown(event);\n}\n```\n\nI think it's better to this:\n\n```\nif(!this.props.disabled && filter(this.props.children, isOption).length > 0) {\n```\n\nIs there a specific reason why you called preventDefault?\n",
        "created_at": "2015-05-23T17:50:47Z",
        "updated_at": "2015-05-23T17:50:47Z",
        "html_url": "https://github.com/nikgraf/belle/pull/26#discussion_r30946638",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/26",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/30946638"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/26#discussion_r30946638"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/26"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/30956950",
        "pull_request_review_id": null,
        "id": 30956950,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTU2OTUw",
        "diff_hunk": "@@ -124,13 +151,72 @@ Rating.displayName = 'Belle Rating';\n /**\n  * Function to create pseudo classes for styles.\n  */\n-function updatePseudoClassStyle(styleId, style) {\n+function updatePseudoClassStyle(ratingStyleId, ratingWrapperStyleId, properties) {\n+  const ratingStyleBefore = {\n+    content: \"'\" + properties.ratingCharacter + properties.ratingCharacter + properties.ratingCharacter +\n+              properties.ratingCharacter + properties.ratingCharacter + \"'\"\n+  };\n   const styles = [\n     {\n-      id: styleId,\n-      style: style,\n+      id: ratingStyleId,\n+      style: ratingStyleBefore,\n+      pseudoClass: ':before'\n+    },\n+    {\n+      id: ratingWrapperStyleId,\n+      style: ratingStyleBefore,\n       pseudoClass: ':before'\n     }\n   ];\n+  if(properties.focusStyle) {\n+    styles.push({\n+        id: ratingWrapperStyleId,\n+        style: properties.focusStyle,\n+        pseudoClass: 'focus'\n+      });\n+  }\n+  if(properties.focusStyle) {",
        "path": "src/components/Rating.jsx",
        "position": null,
        "original_position": 188,
        "commit_id": "f60bbaeb5ebec6abf61b5d2e99781b3613051d26",
        "original_commit_id": "b7adaf399552c18155effa95ccbc0ab0e3993b9b",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@jpuri seems like a duplication from line 171\n",
        "created_at": "2015-05-24T23:25:40Z",
        "updated_at": "2015-05-24T23:31:17Z",
        "html_url": "https://github.com/nikgraf/belle/pull/27#discussion_r30956950",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/27",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/30956950"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/27#discussion_r30956950"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/27"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31154275",
        "pull_request_review_id": null,
        "id": 31154275,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTU0Mjc1",
        "diff_hunk": "@@ -6,6 +6,9 @@ import style from '../style/rating.js'\n import {injectStyles, removeStyle} from '../utils/inject-style';\n import unionClassNames from '../utils/union-class-names';\n \n+// Enable React Touch Events\n+React.initializeTouchEvents(true);",
        "path": "src/components/Rating.jsx",
        "position": 5,
        "original_position": 5,
        "commit_id": "86c93d7c7271dd65e7a41ee399633e9833863c87",
        "original_commit_id": "86c93d7c7271dd65e7a41ee399633e9833863c87",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ah good one, I forgot about it :)\n",
        "created_at": "2015-05-27T16:45:32Z",
        "updated_at": "2015-05-27T16:45:32Z",
        "html_url": "https://github.com/nikgraf/belle/pull/32#discussion_r31154275",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/32",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31154275"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/32#discussion_r31154275"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/32"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31391701",
        "pull_request_review_id": null,
        "id": 31391701,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzkxNzAx",
        "diff_hunk": "@@ -272,6 +281,10 @@ export default class Rating extends Component {\n                 onTouchCancel={ this._onTouchCancel.bind(this) }\n                 onBlur={ this._onBlur.bind( this) }\n                 tabIndex={ tabIndex }\n+                aria-valuemax = {5}\n+                aria-valuemin = {0}\n+                aria-valuenow = {this.state.rating}\n+                aria-disabled = {this.props.disabled}",
        "path": "src/components/Rating.jsx",
        "position": 158,
        "original_position": 158,
        "commit_id": "e386bafb8720bc0e05e0fceb5ff83b3b1a16f6d2",
        "original_commit_id": "e386bafb8720bc0e05e0fceb5ff83b3b1a16f6d2",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nice @ aria tags!\n",
        "created_at": "2015-05-31T16:20:00Z",
        "updated_at": "2015-05-31T16:20:00Z",
        "html_url": "https://github.com/nikgraf/belle/pull/35#discussion_r31391701",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/35",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31391701"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/35#discussion_r31391701"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/35"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31391740",
        "pull_request_review_id": null,
        "id": 31391740,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzkxNzQw",
        "diff_hunk": "@@ -108,20 +108,264 @@ export default class RatingDocumentation extends Component {\n             </p>\n           </td>\n         </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            className\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>String</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              Name of the classes that will get added to the component.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            hoverStyle\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Object</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This style will be applied to the component when it is hovered.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            focusStyle\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Object</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This style will be applied to the component when it is focused.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            disabledStyle\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Object</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This style will be applied to the component if it is disabled.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            disabledHoverStyle\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Object</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This style will be applied to the component if it is disabled and it is hovered.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onMouseEnter\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Function</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This callback will get executed as mouse enters into the component.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onMouseLeave\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Function</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This callback will get executed as mouse leaves the component.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onMouseMove\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Function</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This callback will get executed as mouse moves over the component.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onTouchStart\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Function</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This callback will get executed as on touch start event.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onTouchMove\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Function</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This callback will get executed as on touch move event.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onTouchEnd",
        "path": "docs/js/RatingDocumentation.jsx",
        "position": 183,
        "original_position": 183,
        "commit_id": "e386bafb8720bc0e05e0fceb5ff83b3b1a16f6d2",
        "original_commit_id": "e386bafb8720bc0e05e0fceb5ff83b3b1a16f6d2",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@jpuri In other components I only added the properties that are not common to the documentation & one sentence with the information that you as developer can add any other attribute that you normally use.\n\nHow do you feel about the documentation? Would you prefer to add all of the once we overwrite? What about we split between the custom ones & the common ones?\n",
        "created_at": "2015-05-31T16:24:40Z",
        "updated_at": "2015-05-31T16:24:40Z",
        "html_url": "https://github.com/nikgraf/belle/pull/35#discussion_r31391740",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/35",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31391740"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/35#discussion_r31391740"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/35"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31391969",
        "pull_request_review_id": null,
        "id": 31391969,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzkxOTY5",
        "diff_hunk": "@@ -108,20 +108,264 @@ export default class RatingDocumentation extends Component {\n             </p>\n           </td>\n         </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            className\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>String</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              Name of the classes that will get added to the component.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            hoverStyle\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Object</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This style will be applied to the component when it is hovered.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            focusStyle\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Object</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This style will be applied to the component when it is focused.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            disabledStyle\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Object</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This style will be applied to the component if it is disabled.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            disabledHoverStyle\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Object</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This style will be applied to the component if it is disabled and it is hovered.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onMouseEnter\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Function</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This callback will get executed as mouse enters into the component.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onMouseLeave\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Function</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This callback will get executed as mouse leaves the component.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onMouseMove\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Function</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This callback will get executed as mouse moves over the component.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onTouchStart\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Function</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This callback will get executed as on touch start event.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onTouchMove\n+          </td>\n+          <td style={ propertyDescriptionStyle }>\n+            <p style={ {marginTop: 0} }>\n+              <i>Function</i>\n+              <br />\n+              optional\n+            </p>\n+            <p>\n+              This callback will get executed as on touch move event.\n+            </p>\n+          </td>\n+        </tr>\n+        <tr>\n+          <td style={ propertyNameStyle }>\n+            onTouchEnd",
        "path": "docs/js/RatingDocumentation.jsx",
        "position": 183,
        "original_position": 183,
        "commit_id": "e386bafb8720bc0e05e0fceb5ff83b3b1a16f6d2",
        "original_commit_id": "e386bafb8720bc0e05e0fceb5ff83b3b1a16f6d2",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it would be better to split between custom and common ones. Let me change this doc to remove common ones.\n",
        "created_at": "2015-05-31T16:47:12Z",
        "updated_at": "2015-05-31T16:47:12Z",
        "html_url": "https://github.com/nikgraf/belle/pull/35#discussion_r31391969",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/35",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31391969"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/35#discussion_r31391969"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/35"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31668593",
        "pull_request_review_id": null,
        "id": 31668593,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjY4NTkz",
        "diff_hunk": "@@ -177,28 +214,29 @@ export default class Rating extends Component {\n   }\n \n   /**\n-   * On focus callback will enable focus styling on component when focused using tab.\n+   * enable focus styling of component when tab is used to focus component\n    */\n   _onFocus() {\n     if(!this.active) {\n       this.setState({focused: true});\n     }\n-    this.forceUpdate();\n     if (this.props.onFocus) {\n       this.props.onFocus(event);\n     }\n   }\n \n   /**\n-   * When user clicks the component this callback will update component value to that selected by user.\n+   * update component when clicked\n    */\n   _onClick(event) {\n     if(!this.props.disabled) {\n       this._updateComponent();\n     }\n+\n     if (this.props.onClick) {\n       this.props.onClick(event);\n     }\n+    React.findDOMNode(this.refs.wrapper).blur();",
        "path": "src/components/Rating.jsx",
        "position": null,
        "original_position": 213,
        "commit_id": "3ca09d728878571cce01127e3e31e6c7c1264ddf",
        "original_commit_id": "d5aa0f859adbbac38b041b23f6bb61f9022f3ab6",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Did you call blur to make sure focus is not applied on click?\n\nThis would break the default behaviour of all native & belle input elements. If you click on an element it's focused. For example with a native select you can open the dropdown with space. A checkbox can be toggled with space.\n",
        "created_at": "2015-06-03T20:53:09Z",
        "updated_at": "2015-06-04T05:24:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/37#discussion_r31668593",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/37",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31668593"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/37#discussion_r31668593"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/37"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31693825",
        "pull_request_review_id": null,
        "id": 31693825,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjkzODI1",
        "diff_hunk": "@@ -177,28 +214,29 @@ export default class Rating extends Component {\n   }\n \n   /**\n-   * On focus callback will enable focus styling on component when focused using tab.\n+   * enable focus styling of component when tab is used to focus component\n    */\n   _onFocus() {\n     if(!this.active) {\n       this.setState({focused: true});\n     }\n-    this.forceUpdate();\n     if (this.props.onFocus) {\n       this.props.onFocus(event);\n     }\n   }\n \n   /**\n-   * When user clicks the component this callback will update component value to that selected by user.\n+   * update component when clicked\n    */\n   _onClick(event) {\n     if(!this.props.disabled) {\n       this._updateComponent();\n     }\n+\n     if (this.props.onClick) {\n       this.props.onClick(event);\n     }\n+    React.findDOMNode(this.refs.wrapper).blur();",
        "path": "src/components/Rating.jsx",
        "position": null,
        "original_position": 213,
        "commit_id": "3ca09d728878571cce01127e3e31e6c7c1264ddf",
        "original_commit_id": "d5aa0f859adbbac38b041b23f6bb61f9022f3ab6",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I got ur point in an ideal world keyboard events should not be mixed up with mouse events. But that does not exist. It can break user expectation to be able to use keyboard after click.\n\nLet me remove this line, I will have to think some different fix for the issue of focus styling coming back when browser tab reopened. \n",
        "created_at": "2015-06-04T05:17:56Z",
        "updated_at": "2015-06-04T05:30:03Z",
        "html_url": "https://github.com/nikgraf/belle/pull/37#discussion_r31693825",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31693825"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/37#discussion_r31693825"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/37"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31864718",
        "pull_request_review_id": null,
        "id": 31864718,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODY0NzE4",
        "diff_hunk": "@@ -266,85 +254,88 @@ export default class Rating extends Component {\n   }\n \n   /**\n-   * calculate tempRating and apply highlighting to the component when it is clicked, touch ends, enter or space key are hit\n+   * calculate focusedValue and apply highlighting to the component when it is clicked, touch ends, enter or space key are hit\n    */\n   _changeComponent(pageX) {\n     const wrapperNode = React.findDOMNode(this.refs.wrapper);\n     const wrapperWidth = wrapperNode.getBoundingClientRect().width;\n     const mouseMoved = pageX - wrapperNode.getBoundingClientRect().left;\n-    const newRating = Math.round(mouseMoved * 5 / wrapperWidth + .4);\n-    this._showTempRating(newRating);\n+    const newRating = Math.round(mouseMoved * 5 / wrapperWidth + 0.4);\n+    this._showFocusedValue(newRating);\n   }\n \n   /**\n    * update component component is clicked, touch ends, enter or space key are hit.\n    */\n   _updateComponent() {\n-    var ratingValue = this.state.tempRating > 0 ? this.state.tempRating : undefined;\n-    if(this.props.valueLink) {\n-      this.props.valueLink.requestChange(ratingValue);\n-    }\n-    else if(!this.props.value && this.props.defaultValue) {\n-      this.setState({\n-        rating: ratingValue\n-      });\n-    }\n+    var value = this.state.focusedValue > 0 ? this.state.focusedValue : undefined;\n+\n     this.setState({",
        "path": "src/components/Rating.jsx",
        "position": 192,
        "original_position": 192,
        "commit_id": "7b132e30d4cc1af8792d4997cc553ad8249432fe",
        "original_commit_id": "7b132e30d4cc1af8792d4997cc553ad8249432fe",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hey Nik,\n\nI am confused about this line below setting value in state for all (valueLink, value and defaultValue). This the rating shown by component with colored stars will be immediately updated. But what we rather want for controlled components is that node.value should update and onChange called, but visibly value should be seen update in a controlled way.\n",
        "created_at": "2015-06-06T05:02:53Z",
        "updated_at": "2015-06-06T05:02:53Z",
        "html_url": "https://github.com/nikgraf/belle/pull/39#discussion_r31864718",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/39",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/31864718"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/39#discussion_r31864718"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/39"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32378627",
        "pull_request_review_id": null,
        "id": 32378627,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzc4NjI3",
        "diff_hunk": "@@ -72,6 +72,13 @@ export default class Rating extends Component {\n   }\n ",
        "path": "src/components/Rating.jsx",
        "position": 2,
        "original_position": 2,
        "commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "original_commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I added this function here coz I found that for react components like <input> you can always query node's value to get real value of component.\nSo Rating / Select should also do that.\n\nCheck these lines in React docs (https://facebook.github.io/react/docs/forms.html):\n\nThis renders an input initialized with the value, Untitled. When the user updates the input, the node's value property will change. However, node.getAttribute('value') will still return the value used at initialization time, Untitled.\n",
        "created_at": "2015-06-14T11:36:32Z",
        "updated_at": "2015-06-15T08:45:18Z",
        "html_url": "https://github.com/nikgraf/belle/pull/48#discussion_r32378627",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/48",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32378627"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/48#discussion_r32378627"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/48"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32536877",
        "pull_request_review_id": null,
        "id": 32536877,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNTM2ODc3",
        "diff_hunk": "@@ -44,13 +44,13 @@ export default class Select extends Component {\n \n     let selectedValue, focusedOptionValue;\n \n-    if (this.props.valueLink) {\n+    if (has(this.props, 'valueLink')) {",
        "path": "src/components/Select.jsx",
        "position": 14,
        "original_position": 14,
        "commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "original_commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good one, we should probably use that in other parts as well!\n",
        "created_at": "2015-06-16T16:02:31Z",
        "updated_at": "2015-06-16T16:02:31Z",
        "html_url": "https://github.com/nikgraf/belle/pull/48#discussion_r32536877",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/48",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32536877"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/48#discussion_r32536877"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/48"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32537209",
        "pull_request_review_id": null,
        "id": 32537209,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNTM3MjA5",
        "diff_hunk": "@@ -72,6 +72,13 @@ export default class Rating extends Component {\n   }\n ",
        "path": "src/components/Rating.jsx",
        "position": 2,
        "original_position": 2,
        "commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "original_commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fair enough. Feels somewhat weird to apply it directly to the DOM node. Might gut-feeling tells me this might cause trouble, but I don't have a real case. Let's go for it :+1: \n",
        "created_at": "2015-06-16T16:05:55Z",
        "updated_at": "2015-06-16T16:05:55Z",
        "html_url": "https://github.com/nikgraf/belle/pull/48#discussion_r32537209",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/48",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32537209"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/48#discussion_r32537209"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/48"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32537417",
        "pull_request_review_id": null,
        "id": 32537417,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNTM3NDE3",
        "diff_hunk": "@@ -72,6 +72,13 @@ export default class Rating extends Component {\n   }\n ",
        "path": "src/components/Rating.jsx",
        "position": 2,
        "original_position": 2,
        "commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "original_commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just noticed I did the same in the Select already with\n\n```\n-      const wrapperNode = React.findDOMNode(this);\n-      wrapperNode.value = value;\n```\n\n :smile: \n",
        "created_at": "2015-06-16T16:08:11Z",
        "updated_at": "2015-06-16T16:08:11Z",
        "html_url": "https://github.com/nikgraf/belle/pull/48#discussion_r32537417",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/48",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32537417"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/48#discussion_r32537417"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/48"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32537439",
        "pull_request_review_id": null,
        "id": 32537439,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNTM3NDM5",
        "diff_hunk": "@@ -230,26 +237,32 @@ export default class Select extends Component {\n    * provided change callback for onChange or valueLink is called.\n    */\n   _triggerChange (value) {\n-    if(isUndefined(this.props.value)) {\n+    if(has(this.props, 'valueLink')) {\n+      this.props.valueLink.requestChange(value);",
        "path": "src/components/Select.jsx",
        "position": 46,
        "original_position": 46,
        "commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "original_commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good one as well!\n",
        "created_at": "2015-06-16T16:08:22Z",
        "updated_at": "2015-06-16T16:08:22Z",
        "html_url": "https://github.com/nikgraf/belle/pull/48#discussion_r32537439",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/48",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32537439"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/48#discussion_r32537439"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/48"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32596449",
        "pull_request_review_id": null,
        "id": 32596449,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNTk2NDQ5",
        "diff_hunk": "@@ -72,6 +72,13 @@ export default class Rating extends Component {\n   }\n ",
        "path": "src/components/Rating.jsx",
        "position": 2,
        "original_position": 2,
        "commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "original_commit_id": "dde2ce809aec1c2e33fe4d2384cd780804ef4b91",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I am also not very confident about \n\n`wrapperNode.value = value;`\n\nIt looks hacky. I will check other react component to find how they really handle this.\n",
        "created_at": "2015-06-17T05:36:17Z",
        "updated_at": "2015-06-17T05:36:17Z",
        "html_url": "https://github.com/nikgraf/belle/pull/48#discussion_r32596449",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/48",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/32596449"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/48#discussion_r32596449"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/48"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33110714",
        "pull_request_review_id": null,
        "id": 33110714,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMTEwNzE0",
        "diff_hunk": "@@ -0,0 +1,195 @@\n+\"use strict\";\n+\n+var comboBoxStyle = {\n+\n+  style: {\n+    /* normalize.css v3.0.1 */\n+    font: 'inherit',\n+    margin: 0,\n+\n+    /* Reset the default borderRadius for Mobile Safari */\n+    borderRadius: 0,\n+\n+    /* Belle TextInput style */\n+    overflow: 'hidden',\n+    resize: 'none',\n+    width: '100%',\n+    fontSize: 14,\n+    paddingTop: '7px',\n+    paddingBottom: '5px',\n+    color: '#505050',\n+    border: '0 solid #fff',\n+    borderBottom: '1px solid #ccc',\n+    display: 'block',\n+    boxSizing: 'border-box',\n+    position: 'relative',\n+\n+    /*\n+    To avoid any kind of flickering the user won't get feedback\n+    for selecting the button text\n+    */\n+    WebkitUserSelect: 'none',\n+    MozUserSelect: 'none',\n+    MsUserSelect: 'none',\n+    userSelect: 'none',\n+\n+    /* This button can only be pressed */\n+    MsTouchAction: 'manipulation',\n+    touchAction: 'manipulation',\n+\n+    /*\n+    Prevent flickering while tapping on WebKit\n+    http://stackoverflow.com/a/3516243/837709\n+    */\n+    WebkitTapHighlightColor: 'transparent'\n+  },\n+\n+  focusStyle: {\n+    borderBottom: '1px solid #6EB8D4',\n+    boxSizing: 'border-box',\n+    paddingTop: '7px',\n+    paddingBottom: '5px',\n+    outline: 'none',\n+\n+    /*\n+    To avoid any kind of flickering the user won't get feedback\n+    for selecting the button text\n+    */\n+    WebkitUserSelect: 'none',\n+    MozUserSelect: 'none',\n+    MsUserSelect: 'none',\n+    userSelect: 'none',\n+\n+    /* This button can only be pressed */\n+    MsTouchAction: 'manipulation',\n+    touchAction: 'manipulation',\n+\n+    /*\n+    Prevent flickering while tapping on WebKit\n+    http://stackoverflow.com/a/3516243/837709\n+    */\n+    WebkitTapHighlightColor: 'transparent'\n+  },\n+\n+  hoverStyle: {\n+    borderBottom: '1px solid #92D6EF',\n+    boxSizing: 'border-box',\n+    paddingTop: '7px',\n+    paddingBottom: '5px',\n+\n+    /*\n+    To avoid any kind of flickering the user won't get feedback\n+    for selecting the button text\n+    */\n+    WebkitUserSelect: 'none',\n+    MozUserSelect: 'none',\n+    MsUserSelect: 'none',\n+    userSelect: 'none',\n+\n+    /* This button can only be pressed */\n+    MsTouchAction: 'manipulation',\n+    touchAction: 'manipulation',\n+\n+    /*\n+    Prevent flickering while tapping on WebKit\n+    http://stackoverflow.com/a/3516243/837709\n+    */\n+    WebkitTapHighlightColor: 'transparent'\n+  },\n+\n+  wrapperStyle: {\n+    outline: 0, // to avoid default focus behaviour\n+    boxSizing: 'border-box',\n+    position: 'relative'\n+  },\n+\n+  menuStyle: {\n+    display: 'block',\n+    listStyleType: 'none',\n+    background: '#FFF',\n+    padding: '6px 0',\n+    margin: 0,\n+    position: 'absolute',\n+    width: '100%',\n+    zIndex: 10000,\n+    boxSizing: 'border-box',\n+    borderRadius: 2,\n+    boxShadow: '0 1px 1px rgba(0, 0, 0, 0.2)',\n+    borderTop: '1px solid #f2f2f2',\n+    /* Improve scrolling for mobile Safari */\n+    WebkitOverflowScrolling: 'touch'\n+  },\n+\n+  disabledStyle: {\n+    borderBottom: '1px dotted #9F9F9F',\n+    boxSizing: 'border-box',\n+    paddingTop: '7px',\n+    paddingBottom: '5px',\n+    /*\n+    To avoid any kind of flickering the user won't get feedback\n+    for selecting the button text\n+    */\n+    WebkitUserSelect: 'none',\n+    MozUserSelect: 'none',\n+    MsUserSelect: 'none',\n+    userSelect: 'none',\n+    /* This button can only be pressed */\n+    MsTouchAction: 'manipulation',\n+    touchAction: 'manipulation',\n+    /*\n+    Prevent flickering while tapping on WebKit\n+    http://stackoverflow.com/a/3516243/837709\n+    */\n+    WebkitTapHighlightColor: 'transparent'\n+  },\n+\n+  disabledHoverStyle: {\n+    borderBottom: '1px dotted #92D6EF',\n+    cursor: 'not-allowed',\n+    boxSizing: 'border-box',\n+    paddingTop: '7px',\n+    paddingBottom: '5px',\n+    /*\n+    To avoid any kind of flickering the user won't get feedback\n+    for selecting the button text\n+    */\n+    WebkitUserSelect: 'none',\n+    MozUserSelect: 'none',\n+    MsUserSelect: 'none',\n+    userSelect: 'none',\n+    /* This button can only be pressed */\n+    MsTouchAction: 'manipulation',\n+    touchAction: 'manipulation',\n+    /*\n+    Prevent flickering while tapping on WebKit\n+    http://stackoverflow.com/a/3516243/837709\n+    */\n+    WebkitTapHighlightColor: 'transparent'\n+  },\n+\n+  disabledCaretToOpenStyle: {\n+    paddingRight: '26px',\n+    backgroundImage: \"url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"12\\\"><polygon points=\\\"0,0 20,0 10,12\\\" style=\\\"fill:#ccc\\\" /></svg>')\",\n+    backgroundSize: \"10px 6px\",\n+    backgroundPosition: \"right 10px bottom 10px\",\n+    backgroundRepeat: \"no-repeat\"\n+  },\n+",
        "path": "src/style/combo-box.js",
        "position": 177,
        "original_position": 177,
        "commit_id": "6419016d1aed56cb21e3946959cf519b91f9070e",
        "original_commit_id": "b0be3186ecd1add9ec10da29d4d433064d1df11e",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I have extracted out caret image related properties in 3 objects below. The names are similar to the names used for select. But although the select properties style the caret span, these properties style autocomplete input. We can think of some different name for these.\nAlso right now there is no different hover style for caret, I could not think of one suitable - but might be thats one thing we should add.\n",
        "created_at": "2015-06-24T01:32:27Z",
        "updated_at": "2015-06-24T17:17:34Z",
        "html_url": "https://github.com/nikgraf/belle/pull/50#discussion_r33110714",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/50",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33110714"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/50#discussion_r33110714"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/50"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33229529",
        "pull_request_review_id": null,
        "id": 33229529,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjI5NTI5",
        "diff_hunk": "@@ -0,0 +1,195 @@\n+\"use strict\";\n+\n+var comboBoxStyle = {\n+\n+  style: {\n+    /* normalize.css v3.0.1 */\n+    font: 'inherit',\n+    margin: 0,\n+\n+    /* Reset the default borderRadius for Mobile Safari */\n+    borderRadius: 0,\n+\n+    /* Belle TextInput style */\n+    overflow: 'hidden',\n+    resize: 'none',\n+    width: '100%',\n+    fontSize: 14,\n+    paddingTop: '7px',\n+    paddingBottom: '5px',\n+    color: '#505050',\n+    border: '0 solid #fff',\n+    borderBottom: '1px solid #ccc',\n+    display: 'block',\n+    boxSizing: 'border-box',\n+    position: 'relative',\n+\n+    /*\n+    To avoid any kind of flickering the user won't get feedback\n+    for selecting the button text\n+    */\n+    WebkitUserSelect: 'none',\n+    MozUserSelect: 'none',\n+    MsUserSelect: 'none',\n+    userSelect: 'none',\n+\n+    /* This button can only be pressed */\n+    MsTouchAction: 'manipulation',\n+    touchAction: 'manipulation',\n+\n+    /*\n+    Prevent flickering while tapping on WebKit\n+    http://stackoverflow.com/a/3516243/837709\n+    */\n+    WebkitTapHighlightColor: 'transparent'\n+  },\n+\n+  focusStyle: {\n+    borderBottom: '1px solid #6EB8D4',\n+    boxSizing: 'border-box',\n+    paddingTop: '7px',\n+    paddingBottom: '5px',\n+    outline: 'none',\n+\n+    /*\n+    To avoid any kind of flickering the user won't get feedback\n+    for selecting the button text\n+    */\n+    WebkitUserSelect: 'none',\n+    MozUserSelect: 'none',\n+    MsUserSelect: 'none',\n+    userSelect: 'none',\n+\n+    /* This button can only be pressed */\n+    MsTouchAction: 'manipulation',\n+    touchAction: 'manipulation',\n+\n+    /*\n+    Prevent flickering while tapping on WebKit\n+    http://stackoverflow.com/a/3516243/837709\n+    */\n+    WebkitTapHighlightColor: 'transparent'\n+  },\n+\n+  hoverStyle: {\n+    borderBottom: '1px solid #92D6EF',\n+    boxSizing: 'border-box',\n+    paddingTop: '7px',\n+    paddingBottom: '5px',\n+\n+    /*\n+    To avoid any kind of flickering the user won't get feedback\n+    for selecting the button text\n+    */\n+    WebkitUserSelect: 'none',\n+    MozUserSelect: 'none',\n+    MsUserSelect: 'none',\n+    userSelect: 'none',\n+\n+    /* This button can only be pressed */\n+    MsTouchAction: 'manipulation',\n+    touchAction: 'manipulation',\n+\n+    /*\n+    Prevent flickering while tapping on WebKit\n+    http://stackoverflow.com/a/3516243/837709\n+    */\n+    WebkitTapHighlightColor: 'transparent'\n+  },\n+\n+  wrapperStyle: {\n+    outline: 0, // to avoid default focus behaviour\n+    boxSizing: 'border-box',\n+    position: 'relative'\n+  },\n+\n+  menuStyle: {\n+    display: 'block',\n+    listStyleType: 'none',\n+    background: '#FFF',\n+    padding: '6px 0',\n+    margin: 0,\n+    position: 'absolute',\n+    width: '100%',\n+    zIndex: 10000,\n+    boxSizing: 'border-box',\n+    borderRadius: 2,\n+    boxShadow: '0 1px 1px rgba(0, 0, 0, 0.2)',\n+    borderTop: '1px solid #f2f2f2',\n+    /* Improve scrolling for mobile Safari */\n+    WebkitOverflowScrolling: 'touch'\n+  },\n+\n+  disabledStyle: {\n+    borderBottom: '1px dotted #9F9F9F',\n+    boxSizing: 'border-box',\n+    paddingTop: '7px',\n+    paddingBottom: '5px',\n+    /*\n+    To avoid any kind of flickering the user won't get feedback\n+    for selecting the button text\n+    */\n+    WebkitUserSelect: 'none',\n+    MozUserSelect: 'none',\n+    MsUserSelect: 'none',\n+    userSelect: 'none',\n+    /* This button can only be pressed */\n+    MsTouchAction: 'manipulation',\n+    touchAction: 'manipulation',\n+    /*\n+    Prevent flickering while tapping on WebKit\n+    http://stackoverflow.com/a/3516243/837709\n+    */\n+    WebkitTapHighlightColor: 'transparent'\n+  },\n+\n+  disabledHoverStyle: {\n+    borderBottom: '1px dotted #92D6EF',\n+    cursor: 'not-allowed',\n+    boxSizing: 'border-box',\n+    paddingTop: '7px',\n+    paddingBottom: '5px',\n+    /*\n+    To avoid any kind of flickering the user won't get feedback\n+    for selecting the button text\n+    */\n+    WebkitUserSelect: 'none',\n+    MozUserSelect: 'none',\n+    MsUserSelect: 'none',\n+    userSelect: 'none',\n+    /* This button can only be pressed */\n+    MsTouchAction: 'manipulation',\n+    touchAction: 'manipulation',\n+    /*\n+    Prevent flickering while tapping on WebKit\n+    http://stackoverflow.com/a/3516243/837709\n+    */\n+    WebkitTapHighlightColor: 'transparent'\n+  },\n+\n+  disabledCaretToOpenStyle: {\n+    paddingRight: '26px',\n+    backgroundImage: \"url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"12\\\"><polygon points=\\\"0,0 20,0 10,12\\\" style=\\\"fill:#ccc\\\" /></svg>')\",\n+    backgroundSize: \"10px 6px\",\n+    backgroundPosition: \"right 10px bottom 10px\",\n+    backgroundRepeat: \"no-repeat\"\n+  },\n+",
        "path": "src/style/combo-box.js",
        "position": 177,
        "original_position": 177,
        "commit_id": "6419016d1aed56cb21e3946959cf519b91f9070e",
        "original_commit_id": "b0be3186ecd1add9ec10da29d4d433064d1df11e",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, I feel like it would be good to have a consistent API to manage the caret for the Select & ComboBox. I created an issue & discuss possibilities, pros & cons there: https://github.com/nikgraf/belle/issues/51\n",
        "created_at": "2015-06-25T07:46:32Z",
        "updated_at": "2015-06-25T07:46:32Z",
        "html_url": "https://github.com/nikgraf/belle/pull/50#discussion_r33229529",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/50",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33229529"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/50#discussion_r33229529"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/50"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33825556",
        "pull_request_review_id": null,
        "id": 33825556,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODI1NTU2",
        "diff_hunk": "@@ -114,32 +114,21 @@ export default class TextInput extends Component {\n \n     if (!this.props.allowNewLine && value.match(newLineRegex) !== null) {\n       value = event.target.value.replace(newLineRegex, ' ');\n-\n-      // controlled textarea must have value",
        "path": "src/components/TextInput.jsx",
        "position": null,
        "original_position": 14,
        "commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "original_commit_id": "e5e186a02754970e868856bd5ae1a0c071e6dddc",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure about this one. Let's have a closer look soon.\n",
        "created_at": "2015-07-02T21:39:35Z",
        "updated_at": "2015-07-05T21:28:46Z",
        "html_url": "https://github.com/nikgraf/belle/pull/55#discussion_r33825556",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/55",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33825556"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/55#discussion_r33825556"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33826236",
        "pull_request_review_id": null,
        "id": 33826236,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODI2MjM2",
        "diff_hunk": "@@ -114,32 +114,21 @@ export default class TextInput extends Component {\n \n     if (!this.props.allowNewLine && value.match(newLineRegex) !== null) {\n       value = event.target.value.replace(newLineRegex, ' ');\n-\n-      // controlled textarea must have value",
        "path": "src/components/TextInput.jsx",
        "position": null,
        "original_position": 14,
        "commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "original_commit_id": "e5e186a02754970e868856bd5ae1a0c071e6dddc",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@jpuri Did you got my summary of the feedback from Sebastian Markb\u00e5ge\n\nI feel like we should get rid of \n\n```\nconst domNode = React.findDOMNode(this);\ndomNode.value = value;\n```\n\nand instead just do `this.props.onChange({value: value});`\n",
        "created_at": "2015-07-02T21:47:14Z",
        "updated_at": "2015-07-05T21:28:46Z",
        "html_url": "https://github.com/nikgraf/belle/pull/55#discussion_r33826236",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/55",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33826236"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/55#discussion_r33826236"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33839479",
        "pull_request_review_id": null,
        "id": 33839479,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODM5NDc5",
        "diff_hunk": "@@ -114,32 +114,21 @@ export default class TextInput extends Component {\n \n     if (!this.props.allowNewLine && value.match(newLineRegex) !== null) {\n       value = event.target.value.replace(newLineRegex, ' ');\n-\n-      // controlled textarea must have value",
        "path": "src/components/TextInput.jsx",
        "position": null,
        "original_position": 14,
        "commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "original_commit_id": "e5e186a02754970e868856bd5ae1a0c071e6dddc",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hi Nik,\n\nYep I did got that but after I had done these changes. U r right we need to take closer look at this.\n",
        "created_at": "2015-07-03T04:02:17Z",
        "updated_at": "2015-07-05T21:28:46Z",
        "html_url": "https://github.com/nikgraf/belle/pull/55#discussion_r33839479",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/55",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33839479"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/55#discussion_r33839479"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33894825",
        "pull_request_review_id": null,
        "id": 33894825,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODk0ODI1",
        "diff_hunk": "@@ -114,32 +114,21 @@ export default class TextInput extends Component {\n \n     if (!this.props.allowNewLine && value.match(newLineRegex) !== null) {\n       value = event.target.value.replace(newLineRegex, ' ');\n-\n-      // controlled textarea must have value",
        "path": "src/components/TextInput.jsx",
        "position": null,
        "original_position": 14,
        "commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "original_commit_id": "e5e186a02754970e868856bd5ae1a0c071e6dddc",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@jpuri Took me a while, but I believe I found a case where relying on `domNode.value = value;` is a problem.\n\nThe render function is executed whenever the state changes. Of course we can manipulate the DOM directly, by updating the domNode.value. The issue here is then the state & the value in the UI are out of sync. Think about you update props then to the old value. The virtual dom will think it never changed and won't update the component although it should. Do you know what I mean?\n",
        "created_at": "2015-07-05T13:19:41Z",
        "updated_at": "2015-07-05T21:28:46Z",
        "html_url": "https://github.com/nikgraf/belle/pull/55#discussion_r33894825",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/55",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/33894825"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/55#discussion_r33894825"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34006832",
        "pull_request_review_id": null,
        "id": 34006832,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDA2ODMy",
        "diff_hunk": "@@ -113,7 +114,7 @@ export default class TextInput extends Component {\n     let value = event.target.value;\n \n     if (!this.props.allowNewLine && value.match(newLineRegex) !== null) {\n-      value = event.target.value.replace(newLineRegex, ' ');\n+      value = value.replace(newLineRegex, ' ');\n ",
        "path": "src/components/TextInput.jsx",
        "position": 34,
        "original_position": 34,
        "commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "original_commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we can get rid of this state update, check this guy's textInput component: Andrey Popp\nhis onChange is so simplified.\n",
        "created_at": "2015-07-07T04:19:29Z",
        "updated_at": "2015-07-07T04:19:29Z",
        "html_url": "https://github.com/nikgraf/belle/pull/55#discussion_r34006832",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/55",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34006832"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/55#discussion_r34006832"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34009707",
        "pull_request_review_id": null,
        "id": 34009707,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDA5NzA3",
        "diff_hunk": "@@ -113,7 +114,7 @@ export default class TextInput extends Component {\n     let value = event.target.value;\n \n     if (!this.props.allowNewLine && value.match(newLineRegex) !== null) {\n-      value = event.target.value.replace(newLineRegex, ' ');\n+      value = value.replace(newLineRegex, ' ');\n ",
        "path": "src/components/TextInput.jsx",
        "position": 34,
        "original_position": 34,
        "commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "original_commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can we when still keeping the `allowNewLine={false}` feature?\n",
        "created_at": "2015-07-07T05:58:04Z",
        "updated_at": "2015-07-07T05:58:04Z",
        "html_url": "https://github.com/nikgraf/belle/pull/55#discussion_r34009707",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/55",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34009707"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/55#discussion_r34009707"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34012235",
        "pull_request_review_id": null,
        "id": 34012235,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDEyMjM1",
        "diff_hunk": "@@ -113,7 +114,7 @@ export default class TextInput extends Component {\n     let value = event.target.value;\n \n     if (!this.props.allowNewLine && value.match(newLineRegex) !== null) {\n-      value = event.target.value.replace(newLineRegex, ' ');\n+      value = value.replace(newLineRegex, ' ');\n ",
        "path": "src/components/TextInput.jsx",
        "position": 34,
        "original_position": 34,
        "commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "original_commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "so true...we cannot it needs to behave like controlled component for these features....\n\nwe could do that previously with setting domeNode.value, but that was not right approach...I will put some more thoughts on it...\n",
        "created_at": "2015-07-07T07:00:22Z",
        "updated_at": "2015-07-07T07:00:22Z",
        "html_url": "https://github.com/nikgraf/belle/pull/55#discussion_r34012235",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/55",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34012235"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/55#discussion_r34012235"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34015561",
        "pull_request_review_id": null,
        "id": 34015561,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDE1NTYx",
        "diff_hunk": "@@ -113,7 +114,7 @@ export default class TextInput extends Component {\n     let value = event.target.value;\n \n     if (!this.props.allowNewLine && value.match(newLineRegex) !== null) {\n-      value = event.target.value.replace(newLineRegex, ' ');\n+      value = value.replace(newLineRegex, ' ');\n ",
        "path": "src/components/TextInput.jsx",
        "position": 34,
        "original_position": 34,
        "commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "original_commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: thanks for looking into it!\n",
        "created_at": "2015-07-07T07:54:35Z",
        "updated_at": "2015-07-07T07:54:35Z",
        "html_url": "https://github.com/nikgraf/belle/pull/55#discussion_r34015561",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/55",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34015561"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/55#discussion_r34015561"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34148295",
        "pull_request_review_id": null,
        "id": 34148295,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTQ4Mjk1",
        "diff_hunk": "@@ -309,11 +302,8 @@ export default class ComboBox extends Component {\n       });\n     }\n \n-    const domNode = React.findDOMNode(this);\n-    domNode.value = value;\n-\n-    if (this.props.onChange) {\n-      this.props.onChange({target: domNode});\n+    if (this.props.onUpdate) {\n+      this.props.onUpdate({ value: value });\n     }",
        "path": "src/components/ComboBox.jsx",
        "position": 34,
        "original_position": 34,
        "commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "original_commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "React components typically do not support onChange callback for valueLink...but I think it should be fine we support onUpdate with valueLink.\n\nWith valueLink user can do all value change related handling in _requestChange() method and onUpdate is kind of redundant.\n",
        "created_at": "2015-07-08T13:44:29Z",
        "updated_at": "2015-07-08T13:44:29Z",
        "html_url": "https://github.com/nikgraf/belle/pull/55#discussion_r34148295",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/55",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34148295"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/55#discussion_r34148295"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34150075",
        "pull_request_review_id": null,
        "id": 34150075,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTUwMDc1",
        "diff_hunk": "@@ -113,7 +114,7 @@ export default class TextInput extends Component {\n     let value = event.target.value;\n \n     if (!this.props.allowNewLine && value.match(newLineRegex) !== null) {\n-      value = event.target.value.replace(newLineRegex, ' ');\n+      value = value.replace(newLineRegex, ' ');\n ",
        "path": "src/components/TextInput.jsx",
        "position": 34,
        "original_position": 34,
        "commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "original_commit_id": "664cc730c5aef07e1c8205c1ef7a4f80703de66f",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I looked into it again today...\nI think its not perfect implementation. \n1. In case of value/ valueLink - we do not need to update state with new value (without new lines), we can just call onUpdate with the new value and that should suffice.\n2. We need to update state for defaultValue......but that makes me think might be it would be better to make textInput also a completed controlled component like comboBox.....\n3. Use 'has' here 'if (this.state.textareaProps.value)'\n\nAlso we should add a page in docs about how value/ defaultValue ad valueLink work with our onUpdate method.\n",
        "created_at": "2015-07-08T14:00:54Z",
        "updated_at": "2015-07-08T14:02:50Z",
        "html_url": "https://github.com/nikgraf/belle/pull/55#discussion_r34150075",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/55",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34150075"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/55#discussion_r34150075"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34276430",
        "pull_request_review_id": null,
        "id": 34276430,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Mjc2NDMw",
        "diff_hunk": "@@ -239,24 +239,21 @@ export default class Button extends Component {\n   render() {\n     const baseStyle = this.props.primary ? style.primaryStyle : style.style;\n     const baseButtonStyle = extend({}, baseStyle, this.props.style);\n-    const baseFocusStyle = this.props.primary ? style.primaryFocusStyle : style.focusStyle;\n-    const focusStyle = extend({}, baseFocusStyle, this.props.focusStyle);\n \n     let buttonStyle;\n     if (this.props.disabled) {\n       if (this.props.primary) {\n-        const primaryDisabledStyle = extend({}, style.primaryDisabledStyle, this.props.disabledStyle);\n-        buttonStyle = extend({}, baseButtonStyle, primaryDisabledStyle);\n+        buttonStyle = extend({}, baseButtonStyle, style.primaryDisabledStyle, this.props.disabledStyle);\n       } else {\n-        const disabledStyle = extend({}, style.disabledStyle, this.props.disabledStyle);\n-        buttonStyle = extend({}, baseButtonStyle, disabledStyle);\n+        buttonStyle = extend({}, baseButtonStyle, style.disabledStyle, this.props.disabledStyle);\n       }\n     } else {\n       if (this.state.active) {\n         const baseActiveStyle = this.props.primary ? style.primaryActiveStyle : style.activeStyle;\n         buttonStyle = extend({}, baseButtonStyle, baseActiveStyle, this.props.activeStyle);\n       } else if (this.focused && !this.state.active && this.props.preventFocusStyleForTouchAndClick) {\n-        buttonStyle = extend({}, baseButtonStyle, focusStyle);\n+        const baseFocusStyle = this.props.primary ? style.primaryFocusStyle : style.focusStyle;\n+        buttonStyle = extend({}, baseButtonStyle, baseFocusStyle, this.props.focusStyle);",
        "path": "src/components/Button.jsx",
        "position": 25,
        "original_position": 25,
        "commit_id": "d2e344e9ce9efbefd0c4b469af7f3f9d780dfe4f",
        "original_commit_id": "1a606f9234d1f16b22b3a3923ba4b1ca9b78d606",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "good one!\n",
        "created_at": "2015-07-09T16:52:19Z",
        "updated_at": "2015-07-09T17:10:17Z",
        "html_url": "https://github.com/nikgraf/belle/pull/90#discussion_r34276430",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/90",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34276430"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/90#discussion_r34276430"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/90"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34421382",
        "pull_request_review_id": null,
        "id": 34421382,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDIxMzgy",
        "diff_hunk": "@@ -180,31 +202,20 @@ export default class TextInput extends Component {\n \n     if (!this.props.allowNewLine && value.match(newLineRegex) !== null) {\n       value = value.replace(newLineRegex, ' ');\n-\n-      // controlled textarea must have value\n-      if (this.state.textareaProps.value) {\n-        this.setState({ textareaProps: { value: value } });\n-        this.forceUpdate(this._triggerResize);\n-      // uncontrolled textarea must be updated with value, but then released again\n-      } else {\n-        this.setState({ textareaProps: { value: value } });\n-        this.forceUpdate(() => {\n-          this._triggerResize();\n-          this.setState({ textareaProps: { value: undefined } });\n-        });\n-      }\n-    } else {\n-      this._triggerResize();\n     }\n \n-    const valueLink = this.props.valueLink;\n-    if (typeof valueLink === 'object' && typeof valueLink.requestChange === 'function') {\n-      valueLink.requestChange(value);\n+    if (has(this.props, 'valueLink')) {\n+      this.props.valueLink.requestChange(value);\n+    } else if (has(this.props, 'defaultValue')) {\n+      this.setState({\n+        inputValue: value\n+      });\n     }\n \n     if (this.props.onUpdate) {\n       this.props.onUpdate({ value: value });\n     }\n+    this._triggerResize();\n   }",
        "path": "src/components/TextInput.jsx",
        "position": 84,
        "original_position": 85,
        "commit_id": "1962444e0473cca3359165a49157de3b2ea4885c",
        "original_commit_id": "a122dd79dcd01c729a61cd5280b0db2686e95a6d",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think _triggerResize should be called only after all value updates are done. What do you suggest Nik.\n",
        "created_at": "2015-07-12T12:50:44Z",
        "updated_at": "2015-07-12T21:44:05Z",
        "html_url": "https://github.com/nikgraf/belle/pull/104#discussion_r34421382",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/104",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34421382"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/104#discussion_r34421382"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/104"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34438301",
        "pull_request_review_id": null,
        "id": 34438301,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDM4MzAx",
        "diff_hunk": "@@ -50,7 +50,12 @@ const ratingStyle = {\n \n   characterStyle: {\n     color: '#FFCC00',\n-    textShadow: '0px 1px 0px #DCB000'\n+    textShadow: '0px 1px 0px #DCB000',\n+    top: 0,\n+\n+    /* animations */\n+    transition: 'color 0.1s',\n+    transitionTimingFunction: 'ease-out'\n   },\n ",
        "path": "src/style/rating.js",
        "position": 12,
        "original_position": 12,
        "commit_id": "7f3a76b453f312902bab077e178b420cac8a4fc1",
        "original_commit_id": "e88b004e666809a60df3593b55cecefba3b957b2",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@nikgraf , should we not add this to activeCharacterStyle and probably hoverCharacterStyle also.\n\nSimilarly in select, input and comboBox....only default style has transition.\n",
        "created_at": "2015-07-13T07:29:14Z",
        "updated_at": "2015-07-13T10:22:56Z",
        "html_url": "https://github.com/nikgraf/belle/pull/105#discussion_r34438301",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/105",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34438301"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/105#discussion_r34438301"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/105"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34438659",
        "pull_request_review_id": null,
        "id": 34438659,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDM4NjU5",
        "diff_hunk": "@@ -17,6 +17,10 @@ const buttonStyle = {\n     textDecoration: 'none',",
        "path": "src/style/button.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "7f3a76b453f312902bab077e178b420cac8a4fc1",
        "original_commit_id": "e88b004e666809a60df3593b55cecefba3b957b2",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In button this transition is sort of giving me feeling of delay when I click.... coz click is such a fast action.\n",
        "created_at": "2015-07-13T07:37:00Z",
        "updated_at": "2015-07-13T10:22:56Z",
        "html_url": "https://github.com/nikgraf/belle/pull/105#discussion_r34438659",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/105",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34438659"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/105#discussion_r34438659"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/105"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34438851",
        "pull_request_review_id": null,
        "id": 34438851,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDM4ODUx",
        "diff_hunk": "@@ -148,7 +152,8 @@ const toggleStyle = {\n     height: 28,\n     backgroundColor: 'rgb(246, 246, 246)',\n     boxShadow: '0 0 0 0 rgb(189, 189, 189)',\n-    cursor: 'url(http://www.google.com/intl/en_ALL/mapfiles/closedhand.cur), move'\n+",
        "path": "src/style/toggle.js",
        "position": null,
        "original_position": 27,
        "commit_id": "7f3a76b453f312902bab077e178b420cac8a4fc1",
        "original_commit_id": "e88b004e666809a60df3593b55cecefba3b957b2",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "+1, it was so touch to get that grabbing hand to perfection.\n",
        "created_at": "2015-07-13T07:40:57Z",
        "updated_at": "2015-07-13T10:22:56Z",
        "html_url": "https://github.com/nikgraf/belle/pull/105#discussion_r34438851",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/105",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34438851"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/105#discussion_r34438851"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/105"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34439142",
        "pull_request_review_id": null,
        "id": 34439142,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDM5MTQy",
        "diff_hunk": "@@ -26,7 +26,8 @@ const toggleStyle = {\n     position: 'relative',\n     // Calculated with 2 * the width of choice area\n     width: 92,\n-    transition: 'left 0.1s ease-in-out'\n+    transition: 'left 0.1s',\n+    transitionTimingFunction: 'ease-in-out'\n   },\n ",
        "path": "src/style/toggle.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "7f3a76b453f312902bab077e178b420cac8a4fc1",
        "original_commit_id": "e88b004e666809a60df3593b55cecefba3b957b2",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is animation on left needed for slider ?\n",
        "created_at": "2015-07-13T07:46:57Z",
        "updated_at": "2015-07-13T10:22:56Z",
        "html_url": "https://github.com/nikgraf/belle/pull/105#discussion_r34439142",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/105",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34439142"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/105#discussion_r34439142"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/105"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34444044",
        "pull_request_review_id": null,
        "id": 34444044,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDQ0MDQ0",
        "diff_hunk": "@@ -50,7 +50,12 @@ const ratingStyle = {\n \n   characterStyle: {\n     color: '#FFCC00',\n-    textShadow: '0px 1px 0px #DCB000'\n+    textShadow: '0px 1px 0px #DCB000',\n+    top: 0,\n+\n+    /* animations */\n+    transition: 'color 0.1s',\n+    transitionTimingFunction: 'ease-out'\n   },\n ",
        "path": "src/style/rating.js",
        "position": 12,
        "original_position": 12,
        "commit_id": "7f3a76b453f312902bab077e178b420cac8a4fc1",
        "original_commit_id": "e88b004e666809a60df3593b55cecefba3b957b2",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "focusStyle & hoverStyle inherit from style :smile: \n\nThis way you only have to add it once. Less code & same functionality.\n",
        "created_at": "2015-07-13T08:56:54Z",
        "updated_at": "2015-07-13T10:22:56Z",
        "html_url": "https://github.com/nikgraf/belle/pull/105#discussion_r34444044",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/105",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34444044"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/105#discussion_r34444044"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/105"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34444091",
        "pull_request_review_id": null,
        "id": 34444091,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDQ0MDkx",
        "diff_hunk": "@@ -26,7 +26,8 @@ const toggleStyle = {\n     position: 'relative',\n     // Calculated with 2 * the width of choice area\n     width: 92,\n-    transition: 'left 0.1s ease-in-out'\n+    transition: 'left 0.1s',\n+    transitionTimingFunction: 'ease-in-out'\n   },\n ",
        "path": "src/style/toggle.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "7f3a76b453f312902bab077e178b420cac8a4fc1",
        "original_commit_id": "e88b004e666809a60df3593b55cecefba3b957b2",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The left animation is the one when just clicking on the toggle.\n",
        "created_at": "2015-07-13T08:57:42Z",
        "updated_at": "2015-07-13T10:22:56Z",
        "html_url": "https://github.com/nikgraf/belle/pull/105#discussion_r34444091",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/105",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34444091"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/105#discussion_r34444091"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/105"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34444214",
        "pull_request_review_id": null,
        "id": 34444214,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDQ0MjE0",
        "diff_hunk": "@@ -48,7 +49,10 @@ const toggleStyle = {\n     cursor: 'pointer',\n     border: '1px solid rgb(220, 220, 220)',\n     boxShadow: '0 1px 0px 0px rgb(185, 185, 185)',\n-    transition: 'left 0.1s ease-in-out',\n+\n+    /* animations */\n+    transition: 'left 0.1s, background-color 0.1s, boxShadow 0.1s, height 0.1s',\n+    transitionTimingFunction: 'ease-in-out',\n ",
        "path": "src/style/toggle.js",
        "position": 19,
        "original_position": 19,
        "commit_id": "7f3a76b453f312902bab077e178b420cac8a4fc1",
        "original_commit_id": "e88b004e666809a60df3593b55cecefba3b957b2",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Transition on toggle at times is giving me feeling that grab is not smooth any more.\n",
        "created_at": "2015-07-13T08:58:47Z",
        "updated_at": "2015-07-13T10:22:56Z",
        "html_url": "https://github.com/nikgraf/belle/pull/105#discussion_r34444214",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/105",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34444214"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/105#discussion_r34444214"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/105"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34445876",
        "pull_request_review_id": null,
        "id": 34445876,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDQ1ODc2",
        "diff_hunk": "@@ -50,7 +50,12 @@ const ratingStyle = {\n \n   characterStyle: {\n     color: '#FFCC00',\n-    textShadow: '0px 1px 0px #DCB000'\n+    textShadow: '0px 1px 0px #DCB000',\n+    top: 0,\n+\n+    /* animations */\n+    transition: 'color 0.1s',\n+    transitionTimingFunction: 'ease-out'\n   },\n ",
        "path": "src/style/rating.js",
        "position": 12,
        "original_position": 12,
        "commit_id": "7f3a76b453f312902bab077e178b420cac8a4fc1",
        "original_commit_id": "e88b004e666809a60df3593b55cecefba3b957b2",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":smile:\n",
        "created_at": "2015-07-13T09:22:39Z",
        "updated_at": "2015-07-13T10:22:56Z",
        "html_url": "https://github.com/nikgraf/belle/pull/105#discussion_r34445876",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/105",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34445876"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/105#discussion_r34445876"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/105"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34445980",
        "pull_request_review_id": null,
        "id": 34445980,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDQ1OTgw",
        "diff_hunk": "@@ -26,7 +26,8 @@ const toggleStyle = {\n     position: 'relative',\n     // Calculated with 2 * the width of choice area\n     width: 92,\n-    transition: 'left 0.1s ease-in-out'\n+    transition: 'left 0.1s',\n+    transitionTimingFunction: 'ease-in-out'\n   },\n ",
        "path": "src/style/toggle.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "7f3a76b453f312902bab077e178b420cac8a4fc1",
        "original_commit_id": "e88b004e666809a60df3593b55cecefba3b957b2",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@nikgraf we need it for handle....but slider does not even have 'left' changing.\n",
        "created_at": "2015-07-13T09:24:11Z",
        "updated_at": "2015-07-13T10:22:56Z",
        "html_url": "https://github.com/nikgraf/belle/pull/105#discussion_r34445980",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/105",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34445980"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/105#discussion_r34445980"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/105"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34565621",
        "pull_request_review_id": null,
        "id": 34565621,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NTY1NjIx",
        "diff_hunk": "@@ -79,7 +79,7 @@ function updateStyling() {\n  */\n export function injectStyles(styles) {\n   injectStyleTag();\n-  each(styles, (style) => {\n+  styles.forEach((style) => {",
        "path": "src/utils/inject-style.js",
        "position": null,
        "original_position": 11,
        "commit_id": "ffb3d91bafdd42084a3961f9cb0941782bb63723",
        "original_commit_id": "a0326f0f901c380a6d8baa8322b51ad5f25389c2",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we should revert this as forEach might not exists on older browsers \n",
        "created_at": "2015-07-14T13:11:09Z",
        "updated_at": "2015-07-14T13:18:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/108#discussion_r34565621",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/108",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/34565621"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/108#discussion_r34565621"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/108"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/35476625",
        "pull_request_review_id": null,
        "id": 35476625,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDc2NjI1",
        "diff_hunk": "@@ -217,19 +217,17 @@ export default class Select extends Component {\n     let focusedOptionValue;\n \n     if (has(properties, 'valueLink')) {\n-      selectedValue = properties.valueLink.value;\n-      focusedOptionValue = selectedValue;\n+      focusedOptionValue = selectedValue = properties.valueLink.value;",
        "path": "src/components/Select.jsx",
        "position": null,
        "original_position": 13,
        "commit_id": "f5feb1b56c1476775d194a7231b0f4fbc00fcef3",
        "original_commit_id": "56f7e84cc3c5981cb745cd663292168baba8f5b7",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Multiple left-hand assignments have the strange side-effect in JS that they are then in the global scope. From what I learned it's best to avoid them at all. see http://stackoverflow.com/a/1758912/837709\n",
        "created_at": "2015-07-25T00:22:51Z",
        "updated_at": "2015-08-06T21:31:27Z",
        "html_url": "https://github.com/nikgraf/belle/pull/148#discussion_r35476625",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/148",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/35476625"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/148#discussion_r35476625"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/35476704",
        "pull_request_review_id": null,
        "id": 35476704,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDc2NzA0",
        "diff_hunk": "@@ -355,18 +353,13 @@ export default class Select extends Component {\n       const menuNode = React.findDOMNode(this.refs.menu);\n \n       // the menu was just opened\n-      if (!previousState.isOpen && this.state.isOpen) {\n+      if (!previousState.isOpen && this.state.isOpen && this.props.children && this.props.children.length > 0) {\n         const positionOptions = has(this.props, 'positionOptions') ? this.props.positionOptions : config.positionOptions;\n         positionOptions(this);\n       // restore the old scrollTop position\n       } else {\n         menuNode.scrollTop = this.cachedMenuScrollTop;\n       }\n-\n-      if (!previousState.isOpen && this.state.isOpen) {",
        "path": "src/components/Select.jsx",
        "position": null,
        "original_position": 47,
        "commit_id": "f5feb1b56c1476775d194a7231b0f4fbc00fcef3",
        "original_commit_id": "56f7e84cc3c5981cb745cd663292168baba8f5b7",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How it worked before is that the menu is hidden until it's repositioned and then shown again. If you take the out it can lead to a jumping box on slow computers. Better to keep it.\n",
        "created_at": "2015-07-25T00:25:29Z",
        "updated_at": "2015-08-06T21:31:27Z",
        "html_url": "https://github.com/nikgraf/belle/pull/148#discussion_r35476704",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/148",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/35476704"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/148#discussion_r35476704"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/35478281",
        "pull_request_review_id": null,
        "id": 35478281,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDc4Mjgx",
        "diff_hunk": "@@ -217,19 +217,17 @@ export default class Select extends Component {\n     let focusedOptionValue;\n \n     if (has(properties, 'valueLink')) {\n-      selectedValue = properties.valueLink.value;\n-      focusedOptionValue = selectedValue;\n+      focusedOptionValue = selectedValue = properties.valueLink.value;",
        "path": "src/components/Select.jsx",
        "position": null,
        "original_position": 13,
        "commit_id": "f5feb1b56c1476775d194a7231b0f4fbc00fcef3",
        "original_commit_id": "56f7e84cc3c5981cb745cd663292168baba8f5b7",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Agreed, I was not sure of this change. Just got motivated from underscore's code, They used it so much. Let me revert this :)\n",
        "created_at": "2015-07-25T01:53:18Z",
        "updated_at": "2015-08-06T21:31:27Z",
        "html_url": "https://github.com/nikgraf/belle/pull/148#discussion_r35478281",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/148",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/35478281"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/148#discussion_r35478281"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/35478320",
        "pull_request_review_id": null,
        "id": 35478320,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDc4MzIw",
        "diff_hunk": "@@ -355,18 +353,13 @@ export default class Select extends Component {\n       const menuNode = React.findDOMNode(this.refs.menu);\n \n       // the menu was just opened\n-      if (!previousState.isOpen && this.state.isOpen) {\n+      if (!previousState.isOpen && this.state.isOpen && this.props.children && this.props.children.length > 0) {\n         const positionOptions = has(this.props, 'positionOptions') ? this.props.positionOptions : config.positionOptions;\n         positionOptions(this);\n       // restore the old scrollTop position\n       } else {\n         menuNode.scrollTop = this.cachedMenuScrollTop;\n       }\n-\n-      if (!previousState.isOpen && this.state.isOpen) {",
        "path": "src/components/Select.jsx",
        "position": null,
        "original_position": 47,
        "commit_id": "f5feb1b56c1476775d194a7231b0f4fbc00fcef3",
        "original_commit_id": "56f7e84cc3c5981cb745cd663292168baba8f5b7",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I have actually changed another line 704 for this, this was creating issue when select has no options and `<ul>` was getting styled `{display: block}`. Thats was creating a small issue on UI.\n\nIf you think its needed here I can add condition to this if to check if select has options.\n",
        "created_at": "2015-07-25T01:56:47Z",
        "updated_at": "2015-08-06T21:31:27Z",
        "html_url": "https://github.com/nikgraf/belle/pull/148#discussion_r35478320",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/148",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/35478320"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/148#discussion_r35478320"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/148"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37953484",
        "pull_request_review_id": null,
        "id": 37953484,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUzNDg0",
        "diff_hunk": "@@ -592,13 +589,13 @@ export default class ComboBox extends Component {\n    */\n   static filterOptions(inputValue, properties) { /*eslint react/sort-comp:0*/\n     let filteredOptions = [];\n-    if (properties.children.length > 0) {\n+    if (!isEmpty(properties.children)) {\n       if (inputValue) {\n-        filteredOptions = filter(properties.children, (entry) => {\n+        filteredOptions = filterReactChildren(properties.children, (entry) => {\n           return properties.filterFunc(inputValue, entry.props.value);\n         });\n       } else {\n-        filteredOptions = map(properties.children, (entry) => { return entry; });\n+        filteredOptions = React.children.map(properties.children, (entry) => { return entry; });",
        "path": "src/components/ComboBox.jsx",
        "position": null,
        "original_position": 34,
        "commit_id": "b5ce004c57e57c118bb90e21df015c62f76047b8",
        "original_commit_id": "130e8eae93ce85a94ffae7763ed73df5455e14cb",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "props.children can be anything array or object, filteredOptions I have always made as array.\nI could have created even that as props.children and used React.children utility methods for it, but across comboBox code there is a lot of position access in filteredOptions using index which will be most optimum with Array.\n",
        "created_at": "2015-08-26T07:37:15Z",
        "updated_at": "2015-08-26T12:48:44Z",
        "html_url": "https://github.com/nikgraf/belle/pull/176#discussion_r37953484",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/176",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37953484"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/176#discussion_r37953484"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/176"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37965117",
        "pull_request_review_id": null,
        "id": 37965117,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1MTE3",
        "diff_hunk": "@@ -295,3 +302,38 @@ export function flatten(...arrays) {\n     return result;\n   }\n }\n+\n+/**\n+ * Looks through a collection of React children elements, filtering them according to the predicate passed.\n+ *\n+ * @param {Array/Object} children - colleciton of >=1 react elements\n+ * @param {function} predicate - function returning true when provided with an entry as argument\n+ */\n+export function filterReactChildren(children, predicate) {\n+  if (children) {\n+    const result = [];\n+    React.Children.forEach(children, (entry) => {\n+      if (predicate && predicate.call(this, entry)) {\n+        result.push(entry);\n+      }\n+    });\n+    return result;\n+  }\n+}\n+\n+\n+/**\n+ * Looks through a collection of React children elements, filtering them according to the predicate passed.\n+ *\n+ * @param {Array/Object} children - collection of >=1 react elements\n+ */\n+export function getArrayForReactChildren(children) {",
        "path": "src/utils/helpers.js",
        "position": 57,
        "original_position": 57,
        "commit_id": "b5ce004c57e57c118bb90e21df015c62f76047b8",
        "original_commit_id": "bdf0753a55e9f451fdb589e12bbe5dceebc30dfd",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do we need this helper? it's not used anywhere\n",
        "created_at": "2015-08-26T10:01:32Z",
        "updated_at": "2015-08-26T12:48:44Z",
        "html_url": "https://github.com/nikgraf/belle/pull/176#discussion_r37965117",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/176",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37965117"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/176#discussion_r37965117"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/176"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37965349",
        "pull_request_review_id": null,
        "id": 37965349,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1MzQ5",
        "diff_hunk": "@@ -150,10 +150,7 @@ export default class ComboBox extends Component {\n   static displayName = 'Belle ComboBox';\n \n   static propTypes = {\n-    children: React.PropTypes.oneOfType([\n-      React.PropTypes.arrayOf(React.PropTypes.node),\n-      React.PropTypes.node\n-    ]),\n+    children: React.PropTypes.oneOfType([React.PropTypes.array, React.PropTypes.object]),",
        "path": "src/components/ComboBox.jsx",
        "position": 17,
        "original_position": 17,
        "commit_id": "b5ce004c57e57c118bb90e21df015c62f76047b8",
        "original_commit_id": "bdf0753a55e9f451fdb589e12bbe5dceebc30dfd",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In this case you can simply say `React.PropTypes.object` because array is also an object and then the more detailed array check doesn't add value.\n",
        "created_at": "2015-08-26T10:04:10Z",
        "updated_at": "2015-08-26T12:48:44Z",
        "html_url": "https://github.com/nikgraf/belle/pull/176#discussion_r37965349",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/176",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37965349"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/176#discussion_r37965349"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/176"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37967708",
        "pull_request_review_id": null,
        "id": 37967708,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY3NzA4",
        "diff_hunk": "@@ -150,10 +150,7 @@ export default class ComboBox extends Component {\n   static displayName = 'Belle ComboBox';\n \n   static propTypes = {\n-    children: React.PropTypes.oneOfType([\n-      React.PropTypes.arrayOf(React.PropTypes.node),\n-      React.PropTypes.node\n-    ]),\n+    children: React.PropTypes.oneOfType([React.PropTypes.array, React.PropTypes.object]),",
        "path": "src/components/ComboBox.jsx",
        "position": 17,
        "original_position": 17,
        "commit_id": "b5ce004c57e57c118bb90e21df015c62f76047b8",
        "original_commit_id": "bdf0753a55e9f451fdb589e12bbe5dceebc30dfd",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I tried that... React is somehow giving errors for Array if I just declare Object.\n",
        "created_at": "2015-08-26T10:35:06Z",
        "updated_at": "2015-08-26T12:48:44Z",
        "html_url": "https://github.com/nikgraf/belle/pull/176#discussion_r37967708",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/176",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37967708"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/176#discussion_r37967708"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/176"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37967728",
        "pull_request_review_id": null,
        "id": 37967728,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY3NzI4",
        "diff_hunk": "@@ -295,3 +302,38 @@ export function flatten(...arrays) {\n     return result;\n   }\n }\n+\n+/**\n+ * Looks through a collection of React children elements, filtering them according to the predicate passed.\n+ *\n+ * @param {Array/Object} children - colleciton of >=1 react elements\n+ * @param {function} predicate - function returning true when provided with an entry as argument\n+ */\n+export function filterReactChildren(children, predicate) {\n+  if (children) {\n+    const result = [];\n+    React.Children.forEach(children, (entry) => {\n+      if (predicate && predicate.call(this, entry)) {\n+        result.push(entry);\n+      }\n+    });\n+    return result;\n+  }\n+}\n+\n+\n+/**\n+ * Looks through a collection of React children elements, filtering them according to the predicate passed.\n+ *\n+ * @param {Array/Object} children - collection of >=1 react elements\n+ */\n+export function getArrayForReactChildren(children) {",
        "path": "src/utils/helpers.js",
        "position": 57,
        "original_position": 57,
        "commit_id": "b5ce004c57e57c118bb90e21df015c62f76047b8",
        "original_commit_id": "bdf0753a55e9f451fdb589e12bbe5dceebc30dfd",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I need this for Select... Select changes on the way :)\n",
        "created_at": "2015-08-26T10:35:27Z",
        "updated_at": "2015-08-26T12:48:44Z",
        "html_url": "https://github.com/nikgraf/belle/pull/176#discussion_r37967728",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/176",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37967728"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/176#discussion_r37967728"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/176"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37975246",
        "pull_request_review_id": null,
        "id": 37975246,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc1MjQ2",
        "diff_hunk": "@@ -222,7 +207,8 @@ export default class Select extends Component {\n     let focusedOptionValue;\n \n     if (properties.children) {\n-      this.children = flatten(properties.children);\n+      this.children = flattenReactChildren(properties.children);\n+      this.options = filter(this.children, isOption);\n     }",
        "path": "src/components/Select.jsx",
        "position": 66,
        "original_position": 72,
        "commit_id": "b5ce004c57e57c118bb90e21df015c62f76047b8",
        "original_commit_id": "b40c281a42b251f18731b2f5de92f3491067f17b",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I added options to 'this' coz I found that filtering was done at a lot of places, this can save us from that.\n",
        "created_at": "2015-08-26T12:27:19Z",
        "updated_at": "2015-08-26T12:48:44Z",
        "html_url": "https://github.com/nikgraf/belle/pull/176#discussion_r37975246",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/176",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37975246"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/176#discussion_r37975246"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/176"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37975804",
        "pull_request_review_id": null,
        "id": 37975804,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc1ODA0",
        "diff_hunk": "@@ -325,7 +311,8 @@ export default class Select extends Component {\n \n   componentWillReceiveProps(properties) {\n     if (properties.children) {\n-      this.children = flatten(properties.children);\n+      this.children = flattenReactChildren(properties.children);\n+      this.options = filter(this.children, isOption);\n     }\n ",
        "path": "src/components/Select.jsx",
        "position": 67,
        "original_position": 97,
        "commit_id": "b5ce004c57e57c118bb90e21df015c62f76047b8",
        "original_commit_id": "b40c281a42b251f18731b2f5de92f3491067f17b",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this.children will always be an array, I could have kept is same is children.props, but I think its perfectly fine to keep it array, coz we can then have more optimized helpers.\n",
        "created_at": "2015-08-26T12:35:35Z",
        "updated_at": "2015-08-26T12:48:44Z",
        "html_url": "https://github.com/nikgraf/belle/pull/176#discussion_r37975804",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/176",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37975804"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/176#discussion_r37975804"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/176"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37976677",
        "pull_request_review_id": null,
        "id": 37976677,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc2Njc3",
        "diff_hunk": "@@ -325,7 +311,8 @@ export default class Select extends Component {\n \n   componentWillReceiveProps(properties) {\n     if (properties.children) {\n-      this.children = flatten(properties.children);\n+      this.children = flattenReactChildren(properties.children);\n+      this.options = filter(this.children, isOption);\n     }\n ",
        "path": "src/components/Select.jsx",
        "position": 67,
        "original_position": 97,
        "commit_id": "b5ce004c57e57c118bb90e21df015c62f76047b8",
        "original_commit_id": "b40c281a42b251f18731b2f5de92f3491067f17b",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "sounds good\n",
        "created_at": "2015-08-26T12:46:21Z",
        "updated_at": "2015-08-26T12:48:44Z",
        "html_url": "https://github.com/nikgraf/belle/pull/176#discussion_r37976677",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/176",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/37976677"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/176#discussion_r37976677"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/176"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/38735439",
        "pull_request_review_id": null,
        "id": 38735439,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1NDM5",
        "diff_hunk": "@@ -22,7 +22,7 @@\n     \"react-component\"\n   ],\n   \"peerDependencies\": {\n-    \"react\": \">=0.13.0\"\n+    \"react\": \">=0.13.0 <0.15.0 || ^0.14.0-alpha\"",
        "path": "package.json",
        "position": 5,
        "original_position": 5,
        "commit_id": "9f8fac0017b2985b20c37f560e2cc2dbc9f9778d",
        "original_commit_id": "9f8fac0017b2985b20c37f560e2cc2dbc9f9778d",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@namuol Hey Louise, @jpuri and I tested it quite intense. Good job. We noticed the 0.14 is already at beta3 and only tested it for this version.\n\nOur idea was to make the version explicit to make sure people don't run into trouble: `\"react\": \">=0.13.0 || ^0.14.0-beta3\"`. Once beta4 is out we can migrate to it and verify there are no breaking changes. Are you using the `0.14.0-alpha` anywhere or is it fine like that?\n",
        "created_at": "2015-09-04T09:30:58Z",
        "updated_at": "2015-09-04T09:30:58Z",
        "html_url": "https://github.com/nikgraf/belle/pull/178#discussion_r38735439",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/178",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/38735439"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/178#discussion_r38735439"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/178"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/39015918",
        "pull_request_review_id": null,
        "id": 39015918,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE1OTE4",
        "diff_hunk": "@@ -4,6 +4,9 @@ This project adheres to [Semantic Versioning](http://semver.org/).\n \n ## To Be Released\n \n+### Changed\n+- [Button, Card, Choice, ComboBox, Option, Placeholder, Rating, Select, Separator, TextInput, Toggle] Removed the 'Belle ' prefix from displayName\n+",
        "path": "CHANGELOG.md",
        "position": 6,
        "original_position": 6,
        "commit_id": "efc48ff96054459c20a4b7f87712057f7f272c4e",
        "original_commit_id": "efc48ff96054459c20a4b7f87712057f7f272c4e",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hey Nik,\nJust to double check, change in display name will not effect anyone already using belle.\n",
        "created_at": "2015-09-09T08:02:45Z",
        "updated_at": "2015-09-09T08:02:45Z",
        "html_url": "https://github.com/nikgraf/belle/pull/183#discussion_r39015918",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/183",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/39015918"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/183#discussion_r39015918"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/183"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/39019895",
        "pull_request_review_id": null,
        "id": 39019895,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE5ODk1",
        "diff_hunk": "@@ -1,8 +1,6 @@\n-/*global jest, describe, it, expect*/\n+/* global jest, describe, it, expect*/\n \n-jest.dontMock('../lib/utils/union-class-names');",
        "path": "src/__tests__/union-class-names-test.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "efc48ff96054459c20a4b7f87712057f7f272c4e",
        "original_commit_id": "efc48ff96054459c20a4b7f87712057f7f272c4e",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nik why did you removed this line ?\n",
        "created_at": "2015-09-09T08:53:53Z",
        "updated_at": "2015-09-09T08:53:53Z",
        "html_url": "https://github.com/nikgraf/belle/pull/183#discussion_r39019895",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/183",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/39019895"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/183#discussion_r39019895"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/183"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/39019928",
        "pull_request_review_id": null,
        "id": 39019928,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE5OTI4",
        "diff_hunk": "@@ -4,6 +4,9 @@ This project adheres to [Semantic Versioning](http://semver.org/).\n \n ## To Be Released\n \n+### Changed\n+- [Button, Card, Choice, ComboBox, Option, Placeholder, Rating, Select, Separator, TextInput, Toggle] Removed the 'Belle ' prefix from displayName\n+",
        "path": "CHANGELOG.md",
        "position": 6,
        "original_position": 6,
        "commit_id": "efc48ff96054459c20a4b7f87712057f7f272c4e",
        "original_commit_id": "efc48ff96054459c20a4b7f87712057f7f272c4e",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No and yes :smile:\n\ndisplayName is usually only used for debugging. Internally we also used it for propType checks. Some other people might have done the same. So if we want to comply to Semantic Versioning we would need to upgrade to 2.0 because it's a breaking change.\n\nAn alternative would be to fix this bug and go back to the old names: https://github.com/gaearon/babel-plugin-react-transform/issues/15\n\nMight be the best solution. Since we didn't really change components we can merge this now and take care about it before we do another release.\n",
        "created_at": "2015-09-09T08:54:27Z",
        "updated_at": "2015-09-09T08:54:27Z",
        "html_url": "https://github.com/nikgraf/belle/pull/183#discussion_r39019928",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/183",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/39019928"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/183#discussion_r39019928"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/183"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/39049768",
        "pull_request_review_id": null,
        "id": 39049768,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5NzY4",
        "diff_hunk": "@@ -1,8 +1,6 @@\n-/*global jest, describe, it, expect*/\n+/* global jest, describe, it, expect*/\n \n-jest.dontMock('../lib/utils/union-class-names');",
        "path": "src/__tests__/union-class-names-test.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "efc48ff96054459c20a4b7f87712057f7f272c4e",
        "original_commit_id": "efc48ff96054459c20a4b7f87712057f7f272c4e",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's added to `package.json` by default\n",
        "created_at": "2015-09-09T14:33:51Z",
        "updated_at": "2015-09-09T14:33:51Z",
        "html_url": "https://github.com/nikgraf/belle/pull/183#discussion_r39049768",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/183",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/39049768"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/183#discussion_r39049768"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/183"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/39063503",
        "pull_request_review_id": null,
        "id": 39063503,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNTAz",
        "diff_hunk": "@@ -1,8 +1,6 @@\n-/*global jest, describe, it, expect*/\n+/* global jest, describe, it, expect*/\n \n-jest.dontMock('../lib/utils/union-class-names');",
        "path": "src/__tests__/union-class-names-test.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "efc48ff96054459c20a4b7f87712057f7f272c4e",
        "original_commit_id": "efc48ff96054459c20a4b7f87712057f7f272c4e",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I mean line no. 3\njest.dontMock\nbut why did you removed it only for '../lib/utils/union-class-names'\n",
        "created_at": "2015-09-09T16:14:44Z",
        "updated_at": "2015-09-09T16:15:08Z",
        "html_url": "https://github.com/nikgraf/belle/pull/183#discussion_r39063503",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/183",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/39063503"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/183#discussion_r39063503"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/183"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41707454",
        "pull_request_review_id": null,
        "id": 41707454,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3NDU0",
        "diff_hunk": "@@ -36,18 +27,18 @@ export default class Card extends Component {\n   };\n \n   /**\n-   * Update the _childProperties based on the updated properties passed to the\n-   * card.\n+   * Update the childProps based on the updated properties passed to the card.\n    */\n   componentWillReceiveProps(properties) {\n-    this.setState({ childProps: sanitizeChildProps(properties) });\n+    const { style, ...childProps } = properties;\n+    this.childProps = childProps;\n   }\n \n   render() {\n-    const divStyle = extend({}, style.style, this.props.style);\n+    const divStyle = { ...cardStyle.style, ...this.props.style };",
        "path": "src/components/Card.js",
        "position": 56,
        "original_position": 43,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2015-10-11T08:31:55Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41707454",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41707454"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41707454"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41710376",
        "pull_request_review_id": null,
        "id": 41710376,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEwMzc2",
        "diff_hunk": "@@ -19,9 +11,8 @@ export default class Card extends Component {\n \n   constructor(properties) {\n     super(properties);\n-    this.state = {\n-      childProps: sanitizeChildProps(properties)\n-    };\n+    const { style, ...childProps } = properties;\n+    this.childProps = childProps;",
        "path": "src/components/Card.js",
        "position": 24,
        "original_position": 23,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If we move childProps away from state, the component will not rerender of a change in childprops. Can that not create trouble.\n",
        "created_at": "2015-10-11T13:22:59Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41710376",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41710376"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41710376"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41710399",
        "pull_request_review_id": null,
        "id": 41710399,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEwMzk5",
        "diff_hunk": "@@ -544,6 +502,49 @@ export default class Rating extends Component {\n   }\n \n   /**\n+   * The function will be passed to requestAnimationFrame for touchMove\n+   */\n+  _triggerComponentUpdateOnTouchMove(touches) {\n+    const touchedElement = document.elementFromPoint(touches.clientX, touches.clientY);\n+    const value = Number(touchedElement.getAttribute('data-belle-value'));\n+    if (value && this.state.focusedValue !== value) {\n+      this.setState({\n+        focusedValue: value\n+      });\n+    }\n+  }\n+\n+\n+  /**\n+   * update component when component is clicked, touch ends, enter or space key are hit\n+   * different update logic will apply depending on whether component has property defaultValue, value or valueLink specified\n+   */\n+  _triggerComponentUpdate(value) {\n+    if (has(this.props, 'valueLink')) {\n+      this.props.valueLink.requestChange(value);\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false\n+      });\n+    } else if (has(this.props, 'value')) {\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false\n+      });\n+    } else {\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false,\n+        value: value\n+      });\n+    }\n+\n+    if (this.props.onUpdate) {\n+      this.props.onUpdate({ value: value });\n+    }\n+  }\n+\n+  /**",
        "path": "src/components/Rating.js",
        "position": 138,
        "original_position": 138,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hey @nikgraf , any specific reason for changing name ?\n",
        "created_at": "2015-10-11T13:24:32Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41710399",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41710399"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41710399"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41710417",
        "pull_request_review_id": null,
        "id": 41710417,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEwNDE3",
        "diff_hunk": "@@ -1,4 +1,3 @@\n-import React from 'react';",
        "path": "src/config/select.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: we can do this from other files also.\n",
        "created_at": "2015-10-11T13:25:43Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41710417",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41710417"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41710417"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41711418",
        "pull_request_review_id": null,
        "id": 41711418,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzExNDE4",
        "diff_hunk": "@@ -1,4 +1,3 @@\n-import React from 'react';",
        "path": "src/config/select.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I didn't find any other where we can do it.\n",
        "created_at": "2015-10-11T14:59:35Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41711418",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41711418"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41711418"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41711424",
        "pull_request_review_id": null,
        "id": 41711424,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzExNDI0",
        "diff_hunk": "@@ -544,6 +502,49 @@ export default class Rating extends Component {\n   }\n \n   /**\n+   * The function will be passed to requestAnimationFrame for touchMove\n+   */\n+  _triggerComponentUpdateOnTouchMove(touches) {\n+    const touchedElement = document.elementFromPoint(touches.clientX, touches.clientY);\n+    const value = Number(touchedElement.getAttribute('data-belle-value'));\n+    if (value && this.state.focusedValue !== value) {\n+      this.setState({\n+        focusedValue: value\n+      });\n+    }\n+  }\n+\n+\n+  /**\n+   * update component when component is clicked, touch ends, enter or space key are hit\n+   * different update logic will apply depending on whether component has property defaultValue, value or valueLink specified\n+   */\n+  _triggerComponentUpdate(value) {\n+    if (has(this.props, 'valueLink')) {\n+      this.props.valueLink.requestChange(value);\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false\n+      });\n+    } else if (has(this.props, 'value')) {\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false\n+      });\n+    } else {\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false,\n+        value: value\n+      });\n+    }\n+\n+    if (this.props.onUpdate) {\n+      this.props.onUpdate({ value: value });\n+    }\n+  }\n+\n+  /**",
        "path": "src/components/Rating.js",
        "position": 138,
        "original_position": 138,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yes, I didn't match our linting rules. I'm happy to change it back and update our linting rules. No hard feeling there :smile: \n",
        "created_at": "2015-10-11T15:00:13Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41711424",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41711424"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41711424"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41711464",
        "pull_request_review_id": null,
        "id": 41711464,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzExNDY0",
        "diff_hunk": "@@ -19,9 +11,8 @@ export default class Card extends Component {\n \n   constructor(properties) {\n     super(properties);\n-    this.state = {\n-      childProps: sanitizeChildProps(properties)\n-    };\n+    const { style, ...childProps } = properties;\n+    this.childProps = childProps;",
        "path": "src/components/Card.js",
        "position": 24,
        "original_position": 23,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I wasn't sure about this myself for quite some time, but when the component receives new props render will be called anyway. see https://facebook.github.io/react/docs/component-specs.html#updating-componentwillreceiveprops\n",
        "created_at": "2015-10-11T15:03:40Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41711464",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41711464"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41711464"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41711472",
        "pull_request_review_id": null,
        "id": 41711472,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzExNDcy",
        "diff_hunk": "@@ -19,9 +11,8 @@ export default class Card extends Component {\n \n   constructor(properties) {\n     super(properties);\n-    this.state = {\n-      childProps: sanitizeChildProps(properties)\n-    };\n+    const { style, ...childProps } = properties;\n+    this.childProps = childProps;",
        "path": "src/components/Card.js",
        "position": 24,
        "original_position": 23,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would suggest and make it consistent between all Belle components and move child props out of the state.\n",
        "created_at": "2015-10-11T15:04:14Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41711472",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41711472"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41711472"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41713111",
        "pull_request_review_id": null,
        "id": 41713111,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzMTEx",
        "diff_hunk": "@@ -1,4 +1,3 @@\n-import React from 'react';",
        "path": "src/config/select.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I guess we can if we rather import React.propTypes rather, sine we are not using ReactDom for rendering and not react\n",
        "created_at": "2015-10-11T17:30:55Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41713111",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41713111"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41713111"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41714326",
        "pull_request_review_id": null,
        "id": 41714326,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0MzI2",
        "diff_hunk": "@@ -544,6 +502,49 @@ export default class Rating extends Component {\n   }\n \n   /**\n+   * The function will be passed to requestAnimationFrame for touchMove\n+   */\n+  _triggerComponentUpdateOnTouchMove(touches) {\n+    const touchedElement = document.elementFromPoint(touches.clientX, touches.clientY);\n+    const value = Number(touchedElement.getAttribute('data-belle-value'));\n+    if (value && this.state.focusedValue !== value) {\n+      this.setState({\n+        focusedValue: value\n+      });\n+    }\n+  }\n+\n+\n+  /**\n+   * update component when component is clicked, touch ends, enter or space key are hit\n+   * different update logic will apply depending on whether component has property defaultValue, value or valueLink specified\n+   */\n+  _triggerComponentUpdate(value) {\n+    if (has(this.props, 'valueLink')) {\n+      this.props.valueLink.requestChange(value);\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false\n+      });\n+    } else if (has(this.props, 'value')) {\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false\n+      });\n+    } else {\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false,\n+        value: value\n+      });\n+    }\n+\n+    if (this.props.onUpdate) {\n+      this.props.onUpdate({ value: value });\n+    }\n+  }\n+\n+  /**",
        "path": "src/components/Rating.js",
        "position": 138,
        "original_position": 138,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Would have been happy to see some strong opinion. But it was linting, good anyways :smile: \n",
        "created_at": "2015-10-11T19:19:02Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41714326",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41714326"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41714326"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41730292",
        "pull_request_review_id": null,
        "id": 41730292,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwMjky",
        "diff_hunk": "@@ -1,4 +1,3 @@\n-import React from 'react';",
        "path": "src/config/select.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Keep in mind even if we don't use React itself we need it in every file where we use JSX. Simply because JSX gets compile with Babel to function calls e.g. `React.DOM.ul()`\n\nhttps://facebook.github.io/react/docs/glossary.html#factories\n",
        "created_at": "2015-10-12T07:37:02Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41730292",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41730292"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41730292"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41730314",
        "pull_request_review_id": null,
        "id": 41730314,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwMzE0",
        "diff_hunk": "@@ -1,4 +1,3 @@\n-import React from 'react';",
        "path": "src/config/select.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Still, I'm all in on importing React.PropTypes directly. Makes the code easier to read.\n",
        "created_at": "2015-10-12T07:37:31Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41730314",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41730314"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41730314"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41730319",
        "pull_request_review_id": null,
        "id": 41730319,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwMzE5",
        "diff_hunk": "@@ -544,6 +502,49 @@ export default class Rating extends Component {\n   }\n \n   /**\n+   * The function will be passed to requestAnimationFrame for touchMove\n+   */\n+  _triggerComponentUpdateOnTouchMove(touches) {\n+    const touchedElement = document.elementFromPoint(touches.clientX, touches.clientY);\n+    const value = Number(touchedElement.getAttribute('data-belle-value'));\n+    if (value && this.state.focusedValue !== value) {\n+      this.setState({\n+        focusedValue: value\n+      });\n+    }\n+  }\n+\n+\n+  /**\n+   * update component when component is clicked, touch ends, enter or space key are hit\n+   * different update logic will apply depending on whether component has property defaultValue, value or valueLink specified\n+   */\n+  _triggerComponentUpdate(value) {\n+    if (has(this.props, 'valueLink')) {\n+      this.props.valueLink.requestChange(value);\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false\n+      });\n+    } else if (has(this.props, 'value')) {\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false\n+      });\n+    } else {\n+      this.setState({\n+        focusedValue: undefined,\n+        isActive: false,\n+        value: value\n+      });\n+    }\n+\n+    if (this.props.onUpdate) {\n+      this.props.onUpdate({ value: value });\n+    }\n+  }\n+\n+  /**",
        "path": "src/components/Rating.js",
        "position": 138,
        "original_position": 138,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "hehe\n",
        "created_at": "2015-10-12T07:37:39Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41730319",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41730319"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41730319"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41731862",
        "pull_request_review_id": null,
        "id": 41731862,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxODYy",
        "diff_hunk": "@@ -1,4 +1,3 @@\n-import React from 'react';",
        "path": "src/config/select.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I guess all DOM stuff has now been moved to ReactDom, I mean in React 0.14.\n",
        "created_at": "2015-10-12T07:59:31Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41731862",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41731862"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41731862"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41733150",
        "pull_request_review_id": null,
        "id": 41733150,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMzMTUw",
        "diff_hunk": "@@ -1,4 +1,3 @@\n-import React from 'react';",
        "path": "src/config/select.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good question. I just checked and it seems like this is not the case yet.\n\n<img width=\"1000\" alt=\"screen shot 2015-10-12 at 10 17 17\" src=\"https://cloud.githubusercontent.com/assets/223045/10423851/79ada2aa-70ca-11e5-9bac-ff9b4e342cfb.png\">\n",
        "created_at": "2015-10-12T08:18:01Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41733150",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41733150"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41733150"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41734802",
        "pull_request_review_id": null,
        "id": 41734802,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM0ODAy",
        "diff_hunk": "@@ -1,4 +1,3 @@\n-import React from 'react';",
        "path": "src/config/select.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Check this: facebook.github.io/react/blog/2015/09/10/react-v0.14-rc1.html\n\nReact guys have still kept lot of old stuff in code(with warnings) which will finally go away after 0.15.\n",
        "created_at": "2015-10-12T08:41:36Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41734802",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41734802"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41734802"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41735171",
        "pull_request_review_id": null,
        "id": 41735171,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1MTcx",
        "diff_hunk": "@@ -1,4 +1,3 @@\n-import React from 'react';",
        "path": "src/config/select.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "5afb051561c09951d93d300cdb2a2442655e77d6",
        "original_commit_id": "83f7af848f4b9d3dcaad0482f30db40a3e5bc6b3",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I couldn't find any notes that they will move React.createElement or the React.DOM helpers to the 'react-dom' package.\n",
        "created_at": "2015-10-12T08:47:30Z",
        "updated_at": "2015-10-12T09:02:41Z",
        "html_url": "https://github.com/nikgraf/belle/pull/192#discussion_r41735171",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/192",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/41735171"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/192#discussion_r41735171"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/42125929",
        "pull_request_review_id": null,
        "id": 42125929,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI1OTI5",
        "diff_hunk": "@@ -0,0 +1,1029 @@\n+import React, {Component} from 'react';\n+import {injectStyles, removeAllStyles} from '../utils/inject-style';\n+import unionClassNames from '../utils/union-class-names';\n+import {has, map, shift, reverse, omit} from '../utils/helpers';\n+import {getWeekArrayForMonth, getLocaleData, CURRENT_DATE, CURRENT_MONTH, CURRENT_YEAR} from '../utils/date-helpers';\n+import style from '../style/date-picker';\n+import config from '../config/datePicker';\n+\n+/**\n+ * Returns an object with properties that are relevant for the wrapping div of the date picker.\n+ */\n+function sanitizeWrapperProps(properties) {\n+  return omit(properties, [\n+    'tabIndex',\n+    'onFocus',\n+    'onBlur',\n+    'onMouseDown',\n+    'onMouseUp',\n+    'onMouseOver',\n+    'onMouseOut',\n+    'onTouchStart',\n+    'onTouchEnd',\n+    'disabled',\n+    'style',\n+    'className'\n+  ]);\n+}\n+\n+/**\n+ * Returns an object with properties that are relevant for day span.\n+ */\n+function sanitizeDayProps(properties) {\n+  return omit(properties, [\n+    'tabIndex',\n+    'key',\n+    'ref',\n+    'onBlur',\n+    'onFocus',\n+    'onMouseDown',\n+    'onMouseUp',\n+    'onMouseOver',\n+    'onMouseOut',\n+    'onTouchStart',\n+    'onTouchEnd',\n+    'onKeyDown',\n+    'style',\n+    'className'\n+  ]);\n+}\n+\n+/**\n+ * Injects pseudo classes for styles into the DOM.\n+ */\n+function updatePseudoClassStyle(pseudoStyleIds, properties, preventFocusStyleForTouchAndClick) {\n+  const styles = [{\n+    id: pseudoStyleIds.prevMonthNavStyleId,\n+    style: {\n+      ...style.hoverPrevMonthNavStyle,\n+      ...properties.hoverPrevMonthNavStyle\n+    },\n+    pseudoClass: 'hover'\n+\n+  }, {\n+    id: pseudoStyleIds.nextMonthNavStyleId,\n+    style: {\n+      ...style.hoverNextMonthNavStyle,\n+      ...properties.hoverNextMonthNavStyle\n+    },\n+    pseudoClass: 'hover'\n+  }];\n+  let focusStyle;\n+  if (preventFocusStyleForTouchAndClick) {\n+    focusStyle = { outline: 0 };\n+  } else {\n+    focusStyle = {\n+      ...style.focusWrapperStyle,\n+      ...properties.focusWrapperStyle\n+    };\n+  }\n+  styles.push({\n+    id: pseudoStyleIds.wrapperStyleId,\n+    style: focusStyle,\n+    pseudoClass: 'focus'\n+  });\n+  injectStyles(styles);\n+}\n+\n+/**\n+ * DatePicker React Component.\n+ */\n+export default class DatePicker extends Component {\n+\n+  constructor(properties) {\n+    super(properties);\n+    let dateValue;\n+\n+    if (has(properties, 'valueLink')) {\n+      dateValue = properties.valueLink.value;\n+    } else if (has(properties, 'value')) {\n+      dateValue = properties.value;\n+    } else if (has(properties, 'defaultValue')) {\n+      dateValue = properties.defaultValue;\n+    }\n+\n+    this.state = {\n+      dateValue: dateValue,\n+      month: properties.month - 1,\n+      year: properties.year,\n+      localeData: getLocaleData(properties.locale),\n+      wrapperProps: sanitizeWrapperProps(properties.wrapperProps),\n+      dayProps: sanitizeDayProps(properties.dayProps),\n+      preventFocusStyleForTouchAndClick: has(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : config.preventFocusStyleForTouchAndClick\n+    };\n+  }\n+\n+  static displayName = 'DatePicker';\n+\n+  static propTypes = {\n+    // value related props\n+    defaultValue: React.PropTypes.instanceOf(Date),\n+    value: React.PropTypes.instanceOf(Date),\n+    valueLink: React.PropTypes.shape({\n+      value: React.PropTypes.instanceOf(Date),\n+      requestChange: React.PropTypes.func.isRequired\n+    }),\n+    // component config related props\n+    locale: React.PropTypes.string,\n+    month: React.PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n+    year: React.PropTypes.number,\n+    showOtherMonthDate: React.PropTypes.bool,\n+    styleWeekend: React.PropTypes.bool,\n+    renderDay: React.PropTypes.func,\n+    tabIndex: React.PropTypes.number,\n+    'aria-label': React.PropTypes.string,\n+    disabled: React.PropTypes.bool,\n+    readOnly: React.PropTypes.bool,\n+    preventFocusStyleForTouchAndClick: React.PropTypes.bool,\n+    // event callbacks\n+    onDayFocus: React.PropTypes.func,\n+    onDayBlur: React.PropTypes.func,\n+    onDayKeyDown: React.PropTypes.func,\n+    onDayMouseDown: React.PropTypes.func,\n+    onDayMouseUp: React.PropTypes.func,\n+    onDayTouchStart: React.PropTypes.func,\n+    onDayTouchEnd: React.PropTypes.func,\n+    onUpdate: React.PropTypes.func,\n+    onMonthChange: React.PropTypes.func,\n+    // props for wrapper and day\n+    wrapperProps: React.PropTypes.object,\n+    dayProps: React.PropTypes.object,\n+    // ClassNames\n+    wrapperClassName: React.PropTypes.string,\n+    navBarClassName: React.PropTypes.string,\n+    prevMonthNavClassName: React.PropTypes.string,\n+    nextMonthNavClassName: React.PropTypes.string,\n+    monthLblClassName: React.PropTypes.string,\n+    dayLblClassName: React.PropTypes.string,\n+    dayClassName: React.PropTypes.string,\n+    // wrapper styles\n+    wrapperStyle: React.PropTypes.object,\n+    disabledWrapperStyle: React.PropTypes.object,\n+    readOnlyWrapperStyle: React.PropTypes.object,\n+    hoverWrapperStyle: React.PropTypes.object,\n+    activeWrapperStyle: React.PropTypes.object,\n+    focusWrapperStyle: React.PropTypes.object,\n+    disabledHoverWrapperStyle: React.PropTypes.object,\n+    // navbar styles\n+    navBarStyle: React.PropTypes.object,\n+    // prevMonthNav styles\n+    prevMonthNavStyle: React.PropTypes.object,\n+    hoverPrevMonthNavStyle: React.PropTypes.object,\n+    activePrevMonthNavStyle: React.PropTypes.object,\n+    // nextMonthNav styles\n+    nextMonthNavStyle: React.PropTypes.object,\n+    hoverNextMonthNavStyle: React.PropTypes.object,\n+    activeNextMonthNavStyle: React.PropTypes.object,\n+    // monthlbl styles\n+    monthLblStyle: React.PropTypes.object,\n+    // daylbl styles\n+    dayLblStyle: React.PropTypes.object,\n+    disabledDayLblStyle: React.PropTypes.object,\n+    weekendLblStyle: React.PropTypes.object,\n+    // day styles\n+    dayStyle: React.PropTypes.object,\n+    disabledDayStyle: React.PropTypes.object,\n+    readOnlyDayStyle: React.PropTypes.object,\n+    hoverDayStyle: React.PropTypes.object,\n+    activeDayStyle: React.PropTypes.object,\n+    focusDayStyle: React.PropTypes.object,\n+    disabledHoverDayStyle: React.PropTypes.object,\n+    todayStyle: React.PropTypes.object,\n+    selectedDayStyle: React.PropTypes.object,\n+    otherMonthDayStyle: React.PropTypes.object,\n+    weekendStyle: React.PropTypes.object\n+  };\n+\n+  static defaultProps = {\n+    month: CURRENT_MONTH + 1,\n+    year: CURRENT_YEAR,\n+    tabIndex: 0,\n+    'aria-label': 'datepicker',\n+    disabled: false,\n+    readOnly: false,\n+    showOtherMonthDate: true,\n+    styleWeekend: false\n+  };\n+\n+  /**\n+   * Generates the style-id based on React's unique DOM node id.\n+   * Calls function to inject the pseudo classes into the dom.\n+   */\n+  componentWillMount() {\n+    const id = this._reactInternalInstance._rootNodeID.replace(/\\./g, '-');\n+    this.pseudoStyleIds = {};\n+    this.pseudoStyleIds.wrapperStyleId = `wrapper-style-id${id}`;\n+    this.pseudoStyleIds.prevMonthNavStyleId = `prevMonthNav-style-id${id}`;\n+    this.pseudoStyleIds.nextMonthNavStyleId = `nextMonthNav-style-id${id}`;\n+    updatePseudoClassStyle(this.pseudoStyleIds, this.props, this.state.preventFocusStyleForTouchAndClick);\n+  }\n+\n+  /**\n+   * Function will update component state and styles as new props are received.\n+   */\n+  componentWillReceiveProps(properties) {\n+    const newState = {\n+      month: properties.month - 1,\n+      year: properties.year,\n+      localeData: getLocaleData(properties.locale),\n+      wrapperProps: sanitizeWrapperProps(properties.wrapperProps),\n+      dayProps: sanitizeDayProps(properties.dayProps),\n+      preventFocusStyleForTouchAndClick: has(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : config.preventFocusStyleForTouchAndClick\n+    };\n+\n+    if (has(properties, 'valueLink')) {\n+      newState.dateValue = properties.valueLink.value;\n+    } else if (has(properties, 'value')) {\n+      newState.dateValue = properties.value;\n+    }\n+\n+    this.setState(newState);\n+\n+    removeAllStyles(Object.keys(this.pseudoStyleIds));\n+    updatePseudoClassStyle(this.pseudoStyleIds, properties, this.state.preventFocusStyleForTouchAndClick);\n+  }\n+\n+  /**\n+   * Removes pseudo classes from the DOM once component gets unmounted.\n+   */\n+  componentWillUnmount() {\n+    removeAllStyles(Object.keys(this.pseudoStyleIds));\n+  }\n+\n+  /**\n+   * Callback is called when wrapper is focused, it will conditionally set isWrapperFocused.\n+   * this.state.focusedDay will be set to current date of whichever month is displayed on date-picker (if this.state.focusedDay is undefined).\n+   */\n+  _onWrapperFocus() {\n+    if (!this.props.disabled && !this.state.isWrapperActive) {\n+      const newState = {\n+        isWrapperFocused: true\n+      };\n+      if (!this.state.focusedDay) {\n+        newState.focusedDay = this.state.month + 1 + '/' + CURRENT_DATE + '/' + CURRENT_YEAR;\n+      }\n+      this.setState(newState);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when wrapper is blurred, it will reset isWrapperFocused, focusedDay.\n+   */\n+  _onWrapperBlur() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isWrapperFocused: false,\n+        focusedDay: undefined\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when wrapper receives mouseDown. Conditionally set isWrapperActive.\n+   */\n+  _onWrapperMouseDown(event) {\n+    if (!this.props.disabled && event.button === 0) {\n+      this.setState({\n+        isWrapperActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when wrapper receives mouseUp. Reset isWrapperActive.\n+   */\n+  _onWrapperMouseUp(event) {\n+    if (!this.props.disabled && event.button === 0) {\n+      this.setState({\n+        isWrapperActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when mouse enters wrapper. Conditionally set isWrapperHovered.\n+   */\n+  _onWrapperMouseOver() {\n+    this.setState({\n+      isWrapperHovered: true\n+    });\n+  }\n+\n+  /**\n+   * Callback is called when mouse leaves wrapper. Reset isWrapperHovered.\n+   */\n+  _onWrapperMouseOut() {\n+    this.setState({\n+      isWrapperHovered: false\n+    });\n+  }\n+\n+  /**\n+   * Callback is called when touch starts on wrapper. Conditionally sets isWrapperActive.\n+   */\n+  _onWrapperTouchStart(event) {\n+    if (!this.props.disabled && event.touches.length === 1) {\n+      this.setState({\n+        isWrapperActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when touch ends on wrapper. Reset isWrapperActive.\n+   */\n+  _onWrapperTouchEnd() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isWrapperActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * On keyDown on wrapper if some day is focused:\n+   * 1. arrow keys will navigate calendar\n+   * 2. enter key will set dateValue of component\n+   * 3. space key will set / unset dateValue\n+   * 4. props.onDayKeyDown will be called\n+   */\n+  _onWrapperKeyDown(event) {\n+    if (this.state.focusedDay) {\n+      if (!this.props.disabled) {\n+        if (event.key === 'ArrowDown') {\n+          event.preventDefault();\n+          this._focusOtherDay(7);\n+        } else if (event.key === 'ArrowUp') {\n+          event.preventDefault();\n+          this._focusOtherDay(-7);\n+        } else if (event.key === 'ArrowLeft') {\n+          event.preventDefault();\n+          this._focusOtherDay(this.state.localeData.isRTL ? 1 : -1);\n+        } else if (event.key === 'ArrowRight') {\n+          event.preventDefault();\n+          this._focusOtherDay(this.state.localeData.isRTL ? -1 : 1);\n+        } else if (event.key === 'Enter') {\n+          event.preventDefault();\n+          this._triggerSelectDate(new Date(this.state.focusedDay).getDate());\n+        } else if (event.key === ' ') {\n+          event.preventDefault();\n+          this._triggerToggleDate(new Date(this.state.focusedDay));\n+        }\n+      }\n+\n+      if (this.props.onDayKeyDown) {\n+        this.props.onDayKeyDown(event);\n+      }\n+    }\n+  }\n+\n+  // mouseEvent.button is supported by all browsers are are targeting: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n+  /**\n+   * Callback is called when some day receives mouseDown.\n+   * It will conditionally set this.state.activeDay, this.state.focusedDay and call props.onDayMouseDown.\n+   */\n+  _onDayMouseDown(dayKey, day, event) {\n+    if (event.button === 0 && !this.props.disabled && !this.props.readOnly) {\n+      this._triggerSelectDate(day);\n+      this.setState({\n+        activeDay: dayKey,\n+        focusedDay: dayKey\n+      });\n+    }\n+\n+    if (this.props.onDayMouseDown) {\n+      this.props.onDayMouseDown(event);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives mouseUp.\n+   * It will reset this.state.activeDay and call props.onDayMouseUp.\n+   */\n+  _onDayMouseUp(dayKey, event) {\n+    if (event.button === 0 && !this.props.disabled && !this.props.readOnly && this.state.activeDay === dayKey) {\n+      this.setState({\n+        activeDay: null\n+      });\n+    }\n+\n+    if (this.props.onDayMouseUp) {\n+      this.props.onDayMouseUp(event);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives MouseOver. It will conditionally set this.state.hoveredDay.\n+   */\n+  _onDayMouseOver(dayKey) {\n+    if (!this.props.disabled && !this.props.readOnly) {\n+      this.setState({\n+        hoveredDay: dayKey\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives MouseOut. It will reset this.state.hoveredDay.\n+   */\n+  _onDayMouseOut(dayKey, event) {\n+    if (!this.props.disabled && !this.props.readOnly && event.button === 0 && this.state.hoveredDay === dayKey) {\n+      this.setState({\n+        hoveredDay: 0\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives touchStart.\n+   * It will conditionally set this.state.activeDay and call props.onDayTouchStart.\n+   */\n+  _onDayTouchStart(dayKey, day, event) {\n+    if (!this.props.disabled && !this.props.readOnly && event.touches.length === 1) {\n+      this._triggerSelectDate(day);\n+      this.setState({\n+        activeDay: dayKey\n+      });\n+    }\n+\n+    if (this.props.onDayTouchStart) {\n+      this.props.onDayTouchStart(event);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives touchEnd.\n+   * It will reset this.state.activeDay and call props.onDayTouchEnd.\n+   */\n+  _onDayTouchEnd(dayKey, event) {\n+    if (!this.props.disabled && !this.props.readOnly && event.touches.length === 1 && this.state.activeDay === dayKey) {\n+      this.setState({\n+        activeDay: null\n+      });\n+    }\n+\n+    if (this.props.onDayTouchEnd) {\n+      this.props.onDayTouchEnd(event);\n+    }\n+  }\n+\n+  /**\n+   * Depending on whether component is controlled or uncontrolled the function will update this.state.dateValue.\n+   * It will also call props.onUpdate.\n+   */\n+  _triggerSelectDate(date) {\n+    if (!this.props.disabled && !this.props.readOnly) {\n+      let dateValue;\n+      if (date) {\n+        dateValue = new Date(this.state.year, this.state.month, date);\n+      }\n+      if (has(this.props, 'valueLink')) {\n+        this.props.valueLink.requestChange(dateValue);\n+      } else if (!has(this.props, 'value')) {\n+        this.setState({\n+          dateValue: dateValue\n+        });\n+      }\n+\n+      if (this.props.onUpdate) {\n+        this.props.onUpdate({\n+          value: dateValue\n+        });\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Function will select / deselect date passed to it, it is used in case of 'Space' keyDown on a day.\n+   */\n+  _triggerToggleDate(date) {\n+    if (!this.props.disabled && !this.props.readOnly) {\n+      let dateValue;\n+      if (this.state.dateValue && date && this.state.dateValue.getDate() === date.getDate() && this.state.dateValue.getMonth() === date.getMonth() && this.state.dateValue.getYear() === date.getYear()) {\n+        dateValue = undefined;\n+      } else {\n+        dateValue = date.getDate();\n+      }\n+      this._triggerSelectDate(dateValue);\n+    }\n+  }\n+\n+  /**\n+   * The function is mainly used when some day is focused and Arrow keys are pressed to navigate to some other day.\n+   * days is the number of days by which focused should be moved ahead or behind.\n+   */\n+  _focusOtherDay(days) {\n+    const currentFocusedDay = new Date(this.state.focusedDay);\n+    const currentMonth = currentFocusedDay.getMonth();\n+    currentFocusedDay.setDate(currentFocusedDay.getDate() + days);\n+    const currentFocusedDayKey = (currentFocusedDay.getMonth() + 1) + '/' + currentFocusedDay.getDate() + '/' + currentFocusedDay.getFullYear();\n+    if (currentFocusedDay.getMonth() < currentMonth) {\n+      this._decreaseMonth();\n+    } else if (currentFocusedDay.getMonth() > currentMonth) {\n+      this._increaseMonth();\n+    }\n+    this.setState({\n+      focusedDay: currentFocusedDayKey\n+    });\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives mouse down.\n+   * If component is not disabled it will decrease the month and set active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavMouseDown(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this._decreaseMonth();\n+      this.setState({\n+        isPrevMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives mouse up.\n+   * It will reset active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavMouseUp(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this.setState({\n+        isPrevMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives touch start.\n+   * If component is not disabled it will decrease the month and set active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavTouchStart(event) {\n+    if (!this.props.disabled && event.touches.length === 1) {\n+      this._decreaseMonth();\n+      this.setState({\n+        isPrevMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives touch end. It will reset active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavTouchEnd() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isPrevMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives mouseDown.\n+   * If component is not disabled it will increase the month and set active state for nextMonthNav.\n+   */\n+  _onNextMonthNavMouseDown(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this._increaseMonth();\n+      this.setState({\n+        isNextMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives mouse up. It will reset active state for nextMonthNav.\n+   */\n+  _onNextMonthNavMouseUp(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this.setState({\n+        isNextMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives touch start.\n+   * If component is not disabled it will increase the month and set active state for nextMonthNav.\n+   */\n+  _onNextMonthNavTouchStart(event) {\n+    if (!this.props.disabled && event.touches.length === 1) {\n+      this._increaseMonth();\n+      this.setState({\n+        isNextMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives touch end. It will reset active state for nextMonthNav.\n+   */\n+  _onNextMonthNavTouchEnd() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isNextMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * The function will decrease current month in state. It will also call props.onMonthChange.\n+   */\n+  _decreaseMonth() {\n+    let newMonth;\n+    let newYear;\n+    if (this.state.month === 0) {\n+      newMonth = 11;\n+      newYear = this.state.year - 1;\n+    } else {\n+      newMonth = this.state.month - 1;\n+      newYear = this.state.year;\n+    }\n+    this.setState({\n+      month: newMonth,\n+      year: newYear\n+    });\n+    if (this.props.onMonthChange) {\n+      this.props.onMonthChange(newMonth + 1);\n+    }\n+  }\n+\n+  /**\n+   * The function will increase current month in state. It will also call props.onMonthChange.\n+   */\n+  _increaseMonth() {\n+    let newMonth;\n+    let newYear;\n+    if (this.state.month === 11) {\n+      newMonth = 0;\n+      newYear = this.state.year + 1;\n+    } else {\n+      newMonth = this.state.month + 1;\n+      newYear = this.state.year;\n+    }\n+    this.setState({\n+      month: newMonth,\n+      year: newYear\n+    });\n+    if (this.props.onMonthChange) {\n+      this.props.onMonthChange(newMonth + 1);\n+    }\n+  }\n+\n+  /**\n+   * Function will return jsx for rendering the nav bar for calendar.\n+   * Depending on following rules it will apply styles to prevMonthNav and nextMonthNav:\n+   * 1. If disabled hide navs\n+   * 2. If active apply activeStyles\n+   */\n+  _renderNavBar() {\n+    const navBarStyle = {\n+      ...style.navBarStyle,\n+      ...this.props.navBarStyle\n+    };\n+    const monthLblStyle = {\n+      ...style.monthLblStyle,\n+      ...this.props.monthLblStyle\n+    };\n+    let prevMonthNavStyle = {\n+      ...style.prevMonthNavStyle,\n+      ...this.props.prevMonthNavStyle\n+    };\n+    let nextMonthNavStyle = {\n+      ...style.nextMonthNavStyle,\n+      ...this.props.nextMonthNavStyle\n+    };\n+    if (this.state.isPrevMonthNavActive) {\n+      prevMonthNavStyle = {\n+        ...prevMonthNavStyle,\n+        ...style.activePrevMonthNavStyle,\n+        ...this.props.activePrevMonthNavStyle\n+      };\n+    } else if (this.state.isNextMonthNavActive) {\n+      nextMonthNavStyle = {\n+        ...nextMonthNavStyle,\n+        ...style.activeNextMonthNavStyle,\n+        ...this.props.activeNextMonthNavStyle\n+      };\n+    }\n+\n+    return (\n+      <div style={ navBarStyle }\n+           className={ this.props.navBarClassName }>\n+           { !this.props.disabled ? <span onMouseDown={ this._onPrevMonthNavMouseDown.bind(this) }\n+                onMouseUp={ this._onPrevMonthNavMouseUp.bind(this) }\n+                onTouchStart={ this._onPrevMonthNavTouchStart.bind(this) }\n+                onTouchEnd={ this._onPrevMonthNavTouchEnd.bind(this) }\n+                style= { prevMonthNavStyle }\n+                className={ unionClassNames(this.props.prevMonthNavClassName, this.pseudoStyleIds.prevMonthNavStyleId) }></span> : void 0}\n+          <span style={ monthLblStyle }\n+                className={ this.props.monthLblClassName }\n+                role=\"heading\"\n+                id={ this.state.month + '-' + this.state.year }>",
        "path": "src/components/DatePicker.js",
        "position": null,
        "original_position": 720,
        "commit_id": "8fd9c49ff767a15558cd2caa86e05302265782cd",
        "original_commit_id": "e8ac40f29ac80ad8d0075131f706c74d6fc9f824",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "hey @jpuri, any particular reason why an id attribute is used here?\n",
        "created_at": "2015-10-15T13:50:27Z",
        "updated_at": "2015-10-15T15:36:47Z",
        "html_url": "https://github.com/nikgraf/belle/pull/197#discussion_r42125929",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/197",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/42125929"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/197#discussion_r42125929"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/197"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/42134549",
        "pull_request_review_id": null,
        "id": 42134549,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM0NTQ5",
        "diff_hunk": "@@ -0,0 +1,1029 @@\n+import React, {Component} from 'react';\n+import {injectStyles, removeAllStyles} from '../utils/inject-style';\n+import unionClassNames from '../utils/union-class-names';\n+import {has, map, shift, reverse, omit} from '../utils/helpers';\n+import {getWeekArrayForMonth, getLocaleData, CURRENT_DATE, CURRENT_MONTH, CURRENT_YEAR} from '../utils/date-helpers';\n+import style from '../style/date-picker';\n+import config from '../config/datePicker';\n+\n+/**\n+ * Returns an object with properties that are relevant for the wrapping div of the date picker.\n+ */\n+function sanitizeWrapperProps(properties) {\n+  return omit(properties, [\n+    'tabIndex',\n+    'onFocus',\n+    'onBlur',\n+    'onMouseDown',\n+    'onMouseUp',\n+    'onMouseOver',\n+    'onMouseOut',\n+    'onTouchStart',\n+    'onTouchEnd',\n+    'disabled',\n+    'style',\n+    'className'\n+  ]);\n+}\n+\n+/**\n+ * Returns an object with properties that are relevant for day span.\n+ */\n+function sanitizeDayProps(properties) {\n+  return omit(properties, [\n+    'tabIndex',\n+    'key',\n+    'ref',\n+    'onBlur',\n+    'onFocus',\n+    'onMouseDown',\n+    'onMouseUp',\n+    'onMouseOver',\n+    'onMouseOut',\n+    'onTouchStart',\n+    'onTouchEnd',\n+    'onKeyDown',\n+    'style',\n+    'className'\n+  ]);\n+}\n+\n+/**\n+ * Injects pseudo classes for styles into the DOM.\n+ */\n+function updatePseudoClassStyle(pseudoStyleIds, properties, preventFocusStyleForTouchAndClick) {\n+  const styles = [{\n+    id: pseudoStyleIds.prevMonthNavStyleId,\n+    style: {\n+      ...style.hoverPrevMonthNavStyle,\n+      ...properties.hoverPrevMonthNavStyle\n+    },\n+    pseudoClass: 'hover'\n+\n+  }, {\n+    id: pseudoStyleIds.nextMonthNavStyleId,\n+    style: {\n+      ...style.hoverNextMonthNavStyle,\n+      ...properties.hoverNextMonthNavStyle\n+    },\n+    pseudoClass: 'hover'\n+  }];\n+  let focusStyle;\n+  if (preventFocusStyleForTouchAndClick) {\n+    focusStyle = { outline: 0 };\n+  } else {\n+    focusStyle = {\n+      ...style.focusWrapperStyle,\n+      ...properties.focusWrapperStyle\n+    };\n+  }\n+  styles.push({\n+    id: pseudoStyleIds.wrapperStyleId,\n+    style: focusStyle,\n+    pseudoClass: 'focus'\n+  });\n+  injectStyles(styles);\n+}\n+\n+/**\n+ * DatePicker React Component.\n+ */\n+export default class DatePicker extends Component {\n+\n+  constructor(properties) {\n+    super(properties);\n+    let dateValue;\n+\n+    if (has(properties, 'valueLink')) {\n+      dateValue = properties.valueLink.value;\n+    } else if (has(properties, 'value')) {\n+      dateValue = properties.value;\n+    } else if (has(properties, 'defaultValue')) {\n+      dateValue = properties.defaultValue;\n+    }\n+\n+    this.state = {\n+      dateValue: dateValue,\n+      month: properties.month - 1,\n+      year: properties.year,\n+      localeData: getLocaleData(properties.locale),\n+      wrapperProps: sanitizeWrapperProps(properties.wrapperProps),\n+      dayProps: sanitizeDayProps(properties.dayProps),\n+      preventFocusStyleForTouchAndClick: has(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : config.preventFocusStyleForTouchAndClick\n+    };\n+  }\n+\n+  static displayName = 'DatePicker';\n+\n+  static propTypes = {\n+    // value related props\n+    defaultValue: React.PropTypes.instanceOf(Date),\n+    value: React.PropTypes.instanceOf(Date),\n+    valueLink: React.PropTypes.shape({\n+      value: React.PropTypes.instanceOf(Date),\n+      requestChange: React.PropTypes.func.isRequired\n+    }),\n+    // component config related props\n+    locale: React.PropTypes.string,\n+    month: React.PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n+    year: React.PropTypes.number,\n+    showOtherMonthDate: React.PropTypes.bool,\n+    styleWeekend: React.PropTypes.bool,\n+    renderDay: React.PropTypes.func,\n+    tabIndex: React.PropTypes.number,\n+    'aria-label': React.PropTypes.string,\n+    disabled: React.PropTypes.bool,\n+    readOnly: React.PropTypes.bool,\n+    preventFocusStyleForTouchAndClick: React.PropTypes.bool,\n+    // event callbacks\n+    onDayFocus: React.PropTypes.func,\n+    onDayBlur: React.PropTypes.func,\n+    onDayKeyDown: React.PropTypes.func,\n+    onDayMouseDown: React.PropTypes.func,\n+    onDayMouseUp: React.PropTypes.func,\n+    onDayTouchStart: React.PropTypes.func,\n+    onDayTouchEnd: React.PropTypes.func,\n+    onUpdate: React.PropTypes.func,\n+    onMonthChange: React.PropTypes.func,\n+    // props for wrapper and day\n+    wrapperProps: React.PropTypes.object,\n+    dayProps: React.PropTypes.object,\n+    // ClassNames\n+    wrapperClassName: React.PropTypes.string,\n+    navBarClassName: React.PropTypes.string,\n+    prevMonthNavClassName: React.PropTypes.string,\n+    nextMonthNavClassName: React.PropTypes.string,\n+    monthLblClassName: React.PropTypes.string,\n+    dayLblClassName: React.PropTypes.string,\n+    dayClassName: React.PropTypes.string,\n+    // wrapper styles\n+    wrapperStyle: React.PropTypes.object,\n+    disabledWrapperStyle: React.PropTypes.object,\n+    readOnlyWrapperStyle: React.PropTypes.object,\n+    hoverWrapperStyle: React.PropTypes.object,\n+    activeWrapperStyle: React.PropTypes.object,\n+    focusWrapperStyle: React.PropTypes.object,\n+    disabledHoverWrapperStyle: React.PropTypes.object,\n+    // navbar styles\n+    navBarStyle: React.PropTypes.object,\n+    // prevMonthNav styles\n+    prevMonthNavStyle: React.PropTypes.object,\n+    hoverPrevMonthNavStyle: React.PropTypes.object,\n+    activePrevMonthNavStyle: React.PropTypes.object,\n+    // nextMonthNav styles\n+    nextMonthNavStyle: React.PropTypes.object,\n+    hoverNextMonthNavStyle: React.PropTypes.object,\n+    activeNextMonthNavStyle: React.PropTypes.object,\n+    // monthlbl styles\n+    monthLblStyle: React.PropTypes.object,\n+    // daylbl styles\n+    dayLblStyle: React.PropTypes.object,\n+    disabledDayLblStyle: React.PropTypes.object,\n+    weekendLblStyle: React.PropTypes.object,\n+    // day styles\n+    dayStyle: React.PropTypes.object,\n+    disabledDayStyle: React.PropTypes.object,\n+    readOnlyDayStyle: React.PropTypes.object,\n+    hoverDayStyle: React.PropTypes.object,\n+    activeDayStyle: React.PropTypes.object,\n+    focusDayStyle: React.PropTypes.object,\n+    disabledHoverDayStyle: React.PropTypes.object,\n+    todayStyle: React.PropTypes.object,\n+    selectedDayStyle: React.PropTypes.object,\n+    otherMonthDayStyle: React.PropTypes.object,\n+    weekendStyle: React.PropTypes.object\n+  };\n+\n+  static defaultProps = {\n+    month: CURRENT_MONTH + 1,\n+    year: CURRENT_YEAR,\n+    tabIndex: 0,\n+    'aria-label': 'datepicker',\n+    disabled: false,\n+    readOnly: false,\n+    showOtherMonthDate: true,\n+    styleWeekend: false\n+  };\n+\n+  /**\n+   * Generates the style-id based on React's unique DOM node id.\n+   * Calls function to inject the pseudo classes into the dom.\n+   */\n+  componentWillMount() {\n+    const id = this._reactInternalInstance._rootNodeID.replace(/\\./g, '-');\n+    this.pseudoStyleIds = {};\n+    this.pseudoStyleIds.wrapperStyleId = `wrapper-style-id${id}`;\n+    this.pseudoStyleIds.prevMonthNavStyleId = `prevMonthNav-style-id${id}`;\n+    this.pseudoStyleIds.nextMonthNavStyleId = `nextMonthNav-style-id${id}`;\n+    updatePseudoClassStyle(this.pseudoStyleIds, this.props, this.state.preventFocusStyleForTouchAndClick);\n+  }\n+\n+  /**\n+   * Function will update component state and styles as new props are received.\n+   */\n+  componentWillReceiveProps(properties) {\n+    const newState = {\n+      month: properties.month - 1,\n+      year: properties.year,\n+      localeData: getLocaleData(properties.locale),\n+      wrapperProps: sanitizeWrapperProps(properties.wrapperProps),\n+      dayProps: sanitizeDayProps(properties.dayProps),\n+      preventFocusStyleForTouchAndClick: has(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : config.preventFocusStyleForTouchAndClick\n+    };\n+\n+    if (has(properties, 'valueLink')) {\n+      newState.dateValue = properties.valueLink.value;\n+    } else if (has(properties, 'value')) {\n+      newState.dateValue = properties.value;\n+    }\n+\n+    this.setState(newState);\n+\n+    removeAllStyles(Object.keys(this.pseudoStyleIds));\n+    updatePseudoClassStyle(this.pseudoStyleIds, properties, this.state.preventFocusStyleForTouchAndClick);\n+  }\n+\n+  /**\n+   * Removes pseudo classes from the DOM once component gets unmounted.\n+   */\n+  componentWillUnmount() {\n+    removeAllStyles(Object.keys(this.pseudoStyleIds));\n+  }\n+\n+  /**\n+   * Callback is called when wrapper is focused, it will conditionally set isWrapperFocused.\n+   * this.state.focusedDay will be set to current date of whichever month is displayed on date-picker (if this.state.focusedDay is undefined).\n+   */\n+  _onWrapperFocus() {\n+    if (!this.props.disabled && !this.state.isWrapperActive) {\n+      const newState = {\n+        isWrapperFocused: true\n+      };\n+      if (!this.state.focusedDay) {\n+        newState.focusedDay = this.state.month + 1 + '/' + CURRENT_DATE + '/' + CURRENT_YEAR;\n+      }\n+      this.setState(newState);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when wrapper is blurred, it will reset isWrapperFocused, focusedDay.\n+   */\n+  _onWrapperBlur() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isWrapperFocused: false,\n+        focusedDay: undefined\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when wrapper receives mouseDown. Conditionally set isWrapperActive.\n+   */\n+  _onWrapperMouseDown(event) {\n+    if (!this.props.disabled && event.button === 0) {\n+      this.setState({\n+        isWrapperActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when wrapper receives mouseUp. Reset isWrapperActive.\n+   */\n+  _onWrapperMouseUp(event) {\n+    if (!this.props.disabled && event.button === 0) {\n+      this.setState({\n+        isWrapperActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when mouse enters wrapper. Conditionally set isWrapperHovered.\n+   */\n+  _onWrapperMouseOver() {\n+    this.setState({\n+      isWrapperHovered: true\n+    });\n+  }\n+\n+  /**\n+   * Callback is called when mouse leaves wrapper. Reset isWrapperHovered.\n+   */\n+  _onWrapperMouseOut() {\n+    this.setState({\n+      isWrapperHovered: false\n+    });\n+  }\n+\n+  /**\n+   * Callback is called when touch starts on wrapper. Conditionally sets isWrapperActive.\n+   */\n+  _onWrapperTouchStart(event) {\n+    if (!this.props.disabled && event.touches.length === 1) {\n+      this.setState({\n+        isWrapperActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when touch ends on wrapper. Reset isWrapperActive.\n+   */\n+  _onWrapperTouchEnd() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isWrapperActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * On keyDown on wrapper if some day is focused:\n+   * 1. arrow keys will navigate calendar\n+   * 2. enter key will set dateValue of component\n+   * 3. space key will set / unset dateValue\n+   * 4. props.onDayKeyDown will be called\n+   */\n+  _onWrapperKeyDown(event) {\n+    if (this.state.focusedDay) {\n+      if (!this.props.disabled) {\n+        if (event.key === 'ArrowDown') {\n+          event.preventDefault();\n+          this._focusOtherDay(7);\n+        } else if (event.key === 'ArrowUp') {\n+          event.preventDefault();\n+          this._focusOtherDay(-7);\n+        } else if (event.key === 'ArrowLeft') {\n+          event.preventDefault();\n+          this._focusOtherDay(this.state.localeData.isRTL ? 1 : -1);\n+        } else if (event.key === 'ArrowRight') {\n+          event.preventDefault();\n+          this._focusOtherDay(this.state.localeData.isRTL ? -1 : 1);\n+        } else if (event.key === 'Enter') {\n+          event.preventDefault();\n+          this._triggerSelectDate(new Date(this.state.focusedDay).getDate());\n+        } else if (event.key === ' ') {\n+          event.preventDefault();\n+          this._triggerToggleDate(new Date(this.state.focusedDay));\n+        }\n+      }\n+\n+      if (this.props.onDayKeyDown) {\n+        this.props.onDayKeyDown(event);\n+      }\n+    }\n+  }\n+\n+  // mouseEvent.button is supported by all browsers are are targeting: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n+  /**\n+   * Callback is called when some day receives mouseDown.\n+   * It will conditionally set this.state.activeDay, this.state.focusedDay and call props.onDayMouseDown.\n+   */\n+  _onDayMouseDown(dayKey, day, event) {\n+    if (event.button === 0 && !this.props.disabled && !this.props.readOnly) {\n+      this._triggerSelectDate(day);\n+      this.setState({\n+        activeDay: dayKey,\n+        focusedDay: dayKey\n+      });\n+    }\n+\n+    if (this.props.onDayMouseDown) {\n+      this.props.onDayMouseDown(event);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives mouseUp.\n+   * It will reset this.state.activeDay and call props.onDayMouseUp.\n+   */\n+  _onDayMouseUp(dayKey, event) {\n+    if (event.button === 0 && !this.props.disabled && !this.props.readOnly && this.state.activeDay === dayKey) {\n+      this.setState({\n+        activeDay: null\n+      });\n+    }\n+\n+    if (this.props.onDayMouseUp) {\n+      this.props.onDayMouseUp(event);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives MouseOver. It will conditionally set this.state.hoveredDay.\n+   */\n+  _onDayMouseOver(dayKey) {\n+    if (!this.props.disabled && !this.props.readOnly) {\n+      this.setState({\n+        hoveredDay: dayKey\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives MouseOut. It will reset this.state.hoveredDay.\n+   */\n+  _onDayMouseOut(dayKey, event) {\n+    if (!this.props.disabled && !this.props.readOnly && event.button === 0 && this.state.hoveredDay === dayKey) {\n+      this.setState({\n+        hoveredDay: 0\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives touchStart.\n+   * It will conditionally set this.state.activeDay and call props.onDayTouchStart.\n+   */\n+  _onDayTouchStart(dayKey, day, event) {\n+    if (!this.props.disabled && !this.props.readOnly && event.touches.length === 1) {\n+      this._triggerSelectDate(day);\n+      this.setState({\n+        activeDay: dayKey\n+      });\n+    }\n+\n+    if (this.props.onDayTouchStart) {\n+      this.props.onDayTouchStart(event);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives touchEnd.\n+   * It will reset this.state.activeDay and call props.onDayTouchEnd.\n+   */\n+  _onDayTouchEnd(dayKey, event) {\n+    if (!this.props.disabled && !this.props.readOnly && event.touches.length === 1 && this.state.activeDay === dayKey) {\n+      this.setState({\n+        activeDay: null\n+      });\n+    }\n+\n+    if (this.props.onDayTouchEnd) {\n+      this.props.onDayTouchEnd(event);\n+    }\n+  }\n+\n+  /**\n+   * Depending on whether component is controlled or uncontrolled the function will update this.state.dateValue.\n+   * It will also call props.onUpdate.\n+   */\n+  _triggerSelectDate(date) {\n+    if (!this.props.disabled && !this.props.readOnly) {\n+      let dateValue;\n+      if (date) {\n+        dateValue = new Date(this.state.year, this.state.month, date);\n+      }\n+      if (has(this.props, 'valueLink')) {\n+        this.props.valueLink.requestChange(dateValue);\n+      } else if (!has(this.props, 'value')) {\n+        this.setState({\n+          dateValue: dateValue\n+        });\n+      }\n+\n+      if (this.props.onUpdate) {\n+        this.props.onUpdate({\n+          value: dateValue\n+        });\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Function will select / deselect date passed to it, it is used in case of 'Space' keyDown on a day.\n+   */\n+  _triggerToggleDate(date) {\n+    if (!this.props.disabled && !this.props.readOnly) {\n+      let dateValue;\n+      if (this.state.dateValue && date && this.state.dateValue.getDate() === date.getDate() && this.state.dateValue.getMonth() === date.getMonth() && this.state.dateValue.getYear() === date.getYear()) {\n+        dateValue = undefined;\n+      } else {\n+        dateValue = date.getDate();\n+      }\n+      this._triggerSelectDate(dateValue);\n+    }\n+  }\n+\n+  /**\n+   * The function is mainly used when some day is focused and Arrow keys are pressed to navigate to some other day.\n+   * days is the number of days by which focused should be moved ahead or behind.\n+   */\n+  _focusOtherDay(days) {\n+    const currentFocusedDay = new Date(this.state.focusedDay);\n+    const currentMonth = currentFocusedDay.getMonth();\n+    currentFocusedDay.setDate(currentFocusedDay.getDate() + days);\n+    const currentFocusedDayKey = (currentFocusedDay.getMonth() + 1) + '/' + currentFocusedDay.getDate() + '/' + currentFocusedDay.getFullYear();\n+    if (currentFocusedDay.getMonth() < currentMonth) {\n+      this._decreaseMonth();\n+    } else if (currentFocusedDay.getMonth() > currentMonth) {\n+      this._increaseMonth();\n+    }\n+    this.setState({\n+      focusedDay: currentFocusedDayKey\n+    });\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives mouse down.\n+   * If component is not disabled it will decrease the month and set active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavMouseDown(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this._decreaseMonth();\n+      this.setState({\n+        isPrevMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives mouse up.\n+   * It will reset active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavMouseUp(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this.setState({\n+        isPrevMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives touch start.\n+   * If component is not disabled it will decrease the month and set active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavTouchStart(event) {\n+    if (!this.props.disabled && event.touches.length === 1) {\n+      this._decreaseMonth();\n+      this.setState({\n+        isPrevMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives touch end. It will reset active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavTouchEnd() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isPrevMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives mouseDown.\n+   * If component is not disabled it will increase the month and set active state for nextMonthNav.\n+   */\n+  _onNextMonthNavMouseDown(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this._increaseMonth();\n+      this.setState({\n+        isNextMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives mouse up. It will reset active state for nextMonthNav.\n+   */\n+  _onNextMonthNavMouseUp(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this.setState({\n+        isNextMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives touch start.\n+   * If component is not disabled it will increase the month and set active state for nextMonthNav.\n+   */\n+  _onNextMonthNavTouchStart(event) {\n+    if (!this.props.disabled && event.touches.length === 1) {\n+      this._increaseMonth();\n+      this.setState({\n+        isNextMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives touch end. It will reset active state for nextMonthNav.\n+   */\n+  _onNextMonthNavTouchEnd() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isNextMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * The function will decrease current month in state. It will also call props.onMonthChange.\n+   */\n+  _decreaseMonth() {\n+    let newMonth;\n+    let newYear;\n+    if (this.state.month === 0) {\n+      newMonth = 11;\n+      newYear = this.state.year - 1;\n+    } else {\n+      newMonth = this.state.month - 1;\n+      newYear = this.state.year;\n+    }\n+    this.setState({\n+      month: newMonth,\n+      year: newYear\n+    });\n+    if (this.props.onMonthChange) {\n+      this.props.onMonthChange(newMonth + 1);\n+    }\n+  }\n+\n+  /**\n+   * The function will increase current month in state. It will also call props.onMonthChange.\n+   */\n+  _increaseMonth() {\n+    let newMonth;\n+    let newYear;\n+    if (this.state.month === 11) {\n+      newMonth = 0;\n+      newYear = this.state.year + 1;\n+    } else {\n+      newMonth = this.state.month + 1;\n+      newYear = this.state.year;\n+    }\n+    this.setState({\n+      month: newMonth,\n+      year: newYear\n+    });\n+    if (this.props.onMonthChange) {\n+      this.props.onMonthChange(newMonth + 1);\n+    }\n+  }\n+\n+  /**\n+   * Function will return jsx for rendering the nav bar for calendar.\n+   * Depending on following rules it will apply styles to prevMonthNav and nextMonthNav:\n+   * 1. If disabled hide navs\n+   * 2. If active apply activeStyles\n+   */\n+  _renderNavBar() {\n+    const navBarStyle = {\n+      ...style.navBarStyle,\n+      ...this.props.navBarStyle\n+    };\n+    const monthLblStyle = {\n+      ...style.monthLblStyle,\n+      ...this.props.monthLblStyle\n+    };\n+    let prevMonthNavStyle = {\n+      ...style.prevMonthNavStyle,\n+      ...this.props.prevMonthNavStyle\n+    };\n+    let nextMonthNavStyle = {\n+      ...style.nextMonthNavStyle,\n+      ...this.props.nextMonthNavStyle\n+    };\n+    if (this.state.isPrevMonthNavActive) {\n+      prevMonthNavStyle = {\n+        ...prevMonthNavStyle,\n+        ...style.activePrevMonthNavStyle,\n+        ...this.props.activePrevMonthNavStyle\n+      };\n+    } else if (this.state.isNextMonthNavActive) {\n+      nextMonthNavStyle = {\n+        ...nextMonthNavStyle,\n+        ...style.activeNextMonthNavStyle,\n+        ...this.props.activeNextMonthNavStyle\n+      };\n+    }\n+\n+    return (\n+      <div style={ navBarStyle }\n+           className={ this.props.navBarClassName }>\n+           { !this.props.disabled ? <span onMouseDown={ this._onPrevMonthNavMouseDown.bind(this) }\n+                onMouseUp={ this._onPrevMonthNavMouseUp.bind(this) }\n+                onTouchStart={ this._onPrevMonthNavTouchStart.bind(this) }\n+                onTouchEnd={ this._onPrevMonthNavTouchEnd.bind(this) }\n+                style= { prevMonthNavStyle }\n+                className={ unionClassNames(this.props.prevMonthNavClassName, this.pseudoStyleIds.prevMonthNavStyleId) }></span> : void 0}\n+          <span style={ monthLblStyle }\n+                className={ this.props.monthLblClassName }\n+                role=\"heading\"\n+                id={ this.state.month + '-' + this.state.year }>",
        "path": "src/components/DatePicker.js",
        "position": null,
        "original_position": 720,
        "commit_id": "8fd9c49ff767a15558cd2caa86e05302265782cd",
        "original_commit_id": "e8ac40f29ac80ad8d0075131f706c74d6fc9f824",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hey @nikgraf , this was for a WAI-ARIA recommendation : http://www.w3.org/TR/wai-aria-practices/#datepicker\n\n\"The current month has a label representing the month and year. It is advisable to use a role heading but is not essential. This \"label\" should have a unique ID.\"\n",
        "created_at": "2015-10-15T14:56:39Z",
        "updated_at": "2015-10-15T15:36:47Z",
        "html_url": "https://github.com/nikgraf/belle/pull/197#discussion_r42134549",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/197",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/42134549"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/197#discussion_r42134549"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/197"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/42137782",
        "pull_request_review_id": null,
        "id": 42137782,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3Nzgy",
        "diff_hunk": "@@ -0,0 +1,1029 @@\n+import React, {Component} from 'react';\n+import {injectStyles, removeAllStyles} from '../utils/inject-style';\n+import unionClassNames from '../utils/union-class-names';\n+import {has, map, shift, reverse, omit} from '../utils/helpers';\n+import {getWeekArrayForMonth, getLocaleData, CURRENT_DATE, CURRENT_MONTH, CURRENT_YEAR} from '../utils/date-helpers';\n+import style from '../style/date-picker';\n+import config from '../config/datePicker';\n+\n+/**\n+ * Returns an object with properties that are relevant for the wrapping div of the date picker.\n+ */\n+function sanitizeWrapperProps(properties) {\n+  return omit(properties, [\n+    'tabIndex',\n+    'onFocus',\n+    'onBlur',\n+    'onMouseDown',\n+    'onMouseUp',\n+    'onMouseOver',\n+    'onMouseOut',\n+    'onTouchStart',\n+    'onTouchEnd',\n+    'disabled',\n+    'style',\n+    'className'\n+  ]);\n+}\n+\n+/**\n+ * Returns an object with properties that are relevant for day span.\n+ */\n+function sanitizeDayProps(properties) {\n+  return omit(properties, [\n+    'tabIndex',\n+    'key',\n+    'ref',\n+    'onBlur',\n+    'onFocus',\n+    'onMouseDown',\n+    'onMouseUp',\n+    'onMouseOver',\n+    'onMouseOut',\n+    'onTouchStart',\n+    'onTouchEnd',\n+    'onKeyDown',\n+    'style',\n+    'className'\n+  ]);\n+}\n+\n+/**\n+ * Injects pseudo classes for styles into the DOM.\n+ */\n+function updatePseudoClassStyle(pseudoStyleIds, properties, preventFocusStyleForTouchAndClick) {\n+  const styles = [{\n+    id: pseudoStyleIds.prevMonthNavStyleId,\n+    style: {\n+      ...style.hoverPrevMonthNavStyle,\n+      ...properties.hoverPrevMonthNavStyle\n+    },\n+    pseudoClass: 'hover'\n+\n+  }, {\n+    id: pseudoStyleIds.nextMonthNavStyleId,\n+    style: {\n+      ...style.hoverNextMonthNavStyle,\n+      ...properties.hoverNextMonthNavStyle\n+    },\n+    pseudoClass: 'hover'\n+  }];\n+  let focusStyle;\n+  if (preventFocusStyleForTouchAndClick) {\n+    focusStyle = { outline: 0 };\n+  } else {\n+    focusStyle = {\n+      ...style.focusWrapperStyle,\n+      ...properties.focusWrapperStyle\n+    };\n+  }\n+  styles.push({\n+    id: pseudoStyleIds.wrapperStyleId,\n+    style: focusStyle,\n+    pseudoClass: 'focus'\n+  });\n+  injectStyles(styles);\n+}\n+\n+/**\n+ * DatePicker React Component.\n+ */\n+export default class DatePicker extends Component {\n+\n+  constructor(properties) {\n+    super(properties);\n+    let dateValue;\n+\n+    if (has(properties, 'valueLink')) {\n+      dateValue = properties.valueLink.value;\n+    } else if (has(properties, 'value')) {\n+      dateValue = properties.value;\n+    } else if (has(properties, 'defaultValue')) {\n+      dateValue = properties.defaultValue;\n+    }\n+\n+    this.state = {\n+      dateValue: dateValue,\n+      month: properties.month - 1,\n+      year: properties.year,\n+      localeData: getLocaleData(properties.locale),\n+      wrapperProps: sanitizeWrapperProps(properties.wrapperProps),\n+      dayProps: sanitizeDayProps(properties.dayProps),\n+      preventFocusStyleForTouchAndClick: has(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : config.preventFocusStyleForTouchAndClick\n+    };\n+  }\n+\n+  static displayName = 'DatePicker';\n+\n+  static propTypes = {\n+    // value related props\n+    defaultValue: React.PropTypes.instanceOf(Date),\n+    value: React.PropTypes.instanceOf(Date),\n+    valueLink: React.PropTypes.shape({\n+      value: React.PropTypes.instanceOf(Date),\n+      requestChange: React.PropTypes.func.isRequired\n+    }),\n+    // component config related props\n+    locale: React.PropTypes.string,\n+    month: React.PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n+    year: React.PropTypes.number,\n+    showOtherMonthDate: React.PropTypes.bool,\n+    styleWeekend: React.PropTypes.bool,\n+    renderDay: React.PropTypes.func,\n+    tabIndex: React.PropTypes.number,\n+    'aria-label': React.PropTypes.string,\n+    disabled: React.PropTypes.bool,\n+    readOnly: React.PropTypes.bool,\n+    preventFocusStyleForTouchAndClick: React.PropTypes.bool,\n+    // event callbacks\n+    onDayFocus: React.PropTypes.func,\n+    onDayBlur: React.PropTypes.func,\n+    onDayKeyDown: React.PropTypes.func,\n+    onDayMouseDown: React.PropTypes.func,\n+    onDayMouseUp: React.PropTypes.func,\n+    onDayTouchStart: React.PropTypes.func,\n+    onDayTouchEnd: React.PropTypes.func,\n+    onUpdate: React.PropTypes.func,\n+    onMonthChange: React.PropTypes.func,\n+    // props for wrapper and day\n+    wrapperProps: React.PropTypes.object,\n+    dayProps: React.PropTypes.object,\n+    // ClassNames\n+    wrapperClassName: React.PropTypes.string,\n+    navBarClassName: React.PropTypes.string,\n+    prevMonthNavClassName: React.PropTypes.string,\n+    nextMonthNavClassName: React.PropTypes.string,\n+    monthLblClassName: React.PropTypes.string,\n+    dayLblClassName: React.PropTypes.string,\n+    dayClassName: React.PropTypes.string,\n+    // wrapper styles\n+    wrapperStyle: React.PropTypes.object,\n+    disabledWrapperStyle: React.PropTypes.object,\n+    readOnlyWrapperStyle: React.PropTypes.object,\n+    hoverWrapperStyle: React.PropTypes.object,\n+    activeWrapperStyle: React.PropTypes.object,\n+    focusWrapperStyle: React.PropTypes.object,\n+    disabledHoverWrapperStyle: React.PropTypes.object,\n+    // navbar styles\n+    navBarStyle: React.PropTypes.object,\n+    // prevMonthNav styles\n+    prevMonthNavStyle: React.PropTypes.object,\n+    hoverPrevMonthNavStyle: React.PropTypes.object,\n+    activePrevMonthNavStyle: React.PropTypes.object,\n+    // nextMonthNav styles\n+    nextMonthNavStyle: React.PropTypes.object,\n+    hoverNextMonthNavStyle: React.PropTypes.object,\n+    activeNextMonthNavStyle: React.PropTypes.object,\n+    // monthlbl styles\n+    monthLblStyle: React.PropTypes.object,\n+    // daylbl styles\n+    dayLblStyle: React.PropTypes.object,\n+    disabledDayLblStyle: React.PropTypes.object,\n+    weekendLblStyle: React.PropTypes.object,\n+    // day styles\n+    dayStyle: React.PropTypes.object,\n+    disabledDayStyle: React.PropTypes.object,\n+    readOnlyDayStyle: React.PropTypes.object,\n+    hoverDayStyle: React.PropTypes.object,\n+    activeDayStyle: React.PropTypes.object,\n+    focusDayStyle: React.PropTypes.object,\n+    disabledHoverDayStyle: React.PropTypes.object,\n+    todayStyle: React.PropTypes.object,\n+    selectedDayStyle: React.PropTypes.object,\n+    otherMonthDayStyle: React.PropTypes.object,\n+    weekendStyle: React.PropTypes.object\n+  };\n+\n+  static defaultProps = {\n+    month: CURRENT_MONTH + 1,\n+    year: CURRENT_YEAR,\n+    tabIndex: 0,\n+    'aria-label': 'datepicker',\n+    disabled: false,\n+    readOnly: false,\n+    showOtherMonthDate: true,\n+    styleWeekend: false\n+  };\n+\n+  /**\n+   * Generates the style-id based on React's unique DOM node id.\n+   * Calls function to inject the pseudo classes into the dom.\n+   */\n+  componentWillMount() {\n+    const id = this._reactInternalInstance._rootNodeID.replace(/\\./g, '-');\n+    this.pseudoStyleIds = {};\n+    this.pseudoStyleIds.wrapperStyleId = `wrapper-style-id${id}`;\n+    this.pseudoStyleIds.prevMonthNavStyleId = `prevMonthNav-style-id${id}`;\n+    this.pseudoStyleIds.nextMonthNavStyleId = `nextMonthNav-style-id${id}`;\n+    updatePseudoClassStyle(this.pseudoStyleIds, this.props, this.state.preventFocusStyleForTouchAndClick);\n+  }\n+\n+  /**\n+   * Function will update component state and styles as new props are received.\n+   */\n+  componentWillReceiveProps(properties) {\n+    const newState = {\n+      month: properties.month - 1,\n+      year: properties.year,\n+      localeData: getLocaleData(properties.locale),\n+      wrapperProps: sanitizeWrapperProps(properties.wrapperProps),\n+      dayProps: sanitizeDayProps(properties.dayProps),\n+      preventFocusStyleForTouchAndClick: has(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : config.preventFocusStyleForTouchAndClick\n+    };\n+\n+    if (has(properties, 'valueLink')) {\n+      newState.dateValue = properties.valueLink.value;\n+    } else if (has(properties, 'value')) {\n+      newState.dateValue = properties.value;\n+    }\n+\n+    this.setState(newState);\n+\n+    removeAllStyles(Object.keys(this.pseudoStyleIds));\n+    updatePseudoClassStyle(this.pseudoStyleIds, properties, this.state.preventFocusStyleForTouchAndClick);\n+  }\n+\n+  /**\n+   * Removes pseudo classes from the DOM once component gets unmounted.\n+   */\n+  componentWillUnmount() {\n+    removeAllStyles(Object.keys(this.pseudoStyleIds));\n+  }\n+\n+  /**\n+   * Callback is called when wrapper is focused, it will conditionally set isWrapperFocused.\n+   * this.state.focusedDay will be set to current date of whichever month is displayed on date-picker (if this.state.focusedDay is undefined).\n+   */\n+  _onWrapperFocus() {\n+    if (!this.props.disabled && !this.state.isWrapperActive) {\n+      const newState = {\n+        isWrapperFocused: true\n+      };\n+      if (!this.state.focusedDay) {\n+        newState.focusedDay = this.state.month + 1 + '/' + CURRENT_DATE + '/' + CURRENT_YEAR;\n+      }\n+      this.setState(newState);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when wrapper is blurred, it will reset isWrapperFocused, focusedDay.\n+   */\n+  _onWrapperBlur() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isWrapperFocused: false,\n+        focusedDay: undefined\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when wrapper receives mouseDown. Conditionally set isWrapperActive.\n+   */\n+  _onWrapperMouseDown(event) {\n+    if (!this.props.disabled && event.button === 0) {\n+      this.setState({\n+        isWrapperActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when wrapper receives mouseUp. Reset isWrapperActive.\n+   */\n+  _onWrapperMouseUp(event) {\n+    if (!this.props.disabled && event.button === 0) {\n+      this.setState({\n+        isWrapperActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when mouse enters wrapper. Conditionally set isWrapperHovered.\n+   */\n+  _onWrapperMouseOver() {\n+    this.setState({\n+      isWrapperHovered: true\n+    });\n+  }\n+\n+  /**\n+   * Callback is called when mouse leaves wrapper. Reset isWrapperHovered.\n+   */\n+  _onWrapperMouseOut() {\n+    this.setState({\n+      isWrapperHovered: false\n+    });\n+  }\n+\n+  /**\n+   * Callback is called when touch starts on wrapper. Conditionally sets isWrapperActive.\n+   */\n+  _onWrapperTouchStart(event) {\n+    if (!this.props.disabled && event.touches.length === 1) {\n+      this.setState({\n+        isWrapperActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when touch ends on wrapper. Reset isWrapperActive.\n+   */\n+  _onWrapperTouchEnd() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isWrapperActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * On keyDown on wrapper if some day is focused:\n+   * 1. arrow keys will navigate calendar\n+   * 2. enter key will set dateValue of component\n+   * 3. space key will set / unset dateValue\n+   * 4. props.onDayKeyDown will be called\n+   */\n+  _onWrapperKeyDown(event) {\n+    if (this.state.focusedDay) {\n+      if (!this.props.disabled) {\n+        if (event.key === 'ArrowDown') {\n+          event.preventDefault();\n+          this._focusOtherDay(7);\n+        } else if (event.key === 'ArrowUp') {\n+          event.preventDefault();\n+          this._focusOtherDay(-7);\n+        } else if (event.key === 'ArrowLeft') {\n+          event.preventDefault();\n+          this._focusOtherDay(this.state.localeData.isRTL ? 1 : -1);\n+        } else if (event.key === 'ArrowRight') {\n+          event.preventDefault();\n+          this._focusOtherDay(this.state.localeData.isRTL ? -1 : 1);\n+        } else if (event.key === 'Enter') {\n+          event.preventDefault();\n+          this._triggerSelectDate(new Date(this.state.focusedDay).getDate());\n+        } else if (event.key === ' ') {\n+          event.preventDefault();\n+          this._triggerToggleDate(new Date(this.state.focusedDay));\n+        }\n+      }\n+\n+      if (this.props.onDayKeyDown) {\n+        this.props.onDayKeyDown(event);\n+      }\n+    }\n+  }\n+\n+  // mouseEvent.button is supported by all browsers are are targeting: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n+  /**\n+   * Callback is called when some day receives mouseDown.\n+   * It will conditionally set this.state.activeDay, this.state.focusedDay and call props.onDayMouseDown.\n+   */\n+  _onDayMouseDown(dayKey, day, event) {\n+    if (event.button === 0 && !this.props.disabled && !this.props.readOnly) {\n+      this._triggerSelectDate(day);\n+      this.setState({\n+        activeDay: dayKey,\n+        focusedDay: dayKey\n+      });\n+    }\n+\n+    if (this.props.onDayMouseDown) {\n+      this.props.onDayMouseDown(event);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives mouseUp.\n+   * It will reset this.state.activeDay and call props.onDayMouseUp.\n+   */\n+  _onDayMouseUp(dayKey, event) {\n+    if (event.button === 0 && !this.props.disabled && !this.props.readOnly && this.state.activeDay === dayKey) {\n+      this.setState({\n+        activeDay: null\n+      });\n+    }\n+\n+    if (this.props.onDayMouseUp) {\n+      this.props.onDayMouseUp(event);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives MouseOver. It will conditionally set this.state.hoveredDay.\n+   */\n+  _onDayMouseOver(dayKey) {\n+    if (!this.props.disabled && !this.props.readOnly) {\n+      this.setState({\n+        hoveredDay: dayKey\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives MouseOut. It will reset this.state.hoveredDay.\n+   */\n+  _onDayMouseOut(dayKey, event) {\n+    if (!this.props.disabled && !this.props.readOnly && event.button === 0 && this.state.hoveredDay === dayKey) {\n+      this.setState({\n+        hoveredDay: 0\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives touchStart.\n+   * It will conditionally set this.state.activeDay and call props.onDayTouchStart.\n+   */\n+  _onDayTouchStart(dayKey, day, event) {\n+    if (!this.props.disabled && !this.props.readOnly && event.touches.length === 1) {\n+      this._triggerSelectDate(day);\n+      this.setState({\n+        activeDay: dayKey\n+      });\n+    }\n+\n+    if (this.props.onDayTouchStart) {\n+      this.props.onDayTouchStart(event);\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when some day receives touchEnd.\n+   * It will reset this.state.activeDay and call props.onDayTouchEnd.\n+   */\n+  _onDayTouchEnd(dayKey, event) {\n+    if (!this.props.disabled && !this.props.readOnly && event.touches.length === 1 && this.state.activeDay === dayKey) {\n+      this.setState({\n+        activeDay: null\n+      });\n+    }\n+\n+    if (this.props.onDayTouchEnd) {\n+      this.props.onDayTouchEnd(event);\n+    }\n+  }\n+\n+  /**\n+   * Depending on whether component is controlled or uncontrolled the function will update this.state.dateValue.\n+   * It will also call props.onUpdate.\n+   */\n+  _triggerSelectDate(date) {\n+    if (!this.props.disabled && !this.props.readOnly) {\n+      let dateValue;\n+      if (date) {\n+        dateValue = new Date(this.state.year, this.state.month, date);\n+      }\n+      if (has(this.props, 'valueLink')) {\n+        this.props.valueLink.requestChange(dateValue);\n+      } else if (!has(this.props, 'value')) {\n+        this.setState({\n+          dateValue: dateValue\n+        });\n+      }\n+\n+      if (this.props.onUpdate) {\n+        this.props.onUpdate({\n+          value: dateValue\n+        });\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Function will select / deselect date passed to it, it is used in case of 'Space' keyDown on a day.\n+   */\n+  _triggerToggleDate(date) {\n+    if (!this.props.disabled && !this.props.readOnly) {\n+      let dateValue;\n+      if (this.state.dateValue && date && this.state.dateValue.getDate() === date.getDate() && this.state.dateValue.getMonth() === date.getMonth() && this.state.dateValue.getYear() === date.getYear()) {\n+        dateValue = undefined;\n+      } else {\n+        dateValue = date.getDate();\n+      }\n+      this._triggerSelectDate(dateValue);\n+    }\n+  }\n+\n+  /**\n+   * The function is mainly used when some day is focused and Arrow keys are pressed to navigate to some other day.\n+   * days is the number of days by which focused should be moved ahead or behind.\n+   */\n+  _focusOtherDay(days) {\n+    const currentFocusedDay = new Date(this.state.focusedDay);\n+    const currentMonth = currentFocusedDay.getMonth();\n+    currentFocusedDay.setDate(currentFocusedDay.getDate() + days);\n+    const currentFocusedDayKey = (currentFocusedDay.getMonth() + 1) + '/' + currentFocusedDay.getDate() + '/' + currentFocusedDay.getFullYear();\n+    if (currentFocusedDay.getMonth() < currentMonth) {\n+      this._decreaseMonth();\n+    } else if (currentFocusedDay.getMonth() > currentMonth) {\n+      this._increaseMonth();\n+    }\n+    this.setState({\n+      focusedDay: currentFocusedDayKey\n+    });\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives mouse down.\n+   * If component is not disabled it will decrease the month and set active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavMouseDown(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this._decreaseMonth();\n+      this.setState({\n+        isPrevMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives mouse up.\n+   * It will reset active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavMouseUp(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this.setState({\n+        isPrevMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives touch start.\n+   * If component is not disabled it will decrease the month and set active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavTouchStart(event) {\n+    if (!this.props.disabled && event.touches.length === 1) {\n+      this._decreaseMonth();\n+      this.setState({\n+        isPrevMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when prevMonthNav receives touch end. It will reset active state for prevMonthNav.\n+   */\n+  _onPrevMonthNavTouchEnd() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isPrevMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives mouseDown.\n+   * If component is not disabled it will increase the month and set active state for nextMonthNav.\n+   */\n+  _onNextMonthNavMouseDown(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this._increaseMonth();\n+      this.setState({\n+        isNextMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives mouse up. It will reset active state for nextMonthNav.\n+   */\n+  _onNextMonthNavMouseUp(event) {\n+    if (event.button === 0 && !this.props.disabled) {\n+      this.setState({\n+        isNextMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives touch start.\n+   * If component is not disabled it will increase the month and set active state for nextMonthNav.\n+   */\n+  _onNextMonthNavTouchStart(event) {\n+    if (!this.props.disabled && event.touches.length === 1) {\n+      this._increaseMonth();\n+      this.setState({\n+        isNextMonthNavActive: true\n+      });\n+    }\n+  }\n+\n+  /**\n+   * Callback is called when nextMonthNav receives touch end. It will reset active state for nextMonthNav.\n+   */\n+  _onNextMonthNavTouchEnd() {\n+    if (!this.props.disabled) {\n+      this.setState({\n+        isNextMonthNavActive: false\n+      });\n+    }\n+  }\n+\n+  /**\n+   * The function will decrease current month in state. It will also call props.onMonthChange.\n+   */\n+  _decreaseMonth() {\n+    let newMonth;\n+    let newYear;\n+    if (this.state.month === 0) {\n+      newMonth = 11;\n+      newYear = this.state.year - 1;\n+    } else {\n+      newMonth = this.state.month - 1;\n+      newYear = this.state.year;\n+    }\n+    this.setState({\n+      month: newMonth,\n+      year: newYear\n+    });\n+    if (this.props.onMonthChange) {\n+      this.props.onMonthChange(newMonth + 1);\n+    }\n+  }\n+\n+  /**\n+   * The function will increase current month in state. It will also call props.onMonthChange.\n+   */\n+  _increaseMonth() {\n+    let newMonth;\n+    let newYear;\n+    if (this.state.month === 11) {\n+      newMonth = 0;\n+      newYear = this.state.year + 1;\n+    } else {\n+      newMonth = this.state.month + 1;\n+      newYear = this.state.year;\n+    }\n+    this.setState({\n+      month: newMonth,\n+      year: newYear\n+    });\n+    if (this.props.onMonthChange) {\n+      this.props.onMonthChange(newMonth + 1);\n+    }\n+  }\n+\n+  /**\n+   * Function will return jsx for rendering the nav bar for calendar.\n+   * Depending on following rules it will apply styles to prevMonthNav and nextMonthNav:\n+   * 1. If disabled hide navs\n+   * 2. If active apply activeStyles\n+   */\n+  _renderNavBar() {\n+    const navBarStyle = {\n+      ...style.navBarStyle,\n+      ...this.props.navBarStyle\n+    };\n+    const monthLblStyle = {\n+      ...style.monthLblStyle,\n+      ...this.props.monthLblStyle\n+    };\n+    let prevMonthNavStyle = {\n+      ...style.prevMonthNavStyle,\n+      ...this.props.prevMonthNavStyle\n+    };\n+    let nextMonthNavStyle = {\n+      ...style.nextMonthNavStyle,\n+      ...this.props.nextMonthNavStyle\n+    };\n+    if (this.state.isPrevMonthNavActive) {\n+      prevMonthNavStyle = {\n+        ...prevMonthNavStyle,\n+        ...style.activePrevMonthNavStyle,\n+        ...this.props.activePrevMonthNavStyle\n+      };\n+    } else if (this.state.isNextMonthNavActive) {\n+      nextMonthNavStyle = {\n+        ...nextMonthNavStyle,\n+        ...style.activeNextMonthNavStyle,\n+        ...this.props.activeNextMonthNavStyle\n+      };\n+    }\n+\n+    return (\n+      <div style={ navBarStyle }\n+           className={ this.props.navBarClassName }>\n+           { !this.props.disabled ? <span onMouseDown={ this._onPrevMonthNavMouseDown.bind(this) }\n+                onMouseUp={ this._onPrevMonthNavMouseUp.bind(this) }\n+                onTouchStart={ this._onPrevMonthNavTouchStart.bind(this) }\n+                onTouchEnd={ this._onPrevMonthNavTouchEnd.bind(this) }\n+                style= { prevMonthNavStyle }\n+                className={ unionClassNames(this.props.prevMonthNavClassName, this.pseudoStyleIds.prevMonthNavStyleId) }></span> : void 0}\n+          <span style={ monthLblStyle }\n+                className={ this.props.monthLblClassName }\n+                role=\"heading\"\n+                id={ this.state.month + '-' + this.state.year }>",
        "path": "src/components/DatePicker.js",
        "position": null,
        "original_position": 720,
        "commit_id": "8fd9c49ff767a15558cd2caa86e05302265782cd",
        "original_commit_id": "e8ac40f29ac80ad8d0075131f706c74d6fc9f824",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ahh, good to know!\n",
        "created_at": "2015-10-15T15:20:06Z",
        "updated_at": "2015-10-15T15:36:47Z",
        "html_url": "https://github.com/nikgraf/belle/pull/197#discussion_r42137782",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/197",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/42137782"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/197#discussion_r42137782"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/197"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43528755",
        "pull_request_review_id": null,
        "id": 43528755,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4NzU1",
        "diff_hunk": "@@ -10,41 +10,52 @@ import TestUtils from 'react-addons-test-utils';\n const Option = require('../components/Option');\n \n describe('Option', () => {\n-  it('should initialise _isHovered & _isDisplayedAsSelected during construction', () => {\n-    const option = TestUtils.renderIntoDocument(\n-      <Option value=\"rome\">Rome</Option>\n+  let shallowRenderer;\n+\n+  beforeEach(() => {\n+    shallowRenderer = TestUtils.createRenderer();\n+  });\n+\n+  it('should initialise _isDisplayedAsSelected during construction', () => {\n+    shallowRenderer.render(\n+      <Option value=\"rome\">Rome</Option>,\n+      { isDisabled: false, }\n     );\n+    const option = shallowRenderer.getRenderOutput();\n \n-    expect(option._isHovered).toBeFalsy();\n     expect(option._isDisplayedAsSelected).toBeFalsy();\n   });\n \n   it('should show the select style in case _isDisplayedAsSelected is true', () => {\n-    const option = TestUtils.renderIntoDocument(\n-      <Option value=\"rome\" _isDisplayedAsSelected>Rome</Option>\n+    shallowRenderer.render(\n+      <Option value=\"rome\" _isDisplayedAsSelected>Rome</Option>,\n+      { isDisabled: false, }\n     );\n+    const option = shallowRenderer.getRenderOutput();\n \n-    const div = TestUtils.findRenderedDOMComponentWithTag(option, 'div');\n-    expect(div.hasAttribute('style')).toBeTruthy();\n-    expect(div.getAttribute('style').indexOf('padding:0') > -1).toBeTruthy();\n+    expect(option.props.style.padding).toBe(0);\n   });\n \n   it('should show the hover style in case _isHovered is true', () => {\n-    const option = TestUtils.renderIntoDocument(\n-      <Option value=\"rome\" _isHovered>Rome</Option>\n+    shallowRenderer.render(\n+      <Option value=\"rome\">Rome</Option>,\n+      {\n+        isDisabled: false,\n+        isHoveredValue: 'rome',\n+      }\n     );\n+    const option = shallowRenderer.getRenderOutput();\n \n-    const div = TestUtils.findRenderedDOMComponentWithTag(option, 'div');\n-    expect(div.hasAttribute('style')).toBeTruthy();\n-    expect(div.getAttribute('style').indexOf('background:#F5F5F5') > -1).toBeTruthy();\n+    expect(option.props.style.background).toBe('#F5F5F5');\n   });\n \n   it('should be able to provide custom properties', () => {\n-    const option = TestUtils.renderIntoDocument(\n-      <Option value=\"rome\" data-custom=\"example\">Rome</Option>\n+    shallowRenderer.render(\n+      <Option value=\"rome\" data-custom=\"example\">Rome</Option>,\n+      { isDisabled: false, }\n     );\n+    const option = shallowRenderer.getRenderOutput();\n \n-    const div = TestUtils.findRenderedDOMComponentWithTag(option, 'div');\n-    expect(div.getAttribute('data-custom')).toBe('example');\n+    expect(option.props['data-custom']).toBe('example');\n   });",
        "path": "src/__tests__/Option-test.js",
        "position": 69,
        "original_position": 69,
        "commit_id": "4b01b4a81ee3518f1dbcaea797b79878124dc120",
        "original_commit_id": "4b01b4a81ee3518f1dbcaea797b79878124dc120",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hey @nikgraf ,\nAny specific advantage of using shallow rendering here ?\n",
        "created_at": "2015-10-30T17:24:16Z",
        "updated_at": "2015-10-30T17:24:16Z",
        "html_url": "https://github.com/nikgraf/belle/pull/225#discussion_r43528755",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/225",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43528755"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/225#discussion_r43528755"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43529086",
        "pull_request_review_id": null,
        "id": 43529086,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI5MDg2",
        "diff_hunk": "@@ -729,7 +745,7 @@ export default class ComboBox extends Component {\n                     onMouseLeave={ ::this._onMouseLeaveAtOption }\n                     onMouseDown={ (event) => event.preventDefault() }\n                     role=\"option\">\n-                  { option }\n+                  { entry }\n                 </li>",
        "path": "src/components/ComboBox.js",
        "position": 53,
        "original_position": 53,
        "commit_id": "4b01b4a81ee3518f1dbcaea797b79878124dc120",
        "original_commit_id": "4b01b4a81ee3518f1dbcaea797b79878124dc120",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1:\n",
        "created_at": "2015-10-30T17:27:03Z",
        "updated_at": "2015-10-30T17:27:03Z",
        "html_url": "https://github.com/nikgraf/belle/pull/225#discussion_r43529086",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/225",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43529086"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/225#discussion_r43529086"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43529290",
        "pull_request_review_id": null,
        "id": 43529290,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI5Mjkw",
        "diff_hunk": "@@ -53,10 +49,17 @@ export default class Option extends Component {\n     ]).isRequired,\n   };\n \n+  static contextTypes = {\n+    isDisabled: PropTypes.bool.isRequired,\n+    isHoveredValue: PropTypes.oneOfType([\n+      PropTypes.bool,\n+      PropTypes.string,\n+      PropTypes.number,\n+    ]),\n+  };\n+\n   static defaultProps = {\n-    _isHovered: false,\n     _isDisplayedAsSelected: false,\n-    _isDisabled: false,\n   };\n ",
        "path": "src/components/Option.js",
        "position": 37,
        "original_position": 37,
        "commit_id": "4b01b4a81ee3518f1dbcaea797b79878124dc120",
        "original_commit_id": "4b01b4a81ee3518f1dbcaea797b79878124dc120",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about using just 'hovered' or 'disabled' like html and getting rid of prefix 'is'.\n",
        "created_at": "2015-10-30T17:28:46Z",
        "updated_at": "2015-10-30T17:28:46Z",
        "html_url": "https://github.com/nikgraf/belle/pull/225#discussion_r43529290",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/225",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43529290"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/225#discussion_r43529290"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43533794",
        "pull_request_review_id": null,
        "id": 43533794,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMzNzk0",
        "diff_hunk": "@@ -10,41 +10,52 @@ import TestUtils from 'react-addons-test-utils';\n const Option = require('../components/Option');\n \n describe('Option', () => {\n-  it('should initialise _isHovered & _isDisplayedAsSelected during construction', () => {\n-    const option = TestUtils.renderIntoDocument(\n-      <Option value=\"rome\">Rome</Option>\n+  let shallowRenderer;\n+\n+  beforeEach(() => {\n+    shallowRenderer = TestUtils.createRenderer();\n+  });\n+\n+  it('should initialise _isDisplayedAsSelected during construction', () => {\n+    shallowRenderer.render(\n+      <Option value=\"rome\">Rome</Option>,\n+      { isDisabled: false, }\n     );\n+    const option = shallowRenderer.getRenderOutput();\n \n-    expect(option._isHovered).toBeFalsy();\n     expect(option._isDisplayedAsSelected).toBeFalsy();\n   });\n \n   it('should show the select style in case _isDisplayedAsSelected is true', () => {\n-    const option = TestUtils.renderIntoDocument(\n-      <Option value=\"rome\" _isDisplayedAsSelected>Rome</Option>\n+    shallowRenderer.render(\n+      <Option value=\"rome\" _isDisplayedAsSelected>Rome</Option>,\n+      { isDisabled: false, }\n     );\n+    const option = shallowRenderer.getRenderOutput();\n \n-    const div = TestUtils.findRenderedDOMComponentWithTag(option, 'div');\n-    expect(div.hasAttribute('style')).toBeTruthy();\n-    expect(div.getAttribute('style').indexOf('padding:0') > -1).toBeTruthy();\n+    expect(option.props.style.padding).toBe(0);\n   });\n \n   it('should show the hover style in case _isHovered is true', () => {\n-    const option = TestUtils.renderIntoDocument(\n-      <Option value=\"rome\" _isHovered>Rome</Option>\n+    shallowRenderer.render(\n+      <Option value=\"rome\">Rome</Option>,\n+      {\n+        isDisabled: false,\n+        isHoveredValue: 'rome',\n+      }\n     );\n+    const option = shallowRenderer.getRenderOutput();\n \n-    const div = TestUtils.findRenderedDOMComponentWithTag(option, 'div');\n-    expect(div.hasAttribute('style')).toBeTruthy();\n-    expect(div.getAttribute('style').indexOf('background:#F5F5F5') > -1).toBeTruthy();\n+    expect(option.props.style.background).toBe('#F5F5F5');\n   });\n \n   it('should be able to provide custom properties', () => {\n-    const option = TestUtils.renderIntoDocument(\n-      <Option value=\"rome\" data-custom=\"example\">Rome</Option>\n+    shallowRenderer.render(\n+      <Option value=\"rome\" data-custom=\"example\">Rome</Option>,\n+      { isDisabled: false, }\n     );\n+    const option = shallowRenderer.getRenderOutput();\n \n-    const div = TestUtils.findRenderedDOMComponentWithTag(option, 'div');\n-    expect(div.getAttribute('data-custom')).toBe('example');\n+    expect(option.props['data-custom']).toBe('example');\n   });",
        "path": "src/__tests__/Option-test.js",
        "position": 69,
        "original_position": 69,
        "commit_id": "4b01b4a81ee3518f1dbcaea797b79878124dc120",
        "original_commit_id": "4b01b4a81ee3518f1dbcaea797b79878124dc120",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We can inject context.\n",
        "created_at": "2015-10-30T18:06:04Z",
        "updated_at": "2015-10-30T18:06:04Z",
        "html_url": "https://github.com/nikgraf/belle/pull/225#discussion_r43533794",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/225",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43533794"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/225#discussion_r43533794"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43533908",
        "pull_request_review_id": null,
        "id": 43533908,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMzOTA4",
        "diff_hunk": "@@ -53,10 +49,17 @@ export default class Option extends Component {\n     ]).isRequired,\n   };\n \n+  static contextTypes = {\n+    isDisabled: PropTypes.bool.isRequired,\n+    isHoveredValue: PropTypes.oneOfType([\n+      PropTypes.bool,\n+      PropTypes.string,\n+      PropTypes.number,\n+    ]),\n+  };\n+\n   static defaultProps = {\n-    _isHovered: false,\n     _isDisplayedAsSelected: false,\n-    _isDisabled: false,\n   };\n ",
        "path": "src/components/Option.js",
        "position": 37,
        "original_position": 37,
        "commit_id": "4b01b4a81ee3518f1dbcaea797b79878124dc120",
        "original_commit_id": "4b01b4a81ee3518f1dbcaea797b79878124dc120",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`disabled` sounds good - wanna do it?\n",
        "created_at": "2015-10-30T18:07:02Z",
        "updated_at": "2015-10-30T18:07:02Z",
        "html_url": "https://github.com/nikgraf/belle/pull/225#discussion_r43533908",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/225",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43533908"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/225#discussion_r43533908"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43580241",
        "pull_request_review_id": null,
        "id": 43580241,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgwMjQx",
        "diff_hunk": "@@ -31,9 +39,32 @@ function sanitizeWrapperProps(properties) {\n /**\n  * Returns an object with properties that are relevant for day span.\n  */\n+function sanitizeEmptyDayProps(properties) {\n+  return omit(properties, [\n+    'key',\n+    'ref',\n+    'style',\n+  ]);\n+}\n+\n+/**\n+ * Returns an object with properties that are relevant for day span.\n+ */\n+function sanitizeDisabledDayProps(properties) {\n+  return omit(properties, [",
        "path": "src/components/DatePicker.js",
        "position": 45,
        "original_position": 45,
        "commit_id": "beb78ecb04ff0903132a0dac096acadf7c4ded0b",
        "original_commit_id": "4a02d797df1497da26be568b959d86edea56f213",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "disabledDay sounds confusing, it should rather be non-selectable day\n",
        "created_at": "2015-11-01T09:51:01Z",
        "updated_at": "2015-11-01T09:51:01Z",
        "html_url": "https://github.com/nikgraf/belle/pull/226#discussion_r43580241",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/226",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/43580241"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/226#discussion_r43580241"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/226"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/46792255",
        "pull_request_review_id": null,
        "id": 46792255,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyMjU1",
        "diff_hunk": "@@ -765,6 +768,13 @@ export default class Select extends Component {\n   }\n \n   /**\n+   * Returns a in the DOM unique ID based on React's internal id.\n+   */\n+  _getId() {\n+    return this._reactInternalInstance._rootNodeID.replace(/[\\.\\:\\$\\/\\=]/g, '-');\n+  }\n+",
        "path": "src/components/Select.js",
        "position": 54,
        "original_position": 54,
        "commit_id": "4f294c238ad13249b12e39fb56592137e1f19329",
        "original_commit_id": "4f294c238ad13249b12e39fb56592137e1f19329",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2015-12-07T07:23:26Z",
        "updated_at": "2015-12-07T07:23:26Z",
        "html_url": "https://github.com/nikgraf/belle/pull/249#discussion_r46792255",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/249",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/46792255"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/249#discussion_r46792255"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/249"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52864708",
        "pull_request_review_id": null,
        "id": 52864708,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY0NzA4",
        "diff_hunk": "@@ -283,7 +283,7 @@ describe('DatePicker', () => {\n     const day = TestUtils.scryRenderedDOMComponentsWithClass(datePicker, 'day_test')[8];\n     TestUtils.Simulate.focus(day);\n     TestUtils.Simulate.mouseDown(day, { button: 0 });\n-    expect(datePicker.state.selectedDate).toBe(compSelectedDate);\n+    expect(datePicker.state.selectedDate.getTime()).toBe(compSelectedDate.getTime());\n   });",
        "path": "src/__tests__/DatePicker-test.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "81dc98fcb4333b7eb19815925917c5b91b45b546",
        "original_commit_id": "81dc98fcb4333b7eb19815925917c5b91b45b546",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why prefer time over date ?\n",
        "created_at": "2016-02-15T06:47:30Z",
        "updated_at": "2016-02-15T06:47:30Z",
        "html_url": "https://github.com/nikgraf/belle/pull/264#discussion_r52864708",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/264",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52864708"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/264#discussion_r52864708"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/264"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52864749",
        "pull_request_review_id": null,
        "id": 52864749,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY0NzQ5",
        "diff_hunk": "@@ -59,10 +59,42 @@ export const getLocaleData = (locale) => {\n   return localeResult;\n };\n \n+/**\n+ * Returns the string representation for a provided year, month & day.\n+ *\n+ * @param year {number} - any year\n+ * @param month {number} - can be between 1 and 12\n+ * @param day {number} - can be between 1 and 31 depending on the month\n+ * @returns {string}: a string representing the date in the format yyyy-mm-dd\n+ */\n export const getDateKey = (year, month, day) => `${year}-${month}-${day}`;\n \n+/**\n+ * Returns the date for a date string representation.\n+ *\n+ * @param year {number} - any year\n+ * @param month {number} - can be between 1 and 12\n+ * @param day {number} - can be between 1 and 31 depending on the month\n+ * @returns {date} - the parse date\n+ */\n+export const getDateForDateKey = (dateKey) => {\n+  const [year, month, day] = dateKey.split('-');\n+  return new Date(parseInt(year, 10), parseInt(month, 10) - 1, parseInt(day, 10));\n+};\n+",
        "path": "src/utils/date-helpers.js",
        "position": 26,
        "original_position": 26,
        "commit_id": "81dc98fcb4333b7eb19815925917c5b91b45b546",
        "original_commit_id": "81dc98fcb4333b7eb19815925917c5b91b45b546",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hey @nikgraf , why add function for something date constructor already does for you.\n",
        "created_at": "2016-02-15T06:48:05Z",
        "updated_at": "2016-02-15T06:48:05Z",
        "html_url": "https://github.com/nikgraf/belle/pull/264#discussion_r52864749",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/264",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52864749"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/264#discussion_r52864749"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/264"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52864988",
        "pull_request_review_id": null,
        "id": 52864988,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY0OTg4",
        "diff_hunk": "@@ -59,10 +59,42 @@ export const getLocaleData = (locale) => {\n   return localeResult;\n };\n \n+/**\n+ * Returns the string representation for a provided year, month & day.\n+ *\n+ * @param year {number} - any year\n+ * @param month {number} - can be between 1 and 12\n+ * @param day {number} - can be between 1 and 31 depending on the month\n+ * @returns {string}: a string representing the date in the format yyyy-mm-dd\n+ */\n export const getDateKey = (year, month, day) => `${year}-${month}-${day}`;\n \n+/**\n+ * Returns the date for a date string representation.\n+ *\n+ * @param year {number} - any year\n+ * @param month {number} - can be between 1 and 12\n+ * @param day {number} - can be between 1 and 31 depending on the month\n+ * @returns {date} - the parse date\n+ */\n+export const getDateForDateKey = (dateKey) => {\n+  const [year, month, day] = dateKey.split('-');\n+  return new Date(parseInt(year, 10), parseInt(month, 10) - 1, parseInt(day, 10));\n+};\n+",
        "path": "src/utils/date-helpers.js",
        "position": 26,
        "original_position": 26,
        "commit_id": "81dc98fcb4333b7eb19815925917c5b91b45b546",
        "original_commit_id": "81dc98fcb4333b7eb19815925917c5b91b45b546",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It does not work in Firefox without it\n",
        "created_at": "2016-02-15T06:52:42Z",
        "updated_at": "2016-02-15T06:52:42Z",
        "html_url": "https://github.com/nikgraf/belle/pull/264#discussion_r52864988",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/264",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52864988"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/264#discussion_r52864988"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/264"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52864974",
        "pull_request_review_id": null,
        "id": 52864974,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY0OTc0",
        "diff_hunk": "@@ -283,7 +283,7 @@ describe('DatePicker', () => {\n     const day = TestUtils.scryRenderedDOMComponentsWithClass(datePicker, 'day_test')[8];\n     TestUtils.Simulate.focus(day);\n     TestUtils.Simulate.mouseDown(day, { button: 0 });\n-    expect(datePicker.state.selectedDate).toBe(compSelectedDate);\n+    expect(datePicker.state.selectedDate.getTime()).toBe(compSelectedDate.getTime());\n   });",
        "path": "src/__tests__/DatePicker-test.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "81dc98fcb4333b7eb19815925917c5b91b45b546",
        "original_commit_id": "81dc98fcb4333b7eb19815925917c5b91b45b546",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "because comparing dates actually does not work. toBe is the same as ===\n\ntry `new Date() === new Date()` in your Chrome console\n",
        "created_at": "2016-02-15T06:52:18Z",
        "updated_at": "2016-02-15T06:55:38Z",
        "html_url": "https://github.com/nikgraf/belle/pull/264#discussion_r52864974",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/264",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52864974"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/264#discussion_r52864974"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/264"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52866671",
        "pull_request_review_id": null,
        "id": 52866671,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY2Njcx",
        "diff_hunk": "@@ -283,7 +283,7 @@ describe('DatePicker', () => {\n     const day = TestUtils.scryRenderedDOMComponentsWithClass(datePicker, 'day_test')[8];\n     TestUtils.Simulate.focus(day);\n     TestUtils.Simulate.mouseDown(day, { button: 0 });\n-    expect(datePicker.state.selectedDate).toBe(compSelectedDate);\n+    expect(datePicker.state.selectedDate.getTime()).toBe(compSelectedDate.getTime());\n   });",
        "path": "src/__tests__/DatePicker-test.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "81dc98fcb4333b7eb19815925917c5b91b45b546",
        "original_commit_id": "81dc98fcb4333b7eb19815925917c5b91b45b546",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good point :smile: \n",
        "created_at": "2016-02-15T07:27:24Z",
        "updated_at": "2016-02-15T07:27:24Z",
        "html_url": "https://github.com/nikgraf/belle/pull/264#discussion_r52866671",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/264",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52866671"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/264#discussion_r52866671"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/264"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52890649",
        "pull_request_review_id": null,
        "id": 52890649,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkwNjQ5",
        "diff_hunk": "@@ -1206,37 +1211,36 @@ export default class DatePicker extends Component {\n \n     if (isDisabledDay) {\n       return (\n-        <span\n+        <DisabledDay\n           key={ `day-${index}` }\n-          ref={ dateKey }\n           style={ dayStyle }\n-          onMouseEnter={ (event) => this._onDayMouseEnter(dateKey, event) }\n-          onMouseLeave={ (event) => this._onDayMouseLeave(dateKey, event) }\n-          {...this.disabledDayProps}\n+          dateKey={ dateKey }\n+          onDayMouseEnter={ this._onDayMouseEnter }\n+          onDayMouseLeave={ this._onDayMouseLeave }\n+          disabledDayProps={ this.disabledDayProps }\n         >\n           { renderedDay }\n-        </span>\n+        </DisabledDay>\n       );\n     }\n ",
        "path": "src/components/DatePicker.js",
        "position": 98,
        "original_position": 98,
        "commit_id": "898c94683983bc7804e48072d2a90fe8e6cdb7fb",
        "original_commit_id": "6c538cf98d272cac48c256f76dfe4c676a7071e7",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@nikgraf I do not like the idea of extracting a component which just handles event callbacks to get rid of bindings. A component should be a more logical entity and should be able to handle its styling logic and stuff like making dayKey out of date.\n\nIf we can do this kind of component it will help us in not just getting rid of bindings but also simplify these complex components.\n",
        "created_at": "2016-02-15T11:58:55Z",
        "updated_at": "2016-02-15T17:27:05Z",
        "html_url": "https://github.com/nikgraf/belle/pull/265#discussion_r52890649",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/265",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52890649"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/265#discussion_r52890649"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/265"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52913646",
        "pull_request_review_id": null,
        "id": 52913646,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTEzNjQ2",
        "diff_hunk": "@@ -1206,37 +1211,36 @@ export default class DatePicker extends Component {\n \n     if (isDisabledDay) {\n       return (\n-        <span\n+        <DisabledDay\n           key={ `day-${index}` }\n-          ref={ dateKey }\n           style={ dayStyle }\n-          onMouseEnter={ (event) => this._onDayMouseEnter(dateKey, event) }\n-          onMouseLeave={ (event) => this._onDayMouseLeave(dateKey, event) }\n-          {...this.disabledDayProps}\n+          dateKey={ dateKey }\n+          onDayMouseEnter={ this._onDayMouseEnter }\n+          onDayMouseLeave={ this._onDayMouseLeave }\n+          disabledDayProps={ this.disabledDayProps }\n         >\n           { renderedDay }\n-        </span>\n+        </DisabledDay>\n       );\n     }\n ",
        "path": "src/components/DatePicker.js",
        "position": 98,
        "original_position": 98,
        "commit_id": "898c94683983bc7804e48072d2a90fe8e6cdb7fb",
        "original_commit_id": "6c538cf98d272cac48c256f76dfe4c676a7071e7",
        "user": {
            "login": "nikgraf",
            "id": 223045,
            "node_id": "MDQ6VXNlcjIyMzA0NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/223045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikgraf",
            "html_url": "https://github.com/nikgraf",
            "followers_url": "https://api.github.com/users/nikgraf/followers",
            "following_url": "https://api.github.com/users/nikgraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikgraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikgraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikgraf/subscriptions",
            "organizations_url": "https://api.github.com/users/nikgraf/orgs",
            "repos_url": "https://api.github.com/users/nikgraf/repos",
            "events_url": "https://api.github.com/users/nikgraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikgraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm open to a PR to simplify the whole structure :smile: \n\nI'm not a big fan of having these components just for event handling, but it's the best option I'm aware of to avoid performance issue and therefor more important than not doing it at all.\n",
        "created_at": "2016-02-15T15:48:40Z",
        "updated_at": "2016-02-15T17:27:05Z",
        "html_url": "https://github.com/nikgraf/belle/pull/265#discussion_r52913646",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/265",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/52913646"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/265#discussion_r52913646"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/265"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/54087650",
        "pull_request_review_id": null,
        "id": 54087650,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NjUw",
        "diff_hunk": "@@ -1,5 +1,6 @@\n var path = require('path'); // eslint-disable-line no-var",
        "path": "docs/webpack.config.production.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "87eb49ee730523ad2e4649ba465abacb7e9447a5",
        "original_commit_id": "2467513316b1eea8a7bfd98b6d20aae2bc78d512",
        "user": {
            "login": "jpuri",
            "id": 2182307,
            "node_id": "MDQ6VXNlcjIxODIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2182307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpuri",
            "html_url": "https://github.com/jpuri",
            "followers_url": "https://api.github.com/users/jpuri/followers",
            "following_url": "https://api.github.com/users/jpuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpuri/subscriptions",
            "organizations_url": "https://api.github.com/users/jpuri/orgs",
            "repos_url": "https://api.github.com/users/jpuri/repos",
            "events_url": "https://api.github.com/users/jpuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think better add this file to eslint-ignore\n",
        "created_at": "2016-02-25T12:26:33Z",
        "updated_at": "2016-03-29T01:35:57Z",
        "html_url": "https://github.com/nikgraf/belle/pull/268#discussion_r54087650",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/268",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/54087650"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/268#discussion_r54087650"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/268"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/nikgraf/belle/pulls/comments/97208409",
        "pull_request_review_id": 17816114,
        "id": 97208409,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3MjA4NDA5",
        "diff_hunk": "@@ -55,7 +55,6 @@ export default class Day extends Component {\n   render() {\n     return (\n       <span\n-        style={ this.props.style }",
        "path": "src/components/Day.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "f7b892ec102661e62637fa1ac8b15126aa2530c4",
        "original_commit_id": "770b573f00201900795a923921d946ba7beddd4b",
        "user": {
            "login": "manpenaloza",
            "id": 4241744,
            "node_id": "MDQ6VXNlcjQyNDE3NDQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4241744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manpenaloza",
            "html_url": "https://github.com/manpenaloza",
            "followers_url": "https://api.github.com/users/manpenaloza/followers",
            "following_url": "https://api.github.com/users/manpenaloza/following{/other_user}",
            "gists_url": "https://api.github.com/users/manpenaloza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manpenaloza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manpenaloza/subscriptions",
            "organizations_url": "https://api.github.com/users/manpenaloza/orgs",
            "repos_url": "https://api.github.com/users/manpenaloza/repos",
            "events_url": "https://api.github.com/users/manpenaloza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manpenaloza/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "see line 66 to find the second declaration of this property",
        "created_at": "2017-01-21T22:42:39Z",
        "updated_at": "2017-01-22T19:46:37Z",
        "html_url": "https://github.com/nikgraf/belle/pull/335#discussion_r97208409",
        "pull_request_url": "https://api.github.com/repos/nikgraf/belle/pulls/335",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/comments/97208409"
            },
            "html": {
                "href": "https://github.com/nikgraf/belle/pull/335#discussion_r97208409"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/nikgraf/belle/pulls/335"
            }
        }
    }
]