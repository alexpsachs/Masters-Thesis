[
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21787069",
        "pull_request_review_id": null,
        "id": 21787069,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzg3MDY5",
        "diff_hunk": "@@ -84,6 +84,13 @@ func (s *Server) Broadcast(msg string, except *Client) {\n \t\tif except != nil && client == except {\n \t\t\tcontinue\n \t\t}\n+\t\t/* Add an ascii BEL to ding clients when they're mentioned */\n+\t\tif strings.Contains(msg, client.Name) {\n+\t\t\tclient.Msg <- msg + \"\\007\"",
        "path": "server.go",
        "position": null,
        "original_position": 6,
        "commit_id": "ee23c1617ad96cbed4c9f48d0c98dbf640810e0e",
        "original_commit_id": "e8ce9bfcff142a9a13d375222847227fefe8714b",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Probably better to just append it to `msg` and let it push below, rather than the else.\n",
        "created_at": "2014-12-13T09:06:40Z",
        "updated_at": "2014-12-13T10:25:57Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/4#discussion_r21787069",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/4",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21787069"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/4#discussion_r21787069"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/4"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21787093",
        "pull_request_review_id": null,
        "id": 21787093,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzg3MDkz",
        "diff_hunk": "@@ -84,6 +84,13 @@ func (s *Server) Broadcast(msg string, except *Client) {\n \t\tif except != nil && client == except {\n \t\t\tcontinue\n \t\t}\n+\t\t/* Add an ascii BEL to ding clients when they're mentioned */\n+\t\tif strings.Contains(msg, client.Name) {\n+\t\t\tclient.Msg <- msg + \"\\007\"\n+\t\t} else {\n+\t\t\tclient.Msg <- msg\n+\t\t}\n+\n \t\tclient.Msg <- msg",
        "path": "server.go",
        "position": null,
        "original_position": 11,
        "commit_id": "ee23c1617ad96cbed4c9f48d0c98dbf640810e0e",
        "original_commit_id": "e8ce9bfcff142a9a13d375222847227fefe8714b",
        "user": {
            "login": "voldyman",
            "id": 2378083,
            "node_id": "MDQ6VXNlcjIzNzgwODM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2378083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/voldyman",
            "html_url": "https://github.com/voldyman",
            "followers_url": "https://api.github.com/users/voldyman/followers",
            "following_url": "https://api.github.com/users/voldyman/following{/other_user}",
            "gists_url": "https://api.github.com/users/voldyman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/voldyman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/voldyman/subscriptions",
            "organizations_url": "https://api.github.com/users/voldyman/orgs",
            "repos_url": "https://api.github.com/users/voldyman/repos",
            "events_url": "https://api.github.com/users/voldyman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/voldyman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this sends the msg twice if a nick is mentioned\n",
        "created_at": "2014-12-13T09:12:28Z",
        "updated_at": "2014-12-13T10:25:57Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/4#discussion_r21787093",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/4",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21787093"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/4#discussion_r21787093"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/4"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21787188",
        "pull_request_review_id": null,
        "id": 21787188,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzg3MTg4",
        "diff_hunk": "@@ -84,7 +84,12 @@ func (s *Server) Broadcast(msg string, except *Client) {\n \t\tif except != nil && client == except {\n \t\t\tcontinue\n \t\t}\n-\t\tclient.Msg <- msg\n+\t\t/* Add an ascii BEL to ding clients when they're mentioned */\n+\t\tif strings.Contains(msg, client.Name) {",
        "path": "server.go",
        "position": 15,
        "original_position": 15,
        "commit_id": "ee23c1617ad96cbed4c9f48d0c98dbf640810e0e",
        "original_commit_id": "46d3d7575a79fca0e3e1256a6b9233684c5b9f55",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about...\n\n``` go\n        if strings.Contains(msg, client.Name) {\n            msg += \"\\007\"\n        }\n        client.Msg <- msg\n```\n",
        "created_at": "2014-12-13T09:31:01Z",
        "updated_at": "2014-12-13T10:25:57Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/4#discussion_r21787188",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/4",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21787188"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/4#discussion_r21787188"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/4"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21787349",
        "pull_request_review_id": null,
        "id": 21787349,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzg3MzQ5",
        "diff_hunk": "@@ -84,7 +84,12 @@ func (s *Server) Broadcast(msg string, except *Client) {\n \t\tif except != nil && client == except {\n \t\t\tcontinue\n \t\t}\n-\t\tclient.Msg <- msg\n+\t\t/* Add an ascii BEL to ding clients when they're mentioned */\n+\t\tif strings.Contains(msg, client.Name) {",
        "path": "server.go",
        "position": 15,
        "original_position": 15,
        "commit_id": "ee23c1617ad96cbed4c9f48d0c98dbf640810e0e",
        "original_commit_id": "46d3d7575a79fca0e3e1256a6b9233684c5b9f55",
        "user": {
            "login": "IQAndreas",
            "id": 449027,
            "node_id": "MDQ6VXNlcjQ0OTAyNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/449027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IQAndreas",
            "html_url": "https://github.com/IQAndreas",
            "followers_url": "https://api.github.com/users/IQAndreas/followers",
            "following_url": "https://api.github.com/users/IQAndreas/following{/other_user}",
            "gists_url": "https://api.github.com/users/IQAndreas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IQAndreas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IQAndreas/subscriptions",
            "organizations_url": "https://api.github.com/users/IQAndreas/orgs",
            "repos_url": "https://api.github.com/users/IQAndreas/repos",
            "events_url": "https://api.github.com/users/IQAndreas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IQAndreas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Have you tested if that actually makes a sound on the recipient machine?\n",
        "created_at": "2014-12-13T10:12:03Z",
        "updated_at": "2014-12-13T10:25:57Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/4#discussion_r21787349",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/4",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21787349"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/4#discussion_r21787349"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/4"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792314",
        "pull_request_review_id": null,
        "id": 21792314,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyMzE0",
        "diff_hunk": "@@ -110,8 +112,26 @@ func (s *Server) Privmsg(nick, message string, sender *Client) error {\n \treturn nil\n }\n \n+func (s *Server) SetMotd(client *Client, motd string) {\n+\ts.lock.Lock()\n+\ts.motd = motd\n+\ts.lock.Unlock()\n+}\n+\n+func (s *Server) MotdUnicast(client *Client) {",
        "path": "server.go",
        "position": 26,
        "original_position": 26,
        "commit_id": "967106780cd7fabf35c62f71496e851cfd1f763e",
        "original_commit_id": "967106780cd7fabf35c62f71496e851cfd1f763e",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How do you feel about just inlining MotdUnicast/MotdBroadcast for now? (I think that's what we've been doing thus far)\n",
        "created_at": "2014-12-13T23:27:14Z",
        "updated_at": "2014-12-13T23:27:14Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/20#discussion_r21792314",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/20",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792314"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/20#discussion_r21792314"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/20"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792287",
        "pull_request_review_id": null,
        "id": 21792287,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyMjg3",
        "diff_hunk": "@@ -324,7 +332,7 @@ func (c *Client) handleShell(channel ssh.Channel) {\n \t\t\tc.Msg <- fmt.Sprintf(\"-> Rate limiting in effect.\")\n \t\t\tcontinue\n \t\t}\n-\t\tif c.IsSilenced() || len(msg) > 1000 || len(msg) == 0 {\n+\t\tif c.IsSilenced() || len(msg) > 1000 || len(line) < 1 {",
        "path": "client.go",
        "position": 5,
        "original_position": 20,
        "commit_id": "13043e9a6093115aba7f1c295bf577e58e4ba873",
        "original_commit_id": "f57de43d73dcfe9b62a49330c7b64f94a0f5f4f1",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why?\n",
        "created_at": "2014-12-13T23:21:49Z",
        "updated_at": "2014-12-13T23:36:45Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792287",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/18",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792287"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792287"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792288",
        "pull_request_review_id": null,
        "id": 21792288,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyMjg4",
        "diff_hunk": "@@ -164,6 +164,14 @@ func (c *Client) handleShell(channel ssh.Channel) {\n \t\tparts := strings.SplitN(line, \" \", 3)\n \t\tisCmd := strings.HasPrefix(parts[0], \"/\")\n \n+\t\t// Allow for messages starting with / that aren't commands to be escaped",
        "path": "client.go",
        "position": null,
        "original_position": 4,
        "commit_id": "13043e9a6093115aba7f1c295bf577e58e4ba873",
        "original_commit_id": "f57de43d73dcfe9b62a49330c7b64f94a0f5f4f1",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "-1 on this, rather put space in front.\n",
        "created_at": "2014-12-13T23:22:08Z",
        "updated_at": "2014-12-13T23:36:45Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792288",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/18",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792288"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792288"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792289",
        "pull_request_review_id": null,
        "id": 21792289,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyMjg5",
        "diff_hunk": "@@ -89,9 +89,13 @@ func (s *Server) Broadcast(msg string, except *Client) {\n \t\t\tcontinue\n \t\t}\n \n-\t\tif client.beepMe && strings.Contains(msg, client.Name) {\n-\t\t\t/* Add an ascii BEL to ding clients when they're mentioned */\n-\t\t\tclient.Send(msg + BEEP)\n+\t\tif strings.Contains(msg, client.Name) {",
        "path": "server.go",
        "position": 7,
        "original_position": 7,
        "commit_id": "13043e9a6093115aba7f1c295bf577e58e4ba873",
        "original_commit_id": "f57de43d73dcfe9b62a49330c7b64f94a0f5f4f1",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "+1 fun. :)\n",
        "created_at": "2014-12-13T23:22:26Z",
        "updated_at": "2014-12-13T23:36:45Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792289",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/18",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792289"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792289"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792313",
        "pull_request_review_id": null,
        "id": 21792313,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyMzEz",
        "diff_hunk": "@@ -324,7 +332,7 @@ func (c *Client) handleShell(channel ssh.Channel) {\n \t\t\tc.Msg <- fmt.Sprintf(\"-> Rate limiting in effect.\")\n \t\t\tcontinue\n \t\t}\n-\t\tif c.IsSilenced() || len(msg) > 1000 || len(msg) == 0 {\n+\t\tif c.IsSilenced() || len(msg) > 1000 || len(line) < 1 {",
        "path": "client.go",
        "position": 5,
        "original_position": 20,
        "commit_id": "13043e9a6093115aba7f1c295bf577e58e4ba873",
        "original_commit_id": "f57de43d73dcfe9b62a49330c7b64f94a0f5f4f1",
        "user": {
            "login": "Kealper",
            "id": 1422099,
            "node_id": "MDQ6VXNlcjE0MjIwOTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1422099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kealper",
            "html_url": "https://github.com/Kealper",
            "followers_url": "https://api.github.com/users/Kealper/followers",
            "following_url": "https://api.github.com/users/Kealper/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kealper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kealper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kealper/subscriptions",
            "organizations_url": "https://api.github.com/users/Kealper/orgs",
            "repos_url": "https://api.github.com/users/Kealper/repos",
            "events_url": "https://api.github.com/users/Kealper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kealper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "msg will already have the color-formatted username in it even if the message the user sent was blank, where as line only contains the message they intended to send. I guess I could have done `len(line) == 0` but it's just a force of habit for me to do the other way.\n",
        "created_at": "2014-12-13T23:26:58Z",
        "updated_at": "2014-12-13T23:36:45Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792313",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/18",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792313"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792313"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792325",
        "pull_request_review_id": null,
        "id": 21792325,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyMzI1",
        "diff_hunk": "@@ -324,7 +332,7 @@ func (c *Client) handleShell(channel ssh.Channel) {\n \t\t\tc.Msg <- fmt.Sprintf(\"-> Rate limiting in effect.\")\n \t\t\tcontinue\n \t\t}\n-\t\tif c.IsSilenced() || len(msg) > 1000 || len(msg) == 0 {\n+\t\tif c.IsSilenced() || len(msg) > 1000 || len(line) < 1 {",
        "path": "client.go",
        "position": 5,
        "original_position": 20,
        "commit_id": "13043e9a6093115aba7f1c295bf577e58e4ba873",
        "original_commit_id": "f57de43d73dcfe9b62a49330c7b64f94a0f5f4f1",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah makes sense, thanks.\n",
        "created_at": "2014-12-13T23:29:20Z",
        "updated_at": "2014-12-13T23:36:45Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792325",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/18",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792325"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792325"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792331",
        "pull_request_review_id": null,
        "id": 21792331,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyMzMx",
        "diff_hunk": "@@ -164,6 +164,14 @@ func (c *Client) handleShell(channel ssh.Channel) {\n \t\tparts := strings.SplitN(line, \" \", 3)\n \t\tisCmd := strings.HasPrefix(parts[0], \"/\")\n \n+\t\t// Allow for messages starting with / that aren't commands to be escaped",
        "path": "client.go",
        "position": null,
        "original_position": 4,
        "commit_id": "13043e9a6093115aba7f1c295bf577e58e4ba873",
        "original_commit_id": "f57de43d73dcfe9b62a49330c7b64f94a0f5f4f1",
        "user": {
            "login": "Kealper",
            "id": 1422099,
            "node_id": "MDQ6VXNlcjE0MjIwOTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1422099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kealper",
            "html_url": "https://github.com/Kealper",
            "followers_url": "https://api.github.com/users/Kealper/followers",
            "following_url": "https://api.github.com/users/Kealper/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kealper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kealper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kealper/subscriptions",
            "organizations_url": "https://api.github.com/users/Kealper/orgs",
            "repos_url": "https://api.github.com/users/Kealper/repos",
            "events_url": "https://api.github.com/users/Kealper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kealper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It doesn't affect people who wish to continue doing \" /text\" or \"./text\", it just provides another way of doing things, as \"/ /\" (and \"//\") are a pretty standard way that IRC clients allow for things like that.\n",
        "created_at": "2014-12-13T23:31:01Z",
        "updated_at": "2014-12-13T23:36:45Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792331",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/18",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792331"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792331"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792340",
        "pull_request_review_id": null,
        "id": 21792340,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyMzQw",
        "diff_hunk": "@@ -164,6 +164,14 @@ func (c *Client) handleShell(channel ssh.Channel) {\n \t\tparts := strings.SplitN(line, \" \", 3)\n \t\tisCmd := strings.HasPrefix(parts[0], \"/\")\n \n+\t\t// Allow for messages starting with / that aren't commands to be escaped",
        "path": "client.go",
        "position": null,
        "original_position": 4,
        "commit_id": "13043e9a6093115aba7f1c295bf577e58e4ba873",
        "original_commit_id": "f57de43d73dcfe9b62a49330c7b64f94a0f5f4f1",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "My IRC clients don't allow for this. Let's remove this. :) I rather not have N different characters you can prefix to get the same effect.\n",
        "created_at": "2014-12-13T23:32:15Z",
        "updated_at": "2014-12-13T23:36:45Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792340",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/18",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792340"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792340"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792359",
        "pull_request_review_id": null,
        "id": 21792359,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyMzU5",
        "diff_hunk": "@@ -164,6 +164,14 @@ func (c *Client) handleShell(channel ssh.Channel) {\n \t\tparts := strings.SplitN(line, \" \", 3)\n \t\tisCmd := strings.HasPrefix(parts[0], \"/\")\n \n+\t\t// Allow for messages starting with / that aren't commands to be escaped",
        "path": "client.go",
        "position": null,
        "original_position": 4,
        "commit_id": "13043e9a6093115aba7f1c295bf577e58e4ba873",
        "original_commit_id": "f57de43d73dcfe9b62a49330c7b64f94a0f5f4f1",
        "user": {
            "login": "Kealper",
            "id": 1422099,
            "node_id": "MDQ6VXNlcjE0MjIwOTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1422099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kealper",
            "html_url": "https://github.com/Kealper",
            "followers_url": "https://api.github.com/users/Kealper/followers",
            "following_url": "https://api.github.com/users/Kealper/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kealper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kealper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kealper/subscriptions",
            "organizations_url": "https://api.github.com/users/Kealper/orgs",
            "repos_url": "https://api.github.com/users/Kealper/repos",
            "events_url": "https://api.github.com/users/Kealper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kealper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Alright, the \"/ /\" bit is removed.\n",
        "created_at": "2014-12-13T23:37:29Z",
        "updated_at": "2014-12-13T23:37:29Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792359",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/18",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21792359"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/18#discussion_r21792359"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793232",
        "pull_request_review_id": null,
        "id": 21793232,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkzMjMy",
        "diff_hunk": "@@ -32,28 +32,30 @@ type Server struct {\n \tcount     int\n \thistory   *History\n \tmotd      string\n+\twhitelist []string\n \tadmins    map[string]struct{}   // fingerprint lookup\n \tbannedPk  map[string]*time.Time // fingerprint lookup\n \tbannedIp  map[net.Addr]*time.Time\n \tstarted   time.Time\n }\n \n-func NewServer(privateKey []byte) (*Server, error) {\n+func NewServer(privateKey []byte, whitelist []string) (*Server, error) {",
        "path": "server.go",
        "position": 12,
        "original_position": 12,
        "commit_id": "8644d8c6207d3ad9841288f53674397f3345463a",
        "original_commit_id": "8644d8c6207d3ad9841288f53674397f3345463a",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Rather than requiring an optional field, how about adding a call onto Server that adds an entry to the whitelist and call that after constructing?\n",
        "created_at": "2014-12-14T02:51:24Z",
        "updated_at": "2014-12-14T02:51:24Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/29#discussion_r21793232",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/29",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793232"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/29#discussion_r21793232"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/29"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793238",
        "pull_request_review_id": null,
        "id": 21793238,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkzMjM4",
        "diff_hunk": "@@ -308,10 +310,26 @@ func (s *Server) Start(laddr string) error {\n \t\t\t\t\tversion = \"Evil Jerk with a superlong string\"\n \t\t\t\t}\n \t\t\t\tlogger.Infof(\"Connection #%d from: %s, %s, %s\", s.count+1, sshConn.RemoteAddr(), sshConn.User(), version)\n-\n \t\t\t\tgo ssh.DiscardRequests(requests)\n \n \t\t\t\tclient := NewClient(s, sshConn)\n+\n+\t\t\t\t/* check whitelist */",
        "path": "server.go",
        "position": 50,
        "original_position": 50,
        "commit_id": "8644d8c6207d3ad9841288f53674397f3345463a",
        "original_commit_id": "8644d8c6207d3ad9841288f53674397f3345463a",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Probably want this to happen in the auth phase? See `PublicKeyCallback` (already doing something similar with checking bans).\n\nI'd pull it out into a helper member, like IsWhitelisted or something.\n\nProbably better to use a map lookup rather than looping (similar to bannedPk).\n",
        "created_at": "2014-12-14T02:53:36Z",
        "updated_at": "2014-12-14T02:53:36Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/29#discussion_r21793238",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/29",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793238"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/29#discussion_r21793238"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/29"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793241",
        "pull_request_review_id": null,
        "id": 21793241,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkzMjQx",
        "diff_hunk": "@@ -54,7 +56,24 @@ func main() {\n \t\treturn\n \t}\n \n-\tserver, err := NewServer(privateKey)\n+\twhitelistArray := []string{}\n+\tif len(options.Whitelist) != 0 {\n+\t\tfile, err := os.Open(options.Whitelist)",
        "path": "cmd.go",
        "position": 31,
        "original_position": 31,
        "commit_id": "8644d8c6207d3ad9841288f53674397f3345463a",
        "original_commit_id": "8644d8c6207d3ad9841288f53674397f3345463a",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd pull this out into a helper (given an io interface, return whitelist array), will be easier to write a test for later.\n\nBonus points if you feel like writing a test. :D\n",
        "created_at": "2014-12-14T02:54:32Z",
        "updated_at": "2014-12-14T02:54:43Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/29#discussion_r21793241",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/29",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793241"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/29#discussion_r21793241"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/29"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793257",
        "pull_request_review_id": null,
        "id": 21793257,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkzMjU3",
        "diff_hunk": "@@ -32,28 +32,30 @@ type Server struct {\n \tcount     int\n \thistory   *History\n \tmotd      string\n+\twhitelist []string\n \tadmins    map[string]struct{}   // fingerprint lookup\n \tbannedPk  map[string]*time.Time // fingerprint lookup\n \tbannedIp  map[net.Addr]*time.Time\n \tstarted   time.Time\n }\n \n-func NewServer(privateKey []byte) (*Server, error) {\n+func NewServer(privateKey []byte, whitelist []string) (*Server, error) {",
        "path": "server.go",
        "position": 12,
        "original_position": 12,
        "commit_id": "8644d8c6207d3ad9841288f53674397f3345463a",
        "original_commit_id": "8644d8c6207d3ad9841288f53674397f3345463a",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "See also how admin fingerprints are added in main(), you could do something similar.\n",
        "created_at": "2014-12-14T02:57:37Z",
        "updated_at": "2014-12-14T02:57:37Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/29#discussion_r21793257",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/29",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793257"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/29#discussion_r21793257"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/29"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793265",
        "pull_request_review_id": null,
        "id": 21793265,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkzMjY1",
        "diff_hunk": "@@ -54,7 +56,24 @@ func main() {\n \t\treturn\n \t}\n \n-\tserver, err := NewServer(privateKey)\n+\twhitelistArray := []string{}\n+\tif len(options.Whitelist) != 0 {\n+\t\tfile, err := os.Open(options.Whitelist)\n+\t\tif err != nil {\n+\t\t\tlogger.Errorf(\"could not open whiltelist file\")\n+\t\t\treturn\n+\t\t}\n+\t\tdefer file.Close()\n+\n+\t\tscanner := bufio.NewScanner(file)\n+\t\tfor scanner.Scan() {\n+\t\t\twhitelistArray = append(whitelistArray, scanner.Text())\n+\t\t}\n+\t\tlogger.Errorf(\"%v\", whitelistArray)",
        "path": "cmd.go",
        "position": 42,
        "original_position": 42,
        "commit_id": "8644d8c6207d3ad9841288f53674397f3345463a",
        "original_commit_id": "8644d8c6207d3ad9841288f53674397f3345463a",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Don't think this was meant to stay here. :D\n",
        "created_at": "2014-12-14T02:58:50Z",
        "updated_at": "2014-12-14T02:58:50Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/29#discussion_r21793265",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/29",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793265"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/29#discussion_r21793265"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/29"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793554",
        "pull_request_review_id": null,
        "id": 21793554,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkzNTU0",
        "diff_hunk": "@@ -60,6 +62,24 @@ func main() {\n \t\treturn\n \t}\n \n+\tfor _, fingerprint := range options.Admin {\n+\t\tserver.Op(fingerprint)\n+\t}\n+\n+\tif len(options.Whitelist) != 0 {",
        "path": "cmd.go",
        "position": null,
        "original_position": 32,
        "commit_id": "171f0da9aa87819546b2f9bb2356ee187211ec02",
        "original_commit_id": "d2e85a5ad2262d207877af73499af88458e40237",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nit: could check `options.Whitelist != \"\"`\n",
        "created_at": "2014-12-14T03:49:57Z",
        "updated_at": "2014-12-14T04:48:22Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793554",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/32",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793554"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793554"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/32"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793557",
        "pull_request_review_id": null,
        "id": 21793557,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkzNTU3",
        "diff_hunk": "@@ -60,6 +62,24 @@ func main() {\n \t\treturn\n \t}\n \n+\tfor _, fingerprint := range options.Admin {\n+\t\tserver.Op(fingerprint)\n+\t}\n+\n+\tif len(options.Whitelist) != 0 {\n+\t\tfile, err := os.Open(options.Whitelist)\n+\t\tif err != nil {\n+\t\t\tlogger.Errorf(\"could not open whiltelist file\")",
        "path": "cmd.go",
        "position": null,
        "original_position": 35,
        "commit_id": "171f0da9aa87819546b2f9bb2356ee187211ec02",
        "original_commit_id": "d2e85a5ad2262d207877af73499af88458e40237",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nit: Sentence-case log messages (for consistency).\n",
        "created_at": "2014-12-14T03:50:11Z",
        "updated_at": "2014-12-14T04:48:22Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793557",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/32",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793557"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793557"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/32"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793576",
        "pull_request_review_id": null,
        "id": 21793576,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkzNTc2",
        "diff_hunk": "@@ -239,6 +251,17 @@ func (s *Server) IsOp(client *Client) bool {\n \treturn r\n }\n \n+func (s *Server) IsWhitelisted(fingerprint string) bool {\n+\t/* if no whitelist, anyone is welcome */\n+\tif len(s.whitelist) == 0 {",
        "path": "server.go",
        "position": 64,
        "original_position": 64,
        "commit_id": "171f0da9aa87819546b2f9bb2356ee187211ec02",
        "original_commit_id": "d2e85a5ad2262d207877af73499af88458e40237",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Probably safe to skip this check altogether, O(1) either way.\n",
        "created_at": "2014-12-14T03:55:56Z",
        "updated_at": "2014-12-14T04:48:22Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793576",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/32",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793576"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793576"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/32"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793584",
        "pull_request_review_id": null,
        "id": 21793584,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkzNTg0",
        "diff_hunk": "@@ -239,6 +251,17 @@ func (s *Server) IsOp(client *Client) bool {\n \treturn r\n }\n \n+func (s *Server) IsWhitelisted(fingerprint string) bool {\n+\t/* if no whitelist, anyone is welcome */\n+\tif len(s.whitelist) == 0 {",
        "path": "server.go",
        "position": 64,
        "original_position": 64,
        "commit_id": "171f0da9aa87819546b2f9bb2356ee187211ec02",
        "original_commit_id": "d2e85a5ad2262d207877af73499af88458e40237",
        "user": {
            "login": "jazzychad",
            "id": 166299,
            "node_id": "MDQ6VXNlcjE2NjI5OQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/166299?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jazzychad",
            "html_url": "https://github.com/jazzychad",
            "followers_url": "https://api.github.com/users/jazzychad/followers",
            "following_url": "https://api.github.com/users/jazzychad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jazzychad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jazzychad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jazzychad/subscriptions",
            "organizations_url": "https://api.github.com/users/jazzychad/orgs",
            "repos_url": "https://api.github.com/users/jazzychad/repos",
            "events_url": "https://api.github.com/users/jazzychad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jazzychad/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "i have to check this at least somewhere though. if there's no whitelist file specified then every new connection will fail the IsWhitelisted check, no?\n",
        "created_at": "2014-12-14T03:58:31Z",
        "updated_at": "2014-12-14T04:48:22Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793584",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/32",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793584"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793584"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/32"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793723",
        "pull_request_review_id": null,
        "id": 21793723,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkzNzIz",
        "diff_hunk": "@@ -239,6 +251,17 @@ func (s *Server) IsOp(client *Client) bool {\n \treturn r\n }\n \n+func (s *Server) IsWhitelisted(fingerprint string) bool {\n+\t/* if no whitelist, anyone is welcome */\n+\tif len(s.whitelist) == 0 {",
        "path": "server.go",
        "position": 64,
        "original_position": 64,
        "commit_id": "171f0da9aa87819546b2f9bb2356ee187211ec02",
        "original_commit_id": "d2e85a5ad2262d207877af73499af88458e40237",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah you're right, nm. Misread the logic.\n",
        "created_at": "2014-12-14T04:41:15Z",
        "updated_at": "2014-12-14T04:48:22Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793723",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/32",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793723"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793723"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/32"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793725",
        "pull_request_review_id": null,
        "id": 21793725,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkzNzI1",
        "diff_hunk": "@@ -60,6 +62,24 @@ func main() {\n \t\treturn\n \t}\n \n+\tfor _, fingerprint := range options.Admin {\n+\t\tserver.Op(fingerprint)\n+\t}\n+\n+\tif options.Whitelist != \"\" {\n+\t\tfile, err := os.Open(options.Whitelist)\n+\t\tif err != nil {\n+\t\t\tlogger.Errorf(\"Could not open whiltelist file\")",
        "path": "cmd.go",
        "position": null,
        "original_position": 35,
        "commit_id": "171f0da9aa87819546b2f9bb2356ee187211ec02",
        "original_commit_id": "0e5ab12f52383c7909a4dcb2de1675d3946bc212",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "whiltelist\n",
        "created_at": "2014-12-14T04:41:30Z",
        "updated_at": "2014-12-14T04:48:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793725",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/32",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21793725"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/32#discussion_r21793725"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/32"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21794945",
        "pull_request_review_id": null,
        "id": 21794945,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzk0OTQ1",
        "diff_hunk": "@@ -15,7 +16,7 @@ import (\n \n type Options struct {\n \tVerbose   []bool   `short:\"v\" long:\"verbose\" description:\"Show verbose logging.\"`\n-\tIdentity  string   `short:\"i\" long:\"identity\" description:\"Private key to identify server with.\" default:\"~/.ssh/id_rsa\"`\n+\tIdentity  string   `short:\"i\" long:\"identity\" description:\"Private key to identify server with.\" default:\"-\"`",
        "path": "cmd.go",
        "position": 13,
        "original_position": 13,
        "commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "original_commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Now the user won't know what the default is if they type --help. :/\n",
        "created_at": "2014-12-14T09:14:02Z",
        "updated_at": "2014-12-14T09:14:02Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21794945",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/42",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21794945"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21794945"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/42"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21794952",
        "pull_request_review_id": null,
        "id": 21794952,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzk0OTUy",
        "diff_hunk": "@@ -52,6 +53,14 @@ func main() {\n \tlogLevel := logLevels[numVerbose]\n \tlogger = golog.New(os.Stderr, logLevel)\n \n+\tif options.Identity == \"-\" {\n+\t\tusr, err := user.Current()\n+\t\tif err != nil {\n+\t\t\tlogger.Errorf(\"Failed to get user: %v\", err)\n+\t\t}\n+\t\toptions.Identity = usr.HomeDir + \"/.ssh/id_rsa\"",
        "path": "cmd.go",
        "position": 26,
        "original_position": 26,
        "commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "original_commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "user": {
            "login": "IQAndreas",
            "id": 449027,
            "node_id": "MDQ6VXNlcjQ0OTAyNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/449027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IQAndreas",
            "html_url": "https://github.com/IQAndreas",
            "followers_url": "https://api.github.com/users/IQAndreas/followers",
            "following_url": "https://api.github.com/users/IQAndreas/following{/other_user}",
            "gists_url": "https://api.github.com/users/IQAndreas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IQAndreas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IQAndreas/subscriptions",
            "organizations_url": "https://api.github.com/users/IQAndreas/orgs",
            "repos_url": "https://api.github.com/users/IQAndreas/repos",
            "events_url": "https://api.github.com/users/IQAndreas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IQAndreas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Since this is a \"server type\" program, would it make more sense to use `/etc/ssh/ssh_host_rsa_key` as the default? (It's also more likely to already have been generated, as it gets created automatically when you install ssh, at least on Debian-based systems)\n",
        "created_at": "2014-12-14T09:15:33Z",
        "updated_at": "2014-12-14T09:15:58Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21794952",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/42",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21794952"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21794952"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/42"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21794956",
        "pull_request_review_id": null,
        "id": 21794956,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzk0OTU2",
        "diff_hunk": "@@ -52,6 +53,14 @@ func main() {\n \tlogLevel := logLevels[numVerbose]\n \tlogger = golog.New(os.Stderr, logLevel)\n \n+\tif options.Identity == \"-\" {",
        "path": "cmd.go",
        "position": 21,
        "original_position": 21,
        "commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "original_commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What if we check if `options.Identity == \"~/.ssh/id_rsa\"`, and then do the same thing?\n",
        "created_at": "2014-12-14T09:16:49Z",
        "updated_at": "2014-12-14T09:16:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21794956",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/42",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21794956"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21794956"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/42"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21794993",
        "pull_request_review_id": null,
        "id": 21794993,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzk0OTkz",
        "diff_hunk": "@@ -52,6 +53,14 @@ func main() {\n \tlogLevel := logLevels[numVerbose]\n \tlogger = golog.New(os.Stderr, logLevel)\n \n+\tif options.Identity == \"-\" {\n+\t\tusr, err := user.Current()\n+\t\tif err != nil {\n+\t\t\tlogger.Errorf(\"Failed to get user: %v\", err)\n+\t\t}\n+\t\toptions.Identity = usr.HomeDir + \"/.ssh/id_rsa\"",
        "path": "cmd.go",
        "position": 26,
        "original_position": 26,
        "commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "original_commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good point.\n",
        "created_at": "2014-12-14T09:23:10Z",
        "updated_at": "2014-12-14T09:23:10Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21794993",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/42",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21794993"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21794993"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/42"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21795021",
        "pull_request_review_id": null,
        "id": 21795021,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzk1MDIx",
        "diff_hunk": "@@ -52,6 +53,14 @@ func main() {\n \tlogLevel := logLevels[numVerbose]\n \tlogger = golog.New(os.Stderr, logLevel)\n \n+\tif options.Identity == \"-\" {",
        "path": "cmd.go",
        "position": 21,
        "original_position": 21,
        "commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "original_commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "user": {
            "login": "voldyman",
            "id": 2378083,
            "node_id": "MDQ6VXNlcjIzNzgwODM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2378083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/voldyman",
            "html_url": "https://github.com/voldyman",
            "followers_url": "https://api.github.com/users/voldyman/followers",
            "following_url": "https://api.github.com/users/voldyman/following{/other_user}",
            "gists_url": "https://api.github.com/users/voldyman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/voldyman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/voldyman/subscriptions",
            "organizations_url": "https://api.github.com/users/voldyman/orgs",
            "repos_url": "https://api.github.com/users/voldyman/repos",
            "events_url": "https://api.github.com/users/voldyman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/voldyman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this look more clear IMHO\n",
        "created_at": "2014-12-14T09:26:39Z",
        "updated_at": "2014-12-14T09:26:39Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21795021",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/42",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21795021"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21795021"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/42"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21795030",
        "pull_request_review_id": null,
        "id": 21795030,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzk1MDMw",
        "diff_hunk": "@@ -52,6 +53,14 @@ func main() {\n \tlogLevel := logLevels[numVerbose]\n \tlogger = golog.New(os.Stderr, logLevel)\n \n+\tif options.Identity == \"-\" {\n+\t\tusr, err := user.Current()\n+\t\tif err != nil {\n+\t\t\tlogger.Errorf(\"Failed to get user: %v\", err)\n+\t\t}\n+\t\toptions.Identity = usr.HomeDir + \"/.ssh/id_rsa\"",
        "path": "cmd.go",
        "position": 26,
        "original_position": 26,
        "commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "original_commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "user": {
            "login": "voldyman",
            "id": 2378083,
            "node_id": "MDQ6VXNlcjIzNzgwODM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2378083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/voldyman",
            "html_url": "https://github.com/voldyman",
            "followers_url": "https://api.github.com/users/voldyman/followers",
            "following_url": "https://api.github.com/users/voldyman/following{/other_user}",
            "gists_url": "https://api.github.com/users/voldyman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/voldyman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/voldyman/subscriptions",
            "organizations_url": "https://api.github.com/users/voldyman/orgs",
            "repos_url": "https://api.github.com/users/voldyman/repos",
            "events_url": "https://api.github.com/users/voldyman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/voldyman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is 'ssh_host_rsa_key' a standard name for a key?\n",
        "created_at": "2014-12-14T09:27:51Z",
        "updated_at": "2014-12-14T09:27:51Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21795030",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/42",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21795030"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21795030"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/42"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21799776",
        "pull_request_review_id": null,
        "id": 21799776,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzk5Nzc2",
        "diff_hunk": "@@ -52,6 +53,14 @@ func main() {\n \tlogLevel := logLevels[numVerbose]\n \tlogger = golog.New(os.Stderr, logLevel)\n \n+\tif options.Identity == \"-\" {",
        "path": "cmd.go",
        "position": 21,
        "original_position": 21,
        "commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "original_commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Which looks more cleaner? I don't want the user to have to guess where we're going to load ssh keys if it's not specified.\n",
        "created_at": "2014-12-14T21:41:47Z",
        "updated_at": "2014-12-14T21:41:47Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21799776",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/42",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21799776"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21799776"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/42"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21799795",
        "pull_request_review_id": null,
        "id": 21799795,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzk5Nzk1",
        "diff_hunk": "@@ -60,6 +60,7 @@ type Client struct {\n \tsilencedUntil time.Time\n \tlastTX        time.Time\n \tbeepMe        bool\n+\tcolorMe\t\t  bool",
        "path": "client.go",
        "position": null,
        "original_position": 4,
        "commit_id": "95ccbe2922e2a814282b2939440d37533c80ce83",
        "original_commit_id": "6bf5348b4e44250c285fa36fb2de45e38ac53530",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "go fmt?\n",
        "created_at": "2014-12-14T21:43:58Z",
        "updated_at": "2014-12-14T23:05:46Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/41#discussion_r21799795",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/41",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21799795"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/41#discussion_r21799795"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/41"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21801256",
        "pull_request_review_id": null,
        "id": 21801256,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODAxMjU2",
        "diff_hunk": "@@ -52,6 +53,14 @@ func main() {\n \tlogLevel := logLevels[numVerbose]\n \tlogger = golog.New(os.Stderr, logLevel)\n \n+\tif options.Identity == \"-\" {\n+\t\tusr, err := user.Current()\n+\t\tif err != nil {\n+\t\t\tlogger.Errorf(\"Failed to get user: %v\", err)\n+\t\t}\n+\t\toptions.Identity = usr.HomeDir + \"/.ssh/id_rsa\"",
        "path": "cmd.go",
        "position": 26,
        "original_position": 26,
        "commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "original_commit_id": "75fa10e61810568ad0c290b068cebb64ed91f090",
        "user": {
            "login": "IQAndreas",
            "id": 449027,
            "node_id": "MDQ6VXNlcjQ0OTAyNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/449027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IQAndreas",
            "html_url": "https://github.com/IQAndreas",
            "followers_url": "https://api.github.com/users/IQAndreas/followers",
            "following_url": "https://api.github.com/users/IQAndreas/following{/other_user}",
            "gists_url": "https://api.github.com/users/IQAndreas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IQAndreas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IQAndreas/subscriptions",
            "organizations_url": "https://api.github.com/users/IQAndreas/orgs",
            "repos_url": "https://api.github.com/users/IQAndreas/repos",
            "events_url": "https://api.github.com/users/IQAndreas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IQAndreas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> is 'ssh_host_rsa_key' a standard name for a key?\n\nYes, at least on Debian systems, the following keys are automatically generated when you install SSH (not sure if they are only created when you install `openssh-server`, or if they are created with `openssh-client` as well):\n\n```\n-rw------- 1 root root    Aug 30 01:43 ssh_host_dsa_key\n-rw-r--r-- 1 root root    Aug 30 01:43 ssh_host_dsa_key.pub\n-rw------- 1 root root    Aug 30 01:43 ssh_host_ecdsa_key\n-rw-r--r-- 1 root root    Aug 30 01:43 ssh_host_ecdsa_key.pub\n-rw------- 1 root root    Aug 30 01:43 ssh_host_ed25519_key\n-rw-r--r-- 1 root root    Aug 30 01:43 ssh_host_ed25519_key.pub\n-rw------- 1 root root    Aug 30 01:43 ssh_host_rsa_key\n-rw-r--r-- 1 root root    Aug 30 01:43 ssh_host_rsa_key.pub\n```\n",
        "created_at": "2014-12-15T00:19:47Z",
        "updated_at": "2014-12-15T00:19:57Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21801256",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/42",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21801256"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/42#discussion_r21801256"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/42"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21801345",
        "pull_request_review_id": null,
        "id": 21801345,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODAxMzQ1",
        "diff_hunk": "@@ -34,11 +39,12 @@ type Server struct {\n \twhitelist map[string]struct{}   // fingerprint lookup\n \tadmins    map[string]struct{}   // fingerprint lookup\n \tbannedPk  map[string]*time.Time // fingerprint lookup",
        "path": "server.go",
        "position": null,
        "original_position": 33,
        "commit_id": "ca979b9e72287bd2482651e737291aea50244b3f",
        "original_commit_id": "ef2d54ebc86eff5ddebfbb96f4bdfbd1970b57e9",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could prolly change this to bannedPK for consistency too (stands for public key)\n",
        "created_at": "2014-12-15T00:26:59Z",
        "updated_at": "2014-12-15T00:38:31Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/51#discussion_r21801345",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/51",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21801345"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/51#discussion_r21801345"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/51"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21801348",
        "pull_request_review_id": null,
        "id": 21801348,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODAxMzQ4",
        "diff_hunk": "@@ -34,11 +39,12 @@ type Server struct {\n \twhitelist map[string]struct{}   // fingerprint lookup\n \tadmins    map[string]struct{}   // fingerprint lookup\n \tbannedPk  map[string]*time.Time // fingerprint lookup\n-\tbannedIp  map[net.Addr]*time.Time\n+\tbannedIP  map[net.Addr]*time.Time",
        "path": "server.go",
        "position": null,
        "original_position": 35,
        "commit_id": "ca979b9e72287bd2482651e737291aea50244b3f",
        "original_commit_id": "ef2d54ebc86eff5ddebfbb96f4bdfbd1970b57e9",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "bannedIP is not actually used, I plan to remove it eventually (feel free if you'd like).\n",
        "created_at": "2014-12-15T00:27:18Z",
        "updated_at": "2014-12-15T00:38:31Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/51#discussion_r21801348",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/51",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21801348"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/51#discussion_r21801348"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/51"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21802310",
        "pull_request_review_id": null,
        "id": 21802310,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODAyMzEw",
        "diff_hunk": "@@ -21,6 +24,7 @@ type Options struct {\n \tAdmin     []string `long:\"admin\" description:\"Fingerprint of pubkey to mark as admin.\"`\n \tWhitelist string   `long:\"whitelist\" description:\"Optional file of pubkey fingerprints that are allowed to connect\"`\n \tMotd      string   `long:\"motd\" description:\"Message of the Day file (optional)\"`\n+\tPprof      int      `long:\"pprof\" description:\"enable http server for pprof\"`",
        "path": "cmd.go",
        "position": null,
        "original_position": 21,
        "commit_id": "e94838dbe85dbe92633b2f8a67020ef04433dcee",
        "original_commit_id": "3dac036edf7c7d1df1ef1ad5c9fea643c346e534",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please sentence-case the description to match the rest.\n",
        "created_at": "2014-12-15T01:40:24Z",
        "updated_at": "2014-12-15T02:11:30Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/53#discussion_r21802310",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/53",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21802310"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/53#discussion_r21802310"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21868537",
        "pull_request_review_id": null,
        "id": 21868537,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODY4NTM3",
        "diff_hunk": "@@ -229,12 +238,16 @@ func (c *Client) handleShell(channel ssh.Channel) {\n \t\t\t\tif me == \"\" {\n \t\t\t\t\tme = \" is at a loss for words.\"\n \t\t\t\t}\n-\t\t\t\tmsg := fmt.Sprintf(\"** %s%s\", c.ColoredName(), me)\n-\t\t\t\tif c.IsSilenced() || len(msg) > 1000 {\n-\t\t\t\t\tc.SysMsg(\"Message rejected.\")\n-\t\t\t\t} else {\n-\t\t\t\t\tc.Server.Broadcast(msg, nil)\n+\t\t\t\tc.Emote(me)\n+\t\t\tcase \"/slap\":\n+\t\t\t\tslappee := \"themself\"\n+\t\t\t\tif len(parts) > 1 {\n+\t\t\t\t\tslappee = parts[1]\n+\t\t\t\t\tif len(parts[1]) > 100 {\n+\t\t\t\t\t\tslappee = \"some long-named jerk\"\n+\t\t\t\t\t}\n \t\t\t\t}\n+\t\t\t\tc.Emote(fmt.Sprintf(\" slaps %s around a bit with a large trout\", slappee))",
        "path": "client.go",
        "position": null,
        "original_position": 34,
        "commit_id": "281dafa817215d76b58a1c5f70eb80f6f92dc034",
        "original_commit_id": "fb71e60d996a1216a3ff5fc018117c95ed70364a",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Cute. :) Can we add a period to the end of the sentence?\n",
        "created_at": "2014-12-16T00:00:52Z",
        "updated_at": "2014-12-16T00:03:29Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/64#discussion_r21868537",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/64",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21868537"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/64#discussion_r21868537"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/64"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21868729",
        "pull_request_review_id": null,
        "id": 21868729,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODY4NzI5",
        "diff_hunk": "@@ -229,12 +238,16 @@ func (c *Client) handleShell(channel ssh.Channel) {\n \t\t\t\tif me == \"\" {\n \t\t\t\t\tme = \" is at a loss for words.\"\n \t\t\t\t}\n-\t\t\t\tmsg := fmt.Sprintf(\"** %s%s\", c.ColoredName(), me)\n-\t\t\t\tif c.IsSilenced() || len(msg) > 1000 {\n-\t\t\t\t\tc.SysMsg(\"Message rejected.\")\n-\t\t\t\t} else {\n-\t\t\t\t\tc.Server.Broadcast(msg, nil)\n+\t\t\t\tc.Emote(me)\n+\t\t\tcase \"/slap\":\n+\t\t\t\tslappee := \"themself\"\n+\t\t\t\tif len(parts) > 1 {\n+\t\t\t\t\tslappee = parts[1]\n+\t\t\t\t\tif len(parts[1]) > 100 {\n+\t\t\t\t\t\tslappee = \"some long-named jerk\"\n+\t\t\t\t\t}\n \t\t\t\t}\n+\t\t\t\tc.Emote(fmt.Sprintf(\" slaps %s around a bit with a large trout\", slappee))",
        "path": "client.go",
        "position": null,
        "original_position": 34,
        "commit_id": "281dafa817215d76b58a1c5f70eb80f6f92dc034",
        "original_commit_id": "fb71e60d996a1216a3ff5fc018117c95ed70364a",
        "user": {
            "login": "lawrencecraft",
            "id": 660580,
            "node_id": "MDQ6VXNlcjY2MDU4MA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/660580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lawrencecraft",
            "html_url": "https://github.com/lawrencecraft",
            "followers_url": "https://api.github.com/users/lawrencecraft/followers",
            "following_url": "https://api.github.com/users/lawrencecraft/following{/other_user}",
            "gists_url": "https://api.github.com/users/lawrencecraft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lawrencecraft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lawrencecraft/subscriptions",
            "organizations_url": "https://api.github.com/users/lawrencecraft/orgs",
            "repos_url": "https://api.github.com/users/lawrencecraft/repos",
            "events_url": "https://api.github.com/users/lawrencecraft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lawrencecraft/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sure! Done in a new commit.\n",
        "created_at": "2014-12-16T00:04:22Z",
        "updated_at": "2014-12-16T00:04:22Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/64#discussion_r21868729",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/64",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21868729"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/64#discussion_r21868729"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/64"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931179",
        "pull_request_review_id": null,
        "id": 21931179,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTMxMTc5",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)",
        "path": "server.go",
        "position": null,
        "original_position": 46,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "what about ssh-dsa? Why use a regexp?\n",
        "created_at": "2014-12-16T20:55:34Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931179",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931179"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931179"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931200",
        "pull_request_review_id": null,
        "id": 21931200,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTMxMjAw",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")",
        "path": "server.go",
        "position": null,
        "original_position": 49,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Does this have a timeout?\n",
        "created_at": "2014-12-16T20:55:55Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931200",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931200"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931200"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931237",
        "pull_request_review_id": null,
        "id": 21931237,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTMxMjM3",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tbodyStr := string(body)\n+\tkeys := pubKeyRegex.FindAllStringSubmatch(bodyStr, -1)\n+\tpubs := make([]ssh.PublicKey, 0, 3)",
        "path": "server.go",
        "position": null,
        "original_position": 60,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why limit capacity to 3?\n",
        "created_at": "2014-12-16T20:56:31Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931237",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931237"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931237"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931282",
        "pull_request_review_id": null,
        "id": 21931282,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTMxMjgy",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tbodyStr := string(body)\n+\tkeys := pubKeyRegex.FindAllStringSubmatch(bodyStr, -1)\n+\tpubs := make([]ssh.PublicKey, 0, 3)\n+\tfor _, key := range keys {\n+\t\tif(len(key) < 2) {",
        "path": "server.go",
        "position": null,
        "original_position": 62,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why this check? Won't decoding or parsePublicKey catch any invalid keys?\n",
        "created_at": "2014-12-16T20:57:01Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931282",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931282"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931282"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931320",
        "pull_request_review_id": null,
        "id": 21931320,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTMxMzIw",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tbodyStr := string(body)\n+\tkeys := pubKeyRegex.FindAllStringSubmatch(bodyStr, -1)",
        "path": "server.go",
        "position": null,
        "original_position": 59,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why do the regexp check at all? Won't the parsing functions below catch invalid strings?\n",
        "created_at": "2014-12-16T20:57:33Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931320",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931320"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931320"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931386",
        "pull_request_review_id": null,
        "id": 21931386,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTMxMzg2",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {",
        "path": "server.go",
        "position": null,
        "original_position": 19,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seems we have two different functions branched by an if-statement, let's split this out into WhitelistIdentityUrl and keep the straight-up WhitelistFingerprint function as it was?\n",
        "created_at": "2014-12-16T20:58:31Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931386",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21931386"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21931386"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946208",
        "pull_request_review_id": null,
        "id": 21946208,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ2MjA4",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")",
        "path": "server.go",
        "position": null,
        "original_position": 49,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "wpovell",
            "id": 1797256,
            "node_id": "MDQ6VXNlcjE3OTcyNTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1797256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wpovell",
            "html_url": "https://github.com/wpovell",
            "followers_url": "https://api.github.com/users/wpovell/followers",
            "following_url": "https://api.github.com/users/wpovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/wpovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wpovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wpovell/subscriptions",
            "organizations_url": "https://api.github.com/users/wpovell/orgs",
            "repos_url": "https://api.github.com/users/wpovell/repos",
            "events_url": "https://api.github.com/users/wpovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wpovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@shazow Addressed in 3c466dc88e40e598766631c80ece0acb57f29730, 10 second timeout\n",
        "created_at": "2014-12-17T01:04:56Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946208",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946208"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946208"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946873",
        "pull_request_review_id": null,
        "id": 21946873,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ2ODcz",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)",
        "path": "server.go",
        "position": null,
        "original_position": 46,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "wpovell",
            "id": 1797256,
            "node_id": "MDQ6VXNlcjE3OTcyNTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1797256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wpovell",
            "html_url": "https://github.com/wpovell",
            "followers_url": "https://api.github.com/users/wpovell/followers",
            "following_url": "https://api.github.com/users/wpovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/wpovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wpovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wpovell/subscriptions",
            "organizations_url": "https://api.github.com/users/wpovell/orgs",
            "repos_url": "https://api.github.com/users/wpovell/repos",
            "events_url": "https://api.github.com/users/wpovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wpovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@shazow I'm afraid I'm not sure what you're referring to. Is there a std library function that will parse out the key in this format? `ssh.ParsePublicKey` is unable to parse a key like\n\n`ssh-rsa AAAAB3NzaC1yc2E...`\n\nThe key part `AAAAB3NzaC1yc2E...` must be separated out and base64 decoded first.\n\nIs there a different function I should be using? Regardless, I agree that I can go about this without using regexp.\n",
        "created_at": "2014-12-17T01:21:38Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946873",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946873"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946873"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946888",
        "pull_request_review_id": null,
        "id": 21946888,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ2ODg4",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tbodyStr := string(body)\n+\tkeys := pubKeyRegex.FindAllStringSubmatch(bodyStr, -1)\n+\tpubs := make([]ssh.PublicKey, 0, 3)",
        "path": "server.go",
        "position": null,
        "original_position": 60,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "wpovell",
            "id": 1797256,
            "node_id": "MDQ6VXNlcjE3OTcyNTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1797256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wpovell",
            "html_url": "https://github.com/wpovell",
            "followers_url": "https://api.github.com/users/wpovell/followers",
            "following_url": "https://api.github.com/users/wpovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/wpovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wpovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wpovell/subscriptions",
            "organizations_url": "https://api.github.com/users/wpovell/orgs",
            "repos_url": "https://api.github.com/users/wpovell/repos",
            "events_url": "https://api.github.com/users/wpovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wpovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@shazow My bad, that's from debugging something, although it shouldn't have any effect since the slice is expandable. 3 is just the starting capacity. It should be set to 0, however.\n",
        "created_at": "2014-12-17T01:22:02Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946888",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946888"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946888"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946921",
        "pull_request_review_id": null,
        "id": 21946921,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ2OTIx",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tbodyStr := string(body)\n+\tkeys := pubKeyRegex.FindAllStringSubmatch(bodyStr, -1)\n+\tpubs := make([]ssh.PublicKey, 0, 3)",
        "path": "server.go",
        "position": null,
        "original_position": 60,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "IMO no need to set a capacity, `pubs := []ssh.PublicKey{}` is fine.\n",
        "created_at": "2014-12-17T01:22:45Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946921",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946921"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946921"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946940",
        "pull_request_review_id": null,
        "id": 21946940,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ2OTQw",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tbodyStr := string(body)\n+\tkeys := pubKeyRegex.FindAllStringSubmatch(bodyStr, -1)\n+\tpubs := make([]ssh.PublicKey, 0, 3)\n+\tfor _, key := range keys {\n+\t\tif(len(key) < 2) {",
        "path": "server.go",
        "position": null,
        "original_position": 62,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "wpovell",
            "id": 1797256,
            "node_id": "MDQ6VXNlcjE3OTcyNTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1797256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wpovell",
            "html_url": "https://github.com/wpovell",
            "followers_url": "https://api.github.com/users/wpovell/followers",
            "following_url": "https://api.github.com/users/wpovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/wpovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wpovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wpovell/subscriptions",
            "organizations_url": "https://api.github.com/users/wpovell/orgs",
            "repos_url": "https://api.github.com/users/wpovell/repos",
            "events_url": "https://api.github.com/users/wpovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wpovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@shazow Good point, definitely redundant.\n",
        "created_at": "2014-12-17T01:23:02Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946940",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946940"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946940"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946986",
        "pull_request_review_id": null,
        "id": 21946986,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ2OTg2",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)",
        "path": "server.go",
        "position": null,
        "original_position": 46,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If we just need to split on the first space, it would be better to do that instead. :) \nhttp://golang.org/pkg/strings/#SplitN\n",
        "created_at": "2014-12-17T01:24:14Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946986",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21946986"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21946986"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21947073",
        "pull_request_review_id": null,
        "id": 21947073,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ3MDcz",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tbodyStr := string(body)\n+\tkeys := pubKeyRegex.FindAllStringSubmatch(bodyStr, -1)\n+\tpubs := make([]ssh.PublicKey, 0, 3)",
        "path": "server.go",
        "position": null,
        "original_position": 60,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "wpovell",
            "id": 1797256,
            "node_id": "MDQ6VXNlcjE3OTcyNTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1797256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wpovell",
            "html_url": "https://github.com/wpovell",
            "followers_url": "https://api.github.com/users/wpovell/followers",
            "following_url": "https://api.github.com/users/wpovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/wpovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wpovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wpovell/subscriptions",
            "organizations_url": "https://api.github.com/users/wpovell/orgs",
            "repos_url": "https://api.github.com/users/wpovell/repos",
            "events_url": "https://api.github.com/users/wpovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wpovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, cool, haven't been using this notation.\n",
        "created_at": "2014-12-17T01:26:38Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21947073",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21947073"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21947073"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21947139",
        "pull_request_review_id": null,
        "id": 21947139,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ3MTM5",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)",
        "path": "server.go",
        "position": null,
        "original_position": 46,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "wpovell",
            "id": 1797256,
            "node_id": "MDQ6VXNlcjE3OTcyNTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1797256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wpovell",
            "html_url": "https://github.com/wpovell",
            "followers_url": "https://api.github.com/users/wpovell/followers",
            "following_url": "https://api.github.com/users/wpovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/wpovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wpovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wpovell/subscriptions",
            "organizations_url": "https://api.github.com/users/wpovell/orgs",
            "repos_url": "https://api.github.com/users/wpovell/repos",
            "events_url": "https://api.github.com/users/wpovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wpovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I was attempting to compensate for keys that might not be `ssh-rsa`, is it possible for that to occur?\n",
        "created_at": "2014-12-17T01:27:51Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21947139",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21947139"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21947139"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21947152",
        "pull_request_review_id": null,
        "id": 21947152,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ3MTUy",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tbodyStr := string(body)\n+\tkeys := pubKeyRegex.FindAllStringSubmatch(bodyStr, -1)\n+\tpubs := make([]ssh.PublicKey, 0, 3)",
        "path": "server.go",
        "position": null,
        "original_position": 60,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I typically only use `make(...)` when I need to be explicit about the minimum/maximum size... which is fairly rare, usually for buffered channels or when I know ahead of time how many values there will be.\n",
        "created_at": "2014-12-17T01:28:05Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21947152",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21947152"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21947152"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21947213",
        "pull_request_review_id": null,
        "id": 21947213,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ3MjEz",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)",
        "path": "server.go",
        "position": null,
        "original_position": 46,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yup, `ssh-dsa` is also a thing and we should accept those. I suspect `ssh.ParsePublicKey` will handle both just fine, but worth double checking.\n",
        "created_at": "2014-12-17T01:29:23Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21947213",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21947213"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21947213"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21948003",
        "pull_request_review_id": null,
        "id": 21948003,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ4MDAz",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)",
        "path": "server.go",
        "position": null,
        "original_position": 46,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "wpovell",
            "id": 1797256,
            "node_id": "MDQ6VXNlcjE3OTcyNTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1797256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wpovell",
            "html_url": "https://github.com/wpovell",
            "followers_url": "https://api.github.com/users/wpovell/followers",
            "following_url": "https://api.github.com/users/wpovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/wpovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wpovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wpovell/subscriptions",
            "organizations_url": "https://api.github.com/users/wpovell/orgs",
            "repos_url": "https://api.github.com/users/wpovell/repos",
            "events_url": "https://api.github.com/users/wpovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wpovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ssh.ParsePublicKey will accept key formats described [here](http://tools.ietf.org/html/rfc4253#page-14), which includes `ssh-dss`, it that what you mean?\n\nPs. Regex has been removed as of a1455a8\n",
        "created_at": "2014-12-17T01:50:17Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21948003",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21948003"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21948003"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21948032",
        "pull_request_review_id": null,
        "id": 21948032,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ4MDMy",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tbodyStr := string(body)\n+\tkeys := pubKeyRegex.FindAllStringSubmatch(bodyStr, -1)\n+\tpubs := make([]ssh.PublicKey, 0, 3)",
        "path": "server.go",
        "position": null,
        "original_position": 60,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "wpovell",
            "id": 1797256,
            "node_id": "MDQ6VXNlcjE3OTcyNTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1797256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wpovell",
            "html_url": "https://github.com/wpovell",
            "followers_url": "https://api.github.com/users/wpovell/followers",
            "following_url": "https://api.github.com/users/wpovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/wpovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wpovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wpovell/subscriptions",
            "organizations_url": "https://api.github.com/users/wpovell/orgs",
            "repos_url": "https://api.github.com/users/wpovell/repos",
            "events_url": "https://api.github.com/users/wpovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wpovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Cool, duly noted.\nChanged in a1455a8\n",
        "created_at": "2014-12-17T01:51:05Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21948032",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21948032"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21948032"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21948073",
        "pull_request_review_id": null,
        "id": 21948073,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ4MDcz",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)",
        "path": "server.go",
        "position": null,
        "original_position": 46,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Err, ssh-dss is the one I meant, yes. :)\n",
        "created_at": "2014-12-17T01:52:14Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21948073",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21948073"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21948073"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21948089",
        "pull_request_review_id": null,
        "id": 21948089,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ4MDg5",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tbodyStr := string(body)\n+\tkeys := pubKeyRegex.FindAllStringSubmatch(bodyStr, -1)\n+\tpubs := make([]ssh.PublicKey, 0, 3)\n+\tfor _, key := range keys {\n+\t\tif(len(key) < 2) {",
        "path": "server.go",
        "position": null,
        "original_position": 62,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "wpovell",
            "id": 1797256,
            "node_id": "MDQ6VXNlcjE3OTcyNTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1797256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wpovell",
            "html_url": "https://github.com/wpovell",
            "followers_url": "https://api.github.com/users/wpovell/followers",
            "following_url": "https://api.github.com/users/wpovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/wpovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wpovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wpovell/subscriptions",
            "organizations_url": "https://api.github.com/users/wpovell/orgs",
            "repos_url": "https://api.github.com/users/wpovell/repos",
            "events_url": "https://api.github.com/users/wpovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wpovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've kept the check in a1455a8 since the way keys are parsed is a little different. If the line is split and there _aren't_ two elements, then the script would crash, which I would consider worse than some redundancy.\n",
        "created_at": "2014-12-17T01:52:43Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21948089",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21948089"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21948089"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21948091",
        "pull_request_review_id": null,
        "id": 21948091,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ4MDkx",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {\n+\tif strings.HasPrefix(fingerprint, \"github.com/\") {\n+\t\tlogger.Infof(\"Adding github account %s to whitelist\", fingerprint)\n+\n+\t\tkeys, err := getGithubPubKeys(fingerprint)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif len(keys) == 0 {\n+\t\t\treturn fmt.Errorf(\"No github user %s\", fingerprint)\n+\t\t}\n+\t\tfor _, key := range keys {\n+\t\t\tfingerprint = Fingerprint(key)\n+\t\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\t\ts.Lock()\n+\t\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\t\ts.Unlock()\n+\t\t}\n+\t} else {\n+\t\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n+\t\ts.Lock()\n+\t\ts.whitelist[fingerprint] = struct{}{}\n+\t\ts.Unlock()\n+\t}\n+\treturn nil\n+}\n+\n+var pubKeyRegex = regexp.MustCompile(`ssh-rsa ([A-Za-z0-9\\+=\\/]+)\\s*`)\n+// Returns an array of public keys for the given github user URL\n+func getGithubPubKeys(url string) ([]ssh.PublicKey, error) {\n+\tresp, err := http.Get(\"http://\" + url + \".keys\")\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tbodyStr := string(body)\n+\tkeys := pubKeyRegex.FindAllStringSubmatch(bodyStr, -1)",
        "path": "server.go",
        "position": null,
        "original_position": 59,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "wpovell",
            "id": 1797256,
            "node_id": "MDQ6VXNlcjE3OTcyNTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1797256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wpovell",
            "html_url": "https://github.com/wpovell",
            "followers_url": "https://api.github.com/users/wpovell/followers",
            "following_url": "https://api.github.com/users/wpovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/wpovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wpovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wpovell/subscriptions",
            "organizations_url": "https://api.github.com/users/wpovell/orgs",
            "repos_url": "https://api.github.com/users/wpovell/repos",
            "events_url": "https://api.github.com/users/wpovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wpovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Resolved in a1455a8\n",
        "created_at": "2014-12-17T01:52:51Z",
        "updated_at": "2014-12-17T02:28:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21948091",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21948091"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21948091"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21949152",
        "pull_request_review_id": null,
        "id": 21949152,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQ5MTUy",
        "diff_hunk": "@@ -260,11 +263,66 @@ func (s *Server) Op(fingerprint string) {\n }\n \n // Whitelist adds the given fingerprint to the whitelist\n-func (s *Server) Whitelist(fingerprint string) {\n-\tlogger.Infof(\"Adding whitelist: %s\", fingerprint)\n-\ts.Lock()\n-\ts.whitelist[fingerprint] = struct{}{}\n-\ts.Unlock()\n+func (s *Server) Whitelist(fingerprint string) error {",
        "path": "server.go",
        "position": null,
        "original_position": 19,
        "commit_id": "68e82ff1155d54e6b752f3394a7e56567f4262d7",
        "original_commit_id": "8329c8d7fd1447e09d494e859f7b5eeb790208f0",
        "user": {
            "login": "wpovell",
            "id": 1797256,
            "node_id": "MDQ6VXNlcjE3OTcyNTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1797256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wpovell",
            "html_url": "https://github.com/wpovell",
            "followers_url": "https://api.github.com/users/wpovell/followers",
            "following_url": "https://api.github.com/users/wpovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/wpovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wpovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wpovell/subscriptions",
            "organizations_url": "https://api.github.com/users/wpovell/orgs",
            "repos_url": "https://api.github.com/users/wpovell/repos",
            "events_url": "https://api.github.com/users/wpovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wpovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done as of 912175e65a0ec8c033eab47b719048d8980034fc :+1:\n",
        "created_at": "2014-12-17T02:29:09Z",
        "updated_at": "2014-12-17T02:29:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21949152",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/21949152"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/72#discussion_r21949152"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/72"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22021847",
        "pull_request_review_id": null,
        "id": 22021847,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDIxODQ3",
        "diff_hunk": "@@ -46,6 +46,11 @@ $ ssh-chat --verbose --bind \":2022\" --identity ~/.ssh/id_dsa\n To bind on port 22, you'll need to make sure it's free (move any other ssh\n daemons to another port) and run ssh-chat as root (or with sudo).\n \n+## Compiling",
        "path": "README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "28470aa7b7ef4683825765c3b51496775ebe87c4",
        "original_commit_id": "0e3b42085b8f5a23e5ecf3582a253721dc7a9e55",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This section already exists below under \"Developing\", wanna just add the go v1.3 mention in there? (Also feel free moving it higher up.)\n",
        "created_at": "2014-12-18T03:21:20Z",
        "updated_at": "2014-12-18T03:28:03Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/85#discussion_r22021847",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/85",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22021847"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/85#discussion_r22021847"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/85"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22022060",
        "pull_request_review_id": null,
        "id": 22022060,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDIyMDYw",
        "diff_hunk": "@@ -57,14 +68,6 @@ $ docker run -d -p 0.0.0.0:(your host machine port):2022 --name ssh-chat alvin/s\n \n See notes in the header of our Dockerfile for details on building your own image.\n \n-\n-## Developing\n-\n-If you're developing on this repo, there is a handy Makefile that should set\n-things up with `make run`.\n-\n-Additionally, `make debug` runs the server with an http `pprof` server. This allows you to open [http://localhost:6060/debug/pprof/]() and view profiling data. See [net/http/pprof](http://golang.org/pkg/net/http/pprof/) for more information about `pprof`.\n-\n ## License\n \n-MIT\n+This project is licensed under the MIT open source license.",
        "path": "README.md",
        "position": 33,
        "original_position": 33,
        "commit_id": "28470aa7b7ef4683825765c3b51496775ebe87c4",
        "original_commit_id": "28470aa7b7ef4683825765c3b51496775ebe87c4",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why? :P\n",
        "created_at": "2014-12-18T03:31:46Z",
        "updated_at": "2014-12-18T03:31:46Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/85#discussion_r22022060",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/85",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22022060"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/85#discussion_r22022060"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/85"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22429202",
        "pull_request_review_id": null,
        "id": 22429202,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDI5MjAy",
        "diff_hunk": "@@ -128,6 +128,10 @@ func (s *Server) Broadcast(msg string, except *Client) {\n \t\t\t}\n \t\t\tclient.Send(personalMsg)\n \t\t} else {\n+\t\t\tif client.quietMode && strings.HasPrefix(msg, systemMessageFormat) {",
        "path": "server.go",
        "position": 4,
        "original_position": 4,
        "commit_id": "d643d61ccc0adc8884ec9e946ca8e0140ed28151",
        "original_commit_id": "d643d61ccc0adc8884ec9e946ca8e0140ed28151",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This will strip out messages that just happen to have similar formatting as systemMessageFormat (e.g. from users with the same color).\n\nAlso how about making it an `else if` and keeping the `else` as-is?\n",
        "created_at": "2015-01-03T03:34:11Z",
        "updated_at": "2015-01-03T03:34:11Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/95#discussion_r22429202",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/95",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22429202"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/95#discussion_r22429202"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/95"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22429670",
        "pull_request_review_id": null,
        "id": 22429670,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDI5Njcw",
        "diff_hunk": "@@ -128,6 +128,10 @@ func (s *Server) Broadcast(msg string, except *Client) {\n \t\t\t}\n \t\t\tclient.Send(personalMsg)\n \t\t} else {\n+\t\t\tif client.quietMode && strings.HasPrefix(msg, systemMessageFormat) {",
        "path": "server.go",
        "position": 4,
        "original_position": 4,
        "commit_id": "d643d61ccc0adc8884ec9e946ca8e0140ed28151",
        "original_commit_id": "d643d61ccc0adc8884ec9e946ca8e0140ed28151",
        "user": {
            "login": "nickpresta",
            "id": 49090,
            "node_id": "MDQ6VXNlcjQ5MDkw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/49090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickpresta",
            "html_url": "https://github.com/nickpresta",
            "followers_url": "https://api.github.com/users/nickpresta/followers",
            "following_url": "https://api.github.com/users/nickpresta/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickpresta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickpresta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickpresta/subscriptions",
            "organizations_url": "https://api.github.com/users/nickpresta/orgs",
            "repos_url": "https://api.github.com/users/nickpresta/repos",
            "events_url": "https://api.github.com/users/nickpresta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickpresta/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah, I didn't think about the first point - I wasn't aware users could have the same color.\n\nHow does 3 regexps sound to filter our renaming/joining/leaving?\n\nWill update the else if. :smile: \n",
        "created_at": "2015-01-03T05:12:40Z",
        "updated_at": "2015-01-03T05:12:40Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/95#discussion_r22429670",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/95",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22429670"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/95#discussion_r22429670"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/95"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22429763",
        "pull_request_review_id": null,
        "id": 22429763,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDI5NzYz",
        "diff_hunk": "@@ -128,6 +128,10 @@ func (s *Server) Broadcast(msg string, except *Client) {\n \t\t\t}\n \t\t\tclient.Send(personalMsg)\n \t\t} else {\n+\t\t\tif client.quietMode && strings.HasPrefix(msg, systemMessageFormat) {",
        "path": "server.go",
        "position": 4,
        "original_position": 4,
        "commit_id": "d643d61ccc0adc8884ec9e946ca8e0140ed28151",
        "original_commit_id": "d643d61ccc0adc8884ec9e946ca8e0140ed28151",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about we close this and stick to the refactor branch? :)\n",
        "created_at": "2015-01-03T05:38:14Z",
        "updated_at": "2015-01-03T05:38:14Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/95#discussion_r22429763",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/95",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22429763"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/95#discussion_r22429763"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/95"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22429767",
        "pull_request_review_id": null,
        "id": 22429767,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDI5NzY3",
        "diff_hunk": "@@ -128,6 +128,10 @@ func (s *Server) Broadcast(msg string, except *Client) {\n \t\t\t}\n \t\t\tclient.Send(personalMsg)\n \t\t} else {\n+\t\t\tif client.quietMode && strings.HasPrefix(msg, systemMessageFormat) {",
        "path": "server.go",
        "position": 4,
        "original_position": 4,
        "commit_id": "d643d61ccc0adc8884ec9e946ca8e0140ed28151",
        "original_commit_id": "d643d61ccc0adc8884ec9e946ca8e0140ed28151",
        "user": {
            "login": "nickpresta",
            "id": 49090,
            "node_id": "MDQ6VXNlcjQ5MDkw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/49090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickpresta",
            "html_url": "https://github.com/nickpresta",
            "followers_url": "https://api.github.com/users/nickpresta/followers",
            "following_url": "https://api.github.com/users/nickpresta/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickpresta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickpresta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickpresta/subscriptions",
            "organizations_url": "https://api.github.com/users/nickpresta/orgs",
            "repos_url": "https://api.github.com/users/nickpresta/repos",
            "events_url": "https://api.github.com/users/nickpresta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickpresta/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Excellent. I really didn't want to do this here :)\n",
        "created_at": "2015-01-03T05:38:44Z",
        "updated_at": "2015-01-03T05:38:44Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/95#discussion_r22429767",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/95",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22429767"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/95#discussion_r22429767"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/95"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22429760",
        "pull_request_review_id": null,
        "id": 22429760,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDI5NzYw",
        "diff_hunk": "@@ -36,6 +36,19 @@ func NewUser(name string) *User {\n \treturn &u\n }\n \n+// NewUserWithConfig creates a new User with the specified UserConfig\n+func NewUserWithConfig(name string, config UserConfig) *User {",
        "path": "chat/user.go",
        "position": null,
        "original_position": 5,
        "commit_id": "a2ee2000bbe7a7b44f475caf09feecb2cd424c9b",
        "original_commit_id": "db13d7603e5cd024397153525c4aa1f00d68189c",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not just shove the Config onto the user after the fact? It's a public attribute and all. Otherwise it's an identical constructor. :)\n",
        "created_at": "2015-01-03T05:37:45Z",
        "updated_at": "2015-01-03T06:52:29Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/96#discussion_r22429760",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/96",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22429760"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/96#discussion_r22429760"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/96"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22430135",
        "pull_request_review_id": null,
        "id": 22430135,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDMwMTM1",
        "diff_hunk": "@@ -17,6 +17,15 @@ type Auth struct {\n \tsync.RWMutex\n }\n \n+// NewAuth creates a new default Auth.\n+func NewAuth() Auth {",
        "path": "auth.go",
        "position": 5,
        "original_position": 5,
        "commit_id": "23d06faa6830625806048865e1937dcfed20c927",
        "original_commit_id": "ed953bf7fcbbd193ecff67b3da8cbe99d1f8e2af",
        "user": {
            "login": "nickpresta",
            "id": 49090,
            "node_id": "MDQ6VXNlcjQ5MDkw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/49090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickpresta",
            "html_url": "https://github.com/nickpresta",
            "followers_url": "https://api.github.com/users/nickpresta/followers",
            "following_url": "https://api.github.com/users/nickpresta/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickpresta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickpresta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickpresta/subscriptions",
            "organizations_url": "https://api.github.com/users/nickpresta/orgs",
            "repos_url": "https://api.github.com/users/nickpresta/repos",
            "events_url": "https://api.github.com/users/nickpresta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickpresta/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This was created as the `whitelist`, `banned`, and `ops` maps were nil maps and I couldn't add myself as an Op without it (it panic'd when trying to add to `ops`).\n\nI can do this in a separate PR if you think it's worth the separation.\n",
        "created_at": "2015-01-03T07:23:11Z",
        "updated_at": "2015-01-04T01:06:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/98#discussion_r22430135",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/98",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22430135"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/98#discussion_r22430135"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22430190",
        "pull_request_review_id": null,
        "id": 22430190,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDMwMTkw",
        "diff_hunk": "@@ -17,6 +17,15 @@ type Auth struct {\n \tsync.RWMutex\n }\n \n+// NewAuth creates a new default Auth.\n+func NewAuth() Auth {",
        "path": "auth.go",
        "position": 5,
        "original_position": 5,
        "commit_id": "23d06faa6830625806048865e1937dcfed20c927",
        "original_commit_id": "ed953bf7fcbbd193ecff67b3da8cbe99d1f8e2af",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah good point, didn't get around to testing that part, thanks.\n",
        "created_at": "2015-01-03T07:37:36Z",
        "updated_at": "2015-01-04T01:06:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/98#discussion_r22430190",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22430190"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/98#discussion_r22430190"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22430195",
        "pull_request_review_id": null,
        "id": 22430195,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDMwMTk1",
        "diff_hunk": "@@ -84,17 +88,43 @@ func main() {\n \tif err != nil {\n \t\tlogger.Errorf(\"Failed to load identity: %v\", err)\n \t\tos.Exit(2)\n-\t\treturn\n+\t}\n+\n+\tblock, rest := pem.Decode(privateKey)",
        "path": "cmd.go",
        "position": null,
        "original_position": 46,
        "commit_id": "23d06faa6830625806048865e1937dcfed20c927",
        "original_commit_id": "ed953bf7fcbbd193ecff67b3da8cbe99d1f8e2af",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How do you feel about pulling this whole section out into a helper?\n",
        "created_at": "2015-01-03T07:38:40Z",
        "updated_at": "2015-01-04T01:06:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/98#discussion_r22430195",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22430195"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/98#discussion_r22430195"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22270432",
        "pull_request_review_id": null,
        "id": 22270432,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjcwNDMy",
        "diff_hunk": "@@ -77,12 +84,27 @@ func main() {\n \t\treturn\n \t}\n \n-\tserver, err := NewServer(privateKey)\n+\tsigner, err := ssh.ParsePrivateKey(privateKey)\n \tif err != nil {\n-\t\tlogger.Errorf(\"Failed to create server: %v\", err)\n+\t\tlogger.Errorf(\"Failed to prase key: %v\", err)\n \t\treturn\n \t}\n \n+\t// TODO: MakeAuth\n+\tconfig := sshd.MakeNoAuth()\n+\tconfig.AddHostKey(signer)\n+\n+\ts, err := sshd.ListenSSH(options.Bind, config)\n+\tif err != nil {\n+\t\tlogger.Errorf(\"Failed to listen on socket: %v\", err)\n+\t\treturn",
        "path": "cmd.go",
        "position": null,
        "original_position": 72,
        "commit_id": "c4ffd6f26373f9d49c36aaca6ff9a5e814d58af5",
        "original_commit_id": "3bb4bbf991a744cedcc474f545161d7ea2f8b00f",
        "user": {
            "login": "aquilax",
            "id": 328067,
            "node_id": "MDQ6VXNlcjMyODA2Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/328067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aquilax",
            "html_url": "https://github.com/aquilax",
            "followers_url": "https://api.github.com/users/aquilax/followers",
            "following_url": "https://api.github.com/users/aquilax/following{/other_user}",
            "gists_url": "https://api.github.com/users/aquilax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aquilax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aquilax/subscriptions",
            "organizations_url": "https://api.github.com/users/aquilax/orgs",
            "repos_url": "https://api.github.com/users/aquilax/repos",
            "events_url": "https://api.github.com/users/aquilax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aquilax/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Proper exit codes with `os.Exit` may be more useful instead of returns.\n",
        "created_at": "2014-12-25T09:28:06Z",
        "updated_at": "2015-01-20T22:23:39Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/87#discussion_r22270432",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/87",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22270432"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/87#discussion_r22270432"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/87"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22276029",
        "pull_request_review_id": null,
        "id": 22276029,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjc2MDI5",
        "diff_hunk": "@@ -77,12 +84,27 @@ func main() {\n \t\treturn\n \t}\n \n-\tserver, err := NewServer(privateKey)\n+\tsigner, err := ssh.ParsePrivateKey(privateKey)\n \tif err != nil {\n-\t\tlogger.Errorf(\"Failed to create server: %v\", err)\n+\t\tlogger.Errorf(\"Failed to prase key: %v\", err)\n \t\treturn\n \t}\n \n+\t// TODO: MakeAuth\n+\tconfig := sshd.MakeNoAuth()\n+\tconfig.AddHostKey(signer)\n+\n+\ts, err := sshd.ListenSSH(options.Bind, config)\n+\tif err != nil {\n+\t\tlogger.Errorf(\"Failed to listen on socket: %v\", err)\n+\t\treturn",
        "path": "cmd.go",
        "position": null,
        "original_position": 72,
        "commit_id": "c4ffd6f26373f9d49c36aaca6ff9a5e814d58af5",
        "original_commit_id": "3bb4bbf991a744cedcc474f545161d7ea2f8b00f",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good point, will add.\n",
        "created_at": "2014-12-26T00:02:42Z",
        "updated_at": "2015-01-20T22:23:39Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/87#discussion_r22276029",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/87",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/22276029"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/87#discussion_r22276029"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/87"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/37563864",
        "pull_request_review_id": null,
        "id": 37563864,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYzODY0",
        "diff_hunk": "@@ -49,7 +49,7 @@ Help Options:\n   -h, --help       Show this help message\n ```\n \n-After doing `go get github.com/shazow/ssh-chat` on this repo, you should be able\n+After doing `go get github.com/shazow/ssh-chat/...` on this repo, you should be able",
        "path": "README.md",
        "position": 5,
        "original_position": 5,
        "commit_id": "6af6d4d23acdd3af7f93d8e64f26e64954c8a443",
        "original_commit_id": "6af6d4d23acdd3af7f93d8e64f26e64954c8a443",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This should be `go get github.com/shazow/ssh-chat/cmd/ssh-chat`. That should do the trick.\n",
        "created_at": "2015-08-20T18:25:23Z",
        "updated_at": "2015-08-20T18:25:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/131#discussion_r37563864",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/131",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/37563864"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/131#discussion_r37563864"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/131"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40354928",
        "pull_request_review_id": null,
        "id": 40354928,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU0OTI4",
        "diff_hunk": "@@ -7,7 +7,7 @@ SRCS = %.go\n all: $(BINARY)\n \n $(BINARY): deps **/**/*.go **/*.go *.go\n-\tgo build -ldflags \"-X main.buildCommit `git describe --long --tags --dirty --always`\" ./cmd/ssh-chat\n+\tCGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags \"-X main.buildCommit `git describe --long --tags --dirty --always`\" ./cmd/ssh-chat",
        "path": "Makefile",
        "position": null,
        "original_position": 5,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "a97d7c016819c7e89a22d9635d729dcb3f331883",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This will break for anyone who wants to run `make` on their own machine that is not linux (e.g. osx).\n",
        "created_at": "2015-09-24T18:33:23Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40354928",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40354928"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40354928"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355004",
        "pull_request_review_id": null,
        "id": 40355004,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU1MDA0",
        "diff_hunk": "@@ -9,9 +13,18 @@ install:\n   - go get github.com/golang/lint/golint\n   - make deps\n \n+go:\n+  - 1.4",
        "path": ".travis.yml",
        "position": null,
        "original_position": 13,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "a97d7c016819c7e89a22d9635d729dcb3f331883",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about we bump it to 1.5 while we're here? (or do we need to specify? will it use the latest by default?)\n",
        "created_at": "2015-09-24T18:34:02Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355004",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355004"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355004"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355089",
        "pull_request_review_id": null,
        "id": 40355089,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU1MDg5",
        "diff_hunk": "@@ -9,9 +13,18 @@ install:\n   - go get github.com/golang/lint/golint\n   - make deps\n \n+go:\n+  - 1.4\n+\n script:\n   # TODO: Bring this back: - fgt golint\n-  - make test",
        "path": ".travis.yml",
        "position": null,
        "original_position": 17,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "a97d7c016819c7e89a22d9635d729dcb3f331883",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We use travis to run tests, I don't want to lose it.\n",
        "created_at": "2015-09-24T18:34:39Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355089",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355089"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355089"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355335",
        "pull_request_review_id": null,
        "id": 40355335,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU1MzM1",
        "diff_hunk": "@@ -7,7 +7,7 @@ SRCS = %.go\n all: $(BINARY)\n \n $(BINARY): deps **/**/*.go **/*.go *.go\n-\tgo build -ldflags \"-X main.buildCommit `git describe --long --tags --dirty --always`\" ./cmd/ssh-chat\n+\tCGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags \"-X main.buildCommit `git describe --long --tags --dirty --always`\" ./cmd/ssh-chat",
        "path": "Makefile",
        "position": null,
        "original_position": 5,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "a97d7c016819c7e89a22d9635d729dcb3f331883",
        "user": {
            "login": "smiller171",
            "id": 3587913,
            "node_id": "MDQ6VXNlcjM1ODc5MTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3587913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smiller171",
            "html_url": "https://github.com/smiller171",
            "followers_url": "https://api.github.com/users/smiller171/followers",
            "following_url": "https://api.github.com/users/smiller171/following{/other_user}",
            "gists_url": "https://api.github.com/users/smiller171/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smiller171/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smiller171/subscriptions",
            "organizations_url": "https://api.github.com/users/smiller171/orgs",
            "repos_url": "https://api.github.com/users/smiller171/repos",
            "events_url": "https://api.github.com/users/smiller171/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smiller171/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're right. I should add an alternate script to build differently in travis\n",
        "created_at": "2015-09-24T18:36:43Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355335",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355335"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355335"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355378",
        "pull_request_review_id": null,
        "id": 40355378,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU1Mzc4",
        "diff_hunk": "@@ -9,9 +13,18 @@ install:\n   - go get github.com/golang/lint/golint\n   - make deps\n \n+go:\n+  - 1.4",
        "path": ".travis.yml",
        "position": null,
        "original_position": 13,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "a97d7c016819c7e89a22d9635d729dcb3f331883",
        "user": {
            "login": "smiller171",
            "id": 3587913,
            "node_id": "MDQ6VXNlcjM1ODc5MTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3587913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smiller171",
            "html_url": "https://github.com/smiller171",
            "followers_url": "https://api.github.com/users/smiller171/followers",
            "following_url": "https://api.github.com/users/smiller171/following{/other_user}",
            "gists_url": "https://api.github.com/users/smiller171/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smiller171/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smiller171/subscriptions",
            "organizations_url": "https://api.github.com/users/smiller171/orgs",
            "repos_url": "https://api.github.com/users/smiller171/repos",
            "events_url": "https://api.github.com/users/smiller171/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smiller171/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it will use the latest by default if you don't specify\n",
        "created_at": "2015-09-24T18:37:07Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355378",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355378"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355378"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355441",
        "pull_request_review_id": null,
        "id": 40355441,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU1NDQx",
        "diff_hunk": "@@ -9,9 +13,18 @@ install:\n   - go get github.com/golang/lint/golint\n   - make deps\n \n+go:\n+  - 1.4\n+\n script:\n   # TODO: Bring this back: - fgt golint\n-  - make test",
        "path": ".travis.yml",
        "position": null,
        "original_position": 17,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "a97d7c016819c7e89a22d9635d729dcb3f331883",
        "user": {
            "login": "smiller171",
            "id": 3587913,
            "node_id": "MDQ6VXNlcjM1ODc5MTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3587913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smiller171",
            "html_url": "https://github.com/smiller171",
            "followers_url": "https://api.github.com/users/smiller171/followers",
            "following_url": "https://api.github.com/users/smiller171/following{/other_user}",
            "gists_url": "https://api.github.com/users/smiller171/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smiller171/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smiller171/subscriptions",
            "organizations_url": "https://api.github.com/users/smiller171/orgs",
            "repos_url": "https://api.github.com/users/smiller171/repos",
            "events_url": "https://api.github.com/users/smiller171/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smiller171/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree, I want to fix this before merging\n",
        "created_at": "2015-09-24T18:37:28Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355441",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355441"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355441"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355498",
        "pull_request_review_id": null,
        "id": 40355498,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU1NDk4",
        "diff_hunk": "@@ -7,7 +7,7 @@ SRCS = %.go\n all: $(BINARY)\n \n $(BINARY): deps **/**/*.go **/*.go *.go\n-\tgo build -ldflags \"-X main.buildCommit `git describe --long --tags --dirty --always`\" ./cmd/ssh-chat\n+\tCGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags \"-X main.buildCommit `git describe --long --tags --dirty --always`\" ./cmd/ssh-chat",
        "path": "Makefile",
        "position": null,
        "original_position": 5,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "a97d7c016819c7e89a22d9635d729dcb3f331883",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about just a standalone script for building the docker image that we can run from travis or locally?\n",
        "created_at": "2015-09-24T18:37:38Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355498",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355498"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355498"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355605",
        "pull_request_review_id": null,
        "id": 40355605,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU1NjA1",
        "diff_hunk": "@@ -9,9 +13,18 @@ install:\n   - go get github.com/golang/lint/golint\n   - make deps\n \n+go:\n+  - 1.4",
        "path": ".travis.yml",
        "position": null,
        "original_position": 13,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "a97d7c016819c7e89a22d9635d729dcb3f331883",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's keep it at the latest, I don't wanna be stuck on 1.4. :)\n",
        "created_at": "2015-09-24T18:38:18Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355605",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40355605"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40355605"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40364417",
        "pull_request_review_id": null,
        "id": 40364417,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0NDE3",
        "diff_hunk": "@@ -0,0 +1,3 @@\n+#!/bin/bash -ex",
        "path": "docker-deploy.sh",
        "position": 1,
        "original_position": 1,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "89c13bfbfc84d38e627208e435110c32cc1b5d62",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can we include all the docker-specific build stuff here so that we don't break the Makefile for non-linux platforms?\n",
        "created_at": "2015-09-24T19:53:19Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40364417",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40364417"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40364417"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40365056",
        "pull_request_review_id": null,
        "id": 40365056,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY1MDU2",
        "diff_hunk": "@@ -0,0 +1,3 @@\n+#!/bin/bash -ex",
        "path": "docker-deploy.sh",
        "position": 1,
        "original_position": 1,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "89c13bfbfc84d38e627208e435110c32cc1b5d62",
        "user": {
            "login": "smiller171",
            "id": 3587913,
            "node_id": "MDQ6VXNlcjM1ODc5MTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3587913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smiller171",
            "html_url": "https://github.com/smiller171",
            "followers_url": "https://api.github.com/users/smiller171/followers",
            "following_url": "https://api.github.com/users/smiller171/following{/other_user}",
            "gists_url": "https://api.github.com/users/smiller171/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smiller171/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smiller171/subscriptions",
            "organizations_url": "https://api.github.com/users/smiller171/orgs",
            "repos_url": "https://api.github.com/users/smiller171/repos",
            "events_url": "https://api.github.com/users/smiller171/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smiller171/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I already removed my changes to the makefile and am instead calling the Go command directly in the travis script.\n",
        "created_at": "2015-09-24T19:58:20Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40365056",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40365056"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40365056"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40365114",
        "pull_request_review_id": null,
        "id": 40365114,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY1MTE0",
        "diff_hunk": "@@ -0,0 +1,3 @@\n+#!/bin/bash -ex",
        "path": "docker-deploy.sh",
        "position": 1,
        "original_position": 1,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "89c13bfbfc84d38e627208e435110c32cc1b5d62",
        "user": {
            "login": "smiller171",
            "id": 3587913,
            "node_id": "MDQ6VXNlcjM1ODc5MTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3587913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smiller171",
            "html_url": "https://github.com/smiller171",
            "followers_url": "https://api.github.com/users/smiller171/followers",
            "following_url": "https://api.github.com/users/smiller171/following{/other_user}",
            "gists_url": "https://api.github.com/users/smiller171/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smiller171/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smiller171/subscriptions",
            "organizations_url": "https://api.github.com/users/smiller171/orgs",
            "repos_url": "https://api.github.com/users/smiller171/repos",
            "events_url": "https://api.github.com/users/smiller171/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smiller171/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "but of course that means make build is no longer being tested...\n",
        "created_at": "2015-09-24T19:58:52Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40365114",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40365114"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40365114"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40365214",
        "pull_request_review_id": null,
        "id": 40365214,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY1MjE0",
        "diff_hunk": "@@ -0,0 +1,3 @@\n+#!/bin/bash -ex",
        "path": "docker-deploy.sh",
        "position": 1,
        "original_position": 1,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "89c13bfbfc84d38e627208e435110c32cc1b5d62",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is that better than containing all docker-related things in here? I'd prefer to keep it in one place.\n",
        "created_at": "2015-09-24T19:59:47Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40365214",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40365214"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40365214"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40365497",
        "pull_request_review_id": null,
        "id": 40365497,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY1NDk3",
        "diff_hunk": "@@ -0,0 +1,3 @@\n+#!/bin/bash -ex",
        "path": "docker-deploy.sh",
        "position": 1,
        "original_position": 1,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "89c13bfbfc84d38e627208e435110c32cc1b5d62",
        "user": {
            "login": "smiller171",
            "id": 3587913,
            "node_id": "MDQ6VXNlcjM1ODc5MTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3587913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smiller171",
            "html_url": "https://github.com/smiller171",
            "followers_url": "https://api.github.com/users/smiller171/followers",
            "following_url": "https://api.github.com/users/smiller171/following{/other_user}",
            "gists_url": "https://api.github.com/users/smiller171/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smiller171/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smiller171/subscriptions",
            "organizations_url": "https://api.github.com/users/smiller171/orgs",
            "repos_url": "https://api.github.com/users/smiller171/repos",
            "events_url": "https://api.github.com/users/smiller171/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smiller171/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I just updated it to build once with make build and then rebuild in the docker deploy script\n",
        "created_at": "2015-09-24T20:02:23Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40365497",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40365497"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40365497"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40366125",
        "pull_request_review_id": null,
        "id": 40366125,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY2MTI1",
        "diff_hunk": "@@ -0,0 +1,3 @@\n+#!/bin/bash -ex",
        "path": "docker-deploy.sh",
        "position": 1,
        "original_position": 1,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "89c13bfbfc84d38e627208e435110c32cc1b5d62",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What's the benefit of having it build in the script step rather than in this bash script?\n",
        "created_at": "2015-09-24T20:08:20Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40366125",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40366125"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40366125"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40372496",
        "pull_request_review_id": null,
        "id": 40372496,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcyNDk2",
        "diff_hunk": "@@ -0,0 +1,3 @@\n+#!/bin/bash -ex",
        "path": "docker-deploy.sh",
        "position": 1,
        "original_position": 1,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "89c13bfbfc84d38e627208e435110c32cc1b5d62",
        "user": {
            "login": "smiller171",
            "id": 3587913,
            "node_id": "MDQ6VXNlcjM1ODc5MTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3587913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smiller171",
            "html_url": "https://github.com/smiller171",
            "followers_url": "https://api.github.com/users/smiller171/followers",
            "following_url": "https://api.github.com/users/smiller171/following{/other_user}",
            "gists_url": "https://api.github.com/users/smiller171/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smiller171/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smiller171/subscriptions",
            "organizations_url": "https://api.github.com/users/smiller171/orgs",
            "repos_url": "https://api.github.com/users/smiller171/repos",
            "events_url": "https://api.github.com/users/smiller171/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smiller171/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's just a better demarkation of where things happen. Build in the script and deploy in the deployment step.\n\nThat said in the context of the way you are running your tests it doesn't make a lot of difference, so I moved it into the deploy script.\n\nI can't figure out why the tests are hanging though. As far as I can tell the only difference that could affect that is that it's now running on their legacy infrastructure (needed to build docker images for now) the tests also won't run for me locally.\n",
        "created_at": "2015-09-24T21:00:10Z",
        "updated_at": "2015-09-24T21:49:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40372496",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40372496"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40372496"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40381080",
        "pull_request_review_id": null,
        "id": 40381080,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxMDgw",
        "diff_hunk": "@@ -0,0 +1,3 @@\n+#!/bin/bash -ex",
        "path": "docker-deploy.sh",
        "position": 1,
        "original_position": 1,
        "commit_id": "806343319db7eea60cfcff4c9ebc2c0ec8150764",
        "original_commit_id": "89c13bfbfc84d38e627208e435110c32cc1b5d62",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sounds good, can you push that change? I'd really like to \"contain\" all the docker-related stuff in just one place. Especially since docker is rapidly changing/unstable and I don't want to go looking through several different files to maintain it. :)\n",
        "created_at": "2015-09-24T22:26:03Z",
        "updated_at": "2015-09-24T22:26:03Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40381080",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/132",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/40381080"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/132#discussion_r40381080"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73221154",
        "pull_request_review_id": null,
        "id": 73221154,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczMjIxMTU0",
        "diff_hunk": "@@ -422,26 +422,32 @@ func (h *Host) InitCommands(c *chat.Commands) {\n \tc.Add(chat.Command{\n \t\tOp:         true,\n \t\tPrefix:     \"/motd\",\n-\t\tPrefixHelp: \"MESSAGE\",\n-\t\tHelp:       \"Set the MESSAGE of the day.\",\n+\t\tPrefixHelp: \"[MESSAGE]\",\n+\t\tHelp:       \"Set a new MESSAGE of the day, print the current motd without parameters.\",\n \t\tHandler: func(room *chat.Room, msg message.CommandMsg) error {\n-\t\t\tif !room.IsOp(msg.From()) {\n-\t\t\t\treturn errors.New(\"must be op\")\n-\t\t\t}\n-\n-\t\t\tmotd := \"\"\n \t\t\targs := msg.Args()\n-\t\t\tif len(args) > 0 {\n-\t\t\t\tmotd = strings.Join(args, \" \")\n-\t\t\t}\n+\t\t\tuser := msg.From()\n+\t\t\tmotd := h.motd\n \n-\t\t\th.motd = motd\n-\t\t\tbody := fmt.Sprintf(\"New message of the day set by %s:\", msg.From().Name())\n-\t\t\troom.Send(message.NewAnnounceMsg(body))\n-\t\t\tif motd != \"\" {\n-\t\t\t\troom.Send(message.NewAnnounceMsg(motd))\n-\t\t\t}\n+\t\t\tif len(args) == 0 {\n+\t\t\t\troom.Send(message.NewSystemMsg(motd, user))\n+\t\t\t} else if !room.IsOp(user) {\n+\t\t\t\treturn errors.New(\"must be OP to modify the MOTD\")\n+\t\t\t} else {",
        "path": "host.go",
        "position": 31,
        "original_position": 31,
        "commit_id": "58d26ca479f9bf823d79f9a098e5682c798bf0ef",
        "original_commit_id": "58d26ca479f9bf823d79f9a098e5682c798bf0ef",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Overall this looks fine, but style-wise I'd prefer to avoid big `else { ... }` blocks in favour of doing early returns for the exceptional conditions before. Such as:\n\n``` go\nif len(args) == 0 {\n    room.Send(message.NewSystemMsg(motd, user))\n    return nil\n}\nif !room.IsOp(user) {\n    return errors.New(\"must be OP to modify the MOTD\")\n}\n... remaining flow goes here\n```\n",
        "created_at": "2016-08-02T19:29:27Z",
        "updated_at": "2016-08-02T19:29:27Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/157#discussion_r73221154",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/157",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73221154"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/157#discussion_r73221154"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73364735",
        "pull_request_review_id": null,
        "id": 73364735,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczMzY0NzM1",
        "diff_hunk": "@@ -422,26 +422,32 @@ func (h *Host) InitCommands(c *chat.Commands) {\n \tc.Add(chat.Command{\n \t\tOp:         true,\n \t\tPrefix:     \"/motd\",\n-\t\tPrefixHelp: \"MESSAGE\",\n-\t\tHelp:       \"Set the MESSAGE of the day.\",\n+\t\tPrefixHelp: \"[MESSAGE]\",\n+\t\tHelp:       \"Set a new MESSAGE of the day, print the current motd without parameters.\",\n \t\tHandler: func(room *chat.Room, msg message.CommandMsg) error {\n-\t\t\tif !room.IsOp(msg.From()) {\n-\t\t\t\treturn errors.New(\"must be op\")\n-\t\t\t}\n-\n-\t\t\tmotd := \"\"\n \t\t\targs := msg.Args()\n-\t\t\tif len(args) > 0 {\n-\t\t\t\tmotd = strings.Join(args, \" \")\n-\t\t\t}\n+\t\t\tuser := msg.From()\n+\t\t\tmotd := h.motd\n \n-\t\t\th.motd = motd\n-\t\t\tbody := fmt.Sprintf(\"New message of the day set by %s:\", msg.From().Name())\n-\t\t\troom.Send(message.NewAnnounceMsg(body))\n-\t\t\tif motd != \"\" {\n-\t\t\t\troom.Send(message.NewAnnounceMsg(motd))\n-\t\t\t}\n+\t\t\tif len(args) == 0 {\n+\t\t\t\troom.Send(message.NewSystemMsg(motd, user))\n+\t\t\t} else if !room.IsOp(user) {\n+\t\t\t\treturn errors.New(\"must be OP to modify the MOTD\")\n+\t\t\t} else {",
        "path": "host.go",
        "position": 31,
        "original_position": 31,
        "commit_id": "58d26ca479f9bf823d79f9a098e5682c798bf0ef",
        "original_commit_id": "58d26ca479f9bf823d79f9a098e5682c798bf0ef",
        "user": {
            "login": "aaronwinter",
            "id": 7871622,
            "node_id": "MDQ6VXNlcjc4NzE2MjI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7871622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronwinter",
            "html_url": "https://github.com/aaronwinter",
            "followers_url": "https://api.github.com/users/aaronwinter/followers",
            "following_url": "https://api.github.com/users/aaronwinter/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronwinter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronwinter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronwinter/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronwinter/orgs",
            "repos_url": "https://api.github.com/users/aaronwinter/repos",
            "events_url": "https://api.github.com/users/aaronwinter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronwinter/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah that will be cleaner, thanks\n",
        "created_at": "2016-08-03T15:56:49Z",
        "updated_at": "2016-08-03T15:56:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/157#discussion_r73364735",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/157",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73364735"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/157#discussion_r73364735"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73792637",
        "pull_request_review_id": null,
        "id": 73792637,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzkyNjM3",
        "diff_hunk": "@@ -14,3 +14,7 @@\n \tpath = vendor/github.com/shazow/rateio\n \turl = https://github.com/shazow/rateio\n \tbranch = master\n+[submodule \"vendor/github.com/dustin/go-humanize\"]",
        "path": ".gitmodules",
        "position": 4,
        "original_position": 4,
        "commit_id": "9fa14ead57ba5e2195b4a9a3f39bd617803f676a",
        "original_commit_id": "6cafa52496fb9adff466c8044ded0a10c77044f8",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Try doing `git submodule add https://github.com/dustin/go-humanize vendor/github.com/dustin/go-humanize`, I think it needs to pin the commit somewhere too.\n",
        "created_at": "2016-08-06T22:03:16Z",
        "updated_at": "2016-08-06T22:14:32Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/192#discussion_r73792637",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/192",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73792637"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/192#discussion_r73792637"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73792642",
        "pull_request_review_id": null,
        "id": 73792642,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzkyNjQy",
        "diff_hunk": "@@ -39,14 +42,28 @@ func (i Identity) Name() string {\n \treturn i.id\n }\n \n+// Whois returns a full whois description.\n func (i Identity) Whois() string {\n \tip, _, _ := net.SplitHostPort(i.RemoteAddr().String())\n \tfingerprint := \"(no public key)\"\n \tif i.PublicKey() != nil {\n \t\tfingerprint = sshd.Fingerprint(i.PublicKey())\n \t}\n-\t// TODO: Include time joined, client, etc.\n-\treturn fmt.Sprintf(\"name: %s\"+message.Newline+\n-\t\t\" > ip: %s\"+message.Newline+\n-\t\t\" > fingerprint: %s\", i.Name(), ip, fingerprint)\n+\treturn \"name: \" + i.Name() + message.Newline +\n+\t\t\" > ip: \" + ip + message.Newline +\n+\t\t\" > fingerprint: \" + fingerprint + message.Newline +\n+\t\t\" > client: \" + chat.SanitizeData(string(i.ClientVersion())) + message.Newline +\n+\t\t\" > joined: \" + humanize.Time(i.created)\n+}\n+\n+// WhoisNoIP returns a whois description without including the IP.\n+func (i Identity) WhoisNoIP() string {",
        "path": "identity.go",
        "position": null,
        "original_position": 53,
        "commit_id": "9fa14ead57ba5e2195b4a9a3f39bd617803f676a",
        "original_commit_id": "6cafa52496fb9adff466c8044ded0a10c77044f8",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about we do `Whois` and `WhoisAdmin` which has extra stuff?\n",
        "created_at": "2016-08-06T22:03:41Z",
        "updated_at": "2016-08-06T22:14:32Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/192#discussion_r73792642",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/192",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73792642"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/192#discussion_r73792642"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73792652",
        "pull_request_review_id": null,
        "id": 73792652,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzkyNjUy",
        "diff_hunk": "@@ -39,14 +42,28 @@ func (i Identity) Name() string {\n \treturn i.id\n }\n \n+// Whois returns a full whois description.\n func (i Identity) Whois() string {\n \tip, _, _ := net.SplitHostPort(i.RemoteAddr().String())\n \tfingerprint := \"(no public key)\"\n \tif i.PublicKey() != nil {\n \t\tfingerprint = sshd.Fingerprint(i.PublicKey())\n \t}\n-\t// TODO: Include time joined, client, etc.\n-\treturn fmt.Sprintf(\"name: %s\"+message.Newline+\n-\t\t\" > ip: %s\"+message.Newline+\n-\t\t\" > fingerprint: %s\", i.Name(), ip, fingerprint)\n+\treturn \"name: \" + i.Name() + message.Newline +\n+\t\t\" > ip: \" + ip + message.Newline +\n+\t\t\" > fingerprint: \" + fingerprint + message.Newline +\n+\t\t\" > client: \" + chat.SanitizeData(string(i.ClientVersion())) + message.Newline +\n+\t\t\" > joined: \" + humanize.Time(i.created)\n+}\n+\n+// WhoisNoIP returns a whois description without including the IP.\n+func (i Identity) WhoisNoIP() string {",
        "path": "identity.go",
        "position": null,
        "original_position": 53,
        "commit_id": "9fa14ead57ba5e2195b4a9a3f39bd617803f676a",
        "original_commit_id": "6cafa52496fb9adff466c8044ded0a10c77044f8",
        "user": {
            "login": "dmitshur",
            "id": 1924134,
            "node_id": "MDQ6VXNlcjE5MjQxMzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1924134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmitshur",
            "html_url": "https://github.com/dmitshur",
            "followers_url": "https://api.github.com/users/dmitshur/followers",
            "following_url": "https://api.github.com/users/dmitshur/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmitshur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmitshur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmitshur/subscriptions",
            "organizations_url": "https://api.github.com/users/dmitshur/orgs",
            "repos_url": "https://api.github.com/users/dmitshur/repos",
            "events_url": "https://api.github.com/users/dmitshur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmitshur/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok.\n",
        "created_at": "2016-08-06T22:04:21Z",
        "updated_at": "2016-08-06T22:14:32Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/192#discussion_r73792652",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/192",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73792652"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/192#discussion_r73792652"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/192"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73791698",
        "pull_request_review_id": null,
        "id": 73791698,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzkxNjk4",
        "diff_hunk": "@@ -170,8 +170,38 @@ func readableColors256() *Palette {\n \treturn &p\n }\n \n+// A palette of colors ranging from 125 to 232\n+func brightColors() *Palette {\n+\tsize := 107\n+\tp := Palette{\n+\t\tcolors: make([]Style, size),\n+\t\tsize:   size,\n+\t}\n+\tj := 0\n+\tfor i := 125; i < 232; i++ {\n+\t\tp.colors[j] = Color256(i)\n+\t\tj++\n+\t}\n+\treturn &p\n+}\n+\n+// Hacker Green theme (only one color)\n+func hackerColors() *Palette {\n+\tsize := 2\n+\tp := Palette{\n+\t\tcolors: make([]Style, size),\n+\t\tsize:   size,\n+\t}\n+\tp.colors[0] = Color256(82) // bug: zero division for 1-color themes",
        "path": "chat/message/theme.go",
        "position": null,
        "original_position": 26,
        "commit_id": "a4671ac2625934b12739aaf485162f4ea7719a49",
        "original_commit_id": "778863a5affbd1752b38d8114cc9778c51cb951a",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Where does the bug come up? (Stack trace would be helpful)\n",
        "created_at": "2016-08-06T20:38:26Z",
        "updated_at": "2016-08-07T19:26:55Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/190#discussion_r73791698",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/190",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73791698"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/190#discussion_r73791698"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/190"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73882364",
        "pull_request_review_id": null,
        "id": 73882364,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczODgyMzY0",
        "diff_hunk": "@@ -173,8 +173,35 @@ func readableColors256() *Palette {\n \treturn &p\n }\n \n+// A theme that users Solarized Dark accents\n+func solardkColors() *Palette {",
        "path": "chat/message/theme.go",
        "position": null,
        "original_position": 5,
        "commit_id": "825926eeef05995675362d8a12a33e32c6232637",
        "original_commit_id": "09449a8124e29179016cf0b431b3e669cfe30b73",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd sleep better if this was `solarDarkColors` :)\n",
        "created_at": "2016-08-08T14:16:57Z",
        "updated_at": "2016-08-08T17:20:02Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/196#discussion_r73882364",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/196",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73882364"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/196#discussion_r73882364"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/196"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789527",
        "pull_request_review_id": null,
        "id": 73789527,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzg5NTI3",
        "diff_hunk": "@@ -107,9 +117,7 @@ func TestHostNameCollision(t *testing.T) {\n \t\tscanner := bufio.NewScanner(r)\n \n \t\t// Consume the initial buffer\n-\t\tscanner.Scan()",
        "path": "host_test.go",
        "position": 27,
        "original_position": 27,
        "commit_id": "293921480ba610bbc85c20446d35c6b8b8efb8bd",
        "original_commit_id": "2236259e3e73d5902d46f633181164ef73db39d0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "-0.5 on this change, not worth it unless we're doing this for large N (like >5). More clear to avoid the extra indirection otherwise.\n",
        "created_at": "2016-08-06T17:57:18Z",
        "updated_at": "2016-08-12T18:17:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789527",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/189",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789527"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789527"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/189"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789548",
        "pull_request_review_id": null,
        "id": 73789548,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzg5NTQ4",
        "diff_hunk": "@@ -124,6 +132,87 @@ func TestHostNameCollision(t *testing.T) {\n \t<-done\n }\n \n+func TestMotdCommand(t *testing.T) {\n+\tkey, err := sshd.NewRandomSigner(512)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tauth := NewAuth()\n+\tconfig := sshd.MakeAuth(auth)\n+\tconfig.AddHostKey(key)\n+\n+\ts, err := sshd.ListenSSH(\"localhost:0\", config)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tdefer s.Close()\n+\thost := NewHost(s, auth)\n+\tgo host.Serve()\n+\n+\terr = sshd.ConnectShell(s.Addr().String(), \"baz\", func(r io.Reader, w io.WriteCloser) error {\n+\t\tif err != nil {\n+\t\t\tt.Error(err)\n+\t\t}\n+\t\tmember, _ := host.Room.MemberById(\"baz\")\n+\t\tif member == nil {\n+\t\t\treturn errors.New(\"failed to load MemberById\")\n+\t\t}\n+\n+\t\tscanner := bufio.NewScanner(r)\n+\t\ttestMotd := \"foobar\"\n+\t\thost.motd = testMotd\n+\n+\t\t// Test as regular user with no parameters - expected behaviour: should print the MOTD\n+\t\tw.Write([]byte(\"/motd\\r\\n\"))\n+\n+\t\t// Consuming buffer\n+\t\tnextScanToken(scanner, 3)\n+\n+\t\tactual := scanner.Text()\n+\t\tactual = stripPrompt(actual)[3:]\n+\t\texpected := \"foobar\"\n+\t\tif strings.Compare(actual, expected) != 0 {\n+\t\t\tt.Error(\"failed to print MOTD using /motd with no parameters\", \"actual:\", actual, \"expected:\", expected)\n+\t\t}\n+\n+\t\t// Test as regular user - expected behaviour: should return an error\n+\t\tw.Write([]byte(\"/motd foobarbaz\\r\\n\"))\n+\t\tif strings.Compare(host.motd, \"foobar\") != 0 {\n+\t\t\tt.Error(\"failed to hinder non-OPs to modify the MOTD\")\n+\t\t}\n+\n+\t\t// Test as OP - expected behaviour: should modify the MOTD\n+\t\thost.Room.Ops.Add(member)\n+\t\ttestMotd = \"barfoo\"\n+\t\tw.Write([]byte(\"/motd barfoo\\r\\n\"))\n+\n+\t\t// Fix this during the code-review process\n+\t\ttime.Sleep(time.Millisecond * 500)\n+\n+\t\tif strings.Compare(host.motd, testMotd) != 0 {\n+\t\t\tt.Error(\"failed to allow OPs to modify the MOTD\")\n+\t\t}\n+\n+\t\t// Get around rate limitation\n+\t\ttime.Sleep(time.Second * 3)",
        "path": "host_test.go",
        "position": 101,
        "original_position": 101,
        "commit_id": "293921480ba610bbc85c20446d35c6b8b8efb8bd",
        "original_commit_id": "2236259e3e73d5902d46f633181164ef73db39d0",
        "user": {
            "login": "aaronwinter",
            "id": 7871622,
            "node_id": "MDQ6VXNlcjc4NzE2MjI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7871622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronwinter",
            "html_url": "https://github.com/aaronwinter",
            "followers_url": "https://api.github.com/users/aaronwinter/followers",
            "following_url": "https://api.github.com/users/aaronwinter/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronwinter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronwinter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronwinter/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronwinter/orgs",
            "repos_url": "https://api.github.com/users/aaronwinter/repos",
            "events_url": "https://api.github.com/users/aaronwinter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronwinter/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So it seems that it takes a little time for the host ds to \"commit\" the changes made through `/motd`(at least on my local machine)\n",
        "created_at": "2016-08-06T17:58:33Z",
        "updated_at": "2016-08-12T18:17:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789548",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/189",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789548"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789548"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/189"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789561",
        "pull_request_review_id": null,
        "id": 73789561,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzg5NTYx",
        "diff_hunk": "@@ -124,6 +132,87 @@ func TestHostNameCollision(t *testing.T) {\n \t<-done\n }\n \n+func TestMotdCommand(t *testing.T) {\n+\tkey, err := sshd.NewRandomSigner(512)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tauth := NewAuth()\n+\tconfig := sshd.MakeAuth(auth)\n+\tconfig.AddHostKey(key)\n+\n+\ts, err := sshd.ListenSSH(\"localhost:0\", config)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tdefer s.Close()\n+\thost := NewHost(s, auth)\n+\tgo host.Serve()\n+\n+\terr = sshd.ConnectShell(s.Addr().String(), \"baz\", func(r io.Reader, w io.WriteCloser) error {\n+\t\tif err != nil {\n+\t\t\tt.Error(err)\n+\t\t}\n+\t\tmember, _ := host.Room.MemberById(\"baz\")\n+\t\tif member == nil {\n+\t\t\treturn errors.New(\"failed to load MemberById\")\n+\t\t}\n+\n+\t\tscanner := bufio.NewScanner(r)\n+\t\ttestMotd := \"foobar\"\n+\t\thost.motd = testMotd\n+\n+\t\t// Test as regular user with no parameters - expected behaviour: should print the MOTD\n+\t\tw.Write([]byte(\"/motd\\r\\n\"))\n+\n+\t\t// Consuming buffer\n+\t\tnextScanToken(scanner, 3)\n+\n+\t\tactual := scanner.Text()\n+\t\tactual = stripPrompt(actual)[3:]\n+\t\texpected := \"foobar\"\n+\t\tif strings.Compare(actual, expected) != 0 {\n+\t\t\tt.Error(\"failed to print MOTD using /motd with no parameters\", \"actual:\", actual, \"expected:\", expected)\n+\t\t}\n+\n+\t\t// Test as regular user - expected behaviour: should return an error\n+\t\tw.Write([]byte(\"/motd foobarbaz\\r\\n\"))\n+\t\tif strings.Compare(host.motd, \"foobar\") != 0 {\n+\t\t\tt.Error(\"failed to hinder non-OPs to modify the MOTD\")\n+\t\t}\n+\n+\t\t// Test as OP - expected behaviour: should modify the MOTD\n+\t\thost.Room.Ops.Add(member)\n+\t\ttestMotd = \"barfoo\"\n+\t\tw.Write([]byte(\"/motd barfoo\\r\\n\"))\n+\n+\t\t// Fix this during the code-review process\n+\t\ttime.Sleep(time.Millisecond * 500)\n+\n+\t\tif strings.Compare(host.motd, testMotd) != 0 {",
        "path": "host_test.go",
        "position": 96,
        "original_position": 96,
        "commit_id": "293921480ba610bbc85c20446d35c6b8b8efb8bd",
        "original_commit_id": "2236259e3e73d5902d46f633181164ef73db39d0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd get rid of this check and the time.Sleeps, then it should work by reading the response of /motd as the client.\n",
        "created_at": "2016-08-06T17:59:10Z",
        "updated_at": "2016-08-12T18:17:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789561",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/189",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789561"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789561"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/189"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789573",
        "pull_request_review_id": null,
        "id": 73789573,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzg5NTcz",
        "diff_hunk": "@@ -124,6 +132,87 @@ func TestHostNameCollision(t *testing.T) {\n \t<-done\n }\n \n+func TestMotdCommand(t *testing.T) {\n+\tkey, err := sshd.NewRandomSigner(512)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tauth := NewAuth()\n+\tconfig := sshd.MakeAuth(auth)\n+\tconfig.AddHostKey(key)\n+\n+\ts, err := sshd.ListenSSH(\"localhost:0\", config)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tdefer s.Close()\n+\thost := NewHost(s, auth)\n+\tgo host.Serve()\n+\n+\terr = sshd.ConnectShell(s.Addr().String(), \"baz\", func(r io.Reader, w io.WriteCloser) error {\n+\t\tif err != nil {\n+\t\t\tt.Error(err)\n+\t\t}\n+\t\tmember, _ := host.Room.MemberById(\"baz\")\n+\t\tif member == nil {\n+\t\t\treturn errors.New(\"failed to load MemberById\")\n+\t\t}\n+\n+\t\tscanner := bufio.NewScanner(r)\n+\t\ttestMotd := \"foobar\"\n+\t\thost.motd = testMotd\n+\n+\t\t// Test as regular user with no parameters - expected behaviour: should print the MOTD\n+\t\tw.Write([]byte(\"/motd\\r\\n\"))\n+\n+\t\t// Consuming buffer\n+\t\tnextScanToken(scanner, 3)\n+\n+\t\tactual := scanner.Text()\n+\t\tactual = stripPrompt(actual)[3:]\n+\t\texpected := \"foobar\"\n+\t\tif strings.Compare(actual, expected) != 0 {\n+\t\t\tt.Error(\"failed to print MOTD using /motd with no parameters\", \"actual:\", actual, \"expected:\", expected)\n+\t\t}\n+\n+\t\t// Test as regular user - expected behaviour: should return an error\n+\t\tw.Write([]byte(\"/motd foobarbaz\\r\\n\"))\n+\t\tif strings.Compare(host.motd, \"foobar\") != 0 {\n+\t\t\tt.Error(\"failed to hinder non-OPs to modify the MOTD\")\n+\t\t}\n+\n+\t\t// Test as OP - expected behaviour: should modify the MOTD\n+\t\thost.Room.Ops.Add(member)\n+\t\ttestMotd = \"barfoo\"\n+\t\tw.Write([]byte(\"/motd barfoo\\r\\n\"))\n+\n+\t\t// Fix this during the code-review process\n+\t\ttime.Sleep(time.Millisecond * 500)\n+\n+\t\tif strings.Compare(host.motd, testMotd) != 0 {\n+\t\t\tt.Error(\"failed to allow OPs to modify the MOTD\")\n+\t\t}\n+\n+\t\t// Get around rate limitation\n+\t\ttime.Sleep(time.Second * 3)",
        "path": "host_test.go",
        "position": 101,
        "original_position": 101,
        "commit_id": "293921480ba610bbc85c20446d35c6b8b8efb8bd",
        "original_commit_id": "2236259e3e73d5902d46f633181164ef73db39d0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is checking the response of `/motd` unreliable?\n",
        "created_at": "2016-08-06T17:59:54Z",
        "updated_at": "2016-08-12T18:17:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789573",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/189",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789573"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789573"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/189"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789839",
        "pull_request_review_id": null,
        "id": 73789839,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzg5ODM5",
        "diff_hunk": "@@ -124,6 +132,87 @@ func TestHostNameCollision(t *testing.T) {\n \t<-done\n }\n \n+func TestMotdCommand(t *testing.T) {\n+\tkey, err := sshd.NewRandomSigner(512)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tauth := NewAuth()\n+\tconfig := sshd.MakeAuth(auth)\n+\tconfig.AddHostKey(key)\n+\n+\ts, err := sshd.ListenSSH(\"localhost:0\", config)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tdefer s.Close()\n+\thost := NewHost(s, auth)\n+\tgo host.Serve()\n+\n+\terr = sshd.ConnectShell(s.Addr().String(), \"baz\", func(r io.Reader, w io.WriteCloser) error {\n+\t\tif err != nil {\n+\t\t\tt.Error(err)\n+\t\t}\n+\t\tmember, _ := host.Room.MemberById(\"baz\")\n+\t\tif member == nil {\n+\t\t\treturn errors.New(\"failed to load MemberById\")\n+\t\t}\n+\n+\t\tscanner := bufio.NewScanner(r)\n+\t\ttestMotd := \"foobar\"\n+\t\thost.motd = testMotd\n+\n+\t\t// Test as regular user with no parameters - expected behaviour: should print the MOTD\n+\t\tw.Write([]byte(\"/motd\\r\\n\"))\n+\n+\t\t// Consuming buffer\n+\t\tnextScanToken(scanner, 3)\n+\n+\t\tactual := scanner.Text()\n+\t\tactual = stripPrompt(actual)[3:]\n+\t\texpected := \"foobar\"\n+\t\tif strings.Compare(actual, expected) != 0 {\n+\t\t\tt.Error(\"failed to print MOTD using /motd with no parameters\", \"actual:\", actual, \"expected:\", expected)\n+\t\t}\n+\n+\t\t// Test as regular user - expected behaviour: should return an error\n+\t\tw.Write([]byte(\"/motd foobarbaz\\r\\n\"))\n+\t\tif strings.Compare(host.motd, \"foobar\") != 0 {\n+\t\t\tt.Error(\"failed to hinder non-OPs to modify the MOTD\")\n+\t\t}\n+\n+\t\t// Test as OP - expected behaviour: should modify the MOTD\n+\t\thost.Room.Ops.Add(member)\n+\t\ttestMotd = \"barfoo\"\n+\t\tw.Write([]byte(\"/motd barfoo\\r\\n\"))\n+\n+\t\t// Fix this during the code-review process\n+\t\ttime.Sleep(time.Millisecond * 500)\n+\n+\t\tif strings.Compare(host.motd, testMotd) != 0 {\n+\t\t\tt.Error(\"failed to allow OPs to modify the MOTD\")\n+\t\t}\n+\n+\t\t// Get around rate limitation\n+\t\ttime.Sleep(time.Second * 3)",
        "path": "host_test.go",
        "position": 101,
        "original_position": 101,
        "commit_id": "293921480ba610bbc85c20446d35c6b8b8efb8bd",
        "original_commit_id": "2236259e3e73d5902d46f633181164ef73db39d0",
        "user": {
            "login": "aaronwinter",
            "id": 7871622,
            "node_id": "MDQ6VXNlcjc4NzE2MjI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7871622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronwinter",
            "html_url": "https://github.com/aaronwinter",
            "followers_url": "https://api.github.com/users/aaronwinter/followers",
            "following_url": "https://api.github.com/users/aaronwinter/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronwinter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronwinter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronwinter/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronwinter/orgs",
            "repos_url": "https://api.github.com/users/aaronwinter/repos",
            "events_url": "https://api.github.com/users/aaronwinter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronwinter/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think so but wouldn't we face the exact same problem (using `time.Sleep`) by reading the response from `/motd` instead of `h.motd`? If `h.motd`hasn't had \"enough time\" to commit the changes made from the user prompt then `/motd` will also return an obsolete MOTD. Wdyt?\n",
        "created_at": "2016-08-06T18:26:54Z",
        "updated_at": "2016-08-12T18:17:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789839",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/189",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789839"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789839"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/189"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789916",
        "pull_request_review_id": null,
        "id": 73789916,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzg5OTE2",
        "diff_hunk": "@@ -107,9 +117,7 @@ func TestHostNameCollision(t *testing.T) {\n \t\tscanner := bufio.NewScanner(r)\n \n \t\t// Consume the initial buffer\n-\t\tscanner.Scan()",
        "path": "host_test.go",
        "position": 27,
        "original_position": 27,
        "commit_id": "293921480ba610bbc85c20446d35c6b8b8efb8bd",
        "original_commit_id": "2236259e3e73d5902d46f633181164ef73db39d0",
        "user": {
            "login": "aaronwinter",
            "id": 7871622,
            "node_id": "MDQ6VXNlcjc4NzE2MjI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7871622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronwinter",
            "html_url": "https://github.com/aaronwinter",
            "followers_url": "https://api.github.com/users/aaronwinter/followers",
            "following_url": "https://api.github.com/users/aaronwinter/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronwinter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronwinter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronwinter/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronwinter/orgs",
            "repos_url": "https://api.github.com/users/aaronwinter/repos",
            "events_url": "https://api.github.com/users/aaronwinter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronwinter/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think there are only one case where N>5 (:> N=8) - do you think it is worth keeping the function then? The eight calls to `scanner.Scan()` aren't \"pretty\" but at least there is one way to do it (decrease the cognitive cost of figuring out what is going on). Wdyt?\n",
        "created_at": "2016-08-06T18:32:47Z",
        "updated_at": "2016-08-12T18:17:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789916",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/189",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73789916"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73789916"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/189"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73790229",
        "pull_request_review_id": null,
        "id": 73790229,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzkwMjI5",
        "diff_hunk": "@@ -124,6 +132,87 @@ func TestHostNameCollision(t *testing.T) {\n \t<-done\n }\n \n+func TestMotdCommand(t *testing.T) {\n+\tkey, err := sshd.NewRandomSigner(512)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tauth := NewAuth()\n+\tconfig := sshd.MakeAuth(auth)\n+\tconfig.AddHostKey(key)\n+\n+\ts, err := sshd.ListenSSH(\"localhost:0\", config)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tdefer s.Close()\n+\thost := NewHost(s, auth)\n+\tgo host.Serve()\n+\n+\terr = sshd.ConnectShell(s.Addr().String(), \"baz\", func(r io.Reader, w io.WriteCloser) error {\n+\t\tif err != nil {\n+\t\t\tt.Error(err)\n+\t\t}\n+\t\tmember, _ := host.Room.MemberById(\"baz\")\n+\t\tif member == nil {\n+\t\t\treturn errors.New(\"failed to load MemberById\")\n+\t\t}\n+\n+\t\tscanner := bufio.NewScanner(r)\n+\t\ttestMotd := \"foobar\"\n+\t\thost.motd = testMotd\n+\n+\t\t// Test as regular user with no parameters - expected behaviour: should print the MOTD\n+\t\tw.Write([]byte(\"/motd\\r\\n\"))\n+\n+\t\t// Consuming buffer\n+\t\tnextScanToken(scanner, 3)\n+\n+\t\tactual := scanner.Text()\n+\t\tactual = stripPrompt(actual)[3:]\n+\t\texpected := \"foobar\"\n+\t\tif strings.Compare(actual, expected) != 0 {\n+\t\t\tt.Error(\"failed to print MOTD using /motd with no parameters\", \"actual:\", actual, \"expected:\", expected)\n+\t\t}\n+\n+\t\t// Test as regular user - expected behaviour: should return an error\n+\t\tw.Write([]byte(\"/motd foobarbaz\\r\\n\"))\n+\t\tif strings.Compare(host.motd, \"foobar\") != 0 {\n+\t\t\tt.Error(\"failed to hinder non-OPs to modify the MOTD\")\n+\t\t}\n+\n+\t\t// Test as OP - expected behaviour: should modify the MOTD\n+\t\thost.Room.Ops.Add(member)\n+\t\ttestMotd = \"barfoo\"\n+\t\tw.Write([]byte(\"/motd barfoo\\r\\n\"))\n+\n+\t\t// Fix this during the code-review process\n+\t\ttime.Sleep(time.Millisecond * 500)\n+\n+\t\tif strings.Compare(host.motd, testMotd) != 0 {\n+\t\t\tt.Error(\"failed to allow OPs to modify the MOTD\")\n+\t\t}\n+\n+\t\t// Get around rate limitation\n+\t\ttime.Sleep(time.Second * 3)",
        "path": "host_test.go",
        "position": 101,
        "original_position": 101,
        "commit_id": "293921480ba610bbc85c20446d35c6b8b8efb8bd",
        "original_commit_id": "2236259e3e73d5902d46f633181164ef73db39d0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Doesn't reading block until the line is available? So if we know how many lines to expect, we can read until they're there?\n",
        "created_at": "2016-08-06T18:55:02Z",
        "updated_at": "2016-08-12T18:17:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73790229",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/189",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73790229"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73790229"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/189"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73790231",
        "pull_request_review_id": null,
        "id": 73790231,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzkwMjMx",
        "diff_hunk": "@@ -107,9 +117,7 @@ func TestHostNameCollision(t *testing.T) {\n \t\tscanner := bufio.NewScanner(r)\n \n \t\t// Consume the initial buffer\n-\t\tscanner.Scan()",
        "path": "host_test.go",
        "position": 27,
        "original_position": 27,
        "commit_id": "293921480ba610bbc85c20446d35c6b8b8efb8bd",
        "original_commit_id": "2236259e3e73d5902d46f633181164ef73db39d0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah fair enough, let's hang onto it for now.\n",
        "created_at": "2016-08-06T18:55:14Z",
        "updated_at": "2016-08-12T18:17:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73790231",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/189",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/73790231"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/189#discussion_r73790231"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/189"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/79022245",
        "pull_request_review_id": 218155,
        "id": 79022245,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5MDIyMjQ1",
        "diff_hunk": "@@ -39,3 +39,5 @@ release:\n \tGOOS=linux GOARCH=386 $(LDFLAGS) ./build_release \"github.com/shazow/ssh-chat/cmd/ssh-chat\" README.md LICENSE\n \tGOOS=darwin GOARCH=amd64 $(LDFLAGS) ./build_release \"github.com/shazow/ssh-chat/cmd/ssh-chat\" README.md LICENSE\n \tGOOS=freebsd GOARCH=amd64 $(LDFLAGS) ./build_release \"github.com/shazow/ssh-chat/cmd/ssh-chat\" README.md LICENSE\n+\tGOOS=windows GOARCH=386 $(LDFLAGS) ./build_release \"github.com/shazow/ssh-chat/cmd/ssh-chat\" README.md LICENSE",
        "path": "Makefile",
        "position": 4,
        "original_position": 4,
        "commit_id": "8e25b81f40d5847e3d4906537324a982b9c68306",
        "original_commit_id": "db03222bc51315ef9e8ac5c9655563608891d197",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's do just one arch for Windows. Which one do you think is more common?\n",
        "created_at": "2016-09-15T17:47:52Z",
        "updated_at": "2016-09-15T17:52:18Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/218#discussion_r79022245",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/218",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/79022245"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/218#discussion_r79022245"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/218"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/79022976",
        "pull_request_review_id": 218875,
        "id": 79022976,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5MDIyOTc2",
        "diff_hunk": "@@ -39,3 +39,5 @@ release:\n \tGOOS=linux GOARCH=386 $(LDFLAGS) ./build_release \"github.com/shazow/ssh-chat/cmd/ssh-chat\" README.md LICENSE\n \tGOOS=darwin GOARCH=amd64 $(LDFLAGS) ./build_release \"github.com/shazow/ssh-chat/cmd/ssh-chat\" README.md LICENSE\n \tGOOS=freebsd GOARCH=amd64 $(LDFLAGS) ./build_release \"github.com/shazow/ssh-chat/cmd/ssh-chat\" README.md LICENSE\n+\tGOOS=windows GOARCH=386 $(LDFLAGS) ./build_release \"github.com/shazow/ssh-chat/cmd/ssh-chat\" README.md LICENSE",
        "path": "Makefile",
        "position": 4,
        "original_position": 4,
        "commit_id": "8e25b81f40d5847e3d4906537324a982b9c68306",
        "original_commit_id": "db03222bc51315ef9e8ac5c9655563608891d197",
        "user": {
            "login": "zorchenhimer",
            "id": 6540297,
            "node_id": "MDQ6VXNlcjY1NDAyOTc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6540297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zorchenhimer",
            "html_url": "https://github.com/zorchenhimer",
            "followers_url": "https://api.github.com/users/zorchenhimer/followers",
            "following_url": "https://api.github.com/users/zorchenhimer/following{/other_user}",
            "gists_url": "https://api.github.com/users/zorchenhimer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zorchenhimer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zorchenhimer/subscriptions",
            "organizations_url": "https://api.github.com/users/zorchenhimer/orgs",
            "repos_url": "https://api.github.com/users/zorchenhimer/repos",
            "events_url": "https://api.github.com/users/zorchenhimer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zorchenhimer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "386 will work on amd64, but not the other way around.  For most coverage, I'd go with 386.\n",
        "created_at": "2016-09-15T17:51:10Z",
        "updated_at": "2016-09-15T17:52:18Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/218#discussion_r79022976",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/218",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/79022976"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/218#discussion_r79022976"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/218"
            }
        },
        "in_reply_to_id": 79022245
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88922856",
        "pull_request_review_id": 9479197,
        "id": 88922856,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4OTIyODU2",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {",
        "path": "set/name_trie.go",
        "position": 12,
        "original_position": 12,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "constructor is private, but struct is public\u2014this should be the reverse because an external package can't create the struct due to private fields.",
        "created_at": "2016-11-21T15:50:16Z",
        "updated_at": "2016-11-21T16:09:17Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88922856",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88922856"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88922856"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88923425",
        "pull_request_review_id": 9479197,
        "id": 88923425,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4OTIzNDI1",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }",
        "path": "set/name_trie.go",
        "position": 40,
        "original_position": 40,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Style: Probably better to break up the for loop into 3 lines, don't think I ever see code like this in one line. It's not inherently bad, just uncommon.",
        "created_at": "2016-11-21T15:52:20Z",
        "updated_at": "2016-11-21T16:09:17Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88923425",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88923425"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88923425"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88924330",
        "pull_request_review_id": 9479197,
        "id": 88924330,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4OTI0MzMw",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {",
        "path": "set/name_trie.go",
        "position": 38,
        "original_position": 38,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "(Premature) optimization opportunity: This loops over the elements 3 times, could be done in 1 (by keeping the results sorted on insert) or 2 passes (accumulating to a sorted datastructure).",
        "created_at": "2016-11-21T15:55:51Z",
        "updated_at": "2016-11-21T16:09:17Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88924330",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88924330"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88924330"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88925696",
        "pull_request_review_id": 9479197,
        "id": 88925696,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4OTI1Njk2",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }\n+    sort.Strings(keys)\n+    sorted_runes := []rune{}\n+    for i := range(keys){ sorted_runes = append(sorted_runes, rune(keys[i][0]))}\n+    return sorted_runes\n+}\n+\n+func (tree *NameTrie) traverse(remainder []rune, create bool) (nextTree *NameTrie, ok bool) {\n+    nextRune := remainder[0]\n+    nextTree, ok = tree.children[nextRune]\n+    if !ok {\n+        if create {\n+            tree.children[nextRune] = createNameTrie()\n+            nextTree = tree.children[nextRune]\n+        } else {\n+            return createNameTrie(), false\n+        }\n+    }\n+    if len(remainder) < 2 {\n+        return nextTree, true\n+    } else {\n+        return nextTree.traverse(remainder[1:], create)\n+    }\n+}\n+\n+func (tree *NameTrie) FirstName(name string) (string, bool){\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    searchingName, nameFound := \"\", false\n+    if ok {\n+        c := make(chan string)\n+        go func(){",
        "path": "set/name_trie.go",
        "position": 71,
        "original_position": 71,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Helper libraries should avoid using goroutines unless the problem is inherently distributed. At minimum, should provide a procedural (not sure if that's the right word?) implementation first, then an optional concurrent implementation on top of it.\r\n\r\nGenerally, goroutines should be used at the highest level possible, ideally by the top-level consumer. Surprise goroutines buried deep in libraries tend to complicate things.\r\n\r\nAlso, for the sake of making your own life easier. Go makes concurrency easy, but it's still much easier for humans (and tests) to reason about non-concurrent code, make sure we got it right, then add concurrency to it later.\r\n\r\nAnd finally, performance-wise, I suspect goroutines here actually hurt more than help for the shape of data that we'll be dealing with (5-20 chars, 10-100 entries).",
        "created_at": "2016-11-21T16:00:56Z",
        "updated_at": "2016-11-21T16:09:17Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88925696",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88925696"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88925696"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88926125",
        "pull_request_review_id": 9479197,
        "id": 88926125,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4OTI2MTI1",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {",
        "path": "set/name_trie.go",
        "position": 7,
        "original_position": 7,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Very usecase-specific name for something that is otherwise very general to any strings.",
        "created_at": "2016-11-21T16:02:45Z",
        "updated_at": "2016-11-21T16:09:17Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88926125",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88926125"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88926125"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88926397",
        "pull_request_review_id": 9479197,
        "id": 88926397,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4OTI2Mzk3",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }\n+    sort.Strings(keys)\n+    sorted_runes := []rune{}\n+    for i := range(keys){ sorted_runes = append(sorted_runes, rune(keys[i][0]))}\n+    return sorted_runes\n+}\n+\n+func (tree *NameTrie) traverse(remainder []rune, create bool) (nextTree *NameTrie, ok bool) {\n+    nextRune := remainder[0]\n+    nextTree, ok = tree.children[nextRune]\n+    if !ok {\n+        if create {\n+            tree.children[nextRune] = createNameTrie()\n+            nextTree = tree.children[nextRune]\n+        } else {\n+            return createNameTrie(), false\n+        }\n+    }\n+    if len(remainder) < 2 {\n+        return nextTree, true\n+    } else {",
        "path": "set/name_trie.go",
        "position": 60,
        "original_position": 60,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Style: Could get rid of the else and just have the return on its own after. This helps signal what the \"default flow\" is when reading the code.",
        "created_at": "2016-11-21T16:03:52Z",
        "updated_at": "2016-11-21T16:09:17Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88926397",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/88926397"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r88926397"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90900214",
        "pull_request_review_id": 11413713,
        "id": 90900214,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTAwMjE0",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }\n+    sort.Strings(keys)\n+    sorted_runes := []rune{}\n+    for i := range(keys){ sorted_runes = append(sorted_runes, rune(keys[i][0]))}\n+    return sorted_runes\n+}\n+\n+func (tree *NameTrie) traverse(remainder []rune, create bool) (nextTree *NameTrie, ok bool) {\n+    nextRune := remainder[0]\n+    nextTree, ok = tree.children[nextRune]\n+    if !ok {\n+        if create {\n+            tree.children[nextRune] = createNameTrie()\n+            nextTree = tree.children[nextRune]\n+        } else {\n+            return createNameTrie(), false\n+        }\n+    }\n+    if len(remainder) < 2 {\n+        return nextTree, true\n+    } else {\n+        return nextTree.traverse(remainder[1:], create)\n+    }\n+}\n+\n+func (tree *NameTrie) FirstName(name string) (string, bool){\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    searchingName, nameFound := \"\", false\n+    if ok {\n+        c := make(chan string)\n+        go func(){",
        "path": "set/name_trie.go",
        "position": 71,
        "original_position": 71,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "haikuginger",
            "id": 7773758,
            "node_id": "MDQ6VXNlcjc3NzM3NTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7773758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haikuginger",
            "html_url": "https://github.com/haikuginger",
            "followers_url": "https://api.github.com/users/haikuginger/followers",
            "following_url": "https://api.github.com/users/haikuginger/following{/other_user}",
            "gists_url": "https://api.github.com/users/haikuginger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haikuginger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haikuginger/subscriptions",
            "organizations_url": "https://api.github.com/users/haikuginger/orgs",
            "repos_url": "https://api.github.com/users/haikuginger/repos",
            "events_url": "https://api.github.com/users/haikuginger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haikuginger/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> Helper libraries should avoid using goroutines unless the problem is inherently distributed. \r\n\r\nOkay! What sort of structure should I be looking at, then? It seemed like the goroutine/channel construct was the most common idiom for creating an iterable (as with a Python generator). Is there a better way to do it, or should I be looking at a different architecture altogether?",
        "created_at": "2016-12-05T16:26:32Z",
        "updated_at": "2016-12-05T16:26:32Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90900214",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90900214"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90900214"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        },
        "in_reply_to_id": 88925696
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90900253",
        "pull_request_review_id": 11413749,
        "id": 90900253,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTAwMjUz",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }\n+    sort.Strings(keys)\n+    sorted_runes := []rune{}\n+    for i := range(keys){ sorted_runes = append(sorted_runes, rune(keys[i][0]))}\n+    return sorted_runes\n+}\n+\n+func (tree *NameTrie) traverse(remainder []rune, create bool) (nextTree *NameTrie, ok bool) {\n+    nextRune := remainder[0]\n+    nextTree, ok = tree.children[nextRune]\n+    if !ok {\n+        if create {\n+            tree.children[nextRune] = createNameTrie()\n+            nextTree = tree.children[nextRune]\n+        } else {\n+            return createNameTrie(), false\n+        }\n+    }\n+    if len(remainder) < 2 {\n+        return nextTree, true\n+    } else {",
        "path": "set/name_trie.go",
        "position": 60,
        "original_position": 60,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "haikuginger",
            "id": 7773758,
            "node_id": "MDQ6VXNlcjc3NzM3NTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7773758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haikuginger",
            "html_url": "https://github.com/haikuginger",
            "followers_url": "https://api.github.com/users/haikuginger/followers",
            "following_url": "https://api.github.com/users/haikuginger/following{/other_user}",
            "gists_url": "https://api.github.com/users/haikuginger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haikuginger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haikuginger/subscriptions",
            "organizations_url": "https://api.github.com/users/haikuginger/orgs",
            "repos_url": "https://api.github.com/users/haikuginger/repos",
            "events_url": "https://api.github.com/users/haikuginger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haikuginger/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good to know!",
        "created_at": "2016-12-05T16:26:42Z",
        "updated_at": "2016-12-05T16:26:42Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90900253",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90900253"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90900253"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        },
        "in_reply_to_id": 88926397
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90900580",
        "pull_request_review_id": 11414095,
        "id": 90900580,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTAwNTgw",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }",
        "path": "set/name_trie.go",
        "position": 40,
        "original_position": 40,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "haikuginger",
            "id": 7773758,
            "node_id": "MDQ6VXNlcjc3NzM3NTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7773758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haikuginger",
            "html_url": "https://github.com/haikuginger",
            "followers_url": "https://api.github.com/users/haikuginger/followers",
            "following_url": "https://api.github.com/users/haikuginger/following{/other_user}",
            "gists_url": "https://api.github.com/users/haikuginger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haikuginger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haikuginger/subscriptions",
            "organizations_url": "https://api.github.com/users/haikuginger/orgs",
            "repos_url": "https://api.github.com/users/haikuginger/repos",
            "events_url": "https://api.github.com/users/haikuginger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haikuginger/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\ud83d\udc4d \r\n\r\nI found a similar sample online when I was searching for a good way to do this; I wasn't sure how it ought to look.\r\n\r\nIs the code here idiomatic itself, other than the style issue?",
        "created_at": "2016-12-05T16:28:08Z",
        "updated_at": "2016-12-05T16:28:08Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90900580",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90900580"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90900580"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        },
        "in_reply_to_id": 88923425
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90900682",
        "pull_request_review_id": 11414202,
        "id": 90900682,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTAwNjgy",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {",
        "path": "set/name_trie.go",
        "position": 12,
        "original_position": 12,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "haikuginger",
            "id": 7773758,
            "node_id": "MDQ6VXNlcjc3NzM3NTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7773758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haikuginger",
            "html_url": "https://github.com/haikuginger",
            "followers_url": "https://api.github.com/users/haikuginger/followers",
            "following_url": "https://api.github.com/users/haikuginger/following{/other_user}",
            "gists_url": "https://api.github.com/users/haikuginger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haikuginger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haikuginger/subscriptions",
            "organizations_url": "https://api.github.com/users/haikuginger/orgs",
            "repos_url": "https://api.github.com/users/haikuginger/repos",
            "events_url": "https://api.github.com/users/haikuginger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haikuginger/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah. Yeah, that'd be an issue. ",
        "created_at": "2016-12-05T16:28:39Z",
        "updated_at": "2016-12-05T16:28:39Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90900682",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90900682"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90900682"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        },
        "in_reply_to_id": 88922856
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90901112",
        "pull_request_review_id": 11414639,
        "id": 90901112,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTAxMTEy",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {",
        "path": "set/name_trie.go",
        "position": 38,
        "original_position": 38,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "haikuginger",
            "id": 7773758,
            "node_id": "MDQ6VXNlcjc3NzM3NTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7773758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haikuginger",
            "html_url": "https://github.com/haikuginger",
            "followers_url": "https://api.github.com/users/haikuginger/followers",
            "following_url": "https://api.github.com/users/haikuginger/following{/other_user}",
            "gists_url": "https://api.github.com/users/haikuginger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haikuginger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haikuginger/subscriptions",
            "organizations_url": "https://api.github.com/users/haikuginger/orgs",
            "repos_url": "https://api.github.com/users/haikuginger/repos",
            "events_url": "https://api.github.com/users/haikuginger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haikuginger/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1:",
        "created_at": "2016-12-05T16:30:22Z",
        "updated_at": "2016-12-05T16:30:22Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90901112",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90901112"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90901112"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        },
        "in_reply_to_id": 88924330
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90912746",
        "pull_request_review_id": 11426241,
        "id": 90912746,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTEyNzQ2",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }",
        "path": "set/name_trie.go",
        "position": 40,
        "original_position": 40,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yea should be fine aside from style. I'm surprised gofmt didn't fix this.",
        "created_at": "2016-12-05T17:21:41Z",
        "updated_at": "2016-12-05T17:21:41Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90912746",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90912746"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90912746"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        },
        "in_reply_to_id": 88923425
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90913226",
        "pull_request_review_id": 11426761,
        "id": 90913226,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTEzMjI2",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }\n+    sort.Strings(keys)\n+    sorted_runes := []rune{}\n+    for i := range(keys){ sorted_runes = append(sorted_runes, rune(keys[i][0]))}\n+    return sorted_runes\n+}\n+\n+func (tree *NameTrie) traverse(remainder []rune, create bool) (nextTree *NameTrie, ok bool) {\n+    nextRune := remainder[0]\n+    nextTree, ok = tree.children[nextRune]\n+    if !ok {\n+        if create {\n+            tree.children[nextRune] = createNameTrie()\n+            nextTree = tree.children[nextRune]\n+        } else {\n+            return createNameTrie(), false\n+        }\n+    }\n+    if len(remainder) < 2 {\n+        return nextTree, true\n+    } else {\n+        return nextTree.traverse(remainder[1:], create)\n+    }\n+}\n+\n+func (tree *NameTrie) FirstName(name string) (string, bool){\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    searchingName, nameFound := \"\", false\n+    if ok {\n+        c := make(chan string)\n+        go func(){",
        "path": "set/name_trie.go",
        "position": 71,
        "original_position": 71,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You can iterate over most things, whether it's a slice or a channel or whatever. Also, you can use channels without goroutines. I would just use a slice and append to that if it's not concurrent. ",
        "created_at": "2016-12-05T17:24:09Z",
        "updated_at": "2016-12-05T17:24:09Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90913226",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90913226"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90913226"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        },
        "in_reply_to_id": 88925696
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90957263",
        "pull_request_review_id": 11470828,
        "id": 90957263,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTU3MjYz",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }",
        "path": "set/name_trie.go",
        "position": 40,
        "original_position": 40,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "haikuginger",
            "id": 7773758,
            "node_id": "MDQ6VXNlcjc3NzM3NTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7773758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haikuginger",
            "html_url": "https://github.com/haikuginger",
            "followers_url": "https://api.github.com/users/haikuginger/followers",
            "following_url": "https://api.github.com/users/haikuginger/following{/other_user}",
            "gists_url": "https://api.github.com/users/haikuginger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haikuginger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haikuginger/subscriptions",
            "organizations_url": "https://api.github.com/users/haikuginger/orgs",
            "repos_url": "https://api.github.com/users/haikuginger/repos",
            "events_url": "https://api.github.com/users/haikuginger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haikuginger/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah, I wasn't using gofmt; this sin is entirely my own.",
        "created_at": "2016-12-05T21:18:14Z",
        "updated_at": "2016-12-05T21:18:14Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90957263",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90957263"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90957263"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        },
        "in_reply_to_id": 88923425
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90957565",
        "pull_request_review_id": 11471133,
        "id": 90957565,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTU3NTY1",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }\n+    sort.Strings(keys)\n+    sorted_runes := []rune{}\n+    for i := range(keys){ sorted_runes = append(sorted_runes, rune(keys[i][0]))}\n+    return sorted_runes\n+}\n+\n+func (tree *NameTrie) traverse(remainder []rune, create bool) (nextTree *NameTrie, ok bool) {\n+    nextRune := remainder[0]\n+    nextTree, ok = tree.children[nextRune]\n+    if !ok {\n+        if create {\n+            tree.children[nextRune] = createNameTrie()\n+            nextTree = tree.children[nextRune]\n+        } else {\n+            return createNameTrie(), false\n+        }\n+    }\n+    if len(remainder) < 2 {\n+        return nextTree, true\n+    } else {\n+        return nextTree.traverse(remainder[1:], create)\n+    }\n+}\n+\n+func (tree *NameTrie) FirstName(name string) (string, bool){\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    searchingName, nameFound := \"\", false\n+    if ok {\n+        c := make(chan string)\n+        go func(){",
        "path": "set/name_trie.go",
        "position": 71,
        "original_position": 71,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "haikuginger",
            "id": 7773758,
            "node_id": "MDQ6VXNlcjc3NzM3NTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7773758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haikuginger",
            "html_url": "https://github.com/haikuginger",
            "followers_url": "https://api.github.com/users/haikuginger/followers",
            "following_url": "https://api.github.com/users/haikuginger/following{/other_user}",
            "gists_url": "https://api.github.com/users/haikuginger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haikuginger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haikuginger/subscriptions",
            "organizations_url": "https://api.github.com/users/haikuginger/orgs",
            "repos_url": "https://api.github.com/users/haikuginger/repos",
            "events_url": "https://api.github.com/users/haikuginger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haikuginger/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That would allocate a list for the entire trie, though, right? I was looking for something more like a Python generator where values are generated on-demand.",
        "created_at": "2016-12-05T21:19:49Z",
        "updated_at": "2016-12-05T21:19:49Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90957565",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90957565"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90957565"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        },
        "in_reply_to_id": 88925696
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90958020",
        "pull_request_review_id": 11471565,
        "id": 90958020,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTU4MDIw",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }",
        "path": "set/name_trie.go",
        "position": 40,
        "original_position": 40,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah there you go, there is lots of lovely tooling which is half the reason I use the language. :) Check out `gofmt`, `go vet`, and there's a bunch more linters if you're into that. Ideally use integration with your editor, most editors have excellent integration which will make all this automagic.",
        "created_at": "2016-12-05T21:22:04Z",
        "updated_at": "2016-12-05T21:22:04Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90958020",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90958020"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90958020"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        },
        "in_reply_to_id": 88923425
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90958472",
        "pull_request_review_id": 11471970,
        "id": 90958472,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTU4NDcy",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+package set\n+\n+import (\n+    \"sort\"\n+)\n+\n+type NameTrie struct {\n+    children   map[rune]*NameTrie\n+    terminates bool\n+}\n+\n+func createNameTrie() *NameTrie {\n+    return &NameTrie{make(map[rune]*NameTrie), false}\n+}\n+\n+func (tree *NameTrie) Exists(name string) bool {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    return ok && node.terminates\n+}\n+\n+func (tree *NameTrie) Insert(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, true)\n+    if ok {\n+        node.terminates = true\n+    }\n+}\n+\n+func (tree *NameTrie) Delete(name string) {\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    if ok {\n+        node.terminates = false\n+    }\n+}\n+\n+func (node *NameTrie) OrderedChildren() []rune {\n+    keys := []string{}\n+    for suffix := range(node.children){ keys = append(keys, string(suffix)) }\n+    sort.Strings(keys)\n+    sorted_runes := []rune{}\n+    for i := range(keys){ sorted_runes = append(sorted_runes, rune(keys[i][0]))}\n+    return sorted_runes\n+}\n+\n+func (tree *NameTrie) traverse(remainder []rune, create bool) (nextTree *NameTrie, ok bool) {\n+    nextRune := remainder[0]\n+    nextTree, ok = tree.children[nextRune]\n+    if !ok {\n+        if create {\n+            tree.children[nextRune] = createNameTrie()\n+            nextTree = tree.children[nextRune]\n+        } else {\n+            return createNameTrie(), false\n+        }\n+    }\n+    if len(remainder) < 2 {\n+        return nextTree, true\n+    } else {\n+        return nextTree.traverse(remainder[1:], create)\n+    }\n+}\n+\n+func (tree *NameTrie) FirstName(name string) (string, bool){\n+    nameSlice := []rune(name)\n+    node, ok := tree.traverse(nameSlice, false)\n+    searchingName, nameFound := \"\", false\n+    if ok {\n+        c := make(chan string)\n+        go func(){",
        "path": "set/name_trie.go",
        "position": 71,
        "original_position": 71,
        "commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "original_commit_id": "dd6b19da6304dd21f3fbb83319e7f28f140f38b0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Well it won't look like a generator but you'd start with an empty slice and append to it with each result. Nothing fancy. Won't be any slower than making a generator, though. \r\n\r\nSometimes people implement iterator-like things in Go (typically an interface that has a `.Next()`): https://ewencp.org/blog/golang-iterators/\r\n\r\nIt's not particularly idiomatic. I wouldn't start with that unless you have something that is highly stateful and incremental and you need to control each incremental step. That's not the case here though, we're just returning the full result each time.",
        "created_at": "2016-12-05T21:24:36Z",
        "updated_at": "2016-12-05T21:24:36Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90958472",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/221",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/90958472"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/221#discussion_r90958472"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/221"
            }
        },
        "in_reply_to_id": 88925696
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/113800544",
        "pull_request_review_id": 35221677,
        "id": 113800544,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMzgwMDU0NA==",
        "diff_hunk": "@@ -237,7 +237,11 @@ func (h *Host) AutoCompleteFunction(u *message.User) func(line string, pos int,\n \t\t\tif completed == \"/reply\" {\n \t\t\t\treplyTo := u.ReplyTo()\n \t\t\t\tif replyTo != nil {\n-\t\t\t\t\tcompleted = \"/msg \" + replyTo.Name()\n+\t\t\t\t\tname := replyTo.Name()\n+\t\t\t\t\t_, found := h.GetUser(name)\n+\t\t\t\t\tif !found {",
        "path": "host.go",
        "position": null,
        "original_position": 7,
        "commit_id": "cc71e4f0973d3734ce32e25748c2f68dc6a4d7bb",
        "original_commit_id": "004708f9e403c410f9dea6069bab26626800f92e",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "isn't that the opposite condition we want?",
        "created_at": "2017-04-27T20:57:16Z",
        "updated_at": "2017-04-27T22:17:48Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/230#discussion_r113800544",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/230",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/113800544"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/230#discussion_r113800544"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/230"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/113800691",
        "pull_request_review_id": 35221833,
        "id": 113800691,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMzgwMDY5MQ==",
        "diff_hunk": "@@ -237,7 +237,11 @@ func (h *Host) AutoCompleteFunction(u *message.User) func(line string, pos int,\n \t\t\tif completed == \"/reply\" {\n \t\t\t\treplyTo := u.ReplyTo()\n \t\t\t\tif replyTo != nil {\n-\t\t\t\t\tcompleted = \"/msg \" + replyTo.Name()\n+\t\t\t\t\tname := replyTo.Name()\n+\t\t\t\t\t_, found := h.GetUser(name)\n+\t\t\t\t\tif !found {\n+\t\t\t\t\t\tcompleted = \"/msg \" + name\n+\t\t\t\t\t}",
        "path": "host.go",
        "position": null,
        "original_position": 9,
        "commit_id": "cc71e4f0973d3734ce32e25748c2f68dc6a4d7bb",
        "original_commit_id": "004708f9e403c410f9dea6069bab26626800f92e",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "if not found, could you also reset the state of u.ReplyTo? I think `u.SetReplyTo(nil)` should do the trick.",
        "created_at": "2017-04-27T20:57:53Z",
        "updated_at": "2017-04-27T22:17:48Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/230#discussion_r113800691",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/230",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/113800691"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/230#discussion_r113800691"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/230"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/113834771",
        "pull_request_review_id": 35257488,
        "id": 113834771,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMzgzNDc3MQ==",
        "diff_hunk": "@@ -318,10 +324,16 @@ func (h *Host) InitCommands(c *chat.Commands) {\n \t\t\t\treturn errors.New(\"no message to reply to\")\n \t\t\t}\n \n+\t\t\tname := target.Name()\n+\t\t\t_, found := h.GetUser(name)\n+\t\t\tif !found {\n+\t\t\t\treturn errors.New(\"user not found\")",
        "path": "host.go",
        "position": 22,
        "original_position": 22,
        "commit_id": "cc71e4f0973d3734ce32e25748c2f68dc6a4d7bb",
        "original_commit_id": "cc71e4f0973d3734ce32e25748c2f68dc6a4d7bb",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For some reason I couldn't make it reach this branch locally, weird.",
        "created_at": "2017-04-28T01:05:03Z",
        "updated_at": "2017-04-28T01:05:03Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/230#discussion_r113834771",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/230",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/113834771"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/230#discussion_r113834771"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/230"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115103189",
        "pull_request_review_id": 36626625,
        "id": 115103189,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTEwMzE4OQ==",
        "diff_hunk": "@@ -193,6 +193,14 @@ func InitCommands(c *Commands) {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n \t\t\t\tbody := fmt.Sprintf(\"Current theme: %s\", theme)\n+\t\t\t\tavail := \"Themes available: \"",
        "path": "chat/command.go",
        "position": null,
        "original_position": 13,
        "commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "original_commit_id": "fd121b69f94aab2c36bce2eb96e896450b67b9f5",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "IMO append to a buffer.\r\n\r\n```go\r\nvar avail bytes.Buffer\r\nfmt.Fprintf(&avail, \"Themes available: \")\r\n...\r\nroom.Send(message.NewSystemMsg(avail.String(), user))\r\n```",
        "created_at": "2017-05-05T23:14:35Z",
        "updated_at": "2017-05-07T15:53:52Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115103189",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/232",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115103189"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115103189"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/232"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115110011",
        "pull_request_review_id": 36633971,
        "id": 115110011,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTExMDAxMQ==",
        "diff_hunk": "@@ -193,6 +193,14 @@ func InitCommands(c *Commands) {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n \t\t\t\tbody := fmt.Sprintf(\"Current theme: %s\", theme)\n+\t\t\t\tavail := \"Themes available: \"",
        "path": "chat/command.go",
        "position": null,
        "original_position": 13,
        "commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "original_commit_id": "fd121b69f94aab2c36bce2eb96e896450b67b9f5",
        "user": {
            "login": "sleibrock",
            "id": 15330989,
            "node_id": "MDQ6VXNlcjE1MzMwOTg5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15330989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sleibrock",
            "html_url": "https://github.com/sleibrock",
            "followers_url": "https://api.github.com/users/sleibrock/followers",
            "following_url": "https://api.github.com/users/sleibrock/following{/other_user}",
            "gists_url": "https://api.github.com/users/sleibrock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sleibrock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sleibrock/subscriptions",
            "organizations_url": "https://api.github.com/users/sleibrock/orgs",
            "repos_url": "https://api.github.com/users/sleibrock/repos",
            "events_url": "https://api.github.com/users/sleibrock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sleibrock/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I amended it but had to add the `bytes` import as well for `bytes.Buffer`.",
        "created_at": "2017-05-06T01:25:15Z",
        "updated_at": "2017-05-07T15:53:52Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115110011",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/232",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115110011"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115110011"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/232"
            }
        },
        "in_reply_to_id": 115103189
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115122304",
        "pull_request_review_id": 36646099,
        "id": 115122304,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTEyMjMwNA==",
        "diff_hunk": "@@ -193,6 +193,14 @@ func InitCommands(c *Commands) {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n \t\t\t\tbody := fmt.Sprintf(\"Current theme: %s\", theme)\n+\t\t\t\tavail := \"Themes available: \"",
        "path": "chat/command.go",
        "position": null,
        "original_position": 13,
        "commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "original_commit_id": "fd121b69f94aab2c36bce2eb96e896450b67b9f5",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "As is tradition.",
        "created_at": "2017-05-06T15:09:51Z",
        "updated_at": "2017-05-07T15:53:52Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115122304",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/232",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115122304"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115122304"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/232"
            }
        },
        "in_reply_to_id": 115103189
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115146138",
        "pull_request_review_id": 36667091,
        "id": 115146138,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTE0NjEzOA==",
        "diff_hunk": "@@ -191,6 +192,15 @@ func InitCommands(c *Commands) {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n \t\t\t\tbody := fmt.Sprintf(\"Current theme: %s\", theme)",
        "path": "chat/command.go",
        "position": null,
        "original_position": 20,
        "commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "original_commit_id": "7dddd5d30aceef2a2885658c4994bfa7e58c3543",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wanna put the body into the buffer too, while we're at it? lolol",
        "created_at": "2017-05-07T15:28:10Z",
        "updated_at": "2017-05-07T15:53:52Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115146138",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/232",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115146138"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115146138"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/232"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115146832",
        "pull_request_review_id": 36667728,
        "id": 115146832,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTE0NjgzMg==",
        "diff_hunk": "@@ -190,8 +191,16 @@ func InitCommands(c *Commands) {\n \t\t\t\tif cfg.Theme != nil {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n-\t\t\t\tbody := fmt.Sprintf(\"Current theme: %s\", theme)\n-\t\t\t\troom.Send(message.NewSystemMsg(body, user))\n+\t\t\t\tvar output bytes.Buffer\n+\t\t\t\tfmt.Fprintf(&output, \"Current theme: %s%s\", theme, message.Newline)",
        "path": "chat/command.go",
        "position": 24,
        "original_position": 24,
        "commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "original_commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Optional nit but IMO:\r\n\r\n```diff\r\n- fmt.Fprintf(&output, \"Current theme: %s%s\", theme, message.Newline)\r\n+ fmt.Fprintf(&output, \"Current theme: %s\" + message.Newline, theme)\r\n```",
        "created_at": "2017-05-07T15:57:23Z",
        "updated_at": "2017-05-07T15:57:23Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115146832",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/232",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115146832"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115146832"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/232"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115147120",
        "pull_request_review_id": 36667944,
        "id": 115147120,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTE0NzEyMA==",
        "diff_hunk": "@@ -190,8 +191,16 @@ func InitCommands(c *Commands) {\n \t\t\t\tif cfg.Theme != nil {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n-\t\t\t\tbody := fmt.Sprintf(\"Current theme: %s\", theme)\n-\t\t\t\troom.Send(message.NewSystemMsg(body, user))\n+\t\t\t\tvar output bytes.Buffer\n+\t\t\t\tfmt.Fprintf(&output, \"Current theme: %s%s\", theme, message.Newline)",
        "path": "chat/command.go",
        "position": 24,
        "original_position": 24,
        "commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "original_commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "user": {
            "login": "sleibrock",
            "id": 15330989,
            "node_id": "MDQ6VXNlcjE1MzMwOTg5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15330989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sleibrock",
            "html_url": "https://github.com/sleibrock",
            "followers_url": "https://api.github.com/users/sleibrock/followers",
            "following_url": "https://api.github.com/users/sleibrock/following{/other_user}",
            "gists_url": "https://api.github.com/users/sleibrock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sleibrock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sleibrock/subscriptions",
            "organizations_url": "https://api.github.com/users/sleibrock/orgs",
            "repos_url": "https://api.github.com/users/sleibrock/repos",
            "events_url": "https://api.github.com/users/sleibrock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sleibrock/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Whichever one you prefer I'll go with. I thought using the direct formatting would look better than doing string addition but it's up to you.",
        "created_at": "2017-05-07T16:09:52Z",
        "updated_at": "2017-05-07T16:09:52Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115147120",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/232",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115147120"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115147120"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/232"
            }
        },
        "in_reply_to_id": 115146832
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115147172",
        "pull_request_review_id": 36667987,
        "id": 115147172,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTE0NzE3Mg==",
        "diff_hunk": "@@ -190,8 +191,16 @@ func InitCommands(c *Commands) {\n \t\t\t\tif cfg.Theme != nil {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n-\t\t\t\tbody := fmt.Sprintf(\"Current theme: %s\", theme)\n-\t\t\t\troom.Send(message.NewSystemMsg(body, user))\n+\t\t\t\tvar output bytes.Buffer\n+\t\t\t\tfmt.Fprintf(&output, \"Current theme: %s%s\", theme, message.Newline)",
        "path": "chat/command.go",
        "position": 24,
        "original_position": 24,
        "commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "original_commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I mean it's kinda the equivalent of writing (\"Current theme: %s%s\", foo, \"\\n\") which feels weird to me vs (\"Current theme: %s\\n\", foo).\r\n\r\nI'll merge it either way, just let me know when it's ready for merging. :)",
        "created_at": "2017-05-07T16:11:40Z",
        "updated_at": "2017-05-07T16:11:40Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115147172",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/232",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115147172"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115147172"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/232"
            }
        },
        "in_reply_to_id": 115146832
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115148673",
        "pull_request_review_id": 36669102,
        "id": 115148673,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTE0ODY3Mw==",
        "diff_hunk": "@@ -190,8 +191,16 @@ func InitCommands(c *Commands) {\n \t\t\t\tif cfg.Theme != nil {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n-\t\t\t\tbody := fmt.Sprintf(\"Current theme: %s\", theme)\n-\t\t\t\troom.Send(message.NewSystemMsg(body, user))\n+\t\t\t\tvar output bytes.Buffer\n+\t\t\t\tfmt.Fprintf(&output, \"Current theme: %s%s\", theme, message.Newline)",
        "path": "chat/command.go",
        "position": 24,
        "original_position": 24,
        "commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "original_commit_id": "e1be1a98755664bef571690a38fdeb96580891bf",
        "user": {
            "login": "sleibrock",
            "id": 15330989,
            "node_id": "MDQ6VXNlcjE1MzMwOTg5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15330989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sleibrock",
            "html_url": "https://github.com/sleibrock",
            "followers_url": "https://api.github.com/users/sleibrock/followers",
            "following_url": "https://api.github.com/users/sleibrock/following{/other_user}",
            "gists_url": "https://api.github.com/users/sleibrock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sleibrock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sleibrock/subscriptions",
            "organizations_url": "https://api.github.com/users/sleibrock/orgs",
            "repos_url": "https://api.github.com/users/sleibrock/repos",
            "events_url": "https://api.github.com/users/sleibrock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sleibrock/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it's ready. I got nothing else to add.",
        "created_at": "2017-05-07T17:15:22Z",
        "updated_at": "2017-05-07T17:15:22Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115148673",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/232",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115148673"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/232#discussion_r115148673"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/232"
            }
        },
        "in_reply_to_id": 115146832
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115161808",
        "pull_request_review_id": 36680940,
        "id": 115161808,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTE2MTgwOA==",
        "diff_hunk": "@@ -256,6 +256,16 @@ func InitCommands(c *Commands) {\n \t})\n \n \tc.Add(Command{\n+\t\tPrefix: \"/shrug\",\n+\t\tHelp:   \"Raise your arms in the air\",\n+\t\tHandler: func(room *Room, msg message.CommandMsg) error {\n+\t\t\tbody := strings.TrimLeft(msg.Body(), \"/shrug\")\n+\t\t\troom.Send(message.NewPublicMsg(body + \"\u00af\\\\_(\u30c4)_/\u00af\", msg.From()))",
        "path": "chat/command.go",
        "position": 8,
        "original_position": 8,
        "commit_id": "e246006a4a8525d269c9ac4cd59c9e928700cc82",
        "original_commit_id": "e246006a4a8525d269c9ac4cd59c9e928700cc82",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just remembered: Room will only propagate public messages to everyone _but_ the sender. You should see it if you connect with a 2nd client.\r\n\r\nKinda cheating but could just make it an EmoteMsg.",
        "created_at": "2017-05-08T01:36:57Z",
        "updated_at": "2017-05-08T01:36:58Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/233#discussion_r115161808",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/233",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/115161808"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/233#discussion_r115161808"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/233"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/121282505",
        "pull_request_review_id": 43320644,
        "id": 121282505,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTI4MjUwNQ==",
        "diff_hunk": "@@ -155,7 +155,13 @@ func InitCommands(c *Commands) {\n \t\t\t}\n \n \t\t\toldID := member.ID()\n-\t\t\tmember.SetID(SanitizeName(args[0]))\n+      newID := SanitizeName(args[0])\n+      if newID == oldID {\n+        body := \"New nickname the same as previous nickname.\"\n+        u.Send(message.NewSystemMsg(body, u))",
        "path": "chat/command.go",
        "position": null,
        "original_position": 8,
        "commit_id": "46881a1cbee873844c4d5bc3c33cc73188eeb54e",
        "original_commit_id": "f3d4502f82d96be86c66ca13fab1d5009841496d",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think you can just return an error here, like above. Please try to keep it in the same style as the other errors.\r\n\r\n```go\r\nreturn errors.New(\"new name is the same as the original\")\r\n```",
        "created_at": "2017-06-11T14:05:52Z",
        "updated_at": "2017-06-11T21:01:41Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/237#discussion_r121282505",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/237",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/121282505"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/237#discussion_r121282505"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/237"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/121291454",
        "pull_request_review_id": 43328698,
        "id": 121291454,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTI5MTQ1NA==",
        "diff_hunk": "@@ -155,7 +155,13 @@ func InitCommands(c *Commands) {\n \t\t\t}\n \n \t\t\toldID := member.ID()\n-\t\t\tmember.SetID(SanitizeName(args[0]))\n+      newID := SanitizeName(args[0])\n+      if newID == oldID {\n+        body := \"New nickname the same as previous nickname.\"\n+        u.Send(message.NewSystemMsg(body, u))",
        "path": "chat/command.go",
        "position": null,
        "original_position": 8,
        "commit_id": "46881a1cbee873844c4d5bc3c33cc73188eeb54e",
        "original_commit_id": "f3d4502f82d96be86c66ca13fab1d5009841496d",
        "user": {
            "login": "ograff",
            "id": 239533,
            "node_id": "MDQ6VXNlcjIzOTUzMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/239533?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ograff",
            "html_url": "https://github.com/ograff",
            "followers_url": "https://api.github.com/users/ograff/followers",
            "following_url": "https://api.github.com/users/ograff/following{/other_user}",
            "gists_url": "https://api.github.com/users/ograff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ograff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ograff/subscriptions",
            "organizations_url": "https://api.github.com/users/ograff/orgs",
            "repos_url": "https://api.github.com/users/ograff/repos",
            "events_url": "https://api.github.com/users/ograff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ograff/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done, I force pushed, not sure if you prefer new commits each time and then a squash at the end, but this is a pretty small change.",
        "created_at": "2017-06-11T20:56:45Z",
        "updated_at": "2017-06-11T21:01:41Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/237#discussion_r121291454",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/237",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/121291454"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/237#discussion_r121291454"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/237"
            }
        },
        "in_reply_to_id": 121282505
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/127626103",
        "pull_request_review_id": 50229651,
        "id": 127626103,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzYyNjEwMw==",
        "diff_hunk": "@@ -11,3 +10,4 @@ TODO: Add usage examples here.\n */\n \n package chat\n+",
        "path": "chat/doc.go",
        "position": 13,
        "original_position": 13,
        "commit_id": "692eef8c5c9baa23d76281140d14d8a7c5d091d7",
        "original_commit_id": "692eef8c5c9baa23d76281140d14d8a7c5d091d7",
        "user": {
            "login": "dmitshur",
            "id": 1924134,
            "node_id": "MDQ6VXNlcjE5MjQxMzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1924134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmitshur",
            "html_url": "https://github.com/dmitshur",
            "followers_url": "https://api.github.com/users/dmitshur/followers",
            "following_url": "https://api.github.com/users/dmitshur/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmitshur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmitshur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmitshur/subscriptions",
            "organizations_url": "https://api.github.com/users/dmitshur/orgs",
            "repos_url": "https://api.github.com/users/dmitshur/repos",
            "events_url": "https://api.github.com/users/dmitshur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmitshur/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This empty line causes the file to not be `gofmt`ed.",
        "created_at": "2017-07-17T02:38:12Z",
        "updated_at": "2017-07-17T02:38:12Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/240#discussion_r127626103",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/240",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/127626103"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/240#discussion_r127626103"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/240"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/127723133",
        "pull_request_review_id": 50336152,
        "id": 127723133,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzcyMzEzMw==",
        "diff_hunk": "@@ -11,3 +10,4 @@ TODO: Add usage examples here.\n */\n \n package chat\n+",
        "path": "chat/doc.go",
        "position": 13,
        "original_position": 13,
        "commit_id": "692eef8c5c9baa23d76281140d14d8a7c5d091d7",
        "original_commit_id": "692eef8c5c9baa23d76281140d14d8a7c5d091d7",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good call. I'll fix it.",
        "created_at": "2017-07-17T14:28:07Z",
        "updated_at": "2017-07-17T14:28:07Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/240#discussion_r127723133",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/240",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/127723133"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/240#discussion_r127723133"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/240"
            }
        },
        "in_reply_to_id": 127626103
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/127774151",
        "pull_request_review_id": 50392787,
        "id": 127774151,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzc3NDE1MQ==",
        "diff_hunk": "@@ -11,3 +10,4 @@ TODO: Add usage examples here.\n */\n \n package chat\n+",
        "path": "chat/doc.go",
        "position": 13,
        "original_position": 13,
        "commit_id": "692eef8c5c9baa23d76281140d14d8a7c5d091d7",
        "original_commit_id": "692eef8c5c9baa23d76281140d14d8a7c5d091d7",
        "user": {
            "login": "dmitshur",
            "id": 1924134,
            "node_id": "MDQ6VXNlcjE5MjQxMzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1924134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmitshur",
            "html_url": "https://github.com/dmitshur",
            "followers_url": "https://api.github.com/users/dmitshur/followers",
            "following_url": "https://api.github.com/users/dmitshur/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmitshur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmitshur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmitshur/subscriptions",
            "organizations_url": "https://api.github.com/users/dmitshur/orgs",
            "repos_url": "https://api.github.com/users/dmitshur/repos",
            "events_url": "https://api.github.com/users/dmitshur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmitshur/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've made #241 to help you catch these issues automatically in the future.",
        "created_at": "2017-07-17T17:42:34Z",
        "updated_at": "2017-07-17T17:42:34Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/240#discussion_r127774151",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/240",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/127774151"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/240#discussion_r127774151"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/240"
            }
        },
        "in_reply_to_id": 127626103
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/142682120",
        "pull_request_review_id": 67077983,
        "id": 142682120,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjY4MjEyMA==",
        "diff_hunk": "@@ -173,9 +173,15 @@ func InitCommands(c *Commands) {\n \t\tPrefix: \"/names\",\n \t\tHelp:   \"List users who are connected.\",\n \t\tHandler: func(room *Room, msg message.CommandMsg) error {\n-\t\t\t// TODO: colorize\n-\t\t\tnames := room.NamesPrefix(\"\")\n-\t\t\tbody := fmt.Sprintf(\"%d connected: %s\", len(names), strings.Join(names, \", \"))\n+\t\t\tnames := room.Members.ListPrefix(\"\")\n+\t\t\tcolNames := make([]string, len(names))\n+\t\t\ttheme := msg.From().Config().Theme",
        "path": "chat/command.go",
        "position": null,
        "original_position": 9,
        "commit_id": "e0f072aeba65e84a527b232784756131b5f1a947",
        "original_commit_id": "e5883e1ec0ea607689267950d9f086080ced3c07",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I thiiiink it's possible for Theme to be nil.",
        "created_at": "2017-10-04T14:13:53Z",
        "updated_at": "2017-10-04T16:44:11Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/249#discussion_r142682120",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/249",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/142682120"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/249#discussion_r142682120"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/249"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/142683810",
        "pull_request_review_id": 67080004,
        "id": 142683810,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjY4MzgxMA==",
        "diff_hunk": "@@ -173,9 +173,15 @@ func InitCommands(c *Commands) {\n \t\tPrefix: \"/names\",\n \t\tHelp:   \"List users who are connected.\",\n \t\tHandler: func(room *Room, msg message.CommandMsg) error {\n-\t\t\t// TODO: colorize\n-\t\t\tnames := room.NamesPrefix(\"\")\n-\t\t\tbody := fmt.Sprintf(\"%d connected: %s\", len(names), strings.Join(names, \", \"))\n+\t\t\tnames := room.Members.ListPrefix(\"\")\n+\t\t\tcolNames := make([]string, len(names))\n+\t\t\ttheme := msg.From().Config().Theme",
        "path": "chat/command.go",
        "position": null,
        "original_position": 9,
        "commit_id": "e0f072aeba65e84a527b232784756131b5f1a947",
        "original_commit_id": "e5883e1ec0ea607689267950d9f086080ced3c07",
        "user": {
            "login": "sleibrock",
            "id": 15330989,
            "node_id": "MDQ6VXNlcjE1MzMwOTg5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15330989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sleibrock",
            "html_url": "https://github.com/sleibrock",
            "followers_url": "https://api.github.com/users/sleibrock/followers",
            "following_url": "https://api.github.com/users/sleibrock/following{/other_user}",
            "gists_url": "https://api.github.com/users/sleibrock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sleibrock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sleibrock/subscriptions",
            "organizations_url": "https://api.github.com/users/sleibrock/orgs",
            "repos_url": "https://api.github.com/users/sleibrock/repos",
            "events_url": "https://api.github.com/users/sleibrock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sleibrock/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'll add a check for nil and write an early exit.",
        "created_at": "2017-10-04T14:19:04Z",
        "updated_at": "2017-10-04T16:44:11Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/249#discussion_r142683810",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/249",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/142683810"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/249#discussion_r142683810"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/249"
            }
        },
        "in_reply_to_id": 142682120
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/142693682",
        "pull_request_review_id": 67092105,
        "id": 142693682,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjY5MzY4Mg==",
        "diff_hunk": "@@ -173,9 +173,21 @@ func InitCommands(c *Commands) {\n \t\tPrefix: \"/names\",\n \t\tHelp:   \"List users who are connected.\",\n \t\tHandler: func(room *Room, msg message.CommandMsg) error {\n-\t\t\t// TODO: colorize\n-\t\t\tnames := room.NamesPrefix(\"\")\n-\t\t\tbody := fmt.Sprintf(\"%d connected: %s\", len(names), strings.Join(names, \", \"))\n+\t\t\ttheme := msg.From().Config().Theme\n+\t\t\tif theme == nil || theme.ID() == \"mono\" {\n+\t\t\t\tnames := room.NamesPrefix(\"\")\n+\t\t\t\tbody := fmt.Sprintf(\"%d connected: %s\", len(names), strings.Join(names, \", \"))\n+\t\t\t\troom.Send(message.NewSystemMsg(body, msg.From()))\n+\t\t\t\treturn nil\n+\t\t\t}\n+",
        "path": "chat/command.go",
        "position": null,
        "original_position": 14,
        "commit_id": "e0f072aeba65e84a527b232784756131b5f1a947",
        "original_commit_id": "aa35a8e7d1c3a3f7302dc31f84bb769c49e956e0",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "for the sake of avoiding subtly different duplicate code, what about something like:\r\n\r\n```go\r\ncolorize := func(u User) string {\r\n    return theme.ColorName(u)\r\n}\r\nif (theme == nil ... etc) {\r\n    colorize = func(u User) string {\r\n        return u.Name\r\n    }\r\n}\r\n```",
        "created_at": "2017-10-04T14:51:23Z",
        "updated_at": "2017-10-04T16:44:11Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/249#discussion_r142693682",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/249",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/142693682"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/249#discussion_r142693682"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/249"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/244830918",
        "pull_request_review_id": 188799376,
        "id": 244830918,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDgzMDkxOA==",
        "diff_hunk": "@@ -1,13 +1,17 @@\n-package sshchat\n+package humantime",
        "path": "util/humantime/humantime.go",
        "position": null,
        "original_position": 2,
        "commit_id": "44fe22198a3c972dce4b855e977a0c37e5d4ce18",
        "original_commit_id": "8289554a23c5e75c20d1686cb7139200a83e4027",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe this should be internal/humantime instead of util/humantime?\r\n\r\nAlso personally I call these types of packages `pretty`, like `pretty.Since(...)`. But humantime is fine too. :)",
        "created_at": "2019-01-02T19:33:48Z",
        "updated_at": "2019-01-02T20:08:13Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/289#discussion_r244830918",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/289",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/244830918"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/289#discussion_r244830918"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/289"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/259459443",
        "pull_request_review_id": 206963020,
        "id": 259459443,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTQ1OTQ0Mw==",
        "diff_hunk": "@@ -212,16 +209,17 @@ func InitCommands(c *Commands) {\n \t\t\t\tif cfg.Theme != nil {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n-\t\t\t\tvar output bytes.Buffer\n-\t\t\t\tfmt.Fprintf(&output, \"Current theme: %s%s\", theme, message.Newline)\n-\t\t\t\tfmt.Fprintf(&output, \"   Themes available: \")\n+\t\t\t\tvar output string",
        "path": "chat/command.go",
        "position": null,
        "original_position": 57,
        "commit_id": "a4e9e084c718d707faaccf25510350542af4501a",
        "original_commit_id": "d297f15fe205867c52dd29af0ffec43b03659c6d",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is it better to accumulate by replacing an immutable string repeatedly instead of writing into a buffer?",
        "created_at": "2019-02-22T18:27:33Z",
        "updated_at": "2019-02-24T01:28:32Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/296#discussion_r259459443",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/296",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/259459443"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/296#discussion_r259459443"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/296"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/259594161",
        "pull_request_review_id": 207126039,
        "id": 259594161,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU5NDE2MQ==",
        "diff_hunk": "@@ -212,16 +209,17 @@ func InitCommands(c *Commands) {\n \t\t\t\tif cfg.Theme != nil {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n-\t\t\t\tvar output bytes.Buffer\n-\t\t\t\tfmt.Fprintf(&output, \"Current theme: %s%s\", theme, message.Newline)\n-\t\t\t\tfmt.Fprintf(&output, \"   Themes available: \")\n+\t\t\t\tvar output string",
        "path": "chat/command.go",
        "position": null,
        "original_position": 57,
        "commit_id": "a4e9e084c718d707faaccf25510350542af4501a",
        "original_commit_id": "d297f15fe205867c52dd29af0ffec43b03659c6d",
        "user": {
            "login": "UlisseMini",
            "id": 26258618,
            "node_id": "MDQ6VXNlcjI2MjU4NjE4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/26258618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisseMini",
            "html_url": "https://github.com/UlisseMini",
            "followers_url": "https://api.github.com/users/UlisseMini/followers",
            "following_url": "https://api.github.com/users/UlisseMini/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisseMini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisseMini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisseMini/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisseMini/orgs",
            "repos_url": "https://api.github.com/users/UlisseMini/repos",
            "events_url": "https://api.github.com/users/UlisseMini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisseMini/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It makes the code cleaner and easier to understand, imo speed in this case never matters since its just showing the themes available.\r\n\r\nalso if you really care about speed, even at the cost of readability using a `strings.Builder` would be better then a `bytes.Buffer`",
        "created_at": "2019-02-23T21:40:39Z",
        "updated_at": "2019-02-24T01:28:32Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/296#discussion_r259594161",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/296",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/259594161"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/296#discussion_r259594161"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/296"
            }
        },
        "in_reply_to_id": 259459443
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/259594355",
        "pull_request_review_id": 207126252,
        "id": 259594355,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU5NDM1NQ==",
        "diff_hunk": "@@ -212,16 +209,17 @@ func InitCommands(c *Commands) {\n \t\t\t\tif cfg.Theme != nil {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n-\t\t\t\tvar output bytes.Buffer\n-\t\t\t\tfmt.Fprintf(&output, \"Current theme: %s%s\", theme, message.Newline)\n-\t\t\t\tfmt.Fprintf(&output, \"   Themes available: \")\n+\t\t\t\tvar output string",
        "path": "chat/command.go",
        "position": null,
        "original_position": 57,
        "commit_id": "a4e9e084c718d707faaccf25510350542af4501a",
        "original_commit_id": "d297f15fe205867c52dd29af0ffec43b03659c6d",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd be happy with string.Builder (it didn't exist when I wrote this). Mind changing that?\r\n\r\nIt's not so much about speed as it is about avoiding allocations in a loop (avoiding GC pressure) and consistency with the rest of the codebase.",
        "created_at": "2019-02-23T21:47:44Z",
        "updated_at": "2019-02-24T01:28:32Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/296#discussion_r259594355",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/296",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/259594355"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/296#discussion_r259594355"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/296"
            }
        },
        "in_reply_to_id": 259459443
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/259599511",
        "pull_request_review_id": 207131704,
        "id": 259599511,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU5OTUxMQ==",
        "diff_hunk": "@@ -212,16 +209,17 @@ func InitCommands(c *Commands) {\n \t\t\t\tif cfg.Theme != nil {\n \t\t\t\t\ttheme = cfg.Theme.ID()\n \t\t\t\t}\n-\t\t\t\tvar output bytes.Buffer\n-\t\t\t\tfmt.Fprintf(&output, \"Current theme: %s%s\", theme, message.Newline)\n-\t\t\t\tfmt.Fprintf(&output, \"   Themes available: \")\n+\t\t\t\tvar output string",
        "path": "chat/command.go",
        "position": null,
        "original_position": 57,
        "commit_id": "a4e9e084c718d707faaccf25510350542af4501a",
        "original_commit_id": "d297f15fe205867c52dd29af0ffec43b03659c6d",
        "user": {
            "login": "UlisseMini",
            "id": 26258618,
            "node_id": "MDQ6VXNlcjI2MjU4NjE4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/26258618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisseMini",
            "html_url": "https://github.com/UlisseMini",
            "followers_url": "https://api.github.com/users/UlisseMini/followers",
            "following_url": "https://api.github.com/users/UlisseMini/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisseMini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisseMini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisseMini/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisseMini/orgs",
            "repos_url": "https://api.github.com/users/UlisseMini/repos",
            "events_url": "https://api.github.com/users/UlisseMini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisseMini/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done :)",
        "created_at": "2019-02-24T01:28:48Z",
        "updated_at": "2019-02-24T01:28:48Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/296#discussion_r259599511",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/296",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/259599511"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/296#discussion_r259599511"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/296"
            }
        },
        "in_reply_to_id": 259459443
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266131033",
        "pull_request_review_id": 215228319,
        "id": 266131033,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjEzMTAzMw==",
        "diff_hunk": "@@ -176,6 +176,15 @@ func (h *Host) Connect(term *sshd.Terminal) {\n \t\t\tterm.SetPrompt(GetPrompt(user))\n \t\t\tuser.SetHighlight(user.Name())\n \t\t}\n+\n+\t\t// Gross hack to override line echo in golang.org/x/crypto/ssh/terminal",
        "path": "host.go",
        "position": null,
        "original_position": 5,
        "commit_id": "9c3db55c8318d8cc2b204fdc8a24a7f4b2ee499f",
        "original_commit_id": "e5c6740b899ed5db92e2d559cfee90f2ae8a9b71",
        "user": {
            "login": "tyrelsouza",
            "id": 923113,
            "node_id": "MDQ6VXNlcjkyMzExMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/923113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyrelsouza",
            "html_url": "https://github.com/tyrelsouza",
            "followers_url": "https://api.github.com/users/tyrelsouza/followers",
            "following_url": "https://api.github.com/users/tyrelsouza/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyrelsouza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyrelsouza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyrelsouza/subscriptions",
            "organizations_url": "https://api.github.com/users/tyrelsouza/orgs",
            "repos_url": "https://api.github.com/users/tyrelsouza/repos",
            "events_url": "https://api.github.com/users/tyrelsouza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyrelsouza/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You should feel bad.",
        "created_at": "2019-03-15T20:09:39Z",
        "updated_at": "2019-03-17T17:51:35Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266131033",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/297",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266131033"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266131033"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/297"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266131141",
        "pull_request_review_id": 215228475,
        "id": 266131141,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjEzMTE0MQ==",
        "diff_hunk": "@@ -176,6 +176,15 @@ func (h *Host) Connect(term *sshd.Terminal) {\n \t\t\tterm.SetPrompt(GetPrompt(user))\n \t\t\tuser.SetHighlight(user.Name())\n \t\t}\n+\n+\t\t// Gross hack to override line echo in golang.org/x/crypto/ssh/terminal",
        "path": "host.go",
        "position": null,
        "original_position": 5,
        "commit_id": "9c3db55c8318d8cc2b204fdc8a24a7f4b2ee499f",
        "original_commit_id": "e5c6740b899ed5db92e2d559cfee90f2ae8a9b71",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I doooo",
        "created_at": "2019-03-15T20:10:04Z",
        "updated_at": "2019-03-17T17:51:35Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266131141",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/297",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266131141"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266131141"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/297"
            }
        },
        "in_reply_to_id": 266131033
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266138031",
        "pull_request_review_id": 215237819,
        "id": 266138031,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjEzODAzMQ==",
        "diff_hunk": "@@ -176,6 +176,15 @@ func (h *Host) Connect(term *sshd.Terminal) {\n \t\t\tterm.SetPrompt(GetPrompt(user))\n \t\t\tuser.SetHighlight(user.Name())\n \t\t}\n+\n+\t\t// Gross hack to override line echo in golang.org/x/crypto/ssh/terminal",
        "path": "host.go",
        "position": null,
        "original_position": 5,
        "commit_id": "9c3db55c8318d8cc2b204fdc8a24a7f4b2ee499f",
        "original_commit_id": "e5c6740b899ed5db92e2d559cfee90f2ae8a9b71",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@Low-power is this going to break your relay?",
        "created_at": "2019-03-15T20:34:48Z",
        "updated_at": "2019-03-17T17:51:35Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266138031",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/297",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266138031"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266138031"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/297"
            }
        },
        "in_reply_to_id": 266131033
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266206194",
        "pull_request_review_id": 215319875,
        "id": 266206194,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjIwNjE5NA==",
        "diff_hunk": "@@ -122,43 +125,49 @@ type Theme struct {\n \tnames     *Palette\n }\n \n-func (t Theme) ID() string {\n-\treturn t.id\n+func (theme Theme) ID() string {\n+\treturn theme.id\n }\n \n // Colorize name string given some index\n-func (t Theme) ColorName(u *User) string {\n-\tif t.names == nil {\n+func (theme Theme) ColorName(u *User) string {\n+\tif theme.names == nil {\n \t\treturn u.Name()\n \t}\n \n-\treturn t.names.Get(u.colorIdx).Format(u.Name())\n+\treturn theme.names.Get(u.colorIdx).Format(u.Name())\n }\n \n // Colorize the PM string\n-func (t Theme) ColorPM(s string) string {\n-\tif t.pm == nil {\n+func (theme Theme) ColorPM(s string) string {\n+\tif theme.pm == nil {\n \t\treturn s\n \t}\n \n-\treturn t.pm.Format(s)\n+\treturn theme.pm.Format(s)\n }\n \n // Colorize the Sys message\n-func (t Theme) ColorSys(s string) string {\n-\tif t.sys == nil {\n+func (theme Theme) ColorSys(s string) string {\n+\tif theme.sys == nil {\n \t\treturn s\n \t}\n \n-\treturn t.sys.Format(s)\n+\treturn theme.sys.Format(s)\n }\n \n // Highlight a matched string, usually name\n-func (t Theme) Highlight(s string) string {\n-\tif t.highlight == nil {\n+func (theme Theme) Highlight(s string) string {\n+\tif theme.highlight == nil {\n \t\treturn s\n \t}\n-\treturn t.highlight.Format(s)\n+\treturn theme.highlight.Format(s)\n+}\n+\n+// Timestamp formats and colorizes the timestamp.\n+func (theme Theme) Timestamp(t time.Time) string {\n+\t// TODO: Change this per-theme? Or config?\n+\treturn theme.sys.Format(t.Format(\"2006-01-02 15:04:05 UTC\"))",
        "path": "chat/message/theme.go",
        "position": null,
        "original_position": 71,
        "commit_id": "9c3db55c8318d8cc2b204fdc8a24a7f4b2ee499f",
        "original_commit_id": "cfbc9875c7d1267a8fa8113254ae0f26e7ee15ec",
        "user": {
            "login": "Osndok",
            "id": 80066,
            "node_id": "MDQ6VXNlcjgwMDY2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/80066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Osndok",
            "html_url": "https://github.com/Osndok",
            "followers_url": "https://api.github.com/users/Osndok/followers",
            "following_url": "https://api.github.com/users/Osndok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Osndok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Osndok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Osndok/subscriptions",
            "organizations_url": "https://api.github.com/users/Osndok/orgs",
            "repos_url": "https://api.github.com/users/Osndok/repos",
            "events_url": "https://api.github.com/users/Osndok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Osndok/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't particularly like the nearly-static yyyy-mm-dd & truly-static \" UTC\" strings on every line, but I find the reasoning for their inclusion to be adequate.\r\n\r\nAlthough, I wonder if the reasoning would still hold after the user could explicitly set a timezone, or it were guessed by the incoming IP address... as the user would 'know' the time zone, and not need reminding every line.\r\n\r\nI don't know how expensive the ```time.Format``` function is, but calling it for every timestamp trades runtime performance for code clarity.\r\n",
        "created_at": "2019-03-16T16:05:48Z",
        "updated_at": "2019-03-17T17:51:35Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266206194",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/297",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266206194"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266206194"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/297"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266206261",
        "pull_request_review_id": 215319957,
        "id": 266206261,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjIwNjI2MQ==",
        "diff_hunk": "@@ -122,43 +125,49 @@ type Theme struct {\n \tnames     *Palette\n }\n \n-func (t Theme) ID() string {\n-\treturn t.id\n+func (theme Theme) ID() string {\n+\treturn theme.id\n }\n \n // Colorize name string given some index\n-func (t Theme) ColorName(u *User) string {\n-\tif t.names == nil {\n+func (theme Theme) ColorName(u *User) string {\n+\tif theme.names == nil {\n \t\treturn u.Name()\n \t}\n \n-\treturn t.names.Get(u.colorIdx).Format(u.Name())\n+\treturn theme.names.Get(u.colorIdx).Format(u.Name())\n }\n \n // Colorize the PM string\n-func (t Theme) ColorPM(s string) string {\n-\tif t.pm == nil {\n+func (theme Theme) ColorPM(s string) string {\n+\tif theme.pm == nil {\n \t\treturn s\n \t}\n \n-\treturn t.pm.Format(s)\n+\treturn theme.pm.Format(s)\n }\n \n // Colorize the Sys message\n-func (t Theme) ColorSys(s string) string {\n-\tif t.sys == nil {\n+func (theme Theme) ColorSys(s string) string {\n+\tif theme.sys == nil {\n \t\treturn s\n \t}\n \n-\treturn t.sys.Format(s)\n+\treturn theme.sys.Format(s)\n }\n \n // Highlight a matched string, usually name\n-func (t Theme) Highlight(s string) string {\n-\tif t.highlight == nil {\n+func (theme Theme) Highlight(s string) string {\n+\tif theme.highlight == nil {\n \t\treturn s\n \t}\n-\treturn t.highlight.Format(s)\n+\treturn theme.highlight.Format(s)\n+}\n+\n+// Timestamp formats and colorizes the timestamp.\n+func (theme Theme) Timestamp(t time.Time) string {\n+\t// TODO: Change this per-theme? Or config?\n+\treturn theme.sys.Format(t.Format(\"2006-01-02 15:04:05 UTC\"))",
        "path": "chat/message/theme.go",
        "position": null,
        "original_position": 71,
        "commit_id": "9c3db55c8318d8cc2b204fdc8a24a7f4b2ee499f",
        "original_commit_id": "cfbc9875c7d1267a8fa8113254ae0f26e7ee15ec",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "GeoIP and things like that is a lot more work, so really it's a question whether you think this should be merged now or if it should be blocked until someone someday writes the code to automatically detect timezones. :)\r\n\r\n`time.Format` is not expensive enough to worry, ~everything else we do is much more expensive.",
        "created_at": "2019-03-16T16:08:27Z",
        "updated_at": "2019-03-17T17:51:35Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266206261",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/297",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266206261"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266206261"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/297"
            }
        },
        "in_reply_to_id": 266206194
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266206361",
        "pull_request_review_id": 215320066,
        "id": 266206361,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjIwNjM2MQ==",
        "diff_hunk": "@@ -176,6 +176,15 @@ func (h *Host) Connect(term *sshd.Terminal) {\n \t\t\tterm.SetPrompt(GetPrompt(user))\n \t\t\tuser.SetHighlight(user.Name())\n \t\t}\n+\n+\t\t// Gross hack to override line echo in golang.org/x/crypto/ssh/terminal",
        "path": "host.go",
        "position": null,
        "original_position": 5,
        "commit_id": "9c3db55c8318d8cc2b204fdc8a24a7f4b2ee499f",
        "original_commit_id": "e5c6740b899ed5db92e2d559cfee90f2ae8a9b71",
        "user": {
            "login": "Osndok",
            "id": 80066,
            "node_id": "MDQ6VXNlcjgwMDY2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/80066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Osndok",
            "html_url": "https://github.com/Osndok",
            "followers_url": "https://api.github.com/users/Osndok/followers",
            "following_url": "https://api.github.com/users/Osndok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Osndok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Osndok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Osndok/subscriptions",
            "organizations_url": "https://api.github.com/users/Osndok/orgs",
            "repos_url": "https://api.github.com/users/Osndok/repos",
            "events_url": "https://api.github.com/users/Osndok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Osndok/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's not quite clear, is this \"dirty hack\" in a code path even without the '/timestamps' feature being requested?",
        "created_at": "2019-03-16T16:10:30Z",
        "updated_at": "2019-03-17T17:51:35Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266206361",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/297",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266206361"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266206361"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/297"
            }
        },
        "in_reply_to_id": 266131033
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266206390",
        "pull_request_review_id": 215320102,
        "id": 266206390,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjIwNjM5MA==",
        "diff_hunk": "@@ -176,6 +176,15 @@ func (h *Host) Connect(term *sshd.Terminal) {\n \t\t\tterm.SetPrompt(GetPrompt(user))\n \t\t\tuser.SetHighlight(user.Name())\n \t\t}\n+\n+\t\t// Gross hack to override line echo in golang.org/x/crypto/ssh/terminal",
        "path": "host.go",
        "position": null,
        "original_position": 5,
        "commit_id": "9c3db55c8318d8cc2b204fdc8a24a7f4b2ee499f",
        "original_commit_id": "e5c6740b899ed5db92e2d559cfee90f2ae8a9b71",
        "user": {
            "login": "shazow",
            "id": 6292,
            "node_id": "MDQ6VXNlcjYyOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shazow",
            "html_url": "https://github.com/shazow",
            "followers_url": "https://api.github.com/users/shazow/followers",
            "following_url": "https://api.github.com/users/shazow/following{/other_user}",
            "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
            "organizations_url": "https://api.github.com/users/shazow/orgs",
            "repos_url": "https://api.github.com/users/shazow/repos",
            "events_url": "https://api.github.com/users/shazow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shazow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@Osndok Correct, we fundamentally change how we render your own messages regardless of timestamps. This makes timestamps trivial (and possibly other things in the future).",
        "created_at": "2019-03-16T16:11:32Z",
        "updated_at": "2019-03-17T17:51:35Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266206390",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/297",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266206390"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266206390"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/297"
            }
        },
        "in_reply_to_id": 266131033
    },
    {
        "url": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266281022",
        "pull_request_review_id": 215400164,
        "id": 266281022,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjI4MTAyMg==",
        "diff_hunk": "@@ -122,43 +125,49 @@ type Theme struct {\n \tnames     *Palette\n }\n \n-func (t Theme) ID() string {\n-\treturn t.id\n+func (theme Theme) ID() string {\n+\treturn theme.id\n }\n \n // Colorize name string given some index\n-func (t Theme) ColorName(u *User) string {\n-\tif t.names == nil {\n+func (theme Theme) ColorName(u *User) string {\n+\tif theme.names == nil {\n \t\treturn u.Name()\n \t}\n \n-\treturn t.names.Get(u.colorIdx).Format(u.Name())\n+\treturn theme.names.Get(u.colorIdx).Format(u.Name())\n }\n \n // Colorize the PM string\n-func (t Theme) ColorPM(s string) string {\n-\tif t.pm == nil {\n+func (theme Theme) ColorPM(s string) string {\n+\tif theme.pm == nil {\n \t\treturn s\n \t}\n \n-\treturn t.pm.Format(s)\n+\treturn theme.pm.Format(s)\n }\n \n // Colorize the Sys message\n-func (t Theme) ColorSys(s string) string {\n-\tif t.sys == nil {\n+func (theme Theme) ColorSys(s string) string {\n+\tif theme.sys == nil {\n \t\treturn s\n \t}\n \n-\treturn t.sys.Format(s)\n+\treturn theme.sys.Format(s)\n }\n \n // Highlight a matched string, usually name\n-func (t Theme) Highlight(s string) string {\n-\tif t.highlight == nil {\n+func (theme Theme) Highlight(s string) string {\n+\tif theme.highlight == nil {\n \t\treturn s\n \t}\n-\treturn t.highlight.Format(s)\n+\treturn theme.highlight.Format(s)\n+}\n+\n+// Timestamp formats and colorizes the timestamp.\n+func (theme Theme) Timestamp(t time.Time) string {\n+\t// TODO: Change this per-theme? Or config?\n+\treturn theme.sys.Format(t.Format(\"2006-01-02 15:04:05 UTC\"))",
        "path": "chat/message/theme.go",
        "position": null,
        "original_position": 71,
        "commit_id": "9c3db55c8318d8cc2b204fdc8a24a7f4b2ee499f",
        "original_commit_id": "cfbc9875c7d1267a8fa8113254ae0f26e7ee15ec",
        "user": {
            "login": "Low-power",
            "id": 6129385,
            "node_id": "MDQ6VXNlcjYxMjkzODU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6129385?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Low-power",
            "html_url": "https://github.com/Low-power",
            "followers_url": "https://api.github.com/users/Low-power/followers",
            "following_url": "https://api.github.com/users/Low-power/following{/other_user}",
            "gists_url": "https://api.github.com/users/Low-power/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Low-power/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Low-power/subscriptions",
            "organizations_url": "https://api.github.com/users/Low-power/orgs",
            "repos_url": "https://api.github.com/users/Low-power/repos",
            "events_url": "https://api.github.com/users/Low-power/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Low-power/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You can use the `TZ` environment variable, if that being passed from a SSH client, like:\r\n`ssh -o SendEnv=TZ ...`",
        "created_at": "2019-03-18T02:47:43Z",
        "updated_at": "2019-03-18T02:47:43Z",
        "html_url": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266281022",
        "pull_request_url": "https://api.github.com/repos/shazow/ssh-chat/pulls/297",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/comments/266281022"
            },
            "html": {
                "href": "https://github.com/shazow/ssh-chat/pull/297#discussion_r266281022"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/shazow/ssh-chat/pulls/297"
            }
        },
        "in_reply_to_id": 266206194
    }
]