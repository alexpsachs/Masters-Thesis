[
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61532465",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/4#issuecomment-61532465",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/4",
        "id": 61532465,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTMyNDY1",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-03T19:22:24Z",
        "updated_at": "2014-11-03T19:22:24Z",
        "author_association": "OWNER",
        "body": "Clarified the comment in b90a14a61e76c54d01347aec581d226f3df59112\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61535339",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/3#issuecomment-61535339",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/3",
        "id": 61535339,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTM1MzM5",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-03T19:39:47Z",
        "updated_at": "2014-11-03T19:39:47Z",
        "author_association": "OWNER",
        "body": "Which function are you referring to?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61535673",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/3#issuecomment-61535673",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/3",
        "id": 61535673,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTM1Njcz",
        "user": {
            "login": "mvolkmann",
            "id": 79312,
            "node_id": "MDQ6VXNlcjc5MzEy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/79312?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mvolkmann",
            "html_url": "https://github.com/mvolkmann",
            "followers_url": "https://api.github.com/users/mvolkmann/followers",
            "following_url": "https://api.github.com/users/mvolkmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/mvolkmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mvolkmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mvolkmann/subscriptions",
            "organizations_url": "https://api.github.com/users/mvolkmann/orgs",
            "repos_url": "https://api.github.com/users/mvolkmann/repos",
            "events_url": "https://api.github.com/users/mvolkmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mvolkmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-03T19:41:49Z",
        "updated_at": "2014-11-03T19:41:49Z",
        "author_association": "NONE",
        "body": "Immutable\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61536018",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/3#issuecomment-61536018",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/3",
        "id": 61536018,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTM2MDE4",
        "user": {
            "login": "mvolkmann",
            "id": 79312,
            "node_id": "MDQ6VXNlcjc5MzEy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/79312?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mvolkmann",
            "html_url": "https://github.com/mvolkmann",
            "followers_url": "https://api.github.com/users/mvolkmann/followers",
            "following_url": "https://api.github.com/users/mvolkmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/mvolkmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mvolkmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mvolkmann/subscriptions",
            "organizations_url": "https://api.github.com/users/mvolkmann/orgs",
            "repos_url": "https://api.github.com/users/mvolkmann/repos",
            "events_url": "https://api.github.com/users/mvolkmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mvolkmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-03T19:44:02Z",
        "updated_at": "2014-11-03T19:44:02Z",
        "author_association": "NONE",
        "body": "Linters complain when you call a function that starts uppercase rather than using the \"new\" keyword.\n\nvar data = new Immutable(thing); // linter likes\nvar data = Immutable(thing); // linter complains\nvar data = immutable(thing); // linter likes\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61568127",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/3#issuecomment-61568127",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/3",
        "id": 61568127,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTY4MTI3",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-03T23:23:10Z",
        "updated_at": "2014-11-03T23:23:10Z",
        "author_association": "OWNER",
        "body": "Ah. Fair point...I don't especially care one way or the other. Any other opinions on this? @raorao?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61569484",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/3#issuecomment-61569484",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/3",
        "id": 61569484,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTY5NDg0",
        "user": {
            "login": "mvolkmann",
            "id": 79312,
            "node_id": "MDQ6VXNlcjc5MzEy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/79312?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mvolkmann",
            "html_url": "https://github.com/mvolkmann",
            "followers_url": "https://api.github.com/users/mvolkmann/followers",
            "following_url": "https://api.github.com/users/mvolkmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/mvolkmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mvolkmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mvolkmann/subscriptions",
            "organizations_url": "https://api.github.com/users/mvolkmann/orgs",
            "repos_url": "https://api.github.com/users/mvolkmann/repos",
            "events_url": "https://api.github.com/users/mvolkmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mvolkmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-03T23:35:52Z",
        "updated_at": "2014-11-03T23:35:52Z",
        "author_association": "NONE",
        "body": "I know when I see an uppercase function name I immediately think it is a constructor function.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61571563",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/3#issuecomment-61571563",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/3",
        "id": 61571563,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTcxNTYz",
        "user": {
            "login": "raorao",
            "id": 296116,
            "node_id": "MDQ6VXNlcjI5NjExNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/296116?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raorao",
            "html_url": "https://github.com/raorao",
            "followers_url": "https://api.github.com/users/raorao/followers",
            "following_url": "https://api.github.com/users/raorao/following{/other_user}",
            "gists_url": "https://api.github.com/users/raorao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raorao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raorao/subscriptions",
            "organizations_url": "https://api.github.com/users/raorao/orgs",
            "repos_url": "https://api.github.com/users/raorao/repos",
            "events_url": "https://api.github.com/users/raorao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raorao/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-03T23:55:41Z",
        "updated_at": "2014-11-03T23:55:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "Personally I like the uppercase function name, since Immutable is a constructor in spirit. Perhaps there should just be a lower case version of the function in the public interface for the linted among us. \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61571996",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/3#issuecomment-61571996",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/3",
        "id": 61571996,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTcxOTk2",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-03T23:59:27Z",
        "updated_at": "2014-11-03T23:59:27Z",
        "author_association": "OWNER",
        "body": "I agree about \"constructor in spirit\" (which was why I named it that way.)\n\nActually it just occurred to me that this seems easily solvable by the library end user, e.g. `var immutable = require(\"seamless-immutable.js\")` - although @mvolkmann please feel free to correct me if I'm missing something. :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61576958",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/3#issuecomment-61576958",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/3",
        "id": 61576958,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTc2OTU4",
        "user": {
            "login": "mvolkmann",
            "id": 79312,
            "node_id": "MDQ6VXNlcjc5MzEy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/79312?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mvolkmann",
            "html_url": "https://github.com/mvolkmann",
            "followers_url": "https://api.github.com/users/mvolkmann/followers",
            "following_url": "https://api.github.com/users/mvolkmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/mvolkmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mvolkmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mvolkmann/subscriptions",
            "organizations_url": "https://api.github.com/users/mvolkmann/orgs",
            "repos_url": "https://api.github.com/users/mvolkmann/repos",
            "events_url": "https://api.github.com/users/mvolkmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mvolkmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-04T00:54:43Z",
        "updated_at": "2014-11-04T00:54:43Z",
        "author_association": "NONE",
        "body": "Ah, that's certainly true. But if you want to make it usable in browsers that don't support ES6 modules, I guess you'll want to expose that as a global variable.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61577262",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/3#issuecomment-61577262",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/3",
        "id": 61577262,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTc3MjYy",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-04T00:58:19Z",
        "updated_at": "2014-11-04T00:58:19Z",
        "author_association": "OWNER",
        "body": "Well, it's just as easy if you use RequireJS, Browserify, Webpack, Node, etc. - and of course if you're just attaching it to `window`, you can always go `window.immutable = Immutable`, so I think that's frictionless enough that this is worth closing.\n\nThanks for pointing this out!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61854784",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/9#issuecomment-61854784",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/9",
        "id": 61854784,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxODU0Nzg0",
        "user": {
            "login": "raorao",
            "id": 296116,
            "node_id": "MDQ6VXNlcjI5NjExNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/296116?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raorao",
            "html_url": "https://github.com/raorao",
            "followers_url": "https://api.github.com/users/raorao/followers",
            "following_url": "https://api.github.com/users/raorao/following{/other_user}",
            "gists_url": "https://api.github.com/users/raorao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raorao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raorao/subscriptions",
            "organizations_url": "https://api.github.com/users/raorao/orgs",
            "repos_url": "https://api.github.com/users/raorao/repos",
            "events_url": "https://api.github.com/users/raorao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raorao/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-05T18:15:56Z",
        "updated_at": "2014-11-05T18:15:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman renamed the stuff that you flagged. all tests passing locally using zuul.  \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/61911942",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/10#issuecomment-61911942",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/10",
        "id": 61911942,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTExOTQy",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-06T01:10:14Z",
        "updated_at": "2014-11-06T01:11:02Z",
        "author_association": "OWNER",
        "body": "Yep, it should be deeply immutable. This is a bug. The guarantees of immutability are important to maintain...I'll fix this in a jiffy. Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/62051629",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/13#issuecomment-62051629",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/13",
        "id": 62051629,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDUxNjI5",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-06T21:09:37Z",
        "updated_at": "2014-11-06T21:09:37Z",
        "author_association": "OWNER",
        "body": "Oh nice! I think this should be a very inexpensive check to do...I'll take a crack at it real quick.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/62070352",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/13#issuecomment-62070352",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/13",
        "id": 62070352,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDcwMzUy",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-06T23:24:01Z",
        "updated_at": "2014-11-06T23:24:01Z",
        "author_association": "OWNER",
        "body": "Changed in c7887bbb4b0bcb6141dbc32aafde72869b505883\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/62074828",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/15#issuecomment-62074828",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/15",
        "id": 62074828,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDc0ODI4",
        "user": {
            "login": "raorao",
            "id": 296116,
            "node_id": "MDQ6VXNlcjI5NjExNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/296116?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raorao",
            "html_url": "https://github.com/raorao",
            "followers_url": "https://api.github.com/users/raorao/followers",
            "following_url": "https://api.github.com/users/raorao/following{/other_user}",
            "gists_url": "https://api.github.com/users/raorao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raorao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raorao/subscriptions",
            "organizations_url": "https://api.github.com/users/raorao/orgs",
            "repos_url": "https://api.github.com/users/raorao/repos",
            "events_url": "https://api.github.com/users/raorao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raorao/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-07T00:06:29Z",
        "updated_at": "2014-11-07T00:06:29Z",
        "author_association": "CONTRIBUTOR",
        "body": "duplicate.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/62507536",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/14#issuecomment-62507536",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/14",
        "id": 62507536,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTA3NTM2",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-11T06:26:51Z",
        "updated_at": "2014-11-11T06:26:51Z",
        "author_association": "OWNER",
        "body": "Fixed in https://github.com/rtfeldman/seamless-immutable/commit/c7887bbb4b0bcb6141dbc32aafde72869b505883\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/63570060",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/6#issuecomment-63570060",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/6",
        "id": 63570060,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTcwMDYw",
        "user": {
            "login": "alanhogan",
            "id": 6808,
            "node_id": "MDQ6VXNlcjY4MDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6808?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhogan",
            "html_url": "https://github.com/alanhogan",
            "followers_url": "https://api.github.com/users/alanhogan/followers",
            "following_url": "https://api.github.com/users/alanhogan/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhogan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhogan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhogan/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhogan/orgs",
            "repos_url": "https://api.github.com/users/alanhogan/repos",
            "events_url": "https://api.github.com/users/alanhogan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhogan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-19T00:09:00Z",
        "updated_at": "2014-11-19T00:09:00Z",
        "author_association": "NONE",
        "body": "sounds legit\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/63760903",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/16#issuecomment-63760903",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/16",
        "id": 63760903,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzYwOTAz",
        "user": {
            "login": "alanhogan",
            "id": 6808,
            "node_id": "MDQ6VXNlcjY4MDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6808?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhogan",
            "html_url": "https://github.com/alanhogan",
            "followers_url": "https://api.github.com/users/alanhogan/followers",
            "following_url": "https://api.github.com/users/alanhogan/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhogan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhogan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhogan/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhogan/orgs",
            "repos_url": "https://api.github.com/users/alanhogan/repos",
            "events_url": "https://api.github.com/users/alanhogan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhogan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-20T04:50:13Z",
        "updated_at": "2014-11-20T04:50:13Z",
        "author_association": "NONE",
        "body": "Is it undesirable or impossible for immutable data structures to handle cycles?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/63761007",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/16#issuecomment-63761007",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/16",
        "id": 63761007,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzYxMDA3",
        "user": {
            "login": "alanhogan",
            "id": 6808,
            "node_id": "MDQ6VXNlcjY4MDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6808?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhogan",
            "html_url": "https://github.com/alanhogan",
            "followers_url": "https://api.github.com/users/alanhogan/followers",
            "following_url": "https://api.github.com/users/alanhogan/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhogan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhogan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhogan/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhogan/orgs",
            "repos_url": "https://api.github.com/users/alanhogan/repos",
            "events_url": "https://api.github.com/users/alanhogan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhogan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-20T04:52:05Z",
        "updated_at": "2014-11-20T04:52:05Z",
        "author_association": "NONE",
        "body": "A better question is: why do you think it is unwise to support circular references? I am merely curious, of course\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/63890477",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/16#issuecomment-63890477",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/16",
        "id": 63890477,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzODkwNDc3",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-20T22:18:12Z",
        "updated_at": "2014-11-20T22:18:12Z",
        "author_association": "OWNER",
        "body": "Just that it's time-consuming both from an implementation and from a performance perspective. It would entail building up an intermediate data structure just to track where things need to end up, then converting that back into a cloned object with references appropriately reconnected...\n\nThis came up because I accidentally called `Immutable` on a React component (which contained a circular reference), and it just threw a stack overflow, which made it harder to figure out what I'd done wrong. As soon as I realized the root cause, it was easy to fix, so having a check that results in an exception is all I need to avoid that particular issue in the future. :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/63890893",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/16#issuecomment-63890893",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/16",
        "id": 63890893,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzODkwODkz",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-20T22:21:13Z",
        "updated_at": "2014-11-20T22:21:13Z",
        "author_association": "OWNER",
        "body": "That said, if it's something someone actually needs, I'm not aware of any reason it couldn't be done.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/63906651",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/16#issuecomment-63906651",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/16",
        "id": 63906651,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTA2NjUx",
        "user": {
            "login": "alanhogan",
            "id": 6808,
            "node_id": "MDQ6VXNlcjY4MDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6808?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhogan",
            "html_url": "https://github.com/alanhogan",
            "followers_url": "https://api.github.com/users/alanhogan/followers",
            "following_url": "https://api.github.com/users/alanhogan/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhogan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhogan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhogan/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhogan/orgs",
            "repos_url": "https://api.github.com/users/alanhogan/repos",
            "events_url": "https://api.github.com/users/alanhogan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhogan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-21T00:37:33Z",
        "updated_at": "2014-11-21T00:41:45Z",
        "author_association": "NONE",
        "body": "Yep, makes total sense. seems smart to me\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/69347152",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/1#issuecomment-69347152",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/1",
        "id": 69347152,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzQ3MTUy",
        "user": {
            "login": "narqo",
            "id": 88045,
            "node_id": "MDQ6VXNlcjg4MDQ1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/88045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/narqo",
            "html_url": "https://github.com/narqo",
            "followers_url": "https://api.github.com/users/narqo/followers",
            "following_url": "https://api.github.com/users/narqo/following{/other_user}",
            "gists_url": "https://api.github.com/users/narqo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/narqo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/narqo/subscriptions",
            "organizations_url": "https://api.github.com/users/narqo/orgs",
            "repos_url": "https://api.github.com/users/narqo/repos",
            "events_url": "https://api.github.com/users/narqo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/narqo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-09T15:17:22Z",
        "updated_at": "2015-01-09T15:17:22Z",
        "author_association": "NONE",
        "body": "Maybe there should be `Immutable.is()` static method, which would have the same semantic [ES6's `Object.is()` has](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is)?\n\nThe API may look like this: `Immutable.is(obj1, obj2)` to check whether objects are equal by value. \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/69348243",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/1#issuecomment-69348243",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/1",
        "id": 69348243,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzQ4MjQz",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-09T15:24:46Z",
        "updated_at": "2015-01-09T15:25:39Z",
        "author_association": "OWNER",
        "body": "I wouldn't want to confuse people; `Object.is` only differs from `===` in the specific cases of `NaN`, `0`, and `-0` (and [handles object comparisons in the same way as ===](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Sameness)), whereas the `deepEquals` I'm referring to would compare the contents of objects, like what [Underscore's _.isEqual](http://underscorejs.org/#isEqual) does.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/69376305",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/1#issuecomment-69376305",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/1",
        "id": 69376305,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5Mzc2MzA1",
        "user": {
            "login": "narqo",
            "id": 88045,
            "node_id": "MDQ6VXNlcjg4MDQ1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/88045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/narqo",
            "html_url": "https://github.com/narqo",
            "followers_url": "https://api.github.com/users/narqo/followers",
            "following_url": "https://api.github.com/users/narqo/following{/other_user}",
            "gists_url": "https://api.github.com/users/narqo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/narqo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/narqo/subscriptions",
            "organizations_url": "https://api.github.com/users/narqo/orgs",
            "repos_url": "https://api.github.com/users/narqo/repos",
            "events_url": "https://api.github.com/users/narqo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/narqo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-09T18:28:08Z",
        "updated_at": "2015-01-09T18:28:41Z",
        "author_association": "NONE",
        "body": "You're absolutely right. Somehow I decided that `Object.is()` compares objects by there values, not by \"identity\". My bad, sorry.\n\nIn any case: :+1: to the issue ;)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/72979966",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/6#issuecomment-72979966",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/6",
        "id": 72979966,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTc5OTY2",
        "user": {
            "login": "diegovilar",
            "id": 759416,
            "node_id": "MDQ6VXNlcjc1OTQxNg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/759416?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/diegovilar",
            "html_url": "https://github.com/diegovilar",
            "followers_url": "https://api.github.com/users/diegovilar/followers",
            "following_url": "https://api.github.com/users/diegovilar/following{/other_user}",
            "gists_url": "https://api.github.com/users/diegovilar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/diegovilar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/diegovilar/subscriptions",
            "organizations_url": "https://api.github.com/users/diegovilar/orgs",
            "repos_url": "https://api.github.com/users/diegovilar/repos",
            "events_url": "https://api.github.com/users/diegovilar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/diegovilar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-05T01:50:02Z",
        "updated_at": "2015-02-05T01:50:02Z",
        "author_association": "NONE",
        "body": "Agreed. Those constraints are mostly not supposed to be runtime errors and should be catch in development.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/73372425",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/18#issuecomment-73372425",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/18",
        "id": 73372425,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczMzcyNDI1",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-07T17:01:45Z",
        "updated_at": "2015-02-07T17:01:45Z",
        "author_association": "OWNER",
        "body": "Currently no plans for cursors, sorry!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/73432626",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/17#issuecomment-73432626",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/17",
        "id": 73432626,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczNDMyNjI2",
        "user": {
            "login": "n1k0",
            "id": 41547,
            "node_id": "MDQ6VXNlcjQxNTQ3",
            "avatar_url": "https://avatars1.githubusercontent.com/u/41547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/n1k0",
            "html_url": "https://github.com/n1k0",
            "followers_url": "https://api.github.com/users/n1k0/followers",
            "following_url": "https://api.github.com/users/n1k0/following{/other_user}",
            "gists_url": "https://api.github.com/users/n1k0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/n1k0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/n1k0/subscriptions",
            "organizations_url": "https://api.github.com/users/n1k0/orgs",
            "repos_url": "https://api.github.com/users/n1k0/repos",
            "events_url": "https://api.github.com/users/n1k0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/n1k0/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-08T21:21:49Z",
        "updated_at": "2015-02-08T21:21:49Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/73434493",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/1#issuecomment-73434493",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/1",
        "id": 73434493,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczNDM0NDkz",
        "user": {
            "login": "n1k0",
            "id": 41547,
            "node_id": "MDQ6VXNlcjQxNTQ3",
            "avatar_url": "https://avatars1.githubusercontent.com/u/41547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/n1k0",
            "html_url": "https://github.com/n1k0",
            "followers_url": "https://api.github.com/users/n1k0/followers",
            "following_url": "https://api.github.com/users/n1k0/following{/other_user}",
            "gists_url": "https://api.github.com/users/n1k0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/n1k0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/n1k0/subscriptions",
            "organizations_url": "https://api.github.com/users/n1k0/orgs",
            "repos_url": "https://api.github.com/users/n1k0/repos",
            "events_url": "https://api.github.com/users/n1k0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/n1k0/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-08T21:56:56Z",
        "updated_at": "2015-02-08T22:05:33Z",
        "author_association": "NONE",
        "body": "+1, that would greatly help checking if two immutable structures actually differ. \n\nNit: How about a shorter name, eg. `equals`, or `eq`?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/77273919",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/19#issuecomment-77273919",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/19",
        "id": 77273919,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjczOTE5",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-04T23:30:03Z",
        "updated_at": "2015-03-04T23:30:03Z",
        "author_association": "OWNER",
        "body": "I dig it! Test duplication is no problem, but from an API perspective I'd prefer if this were an optional boolean passed to `merge` to enable deep merging.\n\nWould love to see a Pull Request for this. :+1: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/77379010",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/19#issuecomment-77379010",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/19",
        "id": 77379010,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3Mzc5MDEw",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-05T15:03:48Z",
        "updated_at": "2015-03-05T15:03:48Z",
        "author_association": "COLLABORATOR",
        "body": "Ok! Instead of a boolean, what to you think about a `mergeWith` function or similar that takes a config object first (which the normal merge can use under the covers) so more config can be added later if needed?\n\n`obj1.mergeWith({deep: true}, obj2);`\n\nI have a use case where I would like to supply a custom merger sometimes, that could fit into this strategy.\n\nBut if you don't like it I will do a PR with the boolean.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/77384499",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/19#issuecomment-77384499",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/19",
        "id": 77384499,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3Mzg0NDk5",
        "user": {
            "login": "RangerMauve",
            "id": 911495,
            "node_id": "MDQ6VXNlcjkxMTQ5NQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/911495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RangerMauve",
            "html_url": "https://github.com/RangerMauve",
            "followers_url": "https://api.github.com/users/RangerMauve/followers",
            "following_url": "https://api.github.com/users/RangerMauve/following{/other_user}",
            "gists_url": "https://api.github.com/users/RangerMauve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RangerMauve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RangerMauve/subscriptions",
            "organizations_url": "https://api.github.com/users/RangerMauve/orgs",
            "repos_url": "https://api.github.com/users/RangerMauve/repos",
            "events_url": "https://api.github.com/users/RangerMauve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RangerMauve/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-05T15:31:34Z",
        "updated_at": "2015-03-05T15:31:34Z",
        "author_association": "NONE",
        "body": "IMO it's usually nicer to have configs or optional flags as the last argument in a function and not the first.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/77444904",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/19#issuecomment-77444904",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/19",
        "id": 77444904,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDQ0OTA0",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-05T20:28:28Z",
        "updated_at": "2015-03-05T20:28:28Z",
        "author_association": "COLLABORATOR",
        "body": "@RangerMauve I agree in general, but if the `With` in the function name is for merging _with_ the config I think it is natural if the mandatory config is first. Especially if it is a merge with multiple objects like:\n\n`obj1.mergeWith({deep: true}, obj2, obj3, obj4, obj5);`\n\nBut it doesn't matter much either way. Any thoughts @rtfeldman?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/77447036",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/19#issuecomment-77447036",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/19",
        "id": 77447036,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDQ3MDM2",
        "user": {
            "login": "RangerMauve",
            "id": 911495,
            "node_id": "MDQ6VXNlcjkxMTQ5NQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/911495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RangerMauve",
            "html_url": "https://github.com/RangerMauve",
            "followers_url": "https://api.github.com/users/RangerMauve/followers",
            "following_url": "https://api.github.com/users/RangerMauve/following{/other_user}",
            "gists_url": "https://api.github.com/users/RangerMauve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RangerMauve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RangerMauve/subscriptions",
            "organizations_url": "https://api.github.com/users/RangerMauve/orgs",
            "repos_url": "https://api.github.com/users/RangerMauve/repos",
            "events_url": "https://api.github.com/users/RangerMauve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RangerMauve/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-05T20:40:10Z",
        "updated_at": "2015-03-05T20:40:10Z",
        "author_association": "NONE",
        "body": "@crudh That's a good point, actually. And it'd work well once [rest paramters](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters) become mainstream.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/77448593",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/19#issuecomment-77448593",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/19",
        "id": 77448593,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDQ4NTkz",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-05T20:49:14Z",
        "updated_at": "2015-03-05T20:49:14Z",
        "author_association": "OWNER",
        "body": "Good points all around. My preference is to change the existing `merge` as follows:\n1. It now always takes exactly one or exactly two arguments.\n2. The first argument works the same as always: you can pass it one object to merge, or an array of them.\n3. The second argument is optional, and is a configuration object that currently supports only `{deep: true}`\n\nSound good?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/77449093",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/19#issuecomment-77449093",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/19",
        "id": 77449093,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDQ5MDkz",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-05T20:52:04Z",
        "updated_at": "2015-03-05T20:52:04Z",
        "author_association": "COLLABORATOR",
        "body": "Sounds good to me!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/78168981",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/18#issuecomment-78168981",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/18",
        "id": 78168981,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTY4OTgx",
        "user": {
            "login": "seanhess",
            "id": 16249,
            "node_id": "MDQ6VXNlcjE2MjQ5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/16249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanhess",
            "html_url": "https://github.com/seanhess",
            "followers_url": "https://api.github.com/users/seanhess/followers",
            "following_url": "https://api.github.com/users/seanhess/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanhess/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanhess/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanhess/subscriptions",
            "organizations_url": "https://api.github.com/users/seanhess/orgs",
            "repos_url": "https://api.github.com/users/seanhess/repos",
            "events_url": "https://api.github.com/users/seanhess/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanhess/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-10T23:13:35Z",
        "updated_at": "2015-03-10T23:13:35Z",
        "author_association": "NONE",
        "body": "@natew I think cursors can be implemented separately from the data structure. See here: https://github.com/kualico/easy-cursors\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/78183711",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/20#issuecomment-78183711",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/20",
        "id": 78183711,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTgzNzEx",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-11T01:26:49Z",
        "updated_at": "2015-03-11T01:26:49Z",
        "author_association": "OWNER",
        "body": "Looks great! Thanks for adding this.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/78188756",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/21#issuecomment-78188756",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/21",
        "id": 78188756,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTg4NzU2",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-11T02:25:05Z",
        "updated_at": "2015-03-11T02:25:05Z",
        "author_association": "OWNER",
        "body": "I haven't come across this use case yet, but it turns out you can already do this pretty cleanly with [`asMutable`](https://github.com/rtfeldman/seamless-immutable#asmutable):\n\n``` javascript\nvar item = Immutable({name: \"bob\"});\n\n// new Item is immutable, obj is mutable\nvar newItem = (function(obj) {\n   obj.name = \"henry\";\n   return obj;\n})(item.asMutable());\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/78188826",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/21#issuecomment-78188826",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/21",
        "id": 78188826,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTg4ODI2",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-11T02:25:54Z",
        "updated_at": "2015-03-11T02:25:54Z",
        "author_association": "OWNER",
        "body": "@seanhess Seems like this would address your use case, yeah? :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/78189994",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/18#issuecomment-78189994",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/18",
        "id": 78189994,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTg5OTk0",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-11T02:40:41Z",
        "updated_at": "2015-03-11T02:40:41Z",
        "author_association": "OWNER",
        "body": "Indeed!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/78201612",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/21#issuecomment-78201612",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/21",
        "id": 78201612,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjAxNjEy",
        "user": {
            "login": "seanhess",
            "id": 16249,
            "node_id": "MDQ6VXNlcjE2MjQ5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/16249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanhess",
            "html_url": "https://github.com/seanhess",
            "followers_url": "https://api.github.com/users/seanhess/followers",
            "following_url": "https://api.github.com/users/seanhess/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanhess/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanhess/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanhess/subscriptions",
            "organizations_url": "https://api.github.com/users/seanhess/orgs",
            "repos_url": "https://api.github.com/users/seanhess/repos",
            "events_url": "https://api.github.com/users/seanhess/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanhess/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-11T04:01:18Z",
        "updated_at": "2015-03-11T04:01:18Z",
        "author_association": "NONE",
        "body": "Cool! But wouldn't newItem be mutable afterward? \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/78202680",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/21#issuecomment-78202680",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/21",
        "id": 78202680,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjAyNjgw",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-11T04:16:54Z",
        "updated_at": "2015-03-11T04:16:54Z",
        "author_association": "OWNER",
        "body": "True! Fixed:\n\n``` javascript\nvar item = Immutable({name: \"bob\"});\n\n// new Item is immutable, obj is mutable\nvar newItem = (function(obj) {\n   obj.name = \"henry\";\n   return Immutable(obj);\n})(item.asMutable());\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/78381615",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/7#issuecomment-78381615",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/7",
        "id": 78381615,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzgxNjE1",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-11T21:58:38Z",
        "updated_at": "2015-03-11T21:58:38Z",
        "author_association": "COLLABORATOR",
        "body": "I created seamless versions of all the tests (except the sum test that uses reduce on an object, not sure what an eqiuvalent would be in seamless) and put it [here](https://github.com/crudh/js-hashtrie-benchmark/compare/master...seamless-immutable). Please let me know if I can improve any of them. \n\nThe **Put all** and **Remove all** tests puts/removes all properties one by one. So I did that with the seamless implementations too. But I also created **Batch**-versions of them that calls `merge` and `without` once with an array instead. Seems like what you would do in a real application.\n\nAnd it would be interesting to see the tests with a [Prod Mode](https://github.com/rtfeldman/seamless-immutable/issues/6).\n\nThese are the results:\n\n```\nGet nth\nhashtrie(10)                  :     10988624.32 +/- 0.89% op/s\nhamt(10)                      :     11662756.60 +/- 0.92% op/s\nhamt_plus(10)                 :     10689406.32 +/- 0.89% op/s\npersistent-hash-trie(10)      :      9868732.28 +/- 0.97% op/s\nmori hash_map(10)             :      2337573.70 +/- 0.85% op/s\nimmutable(10)                 :      9873107.21 +/- 0.70% op/s\nseamlessImmutable(10)         :     11640944.63 +/- 0.59% op/s\n\n\nput nth\nhashtrie(10)                  :      1851101.94 +/- 0.52% op/s\nhamt(10)                      :      1396350.78 +/- 0.75% op/s\nhamt_plus(10)                 :      1359048.46 +/- 0.82% op/s\npersistent-hash-trie(10)      :       333296.20 +/- 0.68% op/s\nmori hash_map(10)             :      2069530.07 +/- 0.82% op/s\nimmutable(10)                 :      1987496.81 +/- 0.57% op/s\nseamlessImmutable(10)         :       103734.16 +/- 0.63% op/s\n\n\nPut All\nhashtrie(10)                  :       298151.58 +/- 0.58% op/s\nhamt(10)                      :       245611.96 +/- 0.59% op/s\nhamt_plus(10)                 :       228329.11 +/- 0.56% op/s\npersistent-hash-trie(10)      :        46293.96 +/- 0.79% op/s\nmori hash_map(10)             :        98024.61 +/- 0.58% op/s\nimmutable(10)                 :       164094.88 +/- 0.57% op/s\nseamlessImmutable(10)         :         9432.17 +/- 0.56% op/s\nseamlessImmutableBatch(10)    :        50610.03 +/- 0.65% op/s\n\n\nPut All (transient)\nhamt(10)                      :       187368.43 +/- 0.66% op/s\nhamt_plus(10)                 :       367960.47 +/- 0.66% op/s\nmori hash_map(10)             :       130079.97 +/- 0.70% op/s\nimmutable(10)                 :       220634.84 +/- 0.60% op/s\nseamlessImmutable(10)         :        59298.56 +/- 0.67% op/s\n\n\nremove nth\nhashtrie(10)                  :      2192759.16 +/- 0.63% op/s\nhamt(10)                      :      2022976.44 +/- 0.60% op/s\nhamt_plus(10)                 :      1557230.87 +/- 0.71% op/s\npersistent-hash-trie(10)      :       171527.96 +/- 0.79% op/s\nmori hash_map(10)             :      1402983.09 +/- 0.67% op/s\nimmutable(10)                 :      2168393.04 +/- 0.66% op/s\nseamlessImmutable(10)         :        70445.80 +/- 0.72% op/s\n\n\nRemove All\nhashtrie(10)                  :       281865.17 +/- 0.69% op/s\nhamt(10)                      :       245017.59 +/- 0.78% op/s\nhamt_plus(10)                 :       190793.16 +/- 0.66% op/s\npersistent-hash-trie(10)      :        29254.94 +/- 0.73% op/s\nmori hash_map(10)             :       184961.04 +/- 0.63% op/s\nimmutable(10)                 :       268382.34 +/- 0.78% op/s\nseamlessImmutable(10)         :         7364.39 +/- 1.14% op/s\nseamlessImmutableBatch(10)    :       115008.51 +/- 1.26% op/s\n\n\nRemove All (transient)\nhamt(10)                      :       205820.55 +/- 0.57% op/s\nhamt_plus(10)                 :       334430.04 +/- 0.58% op/s\nmori hash_map(10)             :        97248.60 +/- 0.94% op/s\nimmutable(10)                 :       533887.03 +/- 0.63% op/s\nseamlessImmutable(10)         :        79780.72 +/- 0.53% op/s\n\n\nCount\nhashtrie(10)                  :       471568.80 +/- 0.46% op/s\nhamt(10)                      :     14029433.73 +/- 0.47% op/s\nhamt_plus(10)                 :     13548777.96 +/- 0.62% op/s\npersistent-hash-trie(10)      :       186148.73 +/- 0.76% op/s\nmori hash_map(10)             :     75418087.81 +/- 0.70% op/s\nimmutable(10)                 :     78292673.71 +/- 1.07% op/s\nseamlessImmutable(10)         :      1038235.14 +/- 0.62% op/s\n\n\nSum\nhashtrie(10)                  :       459645.40 +/- 0.55% op/s\nhamt(10)                      :      9921932.32 +/- 0.43% op/s\nhamt_plus(10)                 :      9604783.60 +/- 0.67% op/s\npersistent-hash-trie(10)      :       279183.30 +/- 0.69% op/s\nmori hash_map(10)             :      1263520.34 +/- 0.54% op/s\nimmutable(10)                 :      2336308.25 +/- 0.71% op/s\n\n\nKeys\nhashtrie(10)                  :       275352.68 +/- 0.60% op/s\nhamt(10)                      :      4441970.69 +/- 0.83% op/s\nhamt_plus(10)                 :      5865476.21 +/- 0.60% op/s\npersistent-hash-trie(10)      :       217769.70 +/- 0.53% op/s\nmori hash_map(10)             :       451105.71 +/- 0.69% op/s\nimmutable(10)                 :            0.00 +/- 0.00% op/s\nseamlessImmutable(10)         :      1032501.82 +/- 0.57% op/s\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/78433428",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/7#issuecomment-78433428",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/7",
        "id": 78433428,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDMzNDI4",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-12T07:10:40Z",
        "updated_at": "2015-03-12T07:10:40Z",
        "author_association": "COLLABORATOR",
        "body": "I commented out everything in `makeImmutable` except for `addImmutabilityTag` and ran the tests again. Seems like a 50% increase for most tests, and up to 100% for some.\n\n```\nGet nth\nseamlessImmutable(10)         :     13306890.75 +/- 0.81% op/s\n\n\nput nth\nseamlessImmutable(10)         :       156080.34 +/- 0.87% op/s\n\n\nPut All\nseamlessImmutable(10)         :        14119.24 +/- 1.01% op/s\nseamlessImmutableBatch(10)    :        60817.56 +/- 0.91% op/s\n\n\nPut All (transient)\nseamlessImmutable(10)         :        79070.08 +/- 1.06% op/s\n\n\nremove nth\nseamlessImmutable(10)         :        99218.78 +/- 1.04% op/s\n\n\nRemove All\nseamlessImmutable(10)         :        10465.64 +/- 1.20% op/s\nseamlessImmutableBatch(10)    :       157722.65 +/- 1.31% op/s\n\n\nRemove All (transient)\nseamlessImmutable(10)         :        97212.40 +/- 1.20% op/s\n\n\nCount\nseamlessImmutable(10)         :      1849054.44 +/- 1.25% op/s\n\n\nKeys\nseamlessImmutable(10)         :      2132544.74 +/- 0.52% op/s\n\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/78623663",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/7#issuecomment-78623663",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/7",
        "id": 78623663,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjIzNjYz",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-12T21:21:48Z",
        "updated_at": "2015-03-12T21:21:48Z",
        "author_association": "OWNER",
        "body": "Wow, this is awesome! Thanks so much for doing this. Makes it pretty clear that `prodMode` would make a big performance difference.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/79064666",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/21#issuecomment-79064666",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/21",
        "id": 79064666,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDY0NjY2",
        "user": {
            "login": "seanhess",
            "id": 16249,
            "node_id": "MDQ6VXNlcjE2MjQ5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/16249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanhess",
            "html_url": "https://github.com/seanhess",
            "followers_url": "https://api.github.com/users/seanhess/followers",
            "following_url": "https://api.github.com/users/seanhess/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanhess/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanhess/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanhess/subscriptions",
            "organizations_url": "https://api.github.com/users/seanhess/orgs",
            "repos_url": "https://api.github.com/users/seanhess/repos",
            "events_url": "https://api.github.com/users/seanhess/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanhess/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-13T15:48:31Z",
        "updated_at": "2015-03-13T15:48:31Z",
        "author_association": "NONE",
        "body": "I still think something more terse might be a good addition to the library, but nothing I can't fix with my own function. Thanks for being awesome!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/79219121",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/21#issuecomment-79219121",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/21",
        "id": 79219121,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjE5MTIx",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-13T18:25:18Z",
        "updated_at": "2015-03-13T18:25:18Z",
        "author_association": "OWNER",
        "body": "Glad it was helpful! :smile_cat: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/80906221",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/7#issuecomment-80906221",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/7",
        "id": 80906221,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTA2MjIx",
        "user": {
            "login": "wmertens",
            "id": 54934,
            "node_id": "MDQ6VXNlcjU0OTM0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/54934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wmertens",
            "html_url": "https://github.com/wmertens",
            "followers_url": "https://api.github.com/users/wmertens/followers",
            "following_url": "https://api.github.com/users/wmertens/following{/other_user}",
            "gists_url": "https://api.github.com/users/wmertens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wmertens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wmertens/subscriptions",
            "organizations_url": "https://api.github.com/users/wmertens/orgs",
            "repos_url": "https://api.github.com/users/wmertens/repos",
            "events_url": "https://api.github.com/users/wmertens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wmertens/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-15T07:58:35Z",
        "updated_at": "2015-03-15T07:58:35Z",
        "author_association": "NONE",
        "body": "@crudh could you put that in a PR for that benchmark (maybe along with regular JS objects)? I'd be interested in trying it out myself...\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/80918600",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/7#issuecomment-80918600",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/7",
        "id": 80918600,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTE4NjAw",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-15T08:31:39Z",
        "updated_at": "2015-03-15T08:31:39Z",
        "author_association": "COLLABORATOR",
        "body": "@wmertens: not sure they are interested since seamless isn't hashtrie based? I guess that's why they haven't got a vanilla JS entry either.\n\nBut if you can check with them and get an ok I will clean up my branch, add regular JS and submit a PR.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/81189601",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/7#issuecomment-81189601",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/7",
        "id": 81189601,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTg5NjAx",
        "user": {
            "login": "wmertens",
            "id": 54934,
            "node_id": "MDQ6VXNlcjU0OTM0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/54934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wmertens",
            "html_url": "https://github.com/wmertens",
            "followers_url": "https://api.github.com/users/wmertens/followers",
            "following_url": "https://api.github.com/users/wmertens/following{/other_user}",
            "gists_url": "https://api.github.com/users/wmertens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wmertens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wmertens/subscriptions",
            "organizations_url": "https://api.github.com/users/wmertens/orgs",
            "repos_url": "https://api.github.com/users/wmertens/repos",
            "events_url": "https://api.github.com/users/wmertens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wmertens/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-15T18:27:45Z",
        "updated_at": "2015-03-15T18:27:45Z",
        "author_association": "NONE",
        "body": "@crudh turns out they make the benchmark too slow, see referenced issue :-) \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/81257504",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/7#issuecomment-81257504",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/7",
        "id": 81257504,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjU3NTA0",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-15T21:58:17Z",
        "updated_at": "2015-03-15T21:58:17Z",
        "author_association": "COLLABORATOR",
        "body": "@wmertens: hehe, ok :) yeah, it's an unfair comparison. Even for simple things like getting a count (the `count` test) then for a vanilla/seamless object you need `Object.keys` which is o(N) where the more complex libraries can hold their own count.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/82530742",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/22#issuecomment-82530742",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/22",
        "id": 82530742,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTMwNzQy",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-17T19:00:50Z",
        "updated_at": "2015-03-17T19:00:50Z",
        "author_association": "OWNER",
        "body": "I considered it, but the trouble is that doing this can mask bugs. For example:\n\n``` javascript\nfunction foo() {\n  var array = [3, 1, 4];\n\n  array.sort()\n\n  return array;\n}\n```\n\nIf you change that first line to be `Immutable([3, 1, 4])`, what should happen?\n\nCurrently `array.sort()` throws an exception, letting you know that some code that made sense with a mutable array no longer makes sense. If instead `array.sort()` just returns a sorted, immutable array, then now an unsorted array will be returned here, and you have a bug to track down - a potentially nasty one, if there is a lot of logic surrounding this code.\n\nI prefer this API because you can take an immutable array and write any number of helper functions that return sorted ones, but the only way to make bugs like this easy to find is to override the mutable methods to throw an exception. :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/82544599",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/22#issuecomment-82544599",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/22",
        "id": 82544599,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTQ0NTk5",
        "user": {
            "login": "alanhogan",
            "id": 6808,
            "node_id": "MDQ6VXNlcjY4MDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6808?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhogan",
            "html_url": "https://github.com/alanhogan",
            "followers_url": "https://api.github.com/users/alanhogan/followers",
            "following_url": "https://api.github.com/users/alanhogan/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhogan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhogan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhogan/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhogan/orgs",
            "repos_url": "https://api.github.com/users/alanhogan/repos",
            "events_url": "https://api.github.com/users/alanhogan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhogan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-17T19:14:37Z",
        "updated_at": "2015-03-17T19:14:37Z",
        "author_association": "NONE",
        "body": "Great explanation. Richard, you\u2019re an A+ maintainer. \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/82598850",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/22#issuecomment-82598850",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/22",
        "id": 82598850,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTk4ODUw",
        "user": {
            "login": "dariocravero",
            "id": 376268,
            "node_id": "MDQ6VXNlcjM3NjI2OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/376268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dariocravero",
            "html_url": "https://github.com/dariocravero",
            "followers_url": "https://api.github.com/users/dariocravero/followers",
            "following_url": "https://api.github.com/users/dariocravero/following{/other_user}",
            "gists_url": "https://api.github.com/users/dariocravero/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dariocravero/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dariocravero/subscriptions",
            "organizations_url": "https://api.github.com/users/dariocravero/orgs",
            "repos_url": "https://api.github.com/users/dariocravero/repos",
            "events_url": "https://api.github.com/users/dariocravero/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dariocravero/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-17T21:01:16Z",
        "updated_at": "2015-03-17T21:01:16Z",
        "author_association": "NONE",
        "body": "Thanks for the explanation. It makes sense :). So how are you going about those when you're using methods like `sort`? Are you doing something like this?\n\n```\nlet array = Immutable([3, 1, 4])\narray = Immutable(array.asMutable().sort())\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/82600134",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/22#issuecomment-82600134",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/22",
        "id": 82600134,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjAwMTM0",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-17T21:04:13Z",
        "updated_at": "2015-03-17T21:04:13Z",
        "author_association": "OWNER",
        "body": "Thanks @alanhogan! :blush: \n\n@dariocravero Generally I'm using Underscore functions like [_.sortBy](http://underscorejs.org/#sortBy) and just calling `Immutable` on the result. No need to call `.asMutable()` in that case!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/82601696",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/22#issuecomment-82601696",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/22",
        "id": 82601696,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjAxNjk2",
        "user": {
            "login": "dariocravero",
            "id": 376268,
            "node_id": "MDQ6VXNlcjM3NjI2OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/376268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dariocravero",
            "html_url": "https://github.com/dariocravero",
            "followers_url": "https://api.github.com/users/dariocravero/followers",
            "following_url": "https://api.github.com/users/dariocravero/following{/other_user}",
            "gists_url": "https://api.github.com/users/dariocravero/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dariocravero/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dariocravero/subscriptions",
            "organizations_url": "https://api.github.com/users/dariocravero/orgs",
            "repos_url": "https://api.github.com/users/dariocravero/repos",
            "events_url": "https://api.github.com/users/dariocravero/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dariocravero/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-17T21:08:58Z",
        "updated_at": "2015-03-17T21:08:58Z",
        "author_association": "NONE",
        "body": "Good stuff :) Will give it a go then!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/82604880",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/23#issuecomment-82604880",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/23",
        "id": 82604880,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjA0ODgw",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-17T21:19:34Z",
        "updated_at": "2015-03-17T21:19:34Z",
        "author_association": "OWNER",
        "body": "Nice catch! Thanks for fixing this.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/83033438",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/24#issuecomment-83033438",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/24",
        "id": 83033438,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzMDMzNDM4",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-18T15:57:15Z",
        "updated_at": "2015-03-18T15:57:15Z",
        "author_association": "OWNER",
        "body": "This is because currently `seamless-immutable` does not copy over prototypes, and as such always returns a vanilla Object.\n\nCopying over prototypes is a bit of a double-edged sword. Something like `.toISOString()` should work as normal on an immutable object, so there's not much downside there. However, other methods might attempt to mutate the object and then fail silently (depending on whether Strict Mode is enabled). There's an element of \"buyer beware\" to copying prototypes.\n\nThat said, I suppose there's not much difference between deciding to use a prototype with mutating methods and just attempting to mutate an immutable object yourself, so  on balance this seems like a reasonable change to make. At the very least, it ought to address the proximal issue of `Date.toISOString` becoming unavailable.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/83359759",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/7#issuecomment-83359759",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/7",
        "id": 83359759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzMzU5NzU5",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-19T06:26:11Z",
        "updated_at": "2015-03-19T06:26:11Z",
        "author_association": "OWNER",
        "body": "Thanks for your awesome work on this @crudh! I'm going to close this issue now that we have some benchmarks, but will tag #6 to remember this is worth revisiting once Prod Mode exists.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/83423940",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/6#issuecomment-83423940",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/6",
        "id": 83423940,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDIzOTQw",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-19T08:44:59Z",
        "updated_at": "2015-03-19T08:44:59Z",
        "author_association": "COLLABORATOR",
        "body": "I'm interested in working on this but I am a bit unsure on how to pass the flag to the library?\n\nWould you use the export code:\n\n```\n  if (typeof module === \"object\") {\n    module.exports = Immutable;\n  } else if (typeof exports === \"object\") {\n    exports.Immutable = Immutable;\n  } else if (typeof window === \"object\") {\n    window.Immutable = Immutable;\n  } else if (typeof global === \"object\") {\n    global.Immutable = Immutable;\n  }\n```\n\nTo do different things depending on the environment, like (using global and window as examples):\n\n```\n  var prodMode = false;\n\n  if (typeof module === \"object\") {\n    module.exports = Immutable;\n  } else if (typeof exports === \"object\") {\n    exports.Immutable = Immutable;\n  } else if (typeof window === \"object\") {\n    window.Immutable = Immutable;\n    prodMode = window.SEAMLESS_PROD_MODE === true;\n  } else if (typeof global === \"object\") {\n    global.Immutable = Immutable;\n    prodMode = global.SEAMLESS_PROD_MODE === true;\n  }\n```\n\nOr is there a better way?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/83612172",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/6#issuecomment-83612172",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/6",
        "id": 83612172,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzNjEyMTcy",
        "user": {
            "login": "RangerMauve",
            "id": 911495,
            "node_id": "MDQ6VXNlcjkxMTQ5NQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/911495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RangerMauve",
            "html_url": "https://github.com/RangerMauve",
            "followers_url": "https://api.github.com/users/RangerMauve/followers",
            "following_url": "https://api.github.com/users/RangerMauve/following{/other_user}",
            "gists_url": "https://api.github.com/users/RangerMauve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RangerMauve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RangerMauve/subscriptions",
            "organizations_url": "https://api.github.com/users/RangerMauve/orgs",
            "repos_url": "https://api.github.com/users/RangerMauve/repos",
            "events_url": "https://api.github.com/users/RangerMauve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RangerMauve/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-19T14:40:52Z",
        "updated_at": "2015-03-19T14:40:52Z",
        "author_association": "NONE",
        "body": "What about a method on Immutable that looks like `Immutable.setProduction(true/false)`, and then have people explicitly enable it and define their own way of detecting production mode?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/83765824",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/6#issuecomment-83765824",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/6",
        "id": 83765824,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzNzY1ODI0",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-19T21:27:50Z",
        "updated_at": "2015-03-19T21:27:50Z",
        "author_association": "OWNER",
        "body": "Awsesome!\n\nThe best practice I've seen (which is [what React does](http://stackoverflow.com/questions/25751045/react-and-grunt-envify-node-env-production-and-uglifyjs)) is to make it [envify](https://github.com/hughsk/envify)-friendly.\n\nBasically you do this:\n\n```\nif (process.env.NODE_ENV === \"development\") {\n  // do some stuff we wouldn't do in prod mode\n}\n```\n\n...then run `envify` on it twice, once with `{NODE_ENV: \"development\"}` and once with `{NODE_ENV: \"production\"}` to get two output files: `seamless-immutable.development.js` and `seamless-immutable.production.min.js`\n\nIn the development build, `envify` will replace the above with this:\n\n```\nif (\"development\" === \"development\") {\n  // do some stuff we wouldn't do in prod mode\n}\n```\n\n....whereas in the production build, it will instead replace it with this:\n\n```\nif (\"production\" === \"development\") {\n  // do some stuff we wouldn't do in prod mode\n}\n```\n\n[Uglify](https://github.com/mishoo/UglifyJS2) will then see that this conditional will always fail and will strip this code out entirely, meaning the production build will not only avoid adding the extra attributes, it won't even run any conditionals to tell if it's in prod mode!\n\nThis implicitly means we'd need to introduce a build process to generate the two different files for library consumers.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/83768937",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/26#issuecomment-83768937",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/26",
        "id": 83768937,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzNzY4OTM3",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-19T21:36:57Z",
        "updated_at": "2015-03-19T21:36:57Z",
        "author_association": "OWNER",
        "body": ":+1:  Makes sense...giving it another optional parameter is no big deal since it no longer accepts varargs, and the performance impact should be trivial (one extra conditional per iteration) in the normal case.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/83776462",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/6#issuecomment-83776462",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/6",
        "id": 83776462,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzNzc2NDYy",
        "user": {
            "login": "alanhogan",
            "id": 6808,
            "node_id": "MDQ6VXNlcjY4MDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6808?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhogan",
            "html_url": "https://github.com/alanhogan",
            "followers_url": "https://api.github.com/users/alanhogan/followers",
            "following_url": "https://api.github.com/users/alanhogan/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhogan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhogan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhogan/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhogan/orgs",
            "repos_url": "https://api.github.com/users/alanhogan/repos",
            "events_url": "https://api.github.com/users/alanhogan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhogan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-19T22:04:27Z",
        "updated_at": "2015-03-19T22:04:27Z",
        "author_association": "NONE",
        "body": "I've been wondering about how to do this kind of thing for ever. Very nice solution. No non-JS syntax needed. \n\nAlan\n\n> On Mar 19, 2015, at 2:27 PM, Richard Feldman notifications@github.com wrote:\n> \n> Awsesome!\n> \n> The best practice I've seen (which is what React does) is to make it envify-friendly.\n> \n> Basically you do this:\n> \n> if (process.env.NODE_ENV === \"development\") {\n>   // do some stuff we wouldn't do in prod mode\n> }\n> ...then run envify on it twice, once with {NODE_ENV: \"development\"} and once with {NODE_ENV: \"production\"} to get two output files: seamless-immutable.development.js and seamless-immutable.production.min.js\n> \n> In the development build, envify will replace the above with this:\n> \n> if (\"development\" === \"development\") {\n>   // do some stuff we wouldn't do in prod mode\n> }\n> ....whereas in the production build, it will instead replace it with this:\n> \n> if (\"production\" === \"development\") {\n>   // do some stuff we wouldn't do in prod mode\n> }\n> Uglify will then see that this conditional will always fail and will strip this code out entirely, meaning the production build will not only avoid adding the extra attributes, it won't even run any conditionals to tell if it's in prod mode!\n> \n> This implicitly means we'd need to introduce a build process to generate the two different files for library consumers.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/85066841",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/27#issuecomment-85066841",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/27",
        "id": 85066841,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDY2ODQx",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-23T16:03:11Z",
        "updated_at": "2015-03-23T16:03:11Z",
        "author_association": "OWNER",
        "body": "Excellent! Thanks for the fix.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/85101111",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/27#issuecomment-85101111",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/27",
        "id": 85101111,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTAxMTEx",
        "user": {
            "login": "RangerMauve",
            "id": 911495,
            "node_id": "MDQ6VXNlcjkxMTQ5NQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/911495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RangerMauve",
            "html_url": "https://github.com/RangerMauve",
            "followers_url": "https://api.github.com/users/RangerMauve/followers",
            "following_url": "https://api.github.com/users/RangerMauve/following{/other_user}",
            "gists_url": "https://api.github.com/users/RangerMauve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RangerMauve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RangerMauve/subscriptions",
            "organizations_url": "https://api.github.com/users/RangerMauve/orgs",
            "repos_url": "https://api.github.com/users/RangerMauve/repos",
            "events_url": "https://api.github.com/users/RangerMauve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RangerMauve/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-23T17:13:16Z",
        "updated_at": "2015-03-23T17:13:16Z",
        "author_association": "NONE",
        "body": "Should arrays be concatenated together?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/85102788",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/27#issuecomment-85102788",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/27",
        "id": 85102788,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTAyNzg4",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-23T17:15:18Z",
        "updated_at": "2015-03-23T17:15:18Z",
        "author_association": "OWNER",
        "body": "Nah. The point of `merge` is to replace fields with fresh values, not (necessarily) to expand on existing values.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/87358873",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/28#issuecomment-87358873",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/28",
        "id": 87358873,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzU4ODcz",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-29T05:05:49Z",
        "updated_at": "2015-03-29T05:05:49Z",
        "author_association": "OWNER",
        "body": "I dig it! Looks good.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/87638982",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/6#issuecomment-87638982",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/6",
        "id": 87638982,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjM4OTgy",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-30T11:25:23Z",
        "updated_at": "2015-03-30T11:25:23Z",
        "author_association": "COLLABORATOR",
        "body": "Should we then move `seamless-immutable.js` to a `src` directory to indicate that it shouldn't be used directly? And place the output files of `envify` in the root?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/87933907",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/6#issuecomment-87933907",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/6",
        "id": 87933907,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTMzOTA3",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-31T04:27:47Z",
        "updated_at": "2015-03-31T04:27:47Z",
        "author_association": "OWNER",
        "body": "That makes sense to me. Let's not check in changes to the compiled files on every commit, though, as that will make the diffs miserable.\n\nInstead just leave them out of normal commits, and once per release I'll include updated compiled files in the commit that bumps the version number.\n\nSound good?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/87935411",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/6#issuecomment-87935411",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/6",
        "id": 87935411,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTM1NDEx",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-31T04:35:33Z",
        "updated_at": "2015-03-31T04:35:33Z",
        "author_association": "COLLABORATOR",
        "body": "Sounds good!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/88445973",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/29#issuecomment-88445973",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/29",
        "id": 88445973,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg4NDQ1OTcz",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-01T11:27:06Z",
        "updated_at": "2015-04-01T11:27:06Z",
        "author_association": "COLLABORATOR",
        "body": "The last commit message should read: \"Only freeze and ban properties if in **dev** mode.\"\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/89160215",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/29#issuecomment-89160215",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/29",
        "id": 89160215,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg5MTYwMjE1",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-03T04:41:08Z",
        "updated_at": "2015-04-03T04:41:08Z",
        "author_association": "OWNER",
        "body": "Looks great!\n\nOnly one request: it should be pretty easy to parameterize the tests such that they check both the dev and the prod builds...something like this:\n\n``` javascript\n[\n  {buildName: \"development build\", src: \"../../seamless-immutable.development.js\"},\n  {buildName: \"production build\",  src: \"../../seamless-immutable.production.min.js\"}\n].forEach(function(config) {\n  var Immutable = require(config.src);\n\n  // ...other requires go here\n\n  describe(config.buildName, function() {\n\n    // ...all the current tests go here\n\n  });\n});\n```\n\nThanks a ton for doing this! Really excellent work. :smiley_cat: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/91027988",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/29#issuecomment-91027988",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/29",
        "id": 91027988,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxMDI3OTg4",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-08T20:28:55Z",
        "updated_at": "2015-04-08T20:28:55Z",
        "author_association": "COLLABORATOR",
        "body": "Now all tests are run for both the development build and the production build. There are a few exceptions, like checking if the object is frozen, where we only run it for one build. But then I have added a simple test for the other build too.\n\nI only placed the build config in the _.spec.js files. Then I passed the config into the test functions in ImmutableObject/_ and ImmutableArray/\\* so they could require in the correct Immutable build.\n\nI had to do some changes to TestUtil so that it uses the correct Immutable build depending on the config. Basically instead of exporting an object it exports a function that takes the chosen Immutable and returns an object with functions that uses the correct Immutable. This seemed like the cleanest way to do it, but I'm open to suggestions :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/91056620",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/29#issuecomment-91056620",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/29",
        "id": 91056620,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxMDU2NjIw",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-08T22:38:12Z",
        "updated_at": "2015-04-08T22:38:12Z",
        "author_association": "OWNER",
        "body": "This is fantastic! Love it. :heart_eyes_cat: \n\nThat approach with `TestUtil` seems totally fine.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/91674695",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-91674695",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/25",
        "id": 91674695,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxNjc0Njk1",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-10T20:19:35Z",
        "updated_at": "2015-04-10T20:19:35Z",
        "author_association": "COLLABORATOR",
        "body": "I'm no expert at this but as far as I can tell something like this could work:\n\nIn the `Immutable` function, the new object is created with:\n`var clone = {};`\n\nInstead the following can be done:\n`var clone = Object.create(Object.getPrototypeOf(obj);`\n\nBut that won't work for `Date`, and as far as I can tell `Date` would require a special case in the `Immutable` function. So combined we would get:\n\n```\n...\n} else if (obj instanceof Date) {\n  var clone = new Date(obj);\n  return makeImmutable(clone)\n} else {\n  var clone = Object.create(Object.getPrototypeOf(obj);\n  ...\n```\n\nBut `Object.create` is a **lot** slower than `{}`. This makes it faster:\n\n```\nvar prototype = Object.getPrototypeOf(obj);\nvar clone = prototype ? Object.create(prototype) : {};\n```\n\nA bit slower in Chrome but still much slower in Firefox (but mainly since FF is much faster at doing `{}`). [Source](http://jsperf.com/object-literal-vs-object-create-99)\n\nBut I don't know how much the performance of this single thing affects the entire process of making an object immutable.\n\nSo am I on the right track? And is there a faster/better way of checking for a prototype?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/92147785",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-92147785",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/25",
        "id": 92147785,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkyMTQ3Nzg1",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-12T23:02:58Z",
        "updated_at": "2015-04-12T23:02:58Z",
        "author_association": "OWNER",
        "body": "Upon further investigation, there are pitfalls to the prototype-only approach. For example, `Date` (the motivating example, no less!) won't actually work as intended using this approach, [because of how `Date` stores its internal data](http://stackoverflow.com/a/728694).\n\nIn light of that, I'm leaning toward this not being a good idea after all. It seems like it could lead to surprising bugs, where you can call most methods on most prototypes and have everything work as expected, but good luck tracking down the first bug that comes up because a prototype method relied on a non-enumerable hidden member...\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/92225084",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-92225084",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/25",
        "id": 92225084,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkyMjI1MDg0",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-13T05:53:18Z",
        "updated_at": "2015-04-13T05:53:18Z",
        "author_association": "COLLABORATOR",
        "body": "Yes, that sounds reasonable.\n\nBut instead of a generic solution for prototypes maybe a special case for `Date` handling could be useful? Since it is an built in type that is frequently used, and by using the `new Date(obj)` to clone it there shouldn't be any technical problem?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/92247770",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-92247770",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/25",
        "id": 92247770,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkyMjQ3Nzcw",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-13T07:22:52Z",
        "updated_at": "2015-04-13T07:22:52Z",
        "author_association": "OWNER",
        "body": "That seems totally reasonable, yeah. We already do an `instanceof` check for `Array`, so we could certainly do another for `Date` and handle as appropriate.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94518029",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/31#issuecomment-94518029",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/31",
        "id": 94518029,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTE4MDI5",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T17:35:20Z",
        "updated_at": "2015-04-20T17:35:20Z",
        "author_association": "OWNER",
        "body": "Looks great! Nice and straightforward.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94518156",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-94518156",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/25",
        "id": 94518156,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTE4MTU2",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T17:35:59Z",
        "updated_at": "2015-04-20T17:35:59Z",
        "author_association": "OWNER",
        "body": "Resolved by #31\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94527690",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/16#issuecomment-94527690",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/16",
        "id": 94527690,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTI3Njkw",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T18:12:33Z",
        "updated_at": "2015-04-20T18:12:33Z",
        "author_association": "COLLABORATOR",
        "body": "Now that there is a dev/prod mode maybe it would make sense to check this only in development mode? That way most cases can be found without sacrificing any performance.\n\nA really simple way would be to do a test before making it immutable, like:\n`JSON.stringify(object);`\n\nIf it contains a circular reference it will throw a `TypeError` with the message `\"Converting circular structure to JSON\"`.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94528592",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/16#issuecomment-94528592",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/16",
        "id": 94528592,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTI4NTky",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T18:16:51Z",
        "updated_at": "2015-04-20T18:16:51Z",
        "author_association": "OWNER",
        "body": "Great point! It could also then `console.error(object)` so you could actually see the problematic object in question.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94531862",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/31#issuecomment-94531862",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/31",
        "id": 94531862,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTMxODYy",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T18:31:37Z",
        "updated_at": "2015-04-20T18:31:37Z",
        "author_association": "OWNER",
        "body": "Looks like there are some cross-browser test failures: https://travis-ci.org/#L600\n\nPossibly `new Date(dateObject)` doesn't pass through time zone in all browsers?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94535191",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/31#issuecomment-94535191",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/31",
        "id": 94535191,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTM1MTkx",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T18:41:53Z",
        "updated_at": "2015-04-20T18:41:53Z",
        "author_association": "COLLABORATOR",
        "body": "@rtfeldman: Seems like it! Replacing the `.toISOString()` comparisons with `.getTime()` comparisons should solve the problem. You want me to add it to the current PR, a new one or do you want to do it yourself?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94539293",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/31#issuecomment-94539293",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/31",
        "id": 94539293,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTM5Mjkz",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T18:53:21Z",
        "updated_at": "2015-04-20T18:53:21Z",
        "author_association": "OWNER",
        "body": "If you don't mind, a new PR would be great. :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94587810",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/31#issuecomment-94587810",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/31",
        "id": 94587810,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTg3ODEw",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T23:00:05Z",
        "updated_at": "2015-04-20T23:00:05Z",
        "author_association": "OWNER",
        "body": "Seems it's not just `.toISOString()`! IE now reports different `.getTime()` numbers: https://travis-ci.org/rtfeldman/seamless-immutable#L616\n\nMaybe using a different constructor is in order?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94635073",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/31#issuecomment-94635073",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/31",
        "id": 94635073,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NjM1MDcz",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-21T04:35:03Z",
        "updated_at": "2015-04-21T04:35:03Z",
        "author_association": "COLLABORATOR",
        "body": "I just got access to an IE11 and tested it (and in a Firefox) and saw the problem with using the constructor:\n`new Date(originalDate)`.\n\nBut the following works in both:\n`new Date(originalDate.getTime())`.\n\nI have seen a lot of examples doing it the first way and as far as I understood it should then use the `.valueOf` method on the date which generates the same output as `.getTime` in all browsers. So not sure why the first way fails, but I will change it to the second way.\n\nThanks for the suggestion @rtfeldman. A PR is coming, sorry for the mess.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94636300",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/33#issuecomment-94636300",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/33",
        "id": 94636300,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NjM2MzAw",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-21T04:44:22Z",
        "updated_at": "2015-04-21T04:44:22Z",
        "author_association": "COLLABORATOR",
        "body": "Tested, and it works, in latest Chrome, Firefox and IE.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94704185",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/31#issuecomment-94704185",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/31",
        "id": 94704185,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NzA0MTg1",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-21T08:41:55Z",
        "updated_at": "2015-04-21T08:41:55Z",
        "author_association": "COLLABORATOR",
        "body": "The constructor `new Date(originalDate)` throws away the millseconds in some browsers (IE, FF) but not other (Chrome, others?).\n\nUsing `new Date(originalDate.getTime())` preserves the milliseconds. This is fixed in PR #33.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94885288",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/33#issuecomment-94885288",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/33",
        "id": 94885288,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0ODg1Mjg4",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-21T17:46:19Z",
        "updated_at": "2015-04-21T17:46:19Z",
        "author_association": "COLLABORATOR",
        "body": "Remember to do a grunt build after merge to generate the new prod and dev files.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94891983",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/33#issuecomment-94891983",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/33",
        "id": 94891983,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0ODkxOTgz",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-21T18:08:27Z",
        "updated_at": "2015-04-21T18:08:27Z",
        "author_association": "OWNER",
        "body": "Yep! Want to make sure the build is green before I bump the version to 2.3.1 and do a prod build. :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94894795",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/33#issuecomment-94894795",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/33",
        "id": 94894795,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0ODk0Nzk1",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-21T18:20:00Z",
        "updated_at": "2015-04-21T18:20:00Z",
        "author_association": "COLLABORATOR",
        "body": "@rtfeldman: Ok! But will Travis run Grunt to generate the new prod/dev files? If it uses the current commited ones in master the tests will continue to fail.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94896605",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/33#issuecomment-94896605",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/33",
        "id": 94896605,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0ODk2NjA1",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-21T18:28:00Z",
        "updated_at": "2015-04-21T18:28:00Z",
        "author_association": "OWNER",
        "body": "Ah, good point! No it won't. Updated in 1ccdc276875ef3b09ac2e1071dc7a907e17fa7f9\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/94987299",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/33#issuecomment-94987299",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/33",
        "id": 94987299,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0OTg3Mjk5",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-22T00:59:23Z",
        "updated_at": "2015-04-22T00:59:23Z",
        "author_association": "OWNER",
        "body": "All set! :+1: \n\nThanks for the fixes!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/96080484",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/34#issuecomment-96080484",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/34",
        "id": 96080484,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk2MDgwNDg0",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-24T22:10:37Z",
        "updated_at": "2015-04-24T22:10:37Z",
        "author_association": "OWNER",
        "body": "Makes sense!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/96080615",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/34#issuecomment-96080615",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/34",
        "id": 96080615,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk2MDgwNjE1",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-24T22:11:49Z",
        "updated_at": "2015-04-24T22:11:49Z",
        "author_association": "OWNER",
        "body": "@crudh Unless this is urgent for you, I'm going to wait to cut a new release for this, because @raorao has some work to address https://github.com/rtfeldman/seamless-immutable/issues/16 using your proposed solution coming soon.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/96135476",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/34#issuecomment-96135476",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/34",
        "id": 96135476,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk2MTM1NDc2",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-25T06:06:09Z",
        "updated_at": "2015-04-25T06:06:09Z",
        "author_association": "COLLABORATOR",
        "body": "Sounds good, no urgency for me!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/97702144",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/35#issuecomment-97702144",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/35",
        "id": 97702144,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NzAyMTQ0",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T08:12:05Z",
        "updated_at": "2015-04-30T08:12:05Z",
        "author_association": "COLLABORATOR",
        "body": "I think the biggest drawback is that you have to do `push` differently for normal and immutable arrays, and there isn't anything telling you that you are doing it wrong if you `push` on an immutable array and don't take care of the result.\n\nIt can be especially confusing if you have a code base where you use both regular arrays and immutable arrays.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/97713334",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/35#issuecomment-97713334",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/35",
        "id": 97713334,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NzEzMzM0",
        "user": {
            "login": "ivan-kleshnin",
            "id": 2128182,
            "node_id": "MDQ6VXNlcjIxMjgxODI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2128182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ivan-kleshnin",
            "html_url": "https://github.com/ivan-kleshnin",
            "followers_url": "https://api.github.com/users/ivan-kleshnin/followers",
            "following_url": "https://api.github.com/users/ivan-kleshnin/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivan-kleshnin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ivan-kleshnin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivan-kleshnin/subscriptions",
            "organizations_url": "https://api.github.com/users/ivan-kleshnin/orgs",
            "repos_url": "https://api.github.com/users/ivan-kleshnin/repos",
            "events_url": "https://api.github.com/users/ivan-kleshnin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ivan-kleshnin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T09:07:06Z",
        "updated_at": "2015-04-30T09:19:03Z",
        "author_association": "NONE",
        "body": "I think that's pretty easy to differ visually:\n\n``` js\nrobots.push(robot); // mutable push\n...\nlet count = robots.push(robot) // mutable push\n...\nrobots = robots.push(robot); // immutable push\n...\nlet robots2 = robots.push(robot); // immutable push \n```\n\nIt's a good tone today to use `concat` instead of `push`. So when you see `push` you're going to be especially attentive in any case. That's from code-reading point of view. From code-development point of view... you need to know where you data is mutable and where is immutable to not get immutable exceptions right? \n\n`push` behaves differently just in the same manner as `x[0] = 1` behaves differently (throws warnings or do mutation). If second is not confusing for you, first also shouldn't.\n\nI'm not saying your arguments are meaningless. They are good. \nI'm saying that from my personal opinion benefits are greater than drawbacks.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/97731341",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/35#issuecomment-97731341",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/35",
        "id": 97731341,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NzMxMzQx",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T10:25:11Z",
        "updated_at": "2015-04-30T10:25:11Z",
        "author_association": "COLLABORATOR",
        "body": "Yeah, it is easy to differ visually. But if you are working with code that uses both mutable and immutable arrays and you do a `push` on an immutable array now you get an error and you are made aware of it during development.\n\nWith this change you might by mistake do a `push` on an immutable array and forget to handle the result and get no warning about it. It might then lead to bugs that can be tricky to locate the source of.\n\nSo you have a valid point, but I'm not personally convinced that the benefits are greater than the drawbacks. And if `push` should be changed in this way then maybe all other banned mutating methods should be changed in the same way too?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/97736323",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/35#issuecomment-97736323",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/35",
        "id": 97736323,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NzM2MzIz",
        "user": {
            "login": "ivan-kleshnin",
            "id": 2128182,
            "node_id": "MDQ6VXNlcjIxMjgxODI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2128182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ivan-kleshnin",
            "html_url": "https://github.com/ivan-kleshnin",
            "followers_url": "https://api.github.com/users/ivan-kleshnin/followers",
            "following_url": "https://api.github.com/users/ivan-kleshnin/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivan-kleshnin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ivan-kleshnin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivan-kleshnin/subscriptions",
            "organizations_url": "https://api.github.com/users/ivan-kleshnin/orgs",
            "repos_url": "https://api.github.com/users/ivan-kleshnin/repos",
            "events_url": "https://api.github.com/users/ivan-kleshnin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ivan-kleshnin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T10:50:10Z",
        "updated_at": "2015-04-30T10:50:10Z",
        "author_association": "NONE",
        "body": "> And if push should be changed in this way then maybe all other banned mutating methods should be changed in the same way too?\n\nMaybe. I can recall only `push` being needed all the time but, yeah, banned. What else?\nMaybe a bigger picture will guide the best decision here.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/97886384",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/35#issuecomment-97886384",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/35",
        "id": 97886384,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODg2Mzg0",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T17:21:59Z",
        "updated_at": "2015-04-30T17:21:59Z",
        "author_association": "OWNER",
        "body": "Yep, @crudh's explanation is exactly the reason behind banning the mutable methods. If there were a desire to add an alternative to `concat` for single elements, I'd call it something else, like `append`.\n\nA separate question is whether a method like that is worth adding to the API. Is there a common use case where this would be a significant upgrade over `concat`? I have not encountered any yet, and I'm hesitant to expand the API without strong motivating use cases because that's how libraries get bloated. :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/97943646",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/35#issuecomment-97943646",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/35",
        "id": 97943646,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3OTQzNjQ2",
        "user": {
            "login": "ivan-kleshnin",
            "id": 2128182,
            "node_id": "MDQ6VXNlcjIxMjgxODI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2128182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ivan-kleshnin",
            "html_url": "https://github.com/ivan-kleshnin",
            "followers_url": "https://api.github.com/users/ivan-kleshnin/followers",
            "following_url": "https://api.github.com/users/ivan-kleshnin/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivan-kleshnin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ivan-kleshnin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivan-kleshnin/subscriptions",
            "organizations_url": "https://api.github.com/users/ivan-kleshnin/orgs",
            "repos_url": "https://api.github.com/users/ivan-kleshnin/repos",
            "events_url": "https://api.github.com/users/ivan-kleshnin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ivan-kleshnin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T19:44:56Z",
        "updated_at": "2015-04-30T19:44:56Z",
        "author_association": "NONE",
        "body": "Well, I was pretty sure about this proposal being rejected so no disappointment here :smile: \nThank you guys for discussion :thumbsup: hope to give this lib a better try soon. \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/97998703",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/16#issuecomment-97998703",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/16",
        "id": 97998703,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3OTk4NzAz",
        "user": {
            "login": "vegetabill",
            "id": 355438,
            "node_id": "MDQ6VXNlcjM1NTQzOA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/355438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vegetabill",
            "html_url": "https://github.com/vegetabill",
            "followers_url": "https://api.github.com/users/vegetabill/followers",
            "following_url": "https://api.github.com/users/vegetabill/following{/other_user}",
            "gists_url": "https://api.github.com/users/vegetabill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vegetabill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vegetabill/subscriptions",
            "organizations_url": "https://api.github.com/users/vegetabill/orgs",
            "repos_url": "https://api.github.com/users/vegetabill/repos",
            "events_url": "https://api.github.com/users/vegetabill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vegetabill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T23:26:11Z",
        "updated_at": "2015-04-30T23:26:11Z",
        "author_association": "NONE",
        "body": "FYI I was creating an immutable copy of a Backbone object that was using the backbone-associations add-on and ran into this. immutablejs handles them fine but I liked the sound of this library for all the reasons mentioned in your blog: http://noredinktech.tumblr.com/post/107617838018/switching-from-immutable-js-to-seamless-immutable\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/99540026",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/36#issuecomment-99540026",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/36",
        "id": 99540026,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTQwMDI2",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-06T17:09:03Z",
        "updated_at": "2015-05-06T17:09:03Z",
        "author_association": "OWNER",
        "body": "This is now fixed more efficiently by https://github.com/rtfeldman/seamless-immutable/commit/af6a8dfd7e2f1939e5108aae118b9270cb9bff3a\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/100024843",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/38#issuecomment-100024843",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/38",
        "id": 100024843,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDAyNDg0Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-07T21:28:49Z",
        "updated_at": "2015-05-07T21:29:18Z",
        "author_association": "OWNER",
        "body": "From reading icepick's description, it looks like both libraries are doing the same thing at a high level: providing immutable data structures that are backwards-compatible with vanilla JS arrays and objects, and which intelligently do shallow rather than deep cloning because shallow yields equivalent results for immutable data structures. \n\nIt looks like the main differences are:\n- seamless-immutable has higher test coverage\n- seamless-immutable has an optional production build that doesn't actually freeze the objects, which runs faster\n- each library has its own set of convenience methods\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/100138842",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/38#issuecomment-100138842",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/38",
        "id": 100138842,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDEzODg0Mg==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-08T07:50:16Z",
        "updated_at": "2015-05-08T07:50:16Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks a lot! Perhaps it would be useful to add this to the README?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/100396708",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/38#issuecomment-100396708",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/38",
        "id": 100396708,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDM5NjcwOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-09T00:04:54Z",
        "updated_at": "2015-05-09T00:04:54Z",
        "author_association": "OWNER",
        "body": "I'd rather keep the README focused, but now it's easy enough to link someone with the same question to this discussion! :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/105028307",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/39#issuecomment-105028307",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/39",
        "id": 105028307,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTAyODMwNw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-24T15:43:10Z",
        "updated_at": "2015-05-24T15:43:10Z",
        "author_association": "OWNER",
        "body": "Hm...seems to work fine in a Node REPL:\n\n``` javascript\n> var Immutable = require(\"seamless-immutable\")\nundefined\n> var array = Immutable([\"foo\", \"foo2\", \"bar\", \"bar2\", \"baz\", \"baz2\"]);\nundefined\n> array\n[ 'foo', 'foo2', 'bar', 'bar2', 'baz', 'baz2' ]\n```\n\nMy first guess would be that Ember modifies `Array.prototype` in some way that is incompatible with `seamless-immutable`...do you know if that's something Ember does?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/105031307",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/39#issuecomment-105031307",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/39",
        "id": 105031307,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTAzMTMwNw==",
        "user": {
            "login": "dagda1",
            "id": 118328,
            "node_id": "MDQ6VXNlcjExODMyOA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/118328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dagda1",
            "html_url": "https://github.com/dagda1",
            "followers_url": "https://api.github.com/users/dagda1/followers",
            "following_url": "https://api.github.com/users/dagda1/following{/other_user}",
            "gists_url": "https://api.github.com/users/dagda1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dagda1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dagda1/subscriptions",
            "organizations_url": "https://api.github.com/users/dagda1/orgs",
            "repos_url": "https://api.github.com/users/dagda1/repos",
            "events_url": "https://api.github.com/users/dagda1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dagda1/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-24T16:07:36Z",
        "updated_at": "2015-05-24T16:07:36Z",
        "author_association": "NONE",
        "body": "Yes, you are right, ember does modify the prototype.  You can turn that off though.\n\nThanks\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/105052472",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/39#issuecomment-105052472",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/39",
        "id": 105052472,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTA1MjQ3Mg==",
        "user": {
            "login": "dagda1",
            "id": 118328,
            "node_id": "MDQ6VXNlcjExODMyOA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/118328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dagda1",
            "html_url": "https://github.com/dagda1",
            "followers_url": "https://api.github.com/users/dagda1/followers",
            "following_url": "https://api.github.com/users/dagda1/following{/other_user}",
            "gists_url": "https://api.github.com/users/dagda1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dagda1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dagda1/subscriptions",
            "organizations_url": "https://api.github.com/users/dagda1/orgs",
            "repos_url": "https://api.github.com/users/dagda1/repos",
            "events_url": "https://api.github.com/users/dagda1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dagda1/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-24T19:15:20Z",
        "updated_at": "2015-05-24T19:15:20Z",
        "author_association": "NONE",
        "body": "I've stopped ember extending the prototypes and I get a new error:\n\n> Uncaught ReferenceError: process is not defined\n\nWhich references this code:\n\n```\n    if (process.env.NODE_ENV === \"development\") {\n      // Make all mutating methods throw exceptions.\n      for (var index in bannedMethods) {\n        banProperty(obj, bannedMethods[index]);\n      }\n```\n\nIs this library node only?\n\nHere is the updated [jsbin](http://jsbin.com/nesomi/14/edit)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/105285302",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/39#issuecomment-105285302",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/39",
        "id": 105285302,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTI4NTMwMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-25T18:27:13Z",
        "updated_at": "2015-05-25T18:27:13Z",
        "author_association": "OWNER",
        "body": "@dagda1 This is happening because you're importing the seamless-immutable source, not the compiled version (which has `process` stripped out). Try importing one of these instead:\n\n[`seamless-immutable development mode`](https://raw.githubusercontent.com/rtfeldman/seamless-immutable/master/seamless-immutable.development.js) (with freezing and helpful exception messages)\n[`seamless-immutable production mode`](https://raw.githubusercontent.com/rtfeldman/seamless-immutable/master/seamless-immutable.production.min.js) (minified, and runs faster, but doesn't freeze objects or offer helpful exception messages)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/106603534",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/40#issuecomment-106603534",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/40",
        "id": 106603534,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjYwMzUzNA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-28T21:19:45Z",
        "updated_at": "2015-05-28T21:19:45Z",
        "author_association": "OWNER",
        "body": "There's currently logic to do this in some situations: `merge` [determines whether changes were made](https://github.com/rtfeldman/seamless-immutable/blob/master/src/seamless-immutable.js#L256-L261) and then [returns the unmodified original object if not](https://github.com/rtfeldman/seamless-immutable/blob/master/src/seamless-immutable.js#L289-L293).\n\nThe question here is how far it ought to go in deciding whether any changes were made. It currently considers the example you gave a change because it does [referential equality checking](https://github.com/rtfeldman/seamless-immutable/blob/master/src/seamless-immutable.js#L259) to determine that. If instead it did deep (value-based) equality checking, it would realize that this was not actually a change and you'd get the result you were hoping for. :smiley: \n\nThis isn't yet possible because [the deepEquals branch](https://github.com/rtfeldman/seamless-immutable/tree/deep-equals) hasn't landed, but assuming it had, there's still a tradeoff to consider. Doing this check on every merge can get expensive, especially when merging large data structures. It would probably still unlock a considerable performance boost in the case of `shouldComponentUpdate`, but could be a substantial performance hit in other use cases.\n\nMy general feeling is that once `deepEquals` is in (which has been on the backburner for me, but which mainly just needs tests at this point), `merge` should use it by default for this purpose, but should accept an optional alternative \"change-detector\" function so you can save yourself from a huge performance hit on large data structures.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/106703280",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/40#issuecomment-106703280",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/40",
        "id": 106703280,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjcwMzI4MA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-29T06:16:52Z",
        "updated_at": "2015-05-29T06:16:52Z",
        "author_association": "COLLABORATOR",
        "body": "@rtfeldman cases like this could be handled by a custom merger if we add the following to `addToResult` in the `merge` function:\n\nRight now it looks like:\n\n``` javascript\nvar mergerResult = merger && merger(currentObj[key], immutableValue, config);\n```\n\nIf we extend that to:\n\n``` javascript\nvar mergerResult = merger && merger(currentObj[key], immutableValue, config);\nif (mergerResult && mergerResult === currentObj[key]) return;\n```\n\nThen if a merger returns something and it is the same thing as the property in the `currentObj` we could abort `addToResult`.\n\nCombining that with a custom merger that returns the array from the `currentObj` if they contain the same items:\n\n``` javascript\nfunction equalityArrayMerger(current, other) {\n  if (!(current instanceof Array) || !(other instanceof Array)) return;\n  if (current.length !== other.length) return;\n\n  for (var i = 0; i < current.length; i++) {\n    if (current[i] !== other[i]) return;\n  }\n\n  return current;\n}\n```\n\nwould give the desired results.\n\nBut not sure if it is worth adding if there is another long term goal with `deepEquals`? It's a minor change but it will add another check in the `addToResult` function. And this was only a quick test, I haven't checked how/if it affects other things.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/106717421",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/40#issuecomment-106717421",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/40",
        "id": 106717421,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjcxNzQyMQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-29T07:06:48Z",
        "updated_at": "2015-05-29T07:06:48Z",
        "author_association": "OWNER",
        "body": "Yeah, that seems like a good implementation. I'd change the second line to this, though:\n\n``` javascript\nif (merger && mergerResult === currentObj[key]) return;\n```\n\nThat way the conditional can still pass if the value happens to be falsy in both places.\n\nAs far as `merge` goals, the goals with `deepEquals` would be (1) to change the default implementation to use `deepEquals` for change detection over `===`, and (2) to allow users to specify a custom function to do this if necessary.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/107371619",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/41#issuecomment-107371619",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/41",
        "id": 107371619,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzM3MTYxOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-01T08:53:56Z",
        "updated_at": "2015-06-01T08:53:56Z",
        "author_association": "OWNER",
        "body": "Looks good! A nice first step.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/107458423",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/40#issuecomment-107458423",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/40",
        "id": 107458423,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzQ1ODQyMw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-01T13:22:24Z",
        "updated_at": "2015-06-01T13:22:24Z",
        "author_association": "COLLABORATOR",
        "body": "@cr0cK: now that PR #41 has been merged you should be able, after the next release, to pass in the following or similar to the merge to get your example to work:\n\n``` javascript\nfunction equalityArrayMerger(current, other) {\n  if (!(current instanceof Array) || !(other instanceof Array)) return;\n  if (current.length !== other.length) return;\n\n  for (var i = 0; i < current.length; i++) {\n    if (current[i] !== other[i]) return;\n  }\n\n  return current;\n}\n\n...\n> i2 = i.merge(o2, {merger: equalityArrayMerger})\n{ a: [ 1, 2 ] }\n> i === i2\ntrue\n```\n\nIt will override the merge for array properties and return the same reference if they contain the same list of values in both objects.\n\nNote that it will not work with current master until a `grunt build` has been run.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/107474465",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/40#issuecomment-107474465",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/40",
        "id": 107474465,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzQ3NDQ2NQ==",
        "user": {
            "login": "cr0cK",
            "id": 446128,
            "node_id": "MDQ6VXNlcjQ0NjEyOA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/446128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cr0cK",
            "html_url": "https://github.com/cr0cK",
            "followers_url": "https://api.github.com/users/cr0cK/followers",
            "following_url": "https://api.github.com/users/cr0cK/following{/other_user}",
            "gists_url": "https://api.github.com/users/cr0cK/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cr0cK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cr0cK/subscriptions",
            "organizations_url": "https://api.github.com/users/cr0cK/orgs",
            "repos_url": "https://api.github.com/users/cr0cK/repos",
            "events_url": "https://api.github.com/users/cr0cK/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cr0cK/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-01T13:36:35Z",
        "updated_at": "2015-06-01T13:36:35Z",
        "author_association": "NONE",
        "body": "Thank you @crudh, It looks nice :)\n\nWhat do you think about to make this behavior as the default one?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/107635242",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/39#issuecomment-107635242",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/39",
        "id": 107635242,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzYzNTI0Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-01T16:52:42Z",
        "updated_at": "2015-06-01T16:52:42Z",
        "author_association": "OWNER",
        "body": "@dagda1 Did this fix the issue you were having?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/107669649",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/39#issuecomment-107669649",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/39",
        "id": 107669649,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzY2OTY0OQ==",
        "user": {
            "login": "dagda1",
            "id": 118328,
            "node_id": "MDQ6VXNlcjExODMyOA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/118328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dagda1",
            "html_url": "https://github.com/dagda1",
            "followers_url": "https://api.github.com/users/dagda1/followers",
            "following_url": "https://api.github.com/users/dagda1/following{/other_user}",
            "gists_url": "https://api.github.com/users/dagda1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dagda1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dagda1/subscriptions",
            "organizations_url": "https://api.github.com/users/dagda1/orgs",
            "repos_url": "https://api.github.com/users/dagda1/repos",
            "events_url": "https://api.github.com/users/dagda1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dagda1/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-01T18:50:34Z",
        "updated_at": "2015-06-01T18:50:34Z",
        "author_association": "NONE",
        "body": "Sorry, yes, thanks\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/108742493",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/40#issuecomment-108742493",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/40",
        "id": 108742493,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwODc0MjQ5Mw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-04T06:14:08Z",
        "updated_at": "2015-06-04T06:14:08Z",
        "author_association": "COLLABORATOR",
        "body": "@cr0cK: it's released now. And if you use Node/Browserify I have added the `equalityArrayMerger` in [this project](https://github.com/crudh/seamless-immutable-mergers) if you prefer that instead of copying the function above.\n\nAs for the default behaviour I agree with what @rtfeldman said above, as long as it is easy to get back to the current behaviour when a deep check isn't needed or is too expensive.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/109204580",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/42#issuecomment-109204580",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/42",
        "id": 109204580,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTIwNDU4MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-05T08:42:02Z",
        "updated_at": "2015-06-05T08:42:02Z",
        "author_association": "OWNER",
        "body": "This is by design. One of the invariants of the library is that once you invoke `Immutable`, what you get back is immutable, and continuing to use its methods will only yield further immutable results.\n\nHowever, since you can pass `seamless-immutable`'s data structures to other JS libraries, if you really want a mutable copy back, you can just pass them to other libraries that are not designed for immutability.\n\nFor example:\n\n``` javascript\n_.map(Immutable([1,2,3]), function() {\n   return React.createElement( \"div\", null );\n});\n// no error\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/109248596",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/42#issuecomment-109248596",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/42",
        "id": 109248596,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTI0ODU5Ng==",
        "user": {
            "login": "ntkoopman",
            "id": 1769749,
            "node_id": "MDQ6VXNlcjE3Njk3NDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1769749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ntkoopman",
            "html_url": "https://github.com/ntkoopman",
            "followers_url": "https://api.github.com/users/ntkoopman/followers",
            "following_url": "https://api.github.com/users/ntkoopman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ntkoopman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ntkoopman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ntkoopman/subscriptions",
            "organizations_url": "https://api.github.com/users/ntkoopman/orgs",
            "repos_url": "https://api.github.com/users/ntkoopman/repos",
            "events_url": "https://api.github.com/users/ntkoopman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ntkoopman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-05T10:11:48Z",
        "updated_at": "2015-06-05T10:11:48Z",
        "author_association": "NONE",
        "body": "I don't think this makes much sense for the map function.\nFor the other functions I can understand this rational, because they return parts of the array itself, which are guaranteed to be immutable, but map can return things not related to the immutable structure. To me, this is very unexpected behaviour.\n\nYou are also suggesting using a non-standard map implementation for a library that has 'backwards-compatible' in the first line of its summary.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/109267557",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/42#issuecomment-109267557",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/42",
        "id": 109267557,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTI2NzU1Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-05T11:51:08Z",
        "updated_at": "2015-06-05T11:51:08Z",
        "author_association": "OWNER",
        "body": "`map` does indeed return a collection of elements which may be completely unrelated to the original elements. However, `map` is still supposed to return the same type of collection you began with. If you call `[].map` you get back an Array, if you call `$().map` you get back a jQuery object, and if you call `Immutable([]).map`, you get back a `seamless-immutable` array. This is the standard `map` behavior.\n\nI sympathize with the fact that this `map` implementation doesn't work with React components, because I use `seamless-immutable` with React and find it annoying that this doesn't Just Work. I manage this annoyance by using `_.map` when it finally comes time to turn my `seamless-immutable` arrays into React components, but naturally it would be less trouble in this particular use case if I didn't have to.\n\nThat said, I don't think it makes sense to couple this library to React, and I don't see a strong case for changing `map` on its own merits. When libraries start developing implicit dependencies on other libraries, unexpected consequences tend to snowball into unpleasant surprises. I value the simplicity and consistency of this library, and hope to maintain it.\n\nAs such, I appreciate your perspective, but the current design still makes the most sense to me overall. :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/109370637",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-109370637",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 109370637,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTM3MDYzNw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-05T17:30:10Z",
        "updated_at": "2015-06-05T17:30:10Z",
        "author_association": "OWNER",
        "body": "For that example, I would just use `concat`:\n\n``` javascript\n // equivalent to Immutable([1, 2, 3, 4])\nImmutable([1,2,3]).concat([4])\n```\n\nThe `Object` and `Array` methods that do not mutate are still available, although they return `Immutable` instances instead of normal arrays and objects.\n\nThe non-mutating array methods `seamless-immutable` supports are `map`, `filter`, `slice`, `concat`, `reduce`, and `reduceRight`, and for objects just `keys`.\n\nDoes that help?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/109374733",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-109374733",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 109374733,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTM3NDczMw==",
        "user": {
            "login": "RangerMauve",
            "id": 911495,
            "node_id": "MDQ6VXNlcjkxMTQ5NQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/911495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RangerMauve",
            "html_url": "https://github.com/RangerMauve",
            "followers_url": "https://api.github.com/users/RangerMauve/followers",
            "following_url": "https://api.github.com/users/RangerMauve/following{/other_user}",
            "gists_url": "https://api.github.com/users/RangerMauve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RangerMauve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RangerMauve/subscriptions",
            "organizations_url": "https://api.github.com/users/RangerMauve/orgs",
            "repos_url": "https://api.github.com/users/RangerMauve/repos",
            "events_url": "https://api.github.com/users/RangerMauve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RangerMauve/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-05T17:41:25Z",
        "updated_at": "2015-06-05T17:41:25Z",
        "author_association": "NONE",
        "body": "Just to interject, the [docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat) say that the arguments to concat don't have to be an array, so the square brackets can be left out, and it'll look more like your push code.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/109376988",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-109376988",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 109376988,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTM3Njk4OA==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-05T17:46:41Z",
        "updated_at": "2015-06-05T17:46:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks. I need to think through it to see whether filter, concat etc. cover\nall modification cases. I guess eg. replacing an element at a given index\ncould be achieved with map though that is cumbersome.\n5. juni 2015 19:30 skrev \"Richard Feldman\" notifications@github.com:\n\n> For that example, I would just use concat:\n> \n>  // equivalent to Immutable([1, 2, 3, 4])\n> Immutable([1,2,3]).concat([4])\n> \n> The Object and Array methods that do not mutate are still available,\n> although they return Immutable instances instead of normal arrays and\n> objects.\n> \n> The non-mutating array methods seamless-immutable supports are map, filter,\n> slice, concat, reduce, and reduceRight, and for objects just keys.\n> \n> Does that help?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-109370637\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/109382428",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-109382428",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 109382428,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTM4MjQyOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-05T18:05:15Z",
        "updated_at": "2015-06-05T18:05:15Z",
        "author_association": "OWNER",
        "body": "Keep in mind that the function `map` accepts does receive `index`, so you can just do:\n\n``` javascript\nvar indexToUpdate = 2, newVal = \"THREE\";\n\nImmutable([\"one\", \"two\", \"three\", \"four\"]).map(function(val, index) {\n  return (index === indexToUpdate) ? newVal : val;\n});\n```\n\nAdmittedly more verbose than `mutableArray[indexToUpdate] = newVal`, but in my experience this hasn't come up all that often.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/109882393",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-109882393",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 109882393,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTg4MjM5Mw==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-08T06:50:33Z",
        "updated_at": "2015-06-08T06:50:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "So if I should sum it up, seamless-immutable supports most/all mutation cases though sometimes you need to think carefully how to combine the available methods to achieve it.\n\nMy particular use case is: If an array has an element with a given id, remove it and re-insert it to the end with an increased count; otherwise just append it. So I'd need to do something like:\n\n``` javascript\nvar _ = require(\"lodash\");\nvar log = Immutable([]);\nfunction add(idToFind) {\nvar foundIdx = _.find(log, { id: idToFind });\nvar count = 1;\nif (foundIdx) {\n  log = log.slice(0, foundIdx).concat(log.slice(foundIdx+1));\n  // With icepick I could do: `log = i.splice(log, foundIdx, 1);`\n  count += 1;\n}\nlog = log.concat({id: idToFind, count: count});\n} //fn\n```\n\nIn some cases, when performance is important - e.g. when I need to \"change\" an element of a long array relatively often - then I have to use a less straightforward solution. For example:\n\n``` javascript\n// This is slow as it iterates over the whole array each time, not stopping after the element is found:\nlog = log.map(function(val, idx) { if(val.id === idToFind) return {id: val.id, count: val.count+1}; else return val; });\n\n// This is *hopefully* faster since it only needs to iterate on average over 1/2 of the array\n// (even though we still need to combine a few operations):\nvar foundIdx = _.find(log, { id: idToFind });\nvar val = log[idToFind]; var newval = {id: val.id, count: val.count+1};\nlog = log.slice(0, foundIdx).concat(newval).concat(log.slice(foundIdx+1))\n```\n\nOn the other hand it might me better to just use mutable data structures for this and only use immutability where changes are infrequent.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/110153330",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-110153330",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 110153330,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMDE1MzMzMA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-08T21:54:53Z",
        "updated_at": "2015-06-08T21:54:53Z",
        "author_association": "OWNER",
        "body": "Yeah, it all depends on your use case...for our use case, we haven't encountered any performance problems where the underlying culprit turned out to be using immutable data structures over mutable ones. Of course, you may be dealing with much larger data than we do. :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/110277584",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-110277584",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 110277584,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMDI3NzU4NA==",
        "user": {
            "login": "bitinn",
            "id": 1484279,
            "node_id": "MDQ6VXNlcjE0ODQyNzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1484279?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bitinn",
            "html_url": "https://github.com/bitinn",
            "followers_url": "https://api.github.com/users/bitinn/followers",
            "following_url": "https://api.github.com/users/bitinn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bitinn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bitinn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bitinn/subscriptions",
            "organizations_url": "https://api.github.com/users/bitinn/orgs",
            "repos_url": "https://api.github.com/users/bitinn/repos",
            "events_url": "https://api.github.com/users/bitinn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bitinn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-09T08:35:14Z",
        "updated_at": "2015-06-09T08:39:29Z",
        "author_association": "NONE",
        "body": "Given the lack of object mutation method, am I right to say the common (and fastest) way to update (or diff) immutable object is to use `merge`/`without`? I have a feeling using `asMutable` then mutate object and then wrap them into an immutable again will be at least O(n).\n\nPS: assume I want to modify a nested immutable object `{ a: { b: 1 } }`, what's the best way to set b = 2 in `seamless-immutable` case?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/110499816",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-110499816",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 110499816,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMDQ5OTgxNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-09T20:47:53Z",
        "updated_at": "2015-06-09T20:47:53Z",
        "author_association": "OWNER",
        "body": "Yeah, `merge` and `without` are definitely the most common ways.\n\nFor the nested case, just use `merge` to override `a` to have a new value that includes a new value of `b`. If you really needed to, you could get fancier with a [custom merger](https://github.com/rtfeldman/seamless-immutable/issues/26), but I've personally had no issues just using vanilla `merge`.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/110821703",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/44#issuecomment-110821703",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/44",
        "id": 110821703,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMDgyMTcwMw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-10T16:24:50Z",
        "updated_at": "2015-06-10T16:24:50Z",
        "author_association": "OWNER",
        "body": "Interesting! Would you mind adding a test case that evilly adds a method to Array.prototype and no longer explodes?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/110821965",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/44#issuecomment-110821965",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/44",
        "id": 110821965,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMDgyMTk2NQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-10T16:25:42Z",
        "updated_at": "2015-06-10T16:25:42Z",
        "author_association": "OWNER",
        "body": "Also, you can just run `grunt` to rebuild both the development and production builds automatically.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/110824973",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/44#issuecomment-110824973",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/44",
        "id": 110824973,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMDgyNDk3Mw==",
        "user": {
            "login": "mkawalec",
            "id": 496144,
            "node_id": "MDQ6VXNlcjQ5NjE0NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/496144?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mkawalec",
            "html_url": "https://github.com/mkawalec",
            "followers_url": "https://api.github.com/users/mkawalec/followers",
            "following_url": "https://api.github.com/users/mkawalec/following{/other_user}",
            "gists_url": "https://api.github.com/users/mkawalec/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mkawalec/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mkawalec/subscriptions",
            "organizations_url": "https://api.github.com/users/mkawalec/orgs",
            "repos_url": "https://api.github.com/users/mkawalec/repos",
            "events_url": "https://api.github.com/users/mkawalec/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mkawalec/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-10T16:34:32Z",
        "updated_at": "2015-06-10T16:34:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman done, and thanks for letting me know, in case I find any other bugs :dancers: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/110854601",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/44#issuecomment-110854601",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/44",
        "id": 110854601,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMDg1NDYwMQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-10T17:56:32Z",
        "updated_at": "2015-06-10T17:56:32Z",
        "author_association": "OWNER",
        "body": "Awesome - thanks for the fix!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/111017336",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/44#issuecomment-111017336",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/44",
        "id": 111017336,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTAxNzMzNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-11T06:59:25Z",
        "updated_at": "2015-06-11T06:59:25Z",
        "author_association": "OWNER",
        "body": "This is now released in [version 2.4.1](https://www.npmjs.com/package/seamless-immutable)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/111308104",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-111308104",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/25",
        "id": 111308104,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTMwODEwNA==",
        "user": {
            "login": "dariocravero",
            "id": 376268,
            "node_id": "MDQ6VXNlcjM3NjI2OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/376268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dariocravero",
            "html_url": "https://github.com/dariocravero",
            "followers_url": "https://api.github.com/users/dariocravero/followers",
            "following_url": "https://api.github.com/users/dariocravero/following{/other_user}",
            "gists_url": "https://api.github.com/users/dariocravero/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dariocravero/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dariocravero/subscriptions",
            "organizations_url": "https://api.github.com/users/dariocravero/orgs",
            "repos_url": "https://api.github.com/users/dariocravero/repos",
            "events_url": "https://api.github.com/users/dariocravero/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dariocravero/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-11T23:46:29Z",
        "updated_at": "2015-06-11T23:46:29Z",
        "author_association": "NONE",
        "body": "Hi all,\n\nI understand the need to keep things as tight as possible but this is a big issue when you're trying to use custom types that use the prototype.\n\nFor instance, I'm building a `lookup` mechanism on top of route name matcher called `Houkou` and I would like to keep the object of patterns immutable.\n\nHowever, the way I see it, whatever happens within the `Houkou` object is its responsibility.\nThe problem with the current approach is that every `Houkou` object I instantiate gets its prototype stripped away. And not only its own prototype but those of its properties are gone too. So, for instance, I'm loosing [validate](https://github.com/deoxxa/houkou/blob/master/houkou.js#L28), [match](https://github.com/deoxxa/houkou/blob/master/houkou.js#L40) and deeper in the structure [its regex's methods](https://github.com/deoxxa/houkou/blob/master/houkou.js#L23).\n\nEven though I can assign these myself when creating my `Houkou` instance, it quickly becomes quite unmanageable when you have to track every dependency on the library that you're using for methods that need to be rewired... :(\n\nI understand the goals of `seamless-immutable`. Probably a solution in this case would be to deal with `RegExp` objects in the same way #31 deals with `Date` objects. A simpler approach would be to allow an immutable object to be created up to certain level or to exclude certain objects.\n\nWhat are your thoughts on this?\nThanks,\nDar\u00edo\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/111309555",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-111309555",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/25",
        "id": 111309555,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTMwOTU1NQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-12T00:00:49Z",
        "updated_at": "2015-06-12T00:00:49Z",
        "author_association": "OWNER",
        "body": "The core issue with prototypes is https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-92147785 - specifically, that there's no way to detect whether prototypes are relying on hidden properties, which cannot be discovered and cloned. The resulting bugs could have really nasty symptoms to identify; things as vague as \"the cloned version doesn't quite work the same way as the original for some reason.\"\n\nI could see offering a workaround similar to custom mergers, where you could pass a custom cloning function as an argument to `Immutable()`, and within that do whatever you like  (at your own risk, of course) with regards to `prototype` and anything else.\n\nThen if you wanted that prototype behavior everywhere you could just set `Immutable` to be some function that wraps the original `Immutable()` with a call that always passes your custom cloning function.\n\nThoughts?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/111547954",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/47#issuecomment-111547954",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/47",
        "id": 111547954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTU0Nzk1NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-12T16:30:29Z",
        "updated_at": "2015-06-12T16:30:29Z",
        "author_association": "OWNER",
        "body": "Thanks! One request: mind moving the instanceof check to the end of the conditional instead of the beginning? It's the least likely of the three to pass, after all.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/111621015",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/46#issuecomment-111621015",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/46",
        "id": 111621015,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTYyMTAxNQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-12T21:16:53Z",
        "updated_at": "2015-06-12T21:16:53Z",
        "author_association": "OWNER",
        "body": "Sure enough! Good catch.\n\nThe solution that comes immediately to mind is to change development mode as follows:\n1. Freeze Dates\n2. Add a list of banned mutating methods for Dates similar to what currently exists for Arrays and Objects, and just do the same banning procedure for Dates.\n\nThoughts?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/111880780",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/46#issuecomment-111880780",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/46",
        "id": 111880780,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg4MDc4MA==",
        "user": {
            "login": "jjulicher",
            "id": 3804915,
            "node_id": "MDQ6VXNlcjM4MDQ5MTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3804915?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jjulicher",
            "html_url": "https://github.com/jjulicher",
            "followers_url": "https://api.github.com/users/jjulicher/followers",
            "following_url": "https://api.github.com/users/jjulicher/following{/other_user}",
            "gists_url": "https://api.github.com/users/jjulicher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jjulicher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jjulicher/subscriptions",
            "organizations_url": "https://api.github.com/users/jjulicher/orgs",
            "repos_url": "https://api.github.com/users/jjulicher/repos",
            "events_url": "https://api.github.com/users/jjulicher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jjulicher/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-14T22:40:18Z",
        "updated_at": "2015-06-14T22:40:18Z",
        "author_association": "NONE",
        "body": "I can't think of any issues that come to mind. sounds good.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/112145816",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/47#issuecomment-112145816",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/47",
        "id": 112145816,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMjE0NTgxNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-15T17:22:15Z",
        "updated_at": "2015-06-15T17:22:15Z",
        "author_association": "OWNER",
        "body": "Awesome! Thanks for the fix.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/113965281",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-113965281",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/25",
        "id": 113965281,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMzk2NTI4MQ==",
        "user": {
            "login": "dariocravero",
            "id": 376268,
            "node_id": "MDQ6VXNlcjM3NjI2OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/376268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dariocravero",
            "html_url": "https://github.com/dariocravero",
            "followers_url": "https://api.github.com/users/dariocravero/followers",
            "following_url": "https://api.github.com/users/dariocravero/following{/other_user}",
            "gists_url": "https://api.github.com/users/dariocravero/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dariocravero/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dariocravero/subscriptions",
            "organizations_url": "https://api.github.com/users/dariocravero/orgs",
            "repos_url": "https://api.github.com/users/dariocravero/repos",
            "events_url": "https://api.github.com/users/dariocravero/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dariocravero/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-21T22:38:22Z",
        "updated_at": "2015-06-21T22:38:22Z",
        "author_association": "NONE",
        "body": "@rtfeldman I'm sorry I haven't come back to you on this before.\nI think that might be a good starting point. That would at least allow us to whitelist more complex objects at will.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/115023547",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-115023547",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/25",
        "id": 115023547,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNTAyMzU0Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-24T21:58:52Z",
        "updated_at": "2015-06-24T21:58:52Z",
        "author_association": "OWNER",
        "body": "Cool. This is admittedly not a high priority for me in terms of implementation, but I'm on board with the approach! :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/115024367",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-115024367",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/25",
        "id": 115024367,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNTAyNDM2Nw==",
        "user": {
            "login": "dariocravero",
            "id": 376268,
            "node_id": "MDQ6VXNlcjM3NjI2OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/376268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dariocravero",
            "html_url": "https://github.com/dariocravero",
            "followers_url": "https://api.github.com/users/dariocravero/followers",
            "following_url": "https://api.github.com/users/dariocravero/following{/other_user}",
            "gists_url": "https://api.github.com/users/dariocravero/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dariocravero/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dariocravero/subscriptions",
            "organizations_url": "https://api.github.com/users/dariocravero/orgs",
            "repos_url": "https://api.github.com/users/dariocravero/repos",
            "events_url": "https://api.github.com/users/dariocravero/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dariocravero/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-24T22:02:44Z",
        "updated_at": "2015-06-24T22:02:44Z",
        "author_association": "NONE",
        "body": "Good stuff! Don't worry, I'll see if I can give it a go at some stage. As a\nmatter of fact, this constrain made me reevaluate my data structures and\nallowed me to simplify things big time, so it was already a win :)\n\nOn Wed, 24 Jun 2015 22:58 Richard Feldman notifications@github.com wrote:\n\n> Cool. This is admittedly not a high priority for me in terms of\n> implementation, but I'm on board with the approach! [image: :smiley:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-115023547\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/115851224",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/42#issuecomment-115851224",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/42",
        "id": 115851224,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNTg1MTIyNA==",
        "user": {
            "login": "abritinthebay",
            "id": 492797,
            "node_id": "MDQ6VXNlcjQ5Mjc5Nw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/492797?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abritinthebay",
            "html_url": "https://github.com/abritinthebay",
            "followers_url": "https://api.github.com/users/abritinthebay/followers",
            "following_url": "https://api.github.com/users/abritinthebay/following{/other_user}",
            "gists_url": "https://api.github.com/users/abritinthebay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abritinthebay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abritinthebay/subscriptions",
            "organizations_url": "https://api.github.com/users/abritinthebay/orgs",
            "repos_url": "https://api.github.com/users/abritinthebay/repos",
            "events_url": "https://api.github.com/users/abritinthebay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abritinthebay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-26T19:44:02Z",
        "updated_at": "2015-06-26T19:44:02Z",
        "author_association": "NONE",
        "body": "Agree with @rtfeldman here.\n\nTo quote the description of Array.map:\n\n> The map() method creates a new array with the results of calling a provided function on every element in this array.\n\nWell... now make it for Immutables:\n\n> The map() method creates a new Immutable with the results of calling a provided function on every element in this Immutable.\n\nThis is in fact the only logical thing to do - you're operating on a specific type and returning a similar but different type would be... a bit wacky to say the least.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/115851883",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/1#issuecomment-115851883",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/1",
        "id": 115851883,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNTg1MTg4Mw==",
        "user": {
            "login": "abritinthebay",
            "id": 492797,
            "node_id": "MDQ6VXNlcjQ5Mjc5Nw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/492797?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abritinthebay",
            "html_url": "https://github.com/abritinthebay",
            "followers_url": "https://api.github.com/users/abritinthebay/followers",
            "following_url": "https://api.github.com/users/abritinthebay/following{/other_user}",
            "gists_url": "https://api.github.com/users/abritinthebay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abritinthebay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abritinthebay/subscriptions",
            "organizations_url": "https://api.github.com/users/abritinthebay/orgs",
            "repos_url": "https://api.github.com/users/abritinthebay/repos",
            "events_url": "https://api.github.com/users/abritinthebay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abritinthebay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-26T19:45:35Z",
        "updated_at": "2015-06-26T19:45:35Z",
        "author_association": "NONE",
        "body": "semantically `equals` is nicer - easy to discover on an object too (\"What's this do? Oh.. it's an equals function\").\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/119440967",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-119440967",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 119440967,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExOTQ0MDk2Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-08T05:29:01Z",
        "updated_at": "2015-07-08T05:29:01Z",
        "author_association": "OWNER",
        "body": "We talked about [adding a way to support opting in](https://github.com/rtfeldman/seamless-immutable/issues/25#issuecomment-111309555) but it's very low on my priority list at the moment. :smiley: \n\nIf you wanted to make a Pull Request for that, though, I would definitely be open to it!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/120547205",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-120547205",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 120547205,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDU0NzIwNQ==",
        "user": {
            "login": "virajsanghvi",
            "id": 1366272,
            "node_id": "MDQ6VXNlcjEzNjYyNzI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1366272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virajsanghvi",
            "html_url": "https://github.com/virajsanghvi",
            "followers_url": "https://api.github.com/users/virajsanghvi/followers",
            "following_url": "https://api.github.com/users/virajsanghvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/virajsanghvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virajsanghvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virajsanghvi/subscriptions",
            "organizations_url": "https://api.github.com/users/virajsanghvi/orgs",
            "repos_url": "https://api.github.com/users/virajsanghvi/repos",
            "events_url": "https://api.github.com/users/virajsanghvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virajsanghvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-10T23:00:11Z",
        "updated_at": "2015-07-10T23:00:11Z",
        "author_association": "NONE",
        "body": "I'm likely going to try this approach this weekend, but there's some weirdness in that multiple arguments to Immutable() are considered an Array and I'd rather not break existing consumers. Another option I'm thinking about is a special method that does this on Immutable like isMutable, but that's also not ideal.\n\nBecause my options for implementation of this feature are subpar, what do you think about supporting the original intent of #25, but logging a warning when encountering a prototype in development? I'm guessing there are probably a lot of folks that rely on this not happening at the moment? If so, changing that behavior would be breaking, so this probably isn't feasible either, but thought I'd ask.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/120660750",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-120660750",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 120660750,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDY2MDc1MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-11T20:45:46Z",
        "updated_at": "2015-07-11T20:45:46Z",
        "author_association": "OWNER",
        "body": "Yeah, I don't like the idea of breaking current invariants for this.\n\nHowever, I could see adding a method like this:\n\n``` javascript\n// Takes an array of allowed prototypes, and returns a new version of `Immutable`\n// which will preserve those prototypes when it encounters them.\nImmutable.withPreservedPrototypes\n```\n\nThen you could just go:\n\n``` javascript\nvar Immutable = require(\"seamless-immutable\").withPreservedPrototypes([ ... ]);\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/120777422",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-120777422",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 120777422,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDc3NzQyMg==",
        "user": {
            "login": "virajsanghvi",
            "id": 1366272,
            "node_id": "MDQ6VXNlcjEzNjYyNzI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1366272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virajsanghvi",
            "html_url": "https://github.com/virajsanghvi",
            "followers_url": "https://api.github.com/users/virajsanghvi/followers",
            "following_url": "https://api.github.com/users/virajsanghvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/virajsanghvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virajsanghvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virajsanghvi/subscriptions",
            "organizations_url": "https://api.github.com/users/virajsanghvi/orgs",
            "repos_url": "https://api.github.com/users/virajsanghvi/repos",
            "events_url": "https://api.github.com/users/virajsanghvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virajsanghvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-13T00:53:18Z",
        "updated_at": "2015-07-13T00:53:18Z",
        "author_association": "NONE",
        "body": "My main issues with that approach are:\n1. If someone created a project specific version of seamless-immutable with this approach, they'd have to keep that list up to date\n2. If someone was encapsulating the creation of these objects, it gets tricky if another component creates other Immutable objects where these are nested children. (This is probably unavoidable)\n\nHow would you feel about something like:\n\n``` javascript\n// Similar to Immutable(), but during clone of objects, attaches a __immutable_preserve_prototype \n// tag to the cloned object. The application of this tag is used elsewhere in the library to ensure \n// the prototype is preserved on clones.\nImmutable.withPreservedPrototype(obj) // could be better named\n```\n\nIf the entire library recognized this tag and acted appropriately, you could use Immutable normally, wrap objects in arrays, and get the expected result. This handles #1, and mostly #2 (having to have factories to create Immutable objects of a specific type is required in either case).\n\nAnyways, let me know what you think of that. I'm not completely sold on it, but feels easiest to consume and implement. Happy to hear out other options. Will try to implement one of these in the next day.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/121212384",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/49#issuecomment-121212384",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/49",
        "id": 121212384,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTIxMjM4NA==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-14T11:43:52Z",
        "updated_at": "2015-07-14T11:43:52Z",
        "author_association": "CONTRIBUTOR",
        "body": "I see I was mistaken, dev mode is the default.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/121307581",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-121307581",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 121307581,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTMwNzU4MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-14T16:56:41Z",
        "updated_at": "2015-07-14T16:56:41Z",
        "author_association": "OWNER",
        "body": "Hm...what would a code example look like with this in action?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/121308019",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/50#issuecomment-121308019",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/50",
        "id": 121308019,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTMwODAxOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-14T16:58:39Z",
        "updated_at": "2015-07-14T16:58:39Z",
        "author_association": "OWNER",
        "body": "Not sure I follow the question - we just use `process.env.NODE_ENV` in the source to  hook into [envify](https://github.com/hughsk/envify) when generating the production and development builds.\n\nI can totally see explaining how that works in the source, because I can see how that would be unclear. Is that what you are referring to?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/121574060",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/50#issuecomment-121574060",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/50",
        "id": 121574060,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTU3NDA2MA==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-15T10:49:07Z",
        "updated_at": "2015-07-15T10:49:07Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hello, my question is: In Node, what are the ways to switch on the dev or the prod mode? \n\nI have seen the NODE_ENV in the code without really understand when it is effective so likely the line 3 isn't true.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/121686828",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/50#issuecomment-121686828",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/50",
        "id": 121686828,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTY4NjgyOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-15T17:28:48Z",
        "updated_at": "2015-07-15T17:28:48Z",
        "author_association": "OWNER",
        "body": "I still don't quite follow. [This is how you do it for Node in general](http://stackoverflow.com/questions/9198310/how-to-set-node-env-to-production-development-in-os-x), but in the specific case of seamless-immutable, it's only used by [envify](https://github.com/hughsk/envify) when building the development and production builds.\n\nYou won't see `NODE_ENV` in the outputted development build or production build, because `envify` strips it out. Does that clarify?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/122697724",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-122697724",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 122697724,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjY5NzcyNA==",
        "user": {
            "login": "virajsanghvi",
            "id": 1366272,
            "node_id": "MDQ6VXNlcjEzNjYyNzI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1366272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virajsanghvi",
            "html_url": "https://github.com/virajsanghvi",
            "followers_url": "https://api.github.com/users/virajsanghvi/followers",
            "following_url": "https://api.github.com/users/virajsanghvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/virajsanghvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virajsanghvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virajsanghvi/subscriptions",
            "organizations_url": "https://api.github.com/users/virajsanghvi/orgs",
            "repos_url": "https://api.github.com/users/virajsanghvi/repos",
            "events_url": "https://api.github.com/users/virajsanghvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virajsanghvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-19T19:45:24Z",
        "updated_at": "2015-07-19T19:45:24Z",
        "author_association": "NONE",
        "body": "Sorry for the late response. I just tried out something similar to what I'm thinking: https://github.com/virajsanghvi/seamless-immutable/commit/5e2b065f757a8747ef6a61528782f72393d0741d\n\nJust wanted to be on the same page before cleaning this up/adding tests for PR. See the test for a general idea of how it would be used.\n\nBasically the idea is a custom constructor method used explicitly for the purpose of preserving the prototype. We can use the invariant that all existing `Immutable` objects have `Object.prototype` to determine when we've encountered an object created from this custom constructor, and preserve its prototype during cloning.\n\nThere are three main points of contention that I can see:\n- Is the performance implication of `Object.getPrototypeOf` ok in the common case? I imagine it just returns `__proto__`, but not sure.\n- What is the relation of `ImmutableWithPrototype` to `Immutable`? Should they share a common constructor, so you could pass Arrays, dates, etc to `ImmutableWithPrototype`, or should it just take in Objects and throw otherwise? (The current implementation of copying Immutable was just to try this out)\n- The name `ImmutableWithPrototype` kind of sucks- I'm open to suggestions.\n\nAnyways, let me know what you think. Also, if you have a benchmark suite I could use, I'd like to see the overall perf implications of `Object.getPrototypeOf` and `Object.create`. \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/123120629",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-123120629",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 123120629,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzEyMDYyOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-21T01:14:39Z",
        "updated_at": "2015-07-21T01:14:39Z",
        "author_association": "OWNER",
        "body": "I think a cleaner approach would be:\n1. Have `Immutable` accept a second argument for `options`, like `merge` does (this would be a breaking change, as currently it assumes if it gets multiple arguments you want an array; I'm fine with that breaking hange)\n2. If it gets a second argument of `{prototype: foo`} then use `foo` as the prototype for the resulting object.\n3. Add a method `instantiateEmptyObject()` (in the same way the other custom methods are added) and have it either return `{}` if no prototype was specified, and `Object.create(options.prototype)` if one was specified.\n4. Have the various methods call `this.instantiateEmptyObject()` instead of just using `{}`\n\nThoughts?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/123131253",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-123131253",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 123131253,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzEzMTI1Mw==",
        "user": {
            "login": "virajsanghvi",
            "id": 1366272,
            "node_id": "MDQ6VXNlcjEzNjYyNzI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1366272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virajsanghvi",
            "html_url": "https://github.com/virajsanghvi",
            "followers_url": "https://api.github.com/users/virajsanghvi/followers",
            "following_url": "https://api.github.com/users/virajsanghvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/virajsanghvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virajsanghvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virajsanghvi/subscriptions",
            "organizations_url": "https://api.github.com/users/virajsanghvi/orgs",
            "repos_url": "https://api.github.com/users/virajsanghvi/repos",
            "events_url": "https://api.github.com/users/virajsanghvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virajsanghvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-21T02:26:35Z",
        "updated_at": "2015-07-21T02:26:35Z",
        "author_association": "NONE",
        "body": "I'm a fan. This was preferable, but I thought you were against changing the interface for Immutable per a previous comment (I may have described it unclearly). Anyways, I'll get this up in the next few days when I have a free hour.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/123131846",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-123131846",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 123131846,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzEzMTg0Ng==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-21T02:30:57Z",
        "updated_at": "2015-07-21T02:30:57Z",
        "author_association": "OWNER",
        "body": "To clarify, what I meant by not wanting to break current invariants is just that there'd be no chance any existing uses of `Immutable` would suddenly \"play by different rules\" and possibly introduce surprising bugs.\n\nI'm okay with a breaking API change, though, especially for something that I suspect is not used very often. :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/124909044",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-124909044",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 124909044,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDkwOTA0NA==",
        "user": {
            "login": "Mosho1",
            "id": 5153007,
            "node_id": "MDQ6VXNlcjUxNTMwMDc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5153007?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mosho1",
            "html_url": "https://github.com/Mosho1",
            "followers_url": "https://api.github.com/users/Mosho1/followers",
            "following_url": "https://api.github.com/users/Mosho1/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mosho1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mosho1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mosho1/subscriptions",
            "organizations_url": "https://api.github.com/users/Mosho1/orgs",
            "repos_url": "https://api.github.com/users/Mosho1/repos",
            "events_url": "https://api.github.com/users/Mosho1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mosho1/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-25T22:48:45Z",
        "updated_at": "2015-07-25T22:48:45Z",
        "author_association": "NONE",
        "body": "Is this a priority? I would love to have this, could make a PR.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/125044198",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-125044198",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 125044198,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTA0NDE5OA==",
        "user": {
            "login": "virajsanghvi",
            "id": 1366272,
            "node_id": "MDQ6VXNlcjEzNjYyNzI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1366272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virajsanghvi",
            "html_url": "https://github.com/virajsanghvi",
            "followers_url": "https://api.github.com/users/virajsanghvi/followers",
            "following_url": "https://api.github.com/users/virajsanghvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/virajsanghvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virajsanghvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virajsanghvi/subscriptions",
            "organizations_url": "https://api.github.com/users/virajsanghvi/orgs",
            "repos_url": "https://api.github.com/users/virajsanghvi/repos",
            "events_url": "https://api.github.com/users/virajsanghvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virajsanghvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-26T22:10:01Z",
        "updated_at": "2015-07-26T22:10:01Z",
        "author_association": "NONE",
        "body": "Forgot to link here, but submitted #51 a couple days ago which handles what we talked about above.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/125084768",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-125084768",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 125084768,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTA4NDc2OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-27T04:35:30Z",
        "updated_at": "2015-07-27T04:35:30Z",
        "author_association": "OWNER",
        "body": "Thanks! I saw it but haven't had time to take a proper look because it's crunch time at work and I'm swamped.\n\nI'll definitely try to take a look this week!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/126126034",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/52#issuecomment-126126034",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/52",
        "id": 126126034,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjEyNjAzNA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-29T23:24:45Z",
        "updated_at": "2015-07-29T23:24:45Z",
        "author_association": "OWNER",
        "body": "No plans, sorry! :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/127482553",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/53#issuecomment-127482553",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/53",
        "id": 127482553,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQ4MjU1Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-04T05:23:46Z",
        "updated_at": "2015-08-04T05:23:46Z",
        "author_association": "OWNER",
        "body": "We actually discussed this at length over on https://github.com/rtfeldman/seamless-immutable/issues/25 - have a look!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/127485070",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/51#issuecomment-127485070",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/51",
        "id": 127485070,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQ4NTA3MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-04T05:39:04Z",
        "updated_at": "2015-08-04T05:39:04Z",
        "author_association": "OWNER",
        "body": "This looks great! Two things before merge:\n- I had one minor inline code suggestion\n- Let's document the `prototype` option in the `README`\n\nOther than that, really excellent work! :tada: Sorry I took so long getting to reviewing it.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/129069700",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/51#issuecomment-129069700",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/51",
        "id": 129069700,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTA2OTcwMA==",
        "user": {
            "login": "virajsanghvi",
            "id": 1366272,
            "node_id": "MDQ6VXNlcjEzNjYyNzI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1366272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virajsanghvi",
            "html_url": "https://github.com/virajsanghvi",
            "followers_url": "https://api.github.com/users/virajsanghvi/followers",
            "following_url": "https://api.github.com/users/virajsanghvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/virajsanghvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virajsanghvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virajsanghvi/subscriptions",
            "organizations_url": "https://api.github.com/users/virajsanghvi/orgs",
            "repos_url": "https://api.github.com/users/virajsanghvi/repos",
            "events_url": "https://api.github.com/users/virajsanghvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virajsanghvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-08T23:23:36Z",
        "updated_at": "2015-08-08T23:23:36Z",
        "author_association": "NONE",
        "body": "Thanks for your help with adding this!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/129076360",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/48#issuecomment-129076360",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/48",
        "id": 129076360,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTA3NjM2MA==",
        "user": {
            "login": "virajsanghvi",
            "id": 1366272,
            "node_id": "MDQ6VXNlcjEzNjYyNzI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1366272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virajsanghvi",
            "html_url": "https://github.com/virajsanghvi",
            "followers_url": "https://api.github.com/users/virajsanghvi/followers",
            "following_url": "https://api.github.com/users/virajsanghvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/virajsanghvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virajsanghvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virajsanghvi/subscriptions",
            "organizations_url": "https://api.github.com/users/virajsanghvi/orgs",
            "repos_url": "https://api.github.com/users/virajsanghvi/repos",
            "events_url": "https://api.github.com/users/virajsanghvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virajsanghvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-09T00:07:11Z",
        "updated_at": "2015-08-09T00:07:11Z",
        "author_association": "NONE",
        "body": "Closing as the functionality to support this is now available in 3.0.0\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/131741631",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/50#issuecomment-131741631",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/50",
        "id": 131741631,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTc0MTYzMQ==",
        "user": {
            "login": "oliverwoodings",
            "id": 621323,
            "node_id": "MDQ6VXNlcjYyMTMyMw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/621323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oliverwoodings",
            "html_url": "https://github.com/oliverwoodings",
            "followers_url": "https://api.github.com/users/oliverwoodings/followers",
            "following_url": "https://api.github.com/users/oliverwoodings/following{/other_user}",
            "gists_url": "https://api.github.com/users/oliverwoodings/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oliverwoodings/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oliverwoodings/subscriptions",
            "organizations_url": "https://api.github.com/users/oliverwoodings/orgs",
            "repos_url": "https://api.github.com/users/oliverwoodings/repos",
            "events_url": "https://api.github.com/users/oliverwoodings/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oliverwoodings/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-17T09:22:34Z",
        "updated_at": "2015-08-17T09:22:39Z",
        "author_association": "NONE",
        "body": "I believe what @jakubholynet means is how do you switch between using the dev build and and production build. The package.json file for seamless-immutable points to the development build, which in my opinion is not ideal. Really it should point to the actual source. If users want to perform optimisations  based on environment (i.e. using envify or webpack's define plugin), they should be able to do it themselves in their build step. This is how React does it and it works well; it gives the developer the power to choose. \n\nTo answer @jakubholynet 's question, if you are using webpack you can alias seamless-immutable to get  different builds. Personally I have my webpack config set up like so:\n\n``` js\nmodule.exports = {\n  plugins: [\n    new webpack.DefinePlugin({\n      \"process.env.NODE_ENV\": '\"' + (process.env.NODE_ENV || \"development\") + '\"'\n    })\n  ],\n  resolve: {\n    alias: {\n      \"seamless-immutable$\": path.resolve(__dirname, \"node_modules/seamless-immutable/src/seamless-immutable.js\")\n    }\n  }\n};\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/132073658",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/50#issuecomment-132073658",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/50",
        "id": 132073658,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjA3MzY1OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-18T05:18:55Z",
        "updated_at": "2015-08-18T05:19:12Z",
        "author_association": "OWNER",
        "body": "Thanks for clarifying! A few thoughts:\n1. The current source can't be used in development or production on a normal web page, as until `envify` has been done, references to `process.env` will still be around waiting to break. So I don't think that's the right default at the moment.\n2. Not everyone needs the performance optimizations provided by \"prod mode,\" but this is a library built around strong guarantees of immutability, so I think the default should be that those strong guarantees are enforced. They are enforced in the development build, but not in the production build, so I think the development build is the better default.\n3. I haven't looked at that part of React's source, but I'm guessing they code defensively around `process.env` so that things won't break if `envify` hasn't been run. I'm open to that approach so long as the post-`envify`, post-`uglify` production build doesn't end up with any lingering unnecessary checks as a result. This isn't a priority for me, but a PR would certainly be welcome!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/132158155",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/50#issuecomment-132158155",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/50",
        "id": 132158155,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjE1ODE1NQ==",
        "user": {
            "login": "oliverwoodings",
            "id": 621323,
            "node_id": "MDQ6VXNlcjYyMTMyMw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/621323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oliverwoodings",
            "html_url": "https://github.com/oliverwoodings",
            "followers_url": "https://api.github.com/users/oliverwoodings/followers",
            "following_url": "https://api.github.com/users/oliverwoodings/following{/other_user}",
            "gists_url": "https://api.github.com/users/oliverwoodings/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oliverwoodings/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oliverwoodings/subscriptions",
            "organizations_url": "https://api.github.com/users/oliverwoodings/orgs",
            "repos_url": "https://api.github.com/users/oliverwoodings/repos",
            "events_url": "https://api.github.com/users/oliverwoodings/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oliverwoodings/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-18T10:22:32Z",
        "updated_at": "2015-08-18T10:22:32Z",
        "author_association": "NONE",
        "body": "Yeah so what they do in React is something like this:\n\n``` js\nvar __DEV__ = process && process.env && process.env.NODE_ENV === \"development\";\nvar __PROD__ = process && process.env && process.env.NODE_ENV === \"production\";\n\nif (__DEV__) {\n  //do dev-only stuff\n}\n```\n\nThe envify-uglify combo will cause all those conditional statements to be removed in production, so no lingering checks.\n\nI'll see if i can get a PR in some time!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/132208664",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/50#issuecomment-132208664",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/50",
        "id": 132208664,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjIwODY2NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-18T13:37:28Z",
        "updated_at": "2015-08-18T13:37:28Z",
        "author_association": "OWNER",
        "body": "Sounds good! :+1: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/132693881",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/50#issuecomment-132693881",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/50",
        "id": 132693881,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjY5Mzg4MQ==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-19T16:54:54Z",
        "updated_at": "2015-08-19T16:54:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "Sorry for a late response. Thanks, @oliverwoodings, for the clarifying on my behalf and for the response. I was interested both in being able to switch between dev/prod manually (depending on what I `require`) and in a build step. I have the answers I need but perhaps they should be included in the docs [more visibly] as well? Thank you all!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/133462202",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/55#issuecomment-133462202",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/55",
        "id": 133462202,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzQ2MjIwMg==",
        "user": {
            "login": "ianp",
            "id": 103420,
            "node_id": "MDQ6VXNlcjEwMzQyMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/103420?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ianp",
            "html_url": "https://github.com/ianp",
            "followers_url": "https://api.github.com/users/ianp/followers",
            "following_url": "https://api.github.com/users/ianp/following{/other_user}",
            "gists_url": "https://api.github.com/users/ianp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ianp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ianp/subscriptions",
            "organizations_url": "https://api.github.com/users/ianp/orgs",
            "repos_url": "https://api.github.com/users/ianp/repos",
            "events_url": "https://api.github.com/users/ianp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ianp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-21T15:24:37Z",
        "updated_at": "2015-08-21T15:24:37Z",
        "author_association": "NONE",
        "body": "FWIW a simpler example based on the one from your docs seems to do the right thing for me:\n\n``` js\nImmutable({all: \"your base\", are: {belong: \"to them\"}}).merge({are: {belong: \"to us\"}}).merge({all: \"the world\"})\n```\n\nproduces:\n\n``` js\n{all: \"the world\", are: { belong: \"to us\"} }\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/133465891",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/55#issuecomment-133465891",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/55",
        "id": 133465891,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzQ2NTg5MQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-21T15:37:55Z",
        "updated_at": "2015-08-21T15:40:01Z",
        "author_association": "COLLABORATOR",
        "body": "@ianp: If you want to do a deep merge then the second argument shouldn't be `true`, it should be `{deep: true}` like:\n\n``` javascript\nobj.merge({streams: {a: { loading: true }}}, {deep: true});\n```\n\nIt produces the desired results:\n\n``` javascript\n{\n  streams: {\n    a: {name: 'Conversations', channel: [Object], loading: true},\n    b: {name: '@Mentions', channel: [Object], loading: false},\n    c: {name: 'Facebook', channel: [Object], loading: false}\n  },\n  streamOrder: ['c', 'a', 'b']\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/133470038",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/55#issuecomment-133470038",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/55",
        "id": 133470038,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzQ3MDAzOA==",
        "user": {
            "login": "ianp",
            "id": 103420,
            "node_id": "MDQ6VXNlcjEwMzQyMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/103420?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ianp",
            "html_url": "https://github.com/ianp",
            "followers_url": "https://api.github.com/users/ianp/followers",
            "following_url": "https://api.github.com/users/ianp/following{/other_user}",
            "gists_url": "https://api.github.com/users/ianp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ianp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ianp/subscriptions",
            "organizations_url": "https://api.github.com/users/ianp/orgs",
            "repos_url": "https://api.github.com/users/ianp/repos",
            "events_url": "https://api.github.com/users/ianp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ianp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-21T15:52:38Z",
        "updated_at": "2015-08-21T15:52:38Z",
        "author_association": "NONE",
        "body": "Right you are, told you it was probably me doing something daft! Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/134216058",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/1#issuecomment-134216058",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/1",
        "id": 134216058,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDIxNjA1OA==",
        "user": {
            "login": "Aetet",
            "id": 3372058,
            "node_id": "MDQ6VXNlcjMzNzIwNTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3372058?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aetet",
            "html_url": "https://github.com/Aetet",
            "followers_url": "https://api.github.com/users/Aetet/followers",
            "following_url": "https://api.github.com/users/Aetet/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aetet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aetet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aetet/subscriptions",
            "organizations_url": "https://api.github.com/users/Aetet/orgs",
            "repos_url": "https://api.github.com/users/Aetet/repos",
            "events_url": "https://api.github.com/users/Aetet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aetet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-24T14:03:48Z",
        "updated_at": "2015-08-24T14:03:56Z",
        "author_association": "NONE",
        "body": "Hello, @rtfeldman . What is status for deep equality between objects? What is api for that right now? \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/134217122",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/1#issuecomment-134217122",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/1",
        "id": 134217122,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDIxNzEyMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-24T14:06:30Z",
        "updated_at": "2015-08-24T14:06:30Z",
        "author_association": "OWNER",
        "body": "@Aetet I have [a WIP branch](https://github.com/rtfeldman/seamless-immutable/tree/deep-equals) that implements it, but needs a bunch of tests before it can go on `master`. I haven't had time to work on it, and realistically won't in the near future.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/138674283",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/56#issuecomment-138674283",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/56",
        "id": 138674283,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzODY3NDI4Mw==",
        "user": {
            "login": "dallonf",
            "id": 346300,
            "node_id": "MDQ6VXNlcjM0NjMwMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/346300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dallonf",
            "html_url": "https://github.com/dallonf",
            "followers_url": "https://api.github.com/users/dallonf/followers",
            "following_url": "https://api.github.com/users/dallonf/following{/other_user}",
            "gists_url": "https://api.github.com/users/dallonf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dallonf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dallonf/subscriptions",
            "organizations_url": "https://api.github.com/users/dallonf/orgs",
            "repos_url": "https://api.github.com/users/dallonf/repos",
            "events_url": "https://api.github.com/users/dallonf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dallonf/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-08T19:16:35Z",
        "updated_at": "2015-09-08T19:16:35Z",
        "author_association": "NONE",
        "body": "That sounds like it would cause some very odd behavior and differences from mutable counterparts:\n\n```\nvar mutableArray = [\"a\", \"b\", \"c\"];\nconsole.log(mutableArray.push(\"d\")); // Prints 4, the new length of the array\n\nvar immutableArray = Immutable([\"a\", \"b\", \"c\"]);\nconsole.log(mutableArray.push(\"d\")); // Prints [\"a\", \"b\", \"c\", \"d\"], the copy of the array\n```\n\nIt's pretty rare that you would actually use the return value of `push()`, for example, but if you did, this would be a major headache and it'd be hard to find out what was going on.\n\nAlthough maybe if you rename the proxy method (`pushImmutable` or `pushCopy` or something), this could be very useful!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/138684403",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/56#issuecomment-138684403",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/56",
        "id": 138684403,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzODY4NDQwMw==",
        "user": {
            "login": "danprince",
            "id": 1266011,
            "node_id": "MDQ6VXNlcjEyNjYwMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1266011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danprince",
            "html_url": "https://github.com/danprince",
            "followers_url": "https://api.github.com/users/danprince/followers",
            "following_url": "https://api.github.com/users/danprince/following{/other_user}",
            "gists_url": "https://api.github.com/users/danprince/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danprince/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danprince/subscriptions",
            "organizations_url": "https://api.github.com/users/danprince/orgs",
            "repos_url": "https://api.github.com/users/danprince/repos",
            "events_url": "https://api.github.com/users/danprince/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danprince/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-08T20:04:28Z",
        "updated_at": "2015-09-08T20:04:28Z",
        "author_association": "NONE",
        "body": "Yeah, that's a really good point. It would of course be possible to rename the proxied method, but fundamentally it'd be confusing in the end. I often forget that some of those mutable methods return slightly odd things.\n\n| Method | Returns |\n| --- | --- |\n| `push` | Length of new array |\n| `pop` | Removed last item |\n| `sort` | Sorted array |\n| `splice` | Array containing deleted items |\n| `shift` | Removed first item |\n| `unshift` | Length of new array |\n| `reverse` | Reversed array |\n\nOnly sort and reverse would keep consistent behavior between both versions. It would be possible to tag these as `proxyableMethods` and only apply this proxy to them?\n\nOr rename to `Ipush`/`pushImmutable`/whatever then make that explicit within the immutable error for the banned methods. Then update the docs to make it explicit that these copying methods return the state of the object/array **after** applying the mutable change to a copy, so that there's no confusion as to what they return.\n\nI agree, it would be very useful to have these methods, but not at the cost of adding unnecessary complexity, which might be the long and short of hiding them behind suffixed names? I'd be interested to hear what other people think about that suggestion?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/138943727",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/57#issuecomment-138943727",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/57",
        "id": 138943727,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzODk0MzcyNw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-09T15:17:17Z",
        "updated_at": "2015-09-09T15:19:21Z",
        "author_association": "COLLABORATOR",
        "body": "@alesch: Does it work if you do: `import I from 'seamless-immutable'`?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/138949508",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/56#issuecomment-138949508",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/56",
        "id": 138949508,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzODk0OTUwOA==",
        "user": {
            "login": "danprince",
            "id": 1266011,
            "node_id": "MDQ6VXNlcjEyNjYwMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1266011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danprince",
            "html_url": "https://github.com/danprince",
            "followers_url": "https://api.github.com/users/danprince/followers",
            "following_url": "https://api.github.com/users/danprince/following{/other_user}",
            "gists_url": "https://api.github.com/users/danprince/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danprince/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danprince/subscriptions",
            "organizations_url": "https://api.github.com/users/danprince/orgs",
            "repos_url": "https://api.github.com/users/danprince/repos",
            "events_url": "https://api.github.com/users/danprince/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danprince/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-09T15:36:39Z",
        "updated_at": "2015-09-09T15:36:48Z",
        "author_association": "NONE",
        "body": "What about prefixing them with `after`? That way the semantics of the operation can't be confused and it can be made clear that these methods return the state of the array after the operation, rather than whatever they usually return. This way they will still work whilst method chaining.\n\n``` js\nImmutable([1, 2, 3]).afterPush(4); // [1, 2, 3, 4]\nImmutable([3, 2, 1]).afterSort(); // [1, 2, 3]\nImmutable(['a', 'b', 'c']).afterReverse(); // ['c', 'b', 'a']\n\nvar ns = Immutable([1, 2, 3, 4, 5])\n  .slice(2)\n  .map(n => 2 * 2)\n  .afterPush(3)\n  .afterSort();\n\n// [3, 6, 8, 10]\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/139076709",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/40#issuecomment-139076709",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/40",
        "id": 139076709,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTA3NjcwOQ==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-10T00:02:42Z",
        "updated_at": "2015-09-10T00:02:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "Why do some kind of `deepEquals` test when you could just use recursive merging to determine if anything has changed?  Here's a rough 17-line deep merge implementation (not thoroughly tested, and one would want to make it customizable):\n\n``` javascript\nfunction mergeDeep(a, b) {\n  if (a instanceof Object || a instanceof Array) {\n    if (!b) return a;\n    var remade;\n    for (var key in b) {\n      if (b.hasOwnProperty(key)) {\n        var merged = mergeDeep(a[key], b[key]);\n        if (merged !== a[key]) {\n          if (!remade) remade = a.asMutable();\n          remade[key] = merged;\n        }\n      }\n    }\n    return remade ? Immutable(remade) : a;\n  }\n  return b;\n}\n```\n\nHere was my testcase that works with this `mergeDeep` but not `merge(..., {deep: true})`:\n\n``` javascript\nvar a = Immutable({\n  plots: [\n    {\n      traces: [\n        {channel: 'a'},\n        {channel: 'b'}\n      ]\n    }\n  ]\n});\nvar b = mergeDeep(a, {\n  plots: [\n    {\n      traces: [\n        {channel: 'a'},\n        {channel: 'b', min: 0, max: 100}\n      ]\n    }\n  ]\n});\n\nconsole.log(a.plots[0].traces[0] === b.plots[0].traces[0]); // should be true\nconsole.log(a.plots[0].traces[1] === b.plots[0].traces[1]); // should be false\n```\n\nNote that since this function treats arrays like number-keyed maps, `mergeDeep(Immutable([1,2,,,5]), [,3,4])` would produce `[1,3,4,,5]` with this implementation, which is exactly analogous to map merging (and I believe the way Immutable.js mergeDeep works).  Another common merge type would be for the output to be deep equal to b, but with all original values from a that were equal:\n\n``` javascript\nfunction updateDeep(a, b) {\n  if (a instanceof Object || a instanceof Array) {\n    if (!b) return a;\n    var remade;\n    for (var key in b) {\n      if (b.hasOwnProperty(key)) {\n        var updated = updateDeep(a[key], b[key]);\n        if (updated !== a[key]) {\n          if (!remade) remade = a.asMutable();\n          remade[key] = updated;\n        }\n      }\n    }\n    for (var key in a) {\n      if (!b.hasOwnProperty(key)) {\n        if (!remade) remade = a.asMutable();\n        delete remade[key];\n      }\n    }\n    return remade ? Immutable(remade) : a;\n  }\n  return b;\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/139166579",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/57#issuecomment-139166579",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/57",
        "id": 139166579,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTE2NjU3OQ==",
        "user": {
            "login": "alesch",
            "id": 533044,
            "node_id": "MDQ6VXNlcjUzMzA0NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/533044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alesch",
            "html_url": "https://github.com/alesch",
            "followers_url": "https://api.github.com/users/alesch/followers",
            "following_url": "https://api.github.com/users/alesch/following{/other_user}",
            "gists_url": "https://api.github.com/users/alesch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alesch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alesch/subscriptions",
            "organizations_url": "https://api.github.com/users/alesch/orgs",
            "repos_url": "https://api.github.com/users/alesch/repos",
            "events_url": "https://api.github.com/users/alesch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alesch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-10T08:31:46Z",
        "updated_at": "2015-09-10T08:31:46Z",
        "author_association": "NONE",
        "body": "Using `new` it works, but it is ugly:\n\n``` javascript\nimport I from 'seamless-immutable'\n\nlet l = new I([1,2,3]);\nconsole.log(l);   // [ 1, 2, 3 ]\n```\n\nWhen using [Ramda](http://ramdajs.com/) I do: `import * as R from 'ramda'` and it exposes all its functions under `R`.\nI guess the difference is that seamless is not exposing a namespace, but a function.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/139174094",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/57#issuecomment-139174094",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/57",
        "id": 139174094,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTE3NDA5NA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-10T08:55:46Z",
        "updated_at": "2015-09-10T08:55:46Z",
        "author_association": "COLLABORATOR",
        "body": "I'm using babel and browserify and the following works for me:\n\n``` javascript\nimport I from \"seamless-immutable\";\n\nconst l = I([1, 2, 3]);\nconsole.log(l);   // [1, 2, 3, __immutable_invariants_hold: true]\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/139183190",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/57#issuecomment-139183190",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/57",
        "id": 139183190,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTE4MzE5MA==",
        "user": {
            "login": "alesch",
            "id": 533044,
            "node_id": "MDQ6VXNlcjUzMzA0NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/533044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alesch",
            "html_url": "https://github.com/alesch",
            "followers_url": "https://api.github.com/users/alesch/followers",
            "following_url": "https://api.github.com/users/alesch/following{/other_user}",
            "gists_url": "https://api.github.com/users/alesch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alesch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alesch/subscriptions",
            "organizations_url": "https://api.github.com/users/alesch/orgs",
            "repos_url": "https://api.github.com/users/alesch/repos",
            "events_url": "https://api.github.com/users/alesch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alesch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-10T09:31:08Z",
        "updated_at": "2015-09-10T09:31:08Z",
        "author_association": "NONE",
        "body": "You are right, it works for me too with node. It was my IDE's linter complaining ?!?\n\nIn the beginning I tried using [nesh](http://danielgtaylor.github.io/nesh/), and there `import I from ...` does not work. But a regular `require` does.\n\nSorry about that and thanks for your help!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/139186663",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/57#issuecomment-139186663",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/57",
        "id": 139186663,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTE4NjY2Mw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-10T09:44:33Z",
        "updated_at": "2015-09-10T09:44:33Z",
        "author_association": "COLLABORATOR",
        "body": "@alesch: nice! my IDE complains also if I do:\n`import I from \"seamless-immutable\";`\nbut if I do:\n`import immutable from \"seamless-immutable\";`\nit doesnt. It's because functions with a name that starts with an uppercase letter are supposed to be constructor functions and used with `new`.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/139189442",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/57#issuecomment-139189442",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/57",
        "id": 139189442,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTE4OTQ0Mg==",
        "user": {
            "login": "alesch",
            "id": 533044,
            "node_id": "MDQ6VXNlcjUzMzA0NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/533044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alesch",
            "html_url": "https://github.com/alesch",
            "followers_url": "https://api.github.com/users/alesch/followers",
            "following_url": "https://api.github.com/users/alesch/following{/other_user}",
            "gists_url": "https://api.github.com/users/alesch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alesch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alesch/subscriptions",
            "organizations_url": "https://api.github.com/users/alesch/orgs",
            "repos_url": "https://api.github.com/users/alesch/repos",
            "events_url": "https://api.github.com/users/alesch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alesch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-10T09:51:54Z",
        "updated_at": "2015-09-10T09:51:54Z",
        "author_association": "NONE",
        "body": "Super!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/142014015",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/58#issuecomment-142014015",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/58",
        "id": 142014015,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjAxNDAxNQ==",
        "user": {
            "login": "jeffbski",
            "id": 5689,
            "node_id": "MDQ6VXNlcjU2ODk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffbski",
            "html_url": "https://github.com/jeffbski",
            "followers_url": "https://api.github.com/users/jeffbski/followers",
            "following_url": "https://api.github.com/users/jeffbski/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffbski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffbski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffbski/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffbski/orgs",
            "repos_url": "https://api.github.com/users/jeffbski/repos",
            "events_url": "https://api.github.com/users/jeffbski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffbski/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-21T15:22:59Z",
        "updated_at": "2015-09-21T15:22:59Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/142660084",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/58#issuecomment-142660084",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/58",
        "id": 142660084,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjY2MDA4NA==",
        "user": {
            "login": "unindented",
            "id": 69485,
            "node_id": "MDQ6VXNlcjY5NDg1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/69485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unindented",
            "html_url": "https://github.com/unindented",
            "followers_url": "https://api.github.com/users/unindented/followers",
            "following_url": "https://api.github.com/users/unindented/following{/other_user}",
            "gists_url": "https://api.github.com/users/unindented/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unindented/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unindented/subscriptions",
            "organizations_url": "https://api.github.com/users/unindented/orgs",
            "repos_url": "https://api.github.com/users/unindented/repos",
            "events_url": "https://api.github.com/users/unindented/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unindented/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-23T16:51:55Z",
        "updated_at": "2015-09-23T16:51:55Z",
        "author_association": "NONE",
        "body": "@rtfeldman are there any objections that prevent this from being merged into master?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/142706379",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/58#issuecomment-142706379",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/58",
        "id": 142706379,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjcwNjM3OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-23T19:35:51Z",
        "updated_at": "2015-09-23T19:35:51Z",
        "author_association": "OWNER",
        "body": "Nope! Just hadn't had time to take a look at it. Now I feel bad because it's a one-line change that wouldn't affect our build process and sounds like it would improve yours.\n\nThanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/142726496",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-142726496",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 142726496,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjcyNjQ5Ng==",
        "user": {
            "login": "dgieselaar",
            "id": 352732,
            "node_id": "MDQ6VXNlcjM1MjczMg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/352732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dgieselaar",
            "html_url": "https://github.com/dgieselaar",
            "followers_url": "https://api.github.com/users/dgieselaar/followers",
            "following_url": "https://api.github.com/users/dgieselaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/dgieselaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dgieselaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dgieselaar/subscriptions",
            "organizations_url": "https://api.github.com/users/dgieselaar/orgs",
            "repos_url": "https://api.github.com/users/dgieselaar/repos",
            "events_url": "https://api.github.com/users/dgieselaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dgieselaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-23T20:59:55Z",
        "updated_at": "2015-09-23T20:59:55Z",
        "author_association": "NONE",
        "body": "@rtfeldman: there's a pattern w/ `gulp-cached` and `gulp-remember` which looks a little like this:\n\n``` javascript\nstream\n  .pipe(cache())\n  .pipe(doStuffOnUncachedItemsOnly())\n  .pipe(remember())\n  .pipe(doStuffOnAllItems())\n```\n\nPerhaps something similar would would solve this problem as well:\n\n``` javascript\ncollection\n  .map(mapFn)\n  .only(filterFn)\n    .map(mapFilteredFn)\n  .all()\n```\n\nJust thinking out loud here. \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/142738065",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/58#issuecomment-142738065",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/58",
        "id": 142738065,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjczODA2NQ==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-23T21:40:04Z",
        "updated_at": "2015-09-23T21:40:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks @rtfeldman!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/143477342",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-143477342",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 143477342,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzQ3NzM0Mg==",
        "user": {
            "login": "pbc",
            "id": 1620030,
            "node_id": "MDQ6VXNlcjE2MjAwMzA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1620030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pbc",
            "html_url": "https://github.com/pbc",
            "followers_url": "https://api.github.com/users/pbc/followers",
            "following_url": "https://api.github.com/users/pbc/following{/other_user}",
            "gists_url": "https://api.github.com/users/pbc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pbc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pbc/subscriptions",
            "organizations_url": "https://api.github.com/users/pbc/orgs",
            "repos_url": "https://api.github.com/users/pbc/repos",
            "events_url": "https://api.github.com/users/pbc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pbc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-26T18:17:43Z",
        "updated_at": "2015-09-26T18:17:43Z",
        "author_association": "NONE",
        "body": "I have just run into this problem when trying to create a list of file uploads which needs to store the original File objects because without them you won't be able to send the files.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/144030447",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/62#issuecomment-144030447",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/62",
        "id": 144030447,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDAzMDQ0Nw==",
        "user": {
            "login": "damonmcminn",
            "id": 5415900,
            "node_id": "MDQ6VXNlcjU0MTU5MDA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5415900?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/damonmcminn",
            "html_url": "https://github.com/damonmcminn",
            "followers_url": "https://api.github.com/users/damonmcminn/followers",
            "following_url": "https://api.github.com/users/damonmcminn/following{/other_user}",
            "gists_url": "https://api.github.com/users/damonmcminn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/damonmcminn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/damonmcminn/subscriptions",
            "organizations_url": "https://api.github.com/users/damonmcminn/orgs",
            "repos_url": "https://api.github.com/users/damonmcminn/repos",
            "events_url": "https://api.github.com/users/damonmcminn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/damonmcminn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-29T11:22:39Z",
        "updated_at": "2015-09-29T11:22:39Z",
        "author_association": "NONE",
        "body": "I have tried similar in Node 4.1.1, Node 0.12.7 and babel-node running on 4.1.1. I have also explicitly used an IIFE to ensure strict mode.\n\n``` javascript\nvar list = Immutable([1,2,3])\nlist.pop()\nconsole.log(list) // => [1,2]\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/144092170",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-144092170",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 144092170,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDA5MjE3MA==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-29T15:19:43Z",
        "updated_at": "2015-09-29T15:19:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "In any case this was one of the primary reasons I went back to Immutable.js.  I was tempted to fork this project, but didn't have time.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/144095278",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-144095278",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 144095278,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDA5NTI3OA==",
        "user": {
            "login": "pbc",
            "id": 1620030,
            "node_id": "MDQ6VXNlcjE2MjAwMzA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1620030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pbc",
            "html_url": "https://github.com/pbc",
            "followers_url": "https://api.github.com/users/pbc/followers",
            "following_url": "https://api.github.com/users/pbc/following{/other_user}",
            "gists_url": "https://api.github.com/users/pbc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pbc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pbc/subscriptions",
            "organizations_url": "https://api.github.com/users/pbc/orgs",
            "repos_url": "https://api.github.com/users/pbc/repos",
            "events_url": "https://api.github.com/users/pbc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pbc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-29T15:31:51Z",
        "updated_at": "2015-09-29T15:31:51Z",
        "author_association": "NONE",
        "body": "I found another solution. Regular objects + RamdaJS\n- http://ramdajs.com/0.17/index.html\n- http://ramdajs.com/0.17/docs/\n\nMy favourite method is \"evolve\" because it solves so many problems and it's all immutable\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/145409421",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/62#issuecomment-145409421",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/62",
        "id": 145409421,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTQwOTQyMQ==",
        "user": {
            "login": "davidchase",
            "id": 490291,
            "node_id": "MDQ6VXNlcjQ5MDI5MQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/490291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidchase",
            "html_url": "https://github.com/davidchase",
            "followers_url": "https://api.github.com/users/davidchase/followers",
            "following_url": "https://api.github.com/users/davidchase/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidchase/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidchase/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidchase/subscriptions",
            "organizations_url": "https://api.github.com/users/davidchase/orgs",
            "repos_url": "https://api.github.com/users/davidchase/repos",
            "events_url": "https://api.github.com/users/davidchase/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidchase/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-05T01:43:47Z",
        "updated_at": "2015-10-05T01:43:47Z",
        "author_association": "NONE",
        "body": "I've run into the same issue myself... and this issue https://github.com/rtfeldman/seamless-immutable/issues/50 seems related\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/145523868",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/64#issuecomment-145523868",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/64",
        "id": 145523868,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTUyMzg2OA==",
        "user": {
            "login": "ellis",
            "id": 97852,
            "node_id": "MDQ6VXNlcjk3ODUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/97852?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ellis",
            "html_url": "https://github.com/ellis",
            "followers_url": "https://api.github.com/users/ellis/followers",
            "following_url": "https://api.github.com/users/ellis/following{/other_user}",
            "gists_url": "https://api.github.com/users/ellis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ellis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ellis/subscriptions",
            "organizations_url": "https://api.github.com/users/ellis/orgs",
            "repos_url": "https://api.github.com/users/ellis/repos",
            "events_url": "https://api.github.com/users/ellis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ellis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-05T13:15:29Z",
        "updated_at": "2015-10-05T13:15:29Z",
        "author_association": "NONE",
        "body": "I was just looking for this too, also for arrays.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147155993",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/64#issuecomment-147155993",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/64",
        "id": 147155993,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzE1NTk5Mw==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-11T04:51:23Z",
        "updated_at": "2015-10-11T04:51:23Z",
        "author_association": "NONE",
        "body": "Must needed.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147522214",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/63#issuecomment-147522214",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/63",
        "id": 147522214,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzUyMjIxNA==",
        "user": {
            "login": "neverfox",
            "id": 3344033,
            "node_id": "MDQ6VXNlcjMzNDQwMzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3344033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neverfox",
            "html_url": "https://github.com/neverfox",
            "followers_url": "https://api.github.com/users/neverfox/followers",
            "following_url": "https://api.github.com/users/neverfox/following{/other_user}",
            "gists_url": "https://api.github.com/users/neverfox/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neverfox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neverfox/subscriptions",
            "organizations_url": "https://api.github.com/users/neverfox/orgs",
            "repos_url": "https://api.github.com/users/neverfox/repos",
            "events_url": "https://api.github.com/users/neverfox/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neverfox/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-12T21:03:56Z",
        "updated_at": "2015-10-12T21:03:56Z",
        "author_association": "NONE",
        "body": "Is there anything holding this back?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147576651",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/67#issuecomment-147576651",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/67",
        "id": 147576651,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzU3NjY1MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T02:25:20Z",
        "updated_at": "2015-10-13T02:25:20Z",
        "author_association": "OWNER",
        "body": "Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147577010",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/63#issuecomment-147577010",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/63",
        "id": 147577010,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzU3NzAxMA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T02:29:21Z",
        "updated_at": "2015-10-13T02:29:21Z",
        "author_association": "OWNER",
        "body": "Thanks for figuring out the right path forward on this!\n\nI used this idea to make an [envify](https://github.com/hughsk/envify)-friendly version of this PR (notice there's no diff in the production build; envify builds things such that the compiled output will lead minification to strip out the comparison of one string literal to another), instead of keeping this check around in the production build.\n\nI'm going to close this, but thanks again for demonstrating how to solve this!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147579766",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/66#issuecomment-147579766",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/66",
        "id": 147579766,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzU3OTc2Ng==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T02:45:49Z",
        "updated_at": "2015-10-13T02:45:49Z",
        "author_association": "OWNER",
        "body": "I'd have been open to this back in the 1.0 days, but I can't justify a breaking change like this now that we're at 4.0. :)\n\nSorry!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147579869",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/64#issuecomment-147579869",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/64",
        "id": 147579869,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzU3OTg2OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T02:46:53Z",
        "updated_at": "2015-10-13T02:46:53Z",
        "author_association": "OWNER",
        "body": "Happy to accept PRs for these! I believe @jlongster may have already made some progress on this?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147580093",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/60#issuecomment-147580093",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/60",
        "id": 147580093,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzU4MDA5Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T02:49:06Z",
        "updated_at": "2015-10-13T02:49:06Z",
        "author_association": "OWNER",
        "body": "The development build definitely cannot work in IE8 because IE8 does not support Object.freeze. I can't think of any reason why the production build would not work, however.\n\nI don't personally have the bandwidth to test this, but if someone else can verify this, I can update the README to note that the production build works in IE8.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147583189",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/63#issuecomment-147583189",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/63",
        "id": 147583189,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzU4MzE4OQ==",
        "user": {
            "login": "SamHowie",
            "id": 987948,
            "node_id": "MDQ6VXNlcjk4Nzk0OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/987948?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SamHowie",
            "html_url": "https://github.com/SamHowie",
            "followers_url": "https://api.github.com/users/SamHowie/followers",
            "following_url": "https://api.github.com/users/SamHowie/following{/other_user}",
            "gists_url": "https://api.github.com/users/SamHowie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SamHowie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SamHowie/subscriptions",
            "organizations_url": "https://api.github.com/users/SamHowie/orgs",
            "repos_url": "https://api.github.com/users/SamHowie/repos",
            "events_url": "https://api.github.com/users/SamHowie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SamHowie/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T03:13:20Z",
        "updated_at": "2015-10-13T03:13:20Z",
        "author_association": "NONE",
        "body": "No worries :)\n\nYour solution is a lot simpler. I like it!\n\nI assume both Browserify and Webpack add a global process object to the window? If not your approach may lead to a Type Error as process/process.env will be undefined.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147584631",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/61#issuecomment-147584631",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/61",
        "id": 147584631,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzU4NDYzMQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T03:27:41Z",
        "updated_at": "2015-10-13T03:27:41Z",
        "author_association": "OWNER",
        "body": "Hm, I don't quite follow the case where this could cause a problem for `seamless-immutable`.\n\nCould you show a code example where this would lead `seamless-immutable` to behave undesirably?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147585275",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/65#issuecomment-147585275",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/65",
        "id": 147585275,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzU4NTI3NQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T03:34:46Z",
        "updated_at": "2015-10-13T03:34:46Z",
        "author_association": "OWNER",
        "body": "There isn't currently. I haven't tried making a custom `PropTypes` immutability checker, but if it can be done concisely without bringing in React as a dependency, I'd be open to a PR to add it!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147628274",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/62#issuecomment-147628274",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/62",
        "id": 147628274,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzYyODI3NA==",
        "user": {
            "login": "damonmcminn",
            "id": 5415900,
            "node_id": "MDQ6VXNlcjU0MTU5MDA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5415900?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/damonmcminn",
            "html_url": "https://github.com/damonmcminn",
            "followers_url": "https://api.github.com/users/damonmcminn/followers",
            "following_url": "https://api.github.com/users/damonmcminn/following{/other_user}",
            "gists_url": "https://api.github.com/users/damonmcminn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/damonmcminn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/damonmcminn/subscriptions",
            "organizations_url": "https://api.github.com/users/damonmcminn/orgs",
            "repos_url": "https://api.github.com/users/damonmcminn/repos",
            "events_url": "https://api.github.com/users/damonmcminn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/damonmcminn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T07:25:53Z",
        "updated_at": "2015-10-13T07:25:53Z",
        "author_association": "NONE",
        "body": "Many thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147643514",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/65#issuecomment-147643514",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/65",
        "id": 147643514,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzY0MzUxNA==",
        "user": {
            "login": "henit",
            "id": 2526740,
            "node_id": "MDQ6VXNlcjI1MjY3NDA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2526740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/henit",
            "html_url": "https://github.com/henit",
            "followers_url": "https://api.github.com/users/henit/followers",
            "following_url": "https://api.github.com/users/henit/following{/other_user}",
            "gists_url": "https://api.github.com/users/henit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/henit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/henit/subscriptions",
            "organizations_url": "https://api.github.com/users/henit/orgs",
            "repos_url": "https://api.github.com/users/henit/repos",
            "events_url": "https://api.github.com/users/henit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/henit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T08:21:00Z",
        "updated_at": "2015-10-13T08:22:15Z",
        "author_association": "NONE",
        "body": "I have not looked that close at the code yet, so just asking here.\n\nIs there any base object that the immutable objects inherit from? Or is the original objects sent in to the Immutable() function changed directly? If there is some base object available, it could just be used for instanceof check in PropTypes and any other case where it might be required to check if an object is immutable..\n\nSomething like\n\n```\npropTypes: {\n    myobject: React.PropTypes.instanceOf(Immutable())\n}\n```\n\ngiven that the function without arguments (or something similar) return a base object\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147754592",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/65#issuecomment-147754592",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/65",
        "id": 147754592,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzc1NDU5Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T15:41:36Z",
        "updated_at": "2015-10-13T15:41:36Z",
        "author_association": "OWNER",
        "body": "That could work with objects, but not with arrays; they need to be `instanceof Array` in order to be backwards-compatible with normal arrays.\n\nI'm open to adding a helper function intended to be used with React (as long as it doesn't necessitate a React depdendency!) but I don't want to add an extra step to the creation of every single object - even for people using `seamless-immutable` outside React - for the sake of a React convenience, if that makes sense.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/147938087",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/65#issuecomment-147938087",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/65",
        "id": 147938087,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzkzODA4Nw==",
        "user": {
            "login": "henit",
            "id": 2526740,
            "node_id": "MDQ6VXNlcjI1MjY3NDA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2526740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/henit",
            "html_url": "https://github.com/henit",
            "followers_url": "https://api.github.com/users/henit/followers",
            "following_url": "https://api.github.com/users/henit/following{/other_user}",
            "gists_url": "https://api.github.com/users/henit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/henit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/henit/subscriptions",
            "organizations_url": "https://api.github.com/users/henit/orgs",
            "repos_url": "https://api.github.com/users/henit/repos",
            "events_url": "https://api.github.com/users/henit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/henit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-14T05:25:37Z",
        "updated_at": "2015-10-14T05:25:37Z",
        "author_association": "NONE",
        "body": "Totally understandable. Unfortunately I don't have the time to contribute with the PR myself at the moment, but maybe in the future.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/149028388",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/70#issuecomment-149028388",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/70",
        "id": 149028388,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTAyODM4OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-18T16:31:55Z",
        "updated_at": "2015-10-18T16:31:55Z",
        "author_association": "OWNER",
        "body": "Thanks for bringing this up!\n\nUnfortunately, there would be a significant performance cost to enabling this; `merge` would have to keep track of whether any modifications had been made, and inspect every current value before merging along the way.\n\nI don't think the performance overhead is worth making this work.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/149147016",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/70#issuecomment-149147016",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/70",
        "id": 149147016,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTE0NzAxNg==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T08:41:12Z",
        "updated_at": "2015-10-19T09:07:26Z",
        "author_association": "NONE",
        "body": "This is a little wierd because u see \u2014\n\n``` javascript\n\nvar obj = Immutable({\n  a: {aa: 1},\n  b: {bb: 2}\n})\nvar obj2 = obj.merge({b: {bb: 2}}, {deep: true})\n\nconsole.log(obj.b === obj2.b, obj.a === obj2.a) // actually returns true for both cases.\n```\n\nSo you are doing a check here right? I can get the same behavior by just wrapping the whole object inside another temp object.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/149202926",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/70#issuecomment-149202926",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/70",
        "id": 149202926,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTIwMjkyNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T12:43:45Z",
        "updated_at": "2015-10-19T12:43:45Z",
        "author_association": "OWNER",
        "body": "Hm, sure enough! It looks like we're already doing this and incurring the performance cost, so I guess it's empirically not a performance problem. :laughing: My bad!\n\n I'll look into this.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/149221075",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/70#issuecomment-149221075",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/70",
        "id": 149221075,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTIyMTA3NQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T13:59:52Z",
        "updated_at": "2015-10-19T13:59:52Z",
        "author_association": "OWNER",
        "body": "Fixed and published as 4.0.2. Thanks for reporting this @tusharmath, and sorry I didn't look far enough into it the first time around!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/149225885",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/70#issuecomment-149225885",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/70",
        "id": 149225885,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTIyNTg4NQ==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T14:16:49Z",
        "updated_at": "2015-10-19T14:16:49Z",
        "author_association": "NONE",
        "body": "@rtfeldman No need for sorry. Thanks a ton for fixing it so quickly.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/149318437",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/69#issuecomment-149318437",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/69",
        "id": 149318437,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTMxODQzNw==",
        "user": {
            "login": "haggholm",
            "id": 4934695,
            "node_id": "MDQ6VXNlcjQ5MzQ2OTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4934695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haggholm",
            "html_url": "https://github.com/haggholm",
            "followers_url": "https://api.github.com/users/haggholm/followers",
            "following_url": "https://api.github.com/users/haggholm/following{/other_user}",
            "gists_url": "https://api.github.com/users/haggholm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haggholm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haggholm/subscriptions",
            "organizations_url": "https://api.github.com/users/haggholm/orgs",
            "repos_url": "https://api.github.com/users/haggholm/repos",
            "events_url": "https://api.github.com/users/haggholm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haggholm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T19:21:07Z",
        "updated_at": "2015-10-19T19:21:07Z",
        "author_association": "CONTRIBUTOR",
        "body": "Refers to #64 (apparently the commit comment didn\u2019t do the trick, sorry).\n\nI\u2019m not sure whether adding methods like this is really the right thing to do, but I followed to the model of `merge`. Perhaps it would be better to follow a `lodash`-like model of exported functions to avoid conflicts with named properties.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/151600274",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/72#issuecomment-151600274",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/72",
        "id": 151600274,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTYwMDI3NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-27T18:25:23Z",
        "updated_at": "2015-10-27T18:25:23Z",
        "author_association": "OWNER",
        "body": "Is the proposed solution that the Immutable would hold a mutable object?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/151769397",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/56#issuecomment-151769397",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/56",
        "id": 151769397,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTc2OTM5Nw==",
        "user": {
            "login": "jokeyrhyme",
            "id": 479816,
            "node_id": "MDQ6VXNlcjQ3OTgxNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/479816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jokeyrhyme",
            "html_url": "https://github.com/jokeyrhyme",
            "followers_url": "https://api.github.com/users/jokeyrhyme/followers",
            "following_url": "https://api.github.com/users/jokeyrhyme/following{/other_user}",
            "gists_url": "https://api.github.com/users/jokeyrhyme/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jokeyrhyme/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jokeyrhyme/subscriptions",
            "organizations_url": "https://api.github.com/users/jokeyrhyme/orgs",
            "repos_url": "https://api.github.com/users/jokeyrhyme/repos",
            "events_url": "https://api.github.com/users/jokeyrhyme/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jokeyrhyme/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-28T08:53:17Z",
        "updated_at": "2015-10-28T08:53:17Z",
        "author_association": "NONE",
        "body": "I've just started using this library, having played with Facebook's immutable.js previously.\n\nI have an `Immutable` Array, and I want to get a new `Immutable` Array that includes the contents of the previous one, with the addition of a new item at the end. The first thing I tried is `#push()` which throws an error and now I am here.\n\nTo achieve this, should I do something like this?\n\n``` js\nvar array = Immutable([1, 2, 3]);\narray = Immutable(array.asMutable().concat([4]));\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152020826",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/69#issuecomment-152020826",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/69",
        "id": 152020826,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjAyMDgyNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-28T22:46:57Z",
        "updated_at": "2015-10-28T22:46:57Z",
        "author_association": "OWNER",
        "body": "Generally looks good! Sorry I took so long reviewing it.\n\nI left a couple of comments, and there's also a merge conflict to resolve.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152150200",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/72#issuecomment-152150200",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/72",
        "id": 152150200,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjE1MDIwMA==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-29T11:19:54Z",
        "updated_at": "2015-10-29T11:19:54Z",
        "author_association": "NONE",
        "body": "I am not sure about this. There could be so many cases where you want to store it as an immutable. Though in this case we don't need it to be immutable.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152152569",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/26#issuecomment-152152569",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/26",
        "id": 152152569,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjE1MjU2OQ==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-29T11:29:35Z",
        "updated_at": "2015-10-29T11:29:35Z",
        "author_association": "NONE",
        "body": "What should the custom merger return if I want to delete a particular key?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152201357",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/72#issuecomment-152201357",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/72",
        "id": 152201357,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjIwMTM1Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-29T14:42:49Z",
        "updated_at": "2015-10-29T14:42:49Z",
        "author_association": "OWNER",
        "body": "What I meant was - could there possibly be any other solution to the stated\nproblem besides leaving it as a mutable object?\n\nOn Thu, Oct 29, 2015, 4:19 AM Tushar Mathur notifications@github.com\nwrote:\n\n> I am not sure about this. There could be so many cases where you want to\n> store it as an immutable. Though in this case we don't need it to be\n> immutable.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/rtfeldman/seamless-immutable/issues/72#issuecomment-152150200\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152264290",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/72#issuecomment-152264290",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/72",
        "id": 152264290,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjI2NDI5MA==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-29T17:50:40Z",
        "updated_at": "2015-10-29T17:50:40Z",
        "author_association": "NONE",
        "body": "No. As per the above profiling it seems like the recursive conversion to Immutable takes a lot of time. I started facing this issue when I had a huge array of numbers that I wanted to plot on a graph.\n\nHow about doing it asynchronously?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152266608",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/72#issuecomment-152266608",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/72",
        "id": 152266608,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjI2NjYwOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-29T17:58:50Z",
        "updated_at": "2015-10-29T17:58:50Z",
        "author_association": "OWNER",
        "body": "If asynchronous is a solution, that can already be done; if you pass an immutable instance to `Immutable`, it just uses the one it's given and doesn't recurse.\n\nAs a next step, I'd suggest trying that (just iterate over the object you're given and recurse asynchronously until you've built up what you need) and see if that solves the problem.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152353575",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/45#issuecomment-152353575",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/45",
        "id": 152353575,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjM1MzU3NQ==",
        "user": {
            "login": "scriptguru",
            "id": 1259219,
            "node_id": "MDQ6VXNlcjEyNTkyMTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1259219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scriptguru",
            "html_url": "https://github.com/scriptguru",
            "followers_url": "https://api.github.com/users/scriptguru/followers",
            "following_url": "https://api.github.com/users/scriptguru/following{/other_user}",
            "gists_url": "https://api.github.com/users/scriptguru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scriptguru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scriptguru/subscriptions",
            "organizations_url": "https://api.github.com/users/scriptguru/orgs",
            "repos_url": "https://api.github.com/users/scriptguru/repos",
            "events_url": "https://api.github.com/users/scriptguru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scriptguru/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-29T23:12:44Z",
        "updated_at": "2015-10-29T23:12:44Z",
        "author_association": "NONE",
        "body": "Why would it work with date objects?\nI thought it was supposed to work only with data that can be serialized to JSON and deserialized from JSON natively.\n\nStill it's possible to store date as a timestamp to workaround this.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152496129",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/56#issuecomment-152496129",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/56",
        "id": 152496129,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjQ5NjEyOQ==",
        "user": {
            "login": "sudhakar",
            "id": 6782,
            "node_id": "MDQ6VXNlcjY3ODI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudhakar",
            "html_url": "https://github.com/sudhakar",
            "followers_url": "https://api.github.com/users/sudhakar/followers",
            "following_url": "https://api.github.com/users/sudhakar/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudhakar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudhakar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudhakar/subscriptions",
            "organizations_url": "https://api.github.com/users/sudhakar/orgs",
            "repos_url": "https://api.github.com/users/sudhakar/repos",
            "events_url": "https://api.github.com/users/sudhakar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudhakar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-30T11:00:48Z",
        "updated_at": "2015-10-30T11:02:52Z",
        "author_association": "NONE",
        "body": ":+1: Started with seamless-immutable & after failing to easily `splice`, tried porting it to immutable-js. Now my app has become even more complex with all that `get`, `setIn` etc, I am now back here.\n\nHow about `ruby` sort of suffix for immutable methods like `splice$` or `splice_` ?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152536196",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-152536196",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 152536196,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjUzNjE5Ng==",
        "user": {
            "login": "sudhakar",
            "id": 6782,
            "node_id": "MDQ6VXNlcjY3ODI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudhakar",
            "html_url": "https://github.com/sudhakar",
            "followers_url": "https://api.github.com/users/sudhakar/followers",
            "following_url": "https://api.github.com/users/sudhakar/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudhakar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudhakar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudhakar/subscriptions",
            "organizations_url": "https://api.github.com/users/sudhakar/orgs",
            "repos_url": "https://api.github.com/users/sudhakar/repos",
            "events_url": "https://api.github.com/users/sudhakar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudhakar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-30T14:08:29Z",
        "updated_at": "2015-10-30T14:08:29Z",
        "author_association": "NONE",
        "body": "What does your Menu component look like? Might be related to https://github.com/rtfeldman/seamless-immutable/issues/59\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152539655",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-152539655",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 152539655,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjUzOTY1NQ==",
        "user": {
            "login": "sudhakar",
            "id": 6782,
            "node_id": "MDQ6VXNlcjY3ODI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudhakar",
            "html_url": "https://github.com/sudhakar",
            "followers_url": "https://api.github.com/users/sudhakar/followers",
            "following_url": "https://api.github.com/users/sudhakar/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudhakar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudhakar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudhakar/subscriptions",
            "organizations_url": "https://api.github.com/users/sudhakar/orgs",
            "repos_url": "https://api.github.com/users/sudhakar/repos",
            "events_url": "https://api.github.com/users/sudhakar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudhakar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-30T14:24:04Z",
        "updated_at": "2015-10-30T14:24:04Z",
        "author_association": "NONE",
        "body": "Unfortunate that it breaks React's common usage pattern. But for a immutable lib, it makes sense to immute all methods which creates new objects.\n\nHowever, it would be awesome if there's an api to avoid creating immutables when it is not required..\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152573723",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-152573723",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 152573723,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjU3MzcyMw==",
        "user": {
            "login": "scriptguru",
            "id": 1259219,
            "node_id": "MDQ6VXNlcjEyNTkyMTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1259219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scriptguru",
            "html_url": "https://github.com/scriptguru",
            "followers_url": "https://api.github.com/users/scriptguru/followers",
            "following_url": "https://api.github.com/users/scriptguru/following{/other_user}",
            "gists_url": "https://api.github.com/users/scriptguru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scriptguru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scriptguru/subscriptions",
            "organizations_url": "https://api.github.com/users/scriptguru/orgs",
            "repos_url": "https://api.github.com/users/scriptguru/repos",
            "events_url": "https://api.github.com/users/scriptguru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scriptguru/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-30T16:21:07Z",
        "updated_at": "2015-10-30T16:21:07Z",
        "author_association": "NONE",
        "body": "The thing is, it doesn't do anything fancy, and this bug appears with any component\n\n``` js\n    render() {\n\n        return (\n            <ul className=\"generalMenu\">\n                {\n                    ( this.props.items || [] ).map( ( item ) => <li key={ item.cssClass } className={ item.cssClass }><Link to={ item.link }>{ item.title }</Link></li> )\n                }\n            </ul>\n        );\n    }\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152584517",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-152584517",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 152584517,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjU4NDUxNw==",
        "user": {
            "login": "sudhakar",
            "id": 6782,
            "node_id": "MDQ6VXNlcjY3ODI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudhakar",
            "html_url": "https://github.com/sudhakar",
            "followers_url": "https://api.github.com/users/sudhakar/followers",
            "following_url": "https://api.github.com/users/sudhakar/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudhakar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudhakar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudhakar/subscriptions",
            "organizations_url": "https://api.github.com/users/sudhakar/orgs",
            "repos_url": "https://api.github.com/users/sudhakar/repos",
            "events_url": "https://api.github.com/users/sudhakar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudhakar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-30T16:50:49Z",
        "updated_at": "2015-10-30T16:50:49Z",
        "author_association": "NONE",
        "body": "Ah.. `this.props.items` is `immutable menu`. When you call `map`, the return value(which is array of react elements) is also casted into `immutable` see https://github.com/rtfeldman/seamless-immutable/blob/master/src/seamless-immutable.js#L97 same as reported in #59 \n\nI havent personally tested it though but it looks like `Immutable()`-izing React elements causes overflows\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152599880",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-152599880",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 152599880,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjU5OTg4MA==",
        "user": {
            "login": "scriptguru",
            "id": 1259219,
            "node_id": "MDQ6VXNlcjEyNTkyMTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1259219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scriptguru",
            "html_url": "https://github.com/scriptguru",
            "followers_url": "https://api.github.com/users/scriptguru/followers",
            "following_url": "https://api.github.com/users/scriptguru/following{/other_user}",
            "gists_url": "https://api.github.com/users/scriptguru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scriptguru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scriptguru/subscriptions",
            "organizations_url": "https://api.github.com/users/scriptguru/orgs",
            "repos_url": "https://api.github.com/users/scriptguru/repos",
            "events_url": "https://api.github.com/users/scriptguru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scriptguru/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-30T17:48:43Z",
        "updated_at": "2015-10-30T18:23:45Z",
        "author_association": "NONE",
        "body": "Hm, this is an interesting point. I see what's the problem now, thanks for explanation.\n\nTo me it looks like some checks have to be added to seamless-immutable to avoid this issue.\n\nI understand that seamless-immutable hasn't been created for React, but let's face it - it's becoming popular largely thanks to React, so it shouldn't cause extreme problems when being used with it.\n\nReact promotes ImmutableJS, which is obviously not as convenient as seamless-immutable, but at least it doesn't cause infinite recursion or something like that.\n\nAs a workaround, I think for now I can just use lodash map method, which IIRC doesn't use the native method, but definitely this issue should be addressed since in most examples regarding React usage native methods like map are being used.\n\nUPDATE: as expected, it works fine when using lodash map method.\nAs I understand, React uses circular references and that's how infinite recursion happens. Probably that's what should be detected, not the React itself (however, detecting React could be an easy first step for solving the problem if the good solution is not obvious).\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152621291",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-152621291",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 152621291,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjYyMTI5MQ==",
        "user": {
            "login": "sudhakar",
            "id": 6782,
            "node_id": "MDQ6VXNlcjY3ODI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudhakar",
            "html_url": "https://github.com/sudhakar",
            "followers_url": "https://api.github.com/users/sudhakar/followers",
            "following_url": "https://api.github.com/users/sudhakar/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudhakar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudhakar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudhakar/subscriptions",
            "organizations_url": "https://api.github.com/users/sudhakar/orgs",
            "repos_url": "https://api.github.com/users/sudhakar/repos",
            "events_url": "https://api.github.com/users/sudhakar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudhakar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-30T19:12:25Z",
        "updated_at": "2015-10-30T19:12:25Z",
        "author_association": "NONE",
        "body": "IMHO infinite recursion is certainly a bug. Atleast better error should be thrown when circular references are found. Probably you may want to update issue `title` to get better visibility\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152646175",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-152646175",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 152646175,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjY0NjE3NQ==",
        "user": {
            "login": "scriptguru",
            "id": 1259219,
            "node_id": "MDQ6VXNlcjEyNTkyMTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1259219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scriptguru",
            "html_url": "https://github.com/scriptguru",
            "followers_url": "https://api.github.com/users/scriptguru/followers",
            "following_url": "https://api.github.com/users/scriptguru/following{/other_user}",
            "gists_url": "https://api.github.com/users/scriptguru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scriptguru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scriptguru/subscriptions",
            "organizations_url": "https://api.github.com/users/scriptguru/orgs",
            "repos_url": "https://api.github.com/users/scriptguru/repos",
            "events_url": "https://api.github.com/users/scriptguru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scriptguru/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-30T20:40:17Z",
        "updated_at": "2015-10-30T20:40:17Z",
        "author_association": "NONE",
        "body": "Good idea, thanks\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152652988",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-152652988",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 152652988,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjY1Mjk4OA==",
        "user": {
            "login": "sudhakar",
            "id": 6782,
            "node_id": "MDQ6VXNlcjY3ODI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudhakar",
            "html_url": "https://github.com/sudhakar",
            "followers_url": "https://api.github.com/users/sudhakar/followers",
            "following_url": "https://api.github.com/users/sudhakar/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudhakar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudhakar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudhakar/subscriptions",
            "organizations_url": "https://api.github.com/users/sudhakar/orgs",
            "repos_url": "https://api.github.com/users/sudhakar/repos",
            "events_url": "https://api.github.com/users/sudhakar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudhakar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-30T21:14:18Z",
        "updated_at": "2015-10-30T21:37:11Z",
        "author_association": "NONE",
        "body": "Oops..Just `title` change is good enough..It helps to identify in issues list. On first glance, your issue wasn't  entirely clear.\n\nBTW, its not a major problem per se. Just that it fails to handle a special case with react. I would simply rephrase it as \"Using Map method with react causes infinite loop\". (oh pls do remove all bold text in `description`. Its too noisy)\n\nAlso it is not a simple fix. Where references needs to be deeply compared or whatever. Other solution would be to publish methods which will return `Mutable` data. Again these are major changes that needs to be carefully considered & it might even be against the target goals of the library.\n\nSorry my last comment was little vague. So lets be nice here ;)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152666358",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-152666358",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 152666358,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjY2NjM1OA==",
        "user": {
            "login": "scriptguru",
            "id": 1259219,
            "node_id": "MDQ6VXNlcjEyNTkyMTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1259219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scriptguru",
            "html_url": "https://github.com/scriptguru",
            "followers_url": "https://api.github.com/users/scriptguru/followers",
            "following_url": "https://api.github.com/users/scriptguru/following{/other_user}",
            "gists_url": "https://api.github.com/users/scriptguru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scriptguru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scriptguru/subscriptions",
            "organizations_url": "https://api.github.com/users/scriptguru/orgs",
            "repos_url": "https://api.github.com/users/scriptguru/repos",
            "events_url": "https://api.github.com/users/scriptguru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scriptguru/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-30T22:34:42Z",
        "updated_at": "2015-10-30T22:34:42Z",
        "author_association": "NONE",
        "body": "Yes, I know it's not an easy fix. One of the possible solutions would be to use WeakMap or Map, using all objects that are being converted to immutable as keys, but unfortunately it won't work in older browsers, so it's not really an option. That's why I suggested to include a quick fix that would resolve it just for usage with React, just because it's a major use case.\n\nOr at least a note could be added to the Readme.md on this particular issue, helping people to avoid this problem.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152709186",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-152709186",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 152709186,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjcwOTE4Ng==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-31T07:51:59Z",
        "updated_at": "2015-10-31T07:53:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "@sudhakar With over 9000 stars on Immutable.js, which allows mutable objects to be stored inside immutable objects, it's clear plenty of people think the most useful behavior is not to automatically immutablize everything.\n\n\"Makes sense\" is vague; a more concrete design goal is to make a library convenient for common use cases.  I'd argue that `map`ping to _mutable_ objects is a fairly common use case, as in my above example, and it's one that Immutable.js is a lot more convenient for.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152717481",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-152717481",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 152717481,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjcxNzQ4MQ==",
        "user": {
            "login": "sudhakar",
            "id": 6782,
            "node_id": "MDQ6VXNlcjY3ODI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudhakar",
            "html_url": "https://github.com/sudhakar",
            "followers_url": "https://api.github.com/users/sudhakar/followers",
            "following_url": "https://api.github.com/users/sudhakar/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudhakar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudhakar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudhakar/subscriptions",
            "organizations_url": "https://api.github.com/users/sudhakar/orgs",
            "repos_url": "https://api.github.com/users/sudhakar/repos",
            "events_url": "https://api.github.com/users/sudhakar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudhakar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-31T09:23:42Z",
        "updated_at": "2015-10-31T09:23:42Z",
        "author_association": "NONE",
        "body": "@jedwards1211 I dont have a strong opinion on this. I am all up for having mutable methods being part of the API. Changing the `map` or `filter` methods to return mutable objects is a big call. @rtfeldman might be the right person to decide on that.\n\nBTW, there's already a thread open to have mutuable api. See more discussion on #56 & chime in with your proposal so that others in community can throw in their thoughts.\n\nNote that I am not a maintainer/owner of this repo. I am just a user like who wants to use it with React ;)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152750683",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/56#issuecomment-152750683",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/56",
        "id": 152750683,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjc1MDY4Mw==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-31T17:04:00Z",
        "updated_at": "2015-10-31T17:04:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "Let's back up a moment here: seamless-immutable has already changed the behavior of these standard JS methods.  It has to; they can't perform any mutations.  It tries valiantly to make immutables look and feel as much like mutables as it can, but it could never go all the way.  Therefore if users call any of those methods expecting usual JS behavior, they'll be surprised anyway.\n\nSo seamless-immutable might as well change the API however it wants.  If `push`, `pop`, etc. return a new immutable, it won't be more surprising to the user than throwing an error, and I think users will get used to it easily, since plenty of people have gotten used to it being the standard behavior of Immutable.js.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152751506",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-152751506",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 152751506,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjc1MTUwNg==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-31T17:11:19Z",
        "updated_at": "2015-10-31T17:11:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "I know you're not the owner :)\n\nWhat I'm talking about `map` and `filter` doing is a bit more subtle.  The way they work in Immutable.js is to return an immutable array _containing_ the exact objects returned by your mapper function: if it returns mutable objects, you get an immutable array with mutable objects as elements.  Oftentimes when your source object is immutable all the way down, your mapper function will just return the result of some Immutable.js method calls on the elements, which return other immutables, meaning `map` will return a fully immutable array anyway.  But if your mapper function returns something completely different, like React elements as in my example, you'll get an immutable array containing (mutable) React elements.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152751702",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-152751702",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 152751702,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjc1MTcwMg==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-31T17:14:56Z",
        "updated_at": "2015-10-31T17:14:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "I wouldn't recommend using WeakMap or Map even with polyfills...the polyfills aren't perfect and can cause memory leaks in some situations, especially if the same object is used as a key in many different Maps/WeakMaps.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152751770",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-152751770",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 152751770,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjc1MTc3MA==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-31T17:16:21Z",
        "updated_at": "2015-10-31T17:16:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "In any case, you might have noticed that Feldman hasn't commented on these threads at all...I think he's not even interested.  I'd be happy if someone made a competing fork\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152751915",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-152751915",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 152751915,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjc1MTkxNQ==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-31T17:17:43Z",
        "updated_at": "2015-10-31T17:17:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "@pbc using Ramda is kind of nifty.  What I really want to know is how well Immutable.js performs compared to copying JS objects.  Supposedly it can share most of the unchanged data between objects saving time and memory.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/152777953",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-152777953",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 152777953,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjc3Nzk1Mw==",
        "user": {
            "login": "scriptguru",
            "id": 1259219,
            "node_id": "MDQ6VXNlcjEyNTkyMTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1259219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scriptguru",
            "html_url": "https://github.com/scriptguru",
            "followers_url": "https://api.github.com/users/scriptguru/followers",
            "following_url": "https://api.github.com/users/scriptguru/following{/other_user}",
            "gists_url": "https://api.github.com/users/scriptguru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scriptguru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scriptguru/subscriptions",
            "organizations_url": "https://api.github.com/users/scriptguru/orgs",
            "repos_url": "https://api.github.com/users/scriptguru/repos",
            "events_url": "https://api.github.com/users/scriptguru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scriptguru/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-31T22:19:27Z",
        "updated_at": "2015-10-31T22:19:27Z",
        "author_association": "NONE",
        "body": "I think this problem can be solved with one of following approaches or their combination:\n1. Recursion counter. If we go let's say 50 levels deep, it's a bad sign. The counter is basically free for CPU, but cannot really detect circular references - just how deep we are.\n2. Using `JSON.stringify()` on an object with circular references will throw an error, and this can be used to detect them. However, it will also throw an error in some other cases too - when in encounters something that cannot be converted to JSON. And I guess it's way more expensive than counter.\n\nI think, counter with some reasonable limit, and with possibility to adjust the limit would work the best. Currently a property that is being used as an immutability marker has value `true`. However, it could store the maximum allowed recursion level, that user can optionally set when making an object immutable.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/153018839",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-153018839",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 153018839,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzAxODgzOQ==",
        "user": {
            "login": "davidspiess",
            "id": 992674,
            "node_id": "MDQ6VXNlcjk5MjY3NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/992674?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidspiess",
            "html_url": "https://github.com/davidspiess",
            "followers_url": "https://api.github.com/users/davidspiess/followers",
            "following_url": "https://api.github.com/users/davidspiess/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidspiess/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidspiess/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidspiess/subscriptions",
            "organizations_url": "https://api.github.com/users/davidspiess/orgs",
            "repos_url": "https://api.github.com/users/davidspiess/repos",
            "events_url": "https://api.github.com/users/davidspiess/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidspiess/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-02T13:38:45Z",
        "updated_at": "2015-11-02T13:38:45Z",
        "author_association": "NONE",
        "body": "I stumbled upon the same issue. One way to get around it, would be using lodash instead of the native map function...\n\n``` js\n_.map(items, (item, i) => <div key={i}>{item}</div>);\n```\n\n...or convert it to a mutable array before performing the map\n\n``` js\nitems.asMutable().map((item, i) => <div key={i}>{item}</div>);\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/154426771",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/66#issuecomment-154426771",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/66",
        "id": 154426771,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDQyNjc3MQ==",
        "user": {
            "login": "CosticaPuntaru",
            "id": 6418405,
            "node_id": "MDQ6VXNlcjY0MTg0MDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6418405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CosticaPuntaru",
            "html_url": "https://github.com/CosticaPuntaru",
            "followers_url": "https://api.github.com/users/CosticaPuntaru/followers",
            "following_url": "https://api.github.com/users/CosticaPuntaru/following{/other_user}",
            "gists_url": "https://api.github.com/users/CosticaPuntaru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CosticaPuntaru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CosticaPuntaru/subscriptions",
            "organizations_url": "https://api.github.com/users/CosticaPuntaru/orgs",
            "repos_url": "https://api.github.com/users/CosticaPuntaru/repos",
            "events_url": "https://api.github.com/users/CosticaPuntaru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CosticaPuntaru/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-06T14:42:28Z",
        "updated_at": "2015-11-06T14:42:28Z",
        "author_association": "NONE",
        "body": "it can have an alias ...\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/154718623",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-154718623",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 154718623,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDcxODYyMw==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-07T16:00:07Z",
        "updated_at": "2015-11-07T16:00:07Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes...I'm trying to argue that it shouldn't be necessary to do that\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/154719085",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-154719085",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 154719085,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDcxOTA4NQ==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-07T16:10:21Z",
        "updated_at": "2015-11-07T16:11:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "@scriptguru when you use objects as keys with the ES2015 Map polyfill, it just stores the values inside a hidden property tree on the key objects anyway.  That's the only way it's possible to simulate object keys in ES5. I think the sole reason old browsers aren't supported is that they don't have an `Object.defineProperty` method, so the Map data can't be created in a hidden/non-enumerable property.\n\nBut that's no matter for this method.  All you have to do is temporarily tack the output immutable onto each input object/array in a property with a name that no one's going to use, like `_$_$_$immutable`, and then remove those properties when done converting the tree into an immutable.  I'd be a lot more comfortable with this than with a recursion counter or `JSON.stringify()` -- the graph structure of the input should be converted to an immutable with the same graph structure, and using a Map or keys on the input objects is the only way to do that.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/154743281",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-154743281",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 154743281,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDc0MzI4MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-07T19:55:55Z",
        "updated_at": "2015-11-07T19:55:55Z",
        "author_association": "OWNER",
        "body": "Sorry I took so long to respond to this.\n\nI totally understand the idea here, but to me the invariant that calls to Immutable() consistently result in values that are immutable is more important than this convenience of not having to call .asMutable() or use something like _.map. I think the value of API consistency wins here.\n\nThanks for raising this point, and for the discussion, but I'm going to close this just to be totally clear on where I stand on this: calls to Immutable() should always return values that are immutable.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/154743440",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/76#issuecomment-154743440",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/76",
        "id": 154743440,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDc0MzQ0MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-07T19:59:48Z",
        "updated_at": "2015-11-07T19:59:48Z",
        "author_association": "OWNER",
        "body": "I'm surprised by this too! Assuming it wouldn't have noticeable performance costs, I'd be happy to accept a PR that fixed this.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/154743602",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-154743602",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/59",
        "id": 154743602,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDc0MzYwMg==",
        "user": {
            "login": "jedwards1211",
            "id": 1448194,
            "node_id": "MDQ6VXNlcjE0NDgxOTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1448194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedwards1211",
            "html_url": "https://github.com/jedwards1211",
            "followers_url": "https://api.github.com/users/jedwards1211/followers",
            "following_url": "https://api.github.com/users/jedwards1211/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedwards1211/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedwards1211/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedwards1211/subscriptions",
            "organizations_url": "https://api.github.com/users/jedwards1211/orgs",
            "repos_url": "https://api.github.com/users/jedwards1211/repos",
            "events_url": "https://api.github.com/users/jedwards1211/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedwards1211/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-07T20:03:13Z",
        "updated_at": "2015-11-07T20:03:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "Okay, well, I will stick with ImmuableJS then.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/154748444",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/74#issuecomment-154748444",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/74",
        "id": 154748444,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDc0ODQ0NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-07T20:35:44Z",
        "updated_at": "2015-11-07T20:35:44Z",
        "author_association": "OWNER",
        "body": "The production build has all references to NODE_ENV stripped out by envify, so this won't be a concern there.\n\nIs there a reason you couldn't address the performance concern by using the prod build?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/155169609",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/77#issuecomment-155169609",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/77",
        "id": 155169609,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTE2OTYwOQ==",
        "user": {
            "login": "fxck",
            "id": 1303561,
            "node_id": "MDQ6VXNlcjEzMDM1NjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1303561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fxck",
            "html_url": "https://github.com/fxck",
            "followers_url": "https://api.github.com/users/fxck/followers",
            "following_url": "https://api.github.com/users/fxck/following{/other_user}",
            "gists_url": "https://api.github.com/users/fxck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fxck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fxck/subscriptions",
            "organizations_url": "https://api.github.com/users/fxck/orgs",
            "repos_url": "https://api.github.com/users/fxck/repos",
            "events_url": "https://api.github.com/users/fxck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fxck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-09T19:43:35Z",
        "updated_at": "2015-11-09T19:43:35Z",
        "author_association": "NONE",
        "body": "basically adding umd.. like this perhaps https://github.com/fxck/seamless-immutable/commits/master it's failing tests now though.. but it works\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/156049168",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/77#issuecomment-156049168",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/77",
        "id": 156049168,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjA0OTE2OA==",
        "user": {
            "login": "veggiemonk",
            "id": 5487021,
            "node_id": "MDQ6VXNlcjU0ODcwMjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5487021?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/veggiemonk",
            "html_url": "https://github.com/veggiemonk",
            "followers_url": "https://api.github.com/users/veggiemonk/followers",
            "following_url": "https://api.github.com/users/veggiemonk/following{/other_user}",
            "gists_url": "https://api.github.com/users/veggiemonk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/veggiemonk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/veggiemonk/subscriptions",
            "organizations_url": "https://api.github.com/users/veggiemonk/orgs",
            "repos_url": "https://api.github.com/users/veggiemonk/repos",
            "events_url": "https://api.github.com/users/veggiemonk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/veggiemonk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-12T09:39:15Z",
        "updated_at": "2015-11-12T09:39:15Z",
        "author_association": "NONE",
        "body": ":+1: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/156184980",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/69#issuecomment-156184980",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/69",
        "id": 156184980,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjE4NDk4MA==",
        "user": {
            "login": "haggholm",
            "id": 4934695,
            "node_id": "MDQ6VXNlcjQ5MzQ2OTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4934695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haggholm",
            "html_url": "https://github.com/haggholm",
            "followers_url": "https://api.github.com/users/haggholm/followers",
            "following_url": "https://api.github.com/users/haggholm/following{/other_user}",
            "gists_url": "https://api.github.com/users/haggholm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haggholm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haggholm/subscriptions",
            "organizations_url": "https://api.github.com/users/haggholm/orgs",
            "repos_url": "https://api.github.com/users/haggholm/repos",
            "events_url": "https://api.github.com/users/haggholm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haggholm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-12T18:01:04Z",
        "updated_at": "2015-11-12T18:01:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "Sorry I took even longer getting back! Added to README, changed a few random values to use JSC, not sure if that\u2019s precisely what you meant: haven\u2019t used JSC before (though if it\u2019s inspired by QuickCheck, I expect to do so again).\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/156455655",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/69#issuecomment-156455655",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/69",
        "id": 156455655,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjQ1NTY1NQ==",
        "user": {
            "login": "johnste",
            "id": 886051,
            "node_id": "MDQ6VXNlcjg4NjA1MQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/886051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johnste",
            "html_url": "https://github.com/johnste",
            "followers_url": "https://api.github.com/users/johnste/followers",
            "following_url": "https://api.github.com/users/johnste/following{/other_user}",
            "gists_url": "https://api.github.com/users/johnste/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johnste/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johnste/subscriptions",
            "organizations_url": "https://api.github.com/users/johnste/orgs",
            "repos_url": "https://api.github.com/users/johnste/repos",
            "events_url": "https://api.github.com/users/johnste/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johnste/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-13T15:04:15Z",
        "updated_at": "2015-11-13T15:04:15Z",
        "author_association": "NONE",
        "body": "Could this also be made to work with arrays as well? Currently it's cumbersome to update an item in an array.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/156573690",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/69#issuecomment-156573690",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/69",
        "id": 156573690,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjU3MzY5MA==",
        "user": {
            "login": "haggholm",
            "id": 4934695,
            "node_id": "MDQ6VXNlcjQ5MzQ2OTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4934695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haggholm",
            "html_url": "https://github.com/haggholm",
            "followers_url": "https://api.github.com/users/haggholm/followers",
            "following_url": "https://api.github.com/users/haggholm/following{/other_user}",
            "gists_url": "https://api.github.com/users/haggholm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haggholm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haggholm/subscriptions",
            "organizations_url": "https://api.github.com/users/haggholm/orgs",
            "repos_url": "https://api.github.com/users/haggholm/repos",
            "events_url": "https://api.github.com/users/haggholm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haggholm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-13T22:12:57Z",
        "updated_at": "2015-11-13T22:12:57Z",
        "author_association": "CONTRIBUTOR",
        "body": "It can be done with arrays; I added it to arrays. I also found some weird edge cases where the object versions didn't work properly (with nested paths); I didn't nail it down, as my main concern was making the tests pass for my added methods, but wonkiness seemed to ensue sometimes when e.g. merging a complex object with a `{foo: NaN}` value. The new version is a bit more straightforward (IMO) and doesn't use `merge()`, so it's not affected, but it could use more digging. I can't take more company time for it right now, though!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/158654639",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/54#issuecomment-158654639",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/54",
        "id": 158654639,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODY1NDYzOQ==",
        "user": {
            "login": "robjens",
            "id": 11848802,
            "node_id": "MDQ6VXNlcjExODQ4ODAy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11848802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robjens",
            "html_url": "https://github.com/robjens",
            "followers_url": "https://api.github.com/users/robjens/followers",
            "following_url": "https://api.github.com/users/robjens/following{/other_user}",
            "gists_url": "https://api.github.com/users/robjens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robjens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robjens/subscriptions",
            "organizations_url": "https://api.github.com/users/robjens/orgs",
            "repos_url": "https://api.github.com/users/robjens/repos",
            "events_url": "https://api.github.com/users/robjens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robjens/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-21T15:44:16Z",
        "updated_at": "2015-11-21T15:44:16Z",
        "author_association": "NONE",
        "body": "AFAIK (just got to learn this library), the only supported types are `Object` and `Array`.\n\nImmutable `List` isn't to be found. Also the amount of available methods is seriously trimmed down. \n\nHowever, that having said, there is a way to accomplish what you desire, I've used ES5 function notation here...\n\n``` javascript\nImmutable([1 2 3]).flatMap(function(x) { return x == 1 ? x + 1 : x; });\n```\n\nShould do the trick.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/159566468",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/79#issuecomment-159566468",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/79",
        "id": 159566468,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTU2NjQ2OA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-25T10:36:58Z",
        "updated_at": "2015-11-25T10:36:58Z",
        "author_association": "COLLABORATOR",
        "body": "What do you mean? If you merge A with B and both contain the array named C then the result will contain the array from B. Do you want the result to ignore the array from B and keep the array from A?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/159568823",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/79#issuecomment-159568823",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/79",
        "id": 159568823,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTU2ODgyMw==",
        "user": {
            "login": "amannn",
            "id": 4038316,
            "node_id": "MDQ6VXNlcjQwMzgzMTY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4038316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amannn",
            "html_url": "https://github.com/amannn",
            "followers_url": "https://api.github.com/users/amannn/followers",
            "following_url": "https://api.github.com/users/amannn/following{/other_user}",
            "gists_url": "https://api.github.com/users/amannn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amannn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amannn/subscriptions",
            "organizations_url": "https://api.github.com/users/amannn/orgs",
            "repos_url": "https://api.github.com/users/amannn/repos",
            "events_url": "https://api.github.com/users/amannn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amannn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-25T10:45:56Z",
        "updated_at": "2015-11-25T10:46:31Z",
        "author_association": "NONE",
        "body": "I'd like to do something like this:\n\n``` js\nlet o = Immutable({arr: [{id: 2}]});\no = o.merge({arr: [{id: 3}]}, {mergeArray: false});\n// o is {arr: [{id: 3}]}\n```\n\nSo the array from B should override the array from A.\n\nWith the current implementation the result is `{arr: [{id: 2}, {id: 3}]}`\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/159571513",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/79#issuecomment-159571513",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/79",
        "id": 159571513,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTU3MTUxMw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-25T10:57:49Z",
        "updated_at": "2015-11-25T10:57:49Z",
        "author_association": "COLLABORATOR",
        "body": "This is my output when I test with 3.0.0 and 4.0.2: \n\n```\nvar o = immutable({arr: [{id: 2}]});\no = o.merge({arr: [{id: 3}]});\n// o is {arr: [{id: 3}]}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/159841519",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/79#issuecomment-159841519",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/79",
        "id": 159841519,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTg0MTUxOQ==",
        "user": {
            "login": "amannn",
            "id": 4038316,
            "node_id": "MDQ6VXNlcjQwMzgzMTY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4038316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amannn",
            "html_url": "https://github.com/amannn",
            "followers_url": "https://api.github.com/users/amannn/followers",
            "following_url": "https://api.github.com/users/amannn/following{/other_user}",
            "gists_url": "https://api.github.com/users/amannn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amannn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amannn/subscriptions",
            "organizations_url": "https://api.github.com/users/amannn/orgs",
            "repos_url": "https://api.github.com/users/amannn/repos",
            "events_url": "https://api.github.com/users/amannn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amannn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-26T08:02:38Z",
        "updated_at": "2015-11-26T08:02:38Z",
        "author_association": "NONE",
        "body": "Oh, you're of course totally right! Sorry for the annoyance \u2013 I mixed this up with another library. Everything works as expected.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/164145113",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/42#issuecomment-164145113",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/42",
        "id": 164145113,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDE0NTExMw==",
        "user": {
            "login": "Jan-Jan",
            "id": 111935,
            "node_id": "MDQ6VXNlcjExMTkzNQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/111935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jan-Jan",
            "html_url": "https://github.com/Jan-Jan",
            "followers_url": "https://api.github.com/users/Jan-Jan/followers",
            "following_url": "https://api.github.com/users/Jan-Jan/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jan-Jan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jan-Jan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jan-Jan/subscriptions",
            "organizations_url": "https://api.github.com/users/Jan-Jan/orgs",
            "repos_url": "https://api.github.com/users/Jan-Jan/repos",
            "events_url": "https://api.github.com/users/Jan-Jan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jan-Jan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-12T12:12:34Z",
        "updated_at": "2015-12-12T12:12:34Z",
        "author_association": "NONE",
        "body": "@abritinthebay  +1\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/164309894",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/69#issuecomment-164309894",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/69",
        "id": 164309894,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDMwOTg5NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-13T23:20:55Z",
        "updated_at": "2016-01-09T01:25:05Z",
        "author_association": "OWNER",
        "body": "Thanks for this! :tada: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/164311176",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/75#issuecomment-164311176",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/75",
        "id": 164311176,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDMxMTE3Ng==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-13T23:45:23Z",
        "updated_at": "2015-12-13T23:45:23Z",
        "author_association": "OWNER",
        "body": "So it looks like the only way to do this in a way that doesn't result in a regression for prod builds is to use `const` instead of `var` and then add a build step for turning the `const` back into a `var` for development mode: https://github.com/facebook/react/issues/812#issuecomment-161201458\n\nThoughts?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/164646456",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/56#issuecomment-164646456",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/56",
        "id": 164646456,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDY0NjQ1Ng==",
        "user": {
            "login": "wesleytodd",
            "id": 1027776,
            "node_id": "MDQ6VXNlcjEwMjc3NzY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1027776?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wesleytodd",
            "html_url": "https://github.com/wesleytodd",
            "followers_url": "https://api.github.com/users/wesleytodd/followers",
            "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
            "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
            "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
            "repos_url": "https://api.github.com/users/wesleytodd/repos",
            "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-15T05:10:27Z",
        "updated_at": "2015-12-15T18:33:04Z",
        "author_association": "NONE",
        "body": "FWIW, I agree with @jedwards1211.  The point of this library IS the changes, so I think this kind of change is a good thing.\n\nAlso, from a new users perspective, this is a big deal.  Having to call `.asMutable` ~~or wrap in a try/catch before passing it to any component that is un-trusted~~ **all the time** is not great.  ~~And a throw in production if something calls one of these methods is really bad.~~\n\nEDIT: an hour more in and I realized that I am doing alot of `a = Immutable(a.asMutable().push(val))` type stuff.  Which, IMHO, is that this library should be doing for me.  Really what I want is `a = a.push(val)`, as per this issue, otherwise what is the point of wrapping my arrays in this lib?\n\nEDIT 2: Realized after some sleep that the throw wouldn't happen in production.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/166471988",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/81#issuecomment-166471988",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/81",
        "id": 166471988,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjQ3MTk4OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-22T01:17:50Z",
        "updated_at": "2015-12-22T01:17:50Z",
        "author_association": "OWNER",
        "body": "I like this idea, and I wish I'd thought of it back when I first made the library! (A production-specific build was not on the radar back then.)\n\nAt this point, though, this would be a monumental breaking change for the sake of a performance improvement it's not clear would make a difference for people using the library today.\n\nThis seems unlikely to be the right move in the foreseeable future, so I'm going to close this rather than leave it in limbo. Great thought, though!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/167447893",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/56#issuecomment-167447893",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/56",
        "id": 167447893,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzQ0Nzg5Mw==",
        "user": {
            "login": "planttheidea",
            "id": 9438233,
            "node_id": "MDQ6VXNlcjk0MzgyMzM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9438233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/planttheidea",
            "html_url": "https://github.com/planttheidea",
            "followers_url": "https://api.github.com/users/planttheidea/followers",
            "following_url": "https://api.github.com/users/planttheidea/following{/other_user}",
            "gists_url": "https://api.github.com/users/planttheidea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/planttheidea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/planttheidea/subscriptions",
            "organizations_url": "https://api.github.com/users/planttheidea/orgs",
            "repos_url": "https://api.github.com/users/planttheidea/repos",
            "events_url": "https://api.github.com/users/planttheidea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/planttheidea/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-27T23:40:44Z",
        "updated_at": "2015-12-27T23:41:27Z",
        "author_association": "NONE",
        "body": "I also want to chime in, because taking the \"people have gotten used to immutable.js\" comment one step further, I believe returning the new object is (if you look at it without your JavaScript-trained glasses on) the expected behavior.\n\n```\nconst foo = [];\nconst bar = foo.push('foo');\n```\n\nNo developer that didn't know of the mutable quirks of JavaScript would look at that and say that bar is obviously equal to 0. The same is true for splice, reverse, sort, etc. Also, in the larger context of this being an immutable library, the fact that with the current behavior you can (and do) perform a mutation in production seems counter to its inherent goal.\n\nThere are easy-to-implement immutable versions of all the functions you call out, made especially easy with ES2015. It seems to be a big miss that a library dedicated to immutability is only propagating it in the most literal sense of the word, and not in the larger context of developing with the methodology.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/167886739",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/80#issuecomment-167886739",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/80",
        "id": 167886739,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzg4NjczOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-29T21:59:09Z",
        "updated_at": "2015-12-29T21:59:09Z",
        "author_association": "OWNER",
        "body": "Hi @nikki93, we actually had this discussion awhile back; here are my thoughts: https://github.com/rtfeldman/seamless-immutable/issues/42#issuecomment-109204580\n\nThanks for raising this, but it's settled. :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/167896370",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/80#issuecomment-167896370",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/80",
        "id": 167896370,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzg5NjM3MA==",
        "user": {
            "login": "nikki93",
            "id": 49151,
            "node_id": "MDQ6VXNlcjQ5MTUx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/49151?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikki93",
            "html_url": "https://github.com/nikki93",
            "followers_url": "https://api.github.com/users/nikki93/followers",
            "following_url": "https://api.github.com/users/nikki93/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikki93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikki93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikki93/subscriptions",
            "organizations_url": "https://api.github.com/users/nikki93/orgs",
            "repos_url": "https://api.github.com/users/nikki93/repos",
            "events_url": "https://api.github.com/users/nikki93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikki93/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-29T22:58:09Z",
        "updated_at": "2015-12-29T22:58:09Z",
        "author_association": "NONE",
        "body": "Thanks! I will say though that what I proposed is different: you do get back an Immutable, but not a deep one. So it is an Immutable array of objects that are mutable, or so. Basically what I was saying is in general map does T a -> T b which says nothing about b. The question then becomes 'can T contain mutable objects?'\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/167897374",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/80#issuecomment-167897374",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/80",
        "id": 167897374,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzg5NzM3NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-29T23:07:40Z",
        "updated_at": "2015-12-29T23:07:40Z",
        "author_association": "OWNER",
        "body": "Ah. Not sure if I've expressed this elsewhere, but I'm not okay with T containing mutable objects. One of my goals for the library is for you to be able to rely on `Immutable` things being actually immutable, and allowing any mutable objects inside would break that. :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168046652",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/82#issuecomment-168046652",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/82",
        "id": 168046652,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODA0NjY1Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-30T18:05:20Z",
        "updated_at": "2015-12-30T18:05:20Z",
        "author_association": "OWNER",
        "body": "Sounds good! Nice catch, and would love a PR! :+1: \n\nCan you @-mention me on the PR?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168047538",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-168047538",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 168047538,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODA0NzUzOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-30T18:11:46Z",
        "updated_at": "2015-12-30T18:11:46Z",
        "author_association": "OWNER",
        "body": "Yeah, this is a longstanding known issue - see https://github.com/rtfeldman/seamless-immutable/issues/16#issuecomment-63890477 from 2014 - and I've always worked around it with `_.map` for React components.\n\nThere are two high-level ways to address this:\n1. Don't change the prod build behavior, but in the dev build check for this situation and give a nicer error so it's clearer where you need to use the workaround.\n2. Change both dev and prod to support circular references.\n\nObviously the latter is massively more work, and I'm wary of what the performance implications might be. :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168056860",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/83#issuecomment-168056860",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/83",
        "id": 168056860,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODA1Njg2MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-30T19:04:23Z",
        "updated_at": "2015-12-30T19:04:23Z",
        "author_association": "OWNER",
        "body": "Awesome, thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168058472",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/83#issuecomment-168058472",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/83",
        "id": 168058472,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODA1ODQ3Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-30T19:15:18Z",
        "updated_at": "2015-12-30T19:15:18Z",
        "author_association": "OWNER",
        "body": "@tiil Ah, spoke too soon - test failures. (Apparently I didn't have Travis set up to build PRs - sorry about that!)\n\nI reverted this on master. Can you address the test failures and make a fresh PR?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168062921",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/83#issuecomment-168062921",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/83",
        "id": 168062921,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODA2MjkyMQ==",
        "user": {
            "login": "ramivalta",
            "id": 1936703,
            "node_id": "MDQ6VXNlcjE5MzY3MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1936703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ramivalta",
            "html_url": "https://github.com/ramivalta",
            "followers_url": "https://api.github.com/users/ramivalta/followers",
            "following_url": "https://api.github.com/users/ramivalta/following{/other_user}",
            "gists_url": "https://api.github.com/users/ramivalta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ramivalta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ramivalta/subscriptions",
            "organizations_url": "https://api.github.com/users/ramivalta/orgs",
            "repos_url": "https://api.github.com/users/ramivalta/repos",
            "events_url": "https://api.github.com/users/ramivalta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ramivalta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-30T19:45:45Z",
        "updated_at": "2015-12-30T19:45:45Z",
        "author_association": "CONTRIBUTOR",
        "body": "I'm on it, apologies for not running the tests before submitting.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168065280",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/83#issuecomment-168065280",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/83",
        "id": 168065280,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODA2NTI4MA==",
        "user": {
            "login": "ramivalta",
            "id": 1936703,
            "node_id": "MDQ6VXNlcjE5MzY3MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1936703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ramivalta",
            "html_url": "https://github.com/ramivalta",
            "followers_url": "https://api.github.com/users/ramivalta/followers",
            "following_url": "https://api.github.com/users/ramivalta/following{/other_user}",
            "gists_url": "https://api.github.com/users/ramivalta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ramivalta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ramivalta/subscriptions",
            "organizations_url": "https://api.github.com/users/ramivalta/orgs",
            "repos_url": "https://api.github.com/users/ramivalta/repos",
            "events_url": "https://api.github.com/users/ramivalta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ramivalta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-30T20:03:37Z",
        "updated_at": "2015-12-30T20:03:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "This must be because Object.keys is an ES5 feature, and some old browsers (namely IE8) doesn't support it. Would you be against introducing a dependency on es5-shim (https://github.com/es-shims/es5-shim)?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168066411",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/83#issuecomment-168066411",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/83",
        "id": 168066411,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODA2NjQxMQ==",
        "user": {
            "login": "ramivalta",
            "id": 1936703,
            "node_id": "MDQ6VXNlcjE5MzY3MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1936703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ramivalta",
            "html_url": "https://github.com/ramivalta",
            "followers_url": "https://api.github.com/users/ramivalta/followers",
            "following_url": "https://api.github.com/users/ramivalta/following{/other_user}",
            "gists_url": "https://api.github.com/users/ramivalta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ramivalta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ramivalta/subscriptions",
            "organizations_url": "https://api.github.com/users/ramivalta/orgs",
            "repos_url": "https://api.github.com/users/ramivalta/repos",
            "events_url": "https://api.github.com/users/ramivalta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ramivalta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-30T20:10:34Z",
        "updated_at": "2015-12-30T20:10:34Z",
        "author_association": "CONTRIBUTOR",
        "body": "Actually we could just use lodash.keys since lodash is already a devDependency.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168125334",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/50#issuecomment-168125334",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/50",
        "id": 168125334,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODEyNTMzNA==",
        "user": {
            "login": "mheiber",
            "id": 4691093,
            "node_id": "MDQ6VXNlcjQ2OTEwOTM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4691093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mheiber",
            "html_url": "https://github.com/mheiber",
            "followers_url": "https://api.github.com/users/mheiber/followers",
            "following_url": "https://api.github.com/users/mheiber/following{/other_user}",
            "gists_url": "https://api.github.com/users/mheiber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mheiber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mheiber/subscriptions",
            "organizations_url": "https://api.github.com/users/mheiber/orgs",
            "repos_url": "https://api.github.com/users/mheiber/repos",
            "events_url": "https://api.github.com/users/mheiber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mheiber/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-31T04:55:23Z",
        "updated_at": "2015-12-31T04:55:23Z",
        "author_association": "NONE",
        "body": "Thanks for the Webpack example. How can I specify which build to use using Browserify?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168127656",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/60#issuecomment-168127656",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/60",
        "id": 168127656,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODEyNzY1Ng==",
        "user": {
            "login": "lewisje",
            "id": 4865237,
            "node_id": "MDQ6VXNlcjQ4NjUyMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4865237?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lewisje",
            "html_url": "https://github.com/lewisje",
            "followers_url": "https://api.github.com/users/lewisje/followers",
            "following_url": "https://api.github.com/users/lewisje/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewisje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lewisje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewisje/subscriptions",
            "organizations_url": "https://api.github.com/users/lewisje/orgs",
            "repos_url": "https://api.github.com/users/lewisje/repos",
            "events_url": "https://api.github.com/users/lewisje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lewisje/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-31T05:31:49Z",
        "updated_at": "2016-01-09T03:03:30Z",
        "author_association": "NONE",
        "body": "The worse problem with IE8 is that `Object.defineProperty` only works on DOM nodes, and even a polyfill won't give IE8 the ability to make ordinary object members non-writable and non-deletable; to be more specific, you can make a sham version of `Object.defineProperty` that goes through the motions, so that you can load seamless-immutable without having it throw errors, but the objects it returns won't actually be _immutable_ because there is no support in the engine for that.\n\nes5-sham does exactly this, by the way, and something similar with `Object.freeze` and `Object.isSealed` and the like; it does have an admirable version of `Object.isExtensible` that tries its hardest to extend an object, just to see whether it can be done.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168238418",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/85#issuecomment-168238418",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/85",
        "id": 168238418,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODIzODQxOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-31T19:44:15Z",
        "updated_at": "2015-12-31T19:44:15Z",
        "author_association": "OWNER",
        "body": "This was an early design decision (https://github.com/rtfeldman/seamless-immutable/issues/5) - is there a use case where the current behavior is causing a problem?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168247662",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/85#issuecomment-168247662",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/85",
        "id": 168247662,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODI0NzY2Mg==",
        "user": {
            "login": "lewisje",
            "id": 4865237,
            "node_id": "MDQ6VXNlcjQ4NjUyMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4865237?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lewisje",
            "html_url": "https://github.com/lewisje",
            "followers_url": "https://api.github.com/users/lewisje/followers",
            "following_url": "https://api.github.com/users/lewisje/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewisje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lewisje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewisje/subscriptions",
            "organizations_url": "https://api.github.com/users/lewisje/orgs",
            "repos_url": "https://api.github.com/users/lewisje/repos",
            "events_url": "https://api.github.com/users/lewisje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lewisje/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-31T21:15:57Z",
        "updated_at": "2015-12-31T21:15:57Z",
        "author_association": "NONE",
        "body": "I didn't notice that closed issue, and I don't actually use the library; I just read the source and remembered how some tutorials on memoization implement it with properties on the functions themselves.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/168960676",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/80#issuecomment-168960676",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/80",
        "id": 168960676,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODk2MDY3Ng==",
        "user": {
            "login": "borisd",
            "id": 168858,
            "node_id": "MDQ6VXNlcjE2ODg1OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/168858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/borisd",
            "html_url": "https://github.com/borisd",
            "followers_url": "https://api.github.com/users/borisd/followers",
            "following_url": "https://api.github.com/users/borisd/following{/other_user}",
            "gists_url": "https://api.github.com/users/borisd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/borisd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/borisd/subscriptions",
            "organizations_url": "https://api.github.com/users/borisd/orgs",
            "repos_url": "https://api.github.com/users/borisd/repos",
            "events_url": "https://api.github.com/users/borisd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/borisd/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-05T10:06:01Z",
        "updated_at": "2016-01-05T10:06:01Z",
        "author_association": "NONE",
        "body": "Perhaps its worth to add `mapImmutable()` as the current implementation prevents new comers from using the library as it breaks the regular React approach of:\n\n```\ntodos.map(todo => <Todo todo={ todo } />\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/169257082",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/84#issuecomment-169257082",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/84",
        "id": 169257082,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTI1NzA4Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-06T07:24:38Z",
        "updated_at": "2016-01-06T07:24:38Z",
        "author_association": "OWNER",
        "body": "@tiil I'm surprised this approach fixes https://github.com/rtfeldman/seamless-immutable/issues/82 - would you mind adding a test case to confirm that it's fixed?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/169313048",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/65#issuecomment-169313048",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/65",
        "id": 169313048,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTMxMzA0OA==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-06T12:29:33Z",
        "updated_at": "2016-01-06T12:29:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "I guess we want something that can be used like this:\n\n``````\nReact.createClass({\n  propTypes: {\n    array: Immutable.PropTypes.array,\n    object: Immutable.PropTypes.object\n}});```\n\nThen we can simply implement it this way: ```\nfunction validate(type, props, propName, componentName) {\n     componentName = comopnentName || 'ANONYMOUS';\n      var msg = componentName + \".props.\" + propName + \" is not \";\n      if (type === Array && ! (props[propName] instanceof Array)) return new Error(msg + ' an array');\n      if (type === Object && (! (props[propName] instanceof Object) || props[propName] instanceof Array)) return new Error(msg + 'an Object');\n      if (!Immutable.isImmutable(props[propName])) {\n        return new Error(msg + ' immutable');\n      }\n      return null;\n    }\nImmutable.PropTypes = {\n  array: validate.bind(undefined, Array),\n  object: validate.bind(undefined, Object)\n};\n``````\n\n(If we want to support also `.isRequred` then we can follow http://www.ian-thomas.net/custom-proptype-validation-with-react/ . Or/and it is possible to combine with the `\nall(...arrayOfValidators)` validator from [react-prop-types](https://www.npmjs.com/package/react-prop-types))\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/169944551",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/78#issuecomment-169944551",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/78",
        "id": 169944551,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTk0NDU1MQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-08T09:23:00Z",
        "updated_at": "2016-01-08T09:23:00Z",
        "author_association": "COLLABORATOR",
        "body": "@rtfeldman any thoughts on this? I noticed now that I forgot to mention you in the PR.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170174284",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/86#issuecomment-170174284",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/86",
        "id": 170174284,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDE3NDI4NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-09T01:08:53Z",
        "updated_at": "2016-01-09T01:09:01Z",
        "author_association": "OWNER",
        "body": "Love it, thanks @jakubholynet !\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170174872",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/78#issuecomment-170174872",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/78",
        "id": 170174872,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDE3NDg3Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-09T01:15:29Z",
        "updated_at": "2016-01-09T01:15:29Z",
        "author_association": "OWNER",
        "body": "Hell yeah! :metal:\n\nThis looks awesome! Sorry I took so long getting to this.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170175728",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/46#issuecomment-170175728",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/46",
        "id": 170175728,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDE3NTcyOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-09T01:23:53Z",
        "updated_at": "2016-01-09T01:23:53Z",
        "author_association": "OWNER",
        "body": "Fixed by #78 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170175815",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/64#issuecomment-170175815",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/64",
        "id": 170175815,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDE3NTgxNQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-09T01:25:12Z",
        "updated_at": "2016-01-09T01:25:12Z",
        "author_association": "OWNER",
        "body": "Closing thanks to https://github.com/rtfeldman/seamless-immutable/pull/69\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170175905",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/60#issuecomment-170175905",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/60",
        "id": 170175905,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDE3NTkwNQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-09T01:26:26Z",
        "updated_at": "2016-01-09T01:26:26Z",
        "author_association": "OWNER",
        "body": "Thanks @lewisje - sounds like the resolution here is that it can't work.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170176005",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/54#issuecomment-170176005",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/54",
        "id": 170176005,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDE3NjAwNQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-09T01:27:50Z",
        "updated_at": "2016-01-09T01:27:50Z",
        "author_association": "OWNER",
        "body": "I'd do what @robjens suggested! :+1: \n\nHappy to accept a PR adding this technique to the README, but closing this issue in the meantime. \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170176338",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/77#issuecomment-170176338",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/77",
        "id": 170176338,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDE3NjMzOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-09T01:32:11Z",
        "updated_at": "2016-01-09T01:32:11Z",
        "author_association": "OWNER",
        "body": "I'd definitely be open to a pull request for this, but I'm gonna close the issue in the meantime. Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170176605",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/74#issuecomment-170176605",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/74",
        "id": 170176605,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDE3NjYwNQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-09T01:35:30Z",
        "updated_at": "2016-01-09T01:35:30Z",
        "author_association": "OWNER",
        "body": "Closing now that #75 exists; let's continue discussion there.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170176964",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/87#issuecomment-170176964",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/87",
        "id": 170176964,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDE3Njk2NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-09T01:41:26Z",
        "updated_at": "2016-01-09T01:41:26Z",
        "author_association": "OWNER",
        "body": "Is there a common use case this makes nicer? I like to keep the library as simple as possible, so my default is not to add new functionality unless there's a strong motivating case for it. :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170180561",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/56#issuecomment-170180561",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/56",
        "id": 170180561,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDE4MDU2MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-09T02:10:08Z",
        "updated_at": "2016-01-09T02:10:26Z",
        "author_association": "OWNER",
        "body": "@wesleytodd Instead of doing `a = Immutable(a.asMutable().push(val))`, I would do a variant of what @jokeyrhyme suggested:\n\n``` js\na = Immutable(a).concat([4])\n```\n\nThe main reason I went with the \u201cexplode when you try to mutate\u201d design was to avoid pernicious bugs when changing over previously mutable code to use `Immutable`. This way if you ever forget to change something over from the old style to the new style, you'll at least get an error!\n\nAs far as adding a separate set of methods to add this functionality, I like keeping the API intentionally simple, and I don't think something like `Immutable(a).afterPush(4)` is enough added convenience over `Immutable(a).concat([4])` to justify adding it.\n\nThanks for the spirited discussion! You folks are excellent. :smiley_cat: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170287351",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/87#issuecomment-170287351",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/87",
        "id": 170287351,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDI4NzM1MQ==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-09T22:19:30Z",
        "updated_at": "2016-01-09T22:19:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "I understand the desire to keep the library small and appreciate it.\nI am not sure how common my use case is. In each case, accepting a function instead of values provides the ultimate power to the user. My particular use case was to filter out properties, that did not satisfy a condition: \n\n```\nconst unknownProducts = _.chain(products).keys().reject(knownProduct).value();\nconst onlyKnownProducts = products.without(unknownProducts);\n// I would have preferred:\nconst onlyKnownProducts = products.without((product, productId) => ! knownProduct(productId));\n```\n\nI do not think that it would either be complex or require many lines of code to add this functionality:\n\n```\nfunction without(keysToRemove) {\n    // Calling .without() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\nvar remove;\nif (keysToRemove instanceof function) {\n      remove = keysToRemove; \n    } else {\n      var keysToRemoveArray = (keysToRemove instanceof Array) ? \n         keysToRemove : Array.prototype.slice.call(arguments);\n      remove = function(val, key) { return keysToRemoveArray.indexOf(key) >= 0; }\n    }\n\n    var result = this.instantiateEmptyObject();\n\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && ! remove(this[key], key)) {\n        result[key] = this[key];\n      }\n    }\n```\n\nBut you are of course the arbiter of the usefulness vs. cost :-)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170614621",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/86#issuecomment-170614621",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/86",
        "id": 170614621,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDYxNDYyMQ==",
        "user": {
            "login": "InsomniacFury",
            "id": 13936771,
            "node_id": "MDQ6VXNlcjEzOTM2Nzcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13936771?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/InsomniacFury",
            "html_url": "https://github.com/InsomniacFury",
            "followers_url": "https://api.github.com/users/InsomniacFury/followers",
            "following_url": "https://api.github.com/users/InsomniacFury/following{/other_user}",
            "gists_url": "https://api.github.com/users/InsomniacFury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/InsomniacFury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/InsomniacFury/subscriptions",
            "organizations_url": "https://api.github.com/users/InsomniacFury/orgs",
            "repos_url": "https://api.github.com/users/InsomniacFury/repos",
            "events_url": "https://api.github.com/users/InsomniacFury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/InsomniacFury/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-11T16:49:18Z",
        "updated_at": "2016-01-11T16:49:18Z",
        "author_association": "NONE",
        "body": "Along those lines, I am confused. \nThe production version seems to me that it effectively leaves objects immutable, which invalidates the concept of this library.  I understand that the production version is useful when performance is a problem, but from what I can tell it stops delivering making objects immutable.\n\nI could be missing something fundamental.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170627098",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/86#issuecomment-170627098",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/86",
        "id": 170627098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDYyNzA5OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-11T17:32:17Z",
        "updated_at": "2016-01-11T17:32:17Z",
        "author_association": "OWNER",
        "body": "@InsomniacFury Correct - the production build does not make objects immutable. \n\nThe idea is that in development you will have used the immutable guarantees to end up with code that does not mutate anything, and by the time you reach production, the guarantees are implicit by the code you've written, and no longer need to be enforced.\n\nIf you want stronger guarantees in production, there's absolutely no reason you can't keep using the dev build. In fact, when the library was first released, the dev build was all there was! :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170730476",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/88#issuecomment-170730476",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/88",
        "id": 170730476,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDczMDQ3Ng==",
        "user": {
            "login": "bholloway",
            "id": 6868309,
            "node_id": "MDQ6VXNlcjY4NjgzMDk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6868309?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bholloway",
            "html_url": "https://github.com/bholloway",
            "followers_url": "https://api.github.com/users/bholloway/followers",
            "following_url": "https://api.github.com/users/bholloway/following{/other_user}",
            "gists_url": "https://api.github.com/users/bholloway/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bholloway/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bholloway/subscriptions",
            "organizations_url": "https://api.github.com/users/bholloway/orgs",
            "repos_url": "https://api.github.com/users/bholloway/repos",
            "events_url": "https://api.github.com/users/bholloway/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bholloway/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-11T23:24:06Z",
        "updated_at": "2016-01-11T23:24:06Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/170970394",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/87#issuecomment-170970394",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/87",
        "id": 170970394,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDk3MDM5NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-12T16:44:59Z",
        "updated_at": "2016-01-12T16:44:59Z",
        "author_association": "OWNER",
        "body": "Okay, I'm on board. Happy to accept a PR for this!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171034912",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/89#issuecomment-171034912",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/89",
        "id": 171034912,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTAzNDkxMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-12T19:55:28Z",
        "updated_at": "2016-01-12T19:55:28Z",
        "author_association": "OWNER",
        "body": "Oh weird. Thought I did that. Probably a good idea, yeah, but ultimately something I ought to do.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171035514",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/89#issuecomment-171035514",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/89",
        "id": 171035514,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTAzNTUxNA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-12T19:57:36Z",
        "updated_at": "2016-01-12T19:57:36Z",
        "author_association": "OWNER",
        "body": "Published as 5.0.1.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171035609",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/89#issuecomment-171035609",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/89",
        "id": 171035609,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTAzNTYwOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-12T19:58:00Z",
        "updated_at": "2016-01-12T19:58:00Z",
        "author_association": "OWNER",
        "body": "Thanks @crudh!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171036600",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/89#issuecomment-171036600",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/89",
        "id": 171036600,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTAzNjYwMA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-12T20:02:38Z",
        "updated_at": "2016-01-12T20:02:38Z",
        "author_association": "COLLABORATOR",
        "body": "@rtfeldman :+1: nice, 4 minutes from report to release :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171176509",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/86#issuecomment-171176509",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/86",
        "id": 171176509,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTE3NjUwOQ==",
        "user": {
            "login": "InsomniacFury",
            "id": 13936771,
            "node_id": "MDQ6VXNlcjEzOTM2Nzcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13936771?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/InsomniacFury",
            "html_url": "https://github.com/InsomniacFury",
            "followers_url": "https://api.github.com/users/InsomniacFury/followers",
            "following_url": "https://api.github.com/users/InsomniacFury/following{/other_user}",
            "gists_url": "https://api.github.com/users/InsomniacFury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/InsomniacFury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/InsomniacFury/subscriptions",
            "organizations_url": "https://api.github.com/users/InsomniacFury/orgs",
            "repos_url": "https://api.github.com/users/InsomniacFury/repos",
            "events_url": "https://api.github.com/users/InsomniacFury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/InsomniacFury/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-13T05:41:42Z",
        "updated_at": "2016-01-13T05:42:01Z",
        "author_association": "NONE",
        "body": "@rtfeldman thanks for the response.  That makes sense. I saw that in the docs Safari was called out as having a slow Object.freeze().   Are there any other performance implications that has lead to the production version not enforcing the immutability?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171200836",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/90#issuecomment-171200836",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/90",
        "id": 171200836,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTIwMDgzNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-13T07:25:23Z",
        "updated_at": "2016-01-13T07:25:23Z",
        "author_association": "OWNER",
        "body": "Appreciate the suggestion, but one of the design goals for seamless-immutable is to free yourself from worrying about whether anything you pass to `Immutable` will be mutated; it simply won't be. The production build being \"all or nothing\" means you should only use it when you're confident enforcement wouldn't have done anything anyway.\n\nThis change would make it so you'd instead have to start thinking about when enforcement applied on a case-by-case basis, and avoiding that is important to me.\n\nThanks for the idea, but I'm not open to changing the current behavior on this. :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171211891",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/86#issuecomment-171211891",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/86",
        "id": 171211891,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTIxMTg5MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-13T08:12:28Z",
        "updated_at": "2016-01-13T08:12:28Z",
        "author_association": "OWNER",
        "body": "@InsomniacFury Just that it does extra work on instantiation - namely freezing and banning methods.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171429023",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/90#issuecomment-171429023",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/90",
        "id": 171429023,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTQyOTAyMw==",
        "user": {
            "login": "InsomniacFury",
            "id": 13936771,
            "node_id": "MDQ6VXNlcjEzOTM2Nzcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13936771?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/InsomniacFury",
            "html_url": "https://github.com/InsomniacFury",
            "followers_url": "https://api.github.com/users/InsomniacFury/followers",
            "following_url": "https://api.github.com/users/InsomniacFury/following{/other_user}",
            "gists_url": "https://api.github.com/users/InsomniacFury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/InsomniacFury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/InsomniacFury/subscriptions",
            "organizations_url": "https://api.github.com/users/InsomniacFury/orgs",
            "repos_url": "https://api.github.com/users/InsomniacFury/repos",
            "events_url": "https://api.github.com/users/InsomniacFury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/InsomniacFury/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-13T20:53:01Z",
        "updated_at": "2016-01-13T20:53:01Z",
        "author_association": "NONE",
        "body": "Cool, thanks for your consideration.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171691780",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/91#issuecomment-171691780",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/91",
        "id": 171691780,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTY5MTc4MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T16:32:10Z",
        "updated_at": "2016-01-14T16:32:10Z",
        "author_association": "OWNER",
        "body": "> Also, I would like to add your library has helped provide ~85% performance gain for operation I am employing it for. :+1:\n\nAwesome, glad to hear it! :smile_cat: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171691826",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/91#issuecomment-171691826",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/91",
        "id": 171691826,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTY5MTgyNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T16:32:19Z",
        "updated_at": "2016-01-14T16:32:19Z",
        "author_association": "OWNER",
        "body": "So to clarify, the request is for a new `seamless-immutable.development.min.js` file, which is a minified version of `seamless-immutable.development.js`?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171692098",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/92#issuecomment-171692098",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/92",
        "id": 171692098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTY5MjA5OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T16:33:15Z",
        "updated_at": "2016-01-14T16:33:15Z",
        "author_association": "OWNER",
        "body": "Thanks for the idea, but I prefer minified files to be as small as possible, including removing comments...and I'm not super worried about license enforcement. :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171694853",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/93#issuecomment-171694853",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/93",
        "id": 171694853,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTY5NDg1Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T16:39:07Z",
        "updated_at": "2016-01-14T16:39:07Z",
        "author_association": "OWNER",
        "body": "Old tests pass for me too.\n\nLooks great, thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171695382",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/93#issuecomment-171695382",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/93",
        "id": 171695382,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTY5NTM4Mg==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T16:40:09Z",
        "updated_at": "2016-01-14T16:40:09Z",
        "author_association": "CONTRIBUTOR",
        "body": "My pleasure\nOn Thu, 14 Jan 2016 at 17:39, Richard Feldman notifications@github.com\nwrote:\n\n> Old tests pass for me too.\n> \n> Looks great, thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/rtfeldman/seamless-immutable/pull/93#issuecomment-171694853\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171696322",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/87#issuecomment-171696322",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/87",
        "id": 171696322,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTY5NjMyMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T16:42:26Z",
        "updated_at": "2016-01-14T16:42:26Z",
        "author_association": "OWNER",
        "body": "Implemented! Will release as 5.1.0 once cross-browser tests pass.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171749522",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/91#issuecomment-171749522",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/91",
        "id": 171749522,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTc0OTUyMg==",
        "user": {
            "login": "InsomniacFury",
            "id": 13936771,
            "node_id": "MDQ6VXNlcjEzOTM2Nzcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13936771?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/InsomniacFury",
            "html_url": "https://github.com/InsomniacFury",
            "followers_url": "https://api.github.com/users/InsomniacFury/followers",
            "following_url": "https://api.github.com/users/InsomniacFury/following{/other_user}",
            "gists_url": "https://api.github.com/users/InsomniacFury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/InsomniacFury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/InsomniacFury/subscriptions",
            "organizations_url": "https://api.github.com/users/InsomniacFury/orgs",
            "repos_url": "https://api.github.com/users/InsomniacFury/repos",
            "events_url": "https://api.github.com/users/InsomniacFury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/InsomniacFury/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T19:19:26Z",
        "updated_at": "2016-01-14T19:19:26Z",
        "author_association": "NONE",
        "body": "@rtfeldman correct.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171820432",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/91#issuecomment-171820432",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/91",
        "id": 171820432,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTgyMDQzMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T23:52:21Z",
        "updated_at": "2016-01-14T23:52:21Z",
        "author_association": "OWNER",
        "body": "I'm worried this will create confusion as to which version to use in which circumstance. All the other use cases I'm aware of have been either folks using the existing production build, or else the development build run through their own minification process.\n\nI realize it would be convenient for your use case, but I would rather keep this simple: use the `development.js` build for development and the `production.min.js` build for production. Apologies!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171820697",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/93#issuecomment-171820697",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/93",
        "id": 171820697,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTgyMDY5Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T23:53:46Z",
        "updated_at": "2016-01-14T23:53:46Z",
        "author_association": "OWNER",
        "body": "@jakubholynet Hm, appears that tests are breaking in Firefox. I fixed some linter errors in the hopes that's all it was, but it appears to be more than that.\n\nMind taking a look?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171820992",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/88#issuecomment-171820992",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/88",
        "id": 171820992,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTgyMDk5Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T23:55:30Z",
        "updated_at": "2016-01-14T23:55:30Z",
        "author_association": "OWNER",
        "body": "Hi @ryanfields and @bholloway,\n\nYou want to use either the [development build](https://github.com/rtfeldman/seamless-immutable/blob/5.0.1/seamless-immutable.development.js) or the [production build](https://github.com/rtfeldman/seamless-immutable/blob/5.0.1/seamless-immutable.production.min.js) - the source build, which has `process` in it, should not be used in the browser.\n\nSorry if that was unclear! :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171852847",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/88#issuecomment-171852847",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/88",
        "id": 171852847,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTg1Mjg0Nw==",
        "user": {
            "login": "bholloway",
            "id": 6868309,
            "node_id": "MDQ6VXNlcjY4NjgzMDk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6868309?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bholloway",
            "html_url": "https://github.com/bholloway",
            "followers_url": "https://api.github.com/users/bholloway/followers",
            "following_url": "https://api.github.com/users/bholloway/following{/other_user}",
            "gists_url": "https://api.github.com/users/bholloway/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bholloway/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bholloway/subscriptions",
            "organizations_url": "https://api.github.com/users/bholloway/orgs",
            "repos_url": "https://api.github.com/users/bholloway/repos",
            "events_url": "https://api.github.com/users/bholloway/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bholloway/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-15T02:50:41Z",
        "updated_at": "2016-01-15T02:51:03Z",
        "author_association": "NONE",
        "body": "Thanks @rtfeldman. I was using in JSBin so that should solve my issue.\n\nHowever there might be a problem in the `bower.json` in that case, since it points to the `src` file. I would say it 99% of cases a Bower package goes straight to Web, rather than being used/built in a Node-like environment.\n\nI am happy give you a PR for that fix and some clarification in the Docs but if you are opposed, or it is quicker for you to change yourself, then just let me know.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171853041",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/88#issuecomment-171853041",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/88",
        "id": 171853041,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTg1MzA0MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-15T02:52:19Z",
        "updated_at": "2016-01-15T02:52:19Z",
        "author_association": "OWNER",
        "body": "A PR would be great!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/171894692",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/93#issuecomment-171894692",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/93",
        "id": 171894692,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTg5NDY5Mg==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-15T07:46:02Z",
        "updated_at": "2016-01-15T07:46:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes. How to run the tests in FF?\nOn Fri, 15 Jan 2016 at 00:54, Richard Feldman notifications@github.com\nwrote:\n\n> @jakubholynet https://github.com/jakubholynet Hm, appears that tests\n> are breaking in Firefox. I fixed some linter errors in the hopes that's all\n> it was, but it appears to be more than that.\n> \n> Mind taking a look?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/rtfeldman/seamless-immutable/pull/93#issuecomment-171820697\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/172013704",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/70#issuecomment-172013704",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/70",
        "id": 172013704,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjAxMzcwNA==",
        "user": {
            "login": "zuk",
            "id": 35702,
            "node_id": "MDQ6VXNlcjM1NzAy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/35702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zuk",
            "html_url": "https://github.com/zuk",
            "followers_url": "https://api.github.com/users/zuk/followers",
            "following_url": "https://api.github.com/users/zuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/zuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zuk/subscriptions",
            "organizations_url": "https://api.github.com/users/zuk/orgs",
            "repos_url": "https://api.github.com/users/zuk/repos",
            "events_url": "https://api.github.com/users/zuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-15T16:51:38Z",
        "updated_at": "2016-01-15T16:51:38Z",
        "author_association": "NONE",
        "body": "Looks like this is still happening for objects with nested arrays. For example:\n\n```\nvar a = Immutable({foo: []})\nvar b = Immutable({foo: []})\nvar ab = a.merge(b, {deep: true})\nab === a  // => false\n```\n\nWithout a nested array it works as expected:\n\n```\nvar a = Immutable({foo: {}})\nvar b = Immutable({foo: {}})\nvar ab = a.merge(b, {deep: true})\nab === a  // => true\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/172014729",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/70#issuecomment-172014729",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/70",
        "id": 172014729,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjAxNDcyOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-15T16:55:47Z",
        "updated_at": "2016-01-15T16:55:47Z",
        "author_association": "OWNER",
        "body": "@zuk can you open a separate issue for that?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/172016425",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/70#issuecomment-172016425",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/70",
        "id": 172016425,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjAxNjQyNQ==",
        "user": {
            "login": "zuk",
            "id": 35702,
            "node_id": "MDQ6VXNlcjM1NzAy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/35702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zuk",
            "html_url": "https://github.com/zuk",
            "followers_url": "https://api.github.com/users/zuk/followers",
            "following_url": "https://api.github.com/users/zuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/zuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zuk/subscriptions",
            "organizations_url": "https://api.github.com/users/zuk/orgs",
            "repos_url": "https://api.github.com/users/zuk/repos",
            "events_url": "https://api.github.com/users/zuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-15T17:02:02Z",
        "updated_at": "2016-01-15T17:02:02Z",
        "author_association": "NONE",
        "body": "Sure, opened it as #94\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/172041979",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/94#issuecomment-172041979",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/94",
        "id": 172041979,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjA0MTk3OQ==",
        "user": {
            "login": "zuk",
            "id": 35702,
            "node_id": "MDQ6VXNlcjM1NzAy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/35702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zuk",
            "html_url": "https://github.com/zuk",
            "followers_url": "https://api.github.com/users/zuk/followers",
            "following_url": "https://api.github.com/users/zuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/zuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zuk/subscriptions",
            "organizations_url": "https://api.github.com/users/zuk/orgs",
            "repos_url": "https://api.github.com/users/zuk/repos",
            "events_url": "https://api.github.com/users/zuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-15T18:19:59Z",
        "updated_at": "2016-01-15T18:19:59Z",
        "author_association": "NONE",
        "body": "Added a failing test case for this in AkiraMD/seamless-immutable@98a912dd1d60e2fe7c805f6455c7e1c045ef0a88\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/172053713",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/94#issuecomment-172053713",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/94",
        "id": 172053713,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjA1MzcxMw==",
        "user": {
            "login": "zuk",
            "id": 35702,
            "node_id": "MDQ6VXNlcjM1NzAy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/35702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zuk",
            "html_url": "https://github.com/zuk",
            "followers_url": "https://api.github.com/users/zuk/followers",
            "following_url": "https://api.github.com/users/zuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/zuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zuk/subscriptions",
            "organizations_url": "https://api.github.com/users/zuk/orgs",
            "repos_url": "https://api.github.com/users/zuk/repos",
            "events_url": "https://api.github.com/users/zuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-15T18:58:54Z",
        "updated_at": "2016-01-15T19:00:56Z",
        "author_association": "NONE",
        "body": "Oh boy... started trying to fix this myself, but to be honest the current codebase is kind of a horror show. I understand the imperative not to make seamless-immutable dependent on too many libraries, but there's a whole lot of reinventing the wheel going on here. Using something like `lodash` for a lot of the type and equality checking stuff might help. I'm going to look in to some other libraries to manage an immutable Redux state now.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/172302826",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/84#issuecomment-172302826",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/84",
        "id": 172302826,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjMwMjgyNg==",
        "user": {
            "login": "ramivalta",
            "id": 1936703,
            "node_id": "MDQ6VXNlcjE5MzY3MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1936703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ramivalta",
            "html_url": "https://github.com/ramivalta",
            "followers_url": "https://api.github.com/users/ramivalta/followers",
            "following_url": "https://api.github.com/users/ramivalta/following{/other_user}",
            "gists_url": "https://api.github.com/users/ramivalta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ramivalta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ramivalta/subscriptions",
            "organizations_url": "https://api.github.com/users/ramivalta/orgs",
            "repos_url": "https://api.github.com/users/ramivalta/repos",
            "events_url": "https://api.github.com/users/ramivalta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ramivalta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-17T09:07:31Z",
        "updated_at": "2016-01-17T09:07:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman Sorry for not being responsive. This PR merely works around #82 by always turning currentValue into an Immutable before calling merge on it - it's not pretty but it doesn't break any tests unlike the previous attempt. I'll try to provide a test case soon.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/172401718",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/84#issuecomment-172401718",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/84",
        "id": 172401718,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjQwMTcxOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-18T00:46:44Z",
        "updated_at": "2016-01-18T00:46:44Z",
        "author_association": "OWNER",
        "body": "Thanks! :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/172539501",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/84#issuecomment-172539501",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/84",
        "id": 172539501,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjUzOTUwMQ==",
        "user": {
            "login": "davidkpiano",
            "id": 1093738,
            "node_id": "MDQ6VXNlcjEwOTM3Mzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1093738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidkpiano",
            "html_url": "https://github.com/davidkpiano",
            "followers_url": "https://api.github.com/users/davidkpiano/followers",
            "following_url": "https://api.github.com/users/davidkpiano/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidkpiano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidkpiano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidkpiano/subscriptions",
            "organizations_url": "https://api.github.com/users/davidkpiano/orgs",
            "repos_url": "https://api.github.com/users/davidkpiano/repos",
            "events_url": "https://api.github.com/users/davidkpiano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidkpiano/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-18T14:24:44Z",
        "updated_at": "2016-01-18T14:24:44Z",
        "author_association": "NONE",
        "body": "Extremely tiny nit: isMerg**e**ableObject :wink: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/172761635",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/93#issuecomment-172761635",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/93",
        "id": 172761635,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mjc2MTYzNQ==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-19T07:16:42Z",
        "updated_at": "2016-01-19T07:18:12Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hi @rtfeldman, as mentioned I'd be happy to help with the failing tests but I need you to tell me how to run them :-)\n\nOr have you actually fixed them? The commits seem to indicate that ...\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/173041673",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/93#issuecomment-173041673",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/93",
        "id": 173041673,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA0MTY3Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-20T01:07:09Z",
        "updated_at": "2016-01-20T01:07:09Z",
        "author_association": "OWNER",
        "body": "@jakubholynet They are still broken, as far as I can tell. If you run `npm run zuul-local` and then visit the address printed to the console in Firefox, it will run the tests!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/173108167",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/93#issuecomment-173108167",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/93",
        "id": 173108167,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzEwODE2Nw==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-20T06:26:14Z",
        "updated_at": "2016-01-20T06:26:14Z",
        "author_association": "CONTRIBUTOR",
        "body": "the pass for me:\n\n![seamless-immutable](https://cloud.githubusercontent.com/assets/624958/12441403/11135ae8-bf47-11e5-8648-32a7dcf6c5a0.jpg)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/173742535",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/95#issuecomment-173742535",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/95",
        "id": 173742535,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mzc0MjUzNQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-21T22:57:45Z",
        "updated_at": "2016-01-21T22:57:45Z",
        "author_association": "OWNER",
        "body": "Fair enough. Happy to accept a PR for this! :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/177076843",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/96#issuecomment-177076843",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/96",
        "id": 177076843,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzA3Njg0Mw==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-30T05:37:40Z",
        "updated_at": "2016-01-30T05:37:40Z",
        "author_association": "NONE",
        "body": "I don't think there is anything here that seamless-immutable should be concerned with. The `co` module handles generators [specially](https://github.com/tj/co/blob/master/index.js#L220) and that's why it works for the other two cases. If the module realises that the returned value is an generator then it will start iterating over it.\n\nIn the `printImmutableGenerator` what happens is the map function iteratively converts the value (generator) into an immutable, which obviously your `co` module doesn't understand. \n\nSo the solution is to use the native map function on the immutable \u2014\n\n``` javascript\nconst printImmutableGenerator = function*() {\n  const immutableArr = Immutable([4, 5, 6]);\n  yield Array.prototype.map.call(immutableArr, function*(n) {\n    console.log(n);\n  });\n};\n```\n\nOUTPUT: 4, 5, 6\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/177287978",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/96#issuecomment-177287978",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/96",
        "id": 177287978,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzI4Nzk3OA==",
        "user": {
            "login": "strawbrary",
            "id": 2499332,
            "node_id": "MDQ6VXNlcjI0OTkzMzI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2499332?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/strawbrary",
            "html_url": "https://github.com/strawbrary",
            "followers_url": "https://api.github.com/users/strawbrary/followers",
            "following_url": "https://api.github.com/users/strawbrary/following{/other_user}",
            "gists_url": "https://api.github.com/users/strawbrary/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/strawbrary/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/strawbrary/subscriptions",
            "organizations_url": "https://api.github.com/users/strawbrary/orgs",
            "repos_url": "https://api.github.com/users/strawbrary/repos",
            "events_url": "https://api.github.com/users/strawbrary/events{/privacy}",
            "received_events_url": "https://api.github.com/users/strawbrary/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-30T20:09:07Z",
        "updated_at": "2016-01-30T20:09:07Z",
        "author_association": "NONE",
        "body": "Ah sorry my mistake. Thanks for helping me out and that great explanation @tusharmath.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/178203056",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/92#issuecomment-178203056",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/92",
        "id": 178203056,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODIwMzA1Ng==",
        "user": {
            "login": "fenduru",
            "id": 1354771,
            "node_id": "MDQ6VXNlcjEzNTQ3NzE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1354771?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fenduru",
            "html_url": "https://github.com/fenduru",
            "followers_url": "https://api.github.com/users/fenduru/followers",
            "following_url": "https://api.github.com/users/fenduru/following{/other_user}",
            "gists_url": "https://api.github.com/users/fenduru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fenduru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fenduru/subscriptions",
            "organizations_url": "https://api.github.com/users/fenduru/orgs",
            "repos_url": "https://api.github.com/users/fenduru/repos",
            "events_url": "https://api.github.com/users/fenduru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fenduru/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-01T21:29:23Z",
        "updated_at": "2016-02-01T21:29:23Z",
        "author_association": "NONE",
        "body": "@rtfeldman if you're not worried about license enforcement, then you should use a license that does not mandate that `* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.`\n\nThe intuitive use of this repository would be to ship with the `.production.min.js` file, which by default is in violation of your own license\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/178204754",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/92#issuecomment-178204754",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/92",
        "id": 178204754,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODIwNDc1NA==",
        "user": {
            "login": "fenduru",
            "id": 1354771,
            "node_id": "MDQ6VXNlcjEzNTQ3NzE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1354771?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fenduru",
            "html_url": "https://github.com/fenduru",
            "followers_url": "https://api.github.com/users/fenduru/followers",
            "following_url": "https://api.github.com/users/fenduru/following{/other_user}",
            "gists_url": "https://api.github.com/users/fenduru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fenduru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fenduru/subscriptions",
            "organizations_url": "https://api.github.com/users/fenduru/orgs",
            "repos_url": "https://api.github.com/users/fenduru/repos",
            "events_url": "https://api.github.com/users/fenduru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fenduru/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-01T21:34:16Z",
        "updated_at": "2016-02-01T21:34:22Z",
        "author_association": "NONE",
        "body": "An alternative approach that jquery uses is to have a small comment linking to the full license:\n\nhttps://github.com/jquery/jquery/blob/2.2.0/dist/jquery.min.js\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/178214778",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/92#issuecomment-178214778",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/92",
        "id": 178214778,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODIxNDc3OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-01T21:57:05Z",
        "updated_at": "2016-02-01T21:57:05Z",
        "author_association": "OWNER",
        "body": "Good call! Link to the license seems reasonable; that's only a few extra bytes. Would happily accept a PR for that! :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/178215213",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/97#issuecomment-178215213",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/97",
        "id": 178215213,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODIxNTIxMw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-01T21:57:38Z",
        "updated_at": "2016-02-01T21:57:38Z",
        "author_association": "OWNER",
        "body": "Ha, that's what I get for copy/pasting. :grin: \n\nThanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/178889255",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/98#issuecomment-178889255",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/98",
        "id": 178889255,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODg4OTI1NQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-02T23:41:47Z",
        "updated_at": "2016-02-02T23:41:47Z",
        "author_association": "OWNER",
        "body": "Please do! :D\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/181187487",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/100#issuecomment-181187487",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/100",
        "id": 181187487,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTE4NzQ4Nw==",
        "user": {
            "login": "danfma",
            "id": 101121,
            "node_id": "MDQ6VXNlcjEwMTEyMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/101121?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danfma",
            "html_url": "https://github.com/danfma",
            "followers_url": "https://api.github.com/users/danfma/followers",
            "following_url": "https://api.github.com/users/danfma/following{/other_user}",
            "gists_url": "https://api.github.com/users/danfma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danfma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danfma/subscriptions",
            "organizations_url": "https://api.github.com/users/danfma/orgs",
            "repos_url": "https://api.github.com/users/danfma/repos",
            "events_url": "https://api.github.com/users/danfma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danfma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-08T04:06:02Z",
        "updated_at": "2016-02-08T04:06:02Z",
        "author_association": "NONE",
        "body": "I made a pull request to this.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/182371152",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/100#issuecomment-182371152",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/100",
        "id": 182371152,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjM3MTE1Mg==",
        "user": {
            "login": "smashercosmo",
            "id": 273283,
            "node_id": "MDQ6VXNlcjI3MzI4Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/273283?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smashercosmo",
            "html_url": "https://github.com/smashercosmo",
            "followers_url": "https://api.github.com/users/smashercosmo/followers",
            "following_url": "https://api.github.com/users/smashercosmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/smashercosmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smashercosmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smashercosmo/subscriptions",
            "organizations_url": "https://api.github.com/users/smashercosmo/orgs",
            "repos_url": "https://api.github.com/users/smashercosmo/repos",
            "events_url": "https://api.github.com/users/smashercosmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smashercosmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-10T13:23:59Z",
        "updated_at": "2016-02-10T13:23:59Z",
        "author_association": "NONE",
        "body": "But I think it's intentional, isn't it? Objects are frozen only in development mode. Because in production it will result in performance issues.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/187844038",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/102#issuecomment-187844038",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/102",
        "id": 187844038,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4Nzg0NDAzOA==",
        "user": {
            "login": "jschr",
            "id": 1163252,
            "node_id": "MDQ6VXNlcjExNjMyNTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1163252?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jschr",
            "html_url": "https://github.com/jschr",
            "followers_url": "https://api.github.com/users/jschr/followers",
            "following_url": "https://api.github.com/users/jschr/following{/other_user}",
            "gists_url": "https://api.github.com/users/jschr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jschr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jschr/subscriptions",
            "organizations_url": "https://api.github.com/users/jschr/orgs",
            "repos_url": "https://api.github.com/users/jschr/repos",
            "events_url": "https://api.github.com/users/jschr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jschr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-23T19:06:06Z",
        "updated_at": "2016-02-23T19:06:12Z",
        "author_association": "NONE",
        "body": "+1, would also love to have a complimentary `withoutIn` method as well to delete nested keys.\n\nie. \n\n``` js\nImmutable({ a: { b: 1, c: 2 } }).withoutIn(['a'], 'b')\n// -> Immutable({ a: { c: 2 } })\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/188129671",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/100#issuecomment-188129671",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/100",
        "id": 188129671,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODEyOTY3MQ==",
        "user": {
            "login": "camjc",
            "id": 4197647,
            "node_id": "MDQ6VXNlcjQxOTc2NDc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4197647?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camjc",
            "html_url": "https://github.com/camjc",
            "followers_url": "https://api.github.com/users/camjc/followers",
            "following_url": "https://api.github.com/users/camjc/following{/other_user}",
            "gists_url": "https://api.github.com/users/camjc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camjc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camjc/subscriptions",
            "organizations_url": "https://api.github.com/users/camjc/orgs",
            "repos_url": "https://api.github.com/users/camjc/repos",
            "events_url": "https://api.github.com/users/camjc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camjc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-24T07:49:27Z",
        "updated_at": "2016-02-24T07:49:27Z",
        "author_association": "NONE",
        "body": "@smashercosmo I think the issue is that it is not freezing in non-node environments (like a browser).\n@danfma Is that right?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/188131423",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/100#issuecomment-188131423",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/100",
        "id": 188131423,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODEzMTQyMw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-24T07:58:57Z",
        "updated_at": "2016-02-24T07:58:57Z",
        "author_association": "COLLABORATOR",
        "body": "From the project description:\n\n> In the development build, objects are frozen. (Note that Safari is relatively slow to iterate over frozen objects.) The development build also overrides unsupported methods (methods that ordinarily mutate the underlying data structure) to throw helpful exceptions.\n> \n> The production (minified) build does neither of these, which significantly improves performance.\n\nSo if you use the main `/src/seamless-immutable.js` it just works and respects your NODE_ENV setting if you run it in node. If you run it in a browser you can either use the same file if you have a build environment where you have configured it or you can use the `/seamless-immutable.development.js` or `/seamless-immutable.production.js` directly which requires no setup of NODE_ENV.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/188133062",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/99#issuecomment-188133062",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/99",
        "id": 188133062,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODEzMzA2Mg==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-24T08:07:40Z",
        "updated_at": "2016-02-24T08:07:40Z",
        "author_association": "NONE",
        "body": "Ping @rtfeldman \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/188133107",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/100#issuecomment-188133107",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/100",
        "id": 188133107,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODEzMzEwNw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-24T08:07:50Z",
        "updated_at": "2016-02-24T08:07:50Z",
        "author_association": "COLLABORATOR",
        "body": "If you want to use the default `/src/seamless-immutable.js` and configure your build to set the correct mode then do as they suggest in React: https://facebook.github.io/react/downloads.html#npm (check the note for npm). It works in the same way for seamless-immutable.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/188848127",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/103#issuecomment-188848127",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/103",
        "id": 188848127,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODg0ODEyNw==",
        "user": {
            "login": "tad-lispy",
            "id": 1684495,
            "node_id": "MDQ6VXNlcjE2ODQ0OTU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1684495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tad-lispy",
            "html_url": "https://github.com/tad-lispy",
            "followers_url": "https://api.github.com/users/tad-lispy/followers",
            "following_url": "https://api.github.com/users/tad-lispy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tad-lispy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tad-lispy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tad-lispy/subscriptions",
            "organizations_url": "https://api.github.com/users/tad-lispy/orgs",
            "repos_url": "https://api.github.com/users/tad-lispy/repos",
            "events_url": "https://api.github.com/users/tad-lispy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tad-lispy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-25T15:46:22Z",
        "updated_at": "2016-02-25T15:46:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "I know it only answers to the specific case in your example, but how about:\n\n``` javascript\nthis.setState({arr: this.state.arr.concat(newElement)})\n```\n\nRead [more about concat at MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat).\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/188878522",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/104#issuecomment-188878522",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/104",
        "id": 188878522,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODg3ODUyMg==",
        "user": {
            "login": "tad-lispy",
            "id": 1684495,
            "node_id": "MDQ6VXNlcjE2ODQ0OTU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1684495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tad-lispy",
            "html_url": "https://github.com/tad-lispy",
            "followers_url": "https://api.github.com/users/tad-lispy/followers",
            "following_url": "https://api.github.com/users/tad-lispy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tad-lispy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tad-lispy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tad-lispy/subscriptions",
            "organizations_url": "https://api.github.com/users/tad-lispy/orgs",
            "repos_url": "https://api.github.com/users/tad-lispy/repos",
            "events_url": "https://api.github.com/users/tad-lispy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tad-lispy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-25T17:01:02Z",
        "updated_at": "2016-02-25T17:01:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "The CI build is still failing, this time when trying to run Zuul tests. Is there anything I can do about it?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/189368986",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/103#issuecomment-189368986",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/103",
        "id": 189368986,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTM2ODk4Ng==",
        "user": {
            "login": "kelly-kellerheikkila",
            "id": 5448865,
            "node_id": "MDQ6VXNlcjU0NDg4NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5448865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kelly-kellerheikkila",
            "html_url": "https://github.com/kelly-kellerheikkila",
            "followers_url": "https://api.github.com/users/kelly-kellerheikkila/followers",
            "following_url": "https://api.github.com/users/kelly-kellerheikkila/following{/other_user}",
            "gists_url": "https://api.github.com/users/kelly-kellerheikkila/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kelly-kellerheikkila/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kelly-kellerheikkila/subscriptions",
            "organizations_url": "https://api.github.com/users/kelly-kellerheikkila/orgs",
            "repos_url": "https://api.github.com/users/kelly-kellerheikkila/repos",
            "events_url": "https://api.github.com/users/kelly-kellerheikkila/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kelly-kellerheikkila/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-26T16:55:05Z",
        "updated_at": "2016-02-26T17:01:33Z",
        "author_association": "NONE",
        "body": "Arrays are more difficult to work with using seamless-immutable than objects. I basically have to push new elements to immutable arrays using the approach @ablakey describes. It would be great if seamless-immutable supported something like push() and delete() with arrays, just like it does with set() and without() for objects. At this point, I am forced to convert them to mutables for those objects, and then reconvert back to immutable.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/189449390",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/103#issuecomment-189449390",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/103",
        "id": 189449390,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTQ0OTM5MA==",
        "user": {
            "login": "tad-lispy",
            "id": 1684495,
            "node_id": "MDQ6VXNlcjE2ODQ0OTU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1684495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tad-lispy",
            "html_url": "https://github.com/tad-lispy",
            "followers_url": "https://api.github.com/users/tad-lispy/followers",
            "following_url": "https://api.github.com/users/tad-lispy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tad-lispy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tad-lispy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tad-lispy/subscriptions",
            "organizations_url": "https://api.github.com/users/tad-lispy/orgs",
            "repos_url": "https://api.github.com/users/tad-lispy/repos",
            "events_url": "https://api.github.com/users/tad-lispy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tad-lispy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-26T19:45:23Z",
        "updated_at": "2016-02-26T19:45:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "That's true, that `delete` would be useful, however the name doesn't seem safe - it can easily collide with reserved keyword. I would actually call it `without`.\n\nIn one of my projects I came up with this helper function:\n\n``` javascript\nremove_item = function(index, array) {\n    return array.slice(0, index).concat(array.slice(index + 1));\n};\n```\n\nThen you can remove 3rd item by calling:\n\n``` javascript\narr = remove_item(2, arr)\n```\n\nI can make a PR to use it as a method of immutable array. What do you think, @rtfeldman ?\n\nAs for the `push` - is there anything wrong with `concat`?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/189457364",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/103#issuecomment-189457364",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/103",
        "id": 189457364,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTQ1NzM2NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-26T19:58:53Z",
        "updated_at": "2016-02-26T19:58:53Z",
        "author_association": "OWNER",
        "body": "Hm, yeah I can't say I'm on board with the idea of adding a redundant concat - I'd definitely recommend using concat for this!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/189488753",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/103#issuecomment-189488753",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/103",
        "id": 189488753,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTQ4ODc1Mw==",
        "user": {
            "login": "ablakey",
            "id": 9021944,
            "node_id": "MDQ6VXNlcjkwMjE5NDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9021944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ablakey",
            "html_url": "https://github.com/ablakey",
            "followers_url": "https://api.github.com/users/ablakey/followers",
            "following_url": "https://api.github.com/users/ablakey/following{/other_user}",
            "gists_url": "https://api.github.com/users/ablakey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ablakey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ablakey/subscriptions",
            "organizations_url": "https://api.github.com/users/ablakey/orgs",
            "repos_url": "https://api.github.com/users/ablakey/repos",
            "events_url": "https://api.github.com/users/ablakey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ablakey/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-26T21:26:54Z",
        "updated_at": "2016-02-26T21:37:04Z",
        "author_association": "NONE",
        "body": "To respond to the original suggestion: for adding to an array, yes concat works. I wasn't aware of it here and I'm happy with it.\n\nThe conversation has mutated (hah!)  to talking about other methods for arrays, so I'd like to +1 adding some methods that compensate for the fact that most of the valuable methods in Array.prototype mutate and are therefore not supported with seamless-immutable.\n\n.without() and maybe set()  Are at the top of my wish list.\n\nFor example, I want to delete a record from a list.  I have to make the array mutable, remove it, then make the array immutable again.\n\nHappy to contribute if this is something you want to pursue.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/190087174",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/105#issuecomment-190087174",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/105",
        "id": 190087174,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDA4NzE3NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-29T08:09:45Z",
        "updated_at": "2016-02-29T08:09:45Z",
        "author_association": "OWNER",
        "body": "Looks great, thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/190089469",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/104#issuecomment-190089469",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/104",
        "id": 190089469,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDA4OTQ2OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-29T08:17:34Z",
        "updated_at": "2016-02-29T08:17:34Z",
        "author_association": "OWNER",
        "body": "Hm, this would be a performance regression given that [call and apply are significantly slower than direct invocation](http://stackoverflow.com/questions/8184466/why-are-call-and-apply-slower-than-a-direct-function-call-in-javascript).\n\nWas there a reason the `Object.getOwnPropertyDescriptor` approach discussed in #76 wouldn't work?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/190090633",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/99#issuecomment-190090633",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/99",
        "id": 190090633,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDA5MDYzMw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-29T08:20:55Z",
        "updated_at": "2016-02-29T08:20:55Z",
        "author_association": "OWNER",
        "body": "So I started setting up semantic-release and it wants my npm username and password. I'm not comfortable providing those. Know of any way around that requirement?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/190091961",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/101#issuecomment-190091961",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/101",
        "id": 190091961,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDA5MTk2MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-29T08:22:50Z",
        "updated_at": "2016-02-29T08:22:50Z",
        "author_association": "OWNER",
        "body": "It's only being called when the \"production\" environment variable is being set; it's designed to work with https://www.npmjs.com/browse/keyword/envify\n\nSkipping freezing for the production build is the whole point! :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/190453421",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/103#issuecomment-190453421",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/103",
        "id": 190453421,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDQ1MzQyMQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-29T23:47:03Z",
        "updated_at": "2016-02-29T23:47:03Z",
        "author_association": "OWNER",
        "body": "Cool - this seems like a good resolution; I'm gonna close this issue, but feel free to open another to discuss specific feature requests!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/190453579",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/102#issuecomment-190453579",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/102",
        "id": 190453579,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDQ1MzU3OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-29T23:47:54Z",
        "updated_at": "2016-02-29T23:47:54Z",
        "author_association": "OWNER",
        "body": "Not without a compelling motivating use case. :wink: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/190453759",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/100#issuecomment-190453759",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/100",
        "id": 190453759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDQ1Mzc1OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-29T23:48:52Z",
        "updated_at": "2016-02-29T23:48:52Z",
        "author_association": "OWNER",
        "body": "Yep, this is working as intended. Thanks to all who responded explaining why this works the way it does!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/190453923",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/98#issuecomment-190453923",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/98",
        "id": 190453923,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDQ1MzkyMw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-29T23:49:44Z",
        "updated_at": "2016-02-29T23:49:44Z",
        "author_association": "OWNER",
        "body": "Closing in favor of that PR.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/190587074",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/99#issuecomment-190587074",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/99",
        "id": 190587074,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDU4NzA3NA==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-01T07:15:04Z",
        "updated_at": "2016-03-01T07:15:04Z",
        "author_association": "NONE",
        "body": "I can understand, so you basically need to configure two env variables \u2014 `NPM_TOKEN` & `GH_TOKEN` in your travis build.\n1. `NPM_TOKEN` would be available at `~/.npmrc`.\n2. `GH_TOKEN` can be created here \u2014 https://github.com/settings/tokens\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/191166476",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/107#issuecomment-191166476",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/107",
        "id": 191166476,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTE2NjQ3Ng==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-02T10:01:55Z",
        "updated_at": "2016-03-02T10:01:55Z",
        "author_association": "NONE",
        "body": "@sandro-pasquali  How is this supposed to behave like an immutable? The very fact that a generator **generates** values means that its not static and hence a mutable. \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/191504948",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/93#issuecomment-191504948",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/93",
        "id": 191504948,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTUwNDk0OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-03T00:19:14Z",
        "updated_at": "2016-03-03T00:19:14Z",
        "author_association": "OWNER",
        "body": "Ended up getting things fixed. Thanks for the PR! :smile_cat: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/191522980",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/99#issuecomment-191522980",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/99",
        "id": 191522980,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTUyMjk4MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-03T01:08:35Z",
        "updated_at": "2016-03-03T01:08:35Z",
        "author_association": "OWNER",
        "body": "Hm, the thing I'm not comfortable with is giving away access to my npm account. I didn't realize this entailed that, to be honest. Is there no way around that?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/191574455",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/99#issuecomment-191574455",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/99",
        "id": 191574455,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTU3NDQ1NQ==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-03T04:16:57Z",
        "updated_at": "2016-03-03T04:16:57Z",
        "author_association": "NONE",
        "body": "Take a look at this link \u2014 https://www.npmjs.com/settings/tokens\n\n> When you log into npm via the Command Line Interface (CLI), we create a unique identifier that we give to your computer, which is stored in your .npmrc file. The token gives your CLI the ability to do things like publish and unpublish packages, and manage owners and teams. You can share tokens with, for example, **CI systems** to allow them to download and publish your packages.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/193527960",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-193527960",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 193527960,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzUyNzk2MA==",
        "user": {
            "login": "tyoh",
            "id": 16845481,
            "node_id": "MDQ6VXNlcjE2ODQ1NDgx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/16845481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyoh",
            "html_url": "https://github.com/tyoh",
            "followers_url": "https://api.github.com/users/tyoh/followers",
            "following_url": "https://api.github.com/users/tyoh/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyoh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyoh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyoh/subscriptions",
            "organizations_url": "https://api.github.com/users/tyoh/orgs",
            "repos_url": "https://api.github.com/users/tyoh/repos",
            "events_url": "https://api.github.com/users/tyoh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyoh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-08T00:39:38Z",
        "updated_at": "2016-03-08T00:39:38Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/194232516",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-194232516",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 194232516,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDIzMjUxNg==",
        "user": {
            "login": "zivni",
            "id": 12896422,
            "node_id": "MDQ6VXNlcjEyODk2NDIy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12896422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zivni",
            "html_url": "https://github.com/zivni",
            "followers_url": "https://api.github.com/users/zivni/followers",
            "following_url": "https://api.github.com/users/zivni/following{/other_user}",
            "gists_url": "https://api.github.com/users/zivni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zivni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zivni/subscriptions",
            "organizations_url": "https://api.github.com/users/zivni/orgs",
            "repos_url": "https://api.github.com/users/zivni/repos",
            "events_url": "https://api.github.com/users/zivni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zivni/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-09T10:36:19Z",
        "updated_at": "2016-03-09T10:36:19Z",
        "author_association": "NONE",
        "body": "Well, this my first try. but it isn't very good:\n\n```\ndeclare module seamlessImmutable {\n    interface ImmutableCommonMethods<T>{\n        setIn?<U extends T>(keys: Array<string|number>, value: any): T | U;\n        merge?<U>(obj: U): T & U;\n    }\n\n    interface ImmutableObjectMethods<T> extends ImmutableCommonMethods<T> {\n        set?<U extends T>(key: string, value: any): U;\n        asMutable?(): T;\n        without?<U>(key: string): U;\n        without?<U>(keys: string[]): U;\n        without?<U>(...args: string[]): U;\n        without?<U>(keyFunction: (value: any, key: string) => boolean): U;\n    }\n\n    interface ImmutableArrayMethods<T> extends ImmutableCommonMethods<T> {\n        set?<T>(index: number, value: any): Array<T>;\n        asMutable?(): Array<T>;\n        asObject?<U>(toKeyValue: (item: T) => Array<Array<any>>): U;\n        flatMap?<U>(mapFunction: (item: T) => Array<U>)\n\n    }\n}\n    declare function SI<T>(obj: T, options?): T & seamlessImmutable.ImmutableObjectMethods<T>;\n    declare function SI<T>(obj: Array<T>, options?): Array<T> & seamlessImmutable.ImmutableArrayMethods<T>;\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/195025159",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/104#issuecomment-195025159",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/104",
        "id": 195025159,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTAyNTE1OQ==",
        "user": {
            "login": "tad-lispy",
            "id": 1684495,
            "node_id": "MDQ6VXNlcjE2ODQ0OTU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1684495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tad-lispy",
            "html_url": "https://github.com/tad-lispy",
            "followers_url": "https://api.github.com/users/tad-lispy/followers",
            "following_url": "https://api.github.com/users/tad-lispy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tad-lispy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tad-lispy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tad-lispy/subscriptions",
            "organizations_url": "https://api.github.com/users/tad-lispy/orgs",
            "repos_url": "https://api.github.com/users/tad-lispy/repos",
            "events_url": "https://api.github.com/users/tad-lispy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tad-lispy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-10T20:05:05Z",
        "updated_at": "2016-03-10T20:05:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman no, not really. I guess I was too lazy to read my own issue.\n\nShould be better now.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/195522561",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/104#issuecomment-195522561",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/104",
        "id": 195522561,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTUyMjU2MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-11T19:58:16Z",
        "updated_at": "2016-03-11T19:58:16Z",
        "author_association": "OWNER",
        "body": "@lzrski hm, looks like build fails on Android: https://travis-ci.org/rtfeldman/seamless-immutable\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/195712414",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/104#issuecomment-195712414",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/104",
        "id": 195712414,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTcxMjQxNA==",
        "user": {
            "login": "tad-lispy",
            "id": 1684495,
            "node_id": "MDQ6VXNlcjE2ODQ0OTU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1684495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tad-lispy",
            "html_url": "https://github.com/tad-lispy",
            "followers_url": "https://api.github.com/users/tad-lispy/followers",
            "following_url": "https://api.github.com/users/tad-lispy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tad-lispy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tad-lispy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tad-lispy/subscriptions",
            "organizations_url": "https://api.github.com/users/tad-lispy/orgs",
            "repos_url": "https://api.github.com/users/tad-lispy/repos",
            "events_url": "https://api.github.com/users/tad-lispy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tad-lispy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-12T10:35:39Z",
        "updated_at": "2016-03-12T10:35:39Z",
        "author_association": "CONTRIBUTOR",
        "body": "I did some research and actually the complete list of platforms that are failing is:\n1.  android 4.0 on Linux\n2.  android 5.1 on Linux\n3.  internet explorer 10 on Windows 2012\n4.  internet explorer 11 on Windows 10\n5.  internet explorer 9 on Windows 2008\n6.  opera 12 on Windows 2003\n7.  safari 6 on Mac 10.8\n\nThey all fail at the same two tests:\n1.  [ImmutableArray :: #asMutable :: returns a deep mutable copy if provided the deep flag](https://github.com/rtfeldman/seamless-immutable/blob/de08878211be3fac6cc29b9d372cee7145489e67/test/ImmutableArray/test-asMutable.js#L37)\n2.  [ImmutableObject :: #asMutable :: returns a deep mutable copy if provided the deep flag](https://github.com/rtfeldman/seamless-immutable/blob/de08878211be3fac6cc29b9d372cee7145489e67/test/ImmutableObject/test-asMutable.js#L37)\n\nThe errors are:\n\n| Platform | Error |\n| --- | --- |\n| IE | Object.getOwnPropertyDescriptor: argument is not an Object |\n| Safari | Requested property descriptor of a value that is not an object. |\n| Opera | Object.getOwnPropertyDescriptor: first argument not an Object |\n| Android | Object.getOwnPropertyDescriptor called on non-object |\n\nWhich practically boils down to the same thing.\n\n**Why**\n\nAccording to [ES 5.1 standard](http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.3.3) if first argument to `Object.getOwnPropertyDescriptor` is not an `Object` it throws a `TypeError` exception. That's what we get in failing platforms.\n\nAccording to [ES 2015 standard](http://www.ecma-international.org/ecma-262/6.0/#sec-object.getownpropertydescriptor) the first argument is always coerced to object.\n\nAll failing platforms seem to behave according to ES 5 standard. In our case the function causing the errors is [asDeepMutable](https://github.com/rtfeldman/seamless-immutable/blob/de08878211be3fac6cc29b9d372cee7145489e67/src/seamless-immutable.js#L283), which just passes whatever it gets to `Object.getOwnPropertyDescriptor`. It is being called by two other functions [asMutableArray](https://github.com/rtfeldman/seamless-immutable/blob/de08878211be3fac6cc29b9d372cee7145489e67/src/seamless-immutable.js#L242) and [asMutableObject](https://github.com/rtfeldman/seamless-immutable/blob/de08878211be3fac6cc29b9d372cee7145489e67/src/seamless-immutable.js#L434). Both iterate indiscriminately over elements / keys and pass them to `asDeepMutable`. So when the value is not an object (e.g. a `number`, `null`, etc.) the ES 5 platforms are throwing errors.\n\nThe solution is probably to check the type of argument passed to `asDeepMutable`.\n\nPR comming soon :)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/195821669",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/110#issuecomment-195821669",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/110",
        "id": 195821669,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTgyMTY2OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-12T22:54:14Z",
        "updated_at": "2016-03-12T22:54:14Z",
        "author_association": "OWNER",
        "body": "Looks great! Thanks for the level of detail on this. :heart_eyes_cat: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/195897700",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/110#issuecomment-195897700",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/110",
        "id": 195897700,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTg5NzcwMA==",
        "user": {
            "login": "tad-lispy",
            "id": 1684495,
            "node_id": "MDQ6VXNlcjE2ODQ0OTU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1684495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tad-lispy",
            "html_url": "https://github.com/tad-lispy",
            "followers_url": "https://api.github.com/users/tad-lispy/followers",
            "following_url": "https://api.github.com/users/tad-lispy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tad-lispy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tad-lispy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tad-lispy/subscriptions",
            "organizations_url": "https://api.github.com/users/tad-lispy/orgs",
            "repos_url": "https://api.github.com/users/tad-lispy/repos",
            "events_url": "https://api.github.com/users/tad-lispy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tad-lispy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-13T06:58:49Z",
        "updated_at": "2016-03-13T06:58:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "You are welcome and thanks for Seamless. It is so much fun to work with.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/196151044",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/110#issuecomment-196151044",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/110",
        "id": 196151044,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjE1MTA0NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T05:31:43Z",
        "updated_at": "2016-03-14T05:31:43Z",
        "author_association": "OWNER",
        "body": "@lzrski published as 5.1.1!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/196151349",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/109#issuecomment-196151349",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/109",
        "id": 196151349,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjE1MTM0OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T05:33:27Z",
        "updated_at": "2016-03-14T05:33:27Z",
        "author_association": "OWNER",
        "body": "No there isn't. :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/196151459",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/107#issuecomment-196151459",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/107",
        "id": 196151459,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjE1MTQ1OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T05:34:26Z",
        "updated_at": "2016-03-14T05:34:26Z",
        "author_association": "OWNER",
        "body": "Hm...I honestly have not looked into these things enough to know what the problem could be.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/196151759",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/106#issuecomment-196151759",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/106",
        "id": 196151759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjE1MTc1OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T05:36:36Z",
        "updated_at": "2016-03-14T05:36:36Z",
        "author_association": "OWNER",
        "body": "Thanks for taking the time to write this up, but I prefer to keep the API small and compact, so I'd rather not add this. :smiley: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/196151962",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/111#issuecomment-196151962",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/111",
        "id": 196151962,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjE1MTk2Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T05:38:33Z",
        "updated_at": "2016-03-14T05:38:33Z",
        "author_association": "OWNER",
        "body": "I see your point, but I honestly don't think this is worth a breaking change to the existing `set` behavior. I also don't think it's worth adding an additional function, as I prefer to keep the API small, so I think there's just going to be some learning curve if you're coming from Immutable.js :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/196152042",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-196152042",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 196152042,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjE1MjA0Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T05:39:27Z",
        "updated_at": "2016-03-14T05:39:27Z",
        "author_association": "OWNER",
        "body": "Cool! Seems like a useful addition. :smiley_cat: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/196216913",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/106#issuecomment-196216913",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/106",
        "id": 196216913,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjIxNjkxMw==",
        "user": {
            "login": "OEvgeny",
            "id": 2841858,
            "node_id": "MDQ6VXNlcjI4NDE4NTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2841858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OEvgeny",
            "html_url": "https://github.com/OEvgeny",
            "followers_url": "https://api.github.com/users/OEvgeny/followers",
            "following_url": "https://api.github.com/users/OEvgeny/following{/other_user}",
            "gists_url": "https://api.github.com/users/OEvgeny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OEvgeny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OEvgeny/subscriptions",
            "organizations_url": "https://api.github.com/users/OEvgeny/orgs",
            "repos_url": "https://api.github.com/users/OEvgeny/repos",
            "events_url": "https://api.github.com/users/OEvgeny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OEvgeny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T09:20:19Z",
        "updated_at": "2016-03-14T09:20:19Z",
        "author_association": "NONE",
        "body": "@rtfeldman good point :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/196562087",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/112#issuecomment-196562087",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/112",
        "id": 196562087,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjU2MjA4Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T23:20:04Z",
        "updated_at": "2016-03-14T23:20:04Z",
        "author_association": "OWNER",
        "body": "This is because JavaScript objects only use strings for keys, not numbers.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/196594748",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/112#issuecomment-196594748",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/112",
        "id": 196594748,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjU5NDc0OA==",
        "user": {
            "login": "Poordeveloper",
            "id": 1399893,
            "node_id": "MDQ6VXNlcjEzOTk4OTM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1399893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Poordeveloper",
            "html_url": "https://github.com/Poordeveloper",
            "followers_url": "https://api.github.com/users/Poordeveloper/followers",
            "following_url": "https://api.github.com/users/Poordeveloper/following{/other_user}",
            "gists_url": "https://api.github.com/users/Poordeveloper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Poordeveloper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Poordeveloper/subscriptions",
            "organizations_url": "https://api.github.com/users/Poordeveloper/orgs",
            "repos_url": "https://api.github.com/users/Poordeveloper/repos",
            "events_url": "https://api.github.com/users/Poordeveloper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Poordeveloper/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-15T01:13:54Z",
        "updated_at": "2016-03-15T01:13:54Z",
        "author_association": "NONE",
        "body": "But a[1] and a['1'] both work, how do you explain?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/196618253",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/112#issuecomment-196618253",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/112",
        "id": 196618253,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjYxODI1Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-15T02:19:03Z",
        "updated_at": "2016-03-15T02:19:03Z",
        "author_association": "OWNER",
        "body": "JavaScript treats `a[1]` as the same as `a[\"1\"]` when `a` is an object.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/198150002",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-198150002",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 198150002,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODE1MDAwMg==",
        "user": {
            "login": "panKt",
            "id": 1470519,
            "node_id": "MDQ6VXNlcjE0NzA1MTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1470519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/panKt",
            "html_url": "https://github.com/panKt",
            "followers_url": "https://api.github.com/users/panKt/followers",
            "following_url": "https://api.github.com/users/panKt/following{/other_user}",
            "gists_url": "https://api.github.com/users/panKt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/panKt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/panKt/subscriptions",
            "organizations_url": "https://api.github.com/users/panKt/orgs",
            "repos_url": "https://api.github.com/users/panKt/repos",
            "events_url": "https://api.github.com/users/panKt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/panKt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-18T01:07:42Z",
        "updated_at": "2016-03-18T01:07:42Z",
        "author_association": "NONE",
        "body": "+1, would be great to have it here!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/198896731",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-198896731",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 198896731,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODg5NjczMQ==",
        "user": {
            "login": "jonaskello",
            "id": 664076,
            "node_id": "MDQ6VXNlcjY2NDA3Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/664076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonaskello",
            "html_url": "https://github.com/jonaskello",
            "followers_url": "https://api.github.com/users/jonaskello/followers",
            "following_url": "https://api.github.com/users/jonaskello/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonaskello/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonaskello/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonaskello/subscriptions",
            "organizations_url": "https://api.github.com/users/jonaskello/orgs",
            "repos_url": "https://api.github.com/users/jonaskello/repos",
            "events_url": "https://api.github.com/users/jonaskello/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonaskello/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-20T10:58:34Z",
        "updated_at": "2016-03-20T10:59:17Z",
        "author_association": "NONE",
        "body": "Here is what I have come up with so far. It only allows usage of the lib in typescript. It does not provide compile time error for accessing read-only data.\n\n_seamless-immutable.d.ts:_\n\n``` js\ndeclare module 'seamless-immutable' {\n\n  type Immutable = {\n    (obj:any, options?:any):any;\n    isImmutable(target:any):boolean;\n    ImmutableError(message:string):Error;\n  }\n\n  var Immutable:Immutable;\n  export = Immutable;\n\n}\n```\n\n_Usage:_\n\n``` js\nimport * as Immutable from 'seamless-immutable';\n\nvar array = Immutable([\"totally\", \"immutable\", {hammer: \"Can\u2019t Touch This\"}]);\narray[1] = \"I'm going to mutate you!\"\n```\n\nThe last line in usage will give a runtime error. It would of course be much better if it gave a compile time error. @zivni your typings look interesting but I am not sure how to use them?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/199028861",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-199028861",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 199028861,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTAyODg2MQ==",
        "user": {
            "login": "Ciantic",
            "id": 64731,
            "node_id": "MDQ6VXNlcjY0NzMx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/64731?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ciantic",
            "html_url": "https://github.com/Ciantic",
            "followers_url": "https://api.github.com/users/Ciantic/followers",
            "following_url": "https://api.github.com/users/Ciantic/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ciantic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ciantic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ciantic/subscriptions",
            "organizations_url": "https://api.github.com/users/Ciantic/orgs",
            "repos_url": "https://api.github.com/users/Ciantic/repos",
            "events_url": "https://api.github.com/users/Ciantic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ciantic/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-20T21:25:35Z",
        "updated_at": "2016-03-20T21:25:35Z",
        "author_association": "NONE",
        "body": "I'm looking for this as well, but my idea is a bit like the last one above I think.\n\nUse seamless-immutable as a wrapper, and then use lodash or other things to \"mutate\" and after that freeze again with Immutable.\n\nThis way I don't need any API basically more than it's just a function that returns the same thing it took in I think...\n\nThat is the theory at least.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/199030382",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-199030382",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 199030382,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTAzMDM4Mg==",
        "user": {
            "login": "Ciantic",
            "id": 64731,
            "node_id": "MDQ6VXNlcjY0NzMx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/64731?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ciantic",
            "html_url": "https://github.com/Ciantic",
            "followers_url": "https://api.github.com/users/Ciantic/followers",
            "following_url": "https://api.github.com/users/Ciantic/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ciantic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ciantic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ciantic/subscriptions",
            "organizations_url": "https://api.github.com/users/Ciantic/orgs",
            "repos_url": "https://api.github.com/users/Ciantic/repos",
            "events_url": "https://api.github.com/users/Ciantic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ciantic/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-20T21:32:46Z",
        "updated_at": "2016-03-20T21:32:46Z",
        "author_association": "NONE",
        "body": "@jonaskello I think you should define with generic and return with it too:\n\n```\ndeclare module \"seamless-immutable\" {\n\n  type Immutable = {\n    <T>(obj: T, options?: any): T;\n    isImmutable(target: any): boolean;\n    ImmutableError(message: string): Error;\n  }\n\n  var Immutable: Immutable;\n  export = Immutable;\n}\n```\n\nSo that it type checks / autocompletes the object it returns.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/199513248",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-199513248",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 199513248,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTUxMzI0OA==",
        "user": {
            "login": "jonaskello",
            "id": 664076,
            "node_id": "MDQ6VXNlcjY2NDA3Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/664076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonaskello",
            "html_url": "https://github.com/jonaskello",
            "followers_url": "https://api.github.com/users/jonaskello/followers",
            "following_url": "https://api.github.com/users/jonaskello/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonaskello/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonaskello/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonaskello/subscriptions",
            "organizations_url": "https://api.github.com/users/jonaskello/orgs",
            "repos_url": "https://api.github.com/users/jonaskello/repos",
            "events_url": "https://api.github.com/users/jonaskello/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonaskello/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-21T22:16:11Z",
        "updated_at": "2016-03-21T22:16:11Z",
        "author_association": "NONE",
        "body": "Here is a version that combines the additions @Ciantic made with the methods defined by @zivni. It enables typed usage of the original type plus the extra methods that SI provides. I think what is left is to remove the mutation methods that SI bans. However I am not sure how to solve that or if it is even possible?\n\n``` js\ndeclare module 'seamless-immutable' {\n\n  interface ImmutableCommonMethods<T>{\n    setIn?<U extends T>(keys: Array<string|number>, value: any): T | U;\n    merge?<U>(obj: U): T & U;\n  }\n\n  interface ImmutableObjectMethods<T> extends ImmutableCommonMethods<T> {\n    set?<U extends T>(key: string, value: any): U;\n    asMutable?(): T;\n    without?<U>(key: string): U;\n    without?<U>(keys: string[]): U;\n    without?<U>(...args: string[]): U;\n    without?<U>(keyFunction: (value: any, key: string) => boolean): U;\n  }\n\n  interface ImmutableArrayMethods<T> extends ImmutableCommonMethods<T> {\n    set?<T>(index: number, value: any): Array<T>;\n    asMutable?(): Array<T>;\n    asObject?<U>(toKeyValue: (item: T) => Array<Array<any>>): U;\n    flatMap?<U>(mapFunction: (item: T) => Array<U>)\n  }\n\n  type Immutable = {\n    <T>(obj: Array<T>, options?: any): Array<T> & ImmutableArrayMethods<T>;\n    <T>(obj: T, options?: any): T & ImmutableObjectMethods<T>;\n    isImmutable(target: any): boolean;\n    ImmutableError(message: string): Error;\n  }\n\n  var Immutable:Immutable;\n  export = Immutable;\n\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/199774725",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-199774725",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 199774725,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTc3NDcyNQ==",
        "user": {
            "login": "Ciantic",
            "id": 64731,
            "node_id": "MDQ6VXNlcjY0NzMx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/64731?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ciantic",
            "html_url": "https://github.com/Ciantic",
            "followers_url": "https://api.github.com/users/Ciantic/followers",
            "following_url": "https://api.github.com/users/Ciantic/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ciantic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ciantic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ciantic/subscriptions",
            "organizations_url": "https://api.github.com/users/Ciantic/orgs",
            "repos_url": "https://api.github.com/users/Ciantic/repos",
            "events_url": "https://api.github.com/users/Ciantic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ciantic/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-22T11:40:53Z",
        "updated_at": "2016-03-22T11:49:57Z",
        "author_association": "NONE",
        "body": "@jonaskello I couldn't get the simple d.ts working when transpiling to es6, only thing working is in this format:\n\n``` typescript\ndeclare module \"seamless-immutable\" {\n    export default function <T>(obj: T, options?: any): T;\n    export function isImmutable(target: any): boolean;\n    export function ImmutableError(message: string): Error;\n    // ...\n}\n```\n\nBtw, I've been thinking about something awesome, if JavaScript had API like this:\n\n``` typescript\nvar frozenObject = Object.freeze({ something: [1,2,3,4,5] });\n\nvar mutatedFrozenObject = Object.mutate(frozenObject, (mutateObject) => {\n    mutateObject.something[1] = 99;\n    mutateObject.newValue = \"test\";\n});\n\nmutatedFrozenObject === {\n    something: [1, 99, 3, 4, 5],\n    newValue: \"test\"\n};\n```\n\nThe API would be probably simple enough for JavaScript engines to optimize the mutation function to work really fast, and it would allow to use all normal libraries to mutate frozen object.\n\nBest of all, it would be 100% type safe way to mutate.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/199887362",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/115#issuecomment-199887362",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/115",
        "id": 199887362,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTg4NzM2Mg==",
        "user": {
            "login": "Darmody",
            "id": 6788752,
            "node_id": "MDQ6VXNlcjY3ODg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6788752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Darmody",
            "html_url": "https://github.com/Darmody",
            "followers_url": "https://api.github.com/users/Darmody/followers",
            "following_url": "https://api.github.com/users/Darmody/following{/other_user}",
            "gists_url": "https://api.github.com/users/Darmody/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Darmody/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Darmody/subscriptions",
            "organizations_url": "https://api.github.com/users/Darmody/orgs",
            "repos_url": "https://api.github.com/users/Darmody/repos",
            "events_url": "https://api.github.com/users/Darmody/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Darmody/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-22T16:17:54Z",
        "updated_at": "2016-03-22T16:17:54Z",
        "author_association": "NONE",
        "body": "Sorry, it's my misunderstand.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/200063928",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/22#issuecomment-200063928",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/22",
        "id": 200063928,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDA2MzkyOA==",
        "user": {
            "login": "tylercollier",
            "id": 366538,
            "node_id": "MDQ6VXNlcjM2NjUzOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/366538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tylercollier",
            "html_url": "https://github.com/tylercollier",
            "followers_url": "https://api.github.com/users/tylercollier/followers",
            "following_url": "https://api.github.com/users/tylercollier/following{/other_user}",
            "gists_url": "https://api.github.com/users/tylercollier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tylercollier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tylercollier/subscriptions",
            "organizations_url": "https://api.github.com/users/tylercollier/orgs",
            "repos_url": "https://api.github.com/users/tylercollier/repos",
            "events_url": "https://api.github.com/users/tylercollier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tylercollier/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-22T22:39:02Z",
        "updated_at": "2016-03-22T22:42:40Z",
        "author_association": "NONE",
        "body": "What about an option for whether an error should be thrown? I am appreciative of the thrown error as I change from ImmutableJS to this library. But after the transition, my code is cluttered using `_.sortBy()` instead of the built-in `sort()`.\n\nWhile the workaround is not terrible, I thought I'd voice my opinion so others who find this issue know there's at least 1 other person wishing for it!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/200184147",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/22#issuecomment-200184147",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/22",
        "id": 200184147,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDE4NDE0Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-23T05:04:40Z",
        "updated_at": "2016-03-23T05:04:40Z",
        "author_association": "OWNER",
        "body": "@tylercollier Good news! :smile_cat: https://github.com/rtfeldman/seamless-immutable#performance\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/200189227",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/22#issuecomment-200189227",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/22",
        "id": 200189227,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDE4OTIyNw==",
        "user": {
            "login": "tylercollier",
            "id": 366538,
            "node_id": "MDQ6VXNlcjM2NjUzOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/366538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tylercollier",
            "html_url": "https://github.com/tylercollier",
            "followers_url": "https://api.github.com/users/tylercollier/followers",
            "following_url": "https://api.github.com/users/tylercollier/following{/other_user}",
            "gists_url": "https://api.github.com/users/tylercollier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tylercollier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tylercollier/subscriptions",
            "organizations_url": "https://api.github.com/users/tylercollier/orgs",
            "repos_url": "https://api.github.com/users/tylercollier/repos",
            "events_url": "https://api.github.com/users/tylercollier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tylercollier/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-23T05:29:49Z",
        "updated_at": "2016-03-23T05:29:49Z",
        "author_association": "NONE",
        "body": "Thanks for the link to that section of the doc, which I read (and admit to not reading before, but you already had me sold on performance from your blog post :-) I think you saw my original comment, which was phrased as an option that I might toggle one way in dev and another in production, but I rephrased it because that's not what I'm really after. What I'd like is an option I can set. My concern here is convenience for me as a developer rather than performance. I'm guessing you have a build step that pulls those checks out when you create a minified production build, rather than an option I can set?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/200190863",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/22#issuecomment-200190863",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/22",
        "id": 200190863,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDE5MDg2Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-23T05:34:49Z",
        "updated_at": "2016-03-23T05:34:49Z",
        "author_association": "OWNER",
        "body": "Ahh got it, yeah that's correct. Sorry for the confusion!\n\nThat said, I'd honestly rather not add that complication to dev mode. :x\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/205233843",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-205233843",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 205233843,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTIzMzg0Mw==",
        "user": {
            "login": "zivni",
            "id": 12896422,
            "node_id": "MDQ6VXNlcjEyODk2NDIy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12896422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zivni",
            "html_url": "https://github.com/zivni",
            "followers_url": "https://api.github.com/users/zivni/followers",
            "following_url": "https://api.github.com/users/zivni/following{/other_user}",
            "gists_url": "https://api.github.com/users/zivni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zivni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zivni/subscriptions",
            "organizations_url": "https://api.github.com/users/zivni/orgs",
            "repos_url": "https://api.github.com/users/zivni/repos",
            "events_url": "https://api.github.com/users/zivni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zivni/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-04T10:31:25Z",
        "updated_at": "2016-04-06T10:38:42Z",
        "author_association": "NONE",
        "body": "I made a small change to what @jonaskello did to this:\n\n```\ndeclare module SeamlessImmutable {\n    interface DeepMutate {\n        deep: boolean\n    }\n\n    interface ImmutableCommonMethods<T>{\n        setIn?<U extends T>(keys: Array<string|number>, value: any): T | U;\n        merge?<U>(obj: U): T & U;\n    }\n\n    interface ImmutableObjectMethods<T> extends ImmutableCommonMethods<T> {\n        set?<U extends T>(key: string, value: any): U;\n        asMutable?(): T;\n        asMutable?(DeepMutate): T;\n        without?<U>(key: string): U;\n        without?<U>(keys: string[]): U;\n        without?<U>(...args: string[]): U;\n        without?<U>(keyFunction: (value: any, key: string) => boolean): U;\n    }\n\n    interface ImmutableArrayMethods<T> extends ImmutableCommonMethods<T> {\n        set?<T>(index: number, value: any): Array<T>;\n        asMutable?(): Array<T>;\n        asMutable?(DeepMutate): Array<T>;\n        asObject?<U>(toKeyValue: (item: T) => Array<Array<any>>): U;\n        flatMap?<U>(mapFunction: (item: T) => Array<U>)\n\n    }\n}\n\ndeclare module 'seamless-immutable' {\n  type Immutable = {\n    <T>(obj: Array<T>, options?: any): Array<T> & SeamlessImmutable.ImmutableArrayMethods<T>;\n    <T>(obj: T, options?: any): T & SeamlessImmutable.ImmutableObjectMethods<T>;\n    isImmutable(target: any): boolean;\n    ImmutableError(message: string): Error;\n  }\n\n  var Immutable:Immutable;\n  export = Immutable;\n}\n```\n\nThis way I can import using `import * as SI  from \"seamless-immutable\"`\nand use it with `state = SI<MyType>({...})`\nbut I can also type my functions / variables:\n\n```\nlet state: MyType & SeamlessImmutable.ImmutableObjectMethods<MyType >;\n...\nstate = SI<MyType>({...})\n```\n\nand can create helper functions:\n\n```\nexport function update<T>(obj:T & SeamlessImmutable.ImmutableObjectMethods<T>, update:any):T {\n    return obj.merge(update);\n}\n\nexport function removeProperty<T>(obj:T & SeamlessImmutable.ImmutableObjectMethods<T>, propertyName:string):T{\n    return obj.without<T>(propertyName);\n}\n\n```\n\nI only wish I could find a way to declare `ImmutableObjectMethods<T>` to include T's members so I wouldn't need to use the & operator everywhere\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/207555610",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-207555610",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 207555610,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzU1NTYxMA==",
        "user": {
            "login": "bradwestfall",
            "id": 2272118,
            "node_id": "MDQ6VXNlcjIyNzIxMTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2272118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradwestfall",
            "html_url": "https://github.com/bradwestfall",
            "followers_url": "https://api.github.com/users/bradwestfall/followers",
            "following_url": "https://api.github.com/users/bradwestfall/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradwestfall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradwestfall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradwestfall/subscriptions",
            "organizations_url": "https://api.github.com/users/bradwestfall/orgs",
            "repos_url": "https://api.github.com/users/bradwestfall/repos",
            "events_url": "https://api.github.com/users/bradwestfall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradwestfall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-08T18:54:07Z",
        "updated_at": "2016-04-08T18:54:07Z",
        "author_association": "NONE",
        "body": "I know it's an old thread, buy why does .concat not work after the fact\n\n``` js\nlet array = Immutable([1,2,3]).concat([4])\narray.concat([5])\nconsole.log(array) // [1,2,3,4]\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/207557026",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-207557026",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 207557026,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzU1NzAyNg==",
        "user": {
            "login": "RangerMauve",
            "id": 911495,
            "node_id": "MDQ6VXNlcjkxMTQ5NQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/911495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RangerMauve",
            "html_url": "https://github.com/RangerMauve",
            "followers_url": "https://api.github.com/users/RangerMauve/followers",
            "following_url": "https://api.github.com/users/RangerMauve/following{/other_user}",
            "gists_url": "https://api.github.com/users/RangerMauve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RangerMauve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RangerMauve/subscriptions",
            "organizations_url": "https://api.github.com/users/RangerMauve/orgs",
            "repos_url": "https://api.github.com/users/RangerMauve/repos",
            "events_url": "https://api.github.com/users/RangerMauve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RangerMauve/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-08T18:57:33Z",
        "updated_at": "2016-04-08T18:57:33Z",
        "author_association": "NONE",
        "body": "@bradwestfall `array` is immutable. `.concat()` always returns a new array. Your example should instead be:\n\n``` javascript\nlet array = Immutable([1,2,3]).concat([4])\nlet array2 = array.concat([5])\nconsole.log(array2) // [1,2,3,4,5]\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/207557970",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-207557970",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 207557970,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzU1Nzk3MA==",
        "user": {
            "login": "bradwestfall",
            "id": 2272118,
            "node_id": "MDQ6VXNlcjIyNzIxMTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2272118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradwestfall",
            "html_url": "https://github.com/bradwestfall",
            "followers_url": "https://api.github.com/users/bradwestfall/followers",
            "following_url": "https://api.github.com/users/bradwestfall/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradwestfall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradwestfall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradwestfall/subscriptions",
            "organizations_url": "https://api.github.com/users/bradwestfall/orgs",
            "repos_url": "https://api.github.com/users/bradwestfall/repos",
            "events_url": "https://api.github.com/users/bradwestfall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradwestfall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-08T18:59:16Z",
        "updated_at": "2016-04-08T18:59:16Z",
        "author_association": "NONE",
        "body": "oh, duh. Thanks\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/207584183",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/117#issuecomment-207584183",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/117",
        "id": 207584183,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzU4NDE4Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-08T20:13:21Z",
        "updated_at": "2016-04-08T20:13:21Z",
        "author_association": "OWNER",
        "body": "No reason except that I don't use AMD. Happy to accept a PR! :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/207584948",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/114#issuecomment-207584948",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/114",
        "id": 207584948,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzU4NDk0OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-08T20:14:26Z",
        "updated_at": "2016-04-08T20:14:26Z",
        "author_association": "OWNER",
        "body": "I honestly don't know. I tend to focus on concrete use cases; is this blocking you on a particular project?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/207585758",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/118#issuecomment-207585758",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/118",
        "id": 207585758,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzU4NTc1OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-08T20:15:36Z",
        "updated_at": "2016-04-08T20:15:36Z",
        "author_association": "OWNER",
        "body": "Thanks for the question! I'm not sure what this would mean in the context of an immutable library, though; the original object never changes, so I don't think those handlers would ever file. :smile: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/207749552",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/118#issuecomment-207749552",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/118",
        "id": 207749552,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzc0OTU1Mg==",
        "user": {
            "login": "danprince",
            "id": 1266011,
            "node_id": "MDQ6VXNlcjEyNjYwMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1266011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danprince",
            "html_url": "https://github.com/danprince",
            "followers_url": "https://api.github.com/users/danprince/followers",
            "following_url": "https://api.github.com/users/danprince/following{/other_user}",
            "gists_url": "https://api.github.com/users/danprince/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danprince/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danprince/subscriptions",
            "organizations_url": "https://api.github.com/users/danprince/orgs",
            "repos_url": "https://api.github.com/users/danprince/repos",
            "events_url": "https://api.github.com/users/danprince/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danprince/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-09T08:59:20Z",
        "updated_at": "2016-04-09T08:59:41Z",
        "author_association": "NONE",
        "body": "It sounds like you might be thinking of Clojure's atoms. Atoms normally wrap an immutable then watch for it being replaced from by an `update` (or `reset`) method.\n\nIf you pair together [js-atom](https://github.com/cjohansen/js-atom) with seamless-immutable, you can simulate this behaviour.\n\n``` js\nimport Atom from 'js-atom';\nimport Immutable from 'seamless-immutable';\n\nconst arr = Immutable([1, 2, 3]);\nconst atom = Atom(arr);\n\natom.addWatch('someKey', (_, _, old, new) => {\n  console.log('update', old, new);\n});\n\natom.update(arr => arr.concat([4]));\n// 'update' [1, 2, 3] [1, 2, 3, 4]\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/207773381",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/118#issuecomment-207773381",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/118",
        "id": 207773381,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzc3MzM4MQ==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-09T11:27:39Z",
        "updated_at": "2016-04-09T11:28:14Z",
        "author_association": "NONE",
        "body": "@mglazer-cengage also take a look at https://github.com/tusharmath/reactive-storage. It will expose the store as an `Observable`. \n\n_apologies for a little bit of self promotion_\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/207774417",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/99#issuecomment-207774417",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/99",
        "id": 207774417,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzc3NDQxNw==",
        "user": {
            "login": "tusharmath",
            "id": 194482,
            "node_id": "MDQ6VXNlcjE5NDQ4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/194482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tusharmath",
            "html_url": "https://github.com/tusharmath",
            "followers_url": "https://api.github.com/users/tusharmath/followers",
            "following_url": "https://api.github.com/users/tusharmath/following{/other_user}",
            "gists_url": "https://api.github.com/users/tusharmath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tusharmath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tusharmath/subscriptions",
            "organizations_url": "https://api.github.com/users/tusharmath/orgs",
            "repos_url": "https://api.github.com/users/tusharmath/repos",
            "events_url": "https://api.github.com/users/tusharmath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tusharmath/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-09T11:34:19Z",
        "updated_at": "2016-04-09T11:34:19Z",
        "author_association": "NONE",
        "body": "@rtfeldman Let me know if you need something else from me.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/208238683",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-208238683",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 208238683,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwODIzODY4Mw==",
        "user": {
            "login": "geowarin",
            "id": 1045636,
            "node_id": "MDQ6VXNlcjEwNDU2MzY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1045636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geowarin",
            "html_url": "https://github.com/geowarin",
            "followers_url": "https://api.github.com/users/geowarin/followers",
            "following_url": "https://api.github.com/users/geowarin/following{/other_user}",
            "gists_url": "https://api.github.com/users/geowarin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geowarin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geowarin/subscriptions",
            "organizations_url": "https://api.github.com/users/geowarin/orgs",
            "repos_url": "https://api.github.com/users/geowarin/repos",
            "events_url": "https://api.github.com/users/geowarin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geowarin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-11T08:57:21Z",
        "updated_at": "2016-04-11T11:52:42Z",
        "author_association": "NONE",
        "body": "Hi!\nI just wanted to contribute my two cents to this issue.\nFirst, let me say that I love seamless-immutable and this issue currently prevents me to use it at a massive scale for react applications.\nThere are two workarounds for this issue:\n\n``` js\nmyImmutableArray.asMutable().map((item,key) => <li key={key}>item.value</li>)\n```\n\nOr, as mentioned above:\n\n``` js\n_.map(myImmutableArray, (item,key) => <li key={key}>item.value</li>)\n```\n\nIn my opinion, we are loosing the notion of \"seamless\" here.\nI'm setting up projects for people new to React to get them started easily.\nBasically, I will tell them: \"This is seamless until you use it in a React component\".\nThat's a leaky abstraction.\n\nI wonder if the use case of mapping elements to another immutable collection is as frequent as you think.\nBy mapping elements, you are basically transforming your `Array<X>` to another `Array<Y>`.\nSo it's a conscious decision and most of the time, I'll be using a transform for read-only operations.\n\nIntroducing a `mapToImmutable()` function and letting `map()` return a mutable array is another solution to this problem.\n\nWhat do you think?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/208653492",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/120#issuecomment-208653492",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/120",
        "id": 208653492,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwODY1MzQ5Mg==",
        "user": {
            "login": "davidblurton",
            "id": 1696979,
            "node_id": "MDQ6VXNlcjE2OTY5Nzk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1696979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidblurton",
            "html_url": "https://github.com/davidblurton",
            "followers_url": "https://api.github.com/users/davidblurton/followers",
            "following_url": "https://api.github.com/users/davidblurton/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidblurton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidblurton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidblurton/subscriptions",
            "organizations_url": "https://api.github.com/users/davidblurton/orgs",
            "repos_url": "https://api.github.com/users/davidblurton/repos",
            "events_url": "https://api.github.com/users/davidblurton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidblurton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-12T01:15:44Z",
        "updated_at": "2016-04-12T01:15:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "Tests pass but error with \n\n```\nError:\nZuul tried to run tests in saucelabs, however no saucelabs credentials were provided.\nSee the zuul wiki (https://github.com/defunctzombie/zuul/wiki/Cloud-testing) for info on how to setup cloud testing.\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/209409538",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/120#issuecomment-209409538",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/120",
        "id": 209409538,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTQwOTUzOA==",
        "user": {
            "login": "shamrin",
            "id": 510678,
            "node_id": "MDQ6VXNlcjUxMDY3OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/510678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shamrin",
            "html_url": "https://github.com/shamrin",
            "followers_url": "https://api.github.com/users/shamrin/followers",
            "following_url": "https://api.github.com/users/shamrin/following{/other_user}",
            "gists_url": "https://api.github.com/users/shamrin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shamrin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shamrin/subscriptions",
            "organizations_url": "https://api.github.com/users/shamrin/orgs",
            "repos_url": "https://api.github.com/users/shamrin/repos",
            "events_url": "https://api.github.com/users/shamrin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shamrin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-13T12:38:11Z",
        "updated_at": "2016-04-13T12:38:11Z",
        "author_association": "CONTRIBUTOR",
        "body": "@davidblurton Interesting approach to solving #73.\n\nHave you considered simply checking for `isReactComponent` property? It was sugggested here: \n\nhttps://discuss.reactjs.org/t/how-to-determine-if-js-object-is-react-component/2825/5\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/209426751",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-209426751",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 209426751,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTQyNjc1MQ==",
        "user": {
            "login": "shamrin",
            "id": 510678,
            "node_id": "MDQ6VXNlcjUxMDY3OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/510678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shamrin",
            "html_url": "https://github.com/shamrin",
            "followers_url": "https://api.github.com/users/shamrin/followers",
            "following_url": "https://api.github.com/users/shamrin/following{/other_user}",
            "gists_url": "https://api.github.com/users/shamrin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shamrin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shamrin/subscriptions",
            "organizations_url": "https://api.github.com/users/shamrin/orgs",
            "repos_url": "https://api.github.com/users/shamrin/repos",
            "events_url": "https://api.github.com/users/shamrin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shamrin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-13T13:05:08Z",
        "updated_at": "2016-04-13T13:08:25Z",
        "author_association": "CONTRIBUTOR",
        "body": "I agree with @geowarin that having browser hang and then fail with stack overflow when doing `Immutable([1,2,3]).map(function() { return <div /> })` is a very serious issue.\n\nPlease consider reviewing two recent approaches to fixing this problem:\n- PR #120 that skips making React components immutable.\n- PR #119 that detects cycles during development and refers to this issue in browser console.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/209450982",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/120#issuecomment-209450982",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/120",
        "id": 209450982,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTQ1MDk4Mg==",
        "user": {
            "login": "davidblurton",
            "id": 1696979,
            "node_id": "MDQ6VXNlcjE2OTY5Nzk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1696979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidblurton",
            "html_url": "https://github.com/davidblurton",
            "followers_url": "https://api.github.com/users/davidblurton/followers",
            "following_url": "https://api.github.com/users/davidblurton/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidblurton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidblurton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidblurton/subscriptions",
            "organizations_url": "https://api.github.com/users/davidblurton/orgs",
            "repos_url": "https://api.github.com/users/davidblurton/repos",
            "events_url": "https://api.github.com/users/davidblurton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidblurton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-13T13:52:54Z",
        "updated_at": "2016-04-13T13:52:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "The property `isReactComponent` doesn't seem to be defined on ES6 classes. \n\nTo check for classes you'd have to do `React.Component.isPrototypeOf(object)` but that involves taking a dependency on `react`.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/209451887",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-209451887",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 209451887,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTQ1MTg4Nw==",
        "user": {
            "login": "geowarin",
            "id": 1045636,
            "node_id": "MDQ6VXNlcjEwNDU2MzY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1045636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geowarin",
            "html_url": "https://github.com/geowarin",
            "followers_url": "https://api.github.com/users/geowarin/followers",
            "following_url": "https://api.github.com/users/geowarin/following{/other_user}",
            "gists_url": "https://api.github.com/users/geowarin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geowarin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geowarin/subscriptions",
            "organizations_url": "https://api.github.com/users/geowarin/orgs",
            "repos_url": "https://api.github.com/users/geowarin/repos",
            "events_url": "https://api.github.com/users/geowarin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geowarin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-13T13:53:53Z",
        "updated_at": "2016-04-13T13:53:53Z",
        "author_association": "NONE",
        "body": "PR #120 is indeed a great solution!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/209667806",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/120#issuecomment-209667806",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/120",
        "id": 209667806,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTY2NzgwNg==",
        "user": {
            "login": "shamrin",
            "id": 510678,
            "node_id": "MDQ6VXNlcjUxMDY3OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/510678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shamrin",
            "html_url": "https://github.com/shamrin",
            "followers_url": "https://api.github.com/users/shamrin/followers",
            "following_url": "https://api.github.com/users/shamrin/following{/other_user}",
            "gists_url": "https://api.github.com/users/shamrin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shamrin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shamrin/subscriptions",
            "organizations_url": "https://api.github.com/users/shamrin/orgs",
            "repos_url": "https://api.github.com/users/shamrin/repos",
            "events_url": "https://api.github.com/users/shamrin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shamrin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-13T22:06:46Z",
        "updated_at": "2016-04-13T22:06:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "You are right, React elements no longer can be detected by a simple property check.\u00b9 Your approach seems to be the correct way. It's even mentioned in [\"React Components, Elements, and Instances\"](https://facebook.github.io/react/blog/2015/12/18/react-components-elements-and-instances.html) blog post:\n\n> All React elements require an additional `$$typeof: Symbol.for('react.element')` field declared on the object for [security reasons](https://github.com/facebook/react/pull/4832).\n\n\u00b9 `_isReactElement` property [was removed](https://github.com/facebook/react/commit/6663fb3135f341b03b1342108bf26da34d90a6fb), at the same time as [`$$typeof` was introduced](https://github.com/facebook/react/commit/031fc24daeae6bcdc5e5f6959b778e1c2ed5f378) - before React v0.14.0-rc1.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210039218",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/119#issuecomment-210039218",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/119",
        "id": 210039218,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDAzOTIxOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-14T16:37:15Z",
        "updated_at": "2016-04-14T16:37:15Z",
        "author_association": "OWNER",
        "body": "Lovely, thank you! \ud83d\ude3b \n\nTwo minor suggestions:\n1. Could you refactor `level` to be `stackRemaining` and decrement instead of incrementing? (Default to `64` instead of `0`, and error when you reach `0`.) That way if someone genuinely does have something that needs 65 stack frames, they can opt into upping the limit with an intuitive API.\n2. Could you add something to the README documenting this?\n\nThanks so much for this!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210040212",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/116#issuecomment-210040212",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/116",
        "id": 210040212,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA0MDIxMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-14T16:39:23Z",
        "updated_at": "2016-04-14T16:39:23Z",
        "author_association": "OWNER",
        "body": "People have asked for this before, and it looks like the implementation is simple and well-tested. Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210043462",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/99#issuecomment-210043462",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/99",
        "id": 210043462,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA0MzQ2Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-14T16:44:08Z",
        "updated_at": "2016-04-14T16:44:08Z",
        "author_association": "OWNER",
        "body": "@tusharmath sorry I didn't follow up about this, but unfortunately this is still a deal-breaker for me:\n\n> The token gives your CLI the ability to do things like publish and unpublish packages, and manage owners and teams.\n\nI'm like the idea of auto-_generating_ changelogs, but I'm not willing to give this level of permission to a third-party tool for that convenience.\n\nI really, really appreciate your work on this, but I don't think I'm going to be able to finish the steps necessary for this to happen.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210043981",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/75#issuecomment-210043981",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/75",
        "id": 210043981,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA0Mzk4MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-14T16:45:54Z",
        "updated_at": "2016-04-14T16:45:54Z",
        "author_association": "OWNER",
        "body": "Closing as stale; feel free to reopen if desired!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210044020",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/84#issuecomment-210044020",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/84",
        "id": 210044020,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA0NDAyMA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-14T16:46:04Z",
        "updated_at": "2016-04-14T16:46:04Z",
        "author_association": "OWNER",
        "body": "Closing as stale; feel free to reopen if desired!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210044637",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/116#issuecomment-210044637",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/116",
        "id": 210044637,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA0NDYzNw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-14T16:48:05Z",
        "updated_at": "2016-04-14T16:48:05Z",
        "author_association": "OWNER",
        "body": "@evgenykochetkov I expect to merge https://github.com/rtfeldman/seamless-immutable/pull/119 soon and will release once that's in.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210074501",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/116#issuecomment-210074501",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/116",
        "id": 210074501,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA3NDUwMQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-14T17:50:32Z",
        "updated_at": "2016-04-14T17:50:32Z",
        "author_association": "OWNER",
        "body": "Actually, never mind - that one is a breaking change, and I think giving this its own minor version bump is worthwhile. Released as 5.2.0!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210076316",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-210076316",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 210076316,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA3NjMxNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-14T17:54:32Z",
        "updated_at": "2016-04-14T17:54:32Z",
        "author_association": "OWNER",
        "body": "yep, I'm gonna go with both #119 and #120 - left some comments on both \ud83d\ude03 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210180661",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/119#issuecomment-210180661",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/119",
        "id": 210180661,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDE4MDY2MQ==",
        "user": {
            "login": "shamrin",
            "id": 510678,
            "node_id": "MDQ6VXNlcjUxMDY3OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/510678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shamrin",
            "html_url": "https://github.com/shamrin",
            "followers_url": "https://api.github.com/users/shamrin/followers",
            "following_url": "https://api.github.com/users/shamrin/following{/other_user}",
            "gists_url": "https://api.github.com/users/shamrin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shamrin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shamrin/subscriptions",
            "organizations_url": "https://api.github.com/users/shamrin/orgs",
            "repos_url": "https://api.github.com/users/shamrin/repos",
            "events_url": "https://api.github.com/users/shamrin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shamrin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-14T22:22:10Z",
        "updated_at": "2016-04-14T22:22:10Z",
        "author_association": "CONTRIBUTOR",
        "body": "Done!\n\nI've also written about this problem in wiki. Error message now links to it: https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210288231",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/119#issuecomment-210288231",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/119",
        "id": 210288231,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDI4ODIzMQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-15T05:01:03Z",
        "updated_at": "2016-04-15T05:01:03Z",
        "author_association": "OWNER",
        "body": "Beautiful! \ud83d\ude3b  Thanks so much @shamrin!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210698400",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/16#issuecomment-210698400",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/16",
        "id": 210698400,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDY5ODQwMA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-16T00:40:12Z",
        "updated_at": "2016-04-16T00:40:12Z",
        "author_association": "OWNER",
        "body": "Resolved by https://github.com/rtfeldman/seamless-immutable/pull/119\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210698540",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/1#issuecomment-210698540",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/1",
        "id": 210698540,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDY5ODU0MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-16T00:41:25Z",
        "updated_at": "2016-04-16T00:41:25Z",
        "author_association": "OWNER",
        "body": "There doesn't seem to be much demand for this, so I'm going to close this for now.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/210698632",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-210698632",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 210698632,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDY5ODYzMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-16T00:42:17Z",
        "updated_at": "2016-04-19T22:58:59Z",
        "author_association": "OWNER",
        "body": "https://github.com/rtfeldman/seamless-immutable/pull/119 has been merged and released as version 6.0.0; #120 will presumably be 6.0.1 once it's merged.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/212150358",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/120#issuecomment-212150358",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/120",
        "id": 212150358,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjE1MDM1OA==",
        "user": {
            "login": "davidblurton",
            "id": 1696979,
            "node_id": "MDQ6VXNlcjE2OTY5Nzk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1696979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidblurton",
            "html_url": "https://github.com/davidblurton",
            "followers_url": "https://api.github.com/users/davidblurton/followers",
            "following_url": "https://api.github.com/users/davidblurton/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidblurton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidblurton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidblurton/subscriptions",
            "organizations_url": "https://api.github.com/users/davidblurton/orgs",
            "repos_url": "https://api.github.com/users/davidblurton/repos",
            "events_url": "https://api.github.com/users/davidblurton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidblurton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-19T22:13:50Z",
        "updated_at": "2016-04-19T22:13:50Z",
        "author_association": "CONTRIBUTOR",
        "body": "I've added some tests for React elements and components. This along with the cycle detection should make things a lot smoother. \n\nOne problem I had was that the property that causes the issue, `_owner`, isn't filled in until the component is mounted in the dom. In other words, I was unable to reproduce the stack overflow in my tests. Instead I tested that React elements and components aren't modified. \n\nCI build still failing with Zuul error. \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/212160577",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/120#issuecomment-212160577",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/120",
        "id": 212160577,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjE2MDU3Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-19T22:58:39Z",
        "updated_at": "2016-04-19T22:58:39Z",
        "author_association": "OWNER",
        "body": "\ud83c\udf89 \ud83c\udf89 \ud83c\udf89 Thanks a ton @davidblurton!!!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/212162667",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-212162667",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 212162667,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjE2MjY2Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-19T23:07:34Z",
        "updated_at": "2016-04-19T23:07:34Z",
        "author_association": "OWNER",
        "body": "Fixed and published as 6.0.1! Big ups to @davidblurton for the implementation.\n\nI'm going to wait about a week before announcing this release, so people have a chance to kick the tires and see if we missed anything. \ud83d\ude38 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/212172046",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/73#issuecomment-212172046",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/73",
        "id": 212172046,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjE3MjA0Ng==",
        "user": {
            "login": "davidblurton",
            "id": 1696979,
            "node_id": "MDQ6VXNlcjE2OTY5Nzk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1696979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidblurton",
            "html_url": "https://github.com/davidblurton",
            "followers_url": "https://api.github.com/users/davidblurton/followers",
            "following_url": "https://api.github.com/users/davidblurton/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidblurton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidblurton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidblurton/subscriptions",
            "organizations_url": "https://api.github.com/users/davidblurton/orgs",
            "repos_url": "https://api.github.com/users/davidblurton/repos",
            "events_url": "https://api.github.com/users/davidblurton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidblurton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-19T23:39:11Z",
        "updated_at": "2016-04-19T23:39:11Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes, please test it out and mention me if you have any issues. \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/213357454",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-213357454",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 213357454,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzM1NzQ1NA==",
        "user": {
            "login": "meandmax",
            "id": 6309638,
            "node_id": "MDQ6VXNlcjYzMDk2Mzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6309638?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/meandmax",
            "html_url": "https://github.com/meandmax",
            "followers_url": "https://api.github.com/users/meandmax/followers",
            "following_url": "https://api.github.com/users/meandmax/following{/other_user}",
            "gists_url": "https://api.github.com/users/meandmax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/meandmax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/meandmax/subscriptions",
            "organizations_url": "https://api.github.com/users/meandmax/orgs",
            "repos_url": "https://api.github.com/users/meandmax/repos",
            "events_url": "https://api.github.com/users/meandmax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/meandmax/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-22T09:40:10Z",
        "updated_at": "2016-04-22T09:40:10Z",
        "author_association": "NONE",
        "body": "This seems to work for us so far but we are not sure if we doing this right. Immutable.js from FB has an existing module declaration but certainly immutable.js is not an option for us ...\n\nhttps://github.com/TechnologyAdvice/flow-interfaces/blob/master/interfaces/immutable.d.js \n\n``` js\ndeclare module 'seamless-immutable' {\n  declare class SeamlessImmutable {\n    static (collection: any, prototype?: Object, depth?: number): any,\n    /* array functions */\n    flatMap(fn: Function): Array<any>,\n    asObject(fn: Function): Object,\n    asMutable(): Array<any>,\n\n    /* object functions */\n    merge(collection: Array<any> | Object, deep?: Object): Object,\n    set(key: string, value: any): Object,\n    setIn(keyPath: Array<string>, value: any): Object,\n    update(key: string, fn: Function): Object,\n    updateIn(keyPath: Array<string>, fn: Function): Object,\n    without(fn: Function): Object,\n    without(keys: Array<string>): Object,\n    without(...keys: Array<string>): Object,\n    asMutable(): Array<any> | Object\n  }\n  declare var exports: typeof SeamlessImmutable;\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/213555576",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-213555576",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 213555576,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzU1NTU3Ng==",
        "user": {
            "login": "grabbou",
            "id": 2464966,
            "node_id": "MDQ6VXNlcjI0NjQ5NjY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2464966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grabbou",
            "html_url": "https://github.com/grabbou",
            "followers_url": "https://api.github.com/users/grabbou/followers",
            "following_url": "https://api.github.com/users/grabbou/following{/other_user}",
            "gists_url": "https://api.github.com/users/grabbou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grabbou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grabbou/subscriptions",
            "organizations_url": "https://api.github.com/users/grabbou/orgs",
            "repos_url": "https://api.github.com/users/grabbou/repos",
            "events_url": "https://api.github.com/users/grabbou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grabbou/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-22T19:03:17Z",
        "updated_at": "2016-04-22T19:07:54Z",
        "author_association": "NONE",
        "body": "Hm, here's what I came up with so far (to cover only few methods I had):\n\n``` js\ndeclare class ImmutableArray<T> extends Array {\n  concat(item: (T | Array<T>)): ImmutableArray<T>;\n  slice(idx: number, len: ?number): ImmutableArray<T>;\n  updateIn<U>(keyPath: Array<string | number>, func: (item: U) => U): ImmutableArray<T>;\n  update(key: (string | number), func: (item: T) => T): ImmutableArray<T>;\n}\n```\n\nso that:\n\n``` js\nconst arr: ImmutableArray<string> = Immutable(['a', 'b']);\narr.slice(0).concat('c').concat(['d']).update(2, s => s); // no errors here\n```\n\nworks.\n\nMade them in like 5 minutes, someone might find it useful to implement proper e2e declarations, just like for `lodash`. \n\nI might try to convert that properly to declaration and send over a PR or just include as a 3rd party package. Would you be interested in helping out @meandmax?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/214076593",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/124#issuecomment-214076593",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/124",
        "id": 214076593,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDA3NjU5Mw==",
        "user": {
            "login": "forty2",
            "id": 1472096,
            "node_id": "MDQ6VXNlcjE0NzIwOTY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1472096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/forty2",
            "html_url": "https://github.com/forty2",
            "followers_url": "https://api.github.com/users/forty2/followers",
            "following_url": "https://api.github.com/users/forty2/following{/other_user}",
            "gists_url": "https://api.github.com/users/forty2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/forty2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/forty2/subscriptions",
            "organizations_url": "https://api.github.com/users/forty2/orgs",
            "repos_url": "https://api.github.com/users/forty2/repos",
            "events_url": "https://api.github.com/users/forty2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/forty2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-25T00:42:35Z",
        "updated_at": "2016-04-25T06:19:41Z",
        "author_association": "NONE",
        "body": "~~I would also find this useful, so I took a shot at it over here: https://github.com/forty2/seamless-immutable/tree/child-prototypes~~\n\n~~It seems to be working for me, and all tests pass (including the one I added for the new behavior).~~\n\n~~If @rtfeldman agrees this is a good idea, I'll open a pull request.~~\n\n~~Edit: it's more difficult than I originally thought -- it doesn't do the right thing after calling set.  I'll see what I can do about that...~~\n\nEdit 2: After a few hours of playing with this, I'm no longer convinced it's a good idea.  So, yeah, basically pretend I wasn't here... :wink: \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/214922290",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/123#issuecomment-214922290",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/123",
        "id": 214922290,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDkyMjI5MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-26T23:46:01Z",
        "updated_at": "2016-04-26T23:46:01Z",
        "author_association": "OWNER",
        "body": "Sure, makes sense to me! \ud83d\ude03 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/214922809",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/125#issuecomment-214922809",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/125",
        "id": 214922809,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDkyMjgwOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-26T23:49:08Z",
        "updated_at": "2016-04-26T23:49:08Z",
        "author_association": "OWNER",
        "body": "Why not just transform the argument before calling `Immutable` on it?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/214922958",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/124#issuecomment-214922958",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/124",
        "id": 214922958,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDkyMjk1OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-26T23:50:06Z",
        "updated_at": "2016-04-26T23:50:06Z",
        "author_association": "OWNER",
        "body": "This seems like a \"here there be dragons\" case. What's the motivation here? Why is this needed?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/214985432",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/124#issuecomment-214985432",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/124",
        "id": 214985432,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDk4NTQzMg==",
        "user": {
            "login": "Snowshield",
            "id": 15171474,
            "node_id": "MDQ6VXNlcjE1MTcxNDc0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/15171474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Snowshield",
            "html_url": "https://github.com/Snowshield",
            "followers_url": "https://api.github.com/users/Snowshield/followers",
            "following_url": "https://api.github.com/users/Snowshield/following{/other_user}",
            "gists_url": "https://api.github.com/users/Snowshield/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Snowshield/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Snowshield/subscriptions",
            "organizations_url": "https://api.github.com/users/Snowshield/orgs",
            "repos_url": "https://api.github.com/users/Snowshield/repos",
            "events_url": "https://api.github.com/users/Snowshield/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Snowshield/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-27T06:40:16Z",
        "updated_at": "2016-04-27T06:41:47Z",
        "author_association": "NONE",
        "body": "I develop a simulation library.\nIt uses a single state to perform simulation and a set of saved immutables states.\nSo it will need two features.\n1. Call methods of immutable objects and its properties to analize saved states.\n2. Make saved state mutable to perform simulations with it.\n\nPlus there is non-obvious behavior:\n\n```\n  class A {}\n  class B {\n    constructor(){\n      this._prop = new A;\n    }\n  }\n  let b       = new B,\n      bClone  = Immutable(b).asMutable(),\n      bPropConstr       = b._prop.constructor,\n      bClonePropConstr  = bClone._prop.constructor,\n      equal   = bPropConstr === bClonePropConstr;\n  console.log(equal); // false\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/214987416",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/125#issuecomment-214987416",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/125",
        "id": 214987416,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDk4NzQxNg==",
        "user": {
            "login": "Snowshield",
            "id": 15171474,
            "node_id": "MDQ6VXNlcjE1MTcxNDc0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/15171474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Snowshield",
            "html_url": "https://github.com/Snowshield",
            "followers_url": "https://api.github.com/users/Snowshield/followers",
            "following_url": "https://api.github.com/users/Snowshield/following{/other_user}",
            "gists_url": "https://api.github.com/users/Snowshield/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Snowshield/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Snowshield/subscriptions",
            "organizations_url": "https://api.github.com/users/Snowshield/orgs",
            "repos_url": "https://api.github.com/users/Snowshield/repos",
            "events_url": "https://api.github.com/users/Snowshield/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Snowshield/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-27T06:51:56Z",
        "updated_at": "2016-04-27T06:51:56Z",
        "author_association": "NONE",
        "body": "Argument object may all propetiies to work properly.\nSecond way is to clone it for N depth, delete props and send cloned to `Immutable`.\nBut its not equal if object has depth L>N.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215278571",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/126#issuecomment-215278571",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/126",
        "id": 215278571,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTI3ODU3MQ==",
        "user": {
            "login": "ericclemmons",
            "id": 15182,
            "node_id": "MDQ6VXNlcjE1MTgy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ericclemmons",
            "html_url": "https://github.com/ericclemmons",
            "followers_url": "https://api.github.com/users/ericclemmons/followers",
            "following_url": "https://api.github.com/users/ericclemmons/following{/other_user}",
            "gists_url": "https://api.github.com/users/ericclemmons/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ericclemmons/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ericclemmons/subscriptions",
            "organizations_url": "https://api.github.com/users/ericclemmons/orgs",
            "repos_url": "https://api.github.com/users/ericclemmons/repos",
            "events_url": "https://api.github.com/users/ericclemmons/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ericclemmons/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-28T01:10:17Z",
        "updated_at": "2016-04-28T01:10:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "**However**, `new Immutable(...)` would also satisfy this rule, but would fail **4** tests:\n\n```\n  2104 passing (8s)\n  4 failing\n```\n\nWhat would you prefer?  `Immutable.from` or supporting instantiation via `new Immutable`?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215278610",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/123#issuecomment-215278610",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/123",
        "id": 215278610,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTI3ODYxMA==",
        "user": {
            "login": "ericclemmons",
            "id": 15182,
            "node_id": "MDQ6VXNlcjE1MTgy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ericclemmons",
            "html_url": "https://github.com/ericclemmons",
            "followers_url": "https://api.github.com/users/ericclemmons/followers",
            "following_url": "https://api.github.com/users/ericclemmons/following{/other_user}",
            "gists_url": "https://api.github.com/users/ericclemmons/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ericclemmons/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ericclemmons/subscriptions",
            "organizations_url": "https://api.github.com/users/ericclemmons/orgs",
            "repos_url": "https://api.github.com/users/ericclemmons/repos",
            "events_url": "https://api.github.com/users/ericclemmons/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ericclemmons/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-28T01:10:33Z",
        "updated_at": "2016-04-28T01:10:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "Work is being done in #126...\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215280919",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/126#issuecomment-215280919",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/126",
        "id": 215280919,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTI4MDkxOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-28T01:28:10Z",
        "updated_at": "2016-04-28T01:28:10Z",
        "author_association": "OWNER",
        "body": "`new Immutable` seems better, assuming it can be done in a way that doesn't break stuff (not sure which tests are failing, and whether it's the test's fault or the new logic's fault \ud83d\ude09 )\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215288742",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/126#issuecomment-215288742",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/126",
        "id": 215288742,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTI4ODc0Mg==",
        "user": {
            "login": "ericclemmons",
            "id": 15182,
            "node_id": "MDQ6VXNlcjE1MTgy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ericclemmons",
            "html_url": "https://github.com/ericclemmons",
            "followers_url": "https://api.github.com/users/ericclemmons/followers",
            "following_url": "https://api.github.com/users/ericclemmons/following{/other_user}",
            "gists_url": "https://api.github.com/users/ericclemmons/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ericclemmons/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ericclemmons/subscriptions",
            "organizations_url": "https://api.github.com/users/ericclemmons/orgs",
            "repos_url": "https://api.github.com/users/ericclemmons/repos",
            "events_url": "https://api.github.com/users/ericclemmons/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ericclemmons/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-28T02:17:59Z",
        "updated_at": "2016-04-28T02:17:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman I agree.  I'll post up more info. I'm a fan of `new Immutable`  personally, but I know some people are completely anti-instantiation.  But those people aren't the ones with the `new-cap` rule ;)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215289731",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/126#issuecomment-215289731",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/126",
        "id": 215289731,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTI4OTczMQ==",
        "user": {
            "login": "ericclemmons",
            "id": 15182,
            "node_id": "MDQ6VXNlcjE1MTgy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ericclemmons",
            "html_url": "https://github.com/ericclemmons",
            "followers_url": "https://api.github.com/users/ericclemmons/followers",
            "following_url": "https://api.github.com/users/ericclemmons/following{/other_user}",
            "gists_url": "https://api.github.com/users/ericclemmons/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ericclemmons/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ericclemmons/subscriptions",
            "organizations_url": "https://api.github.com/users/ericclemmons/orgs",
            "repos_url": "https://api.github.com/users/ericclemmons/repos",
            "events_url": "https://api.github.com/users/ericclemmons/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ericclemmons/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-28T02:26:03Z",
        "updated_at": "2016-04-28T02:26:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "Replacing the tests to use `new Immutable` yields:\n\n```\n  2104 passing (9s)\n  4 failing\n\n  1) Development build ImmutableArray returns only immutables when you call its reduce() method:\n\n      AssertionError: expected '{}' to equal '0.10615249630063772'\n      + expected - actual\n\n      -{}\n      +0.10615249630063772\n\n      at Function.assert.strictEqual (node_modules/chai/lib/chai/interface/assert.js:178:32)\n      at assertJsonEqual (test/TestUtils.js:13:12)\n      at Object.assertImmutable (test/TestUtils.js:22:5)\n      at Function.<anonymous> (test/ImmutableArray/test-compat.js:179:19)\n      at Function.<anonymous> (test/TestUtils.js:121:18)\n      at check (test/TestUtils.js:103:13)\n      at test/TestUtils.js:117:7\n      at Context.<anonymous> (test/ImmutableArray/test-compat.js:177:7)\n\n  2) Development build ImmutableArray returns only immutables when you call its reduceRight() method:\n\n      AssertionError: expected '{}' to equal '0.8079638944473118'\n      + expected - actual\n\n      -{}\n      +0.8079638944473118\n\n      at Function.assert.strictEqual (node_modules/chai/lib/chai/interface/assert.js:178:32)\n      at assertJsonEqual (test/TestUtils.js:13:12)\n      at Object.assertImmutable (test/TestUtils.js:22:5)\n      at Function.<anonymous> (test/ImmutableArray/test-compat.js:179:19)\n      at Function.<anonymous> (test/TestUtils.js:121:18)\n      at check (test/TestUtils.js:103:13)\n      at test/TestUtils.js:117:7\n      at Context.<anonymous> (test/ImmutableArray/test-compat.js:177:7)\n\n  3) Production build ImmutableArray returns only immutables when you call its reduce() method:\n\n      AssertionError: expected '{}' to equal 'false'\n      + expected - actual\n\n      -{}\n      +false\n\n      at Function.assert.strictEqual (node_modules/chai/lib/chai/interface/assert.js:178:32)\n      at assertJsonEqual (test/TestUtils.js:13:12)\n      at Object.assertImmutable (test/TestUtils.js:22:5)\n      at Function.<anonymous> (test/ImmutableArray/test-compat.js:179:19)\n      at Function.<anonymous> (test/TestUtils.js:121:18)\n      at check (test/TestUtils.js:103:13)\n      at test/TestUtils.js:117:7\n      at Context.<anonymous> (test/ImmutableArray/test-compat.js:177:7)\n\n  4) Production build ImmutableArray returns only immutables when you call its reduceRight() method:\n\n      AssertionError: expected '{}' to equal '\"\"'\n      + expected - actual\n\n      -{}\n      +\"\"\n\n      at Function.assert.strictEqual (node_modules/chai/lib/chai/interface/assert.js:178:32)\n      at assertJsonEqual (test/TestUtils.js:13:12)\n      at Object.assertImmutable (test/TestUtils.js:22:5)\n      at Function.<anonymous> (test/ImmutableArray/test-compat.js:179:19)\n      at Function.<anonymous> (test/TestUtils.js:121:18)\n      at check (test/TestUtils.js:103:13)\n      at test/TestUtils.js:117:7\n      at Context.<anonymous> (test/ImmutableArray/test-compat.js:177:7)\n```\n\nFrom what I can tell it's the `nonMutatingArrayMethods`\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215298232",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/126#issuecomment-215298232",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/126",
        "id": 215298232,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTI5ODIzMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-28T03:10:41Z",
        "updated_at": "2016-04-28T03:10:41Z",
        "author_association": "OWNER",
        "body": "Oh right...if you use new, you have to get an object back; it can't return plain strings, numbers, null, etc. - all of which are currently supported (and passed through unchanged).\n\nLet's just go with \"from\" after all haha\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215307062",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/126#issuecomment-215307062",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/126",
        "id": 215307062,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTMwNzA2Mg==",
        "user": {
            "login": "ericclemmons",
            "id": 15182,
            "node_id": "MDQ6VXNlcjE1MTgy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ericclemmons",
            "html_url": "https://github.com/ericclemmons",
            "followers_url": "https://api.github.com/users/ericclemmons/followers",
            "following_url": "https://api.github.com/users/ericclemmons/following{/other_user}",
            "gists_url": "https://api.github.com/users/ericclemmons/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ericclemmons/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ericclemmons/subscriptions",
            "organizations_url": "https://api.github.com/users/ericclemmons/orgs",
            "repos_url": "https://api.github.com/users/ericclemmons/repos",
            "events_url": "https://api.github.com/users/ericclemmons/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ericclemmons/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-28T04:26:14Z",
        "updated_at": "2016-04-28T04:26:14Z",
        "author_association": "CONTRIBUTOR",
        "body": "Oh right!  Travis is failing do to the Zuul testing (likely because my repo doesn't have the env vars yours does for testing).\n\nLet me know what else you'd like @rtfeldman :)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215503293",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/125#issuecomment-215503293",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/125",
        "id": 215503293,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTUwMzI5Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-28T17:30:50Z",
        "updated_at": "2016-04-28T17:30:50Z",
        "author_association": "OWNER",
        "body": "This use case seems too narrow to justify the added complexity, sorry!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215503526",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/126#issuecomment-215503526",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/126",
        "id": 215503526,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTUwMzUyNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-28T17:31:44Z",
        "updated_at": "2016-04-28T17:31:44Z",
        "author_association": "OWNER",
        "body": "Looks good! Last request would be a quick mention in the README. \ud83d\ude38 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215503799",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/124#issuecomment-215503799",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/124",
        "id": 215503799,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTUwMzc5OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-28T17:32:41Z",
        "updated_at": "2016-04-28T17:32:41Z",
        "author_association": "OWNER",
        "body": "> Call methods of immutable objects and its properties to analize saved states.\n\nWhy do those need to be methods? Why not implement them as standalone functions that accept the immutable data as arguments?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215765510",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/126#issuecomment-215765510",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/126",
        "id": 215765510,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTc2NTUxMA==",
        "user": {
            "login": "ericclemmons",
            "id": 15182,
            "node_id": "MDQ6VXNlcjE1MTgy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ericclemmons",
            "html_url": "https://github.com/ericclemmons",
            "followers_url": "https://api.github.com/users/ericclemmons/followers",
            "following_url": "https://api.github.com/users/ericclemmons/following{/other_user}",
            "gists_url": "https://api.github.com/users/ericclemmons/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ericclemmons/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ericclemmons/subscriptions",
            "organizations_url": "https://api.github.com/users/ericclemmons/orgs",
            "repos_url": "https://api.github.com/users/ericclemmons/repos",
            "events_url": "https://api.github.com/users/ericclemmons/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ericclemmons/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-29T15:41:26Z",
        "updated_at": "2016-04-29T15:41:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman Let me know if you'd like any other changes!\n\n> https://github.com/ericclemmons/seamless-immutable/blob/123-from/README.md#immutablefrom \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215766918",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/126#issuecomment-215766918",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/126",
        "id": 215766918,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTc2NjkxOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-29T15:43:24Z",
        "updated_at": "2016-04-29T15:43:24Z",
        "author_association": "OWNER",
        "body": "Lovely, thank you! :smile:\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215806998",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/126#issuecomment-215806998",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/126",
        "id": 215806998,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTgwNjk5OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-29T16:54:56Z",
        "updated_at": "2016-04-29T16:54:56Z",
        "author_association": "OWNER",
        "body": "@ericclemmons published as 6.1.0!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/215996227",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/124#issuecomment-215996227",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/124",
        "id": 215996227,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTk5NjIyNw==",
        "user": {
            "login": "Snowshield",
            "id": 15171474,
            "node_id": "MDQ6VXNlcjE1MTcxNDc0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/15171474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Snowshield",
            "html_url": "https://github.com/Snowshield",
            "followers_url": "https://api.github.com/users/Snowshield/followers",
            "following_url": "https://api.github.com/users/Snowshield/following{/other_user}",
            "gists_url": "https://api.github.com/users/Snowshield/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Snowshield/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Snowshield/subscriptions",
            "organizations_url": "https://api.github.com/users/Snowshield/orgs",
            "repos_url": "https://api.github.com/users/Snowshield/repos",
            "events_url": "https://api.github.com/users/Snowshield/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Snowshield/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-30T21:22:31Z",
        "updated_at": "2016-04-30T21:22:31Z",
        "author_association": "NONE",
        "body": "> Why do those need to be methods? Why not implement them as standalone functions that accept the immutable data as arguments?\n\nThese methods can be not pure, use another methods of the object and methods from parent class etc. By skipping prototypes all inner logic turns off. So we should work with object like with json and not like with class instance.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/216973418",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/122#issuecomment-216973418",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/122",
        "id": 216973418,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjk3MzQxOA==",
        "user": {
            "login": "ericclemmons",
            "id": 15182,
            "node_id": "MDQ6VXNlcjE1MTgy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ericclemmons",
            "html_url": "https://github.com/ericclemmons",
            "followers_url": "https://api.github.com/users/ericclemmons/followers",
            "following_url": "https://api.github.com/users/ericclemmons/following{/other_user}",
            "gists_url": "https://api.github.com/users/ericclemmons/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ericclemmons/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ericclemmons/subscriptions",
            "organizations_url": "https://api.github.com/users/ericclemmons/orgs",
            "repos_url": "https://api.github.com/users/ericclemmons/repos",
            "events_url": "https://api.github.com/users/ericclemmons/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ericclemmons/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-04T19:24:16Z",
        "updated_at": "2016-05-04T19:24:16Z",
        "author_association": "CONTRIBUTOR",
        "body": "I'm curious about this as well.  It just came up as we were looking to leverage this project within our Redux reducers.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/217308839",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/127#issuecomment-217308839",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/127",
        "id": 217308839,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMwODgzOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-05T23:28:23Z",
        "updated_at": "2016-05-05T23:28:23Z",
        "author_association": "OWNER",
        "body": "> I realize that a feature that would allow this sort of nested mutation might go against the philosophy of this module, but I thought I'd suggest it anyway :smile:.\n\nAs you predicted, I'm not open to introducing mutations. \ud83d\ude09  Appreciate the thoughtful post though!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/217309213",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/124#issuecomment-217309213",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/124",
        "id": 217309213,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMwOTIxMw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-05T23:30:36Z",
        "updated_at": "2016-05-05T23:30:36Z",
        "author_association": "OWNER",
        "body": "Sorry, but it seems like the right answer here is to stick to using `Immutable` values as plain old data, which makes great sense to me. I'm gonna close this.\n\nThank you for the discussion!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/217309654",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/128#issuecomment-217309654",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/128",
        "id": 217309654,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMwOTY1NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-05T23:33:15Z",
        "updated_at": "2016-05-05T23:33:15Z",
        "author_association": "OWNER",
        "body": "Those benchmarks are using `seamless-immutable`'s development build (they must be, since the prod build wouldn't pass the tests he posted), and the development build goes out of its way to freeze things and bans mutating methods.\n\nThe production build doesn't do these things. It's very close to \"using plain old arrays and objects\" in terms of performance, and I don't feel like trying to do better than that is a good goal for the library. \ud83d\ude04 \n\nThanks for the post!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/217309714",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/123#issuecomment-217309714",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/123",
        "id": 217309714,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMwOTcxNA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-05T23:33:37Z",
        "updated_at": "2016-05-05T23:33:37Z",
        "author_association": "OWNER",
        "body": "Released in 6.1.0. Thanks again @ericclemmons!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/217973103",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/129#issuecomment-217973103",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/129",
        "id": 217973103,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzk3MzEwMw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-09T20:03:43Z",
        "updated_at": "2016-05-09T20:03:43Z",
        "author_association": "OWNER",
        "body": "Seems reasonable as long as it's only for numbers. Calling `String.valueOf` on e.g. `null` would seem more likely to mask errors than avoid them.\n\nI'd gladly accept a PR for this! \ud83d\ude04 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/218141590",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/130#issuecomment-218141590",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/130",
        "id": 218141590,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxODE0MTU5MA==",
        "user": {
            "login": "tad-lispy",
            "id": 1684495,
            "node_id": "MDQ6VXNlcjE2ODQ0OTU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1684495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tad-lispy",
            "html_url": "https://github.com/tad-lispy",
            "followers_url": "https://api.github.com/users/tad-lispy/followers",
            "following_url": "https://api.github.com/users/tad-lispy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tad-lispy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tad-lispy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tad-lispy/subscriptions",
            "organizations_url": "https://api.github.com/users/tad-lispy/orgs",
            "repos_url": "https://api.github.com/users/tad-lispy/repos",
            "events_url": "https://api.github.com/users/tad-lispy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tad-lispy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-10T12:24:15Z",
        "updated_at": "2016-05-10T12:24:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "Maybe it's a good reason to revisit #81?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/219230393",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/129#issuecomment-219230393",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/129",
        "id": 219230393,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTIzMDM5Mw==",
        "user": {
            "login": "kalafut",
            "id": 211880,
            "node_id": "MDQ6VXNlcjIxMTg4MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/211880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kalafut",
            "html_url": "https://github.com/kalafut",
            "followers_url": "https://api.github.com/users/kalafut/followers",
            "following_url": "https://api.github.com/users/kalafut/following{/other_user}",
            "gists_url": "https://api.github.com/users/kalafut/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kalafut/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kalafut/subscriptions",
            "organizations_url": "https://api.github.com/users/kalafut/orgs",
            "repos_url": "https://api.github.com/users/kalafut/repos",
            "events_url": "https://api.github.com/users/kalafut/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kalafut/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-14T16:45:13Z",
        "updated_at": "2016-05-14T16:45:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "OK, I'll work on it.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/219550208",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/132#issuecomment-219550208",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/132",
        "id": 219550208,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTU1MDIwOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-16T21:14:48Z",
        "updated_at": "2016-05-16T21:14:48Z",
        "author_association": "OWNER",
        "body": "Looks great, thanks @kalafut!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/219551932",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/131#issuecomment-219551932",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/131",
        "id": 219551932,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTU1MTkzMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-16T21:21:41Z",
        "updated_at": "2016-05-16T21:21:41Z",
        "author_association": "OWNER",
        "body": "Thanks for your work on this @lzrski!\n\nLooking at this implementation, I think something like #81 is the right solution to #130. One problem with this approach is that you'll get opposite behavior in development builds compared to production builds; in development mode, your property gets added with no problem, but in production mode, it gets overridden! This is error-prone to say the least. \ud83d\ude09 \n\n#81 seems to be the best solution to this (assuming it can work; seems like there might be issues with arrays, but not sure without experimenting), and that seems like the right path to go down here.\n\nThanks again!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/219629217",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/131#issuecomment-219629217",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/131",
        "id": 219629217,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTYyOTIxNw==",
        "user": {
            "login": "tad-lispy",
            "id": 1684495,
            "node_id": "MDQ6VXNlcjE2ODQ0OTU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1684495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tad-lispy",
            "html_url": "https://github.com/tad-lispy",
            "followers_url": "https://api.github.com/users/tad-lispy/followers",
            "following_url": "https://api.github.com/users/tad-lispy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tad-lispy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tad-lispy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tad-lispy/subscriptions",
            "organizations_url": "https://api.github.com/users/tad-lispy/orgs",
            "repos_url": "https://api.github.com/users/tad-lispy/repos",
            "events_url": "https://api.github.com/users/tad-lispy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tad-lispy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-17T06:19:27Z",
        "updated_at": "2016-05-17T06:19:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "Didn't thought about development vs. production aspect before. I fully agree - #81 is the ultimate way. Thanks for taking time to look at it.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/219631428",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/130#issuecomment-219631428",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/130",
        "id": 219631428,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTYzMTQyOA==",
        "user": {
            "login": "tad-lispy",
            "id": 1684495,
            "node_id": "MDQ6VXNlcjE2ODQ0OTU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1684495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tad-lispy",
            "html_url": "https://github.com/tad-lispy",
            "followers_url": "https://api.github.com/users/tad-lispy/followers",
            "following_url": "https://api.github.com/users/tad-lispy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tad-lispy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tad-lispy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tad-lispy/subscriptions",
            "organizations_url": "https://api.github.com/users/tad-lispy/orgs",
            "repos_url": "https://api.github.com/users/tad-lispy/repos",
            "events_url": "https://api.github.com/users/tad-lispy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tad-lispy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-17T06:34:44Z",
        "updated_at": "2016-05-17T06:34:44Z",
        "author_association": "CONTRIBUTOR",
        "body": "Given prior discussion at #131 it seems like correct solution to this problem is to add Immutable specific methods to the constructor (aka making them static). This was previously proposed in #81 .\n\n---\n\nDo you think that methods should be defined only on the constructor, or also on instances?\n\nThe constructor only approach seems more elegant, but would be a serious breaking change.\n\nWith constructor + instance approach, we still have to figure out how collisions with original object properties should be resolved. Also things like that:\n\n``` javascript\nimmutable_instance.merge({ without: \"data\" })\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/219777271",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-219777271",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 219777271,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTc3NzI3MQ==",
        "user": {
            "login": "pleimann",
            "id": 3093333,
            "node_id": "MDQ6VXNlcjMwOTMzMzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3093333?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pleimann",
            "html_url": "https://github.com/pleimann",
            "followers_url": "https://api.github.com/users/pleimann/followers",
            "following_url": "https://api.github.com/users/pleimann/following{/other_user}",
            "gists_url": "https://api.github.com/users/pleimann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pleimann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pleimann/subscriptions",
            "organizations_url": "https://api.github.com/users/pleimann/orgs",
            "repos_url": "https://api.github.com/users/pleimann/repos",
            "events_url": "https://api.github.com/users/pleimann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pleimann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-17T16:38:27Z",
        "updated_at": "2016-05-17T16:40:14Z",
        "author_association": "NONE",
        "body": "@zivni You can declare a type which is the intersection of MyType and SeamlessImmutable.ImmutableObjectMethods<MyType> so you won't need to use the '&' everywhere.\n\n```\ninterface MyType {\n    code: number;\n    message: string;\n};\n\ntype ImmutableMyType = MyType & SeamlessImmutable.ImmutableObjectMethods<MyType>;\n\nlet mt: ImmutableMyType = {\n    code: 1000,\n    message: 'It works!'\n};\n\nmt = mt.merge({message: 'It still works!'});\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/221010335",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/122#issuecomment-221010335",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/122",
        "id": 221010335,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTAxMDMzNQ==",
        "user": {
            "login": "jbmeslin",
            "id": 4965570,
            "node_id": "MDQ6VXNlcjQ5NjU1NzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4965570?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbmeslin",
            "html_url": "https://github.com/jbmeslin",
            "followers_url": "https://api.github.com/users/jbmeslin/followers",
            "following_url": "https://api.github.com/users/jbmeslin/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbmeslin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbmeslin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbmeslin/subscriptions",
            "organizations_url": "https://api.github.com/users/jbmeslin/orgs",
            "repos_url": "https://api.github.com/users/jbmeslin/repos",
            "events_url": "https://api.github.com/users/jbmeslin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbmeslin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-23T15:27:07Z",
        "updated_at": "2016-05-23T15:31:08Z",
        "author_association": "NONE",
        "body": "today,  i do something like this:\n\n//reducer.js\n\n```\n       return state.merge({\n            nestedObject: utils.updateNested(state.nestedObject, state.index, action.val),\n            otherVal: {}\n\n        });\n```\n\n//utils.js\n\n```\n    static updateNested(nestedObject, index, val) {\n        return nestedObject.updateIn(['list', index], (item) => {\n\n        return item.merge({\n            attr1: val.,\n            att2: undefined  // or other props in val     \n        });\n\n    });\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/221050039",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/95#issuecomment-221050039",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/95",
        "id": 221050039,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTA1MDAzOQ==",
        "user": {
            "login": "estaub",
            "id": 1131334,
            "node_id": "MDQ6VXNlcjExMzEzMzQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1131334?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/estaub",
            "html_url": "https://github.com/estaub",
            "followers_url": "https://api.github.com/users/estaub/followers",
            "following_url": "https://api.github.com/users/estaub/following{/other_user}",
            "gists_url": "https://api.github.com/users/estaub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/estaub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/estaub/subscriptions",
            "organizations_url": "https://api.github.com/users/estaub/orgs",
            "repos_url": "https://api.github.com/users/estaub/repos",
            "events_url": "https://api.github.com/users/estaub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/estaub/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-23T18:10:50Z",
        "updated_at": "2016-05-23T18:10:50Z",
        "author_association": "NONE",
        "body": "(noob here, hopefully not too off-topic) It would be good to know (without testing) whether static object/array methods like Object.keys() will work.  Nothing in the readme leads me to guess one way or the other.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/221057675",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/122#issuecomment-221057675",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/122",
        "id": 221057675,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTA1NzY3NQ==",
        "user": {
            "login": "ericclemmons",
            "id": 15182,
            "node_id": "MDQ6VXNlcjE1MTgy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ericclemmons",
            "html_url": "https://github.com/ericclemmons",
            "followers_url": "https://api.github.com/users/ericclemmons/followers",
            "following_url": "https://api.github.com/users/ericclemmons/following{/other_user}",
            "gists_url": "https://api.github.com/users/ericclemmons/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ericclemmons/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ericclemmons/subscriptions",
            "organizations_url": "https://api.github.com/users/ericclemmons/orgs",
            "repos_url": "https://api.github.com/users/ericclemmons/repos",
            "events_url": "https://api.github.com/users/ericclemmons/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ericclemmons/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-23T18:39:25Z",
        "updated_at": "2016-05-23T18:39:25Z",
        "author_association": "CONTRIBUTOR",
        "body": "I wish dot-delimited keys worked to have something like this:\n\n``` js\nstate.deepMerge({\n  \"attr1\": val,\n  \"attr2\": undefined,\n  \"some.deep.attr\": { otherVal },\n  \"some.other.deep\": \"awwww snap!\",\n});\n```\n\nThat's what I dig about [selectn](https://github.com/wilmoore/selectn.js#overview), but that's just a selector lib.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/221059267",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/95#issuecomment-221059267",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/95",
        "id": 221059267,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTA1OTI2Nw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-23T18:45:09Z",
        "updated_at": "2016-05-23T18:45:09Z",
        "author_association": "COLLABORATOR",
        "body": "@estaub yes, they will work. All objects and arrays are normal javascript objects and arrays with the exception that they are frozen and mutating methods throw errors.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/226654347",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/133#issuecomment-226654347",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/133",
        "id": 226654347,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjY1NDM0Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-17T00:50:45Z",
        "updated_at": "2016-06-17T00:50:45Z",
        "author_association": "OWNER",
        "body": "No plans, but seems plausible.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/227784553",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/128#issuecomment-227784553",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/128",
        "id": 227784553,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzc4NDU1Mw==",
        "user": {
            "login": "braco",
            "id": 2449172,
            "node_id": "MDQ6VXNlcjI0NDkxNzI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2449172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/braco",
            "html_url": "https://github.com/braco",
            "followers_url": "https://api.github.com/users/braco/followers",
            "following_url": "https://api.github.com/users/braco/following{/other_user}",
            "gists_url": "https://api.github.com/users/braco/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/braco/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/braco/subscriptions",
            "organizations_url": "https://api.github.com/users/braco/orgs",
            "repos_url": "https://api.github.com/users/braco/repos",
            "events_url": "https://api.github.com/users/braco/events{/privacy}",
            "received_events_url": "https://api.github.com/users/braco/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-22T15:39:21Z",
        "updated_at": "2016-06-22T15:39:21Z",
        "author_association": "NONE",
        "body": "@rtfeldman: just FYI, docs were updated to use production seamless-immutable, claims it's still faster:\n\nhttps://github.com/guigrpa/timm\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/227824064",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/128#issuecomment-227824064",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/128",
        "id": 227824064,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzgyNDA2NA==",
        "user": {
            "login": "guigrpa",
            "id": 2129481,
            "node_id": "MDQ6VXNlcjIxMjk0ODE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2129481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guigrpa",
            "html_url": "https://github.com/guigrpa",
            "followers_url": "https://api.github.com/users/guigrpa/followers",
            "following_url": "https://api.github.com/users/guigrpa/following{/other_user}",
            "gists_url": "https://api.github.com/users/guigrpa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guigrpa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guigrpa/subscriptions",
            "organizations_url": "https://api.github.com/users/guigrpa/orgs",
            "repos_url": "https://api.github.com/users/guigrpa/repos",
            "events_url": "https://api.github.com/users/guigrpa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guigrpa/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-22T17:52:10Z",
        "updated_at": "2018-09-05T21:44:58Z",
        "author_association": "NONE",
        "body": "My benchmark code is here: https://github.com/guigrpa/timm/blob/master/tools/benchmarks.js\r\n\r\nIn principle I'm using the Production build, so I was also surprised by the results, but they seem to be consistent in Windows and OS X. I don't know the reason for the slow array results.\r\n\r\nOf course, if the benchmarks are wrong I will publish the updated results!\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/227826036",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/128#issuecomment-227826036",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/128",
        "id": 227826036,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzgyNjAzNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-22T17:58:44Z",
        "updated_at": "2016-06-22T17:58:44Z",
        "author_association": "OWNER",
        "body": "That's cool! @guigrpa I appreciate your showing your work. \ud83d\ude38 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/228192890",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/136#issuecomment-228192890",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/136",
        "id": 228192890,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyODE5Mjg5MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-23T21:40:30Z",
        "updated_at": "2016-06-23T21:40:30Z",
        "author_association": "OWNER",
        "body": "Done! Sorry for the oversight. \ud83d\ude05 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/228788321",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/136#issuecomment-228788321",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/136",
        "id": 228788321,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyODc4ODMyMQ==",
        "user": {
            "login": "jamesoh",
            "id": 3802497,
            "node_id": "MDQ6VXNlcjM4MDI0OTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3802497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesoh",
            "html_url": "https://github.com/jamesoh",
            "followers_url": "https://api.github.com/users/jamesoh/followers",
            "following_url": "https://api.github.com/users/jamesoh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesoh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesoh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesoh/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesoh/orgs",
            "repos_url": "https://api.github.com/users/jamesoh/repos",
            "events_url": "https://api.github.com/users/jamesoh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesoh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-27T15:52:53Z",
        "updated_at": "2016-06-27T15:52:53Z",
        "author_association": "NONE",
        "body": "No problem, thanks!\n\nOn Thu, Jun 23, 2016 at 2:40 PM, Richard Feldman notifications@github.com\nwrote:\n\n> Closed #136 https://github.com/rtfeldman/seamless-immutable/issues/136.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/rtfeldman/seamless-immutable/issues/136#event-702517213,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/ADoFgSBJjxD4spUZ03HGy_pD3O7S0zcIks5qOv1PgaJpZM4I7_dZ\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/228838648",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/118#issuecomment-228838648",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/118",
        "id": 228838648,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyODgzODY0OA==",
        "user": {
            "login": "jeffbski",
            "id": 5689,
            "node_id": "MDQ6VXNlcjU2ODk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffbski",
            "html_url": "https://github.com/jeffbski",
            "followers_url": "https://api.github.com/users/jeffbski/followers",
            "following_url": "https://api.github.com/users/jeffbski/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffbski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffbski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffbski/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffbski/orgs",
            "repos_url": "https://api.github.com/users/jeffbski/repos",
            "events_url": "https://api.github.com/users/jeffbski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffbski/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-27T18:48:00Z",
        "updated_at": "2016-06-27T18:48:00Z",
        "author_association": "NONE",
        "body": "I believe the question is asking whether there is anything like the Immutable.js cursor library for seamless. https://github.com/facebook/immutable-js/tree/master/contrib/cursor\n\nWith immutable.js and cursors you can easily create an atom that when you update things via the cursor the listeners fire automatically telling you of new state. Things are still immutable and all. Using immstruct makes that real easy to setup. \n\nWith the js-atom approach above you have to make changes from the top, possibly using a deep path, while with the cursor approach, you get cursors which are pointing to deep structure and you call update right on them which in turn causes new immutable atom to be created and listeners to fire.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/228839237",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/122#issuecomment-228839237",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/122",
        "id": 228839237,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyODgzOTIzNw==",
        "user": {
            "login": "jeffbski",
            "id": 5689,
            "node_id": "MDQ6VXNlcjU2ODk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffbski",
            "html_url": "https://github.com/jeffbski",
            "followers_url": "https://api.github.com/users/jeffbski/followers",
            "following_url": "https://api.github.com/users/jeffbski/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffbski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffbski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffbski/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffbski/orgs",
            "repos_url": "https://api.github.com/users/jeffbski/repos",
            "events_url": "https://api.github.com/users/jeffbski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffbski/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-27T18:50:01Z",
        "updated_at": "2016-06-27T18:50:01Z",
        "author_association": "NONE",
        "body": "Maybe something like immutable.js's withMutations() would be a nice addition to the api for this?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/228844561",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/7#issuecomment-228844561",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/7",
        "id": 228844561,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyODg0NDU2MQ==",
        "user": {
            "login": "jeffbski",
            "id": 5689,
            "node_id": "MDQ6VXNlcjU2ODk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffbski",
            "html_url": "https://github.com/jeffbski",
            "followers_url": "https://api.github.com/users/jeffbski/followers",
            "following_url": "https://api.github.com/users/jeffbski/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffbski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffbski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffbski/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffbski/orgs",
            "repos_url": "https://api.github.com/users/jeffbski/repos",
            "events_url": "https://api.github.com/users/jeffbski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffbski/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-27T19:09:23Z",
        "updated_at": "2016-06-27T19:09:23Z",
        "author_association": "NONE",
        "body": "Has the benchmark been redone to use prod mode yet? It would be interesting to see how things compare.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/228983720",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/122#issuecomment-228983720",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/122",
        "id": 228983720,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyODk4MzcyMA==",
        "user": {
            "login": "jbmeslin",
            "id": 4965570,
            "node_id": "MDQ6VXNlcjQ5NjU1NzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4965570?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbmeslin",
            "html_url": "https://github.com/jbmeslin",
            "followers_url": "https://api.github.com/users/jbmeslin/followers",
            "following_url": "https://api.github.com/users/jbmeslin/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbmeslin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbmeslin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbmeslin/subscriptions",
            "organizations_url": "https://api.github.com/users/jbmeslin/orgs",
            "repos_url": "https://api.github.com/users/jbmeslin/repos",
            "events_url": "https://api.github.com/users/jbmeslin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbmeslin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-28T08:21:50Z",
        "updated_at": "2016-06-28T08:21:50Z",
        "author_association": "NONE",
        "body": "The withMutations function is used when we need to update a tree with a loop ? All changes are done first in a mutable object and at the end apply on the initial object ? I think if we can have a deepMerge function which one do something like withMutations it will be great. \n\nI say that because in a large team, in a large application, some dev are not (javascript) expert and making the choice to use a withMutations or not can be tricky.   \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/230975295",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-230975295",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 230975295,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDk3NTI5NQ==",
        "user": {
            "login": "dsebastien",
            "id": 89887,
            "node_id": "MDQ6VXNlcjg5ODg3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/89887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsebastien",
            "html_url": "https://github.com/dsebastien",
            "followers_url": "https://api.github.com/users/dsebastien/followers",
            "following_url": "https://api.github.com/users/dsebastien/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsebastien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsebastien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsebastien/subscriptions",
            "organizations_url": "https://api.github.com/users/dsebastien/orgs",
            "repos_url": "https://api.github.com/users/dsebastien/repos",
            "events_url": "https://api.github.com/users/dsebastien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsebastien/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-07T04:17:50Z",
        "updated_at": "2016-07-07T04:17:50Z",
        "author_association": "NONE",
        "body": "Did you guys make any progress on this one?\n\nWe've decided to use seamless-immutable @ work but we would like to have typings.\nI'm willing to help work on the typings, so if you have any update, don't hesitate to share (gist?)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/231017832",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-231017832",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 231017832,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTAxNzgzMg==",
        "user": {
            "login": "jonaskello",
            "id": 664076,
            "node_id": "MDQ6VXNlcjY2NDA3Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/664076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonaskello",
            "html_url": "https://github.com/jonaskello",
            "followers_url": "https://api.github.com/users/jonaskello/followers",
            "following_url": "https://api.github.com/users/jonaskello/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonaskello/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonaskello/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonaskello/subscriptions",
            "organizations_url": "https://api.github.com/users/jonaskello/orgs",
            "repos_url": "https://api.github.com/users/jonaskello/repos",
            "events_url": "https://api.github.com/users/jonaskello/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonaskello/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-07T08:39:58Z",
        "updated_at": "2016-07-07T08:39:58Z",
        "author_association": "NONE",
        "body": "Here are the latest typings we have, although we do not use them on our project yet:\n\n``` js\ndeclare module 'seamless-immutable' {\n    interface AsMutableOptions {\n        deep:boolean;\n    }\n\n    interface ImmutableCommonMethods<T> {\n        setIn<U extends T>(keys:Array<string|number>, value:any):T | U;\n        merge<U>(obj:U):T & U;\n    }\n\n    export interface ImmutableObjectMethods<T> extends ImmutableCommonMethods<T> {\n        asMutable():T;\n        asMutable(asMutableOptions:AsMutableOptions):T;\n        set<U extends T>(key:string, value:any):U;\n        setIn<U extends T>(key:Array<string>, value:any):U;\n        update<U extends T>(key:string, updaterFunction:(value:any) => any):U;\n        update<U extends T>(key:string, updaterFunction:(value:any, additionalParameter1:any) => any, arg1:any):U;\n        update<U extends T>(key:string, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any) => any, arg1:any, arg2:any):U;\n        update<U extends T>(key:string, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any, additionalParameter3:any) => any, arg1:any, arg2:any, arg3:any):U;\n        update<U extends T>(key:string, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any, additionalParameter3:any, additionalParameter4:any) => any, arg1:any, arg2:any, arg3:any, arg4:any):U;\n        updateIn<U extends T>(key:Array<string>, updaterFunction:(value:any) => any):U;\n        updateIn<U extends T>(key:Array<string>, updaterFunction:(value:any, additionalParameter1:any) => any, arg1:any):U;\n        updateIn<U extends T>(key:Array<string>, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any) => any, arg1:any, arg2:any):U;\n        updateIn<U extends T>(key:Array<string>, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any, additionalParameter3:any) => any, arg1:any, arg2:any, arg3:any):U;\n        updateIn<U extends T>(key:Array<string>, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any, additionalParameter3:any, additionalParameter4:any) => any, arg1:any, arg2:any, arg3:any):U;\n        without<U>(key:string):U;\n        without<U>(keys:string[]):U;\n        without<U>(...args:string[]):U;\n        without<U>(keyFunction:(value:any, key:string) => boolean):U;\n    }\n\n    export interface ImmutableArrayMethods<T> extends ImmutableCommonMethods<T>, Array<T> {\n        set<T>(index:number, value:any):Array<T>;\n        asMutable():Array<T>;\n        asMutable(asMutableOptions:AsMutableOptions):Array<T>;\n        asObject<U>(toKeyValue:(item:T) => Array<Array<any>>):U;\n        flatMap<U>(mapFunction:(item:T) => Array<U>):U;\n    }\n\n    export function from<T>(obj: Array<T>, options?: any): Array<T> & ImmutableArrayMethods<T>;\n    export function from<T>(obj: T, options?: any): T & ImmutableObjectMethods<T>;\n\n    export function isImmutable(target: any): boolean;\n    export function ImmutableError(message: string): Error;\n}\n```\n\nIf I recall correctly we had trouble with the default exported function so we skipped doing typings for that and instead went with using the from() method as it is a named export which is easier to do typings for. So usage would be something like:\n\n``` js\nimport * as SI from 'seamless-immutable'\n\nconst myImmutable = SI.from(myObj);\n```\n\nAs a side note I am also looking into alternate ways of achieving immutability in typescript. I have found two ways so far. First you can in ts 2.0 (or at least in 1.9 pre-release) declare your interfaces as readonly like this:\n\n``` js\ninterface Foo {\n    readonly x:string,\n    readonly y:number\n}\n```\n\nSecond you can try to achieve immutability by tslint rules. I am doing some work on that [here](https://github.com/jonaskello/tslint-immutable).\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/231122518",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-231122518",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 231122518,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTEyMjUxOA==",
        "user": {
            "login": "zivni",
            "id": 12896422,
            "node_id": "MDQ6VXNlcjEyODk2NDIy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12896422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zivni",
            "html_url": "https://github.com/zivni",
            "followers_url": "https://api.github.com/users/zivni/followers",
            "following_url": "https://api.github.com/users/zivni/following{/other_user}",
            "gists_url": "https://api.github.com/users/zivni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zivni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zivni/subscriptions",
            "organizations_url": "https://api.github.com/users/zivni/orgs",
            "repos_url": "https://api.github.com/users/zivni/repos",
            "events_url": "https://api.github.com/users/zivni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zivni/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-07T15:53:32Z",
        "updated_at": "2016-07-07T15:53:32Z",
        "author_association": "NONE",
        "body": "Thanks for the update.\nI like to keep the typing (interfaces and so) in a separate module. that way I can just reference the directly without import.\nWith  `type Immutable = { <T>(obj: Array<T>, options?: any)`... as I posted above I can use SI(myObj) without the from function.\n\nHere is my typing after I've included missing typing that @jonaskello  added:\n\n```\ndeclare module SeamlessImmutable {\n    interface DeepMutate {\n        deep: boolean\n    }\n    interface ImmutableCommonMethods<T> {\n        setIn?<U extends T>(keys: Array<string | number>, value: any): T | U;\n        merge?<U>(obj: U, options?: DeepMutate): T & U;\n    }\n\n    interface ImmutableObjectMethods<T> extends ImmutableCommonMethods<T> {\n        set?<U extends T>(key: string, value: any): U;\n        asMutable?(): T;\n        asMutable?(AsMutableOptions): T;\n        without?<U>(key: string): U;\n        without?<U>(keys: string[]): U;\n        without?<U>(...args: string[]): U;\n        without?<U>(keyFunction: (value: any, key: string) => boolean): U;\n    }\n\n    interface ImmutableArrayMethods<T> extends ImmutableCommonMethods<T>, Array<T> {\n        set?<T>(index: number, value: any): Array<T>;\n        asMutable?(): Array<T>;\n        asMutable?(DeepMutate): Array<T>;\n        asObject?<U>(toKeyValue: (item: T) => Array<Array<any>>): U;\n        flatMap?<U>(mapFunction: (item: T) => Array<U>)\n    }\n}\n\ndeclare module 'seamless-immutable' {\n    type Immutable = {\n        <T>(obj: Array<T>, options?: any): SeamlessImmutable.ImmutableArrayMethods<T>;\n        <T>(obj: T, options?: any): T & SeamlessImmutable.ImmutableObjectMethods<T>;\n        isImmutable(target: any): boolean;\n        ImmutableError(message: string): Error;\n        from<T>(obj: Array<T>, options?: any): SeamlessImmutable.ImmutableArrayMethods<T>;\n        from<T>(obj: T, options?: any): T & SeamlessImmutable.ImmutableObjectMethods<T>;\n    }\n\n    var Immutable: Immutable;\n    export = Immutable;\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/231123550",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-231123550",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 231123550,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTEyMzU1MA==",
        "user": {
            "login": "dsebastien",
            "id": 89887,
            "node_id": "MDQ6VXNlcjg5ODg3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/89887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsebastien",
            "html_url": "https://github.com/dsebastien",
            "followers_url": "https://api.github.com/users/dsebastien/followers",
            "following_url": "https://api.github.com/users/dsebastien/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsebastien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsebastien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsebastien/subscriptions",
            "organizations_url": "https://api.github.com/users/dsebastien/orgs",
            "repos_url": "https://api.github.com/users/dsebastien/repos",
            "events_url": "https://api.github.com/users/dsebastien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsebastien/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-07T15:56:14Z",
        "updated_at": "2016-07-07T15:56:14Z",
        "author_association": "NONE",
        "body": "Thanks a lot @jonaskello. I spent all morning battling against those typings and couldn't find a way to re-export a type corresponding to the Immutable object returned by seamless-immutable... just like you said.\n\nYour comment helped me move forward.\n\nHere's what I've ended up with:\n\n```\ndeclare module \"seamless-immutable\" {\n                interface ImmutableCommonMethods<T>{\n                               setIn?(propertyPath: Array<string|number>, value: any): Immutable<T>;\n                               merge?(part: T): Immutable<T>;\n                }\n\n                export interface ImmutableObject<T> extends ImmutableCommonMethods<T> {\n                               set(property: string, value: any): Immutable<T>;\n                               setIn(propertyPath:Array<string>, value:any):Immutable<T>;\n\n                               asMutable(): T;\n                               asMutable(opts:AsMutableOptions): T;\n\n                               update(property:string, updaterFunction:(value:any) => any):Immutable<T>;\n                               update(property:string, updaterFunction:(value:any, additionalParameter1:any) => any, arg1:any):Immutable<T>;\n                               update(property:string, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any) => any, arg1:any, arg2:any):Immutable<T>;\n                               update(property:string, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any, additionalParameter3:any) => any, arg1:any, arg2:any, arg3:any):Immutable<T>;\n                               update(property:string, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any, additionalParameter3:any, additionalParameter4:any) => any, arg1:any, arg2:any, arg3:any, arg4:any):Immutable<T>;\n\n                               updateIn(propertyPath:Array<string>, updaterFunction:(value:any) => any):Immutable<T>;\n                               updateIn(propertyPath:Array<string>, updaterFunction:(value:any, additionalParameter1:any) => any, arg1:any):Immutable<T>;\n                               updateIn(propertyPath:Array<string>, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any) => any, arg1:any, arg2:any):Immutable<T>;\n                               updateIn(propertyPath:Array<string>, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any, additionalParameter3:any) => any, arg1:any, arg2:any, arg3:any):Immutable<T>;\n                               updateIn(propertyPath:Array<string>, updaterFunction:(value:any, additionalParameter1:any, additionalParameter2:any, additionalParameter3:any, additionalParameter4:any) => any, arg1:any, arg2:any, arg3:any):Immutable<T>;\n\n                               without(property:string):Immutable<T>;\n                               without(propertyPath:string[]):Immutable<T>;\n                               without(...properties:string[]):Immutable<T>;\n                               without(filter:(value:any, key:string) => boolean):Immutable<T>;\n                }\n\n                export interface ImmutableArray<T> extends ImmutableCommonMethods<T> {\n                               set(index: number, value: any): ImmutableArray<T>;\n                               asMutable(): Array<T>;\n                               asMutable(opts:AsMutableOptions): Array<T>;\n                               asObject(toKeyValue: (item: T) => Array<Array<any>>): ImmutableArray<T>;\n                               flatMap(mapFunction: (item: T) => ImmutableArray<T>): any;\n\n                               // TODO review methods (missing ones for arrays?)\n                }\n\n                interface Options {\n                               prototype?: any;\n                }\n\n                interface AsMutableOptions {\n                               deep: boolean;\n                }\n\n                // an immutable object is both of Type T (i.e., looks like a normal T) and of type Immutable<T>\n                export type Immutable<T> = T & (ImmutableObject<T> | ImmutableArray<T>);\n\n                // TODO it would be ideal to be able to expose that type and have the variable available from client code\n                // couldn't figure out how to do this unfortunately\n                /*\n                export type SeamlessImmutable = {\n                               <T>(obj: T, options?: Options): T & ImmutableObject<T>;\n                               <T>(obj: Array<T>, options?: Options): Array<T> & ImmutableArray<T>;\n                               from:SeamlessImmutable;\n                               isImmutable(target: any): boolean;\n                               ImmutableError(message: string): Error;\n                };\n\n                export const Immutable: SeamlessImmutable;\n                */\n\n                export function from<T>(obj: T, options?: Options): T & ImmutableObject<T>;\n                export function from<T>(obj: Array<T>, options?: Options): Array<T> & ImmutableArray<T>;\n\n                export function isImmutable(target: any): boolean;\n                export function ImmutableError(message: string): Error;\n}\n```\n\nI'll try to take some time and publish those typings as an npm package.\nI also made a \"global\" version for cases where seamless-immutable is loaded as a script tag (i.e., when it attaches Immutable to the window object).\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/231124487",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-231124487",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 231124487,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTEyNDQ4Nw==",
        "user": {
            "login": "dsebastien",
            "id": 89887,
            "node_id": "MDQ6VXNlcjg5ODg3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/89887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsebastien",
            "html_url": "https://github.com/dsebastien",
            "followers_url": "https://api.github.com/users/dsebastien/followers",
            "following_url": "https://api.github.com/users/dsebastien/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsebastien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsebastien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsebastien/subscriptions",
            "organizations_url": "https://api.github.com/users/dsebastien/orgs",
            "repos_url": "https://api.github.com/users/dsebastien/repos",
            "events_url": "https://api.github.com/users/dsebastien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsebastien/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-07T15:58:57Z",
        "updated_at": "2016-07-07T15:58:57Z",
        "author_association": "NONE",
        "body": "The advantage of the above is that in my code I can import the same way you mentionned, but also import the Immutable type separately, which makes for a nicer TS API:\n\n```\nimport * as SeamlessImmutable from \"seamless-immutable\";\nimport {Immutable} from \"seamless-immutable\";\n...\nconst immutablePerson:Immutable<Person> = SeamlessImmutable.from(new Person());\n...\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/231128540",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-231128540",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 231128540,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTEyODU0MA==",
        "user": {
            "login": "jonaskello",
            "id": 664076,
            "node_id": "MDQ6VXNlcjY2NDA3Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/664076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonaskello",
            "html_url": "https://github.com/jonaskello",
            "followers_url": "https://api.github.com/users/jonaskello/followers",
            "following_url": "https://api.github.com/users/jonaskello/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonaskello/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonaskello/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonaskello/subscriptions",
            "organizations_url": "https://api.github.com/users/jonaskello/orgs",
            "repos_url": "https://api.github.com/users/jonaskello/repos",
            "events_url": "https://api.github.com/users/jonaskello/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonaskello/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-07T16:12:54Z",
        "updated_at": "2016-07-07T16:12:54Z",
        "author_association": "NONE",
        "body": "@zivni You may already be aware of this but if you want your typings global like that I would recommend using the `namespace` syntax instead. The `module` without quotes syntax is not preferred anymore (since ts 1.5). So instead of `declare module SeamlessImmutable { ...}` I would recommend `declare namespace SeamlessImmutable { ...}`. They are totally equivalent so technically it does not matter. You can read more in the official ts [documentation](https://www.typescriptlang.org/docs/handbook/modules.html):\n\n> A note about terminology: It\u2019s important to note that in TypeScript 1.5, the nomenclature has changed. \u201cInternal modules\u201d are now \u201cnamespaces\u201d. \u201cExternal modules\u201d are now simply \u201cmodules\u201d, as to align with ECMAScript 2015\u2019s terminology, (namely that module X { is equivalent to the now-preferred namespace X {).\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/231705190",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/102#issuecomment-231705190",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/102",
        "id": 231705190,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTcwNTE5MA==",
        "user": {
            "login": "LinusU",
            "id": 189580,
            "node_id": "MDQ6VXNlcjE4OTU4MA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/189580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LinusU",
            "html_url": "https://github.com/LinusU",
            "followers_url": "https://api.github.com/users/LinusU/followers",
            "following_url": "https://api.github.com/users/LinusU/following{/other_user}",
            "gists_url": "https://api.github.com/users/LinusU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LinusU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LinusU/subscriptions",
            "organizations_url": "https://api.github.com/users/LinusU/orgs",
            "repos_url": "https://api.github.com/users/LinusU/repos",
            "events_url": "https://api.github.com/users/LinusU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LinusU/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-11T11:05:08Z",
        "updated_at": "2016-07-11T11:05:16Z",
        "author_association": "NONE",
        "body": "@rtfeldman I just found out the hard way that there isn't a `mergeIn` method, I just assumed it was there :)\n\nI think that there are some very compelling use cases. A common pattern in redux is to have a object with all entities, and then use different set that just contains the ids that corresponds to those objects. e.g. I have this object\n\n``` js\n{\n  entities: {\n    '1': { ... },\n    '2': { ... },\n    '3': { ... },\n    ...\n  },\n  sets: {\n    active: [1, 6, 9, 31, ...]\n    needAction: [1, 3, 5, 6, ...]\n  }\n}\n```\n\nTo then add more entities is a simple merge on the entities obejct. But it's important that it's not a deep merge so that removed properties will get properly removed when updating the entities. A `mergeIn` function would be perfect now\n\n``` js\nfetch('/animals?needAction=true')\n  .then(res => res.json())\n  .then(Immutable)\n  .then(animals => {\n    return state\n      .setIn(['sets', 'needAction'], animals.map(animal => animal.id))\n      .mergeIn(['entities'], animals.asObject(animal => [animal.id, animal]))\n  }\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/231706243",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/135#issuecomment-231706243",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/135",
        "id": 231706243,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTcwNjI0Mw==",
        "user": {
            "login": "LinusU",
            "id": 189580,
            "node_id": "MDQ6VXNlcjE4OTU4MA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/189580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LinusU",
            "html_url": "https://github.com/LinusU",
            "followers_url": "https://api.github.com/users/LinusU/followers",
            "following_url": "https://api.github.com/users/LinusU/following{/other_user}",
            "gists_url": "https://api.github.com/users/LinusU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LinusU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LinusU/subscriptions",
            "organizations_url": "https://api.github.com/users/LinusU/orgs",
            "repos_url": "https://api.github.com/users/LinusU/repos",
            "events_url": "https://api.github.com/users/LinusU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LinusU/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-11T11:11:40Z",
        "updated_at": "2016-07-11T11:11:55Z",
        "author_association": "NONE",
        "body": "`RegExp` is immutable by default as far as I understand it.\n\n``` js\nvar a = new RegExp('a')\n\na.flags\n// \"\"\na.flags = 'g'\n// \"g\"\na.flags\n// \"\" (still empty)\n\na.source\n// \"a\"\na.source = 'b'\n// \"b\"\na.source\n// \"a\" (not modified)\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/231712650",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/102#issuecomment-231712650",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/102",
        "id": 231712650,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTcxMjY1MA==",
        "user": {
            "login": "smashercosmo",
            "id": 273283,
            "node_id": "MDQ6VXNlcjI3MzI4Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/273283?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smashercosmo",
            "html_url": "https://github.com/smashercosmo",
            "followers_url": "https://api.github.com/users/smashercosmo/followers",
            "following_url": "https://api.github.com/users/smashercosmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/smashercosmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smashercosmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smashercosmo/subscriptions",
            "organizations_url": "https://api.github.com/users/smashercosmo/orgs",
            "repos_url": "https://api.github.com/users/smashercosmo/repos",
            "events_url": "https://api.github.com/users/smashercosmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smashercosmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-11T11:49:27Z",
        "updated_at": "2016-07-11T11:49:27Z",
        "author_association": "NONE",
        "body": "@LinusU That kind of data manipulation should occur only in reducers. I would keep sets and entities in different state slices and handle them with different reducers. And you won't need mergeIn for it.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/231721980",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/102#issuecomment-231721980",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/102",
        "id": 231721980,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTcyMTk4MA==",
        "user": {
            "login": "LinusU",
            "id": 189580,
            "node_id": "MDQ6VXNlcjE4OTU4MA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/189580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LinusU",
            "html_url": "https://github.com/LinusU",
            "followers_url": "https://api.github.com/users/LinusU/followers",
            "following_url": "https://api.github.com/users/LinusU/following{/other_user}",
            "gists_url": "https://api.github.com/users/LinusU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LinusU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LinusU/subscriptions",
            "organizations_url": "https://api.github.com/users/LinusU/orgs",
            "repos_url": "https://api.github.com/users/LinusU/repos",
            "events_url": "https://api.github.com/users/LinusU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LinusU/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-11T12:37:28Z",
        "updated_at": "2016-07-11T12:37:28Z",
        "author_association": "NONE",
        "body": "Yes it should be done in a reducer, I just wanted to show some code that made more sense for people not coming from redux...\n\nI'm not use that I agree on having them in different reducers though, since the two properties are tightly coupled I don't see why they couldn't be manipulated by the same reducer?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/232613749",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/22#issuecomment-232613749",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/22",
        "id": 232613749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjYxMzc0OQ==",
        "user": {
            "login": "nin-jin",
            "id": 442988,
            "node_id": "MDQ6VXNlcjQ0Mjk4OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/442988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nin-jin",
            "html_url": "https://github.com/nin-jin",
            "followers_url": "https://api.github.com/users/nin-jin/followers",
            "following_url": "https://api.github.com/users/nin-jin/following{/other_user}",
            "gists_url": "https://api.github.com/users/nin-jin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nin-jin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nin-jin/subscriptions",
            "organizations_url": "https://api.github.com/users/nin-jin/orgs",
            "repos_url": "https://api.github.com/users/nin-jin/repos",
            "events_url": "https://api.github.com/users/nin-jin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nin-jin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-14T09:25:45Z",
        "updated_at": "2016-07-14T09:26:25Z",
        "author_association": "NONE",
        "body": "You can add method `sorted(fn)` that returns sorted copy of array.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/232808257",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/118#issuecomment-232808257",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/118",
        "id": 232808257,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjgwODI1Nw==",
        "user": {
            "login": "MartinSnyder",
            "id": 1706711,
            "node_id": "MDQ6VXNlcjE3MDY3MTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1706711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MartinSnyder",
            "html_url": "https://github.com/MartinSnyder",
            "followers_url": "https://api.github.com/users/MartinSnyder/followers",
            "following_url": "https://api.github.com/users/MartinSnyder/following{/other_user}",
            "gists_url": "https://api.github.com/users/MartinSnyder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MartinSnyder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MartinSnyder/subscriptions",
            "organizations_url": "https://api.github.com/users/MartinSnyder/orgs",
            "repos_url": "https://api.github.com/users/MartinSnyder/repos",
            "events_url": "https://api.github.com/users/MartinSnyder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MartinSnyder/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-14T22:13:54Z",
        "updated_at": "2016-07-14T22:13:54Z",
        "author_association": "NONE",
        "body": "> I believe the question is asking whether there is anything like the Immutable.js cursor library for seamless. https://github.com/facebook/immutable-js/tree/master/contrib/cursor\n\nI believe [Issue #18](https://github.com/rtfeldman/seamless-immutable/issues/18) is relevant.  In it, @rtfeldman says there are no plans for cursors to be part of this library.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/232816215",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/118#issuecomment-232816215",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/118",
        "id": 232816215,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjgxNjIxNQ==",
        "user": {
            "login": "MartinSnyder",
            "id": 1706711,
            "node_id": "MDQ6VXNlcjE3MDY3MTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1706711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MartinSnyder",
            "html_url": "https://github.com/MartinSnyder",
            "followers_url": "https://api.github.com/users/MartinSnyder/followers",
            "following_url": "https://api.github.com/users/MartinSnyder/following{/other_user}",
            "gists_url": "https://api.github.com/users/MartinSnyder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MartinSnyder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MartinSnyder/subscriptions",
            "organizations_url": "https://api.github.com/users/MartinSnyder/orgs",
            "repos_url": "https://api.github.com/users/MartinSnyder/repos",
            "events_url": "https://api.github.com/users/MartinSnyder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MartinSnyder/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-14T22:56:32Z",
        "updated_at": "2016-07-14T22:56:32Z",
        "author_association": "NONE",
        "body": "I just made a gist of a cursor I wrote around seamless-immutable.  Happy to submit a PR or publish an add-on if there is interest, but I don't want to clog the pipes with something that isn't needed.\n\nIn response to the original question, the top-level (Data) object allows subscribers to invoke \"onChange\" which is then invoked any time the managed data is updated via a cursor.\n\nhttps://gist.github.com/MartinSnyder/2e7d2ecde16d910f25926fc8f59fe25b\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/232817620",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/118#issuecomment-232817620",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/118",
        "id": 232817620,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjgxNzYyMA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-14T23:04:21Z",
        "updated_at": "2016-07-14T23:04:21Z",
        "author_association": "OWNER",
        "body": "I'd definitely publish as a separate package. I'd like to keep the core decoupled from extras where possible. \ud83d\ude04 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/235119235",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/140#issuecomment-235119235",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/140",
        "id": 235119235,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTExOTIzNQ==",
        "user": {
            "login": "lelandmiller",
            "id": 3421478,
            "node_id": "MDQ6VXNlcjM0MjE0Nzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3421478?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lelandmiller",
            "html_url": "https://github.com/lelandmiller",
            "followers_url": "https://api.github.com/users/lelandmiller/followers",
            "following_url": "https://api.github.com/users/lelandmiller/following{/other_user}",
            "gists_url": "https://api.github.com/users/lelandmiller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lelandmiller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lelandmiller/subscriptions",
            "organizations_url": "https://api.github.com/users/lelandmiller/orgs",
            "repos_url": "https://api.github.com/users/lelandmiller/repos",
            "events_url": "https://api.github.com/users/lelandmiller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lelandmiller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-25T23:38:46Z",
        "updated_at": "2016-07-25T23:38:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "Looks like the build failed to a credentials issue, not test failures:\n\n```\nZuul tried to run tests in saucelabs, however no saucelabs credentials were provided.\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/235736200",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/135#issuecomment-235736200",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/135",
        "id": 235736200,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTczNjIwMA==",
        "user": {
            "login": "corymartin",
            "id": 687518,
            "node_id": "MDQ6VXNlcjY4NzUxOA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/687518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/corymartin",
            "html_url": "https://github.com/corymartin",
            "followers_url": "https://api.github.com/users/corymartin/followers",
            "following_url": "https://api.github.com/users/corymartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/corymartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/corymartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/corymartin/subscriptions",
            "organizations_url": "https://api.github.com/users/corymartin/orgs",
            "repos_url": "https://api.github.com/users/corymartin/repos",
            "events_url": "https://api.github.com/users/corymartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/corymartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-27T22:05:54Z",
        "updated_at": "2016-07-27T22:05:54Z",
        "author_association": "NONE",
        "body": "This issue is also present with `Error`s - which is how I found my way here.\nPerhaps a solution like that in #31?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/236710508",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/138#issuecomment-236710508",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/138",
        "id": 236710508,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcxMDUwOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-01T21:16:55Z",
        "updated_at": "2016-08-01T21:16:55Z",
        "author_association": "OWNER",
        "body": "Closing since https://github.com/cdnjs/cdnjs/pull/8579 has been merged. \ud83c\udf89 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/236711461",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/137#issuecomment-236711461",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/137",
        "id": 236711461,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcxMTQ2MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-01T21:20:43Z",
        "updated_at": "2016-08-01T21:20:43Z",
        "author_association": "OWNER",
        "body": "I considered it, but I don't think this makes sense from a design perspective.\n\nI think it's important that the contents of a seamless-immutable value be actually immutable unless there are extremely good reasons for them not to be. The more exceptions to that rule that exist (currently Dates, functions, and React components - all for specific practical reasons that come up very often), the harder debugging gets.\n\nConsidering almost everyone either uses Immutable.js _or_ seamless-immutable, not both at once, I don't think this comes up anywhere near enough to justify special-casing.\n\nThanks for bringing it up though!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/236712300",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/135#issuecomment-236712300",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/135",
        "id": 236712300,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcxMjMwMA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-01T21:23:51Z",
        "updated_at": "2016-08-01T21:23:51Z",
        "author_association": "OWNER",
        "body": "I just looked into this in more depth and I realized it should be closed as a duplicate of https://github.com/rtfeldman/seamless-immutable/issues/124\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/236731630",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/137#issuecomment-236731630",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/137",
        "id": 236731630,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjczMTYzMA==",
        "user": {
            "login": "tleunen",
            "id": 1972567,
            "node_id": "MDQ6VXNlcjE5NzI1Njc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1972567?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tleunen",
            "html_url": "https://github.com/tleunen",
            "followers_url": "https://api.github.com/users/tleunen/followers",
            "following_url": "https://api.github.com/users/tleunen/following{/other_user}",
            "gists_url": "https://api.github.com/users/tleunen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tleunen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tleunen/subscriptions",
            "organizations_url": "https://api.github.com/users/tleunen/orgs",
            "repos_url": "https://api.github.com/users/tleunen/repos",
            "events_url": "https://api.github.com/users/tleunen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tleunen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-01T22:50:34Z",
        "updated_at": "2016-08-01T22:50:34Z",
        "author_association": "NONE",
        "body": "In my use case, I'm using both Immutable.js and seamless-immutable, because I'm using Draft.js, which use Immutable.js but in the rest of my application uses seamless-immutable.\n\nI was able to prevent seamless-immutable to change the immutable.js structure by adding a `__immutable_invariants_hold` property and a `asMutable` function on my object but this is a very hacky solution.\n\nIn a more general case though, what is the best way to add \"complex\" objects (in opposite of plain objects) in a seamless-immutable structure? I agree an immutable structure should be plain objects only but sometimes I have to put a complex object in there :/\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/237752541",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/140#issuecomment-237752541",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/140",
        "id": 237752541,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzc1MjU0MQ==",
        "user": {
            "login": "lelandmiller",
            "id": 3421478,
            "node_id": "MDQ6VXNlcjM0MjE0Nzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3421478?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lelandmiller",
            "html_url": "https://github.com/lelandmiller",
            "followers_url": "https://api.github.com/users/lelandmiller/followers",
            "following_url": "https://api.github.com/users/lelandmiller/following{/other_user}",
            "gists_url": "https://api.github.com/users/lelandmiller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lelandmiller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lelandmiller/subscriptions",
            "organizations_url": "https://api.github.com/users/lelandmiller/orgs",
            "repos_url": "https://api.github.com/users/lelandmiller/repos",
            "events_url": "https://api.github.com/users/lelandmiller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lelandmiller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-05T04:30:04Z",
        "updated_at": "2016-08-05T04:30:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "Just wanted to ping on this and see if anyone had any feedback.\n\nThanks :-)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/237773193",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/22#issuecomment-237773193",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/22",
        "id": 237773193,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzc3MzE5Mw==",
        "user": {
            "login": "Nickman87",
            "id": 870416,
            "node_id": "MDQ6VXNlcjg3MDQxNg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/870416?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nickman87",
            "html_url": "https://github.com/Nickman87",
            "followers_url": "https://api.github.com/users/Nickman87/followers",
            "following_url": "https://api.github.com/users/Nickman87/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nickman87/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nickman87/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nickman87/subscriptions",
            "organizations_url": "https://api.github.com/users/Nickman87/orgs",
            "repos_url": "https://api.github.com/users/Nickman87/repos",
            "events_url": "https://api.github.com/users/Nickman87/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nickman87/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-05T07:10:01Z",
        "updated_at": "2016-08-05T07:10:01Z",
        "author_association": "NONE",
        "body": "I like the idea of introducing additional methods to support the same functionality as original mutation methods, but have them return an immutable result instead as @nin-jin suggested.\nMaybe even more obvious like `sort_immutable()` so you should know what to expect from it?\nThis would remove the need for custom functions doing the same thing but requiring an additional dependency in your code.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/237916878",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/140#issuecomment-237916878",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/140",
        "id": 237916878,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzkxNjg3OA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-05T17:49:06Z",
        "updated_at": "2016-08-05T17:49:06Z",
        "author_association": "COLLABORATOR",
        "body": "@lelandmiller looks like a bug and a legit fix to me! @rtfeldman ?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/239747478",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/135#issuecomment-239747478",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/135",
        "id": 239747478,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTc0NzQ3OA==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-15T07:53:31Z",
        "updated_at": "2016-08-15T07:53:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman So this is duplicate of #124 but that was closed with \"won't fix\" with the explanation that Immutable should only store plain old data - i.e. that regular expressions, Errors etc. can not be included in an Immutable data structure. Correct?\n\nPerhaps, if that is the case, it should be clearly documented in the README and, even better, an exception should be thrown when trying to include any other then supported type of data (i.e. fail quickly and with a clear error message then later with a mysterious error). What do you think?\n\nAlso, according to the README, it is possible to include \"mutable\" elements of type Date, function, React component. That provides a simple workaround: instead of using `prop: RegExp(..)`, I could use `() => new RegExp()`. But wouldn't it be even better to expand this and allow the user to define what \"mutable\" data can be part of an Immutable data structure? Something like I proposed in `4.` above or something similar (a list of types/paths to leave as they are ...).\n\nThoughts?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/239808512",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-239808512",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 239808512,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTgwODUxMg==",
        "user": {
            "login": "ajhyndman",
            "id": 11449340,
            "node_id": "MDQ6VXNlcjExNDQ5MzQw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11449340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhyndman",
            "html_url": "https://github.com/ajhyndman",
            "followers_url": "https://api.github.com/users/ajhyndman/followers",
            "following_url": "https://api.github.com/users/ajhyndman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhyndman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhyndman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhyndman/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhyndman/orgs",
            "repos_url": "https://api.github.com/users/ajhyndman/repos",
            "events_url": "https://api.github.com/users/ajhyndman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhyndman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-15T13:58:42Z",
        "updated_at": "2016-08-15T13:58:42Z",
        "author_association": "NONE",
        "body": "@meandmax Do you mind if I use your definitions as the basis of a PR against seamless-immutable?  I think it would make seamless-immutable more attractive if it supported flow out of the box.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/240694337",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-240694337",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 240694337,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDY5NDMzNw==",
        "user": {
            "login": "ajhyndman",
            "id": 11449340,
            "node_id": "MDQ6VXNlcjExNDQ5MzQw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11449340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhyndman",
            "html_url": "https://github.com/ajhyndman",
            "followers_url": "https://api.github.com/users/ajhyndman/followers",
            "following_url": "https://api.github.com/users/ajhyndman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhyndman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhyndman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhyndman/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhyndman/orgs",
            "repos_url": "https://api.github.com/users/ajhyndman/repos",
            "events_url": "https://api.github.com/users/ajhyndman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhyndman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-18T11:16:07Z",
        "updated_at": "2016-08-18T11:29:33Z",
        "author_association": "NONE",
        "body": "I have played around with this a bit more.  I have had some success with an intersection-based declaration.\n\n``` js\n\n// libs/seamless-immutable.d.js\ndeclare module 'seamless-immutable' {\n  declare type Immutable<T: Object | Array<*>> = T & {\n    // Array methods\n    flatMap(fn: Function): Array<any>;\n    asObject(fn: Function): Object;\n    asMutable(): Array<any>;\n    // Object methods\n    merge(collection: Array<any> | Object, deep?: Object): Object;\n    set(key: string, value: any): Object;\n    setIn(keyPath: Array<string>, value: any): Object;\n    update(key: string, fn: Function): Object;\n    updateIn(keyPath: Array<string>, fn: Function): Object;\n    without(fn: Function): Object;\n    without(keys: Array<string>): Object;\n    without(...keys: Array<string>): Object;\n    asMutable(): Array<any> | Object;\n  };\n\n  declare function from<T: Object | Array<*>> (spec: T): Immutable<T>;\n\n  declare type Default = {\n    from: typeof from;\n    isImmutable: (x: *) => boolean\n  };\n\n  declare module.exports: Default;\n}\n\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/240763348",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/142#issuecomment-240763348",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/142",
        "id": 240763348,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDc2MzM0OA==",
        "user": {
            "login": "ajhyndman",
            "id": 11449340,
            "node_id": "MDQ6VXNlcjExNDQ5MzQw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11449340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhyndman",
            "html_url": "https://github.com/ajhyndman",
            "followers_url": "https://api.github.com/users/ajhyndman/followers",
            "following_url": "https://api.github.com/users/ajhyndman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhyndman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhyndman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhyndman/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhyndman/orgs",
            "repos_url": "https://api.github.com/users/ajhyndman/repos",
            "events_url": "https://api.github.com/users/ajhyndman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhyndman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-18T15:38:12Z",
        "updated_at": "2016-08-18T15:40:48Z",
        "author_association": "NONE",
        "body": "From my uninformed perspective, it looks like the real culprit here is that the `Immutable.from` factory is clobbering any pre-existing prototypes on objects we are freezing at any level of nesting.\n\nI assume that the motivation is to remove any unexpected avenues through which mutation could sneak in.  This seems sensible in most cases, but is destructive to some third-party APIs.\n\nI notice that the `seamless-immutable` API accepts a custom prototype in it's options object for this purpose.  I wonder if instead of accepting a single prototype to apply to everything, some of these issues might go away if the API accepts a function which can accept the pre-existing prototype and discard, preserve or augment it?\n\nThis seems like a reasonably accessible and non-invasive escape hatch to expose.  Any thoughts?\n\nhttps://github.com/rtfeldman/seamless-immutable/compare/master...ajhyndman:transform-prototype\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/240764952",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/137#issuecomment-240764952",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/137",
        "id": 240764952,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDc2NDk1Mg==",
        "user": {
            "login": "ajhyndman",
            "id": 11449340,
            "node_id": "MDQ6VXNlcjExNDQ5MzQw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11449340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhyndman",
            "html_url": "https://github.com/ajhyndman",
            "followers_url": "https://api.github.com/users/ajhyndman/followers",
            "following_url": "https://api.github.com/users/ajhyndman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhyndman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhyndman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhyndman/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhyndman/orgs",
            "repos_url": "https://api.github.com/users/ajhyndman/repos",
            "events_url": "https://api.github.com/users/ajhyndman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhyndman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-18T15:42:54Z",
        "updated_at": "2016-08-18T15:42:54Z",
        "author_association": "NONE",
        "body": "I'm also working with Draft.js and have the same issue!\n\nI wonder if a solution to #142 might be able to accomodate this use case too, via a slight API tweak.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/241552890",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/130#issuecomment-241552890",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/130",
        "id": 241552890,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTU1Mjg5MA==",
        "user": {
            "login": "mariusk",
            "id": 218612,
            "node_id": "MDQ6VXNlcjIxODYxMg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/218612?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mariusk",
            "html_url": "https://github.com/mariusk",
            "followers_url": "https://api.github.com/users/mariusk/followers",
            "following_url": "https://api.github.com/users/mariusk/following{/other_user}",
            "gists_url": "https://api.github.com/users/mariusk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mariusk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mariusk/subscriptions",
            "organizations_url": "https://api.github.com/users/mariusk/orgs",
            "repos_url": "https://api.github.com/users/mariusk/repos",
            "events_url": "https://api.github.com/users/mariusk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mariusk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-22T21:15:00Z",
        "updated_at": "2016-08-22T21:15:00Z",
        "author_association": "NONE",
        "body": "I'm late to the party, but I just migrated a code base from immutable.js to this and was immediately hit by one member deep in a object hierarchy named `set`.  On the one hand, migration was easy as some of the common API members have identical names and signatures as immutable.js (`setIn`), but unless anybody else have better ideas I would suggest some unlikely prefix or postfix for all method names or similar (e.g. `setInImm`, `imSetIn` or something like that).\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/242358436",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-242358436",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 242358436,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjM1ODQzNg==",
        "user": {
            "login": "MarkusKramer",
            "id": 1502825,
            "node_id": "MDQ6VXNlcjE1MDI4MjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1502825?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkusKramer",
            "html_url": "https://github.com/MarkusKramer",
            "followers_url": "https://api.github.com/users/MarkusKramer/followers",
            "following_url": "https://api.github.com/users/MarkusKramer/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkusKramer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkusKramer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkusKramer/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkusKramer/orgs",
            "repos_url": "https://api.github.com/users/MarkusKramer/repos",
            "events_url": "https://api.github.com/users/MarkusKramer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkusKramer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-25T11:46:26Z",
        "updated_at": "2016-08-25T11:46:26Z",
        "author_association": "NONE",
        "body": "Nice work. @dsebastien could you add your file to tsd/npm so that anyone can use it easily?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/243004455",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/145#issuecomment-243004455",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/145",
        "id": 243004455,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzAwNDQ1NQ==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-28T22:49:10Z",
        "updated_at": "2016-08-28T22:49:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "Tests appear to be passing on travis, seems like it is getting some configuration error after running them.\n\n```\nZuul tried to run tests in saucelabs, however no saucelabs credentials were provided.\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/244585071",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/130#issuecomment-244585071",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/130",
        "id": 244585071,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU4NTA3MQ==",
        "user": {
            "login": "suchipi",
            "id": 1341513,
            "node_id": "MDQ6VXNlcjEzNDE1MTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1341513?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suchipi",
            "html_url": "https://github.com/suchipi",
            "followers_url": "https://api.github.com/users/suchipi/followers",
            "following_url": "https://api.github.com/users/suchipi/following{/other_user}",
            "gists_url": "https://api.github.com/users/suchipi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suchipi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suchipi/subscriptions",
            "organizations_url": "https://api.github.com/users/suchipi/orgs",
            "repos_url": "https://api.github.com/users/suchipi/repos",
            "events_url": "https://api.github.com/users/suchipi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suchipi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-04T05:25:42Z",
        "updated_at": "2016-09-04T05:25:42Z",
        "author_association": "NONE",
        "body": "Ran into this same issue today (with `update`). It'd be nice if we could do:\n\n``` js\nimport Immutable, { merge } from \"seamless-immutable\";\n\nlet options = Immutable({ merge: \"true\" });\noptions = merge(options, { something: \"else\" });\nconsole.log(options); // { merge: true, something: \"else\" }\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/245761781",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/146#issuecomment-245761781",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/146",
        "id": 245761781,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTc2MTc4MQ==",
        "user": {
            "login": "tommoor",
            "id": 380914,
            "node_id": "MDQ6VXNlcjM4MDkxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/380914?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tommoor",
            "html_url": "https://github.com/tommoor",
            "followers_url": "https://api.github.com/users/tommoor/followers",
            "following_url": "https://api.github.com/users/tommoor/following{/other_user}",
            "gists_url": "https://api.github.com/users/tommoor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tommoor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tommoor/subscriptions",
            "organizations_url": "https://api.github.com/users/tommoor/orgs",
            "repos_url": "https://api.github.com/users/tommoor/repos",
            "events_url": "https://api.github.com/users/tommoor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tommoor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-08T22:28:31Z",
        "updated_at": "2016-09-08T22:28:31Z",
        "author_association": "NONE",
        "body": "This also happens in our environment - really frustrating as it makes it impossible to create Immutable arrays. I'd love to see your PR specs fixed up and merged!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/245805584",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/146#issuecomment-245805584",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/146",
        "id": 245805584,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTgwNTU4NA==",
        "user": {
            "login": "variant77",
            "id": 1872753,
            "node_id": "MDQ6VXNlcjE4NzI3NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1872753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/variant77",
            "html_url": "https://github.com/variant77",
            "followers_url": "https://api.github.com/users/variant77/followers",
            "following_url": "https://api.github.com/users/variant77/following{/other_user}",
            "gists_url": "https://api.github.com/users/variant77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/variant77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/variant77/subscriptions",
            "organizations_url": "https://api.github.com/users/variant77/orgs",
            "repos_url": "https://api.github.com/users/variant77/repos",
            "events_url": "https://api.github.com/users/variant77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/variant77/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-09T03:00:29Z",
        "updated_at": "2016-09-09T03:00:29Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for letting more know I was not the only one affected. At some point\nI was losing my mind over it.\n\nMy PR seem to be just fine, all the tests poss when I run them locally.\nThere is some configuration error in the repo that causes all PRs to fail.\n\nIf you want to use the fixed version before the PR is merged you can use my\nfork for now and subscribe to this thread to know when to switch back.\n\nOn Fri, Sep 9, 2016, 01:28 Tom Moor notifications@github.com wrote:\n\n> This also happens in our environment - really frustrating as it makes it\n> impossible to create Immutable arrays. I'd love to see your PR specs fixed\n> up and merged!\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/rtfeldman/seamless-immutable/issues/146#issuecomment-245761781,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AByTcZMvKNcMgJBZvBBxjR-D1lHYWlJZks5qoIwQgaJpZM4J0f39\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/246171631",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/147#issuecomment-246171631",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/147",
        "id": 246171631,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjE3MTYzMQ==",
        "user": {
            "login": "variant77",
            "id": 1872753,
            "node_id": "MDQ6VXNlcjE4NzI3NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1872753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/variant77",
            "html_url": "https://github.com/variant77",
            "followers_url": "https://api.github.com/users/variant77/followers",
            "following_url": "https://api.github.com/users/variant77/following{/other_user}",
            "gists_url": "https://api.github.com/users/variant77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/variant77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/variant77/subscriptions",
            "organizations_url": "https://api.github.com/users/variant77/orgs",
            "repos_url": "https://api.github.com/users/variant77/repos",
            "events_url": "https://api.github.com/users/variant77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/variant77/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-11T09:49:42Z",
        "updated_at": "2016-09-11T09:49:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman I'd love to get your input on this PR\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/246207142",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-246207142",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 246207142,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjIwNzE0Mg==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-11T21:52:23Z",
        "updated_at": "2016-09-11T21:52:23Z",
        "author_association": "NONE",
        "body": "@grabbou @ajhyndman \nCan you explain to a newbie how to use this?\n\nI am completely new to flow, and I am unfortunately blocked by seamless-immutable. I really just want seamless tow work with flow.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/246269556",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-246269556",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 246269556,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjI2OTU1Ng==",
        "user": {
            "login": "ajhyndman",
            "id": 11449340,
            "node_id": "MDQ6VXNlcjExNDQ5MzQw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11449340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhyndman",
            "html_url": "https://github.com/ajhyndman",
            "followers_url": "https://api.github.com/users/ajhyndman/followers",
            "following_url": "https://api.github.com/users/ajhyndman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhyndman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhyndman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhyndman/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhyndman/orgs",
            "repos_url": "https://api.github.com/users/ajhyndman/repos",
            "events_url": "https://api.github.com/users/ajhyndman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhyndman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-12T07:30:52Z",
        "updated_at": "2016-09-12T07:30:52Z",
        "author_association": "NONE",
        "body": "Hey @MoeSattler,\n\nYou should be able to take one of these declarations, copy it into a file (named something like `seamless-immutable.flow.js`) and drop it into a `flow/libs/` (or any other name) directory inside your project.  You can then add a reference to that directory under the `[libs]` heading in your .flowconfig file.\n\nIf I didn't explain that well enough, there are full directions for adding declaration files here:\nhttps://flowtype.org/docs/declarations.html#pointing-your-project-to-declarations\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/246282818",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-246282818",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 246282818,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjI4MjgxOA==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-12T08:35:39Z",
        "updated_at": "2016-09-12T08:35:39Z",
        "author_association": "NONE",
        "body": "@ajhyndman \nThanks! done that.\nSo how do I declare my data as Immutable? Just adding it to [libs] doesn't seem to fix it (used your solution)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/246716697",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-246716697",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 246716697,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjcxNjY5Nw==",
        "user": {
            "login": "ajhyndman",
            "id": 11449340,
            "node_id": "MDQ6VXNlcjExNDQ5MzQw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11449340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhyndman",
            "html_url": "https://github.com/ajhyndman",
            "followers_url": "https://api.github.com/users/ajhyndman/followers",
            "following_url": "https://api.github.com/users/ajhyndman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhyndman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhyndman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhyndman/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhyndman/orgs",
            "repos_url": "https://api.github.com/users/ajhyndman/repos",
            "events_url": "https://api.github.com/users/ajhyndman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhyndman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-13T15:18:01Z",
        "updated_at": "2016-09-13T15:18:01Z",
        "author_association": "NONE",
        "body": "@MoeSattler Calling `Immutable.from()` on your data should now return an instance of an `Immutable<-your-object-type->` which has methods available on it.\n\nThat said, I'm not a huge fan of my declaration.  I've recently been experimenting with pretending the seamless-immutable methods don't exist and using another library like [Ramda](http://ramdajs.com/0.22.1/index.html) to do my data manipulation.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/246958664",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-246958664",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 246958664,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk1ODY2NA==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-14T09:36:21Z",
        "updated_at": "2016-09-14T09:36:21Z",
        "author_association": "NONE",
        "body": "@ajhyndman \nCouldn't you in that case just use Object.freeze() instead of seamless?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/246987890",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-246987890",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 246987890,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk4Nzg5MA==",
        "user": {
            "login": "ajhyndman",
            "id": 11449340,
            "node_id": "MDQ6VXNlcjExNDQ5MzQw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11449340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhyndman",
            "html_url": "https://github.com/ajhyndman",
            "followers_url": "https://api.github.com/users/ajhyndman/followers",
            "following_url": "https://api.github.com/users/ajhyndman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhyndman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhyndman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhyndman/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhyndman/orgs",
            "repos_url": "https://api.github.com/users/ajhyndman/repos",
            "events_url": "https://api.github.com/users/ajhyndman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhyndman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-14T11:47:30Z",
        "updated_at": "2016-09-14T11:47:30Z",
        "author_association": "NONE",
        "body": "You could implement something a bit cheaper, yep!  I haven't bothered extracting the exception handling and recursive logic yet (or looking for something similar).\n\nSeamless-immutable is a pretty small, single file anyway.  If you find something great, I'd be keen to hear about it.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/247103752",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-247103752",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 247103752,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzEwMzc1Mg==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-14T18:06:44Z",
        "updated_at": "2016-09-14T18:10:15Z",
        "author_association": "NONE",
        "body": "@ajhyndman https://github.com/scottcorgan/immu\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/247244450",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/149#issuecomment-247244450",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/149",
        "id": 247244450,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzI0NDQ1MA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-15T06:14:34Z",
        "updated_at": "2016-09-15T06:14:34Z",
        "author_association": "COLLABORATOR",
        "body": "Using lodash works fine otherwise:\n\n```\nimport _get from 'lodash/get';\n\nconst foo = _get(state, 'bar.baz.foo', '');\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/247336986",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-247336986",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 247336986,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzMzNjk4Ng==",
        "user": {
            "login": "ajhyndman",
            "id": 11449340,
            "node_id": "MDQ6VXNlcjExNDQ5MzQw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11449340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhyndman",
            "html_url": "https://github.com/ajhyndman",
            "followers_url": "https://api.github.com/users/ajhyndman/followers",
            "following_url": "https://api.github.com/users/ajhyndman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhyndman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhyndman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhyndman/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhyndman/orgs",
            "repos_url": "https://api.github.com/users/ajhyndman/repos",
            "events_url": "https://api.github.com/users/ajhyndman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhyndman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-15T14:02:46Z",
        "updated_at": "2016-09-15T14:02:46Z",
        "author_association": "NONE",
        "body": "Oh, I like the list of similar libraries they link in the readme, too.  Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/247422607",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/149#issuecomment-247422607",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/149",
        "id": 247422607,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzQyMjYwNw==",
        "user": {
            "login": "geirsagberg",
            "id": 594564,
            "node_id": "MDQ6VXNlcjU5NDU2NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/594564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geirsagberg",
            "html_url": "https://github.com/geirsagberg",
            "followers_url": "https://api.github.com/users/geirsagberg/followers",
            "following_url": "https://api.github.com/users/geirsagberg/following{/other_user}",
            "gists_url": "https://api.github.com/users/geirsagberg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geirsagberg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geirsagberg/subscriptions",
            "organizations_url": "https://api.github.com/users/geirsagberg/orgs",
            "repos_url": "https://api.github.com/users/geirsagberg/repos",
            "events_url": "https://api.github.com/users/geirsagberg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geirsagberg/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-15T19:09:11Z",
        "updated_at": "2016-09-15T19:09:11Z",
        "author_association": "NONE",
        "body": "Thanks for the tip, will use that as a workaround!\n\nHowever, if seamless-immutable had a native `getIn`, the syntax would be more consistent with `setIn` etc, and we could also automatically wrap the fallback value as an Immutable.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/247544304",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-247544304",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 247544304,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzU0NDMwNA==",
        "user": {
            "login": "mnasyrov",
            "id": 445680,
            "node_id": "MDQ6VXNlcjQ0NTY4MA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/445680?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mnasyrov",
            "html_url": "https://github.com/mnasyrov",
            "followers_url": "https://api.github.com/users/mnasyrov/followers",
            "following_url": "https://api.github.com/users/mnasyrov/following{/other_user}",
            "gists_url": "https://api.github.com/users/mnasyrov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mnasyrov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mnasyrov/subscriptions",
            "organizations_url": "https://api.github.com/users/mnasyrov/orgs",
            "repos_url": "https://api.github.com/users/mnasyrov/repos",
            "events_url": "https://api.github.com/users/mnasyrov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mnasyrov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-16T08:17:26Z",
        "updated_at": "2016-09-16T08:17:26Z",
        "author_association": "NONE",
        "body": "It may be better to include the typings into seamless-immutable package itself (https://www.typescriptlang.org/docs/handbook/typings-for-npm-packages.html), thus no external tsd/npm package will be required.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/247556677",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-247556677",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 247556677,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzU1NjY3Nw==",
        "user": {
            "login": "dsebastien",
            "id": 89887,
            "node_id": "MDQ6VXNlcjg5ODg3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/89887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsebastien",
            "html_url": "https://github.com/dsebastien",
            "followers_url": "https://api.github.com/users/dsebastien/followers",
            "following_url": "https://api.github.com/users/dsebastien/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsebastien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsebastien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsebastien/subscriptions",
            "organizations_url": "https://api.github.com/users/dsebastien/orgs",
            "repos_url": "https://api.github.com/users/dsebastien/repos",
            "events_url": "https://api.github.com/users/dsebastien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsebastien/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-16T09:23:54Z",
        "updated_at": "2016-09-16T09:23:54Z",
        "author_association": "NONE",
        "body": "Actually I think typings should be in their own package. That's the way the TypeScript team pushes forward now with TS 2.0+ (see here: https://blogs.msdn.microsoft.com/typescript/2016/06/15/the-future-of-declaration-files/)\n\nThe reason is that people don't necessarily want to release a new version of a library because the typings are incomplete or buggy. I guess there are pros and cons to both approaches\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/247557538",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-247557538",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 247557538,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzU1NzUzOA==",
        "user": {
            "login": "jonaskello",
            "id": 664076,
            "node_id": "MDQ6VXNlcjY2NDA3Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/664076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonaskello",
            "html_url": "https://github.com/jonaskello",
            "followers_url": "https://api.github.com/users/jonaskello/followers",
            "following_url": "https://api.github.com/users/jonaskello/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonaskello/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonaskello/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonaskello/subscriptions",
            "organizations_url": "https://api.github.com/users/jonaskello/orgs",
            "repos_url": "https://api.github.com/users/jonaskello/repos",
            "events_url": "https://api.github.com/users/jonaskello/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonaskello/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-16T09:28:41Z",
        "updated_at": "2016-09-16T09:28:41Z",
        "author_association": "NONE",
        "body": "@dsebastien I was under the impression that the way moving forward is that the typings author should make a PR to the DefinitelyTyped repo, not produce his own npm package. Microsoft will then export DefinitelyTyped to @types npm packages automatically. Could you quote where it says they should be put in their own package?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/247563128",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-247563128",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 247563128,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzU2MzEyOA==",
        "user": {
            "login": "mnasyrov",
            "id": 445680,
            "node_id": "MDQ6VXNlcjQ0NTY4MA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/445680?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mnasyrov",
            "html_url": "https://github.com/mnasyrov",
            "followers_url": "https://api.github.com/users/mnasyrov/followers",
            "following_url": "https://api.github.com/users/mnasyrov/following{/other_user}",
            "gists_url": "https://api.github.com/users/mnasyrov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mnasyrov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mnasyrov/subscriptions",
            "organizations_url": "https://api.github.com/users/mnasyrov/orgs",
            "repos_url": "https://api.github.com/users/mnasyrov/repos",
            "events_url": "https://api.github.com/users/mnasyrov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mnasyrov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-16T09:58:36Z",
        "updated_at": "2016-09-16T09:58:36Z",
        "author_association": "NONE",
        "body": "@dsebastien I think it is good when something forces authors to keep complete and reliable typings). \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/247563931",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-247563931",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 247563931,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzU2MzkzMQ==",
        "user": {
            "login": "dsebastien",
            "id": 89887,
            "node_id": "MDQ6VXNlcjg5ODg3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/89887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsebastien",
            "html_url": "https://github.com/dsebastien",
            "followers_url": "https://api.github.com/users/dsebastien/followers",
            "following_url": "https://api.github.com/users/dsebastien/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsebastien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsebastien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsebastien/subscriptions",
            "organizations_url": "https://api.github.com/users/dsebastien/orgs",
            "repos_url": "https://api.github.com/users/dsebastien/repos",
            "events_url": "https://api.github.com/users/dsebastien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsebastien/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-16T10:02:39Z",
        "updated_at": "2016-09-16T10:02:39Z",
        "author_association": "NONE",
        "body": "@jonaskello might be the latest news, I don't know ^^\n@mnasyrov well I believe in TypeScript so I see its value, but developers of pure JS libs might simply not care enough ^^\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/248293201",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/143#issuecomment-248293201",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/143",
        "id": 248293201,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI5MzIwMQ==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-20T12:56:24Z",
        "updated_at": "2016-12-28T11:35:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "It also causes Babel to fail:\r\n\r\n```\r\n$ babel-node\r\n> var Immutable = require(\"seamless-immutable\");\r\n> (new Immutable.ImmutableError(\"xxxx\")).stack\r\nTypeError: Function.prototype.toString is not generic\r\n    at Function.toString (native)\r\n    at Function.toString (/Users/me/Work/project/node_modules/babel/node_modules/babel-core/node_modules/core-js/modules/$.redefine.js:26:62)\r\n    at Function.prepareStackTrace (/Users/me/Work/project/node_modules/babel/node_modules/babel-core/node_modules/source-map-support/source-map-support.js:303:16)\r\n    at repl:3:37\r\n    at Object.exports.runInThisContext (vm.js:54:17)\r\n    at _eval (/Users/me/Work/project/node_modules/babel/lib/_babel-node.js:86:26)\r\n```\r\n\r\nA standard error works without a problem: ```\r\n\r\n> (new Error(\"xxx\")).stack\r\n> 'Error: xxx\\n    at repl:3:1\\n    at Object.exports.runInThisContext (vm.js:54:17)\\n    at _eval (/Users/me/Work/project/node_modules/babel/lib/_babel-node.js:86:26)\\n    at REPLServer.replEval (/Users/me/Work/project/node_modules/babel/lib/_babel-node.js:169:14)\\n    at bound (domain.js:280:14)\\n    at REPLServer.runBound [as eval](domain.js:293:12)\\n    at REPLServer.<anonymous> (repl.js:393:12)\\n    at emitOne (events.js:77:13)\\n    at REPLServer.emit (events.js:169:7)\\n    at REPLServer.Interface._onLine (readline.js:210:10)'```\r\n\r\nTo troubleshoot the actual exception, you can temporarily do something like this (ES6):\r\n\r\n```js\r\nError.prepareStackTrace = function(error, stack) {\r\n    return stack.map(frame => `${frame.getTypeName() || ''}.${frame.getFunctionName() || \"<anonymous fn>\"} at ${frame.getFileName()}:${frame.getLineNumber()}`).join(\"\\n\");\r\n};\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/248382673",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/140#issuecomment-248382673",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/140",
        "id": 248382673,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODM4MjY3Mw==",
        "user": {
            "login": "lelandmiller",
            "id": 3421478,
            "node_id": "MDQ6VXNlcjM0MjE0Nzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3421478?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lelandmiller",
            "html_url": "https://github.com/lelandmiller",
            "followers_url": "https://api.github.com/users/lelandmiller/followers",
            "following_url": "https://api.github.com/users/lelandmiller/following{/other_user}",
            "gists_url": "https://api.github.com/users/lelandmiller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lelandmiller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lelandmiller/subscriptions",
            "organizations_url": "https://api.github.com/users/lelandmiller/orgs",
            "repos_url": "https://api.github.com/users/lelandmiller/repos",
            "events_url": "https://api.github.com/users/lelandmiller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lelandmiller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-20T18:04:22Z",
        "updated_at": "2016-09-20T18:04:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hey, @rtfeldman! just wanted to check in on this again to see if there is anything I could do to possibly get this in a published version of seamless-immutable.\n\nThanks!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/248478691",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/152#issuecomment-248478691",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/152",
        "id": 248478691,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODQ3ODY5MQ==",
        "user": {
            "login": "marbemac",
            "id": 847542,
            "node_id": "MDQ6VXNlcjg0NzU0Mg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/847542?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marbemac",
            "html_url": "https://github.com/marbemac",
            "followers_url": "https://api.github.com/users/marbemac/followers",
            "following_url": "https://api.github.com/users/marbemac/following{/other_user}",
            "gists_url": "https://api.github.com/users/marbemac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marbemac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marbemac/subscriptions",
            "organizations_url": "https://api.github.com/users/marbemac/orgs",
            "repos_url": "https://api.github.com/users/marbemac/repos",
            "events_url": "https://api.github.com/users/marbemac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marbemac/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-21T00:44:46Z",
        "updated_at": "2016-09-21T00:44:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "Also wasn't sure if I should include re-built distributions - let me know!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/249760687",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/147#issuecomment-249760687",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/147",
        "id": 249760687,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTc2MDY4Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-27T04:01:11Z",
        "updated_at": "2016-09-27T04:01:11Z",
        "author_association": "OWNER",
        "body": "Looks good! So sorry for the delay in merging this @variant77!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/250129434",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-250129434",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 250129434,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDEyOTQzNA==",
        "user": {
            "login": "cvle",
            "id": 14221600,
            "node_id": "MDQ6VXNlcjE0MjIxNjAw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/14221600?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cvle",
            "html_url": "https://github.com/cvle",
            "followers_url": "https://api.github.com/users/cvle/followers",
            "following_url": "https://api.github.com/users/cvle/following{/other_user}",
            "gists_url": "https://api.github.com/users/cvle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cvle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cvle/subscriptions",
            "organizations_url": "https://api.github.com/users/cvle/orgs",
            "repos_url": "https://api.github.com/users/cvle/repos",
            "events_url": "https://api.github.com/users/cvle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cvle/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-28T10:24:21Z",
        "updated_at": "2016-09-28T10:24:21Z",
        "author_association": "NONE",
        "body": "I'm experimenting with the types from @dsebastien.\n\nI added this definition:\n\n```\nexport function from<T, U>(obj: Array<T>, options?: Options): Array<T & U> & ImmutableArray<T>;\n```\n\nThis lets me do the following:\n\n```\nconst articleList = SeamlessImmutable.from<Article, ImmutableObject<Article>>(new Array<Article>(...articles));\narticleList[0].set(\"title\", \"anotherTitle\");\n```\n\nWhich is quite handy, otherwise I would need to do some ugly type casting to get the correct type for the elements in the array.\n\nMaybe the types in `ImmutableArray` can be more strict like in `set(index: number, value: any): ImmutableArray<T>;`, my thought was it should be `set(index: number, value: T): ImmutableArray<T>;`, but I'm a relative new user of this library, so I'm not really sure.\n\nIt'd be awesome if someone has the time to work on a PR on https://github.com/DefinitelyTyped/DefinitelyTyped.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/250239825",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/147#issuecomment-250239825",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/147",
        "id": 250239825,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDIzOTgyNQ==",
        "user": {
            "login": "brunolemos",
            "id": 619186,
            "node_id": "MDQ6VXNlcjYxOTE4Ng==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/619186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunolemos",
            "html_url": "https://github.com/brunolemos",
            "followers_url": "https://api.github.com/users/brunolemos/followers",
            "following_url": "https://api.github.com/users/brunolemos/following{/other_user}",
            "gists_url": "https://api.github.com/users/brunolemos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brunolemos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brunolemos/subscriptions",
            "organizations_url": "https://api.github.com/users/brunolemos/orgs",
            "repos_url": "https://api.github.com/users/brunolemos/repos",
            "events_url": "https://api.github.com/users/brunolemos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brunolemos/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-28T17:35:40Z",
        "updated_at": "2016-09-28T17:35:40Z",
        "author_association": "NONE",
        "body": "@rtfeldman please update the npm package :) \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/250661889",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/147#issuecomment-250661889",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/147",
        "id": 250661889,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDY2MTg4OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-30T05:28:32Z",
        "updated_at": "2016-09-30T05:28:32Z",
        "author_association": "OWNER",
        "body": "Released as 6.1.2 @brunolemos @variant77 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/250661968",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/146#issuecomment-250661968",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/146",
        "id": 250661968,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDY2MTk2OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-30T05:29:07Z",
        "updated_at": "2016-09-30T05:29:07Z",
        "author_association": "OWNER",
        "body": "@tommoor FYI @variant77's fix has been merged and released as 6.1.2!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/250800902",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/140#issuecomment-250800902",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/140",
        "id": 250800902,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDgwMDkwMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-30T17:14:59Z",
        "updated_at": "2016-09-30T17:14:59Z",
        "author_association": "OWNER",
        "body": "@lelandmiller really sorry I took so long getting to this! Looks good to me.\n\nIf you can resolve the merge conflicts I'll merge and publish this.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/250829488",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/152#issuecomment-250829488",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/152",
        "id": 250829488,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDgyOTQ4OA==",
        "user": {
            "login": "marbemac",
            "id": 847542,
            "node_id": "MDQ6VXNlcjg0NzU0Mg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/847542?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marbemac",
            "html_url": "https://github.com/marbemac",
            "followers_url": "https://api.github.com/users/marbemac/followers",
            "following_url": "https://api.github.com/users/marbemac/following{/other_user}",
            "gists_url": "https://api.github.com/users/marbemac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marbemac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marbemac/subscriptions",
            "organizations_url": "https://api.github.com/users/marbemac/orgs",
            "repos_url": "https://api.github.com/users/marbemac/repos",
            "events_url": "https://api.github.com/users/marbemac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marbemac/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-30T19:16:18Z",
        "updated_at": "2016-09-30T19:16:18Z",
        "author_association": "CONTRIBUTOR",
        "body": "Alrighty, updated! I included the dist files as well, but just realized you merged some changes into master earlier today - how would you like to handle it?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/250853508",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/152#issuecomment-250853508",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/152",
        "id": 250853508,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDg1MzUwOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-30T21:12:26Z",
        "updated_at": "2016-09-30T21:12:26Z",
        "author_association": "OWNER",
        "body": "@marbemac don't worry about the dist files; I always rebuild them before publishing. \ud83d\ude04 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/250855436",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/152#issuecomment-250855436",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/152",
        "id": 250855436,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDg1NTQzNg==",
        "user": {
            "login": "marbemac",
            "id": 847542,
            "node_id": "MDQ6VXNlcjg0NzU0Mg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/847542?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marbemac",
            "html_url": "https://github.com/marbemac",
            "followers_url": "https://api.github.com/users/marbemac/followers",
            "following_url": "https://api.github.com/users/marbemac/following{/other_user}",
            "gists_url": "https://api.github.com/users/marbemac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marbemac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marbemac/subscriptions",
            "organizations_url": "https://api.github.com/users/marbemac/orgs",
            "repos_url": "https://api.github.com/users/marbemac/repos",
            "events_url": "https://api.github.com/users/marbemac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marbemac/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-30T21:22:24Z",
        "updated_at": "2016-09-30T21:22:24Z",
        "author_association": "CONTRIBUTOR",
        "body": "Sweet! Thanks for reviewing this so quickly.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/250863086",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/152#issuecomment-250863086",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/152",
        "id": 250863086,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDg2MzA4Ng==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-30T22:03:43Z",
        "updated_at": "2016-09-30T22:03:43Z",
        "author_association": "OWNER",
        "body": "@marbemac can you reset the dist files to what's on `master` and push that to resolve the merge conflict?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/250868795",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/152#issuecomment-250868795",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/152",
        "id": 250868795,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDg2ODc5NQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-30T22:41:52Z",
        "updated_at": "2016-09-30T22:41:52Z",
        "author_association": "OWNER",
        "body": "Thanks @marbemac! Published as 6.1.3.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/251527870",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-251527870",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 251527870,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTUyNzg3MA==",
        "user": {
            "login": "alex3165",
            "id": 4259832,
            "node_id": "MDQ6VXNlcjQyNTk4MzI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4259832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex3165",
            "html_url": "https://github.com/alex3165",
            "followers_url": "https://api.github.com/users/alex3165/followers",
            "following_url": "https://api.github.com/users/alex3165/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex3165/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex3165/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex3165/subscriptions",
            "organizations_url": "https://api.github.com/users/alex3165/orgs",
            "repos_url": "https://api.github.com/users/alex3165/repos",
            "events_url": "https://api.github.com/users/alex3165/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex3165/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-04T22:06:49Z",
        "updated_at": "2016-10-04T22:06:49Z",
        "author_association": "NONE",
        "body": "I have opened this PR https://github.com/DefinitelyTyped/DefinitelyTyped/pull/11717 from @dsebastien work, I did some questionable choices and I am happy to reply to any questions. I hope it will help :)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/251561699",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/145#issuecomment-251561699",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/145",
        "id": 251561699,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTU2MTY5OQ==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-05T01:45:45Z",
        "updated_at": "2016-10-05T01:45:45Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman Bump, just checking if there is any chance this can be included in the library :-) I'm around if you have any comments.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/252102796",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-252102796",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 252102796,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjEwMjc5Ng==",
        "user": {
            "login": "alex3165",
            "id": 4259832,
            "node_id": "MDQ6VXNlcjQyNTk4MzI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4259832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex3165",
            "html_url": "https://github.com/alex3165",
            "followers_url": "https://api.github.com/users/alex3165/followers",
            "following_url": "https://api.github.com/users/alex3165/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex3165/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex3165/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex3165/subscriptions",
            "organizations_url": "https://api.github.com/users/alex3165/orgs",
            "repos_url": "https://api.github.com/users/alex3165/repos",
            "events_url": "https://api.github.com/users/alex3165/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex3165/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-06T22:09:10Z",
        "updated_at": "2016-10-06T22:09:10Z",
        "author_association": "NONE",
        "body": "For information the PR has been merged, feel free to open a new PR on DefinitelyTyped to improve the type definition file in case there are some quirks.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/252359767",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/101#issuecomment-252359767",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/101",
        "id": 252359767,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjM1OTc2Nw==",
        "user": {
            "login": "meta-meta",
            "id": 2626819,
            "node_id": "MDQ6VXNlcjI2MjY4MTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2626819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/meta-meta",
            "html_url": "https://github.com/meta-meta",
            "followers_url": "https://api.github.com/users/meta-meta/followers",
            "following_url": "https://api.github.com/users/meta-meta/following{/other_user}",
            "gists_url": "https://api.github.com/users/meta-meta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/meta-meta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/meta-meta/subscriptions",
            "organizations_url": "https://api.github.com/users/meta-meta/orgs",
            "repos_url": "https://api.github.com/users/meta-meta/repos",
            "events_url": "https://api.github.com/users/meta-meta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/meta-meta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-07T20:59:46Z",
        "updated_at": "2016-10-07T20:59:46Z",
        "author_association": "NONE",
        "body": "@rtfeldman why _not_ freeze in production? Is performance that much worse? Seems like this would lead to subtle bugs in edge cases when in production, we visit some old haunted code path without test coverage... Much like Luke's training scene in Empire. He decapitates Vader, which he assumes has been wrapped in immutable machinery only to discover his own face in place of Anakin's.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/253001743",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-253001743",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 253001743,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzAwMTc0Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-11T18:24:01Z",
        "updated_at": "2016-10-11T18:24:01Z",
        "author_association": "OWNER",
        "body": "Awesome! If @alex3165 if you'd like to open a PR to seamless-immutable to add a link to the typings in our README, I would be happy to accept it.\n\nThanks for all the hard work on this!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/253111776",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/140#issuecomment-253111776",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/140",
        "id": 253111776,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzExMTc3Ng==",
        "user": {
            "login": "lelandmiller",
            "id": 3421478,
            "node_id": "MDQ6VXNlcjM0MjE0Nzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3421478?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lelandmiller",
            "html_url": "https://github.com/lelandmiller",
            "followers_url": "https://api.github.com/users/lelandmiller/followers",
            "following_url": "https://api.github.com/users/lelandmiller/following{/other_user}",
            "gists_url": "https://api.github.com/users/lelandmiller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lelandmiller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lelandmiller/subscriptions",
            "organizations_url": "https://api.github.com/users/lelandmiller/orgs",
            "repos_url": "https://api.github.com/users/lelandmiller/repos",
            "events_url": "https://api.github.com/users/lelandmiller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lelandmiller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-12T03:47:56Z",
        "updated_at": "2016-10-12T03:47:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "Closing and continuing on #156.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/253113693",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/156#issuecomment-253113693",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/156",
        "id": 253113693,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzExMzY5Mw==",
        "user": {
            "login": "lelandmiller",
            "id": 3421478,
            "node_id": "MDQ6VXNlcjM0MjE0Nzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3421478?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lelandmiller",
            "html_url": "https://github.com/lelandmiller",
            "followers_url": "https://api.github.com/users/lelandmiller/followers",
            "following_url": "https://api.github.com/users/lelandmiller/following{/other_user}",
            "gists_url": "https://api.github.com/users/lelandmiller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lelandmiller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lelandmiller/subscriptions",
            "organizations_url": "https://api.github.com/users/lelandmiller/orgs",
            "repos_url": "https://api.github.com/users/lelandmiller/repos",
            "events_url": "https://api.github.com/users/lelandmiller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lelandmiller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-12T04:04:52Z",
        "updated_at": "2016-10-12T04:04:52Z",
        "author_association": "CONTRIBUTOR",
        "body": "Sorry for the slow response @rtfeldman. Fixed the merge conflicts, looks like the failure of CI is still due to missing saucelabs credentials.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/253278138",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/1#issuecomment-253278138",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/1",
        "id": 253278138,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI3ODEzOA==",
        "user": {
            "login": "juanger",
            "id": 5959,
            "node_id": "MDQ6VXNlcjU5NTk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juanger",
            "html_url": "https://github.com/juanger",
            "followers_url": "https://api.github.com/users/juanger/followers",
            "following_url": "https://api.github.com/users/juanger/following{/other_user}",
            "gists_url": "https://api.github.com/users/juanger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juanger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juanger/subscriptions",
            "organizations_url": "https://api.github.com/users/juanger/orgs",
            "repos_url": "https://api.github.com/users/juanger/repos",
            "events_url": "https://api.github.com/users/juanger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juanger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-12T17:17:51Z",
        "updated_at": "2016-10-12T17:17:51Z",
        "author_association": "NONE",
        "body": "@rtfeldman Hi, are you still interested in this? If so, I'd like to give it a try, rebase your branch and write tests\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/253321897",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/156#issuecomment-253321897",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/156",
        "id": 253321897,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMyMTg5Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-12T20:01:40Z",
        "updated_at": "2016-10-12T20:01:40Z",
        "author_association": "OWNER",
        "body": "Great, thank you @lelandmiller!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/253322634",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/156#issuecomment-253322634",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/156",
        "id": 253322634,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMyMjYzNA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-12T20:04:25Z",
        "updated_at": "2016-10-12T20:04:25Z",
        "author_association": "OWNER",
        "body": "Released as 6.1.4! \ud83c\udf89 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/253940679",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/156#issuecomment-253940679",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/156",
        "id": 253940679,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mzk0MDY3OQ==",
        "user": {
            "login": "lelandmiller",
            "id": 3421478,
            "node_id": "MDQ6VXNlcjM0MjE0Nzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3421478?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lelandmiller",
            "html_url": "https://github.com/lelandmiller",
            "followers_url": "https://api.github.com/users/lelandmiller/followers",
            "following_url": "https://api.github.com/users/lelandmiller/following{/other_user}",
            "gists_url": "https://api.github.com/users/lelandmiller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lelandmiller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lelandmiller/subscriptions",
            "organizations_url": "https://api.github.com/users/lelandmiller/orgs",
            "repos_url": "https://api.github.com/users/lelandmiller/repos",
            "events_url": "https://api.github.com/users/lelandmiller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lelandmiller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-14T23:08:45Z",
        "updated_at": "2016-10-14T23:08:45Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thank you!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254075216",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/130#issuecomment-254075216",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/130",
        "id": 254075216,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDA3NTIxNg==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-16T21:11:03Z",
        "updated_at": "2016-10-16T21:11:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "I have just submitted #158 to add static methods support in the `Immutable` constructor.\n\n```\nvar obj = Immutable.from({});\nImmutable.setIn(obj, ['key'], value);\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254099780",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/158#issuecomment-254099780",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/158",
        "id": 254099780,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDA5OTc4MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T02:39:49Z",
        "updated_at": "2016-10-17T02:39:49Z",
        "author_association": "OWNER",
        "body": "Wow, this looks great @saivann! \ud83d\ude3b Thank you so much!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254099936",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/155#issuecomment-254099936",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/155",
        "id": 254099936,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDA5OTkzNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T02:41:08Z",
        "updated_at": "2016-10-17T02:41:08Z",
        "author_association": "OWNER",
        "body": "@qzb that's only in there so that the development and production builds can be built using [envify](https://github.com/hughsk/envify) - once the builds are complete, that variable will be gone.\n\nIf you use either the development build or the production build, `process` should not be there, and you should be all set! \ud83d\ude03 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254100552",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/154#issuecomment-254100552",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/154",
        "id": 254100552,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwMDU1Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T02:46:59Z",
        "updated_at": "2016-10-17T02:46:59Z",
        "author_association": "OWNER",
        "body": "> I still think this is a valid issue\n\nI respectfully disagree. \ud83d\ude42\n\nFrom the original:\n\n> A `.merge` with `{deep: true}` of two identical objects that contain an array is returning a new object.\n\nI expect that changing this behavior would be a serious performance regression. You would have to do comparisons at every single step of the merge, to check whether anything had changed. That is not free, and we should not act as though it were!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254100609",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/150#issuecomment-254100609",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/150",
        "id": 254100609,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwMDYwOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T02:47:32Z",
        "updated_at": "2016-10-17T02:47:32Z",
        "author_association": "OWNER",
        "body": "Feel free to open a PR, but I don't think this is worth tracking as an issue.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254100755",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/144#issuecomment-254100755",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/144",
        "id": 254100755,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwMDc1NQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T02:48:55Z",
        "updated_at": "2016-10-17T02:49:07Z",
        "author_association": "OWNER",
        "body": "The only breaking change was cycle detection...so you're almost certainly fine to upgrade. \ud83d\ude04 \n\nhttps://github.com/rtfeldman/seamless-immutable/pull/119\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254100830",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/130#issuecomment-254100830",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/130",
        "id": 254100830,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwMDgzMA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T02:49:32Z",
        "updated_at": "2016-10-17T02:49:32Z",
        "author_association": "OWNER",
        "body": "Fixed by https://github.com/rtfeldman/seamless-immutable/pull/158\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254101422",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/141#issuecomment-254101422",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/141",
        "id": 254101422,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwMTQyMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T02:55:20Z",
        "updated_at": "2016-10-17T02:55:20Z",
        "author_association": "OWNER",
        "body": "There is now! See https://github.com/rtfeldman/seamless-immutable/pull/158\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254101668",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/142#issuecomment-254101668",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/142",
        "id": 254101668,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwMTY2OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T02:57:50Z",
        "updated_at": "2016-10-17T02:57:50Z",
        "author_association": "OWNER",
        "body": "This seems worth special-casing in the same way we currently do with Dates.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254101937",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/145#issuecomment-254101937",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/145",
        "id": 254101937,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwMTkzNw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T03:00:20Z",
        "updated_at": "2016-10-17T03:00:20Z",
        "author_association": "OWNER",
        "body": "Seems reasonable, and `deep-equals` seems like a trivially small dependency to add.\n\nIf you wouldn't mind resolving the merge conflicts, I'd be happy to merge this!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254104466",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/130#issuecomment-254104466",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/130",
        "id": 254104466,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwNDQ2Ng==",
        "user": {
            "login": "suchipi",
            "id": 1341513,
            "node_id": "MDQ6VXNlcjEzNDE1MTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1341513?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suchipi",
            "html_url": "https://github.com/suchipi",
            "followers_url": "https://api.github.com/users/suchipi/followers",
            "following_url": "https://api.github.com/users/suchipi/following{/other_user}",
            "gists_url": "https://api.github.com/users/suchipi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suchipi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suchipi/subscriptions",
            "organizations_url": "https://api.github.com/users/suchipi/orgs",
            "repos_url": "https://api.github.com/users/suchipi/repos",
            "events_url": "https://api.github.com/users/suchipi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suchipi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T03:25:34Z",
        "updated_at": "2016-10-17T03:26:58Z",
        "author_association": "NONE",
        "body": "Does #158 actually fix it? Just adding static methods won't prevent name collision from the instance methods that are also still present. The collision won't be truly fixed until the instance methods are also removed, which would be a breaking change (but a welcome one, in my opinion).\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254105612",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/130#issuecomment-254105612",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/130",
        "id": 254105612,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwNTYxMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T03:36:36Z",
        "updated_at": "2016-10-17T03:36:36Z",
        "author_association": "OWNER",
        "body": "Gotcha...I think a feature request for \"avoid clobbering existing fields\" makes sense.\n\nWant to open one? \ud83d\ude04 \n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254105878",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/145#issuecomment-254105878",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/145",
        "id": 254105878,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwNTg3OA==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T03:39:28Z",
        "updated_at": "2016-10-17T03:43:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman Just rebased with support for static methods in tests and .replace. Should be good to go.\n\n> Seems reasonable, and deep-equals seems like a trivially small dependency to add.\n\nYup and actually it's only a devDependency for test units. It is not used in the actual seamless-immutable code (tried to keep it as optimized as possible).\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254115259",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/159#issuecomment-254115259",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/159",
        "id": 254115259,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDExNTI1OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T05:24:19Z",
        "updated_at": "2016-10-17T05:24:19Z",
        "author_association": "OWNER",
        "body": "Lovely, thank you!\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254191402",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/130#issuecomment-254191402",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/130",
        "id": 254191402,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDE5MTQwMg==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T12:18:33Z",
        "updated_at": "2016-10-17T13:11:58Z",
        "author_association": "CONTRIBUTOR",
        "body": "Right so at least now there is a way to avoid this bug using the new syntax. Disabling the old syntax is pretty simple but indeed not a small breaking change.\n\nPerhaps as a first step the documentation can be updated to only document the new static syntax? We can also easily insert a \"Will be deprecated\" warning in the browser javascript console for the devel build when users continue using the existing instance syntax for a while?\n\nI am not sure if it is worth to actually disable that syntax in the near future as the disruption of this change is important for current users compared to the likeliness that a user experiences this bug.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254209732",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/130#issuecomment-254209732",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/130",
        "id": 254209732,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDIwOTczMg==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T13:38:23Z",
        "updated_at": "2016-10-17T13:44:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "Oh I see. I got this wrong, it is the custom properties that are getting lost, not the seamless-immutable instance methods. To allow overriding those, I guess we could set `writable` to `true` here. This would make new static methods fully working against all cases.\n\n```\n    Object.defineProperty(target, methodName, {\n      enumerable: false,\n      configurable: false,\n      writable: true,\n      value: value\n    });\n```\n\nI am happy to submit this, documentation update, test units, and deprecation warning, if @rtfeldman thinks this is a good approach to this problem.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254263146",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/130#issuecomment-254263146",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/130",
        "id": 254263146,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDI2MzE0Ng==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T16:44:06Z",
        "updated_at": "2016-10-17T16:44:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "PR to complete this fix https://github.com/rtfeldman/seamless-immutable/pull/160\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254294032",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-254294032",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 254294032,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDI5NDAzMg==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-17T18:35:56Z",
        "updated_at": "2016-10-17T18:35:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "@suchipi Thanks, just applied all requested changes and added more test units.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254654659",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/102#issuecomment-254654659",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/102",
        "id": 254654659,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDY1NDY1OQ==",
        "user": {
            "login": "braco",
            "id": 2449172,
            "node_id": "MDQ6VXNlcjI0NDkxNzI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2449172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/braco",
            "html_url": "https://github.com/braco",
            "followers_url": "https://api.github.com/users/braco/followers",
            "following_url": "https://api.github.com/users/braco/following{/other_user}",
            "gists_url": "https://api.github.com/users/braco/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/braco/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/braco/subscriptions",
            "organizations_url": "https://api.github.com/users/braco/orgs",
            "repos_url": "https://api.github.com/users/braco/repos",
            "events_url": "https://api.github.com/users/braco/events{/privacy}",
            "received_events_url": "https://api.github.com/users/braco/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-18T22:11:54Z",
        "updated_at": "2016-10-19T01:45:10Z",
        "author_association": "NONE",
        "body": "parent: { [parentId]: { children: { [id]: { ... } } } }\n\nstate.mergeIn(['parent', parentId, 'children', id], { merge me })\n\nIs there anything that would be as clean as mergeIn above? It would be nice to have a completely flattened state, but this isn't always desirable.\n\nwithoutIn(), and some array methods would also be nice.\n\nDealing with deeply nested items is a pain, and there are already some patterns to build from starting with setIn(). Immutable.js has lots of methods like mergeDeep(), so there is precedence API wise. I'm finding the time originally saved by having normal objects with seamless is being eaten away by actually manipulating the data.\n\nMaybe an alternative, more decorated version of seamless that adds convenience methods?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254792621",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/103#issuecomment-254792621",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/103",
        "id": 254792621,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDc5MjYyMQ==",
        "user": {
            "login": "slashwhatever",
            "id": 996667,
            "node_id": "MDQ6VXNlcjk5NjY2Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/996667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slashwhatever",
            "html_url": "https://github.com/slashwhatever",
            "followers_url": "https://api.github.com/users/slashwhatever/followers",
            "following_url": "https://api.github.com/users/slashwhatever/following{/other_user}",
            "gists_url": "https://api.github.com/users/slashwhatever/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slashwhatever/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slashwhatever/subscriptions",
            "organizations_url": "https://api.github.com/users/slashwhatever/orgs",
            "repos_url": "https://api.github.com/users/slashwhatever/repos",
            "events_url": "https://api.github.com/users/slashwhatever/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slashwhatever/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-19T12:03:15Z",
        "updated_at": "2016-10-19T12:03:15Z",
        "author_association": "NONE",
        "body": "Did this ever get implemented or discussed?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/254806551",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-254806551",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 254806551,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDgwNjU1MQ==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-19T13:06:10Z",
        "updated_at": "2016-10-19T13:06:10Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman Note; The migration to the new syntax is optional. I can easily drop the console.warn warnings from this PR if you prefer to keep supporting both syntax going forward.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/255241541",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/164#issuecomment-255241541",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/164",
        "id": 255241541,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTI0MTU0MQ==",
        "user": {
            "login": "nazar-pc",
            "id": 928965,
            "node_id": "MDQ6VXNlcjkyODk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/928965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazar-pc",
            "html_url": "https://github.com/nazar-pc",
            "followers_url": "https://api.github.com/users/nazar-pc/followers",
            "following_url": "https://api.github.com/users/nazar-pc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazar-pc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazar-pc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazar-pc/subscriptions",
            "organizations_url": "https://api.github.com/users/nazar-pc/orgs",
            "repos_url": "https://api.github.com/users/nazar-pc/repos",
            "events_url": "https://api.github.com/users/nazar-pc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazar-pc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-20T22:05:51Z",
        "updated_at": "2016-10-20T22:05:51Z",
        "author_association": "CONTRIBUTOR",
        "body": "Also depends on #117\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/255365807",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-255365807",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 255365807,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTM2NTgwNw==",
        "user": {
            "login": "cubabit",
            "id": 307829,
            "node_id": "MDQ6VXNlcjMwNzgyOQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/307829?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cubabit",
            "html_url": "https://github.com/cubabit",
            "followers_url": "https://api.github.com/users/cubabit/followers",
            "following_url": "https://api.github.com/users/cubabit/following{/other_user}",
            "gists_url": "https://api.github.com/users/cubabit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cubabit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cubabit/subscriptions",
            "organizations_url": "https://api.github.com/users/cubabit/orgs",
            "repos_url": "https://api.github.com/users/cubabit/repos",
            "events_url": "https://api.github.com/users/cubabit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cubabit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-21T12:23:27Z",
        "updated_at": "2016-10-21T13:14:21Z",
        "author_association": "NONE",
        "body": "How are you supposed to use the type definition in https://github.com/alex3165/DefinitelyTyped/blob/14740e2ee4239622065cbc674d793586f5cf24b7/seamless-immutable/seamless-immutable.d.ts?\n\nI have tried these:\n\n```\nimport Immutable from \"seamless-immutable\";\nimport {Immutable} from \"seamless-immutable\";\nimport * as Immutable from \"seamless-immutable\";\n```\n\nbut neither give me an Immutable function I can use:\n\n```\nconst state = Immutable({});\n```\n\nTypeScript says error **TS2349: Cannot invoke an expression whose type lacks a call signature**.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/255380859",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-255380859",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 255380859,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTM4MDg1OQ==",
        "user": {
            "login": "alex3165",
            "id": 4259832,
            "node_id": "MDQ6VXNlcjQyNTk4MzI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4259832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex3165",
            "html_url": "https://github.com/alex3165",
            "followers_url": "https://api.github.com/users/alex3165/followers",
            "following_url": "https://api.github.com/users/alex3165/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex3165/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex3165/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex3165/subscriptions",
            "organizations_url": "https://api.github.com/users/alex3165/orgs",
            "repos_url": "https://api.github.com/users/alex3165/repos",
            "events_url": "https://api.github.com/users/alex3165/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex3165/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-21T13:45:14Z",
        "updated_at": "2016-10-21T13:45:14Z",
        "author_association": "NONE",
        "body": "If you use typings to manage your type declaration file :\n\n```\ntypings install dt~seamless-immutable --save --global\n```\n\nor now with typescript 2 you can use npm to manage the types :\n\n```\nnpm install --save-dev @types/seamless-immutable\n```\n\nThen you have to import seamless-immutable like this :\n\n```\nimport * as SI from 'seamless-immutable';\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/255383887",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-255383887",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 255383887,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTM4Mzg4Nw==",
        "user": {
            "login": "cubabit",
            "id": 307829,
            "node_id": "MDQ6VXNlcjMwNzgyOQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/307829?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cubabit",
            "html_url": "https://github.com/cubabit",
            "followers_url": "https://api.github.com/users/cubabit/followers",
            "following_url": "https://api.github.com/users/cubabit/following{/other_user}",
            "gists_url": "https://api.github.com/users/cubabit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cubabit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cubabit/subscriptions",
            "organizations_url": "https://api.github.com/users/cubabit/orgs",
            "repos_url": "https://api.github.com/users/cubabit/repos",
            "events_url": "https://api.github.com/users/cubabit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cubabit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-21T13:57:19Z",
        "updated_at": "2016-10-21T13:57:19Z",
        "author_association": "NONE",
        "body": "Thanks, but now If I try and do:\n\n`const initialState = SI.Immutable({});`\n\nI get:\n\n**src/reducers/bookings/reducer.ts(10,22): error TS2349: Cannot invoke an expression whose type lacks a call signature.\nsrc/reducers/calendar/reducer.ts(10,25): error TS2339: Property 'Immutable' does not exist on type 'typeof SeamlessImmutable'.**\n\nI thought, looking at the code at https://github.com/rtfeldman/seamless-immutable there should be an `Immutable` function available?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/255385232",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-255385232",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 255385232,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTM4NTIzMg==",
        "user": {
            "login": "alex3165",
            "id": 4259832,
            "node_id": "MDQ6VXNlcjQyNTk4MzI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4259832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex3165",
            "html_url": "https://github.com/alex3165",
            "followers_url": "https://api.github.com/users/alex3165/followers",
            "following_url": "https://api.github.com/users/alex3165/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex3165/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex3165/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex3165/subscriptions",
            "organizations_url": "https://api.github.com/users/alex3165/orgs",
            "repos_url": "https://api.github.com/users/alex3165/repos",
            "events_url": "https://api.github.com/users/alex3165/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex3165/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-21T14:02:19Z",
        "updated_at": "2016-10-21T14:02:19Z",
        "author_association": "NONE",
        "body": "Try:\n\n```\n// for an object\nSI.from({});\n// for an array\nSI.from([])\n```\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/255386024",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-255386024",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 255386024,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTM4NjAyNA==",
        "user": {
            "login": "cubabit",
            "id": 307829,
            "node_id": "MDQ6VXNlcjMwNzgyOQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/307829?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cubabit",
            "html_url": "https://github.com/cubabit",
            "followers_url": "https://api.github.com/users/cubabit/followers",
            "following_url": "https://api.github.com/users/cubabit/following{/other_user}",
            "gists_url": "https://api.github.com/users/cubabit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cubabit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cubabit/subscriptions",
            "organizations_url": "https://api.github.com/users/cubabit/orgs",
            "repos_url": "https://api.github.com/users/cubabit/repos",
            "events_url": "https://api.github.com/users/cubabit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cubabit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-21T14:05:36Z",
        "updated_at": "2016-10-21T14:06:04Z",
        "author_association": "NONE",
        "body": "OK great - Thank you! At least I can get moving now! But why does using the typescript definition mean you can't used the documented interface?\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/255386966",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-255386966",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 255386966,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTM4Njk2Ng==",
        "user": {
            "login": "alex3165",
            "id": 4259832,
            "node_id": "MDQ6VXNlcjQyNTk4MzI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4259832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex3165",
            "html_url": "https://github.com/alex3165",
            "followers_url": "https://api.github.com/users/alex3165/followers",
            "following_url": "https://api.github.com/users/alex3165/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex3165/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex3165/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex3165/subscriptions",
            "organizations_url": "https://api.github.com/users/alex3165/orgs",
            "repos_url": "https://api.github.com/users/alex3165/repos",
            "events_url": "https://api.github.com/users/alex3165/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex3165/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-21T14:09:09Z",
        "updated_at": "2016-10-21T14:09:09Z",
        "author_association": "NONE",
        "body": "I have just ported the last type definition file from above to the definitelyTyped registry and cleaned it a bit so I am not too sure about this `from` choice. It is something that need to be fixed or documented indeed.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/257012021",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/122#issuecomment-257012021",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/122",
        "id": 257012021,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzAxMjAyMQ==",
        "user": {
            "login": "krzysztofpniak",
            "id": 2463068,
            "node_id": "MDQ6VXNlcjI0NjMwNjg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2463068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krzysztofpniak",
            "html_url": "https://github.com/krzysztofpniak",
            "followers_url": "https://api.github.com/users/krzysztofpniak/followers",
            "following_url": "https://api.github.com/users/krzysztofpniak/following{/other_user}",
            "gists_url": "https://api.github.com/users/krzysztofpniak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krzysztofpniak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krzysztofpniak/subscriptions",
            "organizations_url": "https://api.github.com/users/krzysztofpniak/orgs",
            "repos_url": "https://api.github.com/users/krzysztofpniak/repos",
            "events_url": "https://api.github.com/users/krzysztofpniak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krzysztofpniak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-28T19:49:15Z",
        "updated_at": "2016-10-28T20:02:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "@jeffbski the origin of immutable data structures is in functional programming paradigm. The whole thing is about not writing mutable code. You can check good functional languages like haskell, inside them there are no things like mutable structures.\n\nIn my opinion multiple `setIn` / `updateIn` is the way to go, but the users of the library and its author should be sure that this way is implemented with best performance as it can be(or close to this ;) ).\n\nSide note:\nseamless-immutable adds its functionality as instance methods. More functional way is to have it as static functions in module scope. Good place to have a look is [lodash/fp.](https://github.com/lodash/lodash/wiki/FP-Guide)\nThat way it could look like:\n`const modifyX = flowRight([\n    setIn(['a, 'b'], 1),\n    setIn([['c', 'd'], 2])\n]);\nconst newState = modifyX(oldState);`\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/257938222",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/118#issuecomment-257938222",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/118",
        "id": 257938222,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzkzODIyMg==",
        "user": {
            "login": "MartinSnyder",
            "id": 1706711,
            "node_id": "MDQ6VXNlcjE3MDY3MTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1706711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MartinSnyder",
            "html_url": "https://github.com/MartinSnyder",
            "followers_url": "https://api.github.com/users/MartinSnyder/followers",
            "following_url": "https://api.github.com/users/MartinSnyder/following{/other_user}",
            "gists_url": "https://api.github.com/users/MartinSnyder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MartinSnyder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MartinSnyder/subscriptions",
            "organizations_url": "https://api.github.com/users/MartinSnyder/orgs",
            "repos_url": "https://api.github.com/users/MartinSnyder/repos",
            "events_url": "https://api.github.com/users/MartinSnyder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MartinSnyder/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-02T17:29:45Z",
        "updated_at": "2016-11-02T17:29:45Z",
        "author_association": "NONE",
        "body": "I finally got around to doing this. Presenting seamless-immutable-cursor:\nhttps://github.com/MartinSnyder/seamless-immutable-cursor\n\nVersion 0.1.1 is published to npm:\nhttps://www.npmjs.com/package/seamless-immutable-cursor\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/258224428",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/149#issuecomment-258224428",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/149",
        "id": 258224428,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODIyNDQyOA==",
        "user": {
            "login": "guyellis",
            "id": 2047725,
            "node_id": "MDQ6VXNlcjIwNDc3MjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2047725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guyellis",
            "html_url": "https://github.com/guyellis",
            "followers_url": "https://api.github.com/users/guyellis/followers",
            "following_url": "https://api.github.com/users/guyellis/following{/other_user}",
            "gists_url": "https://api.github.com/users/guyellis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guyellis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guyellis/subscriptions",
            "organizations_url": "https://api.github.com/users/guyellis/orgs",
            "repos_url": "https://api.github.com/users/guyellis/repos",
            "events_url": "https://api.github.com/users/guyellis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guyellis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-03T18:01:06Z",
        "updated_at": "2016-12-17T01:57:34Z",
        "author_association": "NONE",
        "body": "If you want to keep the getIn syntax then building on @crudh idea create a utility method.\r\n\r\n```\r\nimport _get from 'lodash/get';\r\n\r\nfunction getIn(state, path, alt) {\r\n  return _get(state, path.join('.'), alt);\r\n}\r\n\r\nvar foo = getIn(state, ['bar', 'baz', 'foo'], '');\r\n```\r\n\r\nMight make transition from ImmutableJS easier and keeps syntax similar to what might be implemented in seamless.\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/259430680",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-259430680",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 259430680,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQzMDY4MA==",
        "user": {
            "login": "draunkin",
            "id": 7127081,
            "node_id": "MDQ6VXNlcjcxMjcwODE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7127081?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/draunkin",
            "html_url": "https://github.com/draunkin",
            "followers_url": "https://api.github.com/users/draunkin/followers",
            "following_url": "https://api.github.com/users/draunkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/draunkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/draunkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/draunkin/subscriptions",
            "organizations_url": "https://api.github.com/users/draunkin/orgs",
            "repos_url": "https://api.github.com/users/draunkin/repos",
            "events_url": "https://api.github.com/users/draunkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/draunkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-09T14:44:39Z",
        "updated_at": "2016-11-09T14:45:14Z",
        "author_association": "NONE",
        "body": "@alex3165  I had just installed the definitions from npm install @types/seamless-immutable and I get a different file than that hosted on DefinitelyTyped. It seems the one installed using @types... is out of date as I could not get it to work properly with an error stating the from function was not available. The new definition you have at DefinitelyTyped works because it declares the 'seamless-immutable' module correctly.\nTook me a while to figure out what was going on, not sure the process but maybe you have to update the one installed by @types...\n\nHope this helps anyone else struggling with it.  Cheers\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/259475692",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/148#issuecomment-259475692",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/148",
        "id": 259475692,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ3NTY5Mg==",
        "user": {
            "login": "hilkeheremans",
            "id": 10352224,
            "node_id": "MDQ6VXNlcjEwMzUyMjI0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10352224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hilkeheremans",
            "html_url": "https://github.com/hilkeheremans",
            "followers_url": "https://api.github.com/users/hilkeheremans/followers",
            "following_url": "https://api.github.com/users/hilkeheremans/following{/other_user}",
            "gists_url": "https://api.github.com/users/hilkeheremans/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hilkeheremans/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hilkeheremans/subscriptions",
            "organizations_url": "https://api.github.com/users/hilkeheremans/orgs",
            "repos_url": "https://api.github.com/users/hilkeheremans/repos",
            "events_url": "https://api.github.com/users/hilkeheremans/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hilkeheremans/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-09T17:39:29Z",
        "updated_at": "2016-11-09T17:39:29Z",
        "author_association": "NONE",
        "body": "I haven't checked or tried it out, but my first guess would be that in the \"incorrect\" case, `seamless-immutable`, when provided with an array in `merge`, merges from the last element to the first. This would cause `homer.simpson` to be overwritten with its l33t counterpart. The opposite is happening in the \"correct\" case since you are making two distinct `merge` calls which get called in that order.\n\nMight be a good idea to explicitly call that out in the docs.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/259619506",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/148#issuecomment-259619506",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/148",
        "id": 259619506,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTYxOTUwNg==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-10T07:24:47Z",
        "updated_at": "2016-11-10T07:24:47Z",
        "author_association": "COLLABORATOR",
        "body": "@chadly that's strange. I added the following test case:\n\n``` javascript\n    it(\"merges arrays with the same result as chained merges\", function() {\n      var expected = Immutable({ username: \"homer.simpson\", city: \"Springfield\", kids: 3 })\n\n      var original = Immutable({ username: \"homer.simpson\"});\n      var toMerge1 = { username: \"HoMeR.SiMpSoN\", city: \"Springfield\" };\n      var toMerge2 = { username: \"homer.simpson\", kids: 3 };\n\n      var actualChainedMerges = original.merge(toMerge1).merge(toMerge2);\n      var actualArrayMerge = original.merge([toMerge1, toMerge2]);\n\n      TestUtils.assertJsonEqual(actualChainedMerges, expected);\n      TestUtils.assertJsonEqual(actualArrayMerge, expected);\n    });\n```\n\nand it works and produces the correct result in both cases.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/259621214",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/168#issuecomment-259621214",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/168",
        "id": 259621214,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTYyMTIxNA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-10T07:36:32Z",
        "updated_at": "2016-11-10T07:36:32Z",
        "author_association": "COLLABORATOR",
        "body": "@slashwhatever the result in your example is a javascript object, not a collection of any type. So you have to check the number of keys in the object with `Object.keys(myImmutable).length` or use something like `_.size` from lodash.\n\nIf you make an array immutable you can just use `.length` on it or again `_.size` from lodash.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/259631952",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/168#issuecomment-259631952",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/168",
        "id": 259631952,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTYzMTk1Mg==",
        "user": {
            "login": "slashwhatever",
            "id": 996667,
            "node_id": "MDQ6VXNlcjk5NjY2Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/996667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slashwhatever",
            "html_url": "https://github.com/slashwhatever",
            "followers_url": "https://api.github.com/users/slashwhatever/followers",
            "following_url": "https://api.github.com/users/slashwhatever/following{/other_user}",
            "gists_url": "https://api.github.com/users/slashwhatever/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slashwhatever/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slashwhatever/subscriptions",
            "organizations_url": "https://api.github.com/users/slashwhatever/orgs",
            "repos_url": "https://api.github.com/users/slashwhatever/repos",
            "events_url": "https://api.github.com/users/slashwhatever/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slashwhatever/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-10T08:39:19Z",
        "updated_at": "2016-11-10T08:39:19Z",
        "author_association": "NONE",
        "body": "Thanks for the input @crudh. The fact we have to do something different for objects vs arrays is kinda my point. ImmutableJS allows you to use the same method name regardless of the type you're working with.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/259636000",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/168#issuecomment-259636000",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/168",
        "id": 259636000,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTYzNjAwMA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-10T08:59:58Z",
        "updated_at": "2016-11-10T08:59:58Z",
        "author_association": "COLLABORATOR",
        "body": "@slashwhatever yes, but the reasoning of seamless is that the types should be plain javascript types, with as few modifications as possible. So `_.size` is probably the best suggestion for this use case.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/259638673",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/168#issuecomment-259638673",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/168",
        "id": 259638673,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTYzODY3Mw==",
        "user": {
            "login": "slashwhatever",
            "id": 996667,
            "node_id": "MDQ6VXNlcjk5NjY2Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/996667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slashwhatever",
            "html_url": "https://github.com/slashwhatever",
            "followers_url": "https://api.github.com/users/slashwhatever/followers",
            "following_url": "https://api.github.com/users/slashwhatever/following{/other_user}",
            "gists_url": "https://api.github.com/users/slashwhatever/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slashwhatever/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slashwhatever/subscriptions",
            "organizations_url": "https://api.github.com/users/slashwhatever/orgs",
            "repos_url": "https://api.github.com/users/slashwhatever/repos",
            "events_url": "https://api.github.com/users/slashwhatever/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slashwhatever/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-10T09:13:04Z",
        "updated_at": "2016-11-10T09:13:04Z",
        "author_association": "NONE",
        "body": "@crudh understood :)\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/260261568",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/169#issuecomment-260261568",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/169",
        "id": 260261568,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDI2MTU2OA==",
        "user": {
            "login": "rbellamy",
            "id": 94763,
            "node_id": "MDQ6VXNlcjk0NzYz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/94763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rbellamy",
            "html_url": "https://github.com/rbellamy",
            "followers_url": "https://api.github.com/users/rbellamy/followers",
            "following_url": "https://api.github.com/users/rbellamy/following{/other_user}",
            "gists_url": "https://api.github.com/users/rbellamy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rbellamy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rbellamy/subscriptions",
            "organizations_url": "https://api.github.com/users/rbellamy/orgs",
            "repos_url": "https://api.github.com/users/rbellamy/repos",
            "events_url": "https://api.github.com/users/rbellamy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rbellamy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-14T06:57:08Z",
        "updated_at": "2016-11-14T06:57:08Z",
        "author_association": "NONE",
        "body": "Looks like the build is failing for credentials to saucelabs, which is the source of the compatibility chart... they're all red because of this.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/260836410",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/171#issuecomment-260836410",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/171",
        "id": 260836410,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDgzNjQxMA==",
        "user": {
            "login": "noahehall",
            "id": 10324554,
            "node_id": "MDQ6VXNlcjEwMzI0NTU0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10324554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noahehall",
            "html_url": "https://github.com/noahehall",
            "followers_url": "https://api.github.com/users/noahehall/followers",
            "following_url": "https://api.github.com/users/noahehall/following{/other_user}",
            "gists_url": "https://api.github.com/users/noahehall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noahehall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noahehall/subscriptions",
            "organizations_url": "https://api.github.com/users/noahehall/orgs",
            "repos_url": "https://api.github.com/users/noahehall/repos",
            "events_url": "https://api.github.com/users/noahehall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noahehall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-16T02:32:47Z",
        "updated_at": "2016-11-16T02:32:47Z",
        "author_association": "NONE",
        "body": "hmm ive actually switched form using Maps with seamless-immutable, but will be interested to know if they will be supported in the future\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/262389357",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/153#issuecomment-262389357",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/153",
        "id": 262389357,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjM4OTM1Nw==",
        "user": {
            "login": "Stuk",
            "id": 48019,
            "node_id": "MDQ6VXNlcjQ4MDE5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/48019?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Stuk",
            "html_url": "https://github.com/Stuk",
            "followers_url": "https://api.github.com/users/Stuk/followers",
            "following_url": "https://api.github.com/users/Stuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/Stuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Stuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Stuk/subscriptions",
            "organizations_url": "https://api.github.com/users/Stuk/orgs",
            "repos_url": "https://api.github.com/users/Stuk/repos",
            "events_url": "https://api.github.com/users/Stuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Stuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-22T22:48:44Z",
        "updated_at": "2016-11-22T22:48:44Z",
        "author_association": "NONE",
        "body": "This can be simplified down to:\r\n\r\n```js\r\nconst promise = Immutable.from(Promise.resolve(123))\r\nconsole.log(promise);\r\npromise.then(console.log)\r\n```\r\n\r\nwhich results in:\r\n\r\n```\r\n{}\r\n\r\npromise.then(console.log)\r\n        ^\r\nTypeError: promise.then is not a function\r\n   ...\r\n```\r\n\r\nPromises can be considered immutable, and this library should probable treat them as such. "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/262900114",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/174#issuecomment-262900114",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/174",
        "id": 262900114,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjkwMDExNA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-25T08:00:56Z",
        "updated_at": "2016-11-25T08:00:56Z",
        "author_association": "OWNER",
        "body": "Nice, thank you @thomasdashney!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/264766538",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/175#issuecomment-264766538",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/175",
        "id": 264766538,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDc2NjUzOA==",
        "user": {
            "login": "huan086",
            "id": 1448788,
            "node_id": "MDQ6VXNlcjE0NDg3ODg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1448788?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huan086",
            "html_url": "https://github.com/huan086",
            "followers_url": "https://api.github.com/users/huan086/followers",
            "following_url": "https://api.github.com/users/huan086/following{/other_user}",
            "gists_url": "https://api.github.com/users/huan086/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huan086/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huan086/subscriptions",
            "organizations_url": "https://api.github.com/users/huan086/orgs",
            "repos_url": "https://api.github.com/users/huan086/repos",
            "events_url": "https://api.github.com/users/huan086/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huan086/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-05T04:38:22Z",
        "updated_at": "2016-12-05T04:38:22Z",
        "author_association": "NONE",
        "body": "Seems to be intentional, looking at the following example\r\n\r\n```\r\nImmutable([1, 2, 3]).concat([10, 9, 8]).sort()\r\n// This will also throw ImmutableError, because an Immutable Array's methods\r\n// (including concat()) are guaranteed to return other immutable values.\r\n\r\n[1, 2, 3].concat(Immutable([6, 5, 4])).sort()\r\n// This will succeed, and will yield a sorted mutable array containing\r\n// [1, 2, 3, 4, 5, 6], because a vanilla array's concat() method has\r\n// no knowledge of Immutable.\r\n```\r\n\r\nNeeds to be fixed on the redux-form side."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/264898597",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/175#issuecomment-264898597",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/175",
        "id": 264898597,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDg5ODU5Nw==",
        "user": {
            "login": "marbemac",
            "id": 847542,
            "node_id": "MDQ6VXNlcjg0NzU0Mg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/847542?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marbemac",
            "html_url": "https://github.com/marbemac",
            "followers_url": "https://api.github.com/users/marbemac/followers",
            "following_url": "https://api.github.com/users/marbemac/following{/other_user}",
            "gists_url": "https://api.github.com/users/marbemac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marbemac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marbemac/subscriptions",
            "organizations_url": "https://api.github.com/users/marbemac/orgs",
            "repos_url": "https://api.github.com/users/marbemac/repos",
            "events_url": "https://api.github.com/users/marbemac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marbemac/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-05T16:19:52Z",
        "updated_at": "2016-12-05T16:19:52Z",
        "author_association": "CONTRIBUTOR",
        "body": "Agreed - I missed that - thanks @huan086."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265023426",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/170#issuecomment-265023426",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/170",
        "id": 265023426,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyMzQyNg==",
        "user": {
            "login": "theogravity",
            "id": 855434,
            "node_id": "MDQ6VXNlcjg1NTQzNA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/855434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theogravity",
            "html_url": "https://github.com/theogravity",
            "followers_url": "https://api.github.com/users/theogravity/followers",
            "following_url": "https://api.github.com/users/theogravity/following{/other_user}",
            "gists_url": "https://api.github.com/users/theogravity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/theogravity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/theogravity/subscriptions",
            "organizations_url": "https://api.github.com/users/theogravity/orgs",
            "repos_url": "https://api.github.com/users/theogravity/repos",
            "events_url": "https://api.github.com/users/theogravity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/theogravity/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T00:28:39Z",
        "updated_at": "2016-12-06T00:28:39Z",
        "author_association": "NONE",
        "body": "this would be also useful for redux-devtools where the log monitor is also picking up the methods, making the redux log difficult to read through"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265023851",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/167#issuecomment-265023851",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/167",
        "id": 265023851,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyMzg1MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T00:31:07Z",
        "updated_at": "2016-12-06T00:31:07Z",
        "author_association": "OWNER",
        "body": "Thanks @krzysztofpniak!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265025749",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/172#issuecomment-265025749",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/172",
        "id": 265025749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyNTc0OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T00:42:08Z",
        "updated_at": "2016-12-06T00:42:08Z",
        "author_association": "OWNER",
        "body": "Thanks @sbalay!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265026023",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/165#issuecomment-265026023",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/165",
        "id": 265026023,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyNjAyMw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T00:43:52Z",
        "updated_at": "2016-12-06T00:43:52Z",
        "author_association": "OWNER",
        "body": "Great, thanks @nazar-pc!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265026296",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/166#issuecomment-265026296",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/166",
        "id": 265026296,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyNjI5Ng==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T00:45:30Z",
        "updated_at": "2016-12-06T00:45:43Z",
        "author_association": "OWNER",
        "body": "This would defeat the purpose of [`envify`](https://github.com/hughsk/envify), which is the whole reason those are in there. It gets compiled out of the production build, which is what's supposed to be used in the browser instead of the source.\r\n\r\nDoes https://github.com/rtfeldman/seamless-immutable/pull/165 resolve this?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265026457",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/162#issuecomment-265026457",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/162",
        "id": 265026457,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyNjQ1Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T00:46:28Z",
        "updated_at": "2016-12-06T00:46:28Z",
        "author_association": "OWNER",
        "body": "Great, thanks @8balloon!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265027354",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-265027354",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 265027354,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyNzM1NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T00:51:47Z",
        "updated_at": "2016-12-06T00:51:47Z",
        "author_association": "OWNER",
        "body": "After a lot of thought, I don't think outright migrating to this syntax is the right move. I think it would be better to make this opt-in, for example:\r\n\r\n```js\r\nvar Immutable = require(\"seamless-immutable\").static;\r\n```\r\n\r\nMaking this give you a new version of `Immutable` that doesn't override methods seems like the best way to go. It preserves backwards compatibility and would be easy to opt into.\r\n\r\nWhat do you think?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265027473",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/170#issuecomment-265027473",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/170",
        "id": 265027473,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyNzQ3Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T00:52:26Z",
        "updated_at": "2016-12-06T00:52:26Z",
        "author_association": "OWNER",
        "body": "I'See https://github.com/rtfeldman/seamless-immutable/pull/160"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265027732",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/164#issuecomment-265027732",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/164",
        "id": 265027732,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyNzczMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T00:54:03Z",
        "updated_at": "2016-12-06T00:54:03Z",
        "author_association": "OWNER",
        "body": "It's done this way for people using `seamless-immutable` on Node: it respects Node's production flag automatically, whereas in the browser you can load whichever is appropriate."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265027889",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/163#issuecomment-265027889",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/163",
        "id": 265027889,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyNzg4OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T00:54:55Z",
        "updated_at": "2016-12-06T00:54:55Z",
        "author_association": "OWNER",
        "body": "> Sorry if this isn't the right forum. Not sure where else to ask as this is an esoteric issue.\r\n\r\nSorry, but it's not the right forum. \ud83d\ude42\r\n\r\nI'd try StackOverflow!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265028014",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/171#issuecomment-265028014",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/171",
        "id": 265028014,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyODAxNA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T00:55:36Z",
        "updated_at": "2016-12-06T00:55:36Z",
        "author_association": "OWNER",
        "body": "Happy to accept a PR for them!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265030792",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/170#issuecomment-265030792",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/170",
        "id": 265030792,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAzMDc5Mg==",
        "user": {
            "login": "theogravity",
            "id": 855434,
            "node_id": "MDQ6VXNlcjg1NTQzNA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/855434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theogravity",
            "html_url": "https://github.com/theogravity",
            "followers_url": "https://api.github.com/users/theogravity/followers",
            "following_url": "https://api.github.com/users/theogravity/following{/other_user}",
            "gists_url": "https://api.github.com/users/theogravity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/theogravity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/theogravity/subscriptions",
            "organizations_url": "https://api.github.com/users/theogravity/orgs",
            "repos_url": "https://api.github.com/users/theogravity/repos",
            "events_url": "https://api.github.com/users/theogravity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/theogravity/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T01:12:43Z",
        "updated_at": "2016-12-06T01:17:24Z",
        "author_association": "NONE",
        "body": "In the meantime, I've done the following for using `seamless-immutable` with `redux-devtools` and `redux-devtools-log-monitor` (it's not ideal perf-wise, but does the job):\r\n\r\n```\r\nimport React from 'react'\r\n\r\nimport { createDevTools } from 'redux-devtools'\r\nimport LogMonitor from 'redux-devtools-log-monitor'\r\nimport DockMonitor from 'redux-devtools-dock-monitor'\r\nimport MultipleMonitors from 'redux-devtools-multiple-monitors'\r\n\r\n// clone without prototype methods so the seamless-immutable methods aren't exposed in the logs\r\n// http://stackoverflow.com/questions/728360/how-do-i-correctly-clone-a-javascript-object\r\nfunction clone(obj) {\r\n  var copy\r\n\r\n  // Handle the 3 simple types, and null or undefined\r\n  if (null == obj || \"object\" != typeof obj) return obj\r\n\r\n  // Handle Date\r\n  if (obj instanceof Date) {\r\n    copy = new Date()\r\n    copy.setTime(obj.getTime())\r\n    return copy\r\n  }\r\n\r\n  // Handle Array\r\n  if (obj instanceof Array) {\r\n    copy = []\r\n    for (var i = 0, len = obj.length; i < len; i++) {\r\n      copy[i] = clone(obj[i])\r\n    }\r\n    return copy\r\n  }\r\n\r\n  // Handle Object\r\n  if (obj instanceof Object) {\r\n    copy = {}\r\n    for (var attr in obj) {\r\n      if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr])\r\n    }\r\n    return copy\r\n  }\r\n}\r\n\r\nexport default createDevTools(\r\n  <DockMonitor toggleVisibilityKey='ctrl-h' changePositionKey='ctrl-q' defaultIsVisible={false}>\r\n    <MultipleMonitors>\r\n      <LogMonitor select={clone} />\r\n    </MultipleMonitors>\r\n  </DockMonitor>\r\n)\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265048804",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-265048804",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 265048804,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA0ODgwNA==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T03:11:21Z",
        "updated_at": "2016-12-06T04:02:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman I have dropped the deprecation warning from this pull request such that it is now mostly only #130 bugfix and test units for it, and not a migration scenario.\r\n\r\nThis PR still includes [this breaking change](https://github.com/rtfeldman/seamless-immutable/pull/160/commits/2ca121b942c98638531c8df6fca5d5b85bdfbfad). However in my views, losing data or losing access to the method are both undesirable bugs, and this change is the key to allow the user to switch to a static syntax that doesn't have the bug if needs be. Thus in my humble opinion merging this would be an improvement.\r\n\r\nI gave a good hour at exploring the idea of `require(\"seamless-immutable\").static;` to address #170. This seems like a good idea at first, however this appeared non-trivial to me, as `Immutable()`, `makeImmutableArray()`, `makeImmutableObject()` and such are called generously from within the library. It appears pretty easy to miss a case and introduce bugs, or re-pollute the object. And maybe this may turn into a much bigger refactoring.\r\n\r\nAlthough I do understand that it is great to support previous syntax, I am generally a fan of keeping things simple to ease maintainability and avoid bugs. It seems like there is no argument in favor of the previous syntax beside that it's currently in use (which also suggests it should not be promoted going forward), the static syntax appears superior on all fronts. So I tend to like the idea of migrating :) . But it's just me."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265049971",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/170#issuecomment-265049971",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/170",
        "id": 265049971,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA0OTk3MQ==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T03:20:23Z",
        "updated_at": "2016-12-06T03:20:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "FWIW, this would be pretty useful to me as well! I am often debugging objects in the console, and the instance methods often make it harder, so I end up using `JSON.stringify()` which isn't as easily browseable."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265055768",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-265055768",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 265055768,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA1NTc2OA==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T04:10:35Z",
        "updated_at": "2016-12-06T04:23:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "tl;dr; I suggest we only merge bugfixes, and choose between migrating or not migrating on a separate PR.\r\n\r\nEdit: Docs were updated to refer to the static syntax in this PR, I can revert that change if asked for it. Although since it's already released and more stable, sounds like a better choice to me."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265069412",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-265069412",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 265069412,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA2OTQxMg==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T06:10:23Z",
        "updated_at": "2016-12-06T06:10:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman I may have found a simple compromise that is similar to what you are suggesting. I pushed another commit for this\r\n\r\nhttps://github.com/saivann/seamless-immutable/tree/collision#static-or-instance-syntax\r\n\r\n```\r\nvar Immutable = require(\"seamless-immutable\");\r\nImmutable.config({\r\n    use_instance_methods: false\r\n});\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265096884",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/166#issuecomment-265096884",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/166",
        "id": 265096884,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA5Njg4NA==",
        "user": {
            "login": "nazar-pc",
            "id": 928965,
            "node_id": "MDQ6VXNlcjkyODk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/928965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazar-pc",
            "html_url": "https://github.com/nazar-pc",
            "followers_url": "https://api.github.com/users/nazar-pc/followers",
            "following_url": "https://api.github.com/users/nazar-pc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazar-pc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazar-pc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazar-pc/subscriptions",
            "organizations_url": "https://api.github.com/users/nazar-pc/orgs",
            "repos_url": "https://api.github.com/users/nazar-pc/repos",
            "events_url": "https://api.github.com/users/nazar-pc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazar-pc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T09:03:59Z",
        "updated_at": "2016-12-06T09:03:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "#165 resolves different issue I had with this tool.\r\n\r\nClosing this in favor of discussion in #164"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265097067",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/164#issuecomment-265097067",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/164",
        "id": 265097067,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA5NzA2Nw==",
        "user": {
            "login": "nazar-pc",
            "id": 928965,
            "node_id": "MDQ6VXNlcjkyODk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/928965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazar-pc",
            "html_url": "https://github.com/nazar-pc",
            "followers_url": "https://api.github.com/users/nazar-pc/followers",
            "following_url": "https://api.github.com/users/nazar-pc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazar-pc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazar-pc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazar-pc/subscriptions",
            "organizations_url": "https://api.github.com/users/nazar-pc/orgs",
            "repos_url": "https://api.github.com/users/nazar-pc/repos",
            "events_url": "https://api.github.com/users/nazar-pc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazar-pc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T09:04:54Z",
        "updated_at": "2016-12-06T09:04:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "What about to add another key `browser` to `package.json` with `seamless-immutable.production.min.js` in it so that it would be possible to find deterministically which file browser should use?\r\n\r\nI've added similar key to Redux already (https://github.com/reactjs/redux/pull/2047), quote from there:\r\n> There was a key `browser` in jQuery's `package.json` in past, so I decided that this is a good candidate to use.\r\n>\r\n> I'm currently checking following keys (based on `package.json` files of other popular projects) with priority from higher to lower:\r\n> - browser\r\n> - jspm.main\r\n> - main\r\n\r\n\r\nAs a side note, would be nice to have some more common structure for production builds, like `dist/seamless-immutable.js` (production version) and `dist/seamless-immutable.min.js` (production minified version)."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265122497",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-265122497",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 265122497,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTEyMjQ5Nw==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T11:04:38Z",
        "updated_at": "2016-12-06T11:04:38Z",
        "author_association": "NONE",
        "body": "@saivann would the config be opt-in or opt-out?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265139968",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-265139968",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 265139968,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTEzOTk2OA==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T12:38:25Z",
        "updated_at": "2016-12-06T12:40:34Z",
        "author_association": "CONTRIBUTOR",
        "body": "@MoeSattler, the config only defines if seamless-immutable should add sub-methods to all objects it creates. This is opt-in (no change to current Immutable default behavior). In summary, in this PR:\r\n\r\n1. Seamless-immutable continues to support the same syntaxes it already supports\r\n```\r\nImmutable.setIn(obj, 'key', data)\r\n```\r\n```\r\nobj.setIn('key', data)\r\n```\r\n\r\n2. In case of collision, user data now has priority over seamless-immutable methods:\r\n\r\nPreviously:\r\n```\r\nvar obj = Immutable({setIn: 'data'})\r\nobj.setIn; // function, the assigned data is lost\r\n```\r\n\r\nNow:\r\n```\r\nvar obj = Immutable({setIn: 'data'})\r\nobj.setIn; // 'data', the seamless-immutable method is lost, user can use static functions\r\n```\r\n\r\n3. User can opt-in to stop attaching seamless-immutable methods to objects\r\n\r\n```\r\nvar Immutable = require(\"seamless-immutable\");\r\nImmutable.config({\r\n    use_instance_methods: false\r\n});\r\n\r\nvar obj = Immutable({})\r\nobj.setIn; // undefined, the object is clean\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265202924",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-265202924",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 265202924,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTIwMjkyNA==",
        "user": {
            "login": "suchipi",
            "id": 1341513,
            "node_id": "MDQ6VXNlcjEzNDE1MTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1341513?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suchipi",
            "html_url": "https://github.com/suchipi",
            "followers_url": "https://api.github.com/users/suchipi/followers",
            "following_url": "https://api.github.com/users/suchipi/following{/other_user}",
            "gists_url": "https://api.github.com/users/suchipi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suchipi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suchipi/subscriptions",
            "organizations_url": "https://api.github.com/users/suchipi/orgs",
            "repos_url": "https://api.github.com/users/suchipi/repos",
            "events_url": "https://api.github.com/users/suchipi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suchipi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T16:48:14Z",
        "updated_at": "2016-12-06T16:48:14Z",
        "author_association": "NONE",
        "body": "To remain completely backwards compatible (\"bugwards compatible\"), the second item in your summary would need to be reverted to the old behavior; for users who need a workaround for data loss, I think the static methods should be recommended instead (or a config key could be added to prioritize user data instead of methods).\r\n\r\nEven though prioritizing user data over instance methods is a nicer API in an ideal world... maintaining backwards compatibility and avoiding a major version bump are important from a package maintainer's perspective, too."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265222189",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-265222189",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 265222189,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTIyMjE4OQ==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-06T17:56:16Z",
        "updated_at": "2016-12-06T17:57:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "@suchipi Although I can easily make this conditional to the `use_instance_methods` config if I am asked for it, I think this is actually a bad idea that I'd like to discourage, because it makes it harder for new users to have bug-free library by default. Users using the static syntax would still be affected unless they also set `use_instance_methods`, which I think we can safely assume most users won't.\r\n\r\nAnd perhaps obvious, but it seems unnecessary to me that we keep backward compatibility with a bug. There is no perfect bug-free backward compatible solution for the existing syntax. But we can however make sure the library is bug-free for new users, while supporting existing syntax and having a solution at hands for any existing users who may be affected this bug. This is what I am recommending in this PR.\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265337248",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-265337248",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 265337248,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTMzNzI0OA==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-07T02:27:04Z",
        "updated_at": "2016-12-07T04:38:34Z",
        "author_association": "CONTRIBUTOR",
        "body": "Actually, I am changing my mind on this ^ . There are security implications with allowing users to run an instance method, while at the same time allowing arbitrary override of those methods. I'll update the PR and try to come up with something better."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265361742",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-265361742",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 265361742,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTM2MTc0Mg==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-07T05:47:15Z",
        "updated_at": "2016-12-07T05:47:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "OK latest attempt:\r\n\r\n1. Seamless-immutable continues to support the same syntaxes it already supports\r\n```\r\nImmutable.setIn(obj, 'key', data)\r\n```\r\n```\r\nobj.setIn('key', data)\r\n```\r\n\r\n2. In case of collision, user data is lost, no matter what syntax (no change with current spec):\r\n\r\n```\r\nvar obj = Immutable({setIn: 'data'})\r\nobj.setIn; // function, the assigned data is lost\r\n```\r\n\r\n3. User can opt-in to stop attaching seamless-immutable methods to objects\r\n\r\n```\r\nvar Immutable = require(\"seamless-immutable\").init({\r\n    use_static: true\r\n});\r\n\r\nvar obj = Immutable({})\r\nobj.setIn; // undefined, the object is clean\r\n```\r\n\r\nThis is pretty in line to what @rtfeldman asked (sorry for all the extra loops before getting there!).\r\n\r\nI still think it'd be great to migrate to one syntax in the future, but can be for later."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265511671",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/171#issuecomment-265511671",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/171",
        "id": 265511671,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTUxMTY3MQ==",
        "user": {
            "login": "noahehall",
            "id": 10324554,
            "node_id": "MDQ6VXNlcjEwMzI0NTU0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10324554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noahehall",
            "html_url": "https://github.com/noahehall",
            "followers_url": "https://api.github.com/users/noahehall/followers",
            "following_url": "https://api.github.com/users/noahehall/following{/other_user}",
            "gists_url": "https://api.github.com/users/noahehall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noahehall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noahehall/subscriptions",
            "organizations_url": "https://api.github.com/users/noahehall/orgs",
            "repos_url": "https://api.github.com/users/noahehall/repos",
            "events_url": "https://api.github.com/users/noahehall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noahehall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-07T17:21:56Z",
        "updated_at": "2016-12-07T17:21:56Z",
        "author_association": "NONE",
        "body": "Definitely, ill take a swing at it. I switched to storing everything as an object for now"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/265636464",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/1#issuecomment-265636464",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/1",
        "id": 265636464,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTYzNjQ2NA==",
        "user": {
            "login": "theogravity",
            "id": 855434,
            "node_id": "MDQ6VXNlcjg1NTQzNA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/855434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theogravity",
            "html_url": "https://github.com/theogravity",
            "followers_url": "https://api.github.com/users/theogravity/followers",
            "following_url": "https://api.github.com/users/theogravity/following{/other_user}",
            "gists_url": "https://api.github.com/users/theogravity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/theogravity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/theogravity/subscriptions",
            "organizations_url": "https://api.github.com/users/theogravity/orgs",
            "repos_url": "https://api.github.com/users/theogravity/repos",
            "events_url": "https://api.github.com/users/theogravity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/theogravity/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-08T02:32:54Z",
        "updated_at": "2016-12-08T02:33:04Z",
        "author_association": "NONE",
        "body": "i'm also interested in this feature as well, have some deeply nested objects and want to do something like this in react:\r\n\r\n```\r\nshouldComponentUpdate(nextProps) {\r\n    // this.props.obj is immutable\r\n\r\n   return this.props.obj.equals(nextProps.obj)\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266246276",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/177#issuecomment-266246276",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/177",
        "id": 266246276,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI0NjI3Ng==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-10T23:05:31Z",
        "updated_at": "2016-12-10T23:05:31Z",
        "author_association": "OWNER",
        "body": "I've never used the `browser` field but it seems reasonable. I assume Webpack/Browserify/etc will respect this as the default.\r\n\r\nIf so, do they permit overriding it? In other words, is someone going to have a harder time using `seamless-immutable` with one of those build tools if this field exists?\r\n\r\nAlso, this should definitely point to the development build. That's the safer default because it actually takes steps to enforce immutability. People should opt into the \"safety features removed\" prod build if they need the perf boost."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266249095",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/177#issuecomment-266249095",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/177",
        "id": 266249095,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI0OTA5NQ==",
        "user": {
            "login": "nazar-pc",
            "id": 928965,
            "node_id": "MDQ6VXNlcjkyODk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/928965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazar-pc",
            "html_url": "https://github.com/nazar-pc",
            "followers_url": "https://api.github.com/users/nazar-pc/followers",
            "following_url": "https://api.github.com/users/nazar-pc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazar-pc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazar-pc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazar-pc/subscriptions",
            "organizations_url": "https://api.github.com/users/nazar-pc/orgs",
            "repos_url": "https://api.github.com/users/nazar-pc/repos",
            "events_url": "https://api.github.com/users/nazar-pc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazar-pc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-10T23:24:28Z",
        "updated_at": "2016-12-10T23:24:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "I'm not sure if `browser` key is used/respected by any build tool (mostly because I'm not using them, however I have strong doubts that they do).\r\n\r\nI've seen `browser` key in jQuery in past (not used anymore) and found it to be a good candidate for such libraries in order to differentiate builds for Node.js and for browsers.\r\n\r\nAs for development build - well, you can't point there right now (see #166).\r\n\r\nSituation with using Bower/NPM packages in browser is awkward. There is no deterministic standard that can answer to the question \"which file should be used in browser\" (AFAIK).\r\n\r\nI my framework (can't speak for anything else) there is an option for combining, minification and caching various frontend assets (this is the reason why I mostly don't use any build tools, it does everything out of the box). It tries its best to make everything completely automatically. When compression is not used, frontend is considered in \"development\" environment (uses `browser` key in current example as is), but when compression is turned on, \"production\" mode is assumed (and framework will try to find file with the name from `browser` key with `.min` suffix added).\r\n\r\nWith above being said I'd like to repeat suggestion from linked issue:\r\n> As a side note, would be nice to have some more common structure for production builds, like `dist/seamless-immutable.js` (production version) and `dist/seamless-immutable.min.js` (production minified version).\r\n\r\nIn context of your last comment development version might enforce immutability and production might not. However, this is no way established standard behavior and it is a bit surprising that `*.min.js` file differs from un-suffixed file in some way besides minification (though, might be acceptable when added to readme)."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266252306",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/164#issuecomment-266252306",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/164",
        "id": 266252306,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI1MjMwNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T00:28:17Z",
        "updated_at": "2016-12-11T00:28:17Z",
        "author_association": "OWNER",
        "body": "> As a side note, would be nice to have some more common structure for production builds, like dist/seamless-immutable.js (production version) and dist/seamless-immutable.min.js (production minified version).\r\n\r\nWe already have that, except it's at the project root rather than in a `dist/` folder. \ud83d\ude42\r\n\r\nArguably a `dist` folder would be a slightly better place to put them, but I don't think that slight improvement is worth breaking everyone's builds the next time they upgrade."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266252604",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/177#issuecomment-266252604",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/177",
        "id": 266252604,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI1MjYwNA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T00:35:20Z",
        "updated_at": "2016-12-11T00:35:20Z",
        "author_association": "OWNER",
        "body": "> As for development build - well, you can't point there right now (see #166).\r\n\r\n#166 is about the source build, not the development build. \ud83d\ude42\r\n\r\nThe [development build](https://github.com/rtfeldman/seamless-immutable/blob/master/seamless-immutable.development.js) does not contain any search results for \"process\".\r\n\r\nThe [webpack docs](https://webpack.github.io/docs/configuration.html#resolve-packagemains) suggest `browser` would take precedence in webpack. They also mention that [there is a way to override that](https://webpack.github.io/docs/configuration.html#resolve-packagealias), so I'm okay with this as long as it points to the development build instead of the production build."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266252947",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/164#issuecomment-266252947",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/164",
        "id": 266252947,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI1Mjk0Nw==",
        "user": {
            "login": "nazar-pc",
            "id": 928965,
            "node_id": "MDQ6VXNlcjkyODk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/928965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazar-pc",
            "html_url": "https://github.com/nazar-pc",
            "followers_url": "https://api.github.com/users/nazar-pc/followers",
            "following_url": "https://api.github.com/users/nazar-pc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazar-pc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazar-pc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazar-pc/subscriptions",
            "organizations_url": "https://api.github.com/users/nazar-pc/orgs",
            "repos_url": "https://api.github.com/users/nazar-pc/repos",
            "events_url": "https://api.github.com/users/nazar-pc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazar-pc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T00:45:17Z",
        "updated_at": "2016-12-11T00:45:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Arguably a dist folder would be a slightly better place to put them, but I don't think that slight improvement is worth breaking everyone's builds the next time they upgrade.\r\n\r\nThere are 2 ways here, neither of which is perfect:\r\n* move to 7.x and break whatever is needed (existing builds wouldn't break, but people need to update their configs)\r\n* temporarily till 7.x support both current files locations and `dist/{seamless-immutable.js|seamless-immutable.min.js}` (sounds awful)\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266253196",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/177#issuecomment-266253196",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/177",
        "id": 266253196,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI1MzE5Ng==",
        "user": {
            "login": "nazar-pc",
            "id": 928965,
            "node_id": "MDQ6VXNlcjkyODk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/928965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazar-pc",
            "html_url": "https://github.com/nazar-pc",
            "followers_url": "https://api.github.com/users/nazar-pc/followers",
            "following_url": "https://api.github.com/users/nazar-pc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazar-pc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazar-pc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazar-pc/subscriptions",
            "organizations_url": "https://api.github.com/users/nazar-pc/orgs",
            "repos_url": "https://api.github.com/users/nazar-pc/repos",
            "events_url": "https://api.github.com/users/nazar-pc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazar-pc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T00:52:04Z",
        "updated_at": "2016-12-11T00:52:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "Nice to see webpack supports it, didn't know about this.\r\n\r\nIn my opinion something that goes into build system should be production, since artifacts will likely be used in production. While those who need development version can still manually specify what they need explicitly.\r\n\r\n> The webpack docs suggest browser would take precedence in webpack. They also mention that there is a way to override that, so I'm okay with this as long as it points to the development build instead of the production build.\r\n\r\n`webpack` key might be used in addition to `browser`, it will have even higher precedence than `browser`. But I can't imagine why would anyone want development version as webpack's artifact."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266255940",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/177#issuecomment-266255940",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/177",
        "id": 266255940,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI1NTk0MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T02:14:28Z",
        "updated_at": "2016-12-11T02:14:28Z",
        "author_association": "OWNER",
        "body": "> In my opinion something that goes into build system should be production, since artifacts will likely be used in production. While those who need development version can still manually specify what they need explicitly.\r\n\r\nThat makes sense if there's no difference between development and production, but that's not true here.\r\n\r\nThe production build improves performance by removing the safety checks that make the immutable invariants work, under the assumption that people would have caught any problems in development. That's only a reasonable assumption to make if people have been using the development build by default, which means it's important that the production build is opt-in, not the other way around.\r\n\r\ntl;dr Making the production build the default would be dangerously irresponsible and I'm not going to do it. \ud83d\ude42"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266256045",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/164#issuecomment-266256045",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/164",
        "id": 266256045,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI1NjA0NQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T02:17:19Z",
        "updated_at": "2016-12-11T02:17:19Z",
        "author_association": "OWNER",
        "body": "The third option is sticking with the status quo, which seems to have the fewest downsides."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266256964",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/177#issuecomment-266256964",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/177",
        "id": 266256964,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI1Njk2NA==",
        "user": {
            "login": "nazar-pc",
            "id": 928965,
            "node_id": "MDQ6VXNlcjkyODk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/928965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazar-pc",
            "html_url": "https://github.com/nazar-pc",
            "followers_url": "https://api.github.com/users/nazar-pc/followers",
            "following_url": "https://api.github.com/users/nazar-pc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazar-pc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazar-pc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazar-pc/subscriptions",
            "organizations_url": "https://api.github.com/users/nazar-pc/orgs",
            "repos_url": "https://api.github.com/users/nazar-pc/repos",
            "events_url": "https://api.github.com/users/nazar-pc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazar-pc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T02:43:49Z",
        "updated_at": "2016-12-11T02:43:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "> tl;dr Making the production build the default would be dangerously irresponsible and I'm not going to do it. \ud83d\ude42\r\n\r\nAgree, makes sense, should I update this PR now to point to development version?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266259129",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/177#issuecomment-266259129",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/177",
        "id": 266259129,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI1OTEyOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T03:57:35Z",
        "updated_at": "2016-12-11T03:57:35Z",
        "author_association": "OWNER",
        "body": "@nazar-pc yep, please do!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266271339",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-266271339",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 266271339,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI3MTMzOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T09:12:04Z",
        "updated_at": "2016-12-11T09:12:04Z",
        "author_association": "OWNER",
        "body": "@saivann This is great! \ud83d\ude0d Thank you so much!\r\n\r\nMy only request would be to simplify it to just:\r\n\r\n```js\r\nvar Immutable = require(\"seamless-immutable\").static;\r\n```\r\n\r\nI don't anticipate adding more configuration options later, so having an init function feels like overkill.\r\n\r\nSound good?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266271644",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/139#issuecomment-266271644",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/139",
        "id": 266271644,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI3MTY0NA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T09:20:42Z",
        "updated_at": "2016-12-11T09:20:42Z",
        "author_association": "OWNER",
        "body": "This has been pending changes for about two months, so I'm going to close it as stale.\r\n\r\nPlease feel free to reopen with those changes! :)"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266274836",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/177#issuecomment-266274836",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/177",
        "id": 266274836,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI3NDgzNg==",
        "user": {
            "login": "nazar-pc",
            "id": 928965,
            "node_id": "MDQ6VXNlcjkyODk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/928965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazar-pc",
            "html_url": "https://github.com/nazar-pc",
            "followers_url": "https://api.github.com/users/nazar-pc/followers",
            "following_url": "https://api.github.com/users/nazar-pc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazar-pc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazar-pc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazar-pc/subscriptions",
            "organizations_url": "https://api.github.com/users/nazar-pc/orgs",
            "repos_url": "https://api.github.com/users/nazar-pc/repos",
            "events_url": "https://api.github.com/users/nazar-pc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazar-pc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T10:41:20Z",
        "updated_at": "2016-12-11T10:41:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "Updated"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266278733",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-266278733",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 266278733,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI3ODczMw==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T12:16:39Z",
        "updated_at": "2016-12-11T12:16:39Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman Just added a commit for this, thanks! Looking forward to use seamless-immutable 6.4.0 :)"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266301959",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-266301959",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 266301959,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMwMTk1OQ==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T19:32:04Z",
        "updated_at": "2016-12-11T19:32:04Z",
        "author_association": "NONE",
        "body": "Love this! Thanks so much!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266305843",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-266305843",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 266305843,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMwNTg0Mw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T20:34:13Z",
        "updated_at": "2016-12-11T20:34:13Z",
        "author_association": "OWNER",
        "body": "@saivann Thanks! I'm going to pair this with #177 and release as 7.0.0"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266305859",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/177#issuecomment-266305859",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/177",
        "id": 266305859,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMwNTg1OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T20:34:28Z",
        "updated_at": "2016-12-11T20:34:28Z",
        "author_association": "OWNER",
        "body": "Thanks @nazar-pc!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266305985",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/164#issuecomment-266305985",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/164",
        "id": 266305985,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMwNTk4NQ==",
        "user": {
            "login": "nazar-pc",
            "id": 928965,
            "node_id": "MDQ6VXNlcjkyODk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/928965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazar-pc",
            "html_url": "https://github.com/nazar-pc",
            "followers_url": "https://api.github.com/users/nazar-pc/followers",
            "following_url": "https://api.github.com/users/nazar-pc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazar-pc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazar-pc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazar-pc/subscriptions",
            "organizations_url": "https://api.github.com/users/nazar-pc/orgs",
            "repos_url": "https://api.github.com/users/nazar-pc/repos",
            "events_url": "https://api.github.com/users/nazar-pc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazar-pc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T20:36:37Z",
        "updated_at": "2016-12-11T20:36:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "Closing this as #177 was merged, which solves issue for me.\r\n\r\nDo you have plans to release a new version anytime soon?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266306032",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-266306032",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 266306032,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMwNjAzMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T20:37:17Z",
        "updated_at": "2016-12-11T20:37:17Z",
        "author_association": "OWNER",
        "body": "Released as 7.0.0."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266306058",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/164#issuecomment-266306058",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/164",
        "id": 266306058,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMwNjA1OA==",
        "user": {
            "login": "nazar-pc",
            "id": 928965,
            "node_id": "MDQ6VXNlcjkyODk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/928965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazar-pc",
            "html_url": "https://github.com/nazar-pc",
            "followers_url": "https://api.github.com/users/nazar-pc/followers",
            "following_url": "https://api.github.com/users/nazar-pc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazar-pc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazar-pc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazar-pc/subscriptions",
            "organizations_url": "https://api.github.com/users/nazar-pc/orgs",
            "repos_url": "https://api.github.com/users/nazar-pc/repos",
            "events_url": "https://api.github.com/users/nazar-pc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazar-pc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T20:37:38Z",
        "updated_at": "2016-12-11T20:37:38Z",
        "author_association": "CONTRIBUTOR",
        "body": "Nice, I see new release already:)"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266313689",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/170#issuecomment-266313689",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/170",
        "id": 266313689,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMxMzY4OQ==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-11T22:37:49Z",
        "updated_at": "2016-12-11T22:37:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "This issue can be closed - Fixed as of 7.0.0"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266338633",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/180#issuecomment-266338633",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/180",
        "id": 266338633,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMzODYzMw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T04:02:32Z",
        "updated_at": "2016-12-12T04:02:32Z",
        "author_association": "OWNER",
        "body": "I need a lot more information than this.\r\n\r\nPlease feel to reopen with a description that someone can act on. \ud83d\ude42"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266339523",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/180#issuecomment-266339523",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/180",
        "id": 266339523,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMzOTUyMw==",
        "user": {
            "login": "messense",
            "id": 1556054,
            "node_id": "MDQ6VXNlcjE1NTYwNTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1556054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/messense",
            "html_url": "https://github.com/messense",
            "followers_url": "https://api.github.com/users/messense/followers",
            "following_url": "https://api.github.com/users/messense/following{/other_user}",
            "gists_url": "https://api.github.com/users/messense/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/messense/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/messense/subscriptions",
            "organizations_url": "https://api.github.com/users/messense/orgs",
            "repos_url": "https://api.github.com/users/messense/repos",
            "events_url": "https://api.github.com/users/messense/events{/privacy}",
            "received_events_url": "https://api.github.com/users/messense/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T04:13:43Z",
        "updated_at": "2016-12-12T04:13:43Z",
        "author_association": "NONE",
        "body": "![image](https://cloud.githubusercontent.com/assets/1556054/21087829/58c3310a-c064-11e6-9fdc-2b4c58764b0c.png)\r\n\r\nDowngraded to v6.1.1 works fine."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266339618",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/180#issuecomment-266339618",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/180",
        "id": 266339618,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMzOTYxOA==",
        "user": {
            "login": "messense",
            "id": 1556054,
            "node_id": "MDQ6VXNlcjE1NTYwNTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1556054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/messense",
            "html_url": "https://github.com/messense",
            "followers_url": "https://api.github.com/users/messense/followers",
            "following_url": "https://api.github.com/users/messense/following{/other_user}",
            "gists_url": "https://api.github.com/users/messense/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/messense/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/messense/subscriptions",
            "organizations_url": "https://api.github.com/users/messense/orgs",
            "repos_url": "https://api.github.com/users/messense/repos",
            "events_url": "https://api.github.com/users/messense/events{/privacy}",
            "received_events_url": "https://api.github.com/users/messense/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T04:14:46Z",
        "updated_at": "2016-12-12T04:14:46Z",
        "author_association": "NONE",
        "body": "And the React Native packager hangs on transforming when this error occurred."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266339852",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/180#issuecomment-266339852",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/180",
        "id": 266339852,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMzOTg1Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T04:17:41Z",
        "updated_at": "2016-12-12T04:17:41Z",
        "author_association": "OWNER",
        "body": "What happens if you go into `node_modules/seamless-immutable/package.json` and delete the `\"browser\":` entry?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266339970",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/180#issuecomment-266339970",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/180",
        "id": 266339970,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMzOTk3MA==",
        "user": {
            "login": "messense",
            "id": 1556054,
            "node_id": "MDQ6VXNlcjE1NTYwNTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1556054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/messense",
            "html_url": "https://github.com/messense",
            "followers_url": "https://api.github.com/users/messense/followers",
            "following_url": "https://api.github.com/users/messense/following{/other_user}",
            "gists_url": "https://api.github.com/users/messense/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/messense/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/messense/subscriptions",
            "organizations_url": "https://api.github.com/users/messense/orgs",
            "repos_url": "https://api.github.com/users/messense/repos",
            "events_url": "https://api.github.com/users/messense/events{/privacy}",
            "received_events_url": "https://api.github.com/users/messense/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T04:18:55Z",
        "updated_at": "2016-12-12T04:18:55Z",
        "author_association": "NONE",
        "body": "@rtfeldman Works fine after deleting `browser` entry!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266340920",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/180#issuecomment-266340920",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/180",
        "id": 266340920,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjM0MDkyMA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T04:29:30Z",
        "updated_at": "2016-12-12T04:29:30Z",
        "author_association": "OWNER",
        "body": "Hm, ok - what if you leave the `browser` entry there, but add another entry that's exactly the same as the `browser` one except it says `\"react-native\"` instead of `\"browser\"`?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266341237",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/180#issuecomment-266341237",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/180",
        "id": 266341237,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjM0MTIzNw==",
        "user": {
            "login": "messense",
            "id": 1556054,
            "node_id": "MDQ6VXNlcjE1NTYwNTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1556054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/messense",
            "html_url": "https://github.com/messense",
            "followers_url": "https://api.github.com/users/messense/followers",
            "following_url": "https://api.github.com/users/messense/following{/other_user}",
            "gists_url": "https://api.github.com/users/messense/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/messense/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/messense/subscriptions",
            "organizations_url": "https://api.github.com/users/messense/orgs",
            "repos_url": "https://api.github.com/users/messense/repos",
            "events_url": "https://api.github.com/users/messense/events{/privacy}",
            "received_events_url": "https://api.github.com/users/messense/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T04:33:23Z",
        "updated_at": "2016-12-12T04:33:23Z",
        "author_association": "NONE",
        "body": "@rtfeldman Still get the error."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266341361",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/180#issuecomment-266341361",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/180",
        "id": 266341361,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjM0MTM2MQ==",
        "user": {
            "login": "messense",
            "id": 1556054,
            "node_id": "MDQ6VXNlcjE1NTYwNTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1556054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/messense",
            "html_url": "https://github.com/messense",
            "followers_url": "https://api.github.com/users/messense/followers",
            "following_url": "https://api.github.com/users/messense/following{/other_user}",
            "gists_url": "https://api.github.com/users/messense/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/messense/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/messense/subscriptions",
            "organizations_url": "https://api.github.com/users/messense/orgs",
            "repos_url": "https://api.github.com/users/messense/repos",
            "events_url": "https://api.github.com/users/messense/events{/privacy}",
            "received_events_url": "https://api.github.com/users/messense/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T04:34:51Z",
        "updated_at": "2016-12-12T04:34:51Z",
        "author_association": "NONE",
        "body": "It works when I leave the `browser` entry there, but add another entry that's exactly the same as the `main` one except it says `\"react-native\"` instead of `\"main\"`"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266368165",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/181#issuecomment-266368165",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/181",
        "id": 266368165,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjM2ODE2NQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T08:20:38Z",
        "updated_at": "2016-12-12T08:20:38Z",
        "author_association": "OWNER",
        "body": "Thanks!\r\n\r\nHowever, I don't understand why the source works but the development build fails. I'd like to understand this fix better before applying it...what is it about the development build that react native rejects it?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266373054",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/181#issuecomment-266373054",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/181",
        "id": 266373054,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjM3MzA1NA==",
        "user": {
            "login": "jgkim",
            "id": 86622,
            "node_id": "MDQ6VXNlcjg2NjIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/86622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgkim",
            "html_url": "https://github.com/jgkim",
            "followers_url": "https://api.github.com/users/jgkim/followers",
            "following_url": "https://api.github.com/users/jgkim/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgkim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgkim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgkim/subscriptions",
            "organizations_url": "https://api.github.com/users/jgkim/orgs",
            "repos_url": "https://api.github.com/users/jgkim/repos",
            "events_url": "https://api.github.com/users/jgkim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgkim/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T08:48:20Z",
        "updated_at": "2016-12-12T08:49:14Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman Since the build files for broswers are listed in `.npmignore`, it cannot be found and imported in the `react-native` (node) environment."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266505337",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/181#issuecomment-266505337",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/181",
        "id": 266505337,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjUwNTMzNw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T18:08:00Z",
        "updated_at": "2016-12-12T18:08:00Z",
        "author_association": "OWNER",
        "body": "@jgkim ah, got it!\r\n\r\nIn that case, it seems like it would make more sense to fix this by removing these from `.npmignore`:\r\n\r\n```\r\nseamless-immutable.development.min.js\r\nseamless-immutable.development.js\r\nseamless-immutable.production.min.js\r\n```\r\n\r\n...and then having both `react-native` and `browser` point to the development build.\r\n\r\nWhat do you think?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266511266",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/181#issuecomment-266511266",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/181",
        "id": 266511266,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjUxMTI2Ng==",
        "user": {
            "login": "jgkim",
            "id": 86622,
            "node_id": "MDQ6VXNlcjg2NjIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/86622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgkim",
            "html_url": "https://github.com/jgkim",
            "followers_url": "https://api.github.com/users/jgkim/followers",
            "following_url": "https://api.github.com/users/jgkim/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgkim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgkim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgkim/subscriptions",
            "organizations_url": "https://api.github.com/users/jgkim/orgs",
            "repos_url": "https://api.github.com/users/jgkim/repos",
            "events_url": "https://api.github.com/users/jgkim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgkim/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T18:30:21Z",
        "updated_at": "2016-12-12T18:30:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman I guess the `react-native` environment is somewhat different from the `browser` environment. Do you think it's appropriate for `react-native` to fallback to the `browser` field? If it's the case, why do we need to distinguish `main` from `browser`?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266513959",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/181#issuecomment-266513959",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/181",
        "id": 266513959,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjUxMzk1OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T18:40:07Z",
        "updated_at": "2016-12-12T18:40:07Z",
        "author_association": "OWNER",
        "body": "Yeah maybe `main` should be `node`?\r\n\r\nI think since we know about `react-native` it makes sense to include it alongside `browser`, just to be explicit."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266596415",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/181#issuecomment-266596415",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/181",
        "id": 266596415,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU5NjQxNQ==",
        "user": {
            "login": "jgkim",
            "id": 86622,
            "node_id": "MDQ6VXNlcjg2NjIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/86622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgkim",
            "html_url": "https://github.com/jgkim",
            "followers_url": "https://api.github.com/users/jgkim/followers",
            "following_url": "https://api.github.com/users/jgkim/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgkim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgkim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgkim/subscriptions",
            "organizations_url": "https://api.github.com/users/jgkim/orgs",
            "repos_url": "https://api.github.com/users/jgkim/repos",
            "events_url": "https://api.github.com/users/jgkim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgkim/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-13T00:19:55Z",
        "updated_at": "2016-12-16T06:12:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "Making it explicit is good. :) I think `react-native` is more similar to `node` rather than `browser`. The packager of `react-native` will transpile and minify the source. However, whichever case we choose, it will work. ;)"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266650865",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/179#issuecomment-266650865",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/179",
        "id": 266650865,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjY1MDg2NQ==",
        "user": {
            "login": "saivann",
            "id": 3578089,
            "node_id": "MDQ6VXNlcjM1NzgwODk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3578089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saivann",
            "html_url": "https://github.com/saivann",
            "followers_url": "https://api.github.com/users/saivann/followers",
            "following_url": "https://api.github.com/users/saivann/following{/other_user}",
            "gists_url": "https://api.github.com/users/saivann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saivann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saivann/subscriptions",
            "organizations_url": "https://api.github.com/users/saivann/orgs",
            "repos_url": "https://api.github.com/users/saivann/repos",
            "events_url": "https://api.github.com/users/saivann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saivann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-13T05:45:09Z",
        "updated_at": "2016-12-13T05:45:09Z",
        "author_association": "CONTRIBUTOR",
        "body": "I am not very familiar with the infrastructure here, any easy way to reproduce the issue?\r\n\r\nI tried to open a pull request and let it run against travis, expecting that I would get relevant output from there (assuming travis had credentials to run cross-browser tests with some third party service). However I am always getting only:\r\n\r\n```\r\nZuul tried to run tests in saucelabs, however no saucelabs credentials were provided.\r\nSee the zuul wiki (https://github.com/defunctzombie/zuul/wiki/Cloud-testing) for info on how to setup cloud testing.\r\n```\r\n\r\nThis is by contrast to https://github.com/rtfeldman/seamless-immutable/pull/178 where there is one travis instance that reported tests that passed, with explicit mentions of different browsers. I am not sure how to get those tests to run while not being rtfeldman :) ."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266703791",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/181#issuecomment-266703791",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/181",
        "id": 266703791,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjcwMzc5MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-13T10:33:57Z",
        "updated_at": "2016-12-13T10:33:57Z",
        "author_association": "OWNER",
        "body": "@jgkim If you make those changes above, can you rebase on top of `master`? I pushed (what ought to be) a fix for Travis builds getting credentials errors on PRs."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266704096",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/179#issuecomment-266704096",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/179",
        "id": 266704096,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjcwNDA5Ng==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-13T10:35:13Z",
        "updated_at": "2016-12-13T10:35:13Z",
        "author_association": "OWNER",
        "body": "@saivann I pushed what theoretically seems like a fix for that credentials complaint.\r\n\r\nThat said, if you can get all the tests passing locally on Lodash 3.10, that should be good enough. \ud83d\ude42"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/266711668",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/184#issuecomment-266711668",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/184",
        "id": 266711668,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjcxMTY2OA==",
        "user": {
            "login": "coveralls",
            "id": 2354108,
            "node_id": "MDQ6VXNlcjIzNTQxMDg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2354108?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coveralls",
            "html_url": "https://github.com/coveralls",
            "followers_url": "https://api.github.com/users/coveralls/followers",
            "following_url": "https://api.github.com/users/coveralls/following{/other_user}",
            "gists_url": "https://api.github.com/users/coveralls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coveralls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coveralls/subscriptions",
            "organizations_url": "https://api.github.com/users/coveralls/orgs",
            "repos_url": "https://api.github.com/users/coveralls/repos",
            "events_url": "https://api.github.com/users/coveralls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coveralls/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-13T11:11:45Z",
        "updated_at": "2016-12-13T11:11:45Z",
        "author_association": "NONE",
        "body": "\n[![Coverage Status](https://coveralls.io/builds/9254773/badge)](https://coveralls.io/builds/9254773)\n\nCoverage remained the same at 95.942% when pulling **9bcdc4bbffbabd2e7feb8d24d06b5f65bed80f6c on jwt-travis** into **ecad6148fe457321b5b86fdf106b9dab92d6355c on master**.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/267196475",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/185#issuecomment-267196475",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/185",
        "id": 267196475,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzE5NjQ3NQ==",
        "user": {
            "login": "theogravity",
            "id": 855434,
            "node_id": "MDQ6VXNlcjg1NTQzNA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/855434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theogravity",
            "html_url": "https://github.com/theogravity",
            "followers_url": "https://api.github.com/users/theogravity/followers",
            "following_url": "https://api.github.com/users/theogravity/following{/other_user}",
            "gists_url": "https://api.github.com/users/theogravity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/theogravity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/theogravity/subscriptions",
            "organizations_url": "https://api.github.com/users/theogravity/orgs",
            "repos_url": "https://api.github.com/users/theogravity/repos",
            "events_url": "https://api.github.com/users/theogravity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/theogravity/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-15T00:07:08Z",
        "updated_at": "2016-12-15T00:07:44Z",
        "author_association": "NONE",
        "body": "Have you tried using the static version of the library?\r\n\r\nEg\r\n\r\n```\r\nconst Immutable = require('seamless-immutable').static\r\n\r\nconst data = Immutable.from({ myData: []})\r\n\r\nlet newData = Immutable.set(data, 'myData', ['blah'])\r\n\r\n```\r\n\r\nThe static version of the API should not have methods attached AFAIK"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/267196597",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/185#issuecomment-267196597",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/185",
        "id": 267196597,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzE5NjU5Nw==",
        "user": {
            "login": "peterpme",
            "id": 1211905,
            "node_id": "MDQ6VXNlcjEyMTE5MDU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1211905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterpme",
            "html_url": "https://github.com/peterpme",
            "followers_url": "https://api.github.com/users/peterpme/followers",
            "following_url": "https://api.github.com/users/peterpme/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterpme/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterpme/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterpme/subscriptions",
            "organizations_url": "https://api.github.com/users/peterpme/orgs",
            "repos_url": "https://api.github.com/users/peterpme/repos",
            "events_url": "https://api.github.com/users/peterpme/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterpme/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-15T00:07:52Z",
        "updated_at": "2016-12-15T00:07:52Z",
        "author_association": "NONE",
        "body": "Hey @theogravity thanks for getting back to me! This is great! "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/267199194",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/158#issuecomment-267199194",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/158",
        "id": 267199194,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzE5OTE5NA==",
        "user": {
            "login": "theogravity",
            "id": 855434,
            "node_id": "MDQ6VXNlcjg1NTQzNA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/855434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theogravity",
            "html_url": "https://github.com/theogravity",
            "followers_url": "https://api.github.com/users/theogravity/followers",
            "following_url": "https://api.github.com/users/theogravity/following{/other_user}",
            "gists_url": "https://api.github.com/users/theogravity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/theogravity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/theogravity/subscriptions",
            "organizations_url": "https://api.github.com/users/theogravity/orgs",
            "repos_url": "https://api.github.com/users/theogravity/repos",
            "events_url": "https://api.github.com/users/theogravity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/theogravity/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-15T00:23:11Z",
        "updated_at": "2016-12-15T00:23:11Z",
        "author_association": "NONE",
        "body": "This is amazing - thank you for the work. It's working great and things feel cleaner than it did before."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/267243964",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/181#issuecomment-267243964",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/181",
        "id": 267243964,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzI0Mzk2NA==",
        "user": {
            "login": "coveralls",
            "id": 2354108,
            "node_id": "MDQ6VXNlcjIzNTQxMDg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2354108?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coveralls",
            "html_url": "https://github.com/coveralls",
            "followers_url": "https://api.github.com/users/coveralls/followers",
            "following_url": "https://api.github.com/users/coveralls/following{/other_user}",
            "gists_url": "https://api.github.com/users/coveralls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coveralls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coveralls/subscriptions",
            "organizations_url": "https://api.github.com/users/coveralls/orgs",
            "repos_url": "https://api.github.com/users/coveralls/repos",
            "events_url": "https://api.github.com/users/coveralls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coveralls/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-15T05:41:44Z",
        "updated_at": "2016-12-15T05:41:44Z",
        "author_association": "NONE",
        "body": "\n[![Coverage Status](https://coveralls.io/builds/9291404/badge)](https://coveralls.io/builds/9291404)\n\nCoverage remained the same at 95.942% when pulling **5cd203438fcef6802eb3b7d69d9ce0180e342e1e on jgkim:fix/react-native** into **ab98236daa8d09a27545d7316fd084675104ec5b on rtfeldman:master**.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/267702268",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/149#issuecomment-267702268",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/149",
        "id": 267702268,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzcwMjI2OA==",
        "user": {
            "login": "zackify",
            "id": 449136,
            "node_id": "MDQ6VXNlcjQ0OTEzNg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/449136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zackify",
            "html_url": "https://github.com/zackify",
            "followers_url": "https://api.github.com/users/zackify/followers",
            "following_url": "https://api.github.com/users/zackify/following{/other_user}",
            "gists_url": "https://api.github.com/users/zackify/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zackify/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zackify/subscriptions",
            "organizations_url": "https://api.github.com/users/zackify/orgs",
            "repos_url": "https://api.github.com/users/zackify/repos",
            "events_url": "https://api.github.com/users/zackify/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zackify/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-16T21:39:33Z",
        "updated_at": "2016-12-16T21:39:33Z",
        "author_association": "NONE",
        "body": "Dang, this was the big thing I was excited about. I was hoping doing `state.bar.baz` would return undefined if `bar` didn't exist. I guess that can only be accomplished by using a proxy, which isn't in IE11, so it isn't feasible for me."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/267807177",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/181#issuecomment-267807177",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/181",
        "id": 267807177,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzgwNzE3Nw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-18T07:10:08Z",
        "updated_at": "2016-12-18T07:10:08Z",
        "author_association": "OWNER",
        "body": "Thanks @jgkim!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/267807270",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/180#issuecomment-267807270",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/180",
        "id": 267807270,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzgwNzI3MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-18T07:13:22Z",
        "updated_at": "2016-12-18T07:13:22Z",
        "author_association": "OWNER",
        "body": "@messense please reopen if `7.0.1` doesn't fix this!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/269466551",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/143#issuecomment-269466551",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/143",
        "id": 269466551,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTQ2NjU1MQ==",
        "user": {
            "login": "holyjak",
            "id": 624958,
            "node_id": "MDQ6VXNlcjYyNDk1OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/624958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holyjak",
            "html_url": "https://github.com/holyjak",
            "followers_url": "https://api.github.com/users/holyjak/followers",
            "following_url": "https://api.github.com/users/holyjak/following{/other_user}",
            "gists_url": "https://api.github.com/users/holyjak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holyjak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holyjak/subscriptions",
            "organizations_url": "https://api.github.com/users/holyjak/orgs",
            "repos_url": "https://api.github.com/users/holyjak/repos",
            "events_url": "https://api.github.com/users/holyjak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holyjak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-28T11:46:53Z",
        "updated_at": "2016-12-28T11:46:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "Fixing for Node: Couldn't we just do\r\n\r\n```js\r\nvar util = undefined;\r\ntry { util = require(\"util\"); } catch () {}\r\n...\r\nif (util) {\r\n  util.inherits(Immutable, Error);\r\n} else {\r\n  ImmutableError.prototype = Error.prototype; // + do something to fix it in the browser if necessary\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/269508148",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/57#issuecomment-269508148",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/57",
        "id": 269508148,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTUwODE0OA==",
        "user": {
            "login": "jbmeslin",
            "id": 4965570,
            "node_id": "MDQ6VXNlcjQ5NjU1NzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4965570?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbmeslin",
            "html_url": "https://github.com/jbmeslin",
            "followers_url": "https://api.github.com/users/jbmeslin/followers",
            "following_url": "https://api.github.com/users/jbmeslin/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbmeslin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbmeslin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbmeslin/subscriptions",
            "organizations_url": "https://api.github.com/users/jbmeslin/orgs",
            "repos_url": "https://api.github.com/users/jbmeslin/repos",
            "events_url": "https://api.github.com/users/jbmeslin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbmeslin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-28T17:14:09Z",
        "updated_at": "2016-12-28T17:14:09Z",
        "author_association": "NONE",
        "body": "Hi, \r\n\r\nhow replace a require('seamless-immutable').static with and ES6 import  ?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/269595219",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/190#issuecomment-269595219",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/190",
        "id": 269595219,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTU5NTIxOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-29T08:05:18Z",
        "updated_at": "2016-12-29T08:05:18Z",
        "author_association": "OWNER",
        "body": "Thanks!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/270816889",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/191#issuecomment-270816889",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/191",
        "id": 270816889,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDgxNjg4OQ==",
        "user": {
            "login": "aight8",
            "id": 1138623,
            "node_id": "MDQ6VXNlcjExMzg2MjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1138623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aight8",
            "html_url": "https://github.com/aight8",
            "followers_url": "https://api.github.com/users/aight8/followers",
            "following_url": "https://api.github.com/users/aight8/following{/other_user}",
            "gists_url": "https://api.github.com/users/aight8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aight8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aight8/subscriptions",
            "organizations_url": "https://api.github.com/users/aight8/orgs",
            "repos_url": "https://api.github.com/users/aight8/repos",
            "events_url": "https://api.github.com/users/aight8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aight8/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-06T02:36:17Z",
        "updated_at": "2017-01-06T02:41:50Z",
        "author_association": "NONE",
        "body": "Why was with issue deleted without one comment?\r\nWas using the method on the wrong immutable library.\r\nAnyway: documentation missing for isImmutable, and no comment in an issue."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/271212818",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/191#issuecomment-271212818",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/191",
        "id": 271212818,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTIxMjgxOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-09T05:19:22Z",
        "updated_at": "2017-01-09T05:19:22Z",
        "author_association": "OWNER",
        "body": "It was closed without comment because it was opened without a description. The title was \"Expose isImmutable method,\" which is not much to go on considering the method is already exposed. I didn't want any contributors to waste their time trying to guess what you wanted, so I closed it.\r\n\r\nI don't know what \"Was using the method on the wrong immutable library\" means, but I opened https://github.com/rtfeldman/seamless-immutable/issues/192 about the missing documentation. \ud83d\ude42"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/271283861",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/192#issuecomment-271283861",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/192",
        "id": 271283861,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTI4Mzg2MQ==",
        "user": {
            "login": "arthur31416",
            "id": 12168491,
            "node_id": "MDQ6VXNlcjEyMTY4NDkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/12168491?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthur31416",
            "html_url": "https://github.com/arthur31416",
            "followers_url": "https://api.github.com/users/arthur31416/followers",
            "following_url": "https://api.github.com/users/arthur31416/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthur31416/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthur31416/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthur31416/subscriptions",
            "organizations_url": "https://api.github.com/users/arthur31416/orgs",
            "repos_url": "https://api.github.com/users/arthur31416/repos",
            "events_url": "https://api.github.com/users/arthur31416/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthur31416/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-09T13:27:58Z",
        "updated_at": "2017-01-09T13:27:58Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hi. I just opened a PR to document it. I'd be glad to tweak if necessary."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/271517657",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/193#issuecomment-271517657",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/193",
        "id": 271517657,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTUxNzY1Nw==",
        "user": {
            "login": "arthur31416",
            "id": 12168491,
            "node_id": "MDQ6VXNlcjEyMTY4NDkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/12168491?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthur31416",
            "html_url": "https://github.com/arthur31416",
            "followers_url": "https://api.github.com/users/arthur31416/followers",
            "following_url": "https://api.github.com/users/arthur31416/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthur31416/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthur31416/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthur31416/subscriptions",
            "organizations_url": "https://api.github.com/users/arthur31416/orgs",
            "repos_url": "https://api.github.com/users/arthur31416/repos",
            "events_url": "https://api.github.com/users/arthur31416/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthur31416/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-10T08:43:42Z",
        "updated_at": "2017-01-10T08:43:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "My bad, this is fixed !"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/271542758",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/160#issuecomment-271542758",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/160",
        "id": 271542758,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTU0Mjc1OA==",
        "user": {
            "login": "draunkin",
            "id": 7127081,
            "node_id": "MDQ6VXNlcjcxMjcwODE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7127081?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/draunkin",
            "html_url": "https://github.com/draunkin",
            "followers_url": "https://api.github.com/users/draunkin/followers",
            "following_url": "https://api.github.com/users/draunkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/draunkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/draunkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/draunkin/subscriptions",
            "organizations_url": "https://api.github.com/users/draunkin/orgs",
            "repos_url": "https://api.github.com/users/draunkin/repos",
            "events_url": "https://api.github.com/users/draunkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/draunkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-10T10:40:53Z",
        "updated_at": "2017-01-10T10:40:53Z",
        "author_association": "NONE",
        "body": "Thanks so much for this.  I was developing some reporting in our application which uses data that is not frequently accessed and only then did I realise this was happening to some of my objects which have since been serialized into the db.\r\n... well can't reverse time but so glad you've already got a solution for it!\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/271677985",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/193#issuecomment-271677985",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/193",
        "id": 271677985,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTY3Nzk4NQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-10T19:46:36Z",
        "updated_at": "2017-01-10T19:46:36Z",
        "author_association": "OWNER",
        "body": "Thanks @arthur31416!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/272192218",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/188#issuecomment-272192218",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/188",
        "id": 272192218,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjE5MjIxOA==",
        "user": {
            "login": "dentrado",
            "id": 226438,
            "node_id": "MDQ6VXNlcjIyNjQzOA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/226438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dentrado",
            "html_url": "https://github.com/dentrado",
            "followers_url": "https://api.github.com/users/dentrado/followers",
            "following_url": "https://api.github.com/users/dentrado/following{/other_user}",
            "gists_url": "https://api.github.com/users/dentrado/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dentrado/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dentrado/subscriptions",
            "organizations_url": "https://api.github.com/users/dentrado/orgs",
            "repos_url": "https://api.github.com/users/dentrado/repos",
            "events_url": "https://api.github.com/users/dentrado/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dentrado/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-12T15:26:31Z",
        "updated_at": "2017-01-12T15:26:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "ping @rtfeldman"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/273547686",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/182#issuecomment-273547686",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/182",
        "id": 273547686,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzU0NzY4Ng==",
        "user": {
            "login": "niahoo",
            "id": 380825,
            "node_id": "MDQ6VXNlcjM4MDgyNQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/380825?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/niahoo",
            "html_url": "https://github.com/niahoo",
            "followers_url": "https://api.github.com/users/niahoo/followers",
            "following_url": "https://api.github.com/users/niahoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/niahoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/niahoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/niahoo/subscriptions",
            "organizations_url": "https://api.github.com/users/niahoo/orgs",
            "repos_url": "https://api.github.com/users/niahoo/repos",
            "events_url": "https://api.github.com/users/niahoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/niahoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-18T17:47:20Z",
        "updated_at": "2017-04-26T13:26:58Z",
        "author_association": "NONE",
        "body": "I second this. I don't care if the function is called `sort` or `sorted` or whatever but we need this.\r\n\r\nWe could also add `sortBy('name')` and `sortBy(item => item.name)` helpers ; or it may be beyond the scope of this library."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/273998791",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/171#issuecomment-273998791",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/171",
        "id": 273998791,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzk5ODc5MQ==",
        "user": {
            "login": "gavin-gmlab",
            "id": 20513400,
            "node_id": "MDQ6VXNlcjIwNTEzNDAw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/20513400?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gavin-gmlab",
            "html_url": "https://github.com/gavin-gmlab",
            "followers_url": "https://api.github.com/users/gavin-gmlab/followers",
            "following_url": "https://api.github.com/users/gavin-gmlab/following{/other_user}",
            "gists_url": "https://api.github.com/users/gavin-gmlab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gavin-gmlab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gavin-gmlab/subscriptions",
            "organizations_url": "https://api.github.com/users/gavin-gmlab/orgs",
            "repos_url": "https://api.github.com/users/gavin-gmlab/repos",
            "events_url": "https://api.github.com/users/gavin-gmlab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gavin-gmlab/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-20T07:45:13Z",
        "updated_at": "2017-01-20T07:45:13Z",
        "author_association": "NONE",
        "body": "I'm having this problem also. \r\n\r\nSeems like a .set still works, but a .get does not get the object back properly.\r\n\r\nTried a workaround to create a new map object => newMap = new Map(state.oldMap._mapData) seems to work. Not sure if there are other implications \r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/274219603",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/171#issuecomment-274219603",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/171",
        "id": 274219603,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDIxOTYwMw==",
        "user": {
            "login": "noahehall",
            "id": 10324554,
            "node_id": "MDQ6VXNlcjEwMzI0NTU0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10324554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noahehall",
            "html_url": "https://github.com/noahehall",
            "followers_url": "https://api.github.com/users/noahehall/followers",
            "following_url": "https://api.github.com/users/noahehall/following{/other_user}",
            "gists_url": "https://api.github.com/users/noahehall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noahehall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noahehall/subscriptions",
            "organizations_url": "https://api.github.com/users/noahehall/orgs",
            "repos_url": "https://api.github.com/users/noahehall/repos",
            "events_url": "https://api.github.com/users/noahehall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noahehall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-21T01:07:40Z",
        "updated_at": "2017-01-21T01:07:40Z",
        "author_association": "NONE",
        "body": "yeah sorry guys still havent had time to work on this, things at work have been crazy"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/274958054",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/50#issuecomment-274958054",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/50",
        "id": 274958054,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDk1ODA1NA==",
        "user": {
            "login": "tleunen",
            "id": 1972567,
            "node_id": "MDQ6VXNlcjE5NzI1Njc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1972567?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tleunen",
            "html_url": "https://github.com/tleunen",
            "followers_url": "https://api.github.com/users/tleunen/followers",
            "following_url": "https://api.github.com/users/tleunen/following{/other_user}",
            "gists_url": "https://api.github.com/users/tleunen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tleunen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tleunen/subscriptions",
            "organizations_url": "https://api.github.com/users/tleunen/orgs",
            "repos_url": "https://api.github.com/users/tleunen/repos",
            "events_url": "https://api.github.com/users/tleunen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tleunen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-24T22:20:33Z",
        "updated_at": "2017-01-24T22:21:09Z",
        "author_association": "NONE",
        "body": "If your webpack configuration uses the default `mainFields`, or use defaults values, with `browser` first before `main`, the development build from seamless-immutable will be used, even though you set `NODE_ENV` to prod.\r\n\r\nSee https://webpack.js.org/configuration/resolve/#resolve-mainfields\r\n\r\nThe default target of webpack is `web`, so therefore, every use will use the development version by default."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/275531245",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-275531245",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 275531245,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTUzMTI0NQ==",
        "user": {
            "login": "rgbkrk",
            "id": 836375,
            "node_id": "MDQ6VXNlcjgzNjM3NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rgbkrk",
            "html_url": "https://github.com/rgbkrk",
            "followers_url": "https://api.github.com/users/rgbkrk/followers",
            "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
            "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
            "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
            "repos_url": "https://api.github.com/users/rgbkrk/repos",
            "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-26T22:15:40Z",
        "updated_at": "2017-01-26T22:15:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "Would anyone be interested in contributing their definitions to https://github.com/flowtype/flow-typed?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/276049283",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-276049283",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 276049283,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjA0OTI4Mw==",
        "user": {
            "login": "ajhyndman",
            "id": 11449340,
            "node_id": "MDQ6VXNlcjExNDQ5MzQw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11449340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhyndman",
            "html_url": "https://github.com/ajhyndman",
            "followers_url": "https://api.github.com/users/ajhyndman/followers",
            "following_url": "https://api.github.com/users/ajhyndman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhyndman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhyndman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhyndman/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhyndman/orgs",
            "repos_url": "https://api.github.com/users/ajhyndman/repos",
            "events_url": "https://api.github.com/users/ajhyndman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhyndman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-30T12:19:52Z",
        "updated_at": "2017-01-30T12:19:52Z",
        "author_association": "NONE",
        "body": "This is the latest iteration of my version:\r\n\r\nhttps://github.com/ajhyndman/fantasia/blob/master/flow/libs/seamless-immutable.d.js\r\n\r\nFeel free to use it to make a PR against the `flow-typed` repo."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/276505662",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/179#issuecomment-276505662",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/179",
        "id": 276505662,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjUwNTY2Mg==",
        "user": {
            "login": "ryantemple",
            "id": 2178635,
            "node_id": "MDQ6VXNlcjIxNzg2MzU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2178635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryantemple",
            "html_url": "https://github.com/ryantemple",
            "followers_url": "https://api.github.com/users/ryantemple/followers",
            "following_url": "https://api.github.com/users/ryantemple/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryantemple/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryantemple/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryantemple/subscriptions",
            "organizations_url": "https://api.github.com/users/ryantemple/orgs",
            "repos_url": "https://api.github.com/users/ryantemple/repos",
            "events_url": "https://api.github.com/users/ryantemple/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryantemple/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-31T21:56:53Z",
        "updated_at": "2017-01-31T21:56:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "I'm still seeing the same error as above - the only test that seems to break locally is the omitBy test here https://github.com/rtfeldman/seamless-immutable/blob/master/test/ImmutableObject/test-without.js#L176 which I've raised a PR for #196 "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/276876544",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/179#issuecomment-276876544",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/179",
        "id": 276876544,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njg3NjU0NA==",
        "user": {
            "login": "wmertens",
            "id": 54934,
            "node_id": "MDQ6VXNlcjU0OTM0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/54934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wmertens",
            "html_url": "https://github.com/wmertens",
            "followers_url": "https://api.github.com/users/wmertens/followers",
            "following_url": "https://api.github.com/users/wmertens/following{/other_user}",
            "gists_url": "https://api.github.com/users/wmertens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wmertens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wmertens/subscriptions",
            "organizations_url": "https://api.github.com/users/wmertens/orgs",
            "repos_url": "https://api.github.com/users/wmertens/repos",
            "events_url": "https://api.github.com/users/wmertens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wmertens/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-02T06:08:19Z",
        "updated_at": "2017-02-02T06:08:19Z",
        "author_association": "NONE",
        "body": "Hmm, lodash only dropped support for ie8 and below. So either you found a\nbug in lodash or you need to load the es5 shim?\n\nOn Tue, Jan 31, 2017, 10:56 PM Ryan Temple <notifications@github.com> wrote:\n\n> I'm still seeing the same error as above - the only test that seems to\n> break locally is the omitBy test here\n> https://github.com/rtfeldman/seamless-immutable/blob/master/test/ImmutableObject/test-without.js#L176\n> which I've raised a PR for #196\n> <https://github.com/rtfeldman/seamless-immutable/pull/196>\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/rtfeldman/seamless-immutable/issues/179#issuecomment-276505662>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AADWlrzUVyv2v-vCufqXdpexQpuKta3Kks5rX64mgaJpZM4LKEr4>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/277917682",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/171#issuecomment-277917682",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/171",
        "id": 277917682,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzkxNzY4Mg==",
        "user": {
            "login": "noahehall",
            "id": 10324554,
            "node_id": "MDQ6VXNlcjEwMzI0NTU0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10324554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noahehall",
            "html_url": "https://github.com/noahehall",
            "followers_url": "https://api.github.com/users/noahehall/followers",
            "following_url": "https://api.github.com/users/noahehall/following{/other_user}",
            "gists_url": "https://api.github.com/users/noahehall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noahehall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noahehall/subscriptions",
            "organizations_url": "https://api.github.com/users/noahehall/orgs",
            "repos_url": "https://api.github.com/users/noahehall/repos",
            "events_url": "https://api.github.com/users/noahehall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noahehall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-07T07:00:45Z",
        "updated_at": "2017-02-07T07:00:45Z",
        "author_association": "NONE",
        "body": "Finally got some time, picking this up ;)"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/278219713",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/171#issuecomment-278219713",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/171",
        "id": 278219713,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODIxOTcxMw==",
        "user": {
            "login": "noahehall",
            "id": 10324554,
            "node_id": "MDQ6VXNlcjEwMzI0NTU0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10324554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noahehall",
            "html_url": "https://github.com/noahehall",
            "followers_url": "https://api.github.com/users/noahehall/followers",
            "following_url": "https://api.github.com/users/noahehall/following{/other_user}",
            "gists_url": "https://api.github.com/users/noahehall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noahehall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noahehall/subscriptions",
            "organizations_url": "https://api.github.com/users/noahehall/orgs",
            "repos_url": "https://api.github.com/users/noahehall/repos",
            "events_url": "https://api.github.com/users/noahehall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noahehall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-08T03:32:17Z",
        "updated_at": "2017-02-08T04:02:16Z",
        "author_association": "NONE",
        "body": "so i got drunk last night and worked on integrating maps,\r\n\r\nyou can see a preview here:\r\nhttps://github.com/rtfeldman/seamless-immutable/pull/198\r\n\r\ni'll need to do some clean up and refacter it a bit, add some tests, then ill drop the WIP tag from the pull request"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/278662716",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/153#issuecomment-278662716",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/153",
        "id": 278662716,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODY2MjcxNg==",
        "user": {
            "login": "dhirendrarathod2000",
            "id": 1930681,
            "node_id": "MDQ6VXNlcjE5MzA2ODE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1930681?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhirendrarathod2000",
            "html_url": "https://github.com/dhirendrarathod2000",
            "followers_url": "https://api.github.com/users/dhirendrarathod2000/followers",
            "following_url": "https://api.github.com/users/dhirendrarathod2000/following{/other_user}",
            "gists_url": "https://api.github.com/users/dhirendrarathod2000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dhirendrarathod2000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dhirendrarathod2000/subscriptions",
            "organizations_url": "https://api.github.com/users/dhirendrarathod2000/orgs",
            "repos_url": "https://api.github.com/users/dhirendrarathod2000/repos",
            "events_url": "https://api.github.com/users/dhirendrarathod2000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dhirendrarathod2000/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-09T14:48:06Z",
        "updated_at": "2017-02-09T14:48:06Z",
        "author_association": "NONE",
        "body": "@rtfeldman Any ETA when the fix will be merged to master?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/279258818",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/196#issuecomment-279258818",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/196",
        "id": 279258818,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTI1ODgxOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-12T23:05:56Z",
        "updated_at": "2017-02-12T23:05:56Z",
        "author_association": "OWNER",
        "body": "Thanks @ryantemple!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/279258891",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/195#issuecomment-279258891",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/195",
        "id": 279258891,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTI1ODg5MQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-12T23:07:03Z",
        "updated_at": "2017-02-12T23:07:03Z",
        "author_association": "OWNER",
        "body": "Lovely, thank you @mbjurman! \ud83d\ude0d "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/279259232",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/199#issuecomment-279259232",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/199",
        "id": 279259232,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTI1OTIzMg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-12T23:12:07Z",
        "updated_at": "2017-02-12T23:12:07Z",
        "author_association": "OWNER",
        "body": "> notice that in es6 this has finally been admitted into the language and is no longer considered a bad practice to my best knowledge\r\n\r\n[Unfortuantely not.](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto)\r\n\r\nMore to the point, I appreciate the effort here, but I'm not okay with this from a design perspective. [I think consistency of immutability is the right default](https://github.com/rtfeldman/seamless-immutable/issues/59#issuecomment-154743281), and making it so that prototype comes along by default means that it's super easy to call `Immutable` on something and be surprised that it's not actually immutable (because the prototype methods access mutable state).\r\n\r\nI'm okay allowing this on an opt-in basis, but I am not okay with making it the default.\r\n\r\nSorry you spent so much time on this! \ud83d\ude05 "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/279259418",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/194#issuecomment-279259418",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/194",
        "id": 279259418,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTI1OTQxOA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-12T23:15:12Z",
        "updated_at": "2017-02-12T23:15:12Z",
        "author_association": "OWNER",
        "body": "@dentrado Thanks! Would you mind adding a test to cover the behavior of rejected promise values?\r\n\r\nAlso, no need to check in the built files; I'll do that before publishing the next release. \ud83d\ude42"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/279259589",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/188#issuecomment-279259589",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/188",
        "id": 279259589,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTI1OTU4OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-12T23:16:33Z",
        "updated_at": "2017-02-12T23:16:33Z",
        "author_association": "OWNER",
        "body": "Great, thank you @dentrado!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/279259946",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/182#issuecomment-279259946",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/182",
        "id": 279259946,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTI1OTk0Ng==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-12T23:18:46Z",
        "updated_at": "2017-02-12T23:18:46Z",
        "author_association": "OWNER",
        "body": "\ud83d\udc4d to adding `Immutable.sortBy` (statically, not as an override - I want to preserve the \"don't surprisingly change mutable methods to be non-mutating\" behavior) if anyone wants to make a PR!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/279322123",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/194#issuecomment-279322123",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/194",
        "id": 279322123,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTMyMjEyMw==",
        "user": {
            "login": "dentrado",
            "id": 226438,
            "node_id": "MDQ6VXNlcjIyNjQzOA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/226438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dentrado",
            "html_url": "https://github.com/dentrado",
            "followers_url": "https://api.github.com/users/dentrado/followers",
            "following_url": "https://api.github.com/users/dentrado/following{/other_user}",
            "gists_url": "https://api.github.com/users/dentrado/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dentrado/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dentrado/subscriptions",
            "organizations_url": "https://api.github.com/users/dentrado/orgs",
            "repos_url": "https://api.github.com/users/dentrado/repos",
            "events_url": "https://api.github.com/users/dentrado/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dentrado/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-13T08:26:45Z",
        "updated_at": "2017-02-13T08:26:45Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman sure, I've added an additional test now."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/279640500",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/199#issuecomment-279640500",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/199",
        "id": 279640500,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTY0MDUwMA==",
        "user": {
            "login": "nadavsinai",
            "id": 2870816,
            "node_id": "MDQ6VXNlcjI4NzA4MTY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2870816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nadavsinai",
            "html_url": "https://github.com/nadavsinai",
            "followers_url": "https://api.github.com/users/nadavsinai/followers",
            "following_url": "https://api.github.com/users/nadavsinai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nadavsinai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nadavsinai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nadavsinai/subscriptions",
            "organizations_url": "https://api.github.com/users/nadavsinai/orgs",
            "repos_url": "https://api.github.com/users/nadavsinai/repos",
            "events_url": "https://api.github.com/users/nadavsinai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nadavsinai/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-14T08:34:12Z",
        "updated_at": "2017-02-14T08:34:12Z",
        "author_association": "NONE",
        "body": "First of all thank you for your prompt response, I think that this PR should be split into a few, there's a couple of issues:\r\n1) the first commit Algotec/seamless-immutable@dd5c000  fixes a bug where the config object is ignored when calling set/setIn, this is unrelated to taking existing prototypes and continues your philosophy of making the user explicitly declare the prototype - though making it possible for props to have prototypes at all.\r\n2) the 2nd and third commits here are the thing we differ about, I come from a perspective where the developer that chooses to use this library has awareness of immutability, the responsibility to make the prototype methods not alter the same object but to return a new one should be documented, but I don't think that loosing object prototypes should be a side-effect of calling for immutability, especially since you make it so unpredictable - main objects can have prototypes (with config) but object props can not? Calling Set will remove prototypes?\r\nnow about the possibility of using existing prototypes, this can be an opt-in configuration, just like the ability to stop the run-time prototype modification you are doing already.\r\n3) the call to __proto__ can be changed to\r\n````\r\n (typeof Object.getPrototypeOf =='function') ? Object.getPrototypeOf(obj) : obj.__proto__\r\n````\r\nwhich brings you into compatibility but shows that you've tried to make it use the official syntax...\r\n*there is no harm in  getting protoypes*  - ** read ** \r\nthe harm is done when changing prototypes  ** write ** - and this was something that can be (and should) not be done by your lib, imagine something like getting existing prototype, then using object assign to create a new object with all prototype methods and seamless-immutable methods, then using this new prototype for the object using Object.create\r\n\r\n```\r\nlet oldProto =  (typeof Object.getPrototypeOf =='function') ? Object.getPrototypeOf(obj) : obj.__proto__;\r\nlet newProto = Object.assign({},oldProto ,immtableObjectProto);\r\nlet clone = Object.create(newProto,obj);\r\n````\r\n\r\nI can fix this PR to do this, and make this a configurable option, defaults can be as you wish.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/280210221",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/128#issuecomment-280210221",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/128",
        "id": 280210221,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDIxMDIyMQ==",
        "user": {
            "login": "ronniegong",
            "id": 16569639,
            "node_id": "MDQ6VXNlcjE2NTY5NjM5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/16569639?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ronniegong",
            "html_url": "https://github.com/ronniegong",
            "followers_url": "https://api.github.com/users/ronniegong/followers",
            "following_url": "https://api.github.com/users/ronniegong/following{/other_user}",
            "gists_url": "https://api.github.com/users/ronniegong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ronniegong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ronniegong/subscriptions",
            "organizations_url": "https://api.github.com/users/ronniegong/orgs",
            "repos_url": "https://api.github.com/users/ronniegong/repos",
            "events_url": "https://api.github.com/users/ronniegong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ronniegong/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-16T02:22:10Z",
        "updated_at": "2017-02-16T02:22:10Z",
        "author_association": "NONE",
        "body": "so, is seamless-immutable really that slow?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/282989620",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/188#issuecomment-282989620",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/188",
        "id": 282989620,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjk4OTYyMA==",
        "user": {
            "login": "hassanbazzi",
            "id": 3339608,
            "node_id": "MDQ6VXNlcjMzMzk2MDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3339608?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hassanbazzi",
            "html_url": "https://github.com/hassanbazzi",
            "followers_url": "https://api.github.com/users/hassanbazzi/followers",
            "following_url": "https://api.github.com/users/hassanbazzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/hassanbazzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hassanbazzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hassanbazzi/subscriptions",
            "organizations_url": "https://api.github.com/users/hassanbazzi/orgs",
            "repos_url": "https://api.github.com/users/hassanbazzi/repos",
            "events_url": "https://api.github.com/users/hassanbazzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hassanbazzi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-28T09:35:27Z",
        "updated_at": "2017-02-28T09:35:27Z",
        "author_association": "NONE",
        "body": "Any idea when this will be released?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/283963692",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/188#issuecomment-283963692",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/188",
        "id": 283963692,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzk2MzY5Mg==",
        "user": {
            "login": "bm-axel",
            "id": 25319648,
            "node_id": "MDQ6VXNlcjI1MzE5NjQ4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25319648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bm-axel",
            "html_url": "https://github.com/bm-axel",
            "followers_url": "https://api.github.com/users/bm-axel/followers",
            "following_url": "https://api.github.com/users/bm-axel/following{/other_user}",
            "gists_url": "https://api.github.com/users/bm-axel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bm-axel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bm-axel/subscriptions",
            "organizations_url": "https://api.github.com/users/bm-axel/orgs",
            "repos_url": "https://api.github.com/users/bm-axel/repos",
            "events_url": "https://api.github.com/users/bm-axel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bm-axel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-03T14:15:46Z",
        "updated_at": "2017-03-03T14:15:46Z",
        "author_association": "NONE",
        "body": "So this hasn't been released yet? I just downloaded seamless-immutable for the first time today and saw Immutable.getIn in the readme and was surprised to find it not working!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/284452313",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/194#issuecomment-284452313",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/194",
        "id": 284452313,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDQ1MjMxMw==",
        "user": {
            "login": "dhirendrarathod2000",
            "id": 1930681,
            "node_id": "MDQ6VXNlcjE5MzA2ODE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1930681?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhirendrarathod2000",
            "html_url": "https://github.com/dhirendrarathod2000",
            "followers_url": "https://api.github.com/users/dhirendrarathod2000/followers",
            "following_url": "https://api.github.com/users/dhirendrarathod2000/following{/other_user}",
            "gists_url": "https://api.github.com/users/dhirendrarathod2000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dhirendrarathod2000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dhirendrarathod2000/subscriptions",
            "organizations_url": "https://api.github.com/users/dhirendrarathod2000/orgs",
            "repos_url": "https://api.github.com/users/dhirendrarathod2000/repos",
            "events_url": "https://api.github.com/users/dhirendrarathod2000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dhirendrarathod2000/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-06T16:35:49Z",
        "updated_at": "2017-03-06T16:35:49Z",
        "author_association": "NONE",
        "body": "@dentrado @rtfeldman\\\r\nAny ETA when it will be released?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/285016885",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/188#issuecomment-285016885",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/188",
        "id": 285016885,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTAxNjg4NQ==",
        "user": {
            "login": "smashercosmo",
            "id": 273283,
            "node_id": "MDQ6VXNlcjI3MzI4Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/273283?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smashercosmo",
            "html_url": "https://github.com/smashercosmo",
            "followers_url": "https://api.github.com/users/smashercosmo/followers",
            "following_url": "https://api.github.com/users/smashercosmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/smashercosmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smashercosmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smashercosmo/subscriptions",
            "organizations_url": "https://api.github.com/users/smashercosmo/orgs",
            "repos_url": "https://api.github.com/users/smashercosmo/repos",
            "events_url": "https://api.github.com/users/smashercosmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smashercosmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-08T11:26:57Z",
        "updated_at": "2017-03-08T11:26:57Z",
        "author_association": "NONE",
        "body": "@rtfeldman Would it be possible to cut a release?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/285988626",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/201#issuecomment-285988626",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/201",
        "id": 285988626,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk4ODYyNg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-12T23:55:48Z",
        "updated_at": "2017-03-12T23:55:48Z",
        "author_association": "OWNER",
        "body": "There are not, but any normal linter should work with it just fine!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/285988715",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/204#issuecomment-285988715",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/204",
        "id": 285988715,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk4ODcxNQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-12T23:57:16Z",
        "updated_at": "2017-03-12T23:57:16Z",
        "author_association": "OWNER",
        "body": "It's because `merge` creates a new object. They may have the same contents, but they won't be reference equal (`===`) \ud83d\ude42"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/285988879",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/203#issuecomment-285988879",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/203",
        "id": 285988879,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk4ODg3OQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-12T23:59:59Z",
        "updated_at": "2017-03-12T23:59:59Z",
        "author_association": "OWNER",
        "body": "According to the docs, [blobs are immutable](https://developer.mozilla.org/en-US/docs/Web/API/Blob).\r\n\r\n> A `Blob` object represents a file-like object of immutable, raw data.\r\n\r\nThis suggests we should be able to treat them as such, just like how we currently treat strings!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/286017352",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/194#issuecomment-286017352",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/194",
        "id": 286017352,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjAxNzM1Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-13T05:15:27Z",
        "updated_at": "2017-03-13T05:15:27Z",
        "author_association": "OWNER",
        "body": "Out now! `7.1.0`"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/286142444",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/206#issuecomment-286142444",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/206",
        "id": 286142444,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjE0MjQ0NA==",
        "user": {
            "login": "dentrado",
            "id": 226438,
            "node_id": "MDQ6VXNlcjIyNjQzOA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/226438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dentrado",
            "html_url": "https://github.com/dentrado",
            "followers_url": "https://api.github.com/users/dentrado/followers",
            "following_url": "https://api.github.com/users/dentrado/following{/other_user}",
            "gists_url": "https://api.github.com/users/dentrado/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dentrado/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dentrado/subscriptions",
            "organizations_url": "https://api.github.com/users/dentrado/orgs",
            "repos_url": "https://api.github.com/users/dentrado/repos",
            "events_url": "https://api.github.com/users/dentrado/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dentrado/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-13T15:29:00Z",
        "updated_at": "2017-03-13T15:29:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "I've made a PR that should fix the problem: https://github.com/rtfeldman/seamless-immutable/pull/205"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/286162934",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/205#issuecomment-286162934",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/205",
        "id": 286162934,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjE2MjkzNA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-13T16:31:34Z",
        "updated_at": "2017-03-13T16:31:34Z",
        "author_association": "OWNER",
        "body": "Thanks @dentrado!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/286163733",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/205#issuecomment-286163733",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/205",
        "id": 286163733,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjE2MzczMw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-13T16:34:13Z",
        "updated_at": "2017-03-13T16:34:13Z",
        "author_association": "OWNER",
        "body": "Published as 7.1.1"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/286163809",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/206#issuecomment-286163809",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/206",
        "id": 286163809,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjE2MzgwOQ==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-13T16:34:30Z",
        "updated_at": "2017-03-13T16:34:30Z",
        "author_association": "OWNER",
        "body": "@LukeusMaximus should be fixed in 7.1.1"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/286362638",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/206#issuecomment-286362638",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/206",
        "id": 286362638,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjM2MjYzOA==",
        "user": {
            "login": "LukeusMaximus",
            "id": 866571,
            "node_id": "MDQ6VXNlcjg2NjU3MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/866571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LukeusMaximus",
            "html_url": "https://github.com/LukeusMaximus",
            "followers_url": "https://api.github.com/users/LukeusMaximus/followers",
            "following_url": "https://api.github.com/users/LukeusMaximus/following{/other_user}",
            "gists_url": "https://api.github.com/users/LukeusMaximus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LukeusMaximus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LukeusMaximus/subscriptions",
            "organizations_url": "https://api.github.com/users/LukeusMaximus/orgs",
            "repos_url": "https://api.github.com/users/LukeusMaximus/repos",
            "events_url": "https://api.github.com/users/LukeusMaximus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LukeusMaximus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-14T09:11:08Z",
        "updated_at": "2017-03-14T09:11:08Z",
        "author_association": "NONE",
        "body": "Yup, all fixed."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/288150759",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/208#issuecomment-288150759",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/208",
        "id": 288150759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODE1MDc1OQ==",
        "user": {
            "login": "pladaria",
            "id": 579417,
            "node_id": "MDQ6VXNlcjU3OTQxNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/579417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pladaria",
            "html_url": "https://github.com/pladaria",
            "followers_url": "https://api.github.com/users/pladaria/followers",
            "following_url": "https://api.github.com/users/pladaria/following{/other_user}",
            "gists_url": "https://api.github.com/users/pladaria/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pladaria/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pladaria/subscriptions",
            "organizations_url": "https://api.github.com/users/pladaria/orgs",
            "repos_url": "https://api.github.com/users/pladaria/repos",
            "events_url": "https://api.github.com/users/pladaria/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pladaria/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-21T17:14:07Z",
        "updated_at": "2017-03-21T17:16:09Z",
        "author_association": "NONE",
        "body": "Just for reference: https://promisesaplus.com/\r\n\r\n> Terminology\r\n> \r\n> 1. \u201cpromise\u201d is an object or function with a then method whose behavior conforms to this specification.\r\n> 2. \u201cthenable\u201d is an object or function that defines a then method.\r\n\r\nI think it's fair to assume that an object or function with a `then` method is a promise. Anyway, if this gives conflicts, this behaviour could be overridden via `config`."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/288154589",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/208#issuecomment-288154589",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/208",
        "id": 288154589,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODE1NDU4OQ==",
        "user": {
            "login": "medovob",
            "id": 465951,
            "node_id": "MDQ6VXNlcjQ2NTk1MQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/465951?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medovob",
            "html_url": "https://github.com/medovob",
            "followers_url": "https://api.github.com/users/medovob/followers",
            "following_url": "https://api.github.com/users/medovob/following{/other_user}",
            "gists_url": "https://api.github.com/users/medovob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medovob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medovob/subscriptions",
            "organizations_url": "https://api.github.com/users/medovob/orgs",
            "repos_url": "https://api.github.com/users/medovob/repos",
            "events_url": "https://api.github.com/users/medovob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medovob/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-21T17:25:09Z",
        "updated_at": "2017-03-21T17:25:09Z",
        "author_association": "NONE",
        "body": "Thanks @pladaria but I think you've just highlighted the clear distinction between the two. Its not safe to assume that a \"thenable\" conforms to the Promise specification.\r\n\r\nThere must be a better way to identify a Promise but I'm not sure what that is"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/288184099",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/208#issuecomment-288184099",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/208",
        "id": 288184099,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODE4NDA5OQ==",
        "user": {
            "login": "medovob",
            "id": 465951,
            "node_id": "MDQ6VXNlcjQ2NTk1MQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/465951?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medovob",
            "html_url": "https://github.com/medovob",
            "followers_url": "https://api.github.com/users/medovob/followers",
            "following_url": "https://api.github.com/users/medovob/following{/other_user}",
            "gists_url": "https://api.github.com/users/medovob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medovob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medovob/subscriptions",
            "organizations_url": "https://api.github.com/users/medovob/orgs",
            "repos_url": "https://api.github.com/users/medovob/repos",
            "events_url": "https://api.github.com/users/medovob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medovob/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-21T18:59:45Z",
        "updated_at": "2017-03-21T18:59:45Z",
        "author_association": "NONE",
        "body": "Perhaps something like:\r\n\r\n```js\r\nfunction isPromise(obj) {\r\n  return typeof obj === 'object' &&\r\n    typeof obj.constructor === \"function\" &&\r\n    typeof obj.constructor.resolve === 'function';\r\n }\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/288737336",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/197#issuecomment-288737336",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/197",
        "id": 288737336,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODczNzMzNg==",
        "user": {
            "login": "LukeusMaximus",
            "id": 866571,
            "node_id": "MDQ6VXNlcjg2NjU3MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/866571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LukeusMaximus",
            "html_url": "https://github.com/LukeusMaximus",
            "followers_url": "https://api.github.com/users/LukeusMaximus/followers",
            "following_url": "https://api.github.com/users/LukeusMaximus/following{/other_user}",
            "gists_url": "https://api.github.com/users/LukeusMaximus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LukeusMaximus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LukeusMaximus/subscriptions",
            "organizations_url": "https://api.github.com/users/LukeusMaximus/orgs",
            "repos_url": "https://api.github.com/users/LukeusMaximus/repos",
            "events_url": "https://api.github.com/users/LukeusMaximus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LukeusMaximus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-23T14:31:19Z",
        "updated_at": "2017-03-23T14:31:19Z",
        "author_association": "NONE",
        "body": "To perform a modification you can use `setIn()` to achieve this:\r\n```\r\nbundles = Immutable.setIn(bundles, [\"items\", 0, \"name\"], \"new name\")\r\n```\r\nwill give:\r\n```\r\nbundles: {\r\ncount: 12,\r\nitems: [ {\r\n  name: 'new name',\r\n  id: '213123123',\r\n  field: 'sdfdsf',\r\n  children: []\r\n}, {}, {} ...]\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/288738593",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/208#issuecomment-288738593",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/208",
        "id": 288738593,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODczODU5Mw==",
        "user": {
            "login": "LukeusMaximus",
            "id": 866571,
            "node_id": "MDQ6VXNlcjg2NjU3MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/866571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LukeusMaximus",
            "html_url": "https://github.com/LukeusMaximus",
            "followers_url": "https://api.github.com/users/LukeusMaximus/followers",
            "following_url": "https://api.github.com/users/LukeusMaximus/following{/other_user}",
            "gists_url": "https://api.github.com/users/LukeusMaximus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LukeusMaximus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LukeusMaximus/subscriptions",
            "organizations_url": "https://api.github.com/users/LukeusMaximus/orgs",
            "repos_url": "https://api.github.com/users/LukeusMaximus/repos",
            "events_url": "https://api.github.com/users/LukeusMaximus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LukeusMaximus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-23T14:35:08Z",
        "updated_at": "2017-03-23T14:35:08Z",
        "author_association": "NONE",
        "body": "Is identifying a web standards promise sufficient? i.e.:\r\n```\r\nfunction isPromise(obj) {\r\n    return obj.constructor === Promise;\r\n}\r\n```\r\n\r\nIf not, I'd go with a solution that had the methods `isPromise` and `isThenable` to prevent confusion."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/289006954",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/208#issuecomment-289006954",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/208",
        "id": 289006954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTAwNjk1NA==",
        "user": {
            "login": "medovob",
            "id": 465951,
            "node_id": "MDQ6VXNlcjQ2NTk1MQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/465951?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medovob",
            "html_url": "https://github.com/medovob",
            "followers_url": "https://api.github.com/users/medovob/followers",
            "following_url": "https://api.github.com/users/medovob/following{/other_user}",
            "gists_url": "https://api.github.com/users/medovob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medovob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medovob/subscriptions",
            "organizations_url": "https://api.github.com/users/medovob/orgs",
            "repos_url": "https://api.github.com/users/medovob/repos",
            "events_url": "https://api.github.com/users/medovob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medovob/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-24T12:11:55Z",
        "updated_at": "2017-03-24T12:11:55Z",
        "author_association": "NONE",
        "body": "Yeah - that was my initial thought too but I think the problem is that environments might not support   native promises and even in supporting environments, a developer may be using a Promise polyfill or a Promise compliant lib (like RSVP or Bluebird) and these won't necessarily referenced as the the global `Promise` which is why I was suggesting testing the object for compatibility rather than strict equality.\r\n\r\nYou could also also use the \"resolver\" to return the promise rather than calling `then()` and have an additional check to make sure that the \"resolved\" object is \"thenable\"\r\n\r\n```js\r\nif (obj.constructor.resolve) {\r\n  var resolved = obj.constructor.resolve(Immutable(obj));\r\n  if (typeof resolved.then === \"function\") {\r\n    return resolved;\r\n  }\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/289450818",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/182#issuecomment-289450818",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/182",
        "id": 289450818,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQ1MDgxOA==",
        "user": {
            "login": "LukeusMaximus",
            "id": 866571,
            "node_id": "MDQ6VXNlcjg2NjU3MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/866571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LukeusMaximus",
            "html_url": "https://github.com/LukeusMaximus",
            "followers_url": "https://api.github.com/users/LukeusMaximus/followers",
            "following_url": "https://api.github.com/users/LukeusMaximus/following{/other_user}",
            "gists_url": "https://api.github.com/users/LukeusMaximus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LukeusMaximus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LukeusMaximus/subscriptions",
            "organizations_url": "https://api.github.com/users/LukeusMaximus/orgs",
            "repos_url": "https://api.github.com/users/LukeusMaximus/repos",
            "events_url": "https://api.github.com/users/LukeusMaximus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LukeusMaximus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-27T13:19:41Z",
        "updated_at": "2017-03-27T13:19:41Z",
        "author_association": "NONE",
        "body": "I've had a crack at this in #211 "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/289456847",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/211#issuecomment-289456847",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/211",
        "id": 289456847,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQ1Njg0Nw==",
        "user": {
            "login": "LukeusMaximus",
            "id": 866571,
            "node_id": "MDQ6VXNlcjg2NjU3MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/866571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LukeusMaximus",
            "html_url": "https://github.com/LukeusMaximus",
            "followers_url": "https://api.github.com/users/LukeusMaximus/followers",
            "following_url": "https://api.github.com/users/LukeusMaximus/following{/other_user}",
            "gists_url": "https://api.github.com/users/LukeusMaximus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LukeusMaximus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LukeusMaximus/subscriptions",
            "organizations_url": "https://api.github.com/users/LukeusMaximus/orgs",
            "repos_url": "https://api.github.com/users/LukeusMaximus/repos",
            "events_url": "https://api.github.com/users/LukeusMaximus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LukeusMaximus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-27T13:42:33Z",
        "updated_at": "2017-03-27T13:42:33Z",
        "author_association": "NONE",
        "body": "I'm unsure how to address the build issues in Travis. Can someone assist?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/289715893",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/207#issuecomment-289715893",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/207",
        "id": 289715893,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTcxNTg5Mw==",
        "user": {
            "login": "cdomigan",
            "id": 711882,
            "node_id": "MDQ6VXNlcjcxMTg4Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/711882?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdomigan",
            "html_url": "https://github.com/cdomigan",
            "followers_url": "https://api.github.com/users/cdomigan/followers",
            "following_url": "https://api.github.com/users/cdomigan/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdomigan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdomigan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdomigan/subscriptions",
            "organizations_url": "https://api.github.com/users/cdomigan/orgs",
            "repos_url": "https://api.github.com/users/cdomigan/repos",
            "events_url": "https://api.github.com/users/cdomigan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdomigan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-28T09:34:06Z",
        "updated_at": "2017-03-28T09:34:06Z",
        "author_association": "NONE",
        "body": "I think the only way currently is:\r\n```\r\nvar a = Immutable({x: {y:1, z:2}});\r\na.update('x', x => x.without('y'));\r\n// {x: {z:2}}\r\n```\r\n\r\nAn equivalent to Immutable.JS deleteIn() would be nice!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/290123978",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/114#issuecomment-290123978",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/114",
        "id": 290123978,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDEyMzk3OA==",
        "user": {
            "login": "philippotto",
            "id": 2486553,
            "node_id": "MDQ6VXNlcjI0ODY1NTM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2486553?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/philippotto",
            "html_url": "https://github.com/philippotto",
            "followers_url": "https://api.github.com/users/philippotto/followers",
            "following_url": "https://api.github.com/users/philippotto/following{/other_user}",
            "gists_url": "https://api.github.com/users/philippotto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/philippotto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/philippotto/subscriptions",
            "organizations_url": "https://api.github.com/users/philippotto/orgs",
            "repos_url": "https://api.github.com/users/philippotto/repos",
            "events_url": "https://api.github.com/users/philippotto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/philippotto/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-29T15:19:48Z",
        "updated_at": "2017-03-29T15:19:48Z",
        "author_association": "NONE",
        "body": "+1\r\nWe use seamless-immutable in combination with redux and have some data in typed arrays for which support would be nice. "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/290444576",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/211#issuecomment-290444576",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/211",
        "id": 290444576,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDQ0NDU3Ng==",
        "user": {
            "login": "foray1010",
            "id": 3212221,
            "node_id": "MDQ6VXNlcjMyMTIyMjE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3212221?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/foray1010",
            "html_url": "https://github.com/foray1010",
            "followers_url": "https://api.github.com/users/foray1010/followers",
            "following_url": "https://api.github.com/users/foray1010/following{/other_user}",
            "gists_url": "https://api.github.com/users/foray1010/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/foray1010/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/foray1010/subscriptions",
            "organizations_url": "https://api.github.com/users/foray1010/orgs",
            "repos_url": "https://api.github.com/users/foray1010/repos",
            "events_url": "https://api.github.com/users/foray1010/events{/privacy}",
            "received_events_url": "https://api.github.com/users/foray1010/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-30T15:20:09Z",
        "updated_at": "2017-03-30T15:20:09Z",
        "author_association": "NONE",
        "body": "would prefer if no change after sort, return the same reference"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/290888958",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/212#issuecomment-290888958",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/212",
        "id": 290888958,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDg4ODk1OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-01T02:49:13Z",
        "updated_at": "2017-04-01T02:49:13Z",
        "author_association": "OWNER",
        "body": "Seems reasonable!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/290889004",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/209#issuecomment-290889004",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/209",
        "id": 290889004,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDg4OTAwNA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-01T02:50:04Z",
        "updated_at": "2017-04-01T02:50:04Z",
        "author_association": "OWNER",
        "body": "Nice catch - thanks @felipeptcho!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/290889098",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/212#issuecomment-290889098",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/212",
        "id": 290889098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDg4OTA5OA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-01T02:52:01Z",
        "updated_at": "2017-04-01T02:52:01Z",
        "author_association": "OWNER",
        "body": "@lukewestby published as 7.1.2"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/290952704",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-290952704",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 290952704,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDk1MjcwNA==",
        "user": {
            "login": "jonaskello",
            "id": 664076,
            "node_id": "MDQ6VXNlcjY2NDA3Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/664076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonaskello",
            "html_url": "https://github.com/jonaskello",
            "followers_url": "https://api.github.com/users/jonaskello/followers",
            "following_url": "https://api.github.com/users/jonaskello/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonaskello/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonaskello/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonaskello/subscriptions",
            "organizations_url": "https://api.github.com/users/jonaskello/orgs",
            "repos_url": "https://api.github.com/users/jonaskello/repos",
            "events_url": "https://api.github.com/users/jonaskello/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonaskello/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-01T22:58:48Z",
        "updated_at": "2017-04-01T22:58:48Z",
        "author_association": "NONE",
        "body": "Sine typescript 2.0 It is now possible to achieve immutability at compile-time by just using the `readonly` keyword and `ReadonlyArray`. That is what I have been doing lately. I also made [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which uses tslint rules to make sure that `readonly` is enforced."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/291851913",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/213#issuecomment-291851913",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/213",
        "id": 291851913,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTg1MTkxMw==",
        "user": {
            "login": "srph",
            "id": 5093058,
            "node_id": "MDQ6VXNlcjUwOTMwNTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5093058?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srph",
            "html_url": "https://github.com/srph",
            "followers_url": "https://api.github.com/users/srph/followers",
            "following_url": "https://api.github.com/users/srph/following{/other_user}",
            "gists_url": "https://api.github.com/users/srph/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srph/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srph/subscriptions",
            "organizations_url": "https://api.github.com/users/srph/orgs",
            "repos_url": "https://api.github.com/users/srph/repos",
            "events_url": "https://api.github.com/users/srph/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srph/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-05T12:53:24Z",
        "updated_at": "2017-04-05T12:53:24Z",
        "author_association": "NONE",
        "body": "Doesn't `Immutable.asMutable(obj, {deep: true})` solve `toJS`?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/291855505",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/213#issuecomment-291855505",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/213",
        "id": 291855505,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTg1NTUwNQ==",
        "user": {
            "login": "maxgalbu",
            "id": 1782571,
            "node_id": "MDQ6VXNlcjE3ODI1NzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1782571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maxgalbu",
            "html_url": "https://github.com/maxgalbu",
            "followers_url": "https://api.github.com/users/maxgalbu/followers",
            "following_url": "https://api.github.com/users/maxgalbu/following{/other_user}",
            "gists_url": "https://api.github.com/users/maxgalbu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maxgalbu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maxgalbu/subscriptions",
            "organizations_url": "https://api.github.com/users/maxgalbu/orgs",
            "repos_url": "https://api.github.com/users/maxgalbu/repos",
            "events_url": "https://api.github.com/users/maxgalbu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maxgalbu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-05T13:07:58Z",
        "updated_at": "2017-04-05T13:07:58Z",
        "author_association": "NONE",
        "body": "Yep that's what I wrote before :)"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/293216426",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/43#issuecomment-293216426",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/43",
        "id": 293216426,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzIxNjQyNg==",
        "user": {
            "login": "starInEcust",
            "id": 5434131,
            "node_id": "MDQ6VXNlcjU0MzQxMzE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5434131?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/starInEcust",
            "html_url": "https://github.com/starInEcust",
            "followers_url": "https://api.github.com/users/starInEcust/followers",
            "following_url": "https://api.github.com/users/starInEcust/following{/other_user}",
            "gists_url": "https://api.github.com/users/starInEcust/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/starInEcust/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/starInEcust/subscriptions",
            "organizations_url": "https://api.github.com/users/starInEcust/orgs",
            "repos_url": "https://api.github.com/users/starInEcust/repos",
            "events_url": "https://api.github.com/users/starInEcust/events{/privacy}",
            "received_events_url": "https://api.github.com/users/starInEcust/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-11T10:25:44Z",
        "updated_at": "2017-04-11T10:25:44Z",
        "author_association": "NONE",
        "body": "How about splice?\r\n```\r\n// pretty ugly\r\nlog.slice(0, foundIdx).concat(newval).concat(log.slice(foundIdx+1))\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/295098035",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/216#issuecomment-295098035",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/216",
        "id": 295098035,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTA5ODAzNQ==",
        "user": {
            "login": "tomByrer",
            "id": 1308419,
            "node_id": "MDQ6VXNlcjEzMDg0MTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1308419?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomByrer",
            "html_url": "https://github.com/tomByrer",
            "followers_url": "https://api.github.com/users/tomByrer/followers",
            "following_url": "https://api.github.com/users/tomByrer/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomByrer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomByrer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomByrer/subscriptions",
            "organizations_url": "https://api.github.com/users/tomByrer/orgs",
            "repos_url": "https://api.github.com/users/tomByrer/repos",
            "events_url": "https://api.github.com/users/tomByrer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomByrer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-19T05:20:24Z",
        "updated_at": "2017-04-19T05:20:59Z",
        "author_association": "NONE",
        "body": "I like the idea, but concerned about performance in production.\r\nCould dev have a temporary wrapper / [`Proxy`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy) ?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/295595420",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/216#issuecomment-295595420",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/216",
        "id": 295595420,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTU5NTQyMA==",
        "user": {
            "login": "svieira",
            "id": 143435,
            "node_id": "MDQ6VXNlcjE0MzQzNQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/143435?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/svieira",
            "html_url": "https://github.com/svieira",
            "followers_url": "https://api.github.com/users/svieira/followers",
            "following_url": "https://api.github.com/users/svieira/following{/other_user}",
            "gists_url": "https://api.github.com/users/svieira/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/svieira/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/svieira/subscriptions",
            "organizations_url": "https://api.github.com/users/svieira/orgs",
            "repos_url": "https://api.github.com/users/svieira/repos",
            "events_url": "https://api.github.com/users/svieira/events{/privacy}",
            "received_events_url": "https://api.github.com/users/svieira/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-20T06:19:48Z",
        "updated_at": "2017-04-20T06:19:48Z",
        "author_association": "NONE",
        "body": "Just a thought. If it's possible to wrap your code in a `\"use strict\"` context you can get the behavior you want as attempting to mutate a frozen object already causes an error in strict mode:\r\n\r\n```js\r\n> !function() { \"use strict\"; Object.freeze({x: 1, y: 2}).x = 3; }()\r\nVM286:1 Uncaught TypeError: Cannot assign to read only property 'x' of object '#<Object>'\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/297358499",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/182#issuecomment-297358499",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/182",
        "id": 297358499,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzM1ODQ5OQ==",
        "user": {
            "login": "jonrh",
            "id": 58344,
            "node_id": "MDQ6VXNlcjU4MzQ0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/58344?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonrh",
            "html_url": "https://github.com/jonrh",
            "followers_url": "https://api.github.com/users/jonrh/followers",
            "following_url": "https://api.github.com/users/jonrh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonrh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonrh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonrh/subscriptions",
            "organizations_url": "https://api.github.com/users/jonrh/orgs",
            "repos_url": "https://api.github.com/users/jonrh/repos",
            "events_url": "https://api.github.com/users/jonrh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonrh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-26T11:02:59Z",
        "updated_at": "2017-04-26T11:02:59Z",
        "author_association": "NONE",
        "body": "Any update on this? Came looking for sorting and found this. @LukeusMaximus PR seems to be stuck on a broken Travis build."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/297917043",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/157#issuecomment-297917043",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/157",
        "id": 297917043,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzkxNzA0Mw==",
        "user": {
            "login": "itaysabato",
            "id": 2768658,
            "node_id": "MDQ6VXNlcjI3Njg2NTg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2768658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/itaysabato",
            "html_url": "https://github.com/itaysabato",
            "followers_url": "https://api.github.com/users/itaysabato/followers",
            "following_url": "https://api.github.com/users/itaysabato/following{/other_user}",
            "gists_url": "https://api.github.com/users/itaysabato/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/itaysabato/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/itaysabato/subscriptions",
            "organizations_url": "https://api.github.com/users/itaysabato/orgs",
            "repos_url": "https://api.github.com/users/itaysabato/repos",
            "events_url": "https://api.github.com/users/itaysabato/events{/privacy}",
            "received_events_url": "https://api.github.com/users/itaysabato/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-28T06:19:58Z",
        "updated_at": "2017-04-28T06:19:58Z",
        "author_association": "NONE",
        "body": "I would consider an empty path to mean \"set the given value instead of this object\" and simply `return Immutable(value)`"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/298547499",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/211#issuecomment-298547499",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/211",
        "id": 298547499,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODU0NzQ5OQ==",
        "user": {
            "login": "LukeusMaximus",
            "id": 866571,
            "node_id": "MDQ6VXNlcjg2NjU3MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/866571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LukeusMaximus",
            "html_url": "https://github.com/LukeusMaximus",
            "followers_url": "https://api.github.com/users/LukeusMaximus/followers",
            "following_url": "https://api.github.com/users/LukeusMaximus/following{/other_user}",
            "gists_url": "https://api.github.com/users/LukeusMaximus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LukeusMaximus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LukeusMaximus/subscriptions",
            "organizations_url": "https://api.github.com/users/LukeusMaximus/orgs",
            "repos_url": "https://api.github.com/users/LukeusMaximus/repos",
            "events_url": "https://api.github.com/users/LukeusMaximus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LukeusMaximus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-02T08:16:13Z",
        "updated_at": "2017-05-02T08:16:13Z",
        "author_association": "NONE",
        "body": "What's going on with this Travis build? I'm still unable to proceed."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/298871382",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/215#issuecomment-298871382",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/215",
        "id": 298871382,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODg3MTM4Mg==",
        "user": {
            "login": "gmeans",
            "id": 277741,
            "node_id": "MDQ6VXNlcjI3Nzc0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/277741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmeans",
            "html_url": "https://github.com/gmeans",
            "followers_url": "https://api.github.com/users/gmeans/followers",
            "following_url": "https://api.github.com/users/gmeans/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmeans/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmeans/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmeans/subscriptions",
            "organizations_url": "https://api.github.com/users/gmeans/orgs",
            "repos_url": "https://api.github.com/users/gmeans/repos",
            "events_url": "https://api.github.com/users/gmeans/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmeans/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-03T10:09:54Z",
        "updated_at": "2017-05-03T10:09:54Z",
        "author_association": "NONE",
        "body": "I'm running into the same limitation. @itaysabato have you found a pattern to use as an alternative?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/298876383",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/215#issuecomment-298876383",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/215",
        "id": 298876383,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODg3NjM4Mw==",
        "user": {
            "login": "itaysabato",
            "id": 2768658,
            "node_id": "MDQ6VXNlcjI3Njg2NTg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2768658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/itaysabato",
            "html_url": "https://github.com/itaysabato",
            "followers_url": "https://api.github.com/users/itaysabato/followers",
            "following_url": "https://api.github.com/users/itaysabato/following{/other_user}",
            "gists_url": "https://api.github.com/users/itaysabato/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/itaysabato/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/itaysabato/subscriptions",
            "organizations_url": "https://api.github.com/users/itaysabato/orgs",
            "repos_url": "https://api.github.com/users/itaysabato/repos",
            "events_url": "https://api.github.com/users/itaysabato/events{/privacy}",
            "received_events_url": "https://api.github.com/users/itaysabato/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-03T10:36:39Z",
        "updated_at": "2017-05-03T10:36:39Z",
        "author_association": "NONE",
        "body": "@gmeans my alternative is to not use this library yet...\r\nI have implemented my own `setIn` and `mergeIn` functions that use native objects and arrays."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/298893332",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/215#issuecomment-298893332",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/215",
        "id": 298893332,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODg5MzMzMg==",
        "user": {
            "login": "gmeans",
            "id": 277741,
            "node_id": "MDQ6VXNlcjI3Nzc0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/277741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmeans",
            "html_url": "https://github.com/gmeans",
            "followers_url": "https://api.github.com/users/gmeans/followers",
            "following_url": "https://api.github.com/users/gmeans/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmeans/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmeans/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmeans/subscriptions",
            "organizations_url": "https://api.github.com/users/gmeans/orgs",
            "repos_url": "https://api.github.com/users/gmeans/repos",
            "events_url": "https://api.github.com/users/gmeans/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmeans/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-03T12:12:00Z",
        "updated_at": "2017-05-03T12:12:00Z",
        "author_association": "NONE",
        "body": "I ended up using a regular `merge` within the `setIn`:\r\n\r\n```\r\nexport const saveAddress = (state = initialState, action) => {\r\n  const { address, address2, city, province, postal, country, index } = action;\r\n\r\n  const existing = Immutable(state.current.addresses[ index ]);\r\n\r\n  return Immutable.setIn(state, [ 'current', 'addresses', index ], Immutable.merge(existing, {\r\n    address,\r\n    address2,\r\n    city,\r\n    province,\r\n    postal,\r\n    country,\r\n  }), { deep: true })\r\n};\r\n```\r\n\r\nMaybe my use case is slightly different since I'm directly setting an element at a specific index, but I experienced the same issue you had. After the `setIn` the resulting object only consisted of what was passed into `setIn`, wiping out all existing values that I would expect to be merged in.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/299127714",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/215#issuecomment-299127714",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/215",
        "id": 299127714,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTEyNzcxNA==",
        "user": {
            "login": "itaysabato",
            "id": 2768658,
            "node_id": "MDQ6VXNlcjI3Njg2NTg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2768658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/itaysabato",
            "html_url": "https://github.com/itaysabato",
            "followers_url": "https://api.github.com/users/itaysabato/followers",
            "following_url": "https://api.github.com/users/itaysabato/following{/other_user}",
            "gists_url": "https://api.github.com/users/itaysabato/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/itaysabato/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/itaysabato/subscriptions",
            "organizations_url": "https://api.github.com/users/itaysabato/orgs",
            "repos_url": "https://api.github.com/users/itaysabato/repos",
            "events_url": "https://api.github.com/users/itaysabato/events{/privacy}",
            "received_events_url": "https://api.github.com/users/itaysabato/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-04T08:41:50Z",
        "updated_at": "2017-05-04T08:41:50Z",
        "author_association": "NONE",
        "body": "@gmeans If the library had a `mergeIn` method (that creates a new object only if necessary) it would solve my use case and probably yours as well. You can implement it yourself though with code like:\r\n```js\r\nfunction mergeIn(target, path, source, config) {\r\n    var innerTarget = Immutable.getIn(target, path);\r\n    var innerMerged = Immutable.merge(innerTarget, source, config);\r\n\r\n    return Immutable.setIn(target, path, innerMerged);\r\n}\r\n```\r\n\r\nThere are probably some edge cases that need to be addressed - this code is based on what I'm doing without `seamless-immutable`.\r\n\r\nPersonally, I think this is a basic functionality (the only one I need, in fact) that should be provided by the library."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/299657340",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-299657340",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 299657340,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY1NzM0MA==",
        "user": {
            "login": "MichaelTontchev",
            "id": 12261336,
            "node_id": "MDQ6VXNlcjEyMjYxMzM2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/12261336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MichaelTontchev",
            "html_url": "https://github.com/MichaelTontchev",
            "followers_url": "https://api.github.com/users/MichaelTontchev/followers",
            "following_url": "https://api.github.com/users/MichaelTontchev/following{/other_user}",
            "gists_url": "https://api.github.com/users/MichaelTontchev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MichaelTontchev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MichaelTontchev/subscriptions",
            "organizations_url": "https://api.github.com/users/MichaelTontchev/orgs",
            "repos_url": "https://api.github.com/users/MichaelTontchev/repos",
            "events_url": "https://api.github.com/users/MichaelTontchev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MichaelTontchev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-06T18:21:14Z",
        "updated_at": "2017-05-06T18:21:14Z",
        "author_association": "NONE",
        "body": "@jonaskello readonly is great, but the problem is that it can't be made recursive yet, pending https://github.com/Microsoft/TypeScript/issues/10725\r\n\r\nAs to your library, I haven't used it yet, but it looks nice. I just wish that you could limit the linting rules to certain files: https://github.com/jonaskello/tslint-immutable/issues/25"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/301343031",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-301343031",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 301343031,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTM0MzAzMQ==",
        "user": {
            "login": "babakness",
            "id": 2024235,
            "node_id": "MDQ6VXNlcjIwMjQyMzU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2024235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/babakness",
            "html_url": "https://github.com/babakness",
            "followers_url": "https://api.github.com/users/babakness/followers",
            "following_url": "https://api.github.com/users/babakness/following{/other_user}",
            "gists_url": "https://api.github.com/users/babakness/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/babakness/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/babakness/subscriptions",
            "organizations_url": "https://api.github.com/users/babakness/orgs",
            "repos_url": "https://api.github.com/users/babakness/repos",
            "events_url": "https://api.github.com/users/babakness/events{/privacy}",
            "received_events_url": "https://api.github.com/users/babakness/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-14T22:02:38Z",
        "updated_at": "2017-05-14T22:02:38Z",
        "author_association": "NONE",
        "body": "Commenting to follow this conversation."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/302267634",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/208#issuecomment-302267634",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/208",
        "id": 302267634,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjI2NzYzNA==",
        "user": {
            "login": "sandro-pasquali",
            "id": 657552,
            "node_id": "MDQ6VXNlcjY1NzU1Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/657552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sandro-pasquali",
            "html_url": "https://github.com/sandro-pasquali",
            "followers_url": "https://api.github.com/users/sandro-pasquali/followers",
            "following_url": "https://api.github.com/users/sandro-pasquali/following{/other_user}",
            "gists_url": "https://api.github.com/users/sandro-pasquali/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sandro-pasquali/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sandro-pasquali/subscriptions",
            "organizations_url": "https://api.github.com/users/sandro-pasquali/orgs",
            "repos_url": "https://api.github.com/users/sandro-pasquali/repos",
            "events_url": "https://api.github.com/users/sandro-pasquali/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sandro-pasquali/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-18T00:29:47Z",
        "updated_at": "2017-05-18T00:29:47Z",
        "author_association": "NONE",
        "body": "Another way to look at this is to normalize *all* values to promises via `Promise.resolve()`:\r\n```\r\nlet imm = Immutable(Promise.resolve(<PromiseOrAnythingElse>))\r\n``` \r\nSince it would seem that your implementation expects *some* Immutable-ized values to be Promises and others not, I think this would mean a consistent interface (always Promises) could be achieved. \r\n\r\nThis may or may not be possible in your case of course..."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/305223470",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/221#issuecomment-305223470",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/221",
        "id": 305223470,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTIyMzQ3MA==",
        "user": {
            "login": "tsdexter",
            "id": 4126987,
            "node_id": "MDQ6VXNlcjQxMjY5ODc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4126987?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tsdexter",
            "html_url": "https://github.com/tsdexter",
            "followers_url": "https://api.github.com/users/tsdexter/followers",
            "following_url": "https://api.github.com/users/tsdexter/following{/other_user}",
            "gists_url": "https://api.github.com/users/tsdexter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tsdexter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tsdexter/subscriptions",
            "organizations_url": "https://api.github.com/users/tsdexter/orgs",
            "repos_url": "https://api.github.com/users/tsdexter/repos",
            "events_url": "https://api.github.com/users/tsdexter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tsdexter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-31T15:27:27Z",
        "updated_at": "2017-05-31T15:27:27Z",
        "author_association": "NONE",
        "body": "@rtfeldman any idea what might be going on here? Here is some more info from dev tools... looks to me like e is definitely a function... not sure how to debug it further? \r\n\r\nhttps://www.dropbox.com/s/4nwxd7r11d37uw4/Screen%20Shot%202017-05-31%20at%2011.20.28%20AM.png?dl=0"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/305256480",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/220#issuecomment-305256480",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/220",
        "id": 305256480,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTI1NjQ4MA==",
        "user": {
            "login": "fobos",
            "id": 372529,
            "node_id": "MDQ6VXNlcjM3MjUyOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/372529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fobos",
            "html_url": "https://github.com/fobos",
            "followers_url": "https://api.github.com/users/fobos/followers",
            "following_url": "https://api.github.com/users/fobos/following{/other_user}",
            "gists_url": "https://api.github.com/users/fobos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fobos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fobos/subscriptions",
            "organizations_url": "https://api.github.com/users/fobos/orgs",
            "repos_url": "https://api.github.com/users/fobos/repos",
            "events_url": "https://api.github.com/users/fobos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fobos/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-31T17:19:01Z",
        "updated_at": "2017-05-31T17:19:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman ping"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/305256832",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/219#issuecomment-305256832",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/219",
        "id": 305256832,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTI1NjgzMg==",
        "user": {
            "login": "fobos",
            "id": 372529,
            "node_id": "MDQ6VXNlcjM3MjUyOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/372529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fobos",
            "html_url": "https://github.com/fobos",
            "followers_url": "https://api.github.com/users/fobos/followers",
            "following_url": "https://api.github.com/users/fobos/following{/other_user}",
            "gists_url": "https://api.github.com/users/fobos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fobos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fobos/subscriptions",
            "organizations_url": "https://api.github.com/users/fobos/orgs",
            "repos_url": "https://api.github.com/users/fobos/repos",
            "events_url": "https://api.github.com/users/fobos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fobos/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-31T17:20:21Z",
        "updated_at": "2017-05-31T17:20:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rtfeldman ping"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/305641767",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/223#issuecomment-305641767",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/223",
        "id": 305641767,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY0MTc2Nw==",
        "user": {
            "login": "bradennapier",
            "id": 15365418,
            "node_id": "MDQ6VXNlcjE1MzY1NDE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/15365418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradennapier",
            "html_url": "https://github.com/bradennapier",
            "followers_url": "https://api.github.com/users/bradennapier/followers",
            "following_url": "https://api.github.com/users/bradennapier/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradennapier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradennapier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradennapier/subscriptions",
            "organizations_url": "https://api.github.com/users/bradennapier/orgs",
            "repos_url": "https://api.github.com/users/bradennapier/repos",
            "events_url": "https://api.github.com/users/bradennapier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradennapier/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-01T22:48:22Z",
        "updated_at": "2017-06-01T22:51:36Z",
        "author_association": "NONE",
        "body": "In your source I found this\r\n\r\n```js\r\n} else {\r\n      // In JavaScript, only objects are even potentially mutable.\r\n      // strings, numbers, null, and undefined are all naturally immutable.\r\n      return true;\r\n    }\r\n```\r\n\r\nwhich to me is an issue - my goal is to check if the item is an immutable object so i know if i need to convert it or not\r\n\r\nseems like maybe asMutable should return an object or value that , if immutable has modified, converts it back to an untouched value.  therefore could do Immutable.asMutable(undefined) and simply get back undefined."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/305648107",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/220#issuecomment-305648107",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/220",
        "id": 305648107,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY0ODEwNw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-01T23:28:18Z",
        "updated_at": "2017-06-01T23:28:18Z",
        "author_association": "OWNER",
        "body": "Thanks @fobos! Sorry I missed this."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/307137922",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/218#issuecomment-307137922",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/218",
        "id": 307137922,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzEzNzkyMg==",
        "user": {
            "login": "pedrogarciyalopez",
            "id": 14232660,
            "node_id": "MDQ6VXNlcjE0MjMyNjYw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/14232660?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pedrogarciyalopez",
            "html_url": "https://github.com/pedrogarciyalopez",
            "followers_url": "https://api.github.com/users/pedrogarciyalopez/followers",
            "following_url": "https://api.github.com/users/pedrogarciyalopez/following{/other_user}",
            "gists_url": "https://api.github.com/users/pedrogarciyalopez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pedrogarciyalopez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pedrogarciyalopez/subscriptions",
            "organizations_url": "https://api.github.com/users/pedrogarciyalopez/orgs",
            "repos_url": "https://api.github.com/users/pedrogarciyalopez/repos",
            "events_url": "https://api.github.com/users/pedrogarciyalopez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pedrogarciyalopez/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-08T15:24:52Z",
        "updated_at": "2017-06-08T15:24:52Z",
        "author_association": "NONE",
        "body": "same problem"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/311406910",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/226#issuecomment-311406910",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/226",
        "id": 311406910,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTQwNjkxMA==",
        "user": {
            "login": "UX-Unicorn",
            "id": 10765792,
            "node_id": "MDQ6VXNlcjEwNzY1Nzky",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10765792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UX-Unicorn",
            "html_url": "https://github.com/UX-Unicorn",
            "followers_url": "https://api.github.com/users/UX-Unicorn/followers",
            "following_url": "https://api.github.com/users/UX-Unicorn/following{/other_user}",
            "gists_url": "https://api.github.com/users/UX-Unicorn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UX-Unicorn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UX-Unicorn/subscriptions",
            "organizations_url": "https://api.github.com/users/UX-Unicorn/orgs",
            "repos_url": "https://api.github.com/users/UX-Unicorn/repos",
            "events_url": "https://api.github.com/users/UX-Unicorn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UX-Unicorn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-27T16:09:51Z",
        "updated_at": "2017-06-27T16:09:51Z",
        "author_association": "NONE",
        "body": "Nevermind I figured it out. I was trying to create an asMutable from object that wasn't imutable. Stupid mistake."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/311701408",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-311701408",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 311701408,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTcwMTQwOA==",
        "user": {
            "login": "KROT47",
            "id": 10371779,
            "node_id": "MDQ6VXNlcjEwMzcxNzc5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10371779?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KROT47",
            "html_url": "https://github.com/KROT47",
            "followers_url": "https://api.github.com/users/KROT47/followers",
            "following_url": "https://api.github.com/users/KROT47/following{/other_user}",
            "gists_url": "https://api.github.com/users/KROT47/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KROT47/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KROT47/subscriptions",
            "organizations_url": "https://api.github.com/users/KROT47/orgs",
            "repos_url": "https://api.github.com/users/KROT47/repos",
            "events_url": "https://api.github.com/users/KROT47/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KROT47/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-28T15:45:39Z",
        "updated_at": "2017-06-28T15:45:39Z",
        "author_association": "NONE",
        "body": "With ES modules support:\r\n\r\n```js\r\n/* @flow */\r\n\r\ndeclare module 'seamless-immutable' {\r\n  declare type fromType = Object | Array<*>;\r\n\r\n  declare export type Immutable<T: fromType> = T & {\r\n    // Array methods\r\n    flatMap(fn: Function): Array<any>;\r\n    asObject(fn: Function): Object;\r\n    asMutable(): Array<any>;\r\n    // Object methods\r\n    merge(collection: Array<any> | Object, deep?: Object): Object;\r\n    set(key: string, value: any): Object;\r\n    setIn(keyPath: Array<string>, value: any): Object;\r\n    update(key: string, fn: Function): Object;\r\n    updateIn(keyPath: Array<string>, fn: Function): Object;\r\n    without(fn: Function): Object;\r\n    without(keys: Array<string>): Object;\r\n    without(...keys: Array<string>): Object;\r\n    asMutable(): Array<any> | Object;\r\n  };\r\n\r\n  declare export function from<T: fromType> (spec: T): Immutable<T>;\r\n\r\n  declare export function isImmutable(x: *): boolean;\r\n\r\n  declare export default typeof from;\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/313181633",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/149#issuecomment-313181633",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/149",
        "id": 313181633,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzE4MTYzMw==",
        "user": {
            "login": "renatorib",
            "id": 3277185,
            "node_id": "MDQ6VXNlcjMyNzcxODU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3277185?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/renatorib",
            "html_url": "https://github.com/renatorib",
            "followers_url": "https://api.github.com/users/renatorib/followers",
            "following_url": "https://api.github.com/users/renatorib/following{/other_user}",
            "gists_url": "https://api.github.com/users/renatorib/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/renatorib/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/renatorib/subscriptions",
            "organizations_url": "https://api.github.com/users/renatorib/orgs",
            "repos_url": "https://api.github.com/users/renatorib/repos",
            "events_url": "https://api.github.com/users/renatorib/events{/privacy}",
            "received_events_url": "https://api.github.com/users/renatorib/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-05T18:07:05Z",
        "updated_at": "2017-07-05T18:08:05Z",
        "author_association": "NONE",
        "body": "@zackify there is a proposal for this feature called Null Propagation (or Optional Chaining, or Existential Operator, or Null-safe property access)\r\nhttps://github.com/claudepache/es-optional-chaining\r\n\r\n```js\r\n// today\r\nconst street = user && user.address && user.address.street\r\n\r\n// proposal\r\nconst street = user?.address?.street;\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/314286996",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/229#issuecomment-314286996",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/229",
        "id": 314286996,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDI4Njk5Ng==",
        "user": {
            "login": "bradennapier",
            "id": 15365418,
            "node_id": "MDQ6VXNlcjE1MzY1NDE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/15365418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradennapier",
            "html_url": "https://github.com/bradennapier",
            "followers_url": "https://api.github.com/users/bradennapier/followers",
            "following_url": "https://api.github.com/users/bradennapier/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradennapier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradennapier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradennapier/subscriptions",
            "organizations_url": "https://api.github.com/users/bradennapier/orgs",
            "repos_url": "https://api.github.com/users/bradennapier/repos",
            "events_url": "https://api.github.com/users/bradennapier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradennapier/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-11T00:22:57Z",
        "updated_at": "2017-07-11T00:22:57Z",
        "author_association": "NONE",
        "body": "Err yeah what's more is this basically completely breaks flow and the entire app - seamless-immutable can not go with flow when using the recommended way or every single file is an error automatically :(\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/314890487",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/207#issuecomment-314890487",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/207",
        "id": 314890487,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDg5MDQ4Nw==",
        "user": {
            "login": "raduflp",
            "id": 7570412,
            "node_id": "MDQ6VXNlcjc1NzA0MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7570412?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raduflp",
            "html_url": "https://github.com/raduflp",
            "followers_url": "https://api.github.com/users/raduflp/followers",
            "following_url": "https://api.github.com/users/raduflp/following{/other_user}",
            "gists_url": "https://api.github.com/users/raduflp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raduflp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raduflp/subscriptions",
            "organizations_url": "https://api.github.com/users/raduflp/orgs",
            "repos_url": "https://api.github.com/users/raduflp/repos",
            "events_url": "https://api.github.com/users/raduflp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raduflp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-12T20:41:40Z",
        "updated_at": "2017-07-12T20:41:40Z",
        "author_association": "NONE",
        "body": "I would suggest to make it consistent with setIn and updateIn, i.e. using arrays for nested objects paths\r\nsomething like `a.without(['lvl1_key', 'lvl2_key', ...])`\r\n\r\ncurrently the syntax above has the same behaviour as `a.without('lvl1_key1', 'lvl1_key2' ... )`\r\nI see little value in having 2 ways of achieving the same effect and adds to the confusion when considering the syntax for setIn etc\r\n\r\nmaybe implementing a `withoutIn` would be a solution to avoid breaking changes"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/315634927",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-315634927",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 315634927,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTYzNDkyNw==",
        "user": {
            "login": "toranb",
            "id": 147411,
            "node_id": "MDQ6VXNlcjE0NzQxMQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/147411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toranb",
            "html_url": "https://github.com/toranb",
            "followers_url": "https://api.github.com/users/toranb/followers",
            "following_url": "https://api.github.com/users/toranb/following{/other_user}",
            "gists_url": "https://api.github.com/users/toranb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toranb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toranb/subscriptions",
            "organizations_url": "https://api.github.com/users/toranb/orgs",
            "repos_url": "https://api.github.com/users/toranb/repos",
            "events_url": "https://api.github.com/users/toranb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toranb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-16T20:29:43Z",
        "updated_at": "2017-07-16T20:30:16Z",
        "author_association": "NONE",
        "body": "I ended up writing a [new type definition](https://github.com/toranb/seamless-immutable-tsdefs) file for seamless-immutable 7 that works well with TypeScript 2.4\r\n\r\nI've had success writing product types like you see below\r\n\r\n```ts\r\nimport { ImmutableObject } from 'seamless-immutable';\r\n\r\ntype ImmutableState<T> = ImmutableObject<T> & T;\r\n\r\nexport default ((state: ImmutableState<UserState>, action: Action): ImmutableState<UserState> => {\r\n  switch(action.type) {\r\n    case 'ASSIGN_USER': {\r\n      return state.merge({number: action.number});\r\n    }\r\n    default: {\r\n      return state || initialState;\r\n    }\r\n  }\r\n});\r\n```\r\n\r\nFor anyone interested, I threw together a [full example app](https://github.com/ember-redux/guides/commit/fc366a876f68ba7e6f0de14803cef0508a850c15) with redux/typescript 2.4/seamless 7.1.2"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/315948749",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/182#issuecomment-315948749",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/182",
        "id": 315948749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTk0ODc0OQ==",
        "user": {
            "login": "bradennapier",
            "id": 15365418,
            "node_id": "MDQ6VXNlcjE1MzY1NDE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/15365418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradennapier",
            "html_url": "https://github.com/bradennapier",
            "followers_url": "https://api.github.com/users/bradennapier/followers",
            "following_url": "https://api.github.com/users/bradennapier/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradennapier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradennapier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradennapier/subscriptions",
            "organizations_url": "https://api.github.com/users/bradennapier/orgs",
            "repos_url": "https://api.github.com/users/bradennapier/repos",
            "events_url": "https://api.github.com/users/bradennapier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradennapier/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-18T03:35:20Z",
        "updated_at": "2017-07-18T03:35:20Z",
        "author_association": "NONE",
        "body": "+1 here - just ran into the need for sorting.  An immutable sort replacement would be a good solution and I believe sort is enough of a required feature."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/316201222",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/228#issuecomment-316201222",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/228",
        "id": 316201222,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjIwMTIyMg==",
        "user": {
            "login": "TomiS",
            "id": 33161,
            "node_id": "MDQ6VXNlcjMzMTYx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/33161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomiS",
            "html_url": "https://github.com/TomiS",
            "followers_url": "https://api.github.com/users/TomiS/followers",
            "following_url": "https://api.github.com/users/TomiS/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomiS/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomiS/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomiS/subscriptions",
            "organizations_url": "https://api.github.com/users/TomiS/orgs",
            "repos_url": "https://api.github.com/users/TomiS/repos",
            "events_url": "https://api.github.com/users/TomiS/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomiS/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-18T21:19:29Z",
        "updated_at": "2017-07-18T21:19:29Z",
        "author_association": "NONE",
        "body": "Hmm, your code looks a lot like it's made for Immutable.js which is not same as seamless-immutable. Are you sure you installed correct library? :)"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/316204717",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/228#issuecomment-316204717",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/228",
        "id": 316204717,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjIwNDcxNw==",
        "user": {
            "login": "DonikaV",
            "id": 26111842,
            "node_id": "MDQ6VXNlcjI2MTExODQy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/26111842?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DonikaV",
            "html_url": "https://github.com/DonikaV",
            "followers_url": "https://api.github.com/users/DonikaV/followers",
            "following_url": "https://api.github.com/users/DonikaV/following{/other_user}",
            "gists_url": "https://api.github.com/users/DonikaV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DonikaV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DonikaV/subscriptions",
            "organizations_url": "https://api.github.com/users/DonikaV/orgs",
            "repos_url": "https://api.github.com/users/DonikaV/repos",
            "events_url": "https://api.github.com/users/DonikaV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DonikaV/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-18T21:34:11Z",
        "updated_at": "2017-07-18T21:34:11Z",
        "author_association": "NONE",
        "body": "Yes. I thougt it is library for using immutable without types error in TS\n;)\n\n19 \u0418\u044e\u043b 2017 \u0433. 0:19 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \"Tomi Saarinen\" <notifications@github.com>\n\u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n\n> Hmm, your code looks a lot like it's made for Immutable.js which is not\n> same as seamless-immutable. Are you sure you installed correct library? :)\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/rtfeldman/seamless-immutable/issues/228#issuecomment-316201222>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AY5vYryhAN56lC5ZDDMsM0xoGIjJGSFYks5sPSFjgaJpZM4OSj4H>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/316247371",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/182#issuecomment-316247371",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/182",
        "id": 316247371,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjI0NzM3MQ==",
        "user": {
            "login": "nonameolsson",
            "id": 1493018,
            "node_id": "MDQ6VXNlcjE0OTMwMTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1493018?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nonameolsson",
            "html_url": "https://github.com/nonameolsson",
            "followers_url": "https://api.github.com/users/nonameolsson/followers",
            "following_url": "https://api.github.com/users/nonameolsson/following{/other_user}",
            "gists_url": "https://api.github.com/users/nonameolsson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nonameolsson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nonameolsson/subscriptions",
            "organizations_url": "https://api.github.com/users/nonameolsson/orgs",
            "repos_url": "https://api.github.com/users/nonameolsson/repos",
            "events_url": "https://api.github.com/users/nonameolsson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nonameolsson/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-19T01:41:14Z",
        "updated_at": "2017-07-19T01:41:14Z",
        "author_association": "NONE",
        "body": "Any progress on this?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/319621147",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/227#issuecomment-319621147",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/227",
        "id": 319621147,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTYyMTE0Nw==",
        "user": {
            "login": "chj-damon",
            "id": 4902684,
            "node_id": "MDQ6VXNlcjQ5MDI2ODQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4902684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chj-damon",
            "html_url": "https://github.com/chj-damon",
            "followers_url": "https://api.github.com/users/chj-damon/followers",
            "following_url": "https://api.github.com/users/chj-damon/following{/other_user}",
            "gists_url": "https://api.github.com/users/chj-damon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chj-damon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chj-damon/subscriptions",
            "organizations_url": "https://api.github.com/users/chj-damon/orgs",
            "repos_url": "https://api.github.com/users/chj-damon/repos",
            "events_url": "https://api.github.com/users/chj-damon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chj-damon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T09:34:41Z",
        "updated_at": "2017-08-02T09:34:41Z",
        "author_association": "NONE",
        "body": "@SergeyAlexeev hi there. I'm wondering the same thing as you were. Is it the right way to do so with seamless-immutable? I see there's no difference as what I usually did without it."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/319655987",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/114#issuecomment-319655987",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/114",
        "id": 319655987,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTY1NTk4Nw==",
        "user": {
            "login": "skrat",
            "id": 5008,
            "node_id": "MDQ6VXNlcjUwMDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skrat",
            "html_url": "https://github.com/skrat",
            "followers_url": "https://api.github.com/users/skrat/followers",
            "following_url": "https://api.github.com/users/skrat/following{/other_user}",
            "gists_url": "https://api.github.com/users/skrat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skrat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skrat/subscriptions",
            "organizations_url": "https://api.github.com/users/skrat/orgs",
            "repos_url": "https://api.github.com/users/skrat/repos",
            "events_url": "https://api.github.com/users/skrat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skrat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T12:21:30Z",
        "updated_at": "2017-08-02T12:21:30Z",
        "author_association": "NONE",
        "body": "This is rather weird, I think `seamless-immutable` shouldn't be coercing objects with unknown types to either lists or maps. We also need to store typed array in an immutable map but there doesn't seem to be a way."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/321249852",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/188#issuecomment-321249852",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/188",
        "id": 321249852,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTI0OTg1Mg==",
        "user": {
            "login": "geirsagberg",
            "id": 594564,
            "node_id": "MDQ6VXNlcjU5NDU2NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/594564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geirsagberg",
            "html_url": "https://github.com/geirsagberg",
            "followers_url": "https://api.github.com/users/geirsagberg/followers",
            "following_url": "https://api.github.com/users/geirsagberg/following{/other_user}",
            "gists_url": "https://api.github.com/users/geirsagberg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geirsagberg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geirsagberg/subscriptions",
            "organizations_url": "https://api.github.com/users/geirsagberg/orgs",
            "repos_url": "https://api.github.com/users/geirsagberg/repos",
            "events_url": "https://api.github.com/users/geirsagberg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geirsagberg/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-09T13:07:45Z",
        "updated_at": "2017-08-09T13:07:45Z",
        "author_association": "NONE",
        "body": "Seems to be released now."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/321249900",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/149#issuecomment-321249900",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/149",
        "id": 321249900,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTI0OTkwMA==",
        "user": {
            "login": "geirsagberg",
            "id": 594564,
            "node_id": "MDQ6VXNlcjU5NDU2NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/594564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geirsagberg",
            "html_url": "https://github.com/geirsagberg",
            "followers_url": "https://api.github.com/users/geirsagberg/followers",
            "following_url": "https://api.github.com/users/geirsagberg/following{/other_user}",
            "gists_url": "https://api.github.com/users/geirsagberg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geirsagberg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geirsagberg/subscriptions",
            "organizations_url": "https://api.github.com/users/geirsagberg/orgs",
            "repos_url": "https://api.github.com/users/geirsagberg/repos",
            "events_url": "https://api.github.com/users/geirsagberg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geirsagberg/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-09T13:07:56Z",
        "updated_at": "2017-08-09T13:07:56Z",
        "author_association": "NONE",
        "body": "Looks like https://github.com/rtfeldman/seamless-immutable/pull/188 is released, closing this."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/322042034",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/232#issuecomment-322042034",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/232",
        "id": 322042034,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjA0MjAzNA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-13T13:25:32Z",
        "updated_at": "2017-08-13T13:25:32Z",
        "author_association": "OWNER",
        "body": "Thanks @madnight! "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/323778983",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/231#issuecomment-323778983",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/231",
        "id": 323778983,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzc3ODk4Mw==",
        "user": {
            "login": "toranb",
            "id": 147411,
            "node_id": "MDQ6VXNlcjE0NzQxMQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/147411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toranb",
            "html_url": "https://github.com/toranb",
            "followers_url": "https://api.github.com/users/toranb/followers",
            "following_url": "https://api.github.com/users/toranb/following{/other_user}",
            "gists_url": "https://api.github.com/users/toranb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toranb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toranb/subscriptions",
            "organizations_url": "https://api.github.com/users/toranb/orgs",
            "repos_url": "https://api.github.com/users/toranb/repos",
            "events_url": "https://api.github.com/users/toranb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toranb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-21T15:41:24Z",
        "updated_at": "2017-08-21T15:41:24Z",
        "author_association": "NONE",
        "body": "I'm trying to gauge if this project is truly supported right now or if it's in maintenance mode for the most part. I do see a merge now for Aug but overall it seems like this project isn't being worked on. I've tried to contact @rtfeldman via email/twitter to confirm if he has plans to pass it on or if he is still maintaining it (no word yet)\r\n\r\nAny feedback would be greatly appreciated -thank you in advance "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/324594363",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/221#issuecomment-324594363",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/221",
        "id": 324594363,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDU5NDM2Mw==",
        "user": {
            "login": "sachinB94",
            "id": 5407782,
            "node_id": "MDQ6VXNlcjU0MDc3ODI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5407782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sachinB94",
            "html_url": "https://github.com/sachinB94",
            "followers_url": "https://api.github.com/users/sachinB94/followers",
            "following_url": "https://api.github.com/users/sachinB94/following{/other_user}",
            "gists_url": "https://api.github.com/users/sachinB94/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sachinB94/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sachinB94/subscriptions",
            "organizations_url": "https://api.github.com/users/sachinB94/orgs",
            "repos_url": "https://api.github.com/users/sachinB94/repos",
            "events_url": "https://api.github.com/users/sachinB94/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sachinB94/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-24T10:14:07Z",
        "updated_at": "2017-08-24T10:14:07Z",
        "author_association": "NONE",
        "body": "Hey, any update on this? I'm facing a similar issue with the react-native release build. Debug build works fine.\r\n@tsdexter did you find anything?\r\nusing v7.1.2"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/324659312",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/230#issuecomment-324659312",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/230",
        "id": 324659312,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDY1OTMxMg==",
        "user": {
            "login": "dbashford",
            "id": 581127,
            "node_id": "MDQ6VXNlcjU4MTEyNw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/581127?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbashford",
            "html_url": "https://github.com/dbashford",
            "followers_url": "https://api.github.com/users/dbashford/followers",
            "following_url": "https://api.github.com/users/dbashford/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbashford/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbashford/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbashford/subscriptions",
            "organizations_url": "https://api.github.com/users/dbashford/orgs",
            "repos_url": "https://api.github.com/users/dbashford/repos",
            "events_url": "https://api.github.com/users/dbashford/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbashford/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-24T14:53:37Z",
        "updated_at": "2017-08-24T14:53:37Z",
        "author_association": "NONE",
        "body": "Tripped me up too, would be a great addition."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/326650750",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/95#issuecomment-326650750",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/95",
        "id": 326650750,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjY1MDc1MA==",
        "user": {
            "login": "danny-andrews",
            "id": 14965732,
            "node_id": "MDQ6VXNlcjE0OTY1NzMy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/14965732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danny-andrews",
            "html_url": "https://github.com/danny-andrews",
            "followers_url": "https://api.github.com/users/danny-andrews/followers",
            "following_url": "https://api.github.com/users/danny-andrews/following{/other_user}",
            "gists_url": "https://api.github.com/users/danny-andrews/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danny-andrews/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danny-andrews/subscriptions",
            "organizations_url": "https://api.github.com/users/danny-andrews/orgs",
            "repos_url": "https://api.github.com/users/danny-andrews/repos",
            "events_url": "https://api.github.com/users/danny-andrews/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danny-andrews/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-01T18:20:49Z",
        "updated_at": "2017-09-01T18:20:49Z",
        "author_association": "NONE",
        "body": "I actually don't think enumerating the modified built-in methods is that important anymore. The purpose of the library implies it's going to be doing that stuff. It's more important to know which methods have been **added** to the prototype (which is already documented). Although, from the examples, it's not clear that `Array.prototype` is modified, since the `Immutable.METHOD_NAME` version is used. Example: https://github.com/rtfeldman/seamless-immutable#flatmap."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/329997514",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/171#issuecomment-329997514",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/171",
        "id": 329997514,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk5NzUxNA==",
        "user": {
            "login": "mikeaustin",
            "id": 343144,
            "node_id": "MDQ6VXNlcjM0MzE0NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/343144?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeaustin",
            "html_url": "https://github.com/mikeaustin",
            "followers_url": "https://api.github.com/users/mikeaustin/followers",
            "following_url": "https://api.github.com/users/mikeaustin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeaustin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeaustin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeaustin/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeaustin/orgs",
            "repos_url": "https://api.github.com/users/mikeaustin/repos",
            "events_url": "https://api.github.com/users/mikeaustin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeaustin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-16T22:03:32Z",
        "updated_at": "2017-09-16T22:03:32Z",
        "author_association": "NONE",
        "body": "Soo.. are Maps and Sets supported now? I'd digging around trying to find out."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/329997776",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/133#issuecomment-329997776",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/133",
        "id": 329997776,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk5Nzc3Ng==",
        "user": {
            "login": "mikeaustin",
            "id": 343144,
            "node_id": "MDQ6VXNlcjM0MzE0NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/343144?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeaustin",
            "html_url": "https://github.com/mikeaustin",
            "followers_url": "https://api.github.com/users/mikeaustin/followers",
            "following_url": "https://api.github.com/users/mikeaustin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeaustin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeaustin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeaustin/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeaustin/orgs",
            "repos_url": "https://api.github.com/users/mikeaustin/repos",
            "events_url": "https://api.github.com/users/mikeaustin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeaustin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-16T22:09:40Z",
        "updated_at": "2017-09-16T22:09:40Z",
        "author_association": "NONE",
        "body": "FYI, with the inability to use objects as keys for objects, and modern browsers supporting them natively or using polyfills, it's a difficult decision to use seamless-immutable. I've been using immutable.js, but am very curious about using similar, but lighter-weight library.\r\n\r\nI don't even mind contributing, if there is a general sense of what needs to be done. Would you say it's a week worth of work? A month? Thank you and great work."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/331905028",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/202#issuecomment-331905028",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/202",
        "id": 331905028,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTkwNTAyOA==",
        "user": {
            "login": "scottmas",
            "id": 2257337,
            "node_id": "MDQ6VXNlcjIyNTczMzc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2257337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottmas",
            "html_url": "https://github.com/scottmas",
            "followers_url": "https://api.github.com/users/scottmas/followers",
            "following_url": "https://api.github.com/users/scottmas/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottmas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottmas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottmas/subscriptions",
            "organizations_url": "https://api.github.com/users/scottmas/orgs",
            "repos_url": "https://api.github.com/users/scottmas/repos",
            "events_url": "https://api.github.com/users/scottmas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottmas/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-25T14:47:19Z",
        "updated_at": "2017-09-25T14:47:19Z",
        "author_association": "NONE",
        "body": "I too would like confirmation of this. "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/331992252",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/186#issuecomment-331992252",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/186",
        "id": 331992252,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTk5MjI1Mg==",
        "user": {
            "login": "offlinehacker",
            "id": 585547,
            "node_id": "MDQ6VXNlcjU4NTU0Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/585547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/offlinehacker",
            "html_url": "https://github.com/offlinehacker",
            "followers_url": "https://api.github.com/users/offlinehacker/followers",
            "following_url": "https://api.github.com/users/offlinehacker/following{/other_user}",
            "gists_url": "https://api.github.com/users/offlinehacker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/offlinehacker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/offlinehacker/subscriptions",
            "organizations_url": "https://api.github.com/users/offlinehacker/orgs",
            "repos_url": "https://api.github.com/users/offlinehacker/repos",
            "events_url": "https://api.github.com/users/offlinehacker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/offlinehacker/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-25T19:49:57Z",
        "updated_at": "2017-09-25T19:49:57Z",
        "author_association": "NONE",
        "body": "I'm using `Immutable.equals` in my model library to check if some fields in a model have changed from original value."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/332366500",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-332366500",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 332366500,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM2NjUwMA==",
        "user": {
            "login": "Connormiha",
            "id": 4091305,
            "node_id": "MDQ6VXNlcjQwOTEzMDU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4091305?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Connormiha",
            "html_url": "https://github.com/Connormiha",
            "followers_url": "https://api.github.com/users/Connormiha/followers",
            "following_url": "https://api.github.com/users/Connormiha/following{/other_user}",
            "gists_url": "https://api.github.com/users/Connormiha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Connormiha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Connormiha/subscriptions",
            "organizations_url": "https://api.github.com/users/Connormiha/orgs",
            "repos_url": "https://api.github.com/users/Connormiha/repos",
            "events_url": "https://api.github.com/users/Connormiha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Connormiha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-26T23:40:05Z",
        "updated_at": "2017-09-26T23:40:05Z",
        "author_association": "NONE",
        "body": "@toranb  What about `Immutable.static`?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/332371604",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-332371604",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 332371604,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM3MTYwNA==",
        "user": {
            "login": "toranb",
            "id": 147411,
            "node_id": "MDQ6VXNlcjE0NzQxMQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/147411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toranb",
            "html_url": "https://github.com/toranb",
            "followers_url": "https://api.github.com/users/toranb/followers",
            "following_url": "https://api.github.com/users/toranb/following{/other_user}",
            "gists_url": "https://api.github.com/users/toranb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toranb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toranb/subscriptions",
            "organizations_url": "https://api.github.com/users/toranb/orgs",
            "repos_url": "https://api.github.com/users/toranb/repos",
            "events_url": "https://api.github.com/users/toranb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toranb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-27T00:14:16Z",
        "updated_at": "2017-09-27T00:14:16Z",
        "author_association": "NONE",
        "body": "@Connormiha I'm down to add something for it - my hacking was mostly for methods I was using (if this is something you are interested in providing type defs for I'd be willing to update it). Might ping me on that repo instead to start a thread about it"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/332486147",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/236#issuecomment-332486147",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/236",
        "id": 332486147,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjQ4NjE0Nw==",
        "user": {
            "login": "eseQ",
            "id": 13243379,
            "node_id": "MDQ6VXNlcjEzMjQzMzc5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13243379?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eseQ",
            "html_url": "https://github.com/eseQ",
            "followers_url": "https://api.github.com/users/eseQ/followers",
            "following_url": "https://api.github.com/users/eseQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/eseQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eseQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eseQ/subscriptions",
            "organizations_url": "https://api.github.com/users/eseQ/orgs",
            "repos_url": "https://api.github.com/users/eseQ/repos",
            "events_url": "https://api.github.com/users/eseQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eseQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-27T11:02:08Z",
        "updated_at": "2017-09-27T11:02:08Z",
        "author_association": "NONE",
        "body": "`newState.updateIn(['OFFER_CAMPAING', 'data', offers], offers => offers.without('100'));`"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/333396368",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-333396368",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 333396368,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzM5NjM2OA==",
        "user": {
            "login": "azundo",
            "id": 2159521,
            "node_id": "MDQ6VXNlcjIxNTk1MjE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2159521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azundo",
            "html_url": "https://github.com/azundo",
            "followers_url": "https://api.github.com/users/azundo/followers",
            "following_url": "https://api.github.com/users/azundo/following{/other_user}",
            "gists_url": "https://api.github.com/users/azundo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azundo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azundo/subscriptions",
            "organizations_url": "https://api.github.com/users/azundo/orgs",
            "repos_url": "https://api.github.com/users/azundo/repos",
            "events_url": "https://api.github.com/users/azundo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azundo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-01T18:28:31Z",
        "updated_at": "2017-10-01T18:28:31Z",
        "author_association": "NONE",
        "body": "I've been trying to improve upon these a bit to allow type aliasing of the immutable object itself for things like redux state and to restrict inputs to `merge, `update`, `without` to valid objects/keys. Still very much a work in progress but this improves things for simple objects:\r\n\r\n```\r\n/* @flow */\r\n\r\ndeclare module 'seamless-immutable' {\r\n  declare type fromType = Object | Array<*>;\r\n  declare export type Immutable<T: fromType> = T & {\r\n    // Array methods\r\n    flatMap(fn: Function): Array<any>;\r\n    asObject(fn: Function): Object;\r\n    asMutable(): Array<any>;\r\n    // Object methods\r\n    merge(collection: Array<$Shape<T>> | $Shape<T>, deep?: Object): Object;\r\n    set(key: $Keys<T>, value: any): Object;\r\n    setIn(keyPath: Array<string>, value: any): Object;\r\n    update(key: $Keys<T>, fn: Function): Object;\r\n    updateIn(keyPath: Array<string>, fn: Function): Object;\r\n    without(fn: Function): Object;\r\n    without(keys: Array<$Keys<T>>): Object;\r\n    without(...keys: Array<$Keys<T>>): Object;\r\n    asMutable(): Array<any> | Object;\r\n  };\r\n\r\n  declare export function from<T: fromType> (spec: T): Immutable<T>;\r\n\r\n  declare export function isImmutable(x: *): boolean;\r\n\r\n  declare export default {\r\n    from<T: fromType>(spec: T): Immutable<T>,\r\n    isImmutable(x: *): boolean,\r\n  };\r\n}\r\n```\r\n\r\nUsage is something like:\r\n\r\n```\r\nimport Immutable from 'seamless-immutable';\r\nimport type {Immutable as ImmutableType} from 'seamless-immutable';\r\n\r\ntype MyState = {\r\n  requiredProp: string,\r\n  optionalProp?: number,\r\n};\r\n\r\nconst immutableState: ImmutableType<MyState> = Immutable.from(\r\n  ({requiredProp: \"foo\"}: MyState)\r\n);\r\n\r\nimmutableState.merge({optionalProp: 42}); // no error\r\nimmutableState.merge({optionalProp: \"42\"}); // ERROR\r\nimmutableState.merge({badProp: \"other\"}); // ERROR\r\nimmutableState.set('badProp', 42); // ERROR\r\n```\r\n\r\nStill has many, many shortcomings, the updateIn or setIn keypaths are not validated, nor are the values passed to `set` or returned from the `update` function. Removing required properties using `without` is also possible  - would likely have to two generic types similar to Props and RequiredProps for that to work."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/333695736",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-333695736",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 333695736,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzY5NTczNg==",
        "user": {
            "login": "ajhyndman",
            "id": 11449340,
            "node_id": "MDQ6VXNlcjExNDQ5MzQw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11449340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhyndman",
            "html_url": "https://github.com/ajhyndman",
            "followers_url": "https://api.github.com/users/ajhyndman/followers",
            "following_url": "https://api.github.com/users/ajhyndman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhyndman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhyndman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhyndman/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhyndman/orgs",
            "repos_url": "https://api.github.com/users/ajhyndman/repos",
            "events_url": "https://api.github.com/users/ajhyndman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhyndman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-02T23:38:40Z",
        "updated_at": "2017-10-02T23:39:15Z",
        "author_association": "NONE",
        "body": "@azundo Cool!\r\n\r\nHave you considered trying to upgrade from the intersection type to a type spread?  That syntax wasn't present in Flow at the time I took a stab at this before, but should model what's happening a bit better.\r\n\r\ni.e.\r\n\r\n```javascript\r\n  declare export type Immutable<T: fromType> = {\r\n    ...T;\r\n    // Array methods\r\n    flatMap(fn: Function): Array<any>;\r\n    // ...\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/333705795",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-333705795",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 333705795,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzcwNTc5NQ==",
        "user": {
            "login": "azundo",
            "id": 2159521,
            "node_id": "MDQ6VXNlcjIxNTk1MjE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2159521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azundo",
            "html_url": "https://github.com/azundo",
            "followers_url": "https://api.github.com/users/azundo/followers",
            "following_url": "https://api.github.com/users/azundo/following{/other_user}",
            "gists_url": "https://api.github.com/users/azundo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azundo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azundo/subscriptions",
            "organizations_url": "https://api.github.com/users/azundo/orgs",
            "repos_url": "https://api.github.com/users/azundo/repos",
            "events_url": "https://api.github.com/users/azundo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azundo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-03T00:43:25Z",
        "updated_at": "2017-10-03T00:43:25Z",
        "author_association": "NONE",
        "body": "@ajhyndman Ah, yep, that makes sense. Unfortunately it seems like $Shape doesn't do deep matching so my updates are less useful than I was hoping as type checking fails for deep merging: https://github.com/facebook/flow/issues/2542"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/335595547",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/234#issuecomment-335595547",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/234",
        "id": 335595547,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTU5NTU0Nw==",
        "user": {
            "login": "ckeeney",
            "id": 8799010,
            "node_id": "MDQ6VXNlcjg3OTkwMTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/8799010?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ckeeney",
            "html_url": "https://github.com/ckeeney",
            "followers_url": "https://api.github.com/users/ckeeney/followers",
            "following_url": "https://api.github.com/users/ckeeney/following{/other_user}",
            "gists_url": "https://api.github.com/users/ckeeney/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ckeeney/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ckeeney/subscriptions",
            "organizations_url": "https://api.github.com/users/ckeeney/orgs",
            "repos_url": "https://api.github.com/users/ckeeney/repos",
            "events_url": "https://api.github.com/users/ckeeney/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ckeeney/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-10T20:20:43Z",
        "updated_at": "2017-10-10T20:20:43Z",
        "author_association": "NONE",
        "body": "And a nice copy and paste for installing with both yarn and npm would be nice."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/336648401",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/230#issuecomment-336648401",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/230",
        "id": 336648401,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjY0ODQwMQ==",
        "user": {
            "login": "nonameolsson",
            "id": 1493018,
            "node_id": "MDQ6VXNlcjE0OTMwMTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1493018?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nonameolsson",
            "html_url": "https://github.com/nonameolsson",
            "followers_url": "https://api.github.com/users/nonameolsson/followers",
            "following_url": "https://api.github.com/users/nonameolsson/following{/other_user}",
            "gists_url": "https://api.github.com/users/nonameolsson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nonameolsson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nonameolsson/subscriptions",
            "organizations_url": "https://api.github.com/users/nonameolsson/orgs",
            "repos_url": "https://api.github.com/users/nonameolsson/repos",
            "events_url": "https://api.github.com/users/nonameolsson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nonameolsson/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-14T16:56:11Z",
        "updated_at": "2017-10-14T16:56:11Z",
        "author_association": "NONE",
        "body": "How come there is no find-method? Would have been great!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/337129758",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/228#issuecomment-337129758",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/228",
        "id": 337129758,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzEyOTc1OA==",
        "user": {
            "login": "RusinovAnton",
            "id": 13165540,
            "node_id": "MDQ6VXNlcjEzMTY1NTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13165540?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RusinovAnton",
            "html_url": "https://github.com/RusinovAnton",
            "followers_url": "https://api.github.com/users/RusinovAnton/followers",
            "following_url": "https://api.github.com/users/RusinovAnton/following{/other_user}",
            "gists_url": "https://api.github.com/users/RusinovAnton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RusinovAnton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RusinovAnton/subscriptions",
            "organizations_url": "https://api.github.com/users/RusinovAnton/orgs",
            "repos_url": "https://api.github.com/users/RusinovAnton/repos",
            "events_url": "https://api.github.com/users/RusinovAnton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RusinovAnton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-17T06:20:40Z",
        "updated_at": "2017-10-17T06:20:40Z",
        "author_association": "NONE",
        "body": "This should be closed then?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/339444403",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/202#issuecomment-339444403",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/202",
        "id": 339444403,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQ0NDQwMw==",
        "user": {
            "login": "stoeckley",
            "id": 4611759,
            "node_id": "MDQ6VXNlcjQ2MTE3NTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4611759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stoeckley",
            "html_url": "https://github.com/stoeckley",
            "followers_url": "https://api.github.com/users/stoeckley/followers",
            "following_url": "https://api.github.com/users/stoeckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/stoeckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stoeckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stoeckley/subscriptions",
            "organizations_url": "https://api.github.com/users/stoeckley/orgs",
            "repos_url": "https://api.github.com/users/stoeckley/repos",
            "events_url": "https://api.github.com/users/stoeckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stoeckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-25T19:30:04Z",
        "updated_at": "2017-10-25T19:33:48Z",
        "author_association": "NONE",
        "body": "I was looking into this, and I get the impression that Seamless is not a persistent data structure and does not use structural sharing (and also would not be good for functional programming for those reasons). Here is another commenter about more details:\r\n\r\nhttps://www.reddit.com/r/javascript/comments/3r5ppg/why_use_immutablejs_over_mori/cwlh6u8/\r\n\r\nIf you are looking for a more traditional immutable data structure, mori might make more sense."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/339451412",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/42#issuecomment-339451412",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/42",
        "id": 339451412,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQ1MTQxMg==",
        "user": {
            "login": "agurtovoy",
            "id": 3394202,
            "node_id": "MDQ6VXNlcjMzOTQyMDI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3394202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agurtovoy",
            "html_url": "https://github.com/agurtovoy",
            "followers_url": "https://api.github.com/users/agurtovoy/followers",
            "following_url": "https://api.github.com/users/agurtovoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/agurtovoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agurtovoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agurtovoy/subscriptions",
            "organizations_url": "https://api.github.com/users/agurtovoy/orgs",
            "repos_url": "https://api.github.com/users/agurtovoy/repos",
            "events_url": "https://api.github.com/users/agurtovoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agurtovoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-25T19:54:38Z",
        "updated_at": "2017-10-25T19:54:38Z",
        "author_association": "NONE",
        "body": "I'd like to reopen this discussion in the light that nowadays `seamless-immutable` treats functions, errors, dates, and React components as immutable even though they are not in order to make the library play nicely with the rest of the code out there.\r\n\r\nHere's a problem I ran into yesterday when using `seamless-immutable` together with Draft.js:\r\n\r\n```\r\nconst editorState = Immutable( { content: Draft.convertToRaw( ContentState.createFromText( text ) ) } );\r\n...\r\nconst state =  Draft.convertFromRaw( editorState.content );\r\n//             ^^^^^^^^^^^^^^^^^^^^\r\n// TypeError: block.getKey is not a function\r\n//    at node_modules/draft-js/lib/BlockMapBuilder.js:24:21\r\n//    at Array.map (native)\r\n//    at Array.<anonymous> (node_modules/seamless-immutable/src/seamless-immutable.js:132:38)\r\n//    at Object.createFromArray (node_modules/draft-js/lib/BlockMapBuilder.js:22:30)\r\n//    at Function.createFromBlockArray (node_modules/draft-js/lib/ContentState.js:163:36)\r\n//    at convertFromRawToDraftState (node_modules/draft-js/lib/convertFromRawToDraftState.js:89:23)\r\n```\r\nThe reason the above fails is that Draft.js' `createFromBlockArray` uses `.map` to convert an array of raw objects into an array of prototype-based objects, which `seamless-immutable` promptly strips down to raw immutable data, no methods, thus `block.getKey is not a function`.\r\n\r\nI worked around it by running `editorState.content` through `Immutable.asMutable( ..., { deep: true } )`, but this was thoroughly unexpected and IMHO incompatible with the library's promise of \"data structures which are backwards-compatible with normal Arrays and Objects.\"\r\n\r\nI think it makes a lot of sense to make plain-old-js-objects returned from `.map` immutable, but we've gotta pass everything else through as-is.\r\n\r\nThoughts?\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/342719912",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-342719912",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 342719912,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjcxOTkxMg==",
        "user": {
            "login": "chrisbull",
            "id": 753112,
            "node_id": "MDQ6VXNlcjc1MzExMg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/753112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisbull",
            "html_url": "https://github.com/chrisbull",
            "followers_url": "https://api.github.com/users/chrisbull/followers",
            "following_url": "https://api.github.com/users/chrisbull/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisbull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisbull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisbull/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisbull/orgs",
            "repos_url": "https://api.github.com/users/chrisbull/repos",
            "events_url": "https://api.github.com/users/chrisbull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisbull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-08T06:05:29Z",
        "updated_at": "2017-11-08T06:05:29Z",
        "author_association": "NONE",
        "body": "@azundo Found this...\r\n\r\nhttps://gist.github.com/mizchi/3054bca701dff4b5e28efd9133c66818\r\n\r\nseems to be working great for me thus far.\r\n\r\n```\r\nimport Immutable, { type Immutable as ImmutableType } from 'seamless-immutable'\r\n\r\ntype LoginState = {\r\n  authToken: string,\r\n  error: any,\r\n  fetching: boolean,\r\n  loading: boolean,\r\n}\r\n\r\ntype _LoginState = ImmutableType<LoginState>\r\n\r\nconst INITIAL_STATE: _LoginState = Immutable({\r\n  authToken: '',\r\n  error: null,\r\n  fetching: false,\r\n  loading: false,\r\n})\r\n\r\nexport const request = (state: _LoginState): _LoginState =>\r\n  state.merge({ fetching: true })\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/342729736",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-342729736",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 342729736,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjcyOTczNg==",
        "user": {
            "login": "azundo",
            "id": 2159521,
            "node_id": "MDQ6VXNlcjIxNTk1MjE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2159521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azundo",
            "html_url": "https://github.com/azundo",
            "followers_url": "https://api.github.com/users/azundo/followers",
            "following_url": "https://api.github.com/users/azundo/following{/other_user}",
            "gists_url": "https://api.github.com/users/azundo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azundo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azundo/subscriptions",
            "organizations_url": "https://api.github.com/users/azundo/orgs",
            "repos_url": "https://api.github.com/users/azundo/repos",
            "events_url": "https://api.github.com/users/azundo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azundo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-08T07:09:03Z",
        "updated_at": "2017-11-08T07:09:03Z",
        "author_association": "NONE",
        "body": "Awesome, thanks @chrisbull will check it out. The operation I couldn't get to typecheck was deep merging. Something like:\r\n\r\n```\r\ntype NestedState = {\r\n  propA: string,\r\n  propB: string,\r\n}\r\ntype TopLevelState = {\r\n  otherProp: string,\r\n  nested: NestedState,\r\n}\r\n\r\nconst state = ImmutableType<TopLevelState> = Immutable.from({\r\n  otherProp: 'bar',\r\n  nested: {\r\n    propA: 'A',\r\n    propB: 'B',\r\n  },\r\n});\r\n\r\nstate.merge({nested: {propB: 'C'}}, {deep: true}); // should pass\r\nstate.merge({nested: {propC: 'C'}}, {deep: true}); // should fail\r\n```\r\n\r\nHad a hard time finding anything that would meet both of those conditions for arbitrarily nested states.\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/343747934",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/203#issuecomment-343747934",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/203",
        "id": 343747934,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc0NzkzNA==",
        "user": {
            "login": "yoavniran",
            "id": 1102278,
            "node_id": "MDQ6VXNlcjExMDIyNzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1102278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yoavniran",
            "html_url": "https://github.com/yoavniran",
            "followers_url": "https://api.github.com/users/yoavniran/followers",
            "following_url": "https://api.github.com/users/yoavniran/following{/other_user}",
            "gists_url": "https://api.github.com/users/yoavniran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yoavniran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yoavniran/subscriptions",
            "organizations_url": "https://api.github.com/users/yoavniran/orgs",
            "repos_url": "https://api.github.com/users/yoavniran/repos",
            "events_url": "https://api.github.com/users/yoavniran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yoavniran/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-12T16:13:43Z",
        "updated_at": "2017-11-12T16:13:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "hi @rtfeldman \r\n\r\nin a project im working on I have an issue in safari. uploads to server are failing because the Blob I reference in my state is being treated as data instead of an object to skip (like File/React/Error). \r\n\r\nThe reason its a Blob and not a File is that creating a File instance from the binary I get (from a 3rd party API) on Safari fails (its empty) and creating a Blob works.\r\n\r\nI think Blob should be treated the same as File, no? \r\nId be happy to submit a PR that does the same as isFileObject for Blob.\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/343968844",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/237#issuecomment-343968844",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/237",
        "id": 343968844,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzk2ODg0NA==",
        "user": {
            "login": "yoavniran",
            "id": 1102278,
            "node_id": "MDQ6VXNlcjExMDIyNzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1102278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yoavniran",
            "html_url": "https://github.com/yoavniran",
            "followers_url": "https://api.github.com/users/yoavniran/followers",
            "following_url": "https://api.github.com/users/yoavniran/following{/other_user}",
            "gists_url": "https://api.github.com/users/yoavniran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yoavniran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yoavniran/subscriptions",
            "organizations_url": "https://api.github.com/users/yoavniran/orgs",
            "repos_url": "https://api.github.com/users/yoavniran/repos",
            "events_url": "https://api.github.com/users/yoavniran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yoavniran/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-13T16:11:30Z",
        "updated_at": "2017-11-13T16:11:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "Travis build fails with:\r\n\r\n> zuul -- test/*.spec.js\r\n\r\n- testing: chrome @ Linux: 45\r\n\r\n- testing: chrome @ Mac 10.11: 62\r\n\r\n- testing: internet explorer @ Windows 2008: 9\r\n\r\n- testing: internet explorer @ Windows 2012: 10\r\n\r\n- testing: internet explorer @ Windows 10: 11\r\n\r\n- testing: firefox @ Mac 10.9: 36\r\n\r\n- testing: firefox @ Windows 10: 56\r\n\r\n- testing: android @ Linux: 6.0\r\n\r\n- testing: safari @ Mac 10.12: 11\r\n\r\n- restarting: <internet explorer 9 on Windows 2008>\r\n\r\n- restarting: <internet explorer 11 on Windows 10>\r\n\r\n- restarting: <chrome 62 on Mac 10.11>\r\n\r\n- restarting: <internet explorer 10 on Windows 2012>\r\n\r\n- restarting: <chrome 45 on Linux>\r\n\r\n- restarting: <chrome 62 on Mac 10.11>\r\n\r\n- restarting: <internet explorer 11 on Windows 10>\r\n\r\n- restarting: <chrome 45 on Linux>\r\n\r\n- restarting: <internet explorer 9 on Windows 2008>\r\n\r\n- restarting: <internet explorer 10 on Windows 2012>\r\n\r\n- restarting: <chrome 45 on Linux>\r\n\r\n- restarting: <chrome 62 on Mac 10.11>\r\n\r\n- restarting: <internet explorer 11 on Windows 10>\r\n\r\n- restarting: <internet explorer 9 on Windows 2008>\r\n\r\n- restarting: <internet explorer 10 on Windows 2012>\r\n\r\n- restarting: <chrome 45 on Linux>\r\n\r\n- restarting: <internet explorer 11 on Windows 10>\r\n\r\n- restarting: <chrome 62 on Mac 10.11>\r\n\r\n- restarting: <internet explorer 10 on Windows 2012>\r\n\r\n- restarting: <internet explorer 9 on Windows 2008>\r\n\r\n- restarting: <chrome 45 on Linux>\r\n\r\n- restarting: <internet explorer 11 on Windows 10>\r\n\r\n- restarting: <chrome 62 on Mac 10.11>\r\n\r\n- restarting: <internet explorer 10 on Windows 2012>\r\n\r\n- restarting: <internet explorer 9 on Windows 2008>\r\n\r\n- restarting: <internet explorer 11 on Windows 10>\r\n\r\n- restarting: <chrome 45 on Linux>\r\n\r\n- restarting: <internet explorer 10 on Windows 2012>\r\n\r\n- restarting: <chrome 62 on Mac 10.11>\r\n\r\n- restarting: <internet explorer 9 on Windows 2008>\r\n\r\n- failed: <firefox 36 on Mac 10.9> (0 failed, 0 passed)\r\n\r\n- failed: <firefox 56 on Windows 10> (0 failed, 0 passed)\r\n\r\n- failed: <android 6.0 on Linux> (0 failed, 0 passed)\r\n\r\n- failed: <safari 11 on Mac 10.12> (0 failed, 0 passed)\r\n\r\n/home/travis/build/rtfeldman/seamless-immutable/node_modules/zuul/bin/zuul:328\r\n\r\n            throw err.message;\r\n\r\n            ^\r\n\r\nchrome@45: localtunnel server returned an error, please try again\r\n\r\nCan someone help?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/347205487",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/237#issuecomment-347205487",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/237",
        "id": 347205487,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzIwNTQ4Nw==",
        "user": {
            "login": "yoavniran",
            "id": 1102278,
            "node_id": "MDQ6VXNlcjExMDIyNzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1102278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yoavniran",
            "html_url": "https://github.com/yoavniran",
            "followers_url": "https://api.github.com/users/yoavniran/followers",
            "following_url": "https://api.github.com/users/yoavniran/following{/other_user}",
            "gists_url": "https://api.github.com/users/yoavniran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yoavniran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yoavniran/subscriptions",
            "organizations_url": "https://api.github.com/users/yoavniran/orgs",
            "repos_url": "https://api.github.com/users/yoavniran/repos",
            "events_url": "https://api.github.com/users/yoavniran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yoavniran/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-27T14:52:05Z",
        "updated_at": "2017-11-27T14:52:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "hi @rtfeldman - any chance this could get in? we have a bug open and ignoring Blob (as File is) solves it. Id rather not use my fork in Production... "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/347986180",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-347986180",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 347986180,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzk4NjE4MA==",
        "user": {
            "login": "akread",
            "id": 6855046,
            "node_id": "MDQ6VXNlcjY4NTUwNDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6855046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akread",
            "html_url": "https://github.com/akread",
            "followers_url": "https://api.github.com/users/akread/followers",
            "following_url": "https://api.github.com/users/akread/following{/other_user}",
            "gists_url": "https://api.github.com/users/akread/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akread/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akread/subscriptions",
            "organizations_url": "https://api.github.com/users/akread/orgs",
            "repos_url": "https://api.github.com/users/akread/repos",
            "events_url": "https://api.github.com/users/akread/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akread/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-29T20:28:35Z",
        "updated_at": "2017-11-29T20:28:35Z",
        "author_association": "NONE",
        "body": "I tried out some of the example type definitions here but none of them seem to work properly for arrays. Is no one using seamless immutable for arrays as well?\r\n\r\nI'm working on some more advanced typing for a project now and will share when I get further along."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/348276770",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/239#issuecomment-348276770",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/239",
        "id": 348276770,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODI3Njc3MA==",
        "user": {
            "login": "markhicken",
            "id": 849930,
            "node_id": "MDQ6VXNlcjg0OTkzMA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/849930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/markhicken",
            "html_url": "https://github.com/markhicken",
            "followers_url": "https://api.github.com/users/markhicken/followers",
            "following_url": "https://api.github.com/users/markhicken/following{/other_user}",
            "gists_url": "https://api.github.com/users/markhicken/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/markhicken/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/markhicken/subscriptions",
            "organizations_url": "https://api.github.com/users/markhicken/orgs",
            "repos_url": "https://api.github.com/users/markhicken/repos",
            "events_url": "https://api.github.com/users/markhicken/events{/privacy}",
            "received_events_url": "https://api.github.com/users/markhicken/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-30T18:24:54Z",
        "updated_at": "2017-11-30T18:24:54Z",
        "author_association": "NONE",
        "body": "I totally agree! Do you think it would also make sense to allow removing by value? \r\n\r\n```javascript\r\nconst fruits = Immutable(['apple', 'banana', 'cherry']);\r\nfruits.without('banana'); // ['apple', 'cherry']\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/348278786",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/239#issuecomment-348278786",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/239",
        "id": 348278786,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODI3ODc4Ng==",
        "user": {
            "login": "Aaronius",
            "id": 210820,
            "node_id": "MDQ6VXNlcjIxMDgyMA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/210820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aaronius",
            "html_url": "https://github.com/Aaronius",
            "followers_url": "https://api.github.com/users/Aaronius/followers",
            "following_url": "https://api.github.com/users/Aaronius/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aaronius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aaronius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aaronius/subscriptions",
            "organizations_url": "https://api.github.com/users/Aaronius/orgs",
            "repos_url": "https://api.github.com/users/Aaronius/repos",
            "events_url": "https://api.github.com/users/Aaronius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aaronius/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-30T18:32:11Z",
        "updated_at": "2017-11-30T18:32:11Z",
        "author_association": "NONE",
        "body": "No, because it leads to ambiguity:\r\n\r\n```\r\nconst fruits = Immutable([3, 2, 1]);\r\nfruits.without(1); // ?\r\n```\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/348279785",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/239#issuecomment-348279785",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/239",
        "id": 348279785,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODI3OTc4NQ==",
        "user": {
            "login": "markhicken",
            "id": 849930,
            "node_id": "MDQ6VXNlcjg0OTkzMA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/849930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/markhicken",
            "html_url": "https://github.com/markhicken",
            "followers_url": "https://api.github.com/users/markhicken/followers",
            "following_url": "https://api.github.com/users/markhicken/following{/other_user}",
            "gists_url": "https://api.github.com/users/markhicken/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/markhicken/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/markhicken/subscriptions",
            "organizations_url": "https://api.github.com/users/markhicken/orgs",
            "repos_url": "https://api.github.com/users/markhicken/repos",
            "events_url": "https://api.github.com/users/markhicken/events{/privacy}",
            "received_events_url": "https://api.github.com/users/markhicken/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-30T18:36:02Z",
        "updated_at": "2017-11-30T18:36:02Z",
        "author_association": "NONE",
        "body": "Ok then, maybe it's a rabbit hole but it seems like most of the time, you would know the value but not the index. How about something like this?\r\n\r\n```javascript\r\nconst fruits = Immutable(['apple', 'banana', 'cherry']);\r\nfruits.without('banana', { byValue: true }); // ['apple', 'cherry']\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/348293355",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/207#issuecomment-348293355",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/207",
        "id": 348293355,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODI5MzM1NQ==",
        "user": {
            "login": "Aaronius",
            "id": 210820,
            "node_id": "MDQ6VXNlcjIxMDgyMA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/210820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aaronius",
            "html_url": "https://github.com/Aaronius",
            "followers_url": "https://api.github.com/users/Aaronius/followers",
            "following_url": "https://api.github.com/users/Aaronius/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aaronius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aaronius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aaronius/subscriptions",
            "organizations_url": "https://api.github.com/users/Aaronius/orgs",
            "repos_url": "https://api.github.com/users/Aaronius/repos",
            "events_url": "https://api.github.com/users/Aaronius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aaronius/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-30T19:23:39Z",
        "updated_at": "2017-11-30T19:23:39Z",
        "author_association": "NONE",
        "body": "@rtfeldman is this something you would accept a pull request for?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/348306800",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/207#issuecomment-348306800",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/207",
        "id": 348306800,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODMwNjgwMA==",
        "user": {
            "login": "Aaronius",
            "id": 210820,
            "node_id": "MDQ6VXNlcjIxMDgyMA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/210820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aaronius",
            "html_url": "https://github.com/Aaronius",
            "followers_url": "https://api.github.com/users/Aaronius/followers",
            "following_url": "https://api.github.com/users/Aaronius/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aaronius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aaronius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aaronius/subscriptions",
            "organizations_url": "https://api.github.com/users/Aaronius/orgs",
            "repos_url": "https://api.github.com/users/Aaronius/repos",
            "events_url": "https://api.github.com/users/Aaronius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aaronius/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-30T20:11:00Z",
        "updated_at": "2017-11-30T20:11:00Z",
        "author_association": "NONE",
        "body": "One common painpoint we run into because we don't have a `withoutIn()` can be seen here:\r\n\r\n```js\r\nlet a = Immutable({});\r\nif (a.getIn(['a', 'b', 'c'])) {\r\n  a = a.updateIn(['a', 'b', 'c'], (c) => {\r\n    return c.without('d');\r\n  });\r\n}\r\n```\r\n\r\nIf we don't do the `if` statement, the `a.b.c` chain will get created when we do an `updateIn()`, which isn't what we want. It would be so much simpler to do:\r\n\r\n```js\r\nlet a = Immutable({});\r\na = a.withoutIn(['a', 'b', 'c', 'd']);\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/349800132",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-349800132",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 349800132,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTgwMDEzMg==",
        "user": {
            "login": "chrisbull",
            "id": 753112,
            "node_id": "MDQ6VXNlcjc1MzExMg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/753112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisbull",
            "html_url": "https://github.com/chrisbull",
            "followers_url": "https://api.github.com/users/chrisbull/followers",
            "following_url": "https://api.github.com/users/chrisbull/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisbull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisbull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisbull/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisbull/orgs",
            "repos_url": "https://api.github.com/users/chrisbull/repos",
            "events_url": "https://api.github.com/users/chrisbull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisbull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T22:45:14Z",
        "updated_at": "2017-12-06T22:45:14Z",
        "author_association": "NONE",
        "body": "@azundo So first, technically your `state.merge({nested: {propB: 'C'}}, {deep: true});` would always pass, as you are Immutable allows you to merge new items into your object called nested. What it doesn't allow you to do is change `nested` to an different kind of value, for example an array or a number. So `state.merge({nested: [1,2,3]})` should fail. \r\n\r\nThat said, here is an updated version of how I am managing and updating Flow Types:\r\n\r\n```\r\n/* @flow */\r\n\r\nimport * as Immutable from 'seamless-immutable'\r\n\r\n// Reusable Types\r\n\r\nexport type ImmutableStateType<S> = Immutable.ImmutableObjectMixin<S>\r\n\r\nexport type ActionType<T> = T & { type?: string, payload?: T }\r\n\r\nexport type ReducerType<S, A> = (state: S, action: A) => S\r\n\r\n// Specific Types - this would be reducer specific\r\n\r\nexport type MyNestedState = {\r\n  otherProp?: string,\r\n  nested?: {\r\n    propA?: string,\r\n    propB?: string,\r\n  },\r\n}\r\n\r\nexport type MyNestedImmutableState = ImmutableStateType<MyNestedState>\r\nexport type MyNestedAction = ActionType<MyNestedState> // return { type?: string, payload?: MyNestedState }\r\n\r\nexport type MyNestedActionWithAddedProps = MyNestedAction & {\r\n  propA?: string,\r\n  propB?: string,\r\n  otherProp?: string,\r\n} // return { type?: string, payload?: MyNestedState, propA?: string, propB?: string, otherProp?: string }\r\n\r\nexport type MyNestedReducer = ReducerType<MyNestedImmutableState, MyNestedActionWithAddedProps>\r\n\r\n/* ------------- Initial State ------------- */\r\n\r\nconst initState: MyNestedState = {\r\n  otherProp: 'bar',\r\n  nested: {\r\n    propA: 'A',\r\n    propB: 'B',\r\n  },\r\n}\r\n\r\nexport const INITIAL_STATE: MyNestedImmutableState = Immutable.Immutable(initState)\r\n\r\n/* ------------- Reducers ------------- */\r\n\r\n// User\r\nexport const mergePropA: MyNestedReducer = (state, { otherProp, propA }) =>\r\n  state.merge({\r\n    otherProp,\r\n    nested: {\r\n      ...state.nested,\r\n      propA,\r\n    },\r\n  }) // should pass\r\n\r\nexport const mergePropB: MyNestedReducer = (state, { otherProp, propB }) =>\r\n  state.merge({\r\n    otherProp,\r\n    nested: {\r\n      ...state.nested,\r\n      propB,\r\n    },\r\n  }) // should pass\r\n\r\nexport const mergePropC: MyNestedReducer = (state, { otherProp, propC }) =>\r\n  state.merge({\r\n    otherProp,\r\n    nested: {\r\n      ...state.nested,\r\n      propC,\r\n    },\r\n  }) // should fail\r\n```\r\n\r\n@akread Hopefully this will help you as well."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/349805767",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-349805767",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 349805767,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTgwNTc2Nw==",
        "user": {
            "login": "azundo",
            "id": 2159521,
            "node_id": "MDQ6VXNlcjIxNTk1MjE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2159521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azundo",
            "html_url": "https://github.com/azundo",
            "followers_url": "https://api.github.com/users/azundo/followers",
            "following_url": "https://api.github.com/users/azundo/following{/other_user}",
            "gists_url": "https://api.github.com/users/azundo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azundo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azundo/subscriptions",
            "organizations_url": "https://api.github.com/users/azundo/orgs",
            "repos_url": "https://api.github.com/users/azundo/repos",
            "events_url": "https://api.github.com/users/azundo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azundo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T23:09:45Z",
        "updated_at": "2017-12-06T23:09:45Z",
        "author_association": "NONE",
        "body": "@chrisbull Since immutable allows merging arbitrary values it would be great for the type system to be able to catch misnamed keys (`propC` in my example). If my immutable state is of type `Immutable<TopLevelState>` then the return type of `Immutable<TopLevelState>.merge` should also be `Immutable<TopLevelState>` which is what I haven't been able to accomplish."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/349853941",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-349853941",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 349853941,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTg1Mzk0MQ==",
        "user": {
            "login": "chrisbull",
            "id": 753112,
            "node_id": "MDQ6VXNlcjc1MzExMg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/753112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisbull",
            "html_url": "https://github.com/chrisbull",
            "followers_url": "https://api.github.com/users/chrisbull/followers",
            "following_url": "https://api.github.com/users/chrisbull/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisbull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisbull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisbull/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisbull/orgs",
            "repos_url": "https://api.github.com/users/chrisbull/repos",
            "events_url": "https://api.github.com/users/chrisbull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisbull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-07T03:41:22Z",
        "updated_at": "2017-12-07T03:41:22Z",
        "author_association": "NONE",
        "body": "@azundo I should have mentioned this before. I'd also recommend making the Object in the `nested` it's own Type ... for example `type NestedObjType = { propA: string, propB: string }` and then include it in the `nested: NestedObjType` that way, nested always has to receive an object that is of type NestedObjType\r\n\r\n```\r\ntype NestedObjType = { \r\n  propA: string, \r\n  propB: string \r\n}\r\n\r\ntype ImmutableNestedObj = ImmutableStateType<NestedObjType>\r\n\r\ntype MyNestedState = {\r\n  otherProp?: string,\r\n  nested?: ImmutableNestedObj,\r\n}\r\n\r\nconst INITIAL_NESTED_OBJ: NestedObjType =  {\r\n    propA: 'A',\r\n    propB: 'B',\r\n  }\r\n\r\nconst initialNestedObj: ImmutableNestedObj = Immutable.Immutable(INITIAL_NESTED_OBJ)\r\n\r\nconst initState: MyNestedState = {\r\n  otherProp: 'bar',\r\n  nested: initialNestedObj,\r\n}\r\n\r\nexport const INITIAL_STATE: MyNestedImmutableState = Immutable.Immutable(initState)\r\n```\r\n\r\nAlso to note, I'm not a contributor to this project. I'm just a contract developer learning this all as I go as well, but just wanted to help if I could. \r\n\r\nI'd love to hear if anyone else a better way of doing this.\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/350495407",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/121#issuecomment-350495407",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/121",
        "id": 350495407,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQ5NTQwNw==",
        "user": {
            "login": "akread",
            "id": 6855046,
            "node_id": "MDQ6VXNlcjY4NTUwNDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6855046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akread",
            "html_url": "https://github.com/akread",
            "followers_url": "https://api.github.com/users/akread/followers",
            "following_url": "https://api.github.com/users/akread/following{/other_user}",
            "gists_url": "https://api.github.com/users/akread/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akread/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akread/subscriptions",
            "organizations_url": "https://api.github.com/users/akread/orgs",
            "repos_url": "https://api.github.com/users/akread/repos",
            "events_url": "https://api.github.com/users/akread/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akread/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-09T18:16:23Z",
        "updated_at": "2017-12-09T18:21:24Z",
        "author_association": "NONE",
        "body": "@chrisbull my point was that these type definitions don't work well for arrays \u2013\u00a0only objects. They also don't support adding prototype methods on initialization with seamless-immutable. I'm working on a more comprehensive library type definition based on the one that you found that includes support for arrays, prototype methods, as well as key/value validation.\r\n\r\nMaybe I'm missing something on the array side? It didn't really work as expected when I tried.\r\n\r\nI've included some basic testing in my app to validate the typing but I'd love to share it once it is done and get some outside input. Ideally we can get some form of library type definition into the source code here for everyone to use. I can post it here and make a PR for a more in-depth review when it is complete."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/350734933",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/229#issuecomment-350734933",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/229",
        "id": 350734933,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDczNDkzMw==",
        "user": {
            "login": "akread",
            "id": 6855046,
            "node_id": "MDQ6VXNlcjY4NTUwNDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6855046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akread",
            "html_url": "https://github.com/akread",
            "followers_url": "https://api.github.com/users/akread/followers",
            "following_url": "https://api.github.com/users/akread/following{/other_user}",
            "gists_url": "https://api.github.com/users/akread/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akread/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akread/subscriptions",
            "organizations_url": "https://api.github.com/users/akread/orgs",
            "repos_url": "https://api.github.com/users/akread/repos",
            "events_url": "https://api.github.com/users/akread/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akread/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-11T14:11:52Z",
        "updated_at": "2017-12-11T14:11:52Z",
        "author_association": "NONE",
        "body": "Maybe we can export it under the alias `functional` or `fp`? From what I've seen that is pretty standard in community packages that have a functional version of their code.\r\n\r\nFor backwards compatibility it could be exported under `static` as well."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/361951942",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/242#issuecomment-361951942",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/242",
        "id": 361951942,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTk1MTk0Mg==",
        "user": {
            "login": "qlqllu",
            "id": 1015808,
            "node_id": "MDQ6VXNlcjEwMTU4MDg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1015808?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qlqllu",
            "html_url": "https://github.com/qlqllu",
            "followers_url": "https://api.github.com/users/qlqllu/followers",
            "following_url": "https://api.github.com/users/qlqllu/following{/other_user}",
            "gists_url": "https://api.github.com/users/qlqllu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/qlqllu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/qlqllu/subscriptions",
            "organizations_url": "https://api.github.com/users/qlqllu/orgs",
            "repos_url": "https://api.github.com/users/qlqllu/repos",
            "events_url": "https://api.github.com/users/qlqllu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/qlqllu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-31T14:40:36Z",
        "updated_at": "2018-01-31T14:40:36Z",
        "author_association": "NONE",
        "body": "I have the same issue, when the PR can be merged?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/362041852",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/224#issuecomment-362041852",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/224",
        "id": 362041852,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjA0MTg1Mg==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-31T19:23:38Z",
        "updated_at": "2018-01-31T19:23:38Z",
        "author_association": "OWNER",
        "body": "Thanks @koddsson!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/362047023",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/242#issuecomment-362047023",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/242",
        "id": 362047023,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjA0NzAyMw==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-31T19:41:06Z",
        "updated_at": "2018-01-31T19:41:06Z",
        "author_association": "OWNER",
        "body": "Thanks @rickharris! Published as 7.1.3"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/362047050",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/237#issuecomment-362047050",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/237",
        "id": 362047050,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjA0NzA1MA==",
        "user": {
            "login": "rtfeldman",
            "id": 1094080,
            "node_id": "MDQ6VXNlcjEwOTQwODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1094080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtfeldman",
            "html_url": "https://github.com/rtfeldman",
            "followers_url": "https://api.github.com/users/rtfeldman/followers",
            "following_url": "https://api.github.com/users/rtfeldman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtfeldman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtfeldman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtfeldman/subscriptions",
            "organizations_url": "https://api.github.com/users/rtfeldman/orgs",
            "repos_url": "https://api.github.com/users/rtfeldman/repos",
            "events_url": "https://api.github.com/users/rtfeldman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtfeldman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-31T19:41:11Z",
        "updated_at": "2018-01-31T19:41:11Z",
        "author_association": "OWNER",
        "body": "Thanks @yoavniran! Published as 7.1.3"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/365537269",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/26#issuecomment-365537269",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/26",
        "id": 365537269,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTUzNzI2OQ==",
        "user": {
            "login": "FriOne",
            "id": 5888410,
            "node_id": "MDQ6VXNlcjU4ODg0MTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5888410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FriOne",
            "html_url": "https://github.com/FriOne",
            "followers_url": "https://api.github.com/users/FriOne/followers",
            "following_url": "https://api.github.com/users/FriOne/following{/other_user}",
            "gists_url": "https://api.github.com/users/FriOne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FriOne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FriOne/subscriptions",
            "organizations_url": "https://api.github.com/users/FriOne/orgs",
            "repos_url": "https://api.github.com/users/FriOne/repos",
            "events_url": "https://api.github.com/users/FriOne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FriOne/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-14T08:56:22Z",
        "updated_at": "2018-02-14T08:56:22Z",
        "author_association": "NONE",
        "body": "@rtfeldman could you move it to README?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/366498247",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/182#issuecomment-366498247",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/182",
        "id": 366498247,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQ5ODI0Nw==",
        "user": {
            "login": "machineghost",
            "id": 448908,
            "node_id": "MDQ6VXNlcjQ0ODkwOA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/448908?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/machineghost",
            "html_url": "https://github.com/machineghost",
            "followers_url": "https://api.github.com/users/machineghost/followers",
            "following_url": "https://api.github.com/users/machineghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/machineghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/machineghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/machineghost/subscriptions",
            "organizations_url": "https://api.github.com/users/machineghost/orgs",
            "repos_url": "https://api.github.com/users/machineghost/repos",
            "events_url": "https://api.github.com/users/machineghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/machineghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-18T07:40:47Z",
        "updated_at": "2018-02-18T07:40:47Z",
        "author_association": "NONE",
        "body": "Any progress on this (more than half a year later)?  "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/367479709",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/243#issuecomment-367479709",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/243",
        "id": 367479709,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzQ3OTcwOQ==",
        "user": {
            "login": "winstonwolff",
            "id": 281580,
            "node_id": "MDQ6VXNlcjI4MTU4MA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/281580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/winstonwolff",
            "html_url": "https://github.com/winstonwolff",
            "followers_url": "https://api.github.com/users/winstonwolff/followers",
            "following_url": "https://api.github.com/users/winstonwolff/following{/other_user}",
            "gists_url": "https://api.github.com/users/winstonwolff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/winstonwolff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/winstonwolff/subscriptions",
            "organizations_url": "https://api.github.com/users/winstonwolff/orgs",
            "repos_url": "https://api.github.com/users/winstonwolff/repos",
            "events_url": "https://api.github.com/users/winstonwolff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/winstonwolff/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-21T21:31:58Z",
        "updated_at": "2018-02-21T21:31:58Z",
        "author_association": "NONE",
        "body": "Does the failure look like this?  I see this on MacOS / node.v8.9.1\r\n\r\n```\r\n>> ReferenceError: File is not defined\r\n>>     at module.exports (/Users/winstonw/clients/nitidbit/git/seamless-immutable/test/TestUtils.js:145:30)\r\n>>     at /Users/winstonw/clients/nitidbit/git/seamless-immutable/test/Immutable.isImmutable.spec.js:13:19\r\n>>     at Array.forEach (<anonymous>)\r\n>>     at Object.<anonymous> (/Users/winstonw/clients/nitidbit/git/seamless-immutable/test/Immutable.isImmutable.spec.js:11:3)\r\n>>     at Module._compile (module.js:635:30)\r\n>>     at Object.Module._extensions..js (module.js:646:10)\r\n>>     at Module.load (module.js:554:32)\r\n>>     at tryModuleLoad (module.js:497:12)\r\n>>     at Function.Module._load (module.js:489:3)\r\n>>     at Module.require (module.js:579:17)\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/369718721",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/235#issuecomment-369718721",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/235",
        "id": 369718721,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTcxODcyMQ==",
        "user": {
            "login": "lottamus",
            "id": 7423098,
            "node_id": "MDQ6VXNlcjc0MjMwOTg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7423098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lottamus",
            "html_url": "https://github.com/lottamus",
            "followers_url": "https://api.github.com/users/lottamus/followers",
            "following_url": "https://api.github.com/users/lottamus/following{/other_user}",
            "gists_url": "https://api.github.com/users/lottamus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lottamus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lottamus/subscriptions",
            "organizations_url": "https://api.github.com/users/lottamus/orgs",
            "repos_url": "https://api.github.com/users/lottamus/repos",
            "events_url": "https://api.github.com/users/lottamus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lottamus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-01T20:21:43Z",
        "updated_at": "2018-03-01T20:21:43Z",
        "author_association": "NONE",
        "body": "Any updates on this?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/375594219",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/244#issuecomment-375594219",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/244",
        "id": 375594219,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTU5NDIxOQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-23T09:34:35Z",
        "updated_at": "2018-03-23T09:34:35Z",
        "author_association": "COLLABORATOR",
        "body": "Seems like a problem in the `addToResult` function in the `merge` function: https://github.com/rtfeldman/seamless-immutable/blob/281c344ad4694d4190fbe27d954d5a69887335bf/src/seamless-immutable.js#L405\r\n\r\nSo if the result from the merger is not truthy it will go to the else and use the value from `o`. It should do an explicit check for undefined instead. But I guess a fix for that would require a new major version since it can break stuff."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/375596596",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/215#issuecomment-375596596",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/215",
        "id": 375596596,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTU5NjU5Ng==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-23T09:43:09Z",
        "updated_at": "2018-03-23T09:43:09Z",
        "author_association": "COLLABORATOR",
        "body": "@itaysabato it is a design decision (at least to my knowledge). You can use a custom merger to control how to handle arrays. Some examples here: https://github.com/crudh/seamless-immutable-mergers"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/375659200",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/244#issuecomment-375659200",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/244",
        "id": 375659200,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY1OTIwMA==",
        "user": {
            "login": "donnanicolas",
            "id": 1228656,
            "node_id": "MDQ6VXNlcjEyMjg2NTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1228656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/donnanicolas",
            "html_url": "https://github.com/donnanicolas",
            "followers_url": "https://api.github.com/users/donnanicolas/followers",
            "following_url": "https://api.github.com/users/donnanicolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/donnanicolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/donnanicolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/donnanicolas/subscriptions",
            "organizations_url": "https://api.github.com/users/donnanicolas/orgs",
            "repos_url": "https://api.github.com/users/donnanicolas/repos",
            "events_url": "https://api.github.com/users/donnanicolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/donnanicolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-23T13:07:37Z",
        "updated_at": "2018-03-23T13:07:37Z",
        "author_association": "NONE",
        "body": "@crudh Ok, but it seem like a major issue, since anyone using null values can have issues like this and its rather hard to track"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/375953637",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/246#issuecomment-375953637",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/246",
        "id": 375953637,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTk1MzYzNw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-25T08:22:21Z",
        "updated_at": "2018-03-25T08:22:21Z",
        "author_association": "COLLABORATOR",
        "body": "Now everything seems to build except for the browser tests, and they have been broken for some time."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/375968521",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/246#issuecomment-375968521",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/246",
        "id": 375968521,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTk2ODUyMQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-25T12:55:50Z",
        "updated_at": "2018-03-25T12:55:50Z",
        "author_association": "COLLABORATOR",
        "body": "I'm closing this. I don't have time to debug the saucelabs/zuul tests. Most of the commits improves the situation at least, so feel free to cherry pick or copy for another PR.\r\n\r\nThe android version was capped at 6.0 since the default emulator doesn't work on 7 and above, but I didn't find a way to specify the emulator in `zuul.yml`. And the Safari minimum version was bumped since it seems Saucelabs doesn't support it anymore."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/376088277",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/244#issuecomment-376088277",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/244",
        "id": 376088277,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjA4ODI3Nw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-26T08:35:42Z",
        "updated_at": "2018-03-26T08:35:42Z",
        "author_association": "COLLABORATOR",
        "body": "@donnanicolas yeah, I agree. PR #248 should fix it."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/376089063",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/243#issuecomment-376089063",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/243",
        "id": 376089063,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjA4OTA2Mw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-26T08:38:44Z",
        "updated_at": "2018-03-26T08:38:44Z",
        "author_association": "COLLABORATOR",
        "body": "PR #247 should fix the File/Blob problems (since they aren't available in Node). But it doesn't fix the zuul/Saucelabs tests regarding IE and other things. Some more info here: #246 "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/376150453",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/243#issuecomment-376150453",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/243",
        "id": 376150453,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjE1MDQ1Mw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-26T12:35:49Z",
        "updated_at": "2018-03-26T12:35:49Z",
        "author_association": "COLLABORATOR",
        "body": "The tests for IE might be failing since the tests uses `Promise` which isn't available in IE. But the actual runtime code has no dependencies on `Promise`, so it should work in IE."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/376150633",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/245#issuecomment-376150633",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/245",
        "id": 376150633,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjE1MDYzMw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-26T12:36:29Z",
        "updated_at": "2018-03-26T12:36:29Z",
        "author_association": "COLLABORATOR",
        "body": "The tests for IE might be failing since the tests uses `Promise` which isn't available in IE. But the actual runtime code has no dependencies on `Promise`, so it should work in IE."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/376173667",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/244#issuecomment-376173667",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/244",
        "id": 376173667,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjE3MzY2Nw==",
        "user": {
            "login": "donnanicolas",
            "id": 1228656,
            "node_id": "MDQ6VXNlcjEyMjg2NTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1228656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/donnanicolas",
            "html_url": "https://github.com/donnanicolas",
            "followers_url": "https://api.github.com/users/donnanicolas/followers",
            "following_url": "https://api.github.com/users/donnanicolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/donnanicolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/donnanicolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/donnanicolas/subscriptions",
            "organizations_url": "https://api.github.com/users/donnanicolas/orgs",
            "repos_url": "https://api.github.com/users/donnanicolas/repos",
            "events_url": "https://api.github.com/users/donnanicolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/donnanicolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-26T13:53:34Z",
        "updated_at": "2018-03-26T13:53:34Z",
        "author_association": "NONE",
        "body": "@crudh Thanks!! will update as soon as the PR is merged!! (I \"reviewed\" it and it seems great, but I don't know much about the code)"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/382324649",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/249#issuecomment-382324649",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/249",
        "id": 382324649,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjMyNDY0OQ==",
        "user": {
            "login": "myshov",
            "id": 2382567,
            "node_id": "MDQ6VXNlcjIzODI1Njc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2382567?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/myshov",
            "html_url": "https://github.com/myshov",
            "followers_url": "https://api.github.com/users/myshov/followers",
            "following_url": "https://api.github.com/users/myshov/following{/other_user}",
            "gists_url": "https://api.github.com/users/myshov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/myshov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/myshov/subscriptions",
            "organizations_url": "https://api.github.com/users/myshov/orgs",
            "repos_url": "https://api.github.com/users/myshov/repos",
            "events_url": "https://api.github.com/users/myshov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/myshov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-18T09:28:07Z",
        "updated_at": "2018-04-18T10:29:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "Now all checks have been passed. But there is some problem with zuul and saucelab.com. I think that some time ago there was some sort of free plan on saucelabs.com, but now there is no anything like that. There is only free trial for 14 days.\r\n\r\n@rtfeldman I have deleted checks for different browsers because they prevented green build on travis-ci. Should we find other alternatives to saucelabs.com or can we merge this pr in the current shape?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/382762183",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/247#issuecomment-382762183",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/247",
        "id": 382762183,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjc2MjE4Mw==",
        "user": {
            "login": "myshov",
            "id": 2382567,
            "node_id": "MDQ6VXNlcjIzODI1Njc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2382567?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/myshov",
            "html_url": "https://github.com/myshov",
            "followers_url": "https://api.github.com/users/myshov/followers",
            "following_url": "https://api.github.com/users/myshov/following{/other_user}",
            "gists_url": "https://api.github.com/users/myshov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/myshov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/myshov/subscriptions",
            "organizations_url": "https://api.github.com/users/myshov/orgs",
            "repos_url": "https://api.github.com/users/myshov/repos",
            "events_url": "https://api.github.com/users/myshov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/myshov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-19T14:41:04Z",
        "updated_at": "2018-04-19T14:41:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hi! I've fixed issue with tests here https://github.com/rtfeldman/seamless-immutable/pull/249"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/382787741",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/247#issuecomment-382787741",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/247",
        "id": 382787741,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjc4Nzc0MQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-19T15:54:13Z",
        "updated_at": "2018-04-19T15:54:53Z",
        "author_association": "COLLABORATOR",
        "body": "@myshov  nice! I'll close this."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/387903328",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-387903328",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 387903328,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzkwMzMyOA==",
        "user": {
            "login": "lifehackett",
            "id": 1809761,
            "node_id": "MDQ6VXNlcjE4MDk3NjE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1809761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lifehackett",
            "html_url": "https://github.com/lifehackett",
            "followers_url": "https://api.github.com/users/lifehackett/followers",
            "following_url": "https://api.github.com/users/lifehackett/following{/other_user}",
            "gists_url": "https://api.github.com/users/lifehackett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lifehackett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lifehackett/subscriptions",
            "organizations_url": "https://api.github.com/users/lifehackett/orgs",
            "repos_url": "https://api.github.com/users/lifehackett/repos",
            "events_url": "https://api.github.com/users/lifehackett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lifehackett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-09T23:18:23Z",
        "updated_at": "2018-05-09T23:18:23Z",
        "author_association": "NONE",
        "body": "@toranb @Connormiha where did y'all end up with the static typings?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/387911920",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-387911920",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 387911920,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzkxMTkyMA==",
        "user": {
            "login": "toranb",
            "id": 147411,
            "node_id": "MDQ6VXNlcjE0NzQxMQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/147411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toranb",
            "html_url": "https://github.com/toranb",
            "followers_url": "https://api.github.com/users/toranb/followers",
            "following_url": "https://api.github.com/users/toranb/following{/other_user}",
            "gists_url": "https://api.github.com/users/toranb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toranb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toranb/subscriptions",
            "organizations_url": "https://api.github.com/users/toranb/orgs",
            "repos_url": "https://api.github.com/users/toranb/repos",
            "events_url": "https://api.github.com/users/toranb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toranb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-10T00:09:46Z",
        "updated_at": "2018-05-10T00:13:19Z",
        "author_association": "NONE",
        "body": "@lifehackett I've got a privately maintained typedef for this lib that works w/ typescript 2.7\r\n\r\nhttps://github.com/toranb/seamless-immutable-tsdefs/commits/master\r\n\r\nnote: I'm not actively using much typescript these days but I did manage to throw together a simple reducer using these^ typedefs and seamless immutable a while back\r\n\r\nhttps://github.com/toranb/ember-redux-yelp/blob/branches/seamlessAndTypeScript/app/reducers/users.ts"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/387918710",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-387918710",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 387918710,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzkxODcxMA==",
        "user": {
            "login": "lifehackett",
            "id": 1809761,
            "node_id": "MDQ6VXNlcjE4MDk3NjE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1809761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lifehackett",
            "html_url": "https://github.com/lifehackett",
            "followers_url": "https://api.github.com/users/lifehackett/followers",
            "following_url": "https://api.github.com/users/lifehackett/following{/other_user}",
            "gists_url": "https://api.github.com/users/lifehackett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lifehackett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lifehackett/subscriptions",
            "organizations_url": "https://api.github.com/users/lifehackett/orgs",
            "repos_url": "https://api.github.com/users/lifehackett/repos",
            "events_url": "https://api.github.com/users/lifehackett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lifehackett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-10T00:59:06Z",
        "updated_at": "2018-05-10T00:59:06Z",
        "author_association": "NONE",
        "body": "Thanks for the response @toranb . I don't see a fix for the static typings in your typedef repo though. The typedefs in this lib and your repo work fine for something like `state.set('foo', 'bar')`, but fall apart when you use the static syntax (which is recommended by the seamless-immutable authors) like `Immutable.set(state, 'foo', 'bar')`.\r\n\r\nI am able to extend it locally like this\r\n```typescript\r\ndeclare module 'seamless-immutable' {\r\n  export function set<K extends keyof T>(obj: ImmutableObject<T>, property: K, value: T[K]): ImmutableObject<T>;\r\n  export function set<TValue>(obj: ImmutableObject<T>, property: string, value: TValue): ImmutableObject<T>;\r\n}\r\n```\r\nNot sure if that is exactly the correct signature as this is my first foray into TS, but it does remove the TS errors. I'll look to contribute these back to the repo when I have some time to flush them all out, but thought I'd check that it hadn't already been done first. Thanks again"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/387925131",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-387925131",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 387925131,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzkyNTEzMQ==",
        "user": {
            "login": "toranb",
            "id": 147411,
            "node_id": "MDQ6VXNlcjE0NzQxMQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/147411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toranb",
            "html_url": "https://github.com/toranb",
            "followers_url": "https://api.github.com/users/toranb/followers",
            "following_url": "https://api.github.com/users/toranb/following{/other_user}",
            "gists_url": "https://api.github.com/users/toranb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toranb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toranb/subscriptions",
            "organizations_url": "https://api.github.com/users/toranb/orgs",
            "repos_url": "https://api.github.com/users/toranb/repos",
            "events_url": "https://api.github.com/users/toranb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toranb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-10T01:43:38Z",
        "updated_at": "2018-05-10T01:43:38Z",
        "author_association": "NONE",
        "body": "@lifehackett fair point! I've also not tried this yet w/ typescript v2.8+\r\n\r\nI'm happy to add you as a contributor to that one off typedefs repo if you get deep into it ;)"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/389723928",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/239#issuecomment-389723928",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/239",
        "id": 389723928,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTcyMzkyOA==",
        "user": {
            "login": "SunXinFei",
            "id": 5847281,
            "node_id": "MDQ6VXNlcjU4NDcyODE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5847281?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SunXinFei",
            "html_url": "https://github.com/SunXinFei",
            "followers_url": "https://api.github.com/users/SunXinFei/followers",
            "following_url": "https://api.github.com/users/SunXinFei/following{/other_user}",
            "gists_url": "https://api.github.com/users/SunXinFei/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SunXinFei/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SunXinFei/subscriptions",
            "organizations_url": "https://api.github.com/users/SunXinFei/orgs",
            "repos_url": "https://api.github.com/users/SunXinFei/repos",
            "events_url": "https://api.github.com/users/SunXinFei/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SunXinFei/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-17T02:23:05Z",
        "updated_at": "2018-05-17T06:10:06Z",
        "author_association": "NONE",
        "body": "@Aaronius @markhicken \r\nbut like this data:\r\n`\r\nconst fruits = Immutable([{a:['aaa','bbb','ccc']}, 'banana', 'cherry']);\r\n`\r\nhow can i remove 'bbb'.\r\nquestion 2:\r\nthe without fn will not change the index and the array will lost the array fn , so after call without fn ,the array can not call .map ,.flatMap, _.forEach..... ,only can call for(let i in array), just like this : \r\n![image](https://user-images.githubusercontent.com/5847281/40154818-f3f1cf1c-59c2-11e8-9f95-dc334bbb35b5.png)\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/391686332",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/108#issuecomment-391686332",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/108",
        "id": 391686332,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTY4NjMzMg==",
        "user": {
            "login": "Fire7",
            "id": 3992812,
            "node_id": "MDQ6VXNlcjM5OTI4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3992812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Fire7",
            "html_url": "https://github.com/Fire7",
            "followers_url": "https://api.github.com/users/Fire7/followers",
            "following_url": "https://api.github.com/users/Fire7/following{/other_user}",
            "gists_url": "https://api.github.com/users/Fire7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Fire7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Fire7/subscriptions",
            "organizations_url": "https://api.github.com/users/Fire7/orgs",
            "repos_url": "https://api.github.com/users/Fire7/repos",
            "events_url": "https://api.github.com/users/Fire7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Fire7/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-24T11:51:43Z",
        "updated_at": "2018-05-24T11:51:43Z",
        "author_association": "NONE",
        "body": "Why do `getIn` return type `Immutable<T>` , not `ImmutableObject<T>` ?\r\n\r\n```js\r\ninterface IInterface {\r\n  str: string;\r\n}\r\n\r\ntype TImmutableType = ImmutableObject<IInterface>;\r\n\r\nconst immutableObject: TImmutableType = Immutable({\r\n  str: 'simple string' \r\n});\r\n\r\nconst getString = (): string => immutableObject.getIn(['str']).asMutable();\r\n                      ^^^^^^^\r\nTS2322:\u00a0Type\u00a0'string\u00a0|\u00a0string[]'\u00a0is\u00a0not\u00a0assignable\u00a0to\u00a0type\u00a0'string'. \r\n\u00a0\u00a0Type\u00a0'string[]'\u00a0is\u00a0not\u00a0assignable\u00a0to\u00a0type\u00a0'string'\r\n``` \r\n\r\nIs it a bag? Do we need to duplicate typings of `getIn` in ImmutableArray ? Or how I can fix it?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/399533704",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/102#issuecomment-399533704",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/102",
        "id": 399533704,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTUzMzcwNA==",
        "user": {
            "login": "biirus",
            "id": 1442293,
            "node_id": "MDQ6VXNlcjE0NDIyOTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1442293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/biirus",
            "html_url": "https://github.com/biirus",
            "followers_url": "https://api.github.com/users/biirus/followers",
            "following_url": "https://api.github.com/users/biirus/following{/other_user}",
            "gists_url": "https://api.github.com/users/biirus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/biirus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/biirus/subscriptions",
            "organizations_url": "https://api.github.com/users/biirus/orgs",
            "repos_url": "https://api.github.com/users/biirus/repos",
            "events_url": "https://api.github.com/users/biirus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/biirus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T18:18:22Z",
        "updated_at": "2018-06-22T18:42:32Z",
        "author_association": "NONE",
        "body": "It seems to be trivial operation. \r\nFor example, we have state shape: \r\n\r\n```js\r\nconst initialState = Immutable({\r\n  someBusinessData: {},\r\n  ui: {\r\n    filters: {\r\n      name: \"\",\r\n      department: \"\",\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nAnd here is the reducer:\r\n```js\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"ui/change-filter\": {\r\n        return state.updateIn([\"ui\", \"filter\"], filter => filter.merge(action.payload));\r\n      }\r\n      default: \r\n        return state;\r\n    }\r\n}\r\n```\r\n\r\n`mergeIn` is just combination of `updateIn` and `merge`. So may be we should implement a shortcut method?\r\n\r\nYou can update a deeply nested parts of your state by `mergeIn` operation. It can apply patches to existing models (especially when you have normalised store and getting access by some `ID` prop), revert some optimistically updated values.\r\n\r\nI think we should implement `mergeIn` method in `seamless-immutable`..."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/401127308",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/254#issuecomment-401127308",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/254",
        "id": 401127308,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTEyNzMwOA==",
        "user": {
            "login": "Mosho1",
            "id": 5153007,
            "node_id": "MDQ6VXNlcjUxNTMwMDc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5153007?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mosho1",
            "html_url": "https://github.com/Mosho1",
            "followers_url": "https://api.github.com/users/Mosho1/followers",
            "following_url": "https://api.github.com/users/Mosho1/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mosho1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mosho1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mosho1/subscriptions",
            "organizations_url": "https://api.github.com/users/Mosho1/orgs",
            "repos_url": "https://api.github.com/users/Mosho1/repos",
            "events_url": "https://api.github.com/users/Mosho1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mosho1/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-28T18:19:45Z",
        "updated_at": "2018-06-28T18:19:45Z",
        "author_association": "NONE",
        "body": "Looks like this is a ChakraCore issue that has been fixed and will be released in edge in the future.\r\n\r\nhttps://github.com/Microsoft/ChakraCore/issues/5382"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/403044428",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/211#issuecomment-403044428",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/211",
        "id": 403044428,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzA0NDQyOA==",
        "user": {
            "login": "seanf",
            "id": 54155,
            "node_id": "MDQ6VXNlcjU0MTU1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/54155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanf",
            "html_url": "https://github.com/seanf",
            "followers_url": "https://api.github.com/users/seanf/followers",
            "following_url": "https://api.github.com/users/seanf/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanf/subscriptions",
            "organizations_url": "https://api.github.com/users/seanf/orgs",
            "repos_url": "https://api.github.com/users/seanf/repos",
            "events_url": "https://api.github.com/users/seanf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanf/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T14:05:38Z",
        "updated_at": "2018-07-06T14:05:38Z",
        "author_association": "NONE",
        "body": "Build log mentions zuul. Probably related to saucelabs: https://github.com/rtfeldman/seamless-immutable/pull/249#issuecomment-382324649"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/403044666",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/249#issuecomment-403044666",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/249",
        "id": 403044666,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzA0NDY2Ng==",
        "user": {
            "login": "seanf",
            "id": 54155,
            "node_id": "MDQ6VXNlcjU0MTU1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/54155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanf",
            "html_url": "https://github.com/seanf",
            "followers_url": "https://api.github.com/users/seanf/followers",
            "following_url": "https://api.github.com/users/seanf/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanf/subscriptions",
            "organizations_url": "https://api.github.com/users/seanf/orgs",
            "repos_url": "https://api.github.com/users/seanf/repos",
            "events_url": "https://api.github.com/users/seanf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanf/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T14:06:32Z",
        "updated_at": "2018-07-06T14:07:41Z",
        "author_association": "NONE",
        "body": "There's still supposed to be some sort of free plan on saucelabs.com for open source projects (especially libraries): https://saucelabs.com/open-source/open-sauce https://saucelabs.com/open-source"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/403092198",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/249#issuecomment-403092198",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/249",
        "id": 403092198,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzA5MjE5OA==",
        "user": {
            "login": "myshov",
            "id": 2382567,
            "node_id": "MDQ6VXNlcjIzODI1Njc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2382567?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/myshov",
            "html_url": "https://github.com/myshov",
            "followers_url": "https://api.github.com/users/myshov/followers",
            "following_url": "https://api.github.com/users/myshov/following{/other_user}",
            "gists_url": "https://api.github.com/users/myshov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/myshov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/myshov/subscriptions",
            "organizations_url": "https://api.github.com/users/myshov/orgs",
            "repos_url": "https://api.github.com/users/myshov/repos",
            "events_url": "https://api.github.com/users/myshov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/myshov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T17:03:50Z",
        "updated_at": "2018-07-06T17:13:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "@seanf I still hope that someone of the maintainers will come here and sort it out."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/406151725",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/218#issuecomment-406151725",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/218",
        "id": 406151725,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjE1MTcyNQ==",
        "user": {
            "login": "rkkautsar",
            "id": 1536976,
            "node_id": "MDQ6VXNlcjE1MzY5NzY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1536976?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rkkautsar",
            "html_url": "https://github.com/rkkautsar",
            "followers_url": "https://api.github.com/users/rkkautsar/followers",
            "following_url": "https://api.github.com/users/rkkautsar/following{/other_user}",
            "gists_url": "https://api.github.com/users/rkkautsar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rkkautsar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rkkautsar/subscriptions",
            "organizations_url": "https://api.github.com/users/rkkautsar/orgs",
            "repos_url": "https://api.github.com/users/rkkautsar/repos",
            "events_url": "https://api.github.com/users/rkkautsar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rkkautsar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-19T04:33:50Z",
        "updated_at": "2018-07-19T13:57:13Z",
        "author_association": "NONE",
        "body": "\ud83c\udd99 \r\n\r\nEDIT:\r\nSolved by serializing and deserializing (with `format` and `parse`)"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/412474907",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/51#issuecomment-412474907",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/51",
        "id": 412474907,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjQ3NDkwNw==",
        "user": {
            "login": "maartenvandillen",
            "id": 6582935,
            "node_id": "MDQ6VXNlcjY1ODI5MzU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6582935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maartenvandillen",
            "html_url": "https://github.com/maartenvandillen",
            "followers_url": "https://api.github.com/users/maartenvandillen/followers",
            "following_url": "https://api.github.com/users/maartenvandillen/following{/other_user}",
            "gists_url": "https://api.github.com/users/maartenvandillen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maartenvandillen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maartenvandillen/subscriptions",
            "organizations_url": "https://api.github.com/users/maartenvandillen/orgs",
            "repos_url": "https://api.github.com/users/maartenvandillen/repos",
            "events_url": "https://api.github.com/users/maartenvandillen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maartenvandillen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-13T10:28:13Z",
        "updated_at": "2018-08-13T10:28:13Z",
        "author_association": "NONE",
        "body": "I have a question about the use of the prototype param of Immutable. Is there any way I can use this when calling merge? I am trying to merge an object with prototype into my redux store but it loses the prototype after merging."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/413890851",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/248#issuecomment-413890851",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/248",
        "id": 413890851,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg5MDg1MQ==",
        "user": {
            "login": "donnanicolas",
            "id": 1228656,
            "node_id": "MDQ6VXNlcjEyMjg2NTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1228656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/donnanicolas",
            "html_url": "https://github.com/donnanicolas",
            "followers_url": "https://api.github.com/users/donnanicolas/followers",
            "following_url": "https://api.github.com/users/donnanicolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/donnanicolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/donnanicolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/donnanicolas/subscriptions",
            "organizations_url": "https://api.github.com/users/donnanicolas/orgs",
            "repos_url": "https://api.github.com/users/donnanicolas/repos",
            "events_url": "https://api.github.com/users/donnanicolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/donnanicolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-17T14:51:32Z",
        "updated_at": "2018-08-17T14:51:32Z",
        "author_association": "NONE",
        "body": "@crudh any news regarding this??"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/414082539",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/248#issuecomment-414082539",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/248",
        "id": 414082539,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA4MjUzOQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-18T19:54:01Z",
        "updated_at": "2018-08-18T19:54:01Z",
        "author_association": "COLLABORATOR",
        "body": "@donnanicolas sorry, I don't think this is a high priority project for @rtfeldman anymore after his switch to Elm. I don't have any access to commit changes and I no longer use the library. I just jumped in since I contributed the custom mergers, so it seemed like my mess to clean up \ud83d\ude04 "
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/415405722",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/249#issuecomment-415405722",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/249",
        "id": 415405722,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQwNTcyMg==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-23T13:01:13Z",
        "updated_at": "2018-08-23T13:01:13Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks @myshov and @seanf, I will send a request to saucelabs and see if we qualify. If the response is negative I'll merge this until an alternative is set up."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/415733851",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/249#issuecomment-415733851",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/249",
        "id": 415733851,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTczMzg1MQ==",
        "user": {
            "login": "myshov",
            "id": 2382567,
            "node_id": "MDQ6VXNlcjIzODI1Njc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2382567?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/myshov",
            "html_url": "https://github.com/myshov",
            "followers_url": "https://api.github.com/users/myshov/followers",
            "following_url": "https://api.github.com/users/myshov/following{/other_user}",
            "gists_url": "https://api.github.com/users/myshov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/myshov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/myshov/subscriptions",
            "organizations_url": "https://api.github.com/users/myshov/orgs",
            "repos_url": "https://api.github.com/users/myshov/repos",
            "events_url": "https://api.github.com/users/myshov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/myshov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T11:38:21Z",
        "updated_at": "2018-08-24T11:38:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "fixed"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/416122499",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/249#issuecomment-416122499",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/249",
        "id": 416122499,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjEyMjQ5OQ==",
        "user": {
            "login": "myshov",
            "id": 2382567,
            "node_id": "MDQ6VXNlcjIzODI1Njc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2382567?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/myshov",
            "html_url": "https://github.com/myshov",
            "followers_url": "https://api.github.com/users/myshov/followers",
            "following_url": "https://api.github.com/users/myshov/following{/other_user}",
            "gists_url": "https://api.github.com/users/myshov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/myshov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/myshov/subscriptions",
            "organizations_url": "https://api.github.com/users/myshov/orgs",
            "repos_url": "https://api.github.com/users/myshov/repos",
            "events_url": "https://api.github.com/users/myshov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/myshov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-27T05:58:20Z",
        "updated_at": "2018-08-27T05:58:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "@crudh ping"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/416187079",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/249#issuecomment-416187079",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/249",
        "id": 416187079,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjE4NzA3OQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-27T10:42:21Z",
        "updated_at": "2018-08-27T10:42:21Z",
        "author_association": "COLLABORATOR",
        "body": "@myshov great! I just want to sync with the repo owner before I start merging stuff, I just got the collaborator invite last week."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/416373651",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/218#issuecomment-416373651",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/218",
        "id": 416373651,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjM3MzY1MQ==",
        "user": {
            "login": "andykais",
            "id": 6627147,
            "node_id": "MDQ6VXNlcjY2MjcxNDc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6627147?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andykais",
            "html_url": "https://github.com/andykais",
            "followers_url": "https://api.github.com/users/andykais/followers",
            "following_url": "https://api.github.com/users/andykais/following{/other_user}",
            "gists_url": "https://api.github.com/users/andykais/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andykais/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andykais/subscriptions",
            "organizations_url": "https://api.github.com/users/andykais/orgs",
            "repos_url": "https://api.github.com/users/andykais/repos",
            "events_url": "https://api.github.com/users/andykais/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andykais/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-27T21:23:54Z",
        "updated_at": "2018-08-27T21:23:54Z",
        "author_association": "NONE",
        "body": "as an alternative to momentjs, there is [luxon](https://moment.github.io/luxon/), which is an immutable, date time library that is somewhat of a subset of momentjs. It is still part of the momentjs family of libraries however"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/416508043",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/249#issuecomment-416508043",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/249",
        "id": 416508043,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjUwODA0Mw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-28T09:04:58Z",
        "updated_at": "2018-08-28T09:04:58Z",
        "author_association": "COLLABORATOR",
        "body": "@myshov thanks, I'll merge it now. Lets keep the zuul dependency and scripts for now until we either fix it or remove it later."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/416530042",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/252#issuecomment-416530042",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/252",
        "id": 416530042,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjUzMDA0Mg==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-28T10:16:39Z",
        "updated_at": "2018-08-28T10:16:39Z",
        "author_association": "COLLABORATOR",
        "body": "@austinried Can't you use `merge` with `mode: replace` instead? Since `replace` is only a wrapper for `merge`?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/416530333",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/250#issuecomment-416530333",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/250",
        "id": 416530333,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjUzMDMzMw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-28T10:17:47Z",
        "updated_at": "2018-08-28T10:17:47Z",
        "author_association": "COLLABORATOR",
        "body": "@OriR thanks!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/416744521",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/245#issuecomment-416744521",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/245",
        "id": 416744521,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc0NDUyMQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-28T21:20:04Z",
        "updated_at": "2018-08-28T21:20:04Z",
        "author_association": "COLLABORATOR",
        "body": "The tests have been fixed but we had to drop the browser tests because of changes at saucelabs. I hope they (or similar) can be brought back soon. But as far as I know the latest ones did show that everything was working in IE9+ as the README states."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/416745323",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/248#issuecomment-416745323",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/248",
        "id": 416745323,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc0NTMyMw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-28T21:22:49Z",
        "updated_at": "2018-08-28T21:22:49Z",
        "author_association": "COLLABORATOR",
        "body": "@donnanicolas I was given collaborator access so I'll merge this now. It will be in the next release."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/416746479",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/243#issuecomment-416746479",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/243",
        "id": 416746479,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc0NjQ3OQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-28T21:26:59Z",
        "updated_at": "2018-08-28T21:26:59Z",
        "author_association": "COLLABORATOR",
        "body": "The tests have been fixed but we had to drop the browser tests because of changes at saucelabs. I hope they (or similar) can be brought back soon. But as far as I know the latest ones did show that everything was working in IE9+ as the README states."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/416754275",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/187#issuecomment-416754275",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/187",
        "id": 416754275,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc1NDI3NQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-28T21:57:15Z",
        "updated_at": "2018-08-28T21:57:15Z",
        "author_association": "COLLABORATOR",
        "body": "This was fixed in #205, closing."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417267249",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/258#issuecomment-417267249",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/258",
        "id": 417267249,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzI2NzI0OQ==",
        "user": {
            "login": "coveralls",
            "id": 2354108,
            "node_id": "MDQ6VXNlcjIzNTQxMDg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2354108?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coveralls",
            "html_url": "https://github.com/coveralls",
            "followers_url": "https://api.github.com/users/coveralls/followers",
            "following_url": "https://api.github.com/users/coveralls/following{/other_user}",
            "gists_url": "https://api.github.com/users/coveralls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coveralls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coveralls/subscriptions",
            "organizations_url": "https://api.github.com/users/coveralls/orgs",
            "repos_url": "https://api.github.com/users/coveralls/repos",
            "events_url": "https://api.github.com/users/coveralls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coveralls/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-30T10:12:07Z",
        "updated_at": "2018-08-30T10:12:07Z",
        "author_association": "NONE",
        "body": "\n[![Coverage Status](https://coveralls.io/builds/18748779/badge)](https://coveralls.io/builds/18748779)\n\nCoverage remained the same at 96.111% when pulling **a193ff57f23e1fc8c7b0e5874f07e427c4c1e706 on crudh:custom-mergers-documentation** into **a6e1b5e6461a2db6a323b2ceb76d931d17961d59 on rtfeldman:master**.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417507069",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/245#issuecomment-417507069",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/245",
        "id": 417507069,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzUwNzA2OQ==",
        "user": {
            "login": "ryansukale",
            "id": 755090,
            "node_id": "MDQ6VXNlcjc1NTA5MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/755090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryansukale",
            "html_url": "https://github.com/ryansukale",
            "followers_url": "https://api.github.com/users/ryansukale/followers",
            "following_url": "https://api.github.com/users/ryansukale/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryansukale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryansukale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryansukale/subscriptions",
            "organizations_url": "https://api.github.com/users/ryansukale/orgs",
            "repos_url": "https://api.github.com/users/ryansukale/repos",
            "events_url": "https://api.github.com/users/ryansukale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryansukale/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-31T00:07:30Z",
        "updated_at": "2018-08-31T00:07:30Z",
        "author_association": "NONE",
        "body": "Thanks for the update!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417576203",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/244#issuecomment-417576203",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/244",
        "id": 417576203,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzU3NjIwMw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-31T07:21:22Z",
        "updated_at": "2018-08-31T07:21:22Z",
        "author_association": "COLLABORATOR",
        "body": "This is fixed now, a release will be done soon."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417900464",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/259#issuecomment-417900464",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/259",
        "id": 417900464,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzkwMDQ2NA==",
        "user": {
            "login": "coveralls",
            "id": 2354108,
            "node_id": "MDQ6VXNlcjIzNTQxMDg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2354108?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coveralls",
            "html_url": "https://github.com/coveralls",
            "followers_url": "https://api.github.com/users/coveralls/followers",
            "following_url": "https://api.github.com/users/coveralls/following{/other_user}",
            "gists_url": "https://api.github.com/users/coveralls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coveralls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coveralls/subscriptions",
            "organizations_url": "https://api.github.com/users/coveralls/orgs",
            "repos_url": "https://api.github.com/users/coveralls/repos",
            "events_url": "https://api.github.com/users/coveralls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coveralls/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T02:31:58Z",
        "updated_at": "2018-09-02T10:07:35Z",
        "author_association": "NONE",
        "body": "\n[![Coverage Status](https://coveralls.io/builds/18791643/badge)](https://coveralls.io/builds/18791643)\n\nCoverage remained the same at 96.111% when pulling **101551ac76632eb4dee5f654a723385a779d2b92 on element6:master** into **b196e2d47754fa3f5e7efaeb7f47399e9e76ce88 on rtfeldman:master**.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417917659",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/259#issuecomment-417917659",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/259",
        "id": 417917659,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzkxNzY1OQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T09:45:32Z",
        "updated_at": "2018-09-02T09:45:32Z",
        "author_association": "COLLABORATOR",
        "body": "@element6 looks like a good addition! Maybe you could tweak it a bit to look like to other examples so it blends in? Like showing the results in comments and renaming the array `a` to `array` and the value `a` to `value`? It could be confusing that two different things are named `a`."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417918502",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/255#issuecomment-417918502",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/255",
        "id": 417918502,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzkxODUwMg==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T10:01:59Z",
        "updated_at": "2018-09-02T10:01:59Z",
        "author_association": "COLLABORATOR",
        "body": "@ndreckshage looks reasonable. Can you rebase it on current master, or submit a new PR with only your changes? The CI build has been fixed and additional commits were added to it.\r\n\r\nAnd you can either rebuild the conflicting files or leave them out, I will do a build after merging anyway."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417918758",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/259#issuecomment-417918758",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/259",
        "id": 417918758,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzkxODc1OA==",
        "user": {
            "login": "element6",
            "id": 1396264,
            "node_id": "MDQ6VXNlcjEzOTYyNjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1396264?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/element6",
            "html_url": "https://github.com/element6",
            "followers_url": "https://api.github.com/users/element6/followers",
            "following_url": "https://api.github.com/users/element6/following{/other_user}",
            "gists_url": "https://api.github.com/users/element6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/element6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/element6/subscriptions",
            "organizations_url": "https://api.github.com/users/element6/orgs",
            "repos_url": "https://api.github.com/users/element6/repos",
            "events_url": "https://api.github.com/users/element6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/element6/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T10:07:00Z",
        "updated_at": "2018-09-02T10:07:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "Good idea! I guess it also makes it easier for people to copy and paste into their console to test."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417918853",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/216#issuecomment-417918853",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/216",
        "id": 417918853,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzkxODg1Mw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T10:09:12Z",
        "updated_at": "2018-09-02T10:09:12Z",
        "author_association": "COLLABORATOR",
        "body": "I'll close this since strict mode fixes the issue and throws an error."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417919154",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/238#issuecomment-417919154",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/238",
        "id": 417919154,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzkxOTE1NA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T10:15:11Z",
        "updated_at": "2018-09-02T10:15:11Z",
        "author_association": "COLLABORATOR",
        "body": "That would be really nice, a PR would be great!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417945389",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/259#issuecomment-417945389",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/259",
        "id": 417945389,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzk0NTM4OQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T17:16:08Z",
        "updated_at": "2018-09-02T17:16:08Z",
        "author_association": "COLLABORATOR",
        "body": "@element6 thanks!"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417945468",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/256#issuecomment-417945468",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/256",
        "id": 417945468,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzk0NTQ2OA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T17:17:37Z",
        "updated_at": "2018-09-02T17:17:37Z",
        "author_association": "COLLABORATOR",
        "body": "@kevzettler no, it's not a drop in and it doesn't have anything like structural sharing."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417945568",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/202#issuecomment-417945568",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/202",
        "id": 417945568,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzk0NTU2OA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T17:19:20Z",
        "updated_at": "2018-09-02T17:19:20Z",
        "author_association": "COLLABORATOR",
        "body": "@stoeckley correct. I'm closing this."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417945768",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/213#issuecomment-417945768",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/213",
        "id": 417945768,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzk0NTc2OA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T17:22:31Z",
        "updated_at": "2018-09-02T17:22:31Z",
        "author_association": "COLLABORATOR",
        "body": "@maxgalbu late answer, but is `getIn` similar?"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417945896",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/251#issuecomment-417945896",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/251",
        "id": 417945896,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzk0NTg5Ng==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T17:24:21Z",
        "updated_at": "2018-09-02T17:24:21Z",
        "author_association": "COLLABORATOR",
        "body": "@etairi `Immutable.asMutable(obj, {deep: true})` should do the trick."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/417946393",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/240#issuecomment-417946393",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/240",
        "id": 417946393,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzk0NjM5Mw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T17:31:46Z",
        "updated_at": "2018-09-02T17:31:46Z",
        "author_association": "COLLABORATOR",
        "body": "@Jfs007 either you make the array mutable, use `splice` and then make it immutable again or you use stuff like `map`, `reduce`, `filter`,  `concat` etc to achieve the same effect."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/419716643",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/260#issuecomment-419716643",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/260",
        "id": 419716643,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTcxNjY0Mw==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-09T13:39:06Z",
        "updated_at": "2018-09-09T13:39:06Z",
        "author_association": "COLLABORATOR",
        "body": "seamless-immutable has 0 dependencies and we want to keep it that way so we don't force lodash on anyone."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/429992865",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/225#issuecomment-429992865",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/225",
        "id": 429992865,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTk5Mjg2NQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-15T20:01:50Z",
        "updated_at": "2018-10-15T20:01:50Z",
        "author_association": "COLLABORATOR",
        "body": "seamless-immutable uses the same mechanism as React for dev and prod mode so I assume it should work out of the box if you do a production build of your app."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/429994139",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/148#issuecomment-429994139",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/148",
        "id": 429994139,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTk5NDEzOQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-15T20:06:14Z",
        "updated_at": "2018-10-15T20:06:14Z",
        "author_association": "COLLABORATOR",
        "body": "Closing due to inactivity."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/430299793",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/261#issuecomment-430299793",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/261",
        "id": 430299793,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDI5OTc5Mw==",
        "user": {
            "login": "RMHonor",
            "id": 19863160,
            "node_id": "MDQ6VXNlcjE5ODYzMTYw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19863160?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RMHonor",
            "html_url": "https://github.com/RMHonor",
            "followers_url": "https://api.github.com/users/RMHonor/followers",
            "following_url": "https://api.github.com/users/RMHonor/following{/other_user}",
            "gists_url": "https://api.github.com/users/RMHonor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RMHonor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RMHonor/subscriptions",
            "organizations_url": "https://api.github.com/users/RMHonor/orgs",
            "repos_url": "https://api.github.com/users/RMHonor/repos",
            "events_url": "https://api.github.com/users/RMHonor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RMHonor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-16T16:13:24Z",
        "updated_at": "2018-10-16T16:13:24Z",
        "author_association": "NONE",
        "body": "Has been resolved by above PR"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/430593882",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/182#issuecomment-430593882",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/182",
        "id": 430593882,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDU5Mzg4Mg==",
        "user": {
            "login": "zedtux",
            "id": 478564,
            "node_id": "MDQ6VXNlcjQ3ODU2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/478564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zedtux",
            "html_url": "https://github.com/zedtux",
            "followers_url": "https://api.github.com/users/zedtux/followers",
            "following_url": "https://api.github.com/users/zedtux/following{/other_user}",
            "gists_url": "https://api.github.com/users/zedtux/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zedtux/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zedtux/subscriptions",
            "organizations_url": "https://api.github.com/users/zedtux/orgs",
            "repos_url": "https://api.github.com/users/zedtux/repos",
            "events_url": "https://api.github.com/users/zedtux/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zedtux/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-17T11:36:37Z",
        "updated_at": "2018-10-17T11:36:37Z",
        "author_association": "NONE",
        "body": "I'm looking for this issue."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/433115584",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/262#issuecomment-433115584",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/262",
        "id": 433115584,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzExNTU4NA==",
        "user": {
            "login": "coveralls",
            "id": 2354108,
            "node_id": "MDQ6VXNlcjIzNTQxMDg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2354108?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coveralls",
            "html_url": "https://github.com/coveralls",
            "followers_url": "https://api.github.com/users/coveralls/followers",
            "following_url": "https://api.github.com/users/coveralls/following{/other_user}",
            "gists_url": "https://api.github.com/users/coveralls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coveralls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coveralls/subscriptions",
            "organizations_url": "https://api.github.com/users/coveralls/orgs",
            "repos_url": "https://api.github.com/users/coveralls/repos",
            "events_url": "https://api.github.com/users/coveralls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coveralls/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-25T16:20:24Z",
        "updated_at": "2018-10-25T16:20:24Z",
        "author_association": "NONE",
        "body": "\n[![Coverage Status](https://coveralls.io/builds/19722272/badge)](https://coveralls.io/builds/19722272)\n\nCoverage remained the same at 96.111% when pulling **c148291cf64bacfc03e65b7782c66c0c6249e974 on kyle1320:document-array-methods** into **d5d28d064b09f5b969aa79b89b0b22925694e003 on rtfeldman:master**.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/433505109",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/262#issuecomment-433505109",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/262",
        "id": 433505109,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzUwNTEwOQ==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-26T18:39:20Z",
        "updated_at": "2018-10-26T18:39:20Z",
        "author_association": "COLLABORATOR",
        "body": "thanks @kyle1320"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/451669994",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/263#issuecomment-451669994",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/263",
        "id": 451669994,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTY2OTk5NA==",
        "user": {
            "login": "crudh",
            "id": 3248512,
            "node_id": "MDQ6VXNlcjMyNDg1MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3248512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crudh",
            "html_url": "https://github.com/crudh",
            "followers_url": "https://api.github.com/users/crudh/followers",
            "following_url": "https://api.github.com/users/crudh/following{/other_user}",
            "gists_url": "https://api.github.com/users/crudh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crudh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crudh/subscriptions",
            "organizations_url": "https://api.github.com/users/crudh/orgs",
            "repos_url": "https://api.github.com/users/crudh/repos",
            "events_url": "https://api.github.com/users/crudh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crudh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-05T16:39:29Z",
        "updated_at": "2019-01-05T16:39:29Z",
        "author_association": "COLLABORATOR",
        "body": "@lightnguyen not sure, but I added this test case and it seems to work as expected?\r\n\r\n```javascript\r\n    it(\"filters out things as expected when returning empty array\", function() {\r\n      var array = Immutable([\"drop the numbers!\", 3, 2, 1, 0, null, undefined]);\r\n      var expected = Immutable([\"drop the numbers!\", null, undefined]);\r\n      var actual = Immutable.flatMap(array, function(value) {\r\n        if (typeof value === \"number\") {\r\n          return [];\r\n        } else {\r\n          return value;\r\n        }\r\n      });\r\n\r\n      TestUtils.assertJsonEqual(actual, expected);\r\n    });\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/458649435",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/218#issuecomment-458649435",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/218",
        "id": 458649435,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODY0OTQzNQ==",
        "user": {
            "login": "jkeam",
            "id": 48856,
            "node_id": "MDQ6VXNlcjQ4ODU2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/48856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jkeam",
            "html_url": "https://github.com/jkeam",
            "followers_url": "https://api.github.com/users/jkeam/followers",
            "following_url": "https://api.github.com/users/jkeam/following{/other_user}",
            "gists_url": "https://api.github.com/users/jkeam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jkeam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jkeam/subscriptions",
            "organizations_url": "https://api.github.com/users/jkeam/orgs",
            "repos_url": "https://api.github.com/users/jkeam/repos",
            "events_url": "https://api.github.com/users/jkeam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jkeam/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-29T18:19:52Z",
        "updated_at": "2019-01-29T18:19:52Z",
        "author_association": "NONE",
        "body": "Similar to @rkkautsar my work around involved NOT storing `moment` objects but instead storing strings.  It's a bit of a pain to convert them back and forth using `format` and `parse` and would love to see this implemented."
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/465809720",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/266#issuecomment-465809720",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/266",
        "id": 465809720,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTgwOTcyMA==",
        "user": {
            "login": "coveralls",
            "id": 2354108,
            "node_id": "MDQ6VXNlcjIzNTQxMDg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2354108?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coveralls",
            "html_url": "https://github.com/coveralls",
            "followers_url": "https://api.github.com/users/coveralls/followers",
            "following_url": "https://api.github.com/users/coveralls/following{/other_user}",
            "gists_url": "https://api.github.com/users/coveralls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coveralls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coveralls/subscriptions",
            "organizations_url": "https://api.github.com/users/coveralls/orgs",
            "repos_url": "https://api.github.com/users/coveralls/repos",
            "events_url": "https://api.github.com/users/coveralls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coveralls/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-21T00:18:50Z",
        "updated_at": "2019-02-21T00:18:50Z",
        "author_association": "NONE",
        "body": "\n[![Coverage Status](https://coveralls.io/builds/21754560/badge)](https://coveralls.io/builds/21754560)\n\nCoverage remained the same at 96.111% when pulling **2410a29223ee1cecdb5cd2d23ff34a8710932d86 on ericdsmith:file-blob-not-mergable** into **2d870b14a01e222493c686a7644181185f859558 on rtfeldman:master**.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/481154417",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/267#issuecomment-481154417",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/267",
        "id": 481154417,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTE1NDQxNw==",
        "user": {
            "login": "bjonamu",
            "id": 11978110,
            "node_id": "MDQ6VXNlcjExOTc4MTEw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11978110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bjonamu",
            "html_url": "https://github.com/bjonamu",
            "followers_url": "https://api.github.com/users/bjonamu/followers",
            "following_url": "https://api.github.com/users/bjonamu/following{/other_user}",
            "gists_url": "https://api.github.com/users/bjonamu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bjonamu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bjonamu/subscriptions",
            "organizations_url": "https://api.github.com/users/bjonamu/orgs",
            "repos_url": "https://api.github.com/users/bjonamu/repos",
            "events_url": "https://api.github.com/users/bjonamu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bjonamu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-09T08:27:36Z",
        "updated_at": "2019-04-09T08:27:36Z",
        "author_association": "NONE",
        "body": "Fixed by https://github.com/rtfeldman/seamless-immutable/pull/268"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/481155000",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/268#issuecomment-481155000",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/268",
        "id": 481155000,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTE1NTAwMA==",
        "user": {
            "login": "coveralls",
            "id": 2354108,
            "node_id": "MDQ6VXNlcjIzNTQxMDg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2354108?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coveralls",
            "html_url": "https://github.com/coveralls",
            "followers_url": "https://api.github.com/users/coveralls/followers",
            "following_url": "https://api.github.com/users/coveralls/following{/other_user}",
            "gists_url": "https://api.github.com/users/coveralls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coveralls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coveralls/subscriptions",
            "organizations_url": "https://api.github.com/users/coveralls/orgs",
            "repos_url": "https://api.github.com/users/coveralls/repos",
            "events_url": "https://api.github.com/users/coveralls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coveralls/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-09T08:29:21Z",
        "updated_at": "2019-04-09T08:51:58Z",
        "author_association": "NONE",
        "body": "\n[![Coverage Status](https://coveralls.io/builds/22689831/badge)](https://coveralls.io/builds/22689831)\n\nCoverage decreased (-0.01%) to 96.1% when pulling **25f4f5768bc0c8eb372d71b632dec029dec54409 on bjonamu:master** into **2d870b14a01e222493c686a7644181185f859558 on rtfeldman:master**.\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/484362465",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/215#issuecomment-484362465",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/215",
        "id": 484362465,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDM2MjQ2NQ==",
        "user": {
            "login": "blueberryfan",
            "id": 17189454,
            "node_id": "MDQ6VXNlcjE3MTg5NDU0",
            "avatar_url": "https://avatars1.githubusercontent.com/u/17189454?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blueberryfan",
            "html_url": "https://github.com/blueberryfan",
            "followers_url": "https://api.github.com/users/blueberryfan/followers",
            "following_url": "https://api.github.com/users/blueberryfan/following{/other_user}",
            "gists_url": "https://api.github.com/users/blueberryfan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blueberryfan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blueberryfan/subscriptions",
            "organizations_url": "https://api.github.com/users/blueberryfan/orgs",
            "repos_url": "https://api.github.com/users/blueberryfan/repos",
            "events_url": "https://api.github.com/users/blueberryfan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blueberryfan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-18T05:35:35Z",
        "updated_at": "2019-04-18T05:35:35Z",
        "author_association": "NONE",
        "body": "@itaysabato Are you (or anyone else) aware of any good examples of deep merge handling arrays, eg an array a couple of levels down that in turn has various items in it, including arrays and objects with arrays in them? I'm thinking to put together a recursive custom merger to handle arrays, but as it hits anything other than arrays it'd be nice if it could reuse already existing merge logic. Otherwise, as I understand id, the custom merger would have to handle every other kind of item it comes across (objects, primitive types, etc) as well, which seems like a big job.\r\n\r\nThe example custom mergers seem to be quite simplistic and not cater for recursing down arrays.\r\n\r\nI'll keep digging meanwhile.\r\n\r\nSample data\r\n`\r\n{ \r\n  aa: { \r\n    bb: [\r\n      'one', \r\n      { xx: { yy: [1, 2, 3] } }, \r\n      [11, { zz: 123 }] \r\n    ] \r\n  } \r\n}\r\n`\r\n"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/484363054",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/issues/215#issuecomment-484363054",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/215",
        "id": 484363054,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDM2MzA1NA==",
        "user": {
            "login": "blueberryfan",
            "id": 17189454,
            "node_id": "MDQ6VXNlcjE3MTg5NDU0",
            "avatar_url": "https://avatars1.githubusercontent.com/u/17189454?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blueberryfan",
            "html_url": "https://github.com/blueberryfan",
            "followers_url": "https://api.github.com/users/blueberryfan/followers",
            "following_url": "https://api.github.com/users/blueberryfan/following{/other_user}",
            "gists_url": "https://api.github.com/users/blueberryfan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blueberryfan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blueberryfan/subscriptions",
            "organizations_url": "https://api.github.com/users/blueberryfan/orgs",
            "repos_url": "https://api.github.com/users/blueberryfan/repos",
            "events_url": "https://api.github.com/users/blueberryfan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blueberryfan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-18T05:38:38Z",
        "updated_at": "2019-04-18T05:38:38Z",
        "author_association": "NONE",
        "body": "@rtfeldman Just pinging you as well. See comment / question above :)"
    },
    {
        "url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/comments/489608333",
        "html_url": "https://github.com/rtfeldman/seamless-immutable/pull/269#issuecomment-489608333",
        "issue_url": "https://api.github.com/repos/rtfeldman/seamless-immutable/issues/269",
        "id": 489608333,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTYwODMzMw==",
        "user": {
            "login": "coveralls",
            "id": 2354108,
            "node_id": "MDQ6VXNlcjIzNTQxMDg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2354108?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coveralls",
            "html_url": "https://github.com/coveralls",
            "followers_url": "https://api.github.com/users/coveralls/followers",
            "following_url": "https://api.github.com/users/coveralls/following{/other_user}",
            "gists_url": "https://api.github.com/users/coveralls/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coveralls/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coveralls/subscriptions",
            "organizations_url": "https://api.github.com/users/coveralls/orgs",
            "repos_url": "https://api.github.com/users/coveralls/repos",
            "events_url": "https://api.github.com/users/coveralls/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coveralls/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-06T12:49:51Z",
        "updated_at": "2019-05-06T12:49:51Z",
        "author_association": "NONE",
        "body": "\n[![Coverage Status](https://coveralls.io/builds/23211374/badge)](https://coveralls.io/builds/23211374)\n\nCoverage increased (+0.09%) to 96.206% when pulling **265951134bbcde41a58377aeccc44e62cc27c26e on Octopus-ITSM:master** into **2d870b14a01e222493c686a7644181185f859558 on rtfeldman:master**.\n"
    }
]