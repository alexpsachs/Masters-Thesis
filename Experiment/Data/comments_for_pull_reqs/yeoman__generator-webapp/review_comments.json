[
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9377685",
        "pull_request_review_id": null,
        "id": 9377685,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzNzc2ODU=",
        "diff_hunk": "@@ -3,20 +3,8 @@\n // Generated on <%= (new Date).toISOString().split('T')[0] %> using <%= pkg.name %> <%= pkg.version %>\n \n // Load plugins\n-var gulp = require('gulp');\n-var autoprefixer = require('gulp-autoprefixer');\n-var csso = require('gulp-csso');\n-var jshint = require('gulp-jshint');\n-var uglify = require('gulp-uglify');\n-var imagemin = require('gulp-imagemin');\n-var sass = require('gulp-ruby-sass');\n-var clean = require('gulp-clean');\n-var concat = require('gulp-concat');\n-var cache = require('gulp-cache');\n-var size = require('gulp-size');\n-var livereload = require('gulp-livereload');\n-var lr = require('tiny-lr');\n-var server = lr();\n+var plugins = require(\"gulp-load-plugins\")();",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 18,
        "commit_id": "d598007bc8d45810e0a7da0855e01822f1c60268",
        "original_commit_id": "226dd7498635b5fbfbb08e8a93c06ef89f4bb944",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "single quotes\n",
        "created_at": "2014-02-03T09:56:40Z",
        "updated_at": "2014-02-03T14:32:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9377685",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9377685"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9377685"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9377695",
        "pull_request_review_id": null,
        "id": 9377695,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzNzc2OTU=",
        "diff_hunk": "@@ -3,20 +3,8 @@\n // Generated on <%= (new Date).toISOString().split('T')[0] %> using <%= pkg.name %> <%= pkg.version %>\n \n // Load plugins\n-var gulp = require('gulp');\n-var autoprefixer = require('gulp-autoprefixer');\n-var csso = require('gulp-csso');\n-var jshint = require('gulp-jshint');\n-var uglify = require('gulp-uglify');\n-var imagemin = require('gulp-imagemin');\n-var sass = require('gulp-ruby-sass');\n-var clean = require('gulp-clean');\n-var concat = require('gulp-concat');\n-var cache = require('gulp-cache');\n-var size = require('gulp-size');\n-var livereload = require('gulp-livereload');\n-var lr = require('tiny-lr');\n-var server = lr();\n+var plugins = require(\"gulp-load-plugins\")();",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 18,
        "commit_id": "d598007bc8d45810e0a7da0855e01822f1c60268",
        "original_commit_id": "226dd7498635b5fbfbb08e8a93c06ef89f4bb944",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "and you need to update the plugin references\n\nand do scaffold out afterwards and test that everything works\n",
        "created_at": "2014-02-03T09:57:23Z",
        "updated_at": "2014-02-03T14:32:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9377695",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9377695"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9377695"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9377707",
        "pull_request_review_id": null,
        "id": 9377707,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzNzc3MDc=",
        "diff_hunk": "@@ -3,20 +3,8 @@\n // Generated on <%= (new Date).toISOString().split('T')[0] %> using <%= pkg.name %> <%= pkg.version %>\n \n // Load plugins\n-var gulp = require('gulp');\n-var autoprefixer = require('gulp-autoprefixer');\n-var csso = require('gulp-csso');\n-var jshint = require('gulp-jshint');\n-var uglify = require('gulp-uglify');\n-var imagemin = require('gulp-imagemin');\n-var sass = require('gulp-ruby-sass');\n-var clean = require('gulp-clean');\n-var concat = require('gulp-concat');\n-var cache = require('gulp-cache');\n-var size = require('gulp-size');\n-var livereload = require('gulp-livereload');\n-var lr = require('tiny-lr');\n-var server = lr();\n+var plugins = require(\"gulp-load-plugins\")();\n+var server = plugins['tiny-lr']();",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 19,
        "commit_id": "d598007bc8d45810e0a7da0855e01822f1c60268",
        "original_commit_id": "226dd7498635b5fbfbb08e8a93c06ef89f4bb944",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "use the convert to camelCase option in gulp-load-plugins\n",
        "created_at": "2014-02-03T09:57:58Z",
        "updated_at": "2014-02-03T14:32:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9377707",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9377707"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9377707"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9377855",
        "pull_request_review_id": null,
        "id": 9377855,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzNzc4NTU=",
        "diff_hunk": "@@ -3,20 +3,8 @@\n // Generated on <%= (new Date).toISOString().split('T')[0] %> using <%= pkg.name %> <%= pkg.version %>\n \n // Load plugins\n-var gulp = require('gulp');\n-var autoprefixer = require('gulp-autoprefixer');\n-var csso = require('gulp-csso');\n-var jshint = require('gulp-jshint');\n-var uglify = require('gulp-uglify');\n-var imagemin = require('gulp-imagemin');\n-var sass = require('gulp-ruby-sass');\n-var clean = require('gulp-clean');\n-var concat = require('gulp-concat');\n-var cache = require('gulp-cache');\n-var size = require('gulp-size');\n-var livereload = require('gulp-livereload');\n-var lr = require('tiny-lr');\n-var server = lr();\n+var plugins = require(\"gulp-load-plugins\")();\n+var server = plugins['tiny-lr']();",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 19,
        "commit_id": "d598007bc8d45810e0a7da0855e01822f1c60268",
        "original_commit_id": "226dd7498635b5fbfbb08e8a93c06ef89f4bb944",
        "user": {
            "login": "hemanth",
            "id": 18315,
            "node_id": "MDQ6VXNlcjE4MzE1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemanth",
            "html_url": "https://github.com/hemanth",
            "followers_url": "https://api.github.com/users/hemanth/followers",
            "following_url": "https://api.github.com/users/hemanth/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemanth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemanth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemanth/subscriptions",
            "organizations_url": "https://api.github.com/users/hemanth/orgs",
            "repos_url": "https://api.github.com/users/hemanth/repos",
            "events_url": "https://api.github.com/users/hemanth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemanth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For readability ? Or another specific reason ? \nAnyway doing it :) [If Sindre says there will be some solid reasons]\n",
        "created_at": "2014-02-03T10:05:14Z",
        "updated_at": "2014-02-03T14:32:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9377855",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9377855"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9377855"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9377974",
        "pull_request_review_id": null,
        "id": 9377974,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzNzc5NzQ=",
        "diff_hunk": "@@ -3,20 +3,8 @@\n // Generated on <%= (new Date).toISOString().split('T')[0] %> using <%= pkg.name %> <%= pkg.version %>\n \n // Load plugins\n-var gulp = require('gulp');\n-var autoprefixer = require('gulp-autoprefixer');\n-var csso = require('gulp-csso');\n-var jshint = require('gulp-jshint');\n-var uglify = require('gulp-uglify');\n-var imagemin = require('gulp-imagemin');\n-var sass = require('gulp-ruby-sass');\n-var clean = require('gulp-clean');\n-var concat = require('gulp-concat');\n-var cache = require('gulp-cache');\n-var size = require('gulp-size');\n-var livereload = require('gulp-livereload');\n-var lr = require('tiny-lr');\n-var server = lr();\n+var plugins = require(\"gulp-load-plugins\")();\n+var server = plugins['tiny-lr']();",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 19,
        "commit_id": "d598007bc8d45810e0a7da0855e01822f1c60268",
        "original_commit_id": "226dd7498635b5fbfbb08e8a93c06ef89f4bb944",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yes, and we might need it later too if we use additional plugins with dash.\n",
        "created_at": "2014-02-03T10:10:38Z",
        "updated_at": "2014-02-03T14:32:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9377974",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9377974"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9377974"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9378033",
        "pull_request_review_id": null,
        "id": 9378033,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzNzgwMzM=",
        "diff_hunk": "@@ -3,20 +3,8 @@\n // Generated on <%= (new Date).toISOString().split('T')[0] %> using <%= pkg.name %> <%= pkg.version %>\n \n // Load plugins\n-var gulp = require('gulp');\n-var autoprefixer = require('gulp-autoprefixer');\n-var csso = require('gulp-csso');\n-var jshint = require('gulp-jshint');\n-var uglify = require('gulp-uglify');\n-var imagemin = require('gulp-imagemin');\n-var sass = require('gulp-ruby-sass');\n-var clean = require('gulp-clean');\n-var concat = require('gulp-concat');\n-var cache = require('gulp-cache');\n-var size = require('gulp-size');\n-var livereload = require('gulp-livereload');\n-var lr = require('tiny-lr');\n-var server = lr();\n+var plugins = require(\"gulp-load-plugins\")();",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 18,
        "commit_id": "d598007bc8d45810e0a7da0855e01822f1c60268",
        "original_commit_id": "226dd7498635b5fbfbb08e8a93c06ef89f4bb944",
        "user": {
            "login": "hemanth",
            "id": 18315,
            "node_id": "MDQ6VXNlcjE4MzE1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemanth",
            "html_url": "https://github.com/hemanth",
            "followers_url": "https://api.github.com/users/hemanth/followers",
            "following_url": "https://api.github.com/users/hemanth/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemanth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemanth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemanth/subscriptions",
            "organizations_url": "https://api.github.com/users/hemanth/orgs",
            "repos_url": "https://api.github.com/users/hemanth/repos",
            "events_url": "https://api.github.com/users/hemanth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemanth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`plugins.gulp` or `gulp` which would be better? \nI vote for just `gulp`\n",
        "created_at": "2014-02-03T10:14:01Z",
        "updated_at": "2014-02-03T14:32:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9378033",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9378033"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9378033"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9378608",
        "pull_request_review_id": null,
        "id": 9378608,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzNzg2MDg=",
        "diff_hunk": "@@ -3,20 +3,8 @@\n // Generated on <%= (new Date).toISOString().split('T')[0] %> using <%= pkg.name %> <%= pkg.version %>\n \n // Load plugins\n-var gulp = require('gulp');\n-var autoprefixer = require('gulp-autoprefixer');\n-var csso = require('gulp-csso');\n-var jshint = require('gulp-jshint');\n-var uglify = require('gulp-uglify');\n-var imagemin = require('gulp-imagemin');\n-var sass = require('gulp-ruby-sass');\n-var clean = require('gulp-clean');\n-var concat = require('gulp-concat');\n-var cache = require('gulp-cache');\n-var size = require('gulp-size');\n-var livereload = require('gulp-livereload');\n-var lr = require('tiny-lr');\n-var server = lr();\n+var plugins = require(\"gulp-load-plugins\")();",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 18,
        "commit_id": "d598007bc8d45810e0a7da0855e01822f1c60268",
        "original_commit_id": "226dd7498635b5fbfbb08e8a93c06ef89f4bb944",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "just `plugins`. gulp is already used.\n",
        "created_at": "2014-02-03T10:40:17Z",
        "updated_at": "2014-02-03T14:32:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9378608",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9378608"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9378608"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9381818",
        "pull_request_review_id": null,
        "id": 9381818,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzODE4MTg=",
        "diff_hunk": "@@ -4,70 +4,59 @@\n \n // Load plugins\n var gulp = require('gulp');\n-var autoprefixer = require('gulp-autoprefixer');\n-var csso = require('gulp-csso');\n-var jshint = require('gulp-jshint');\n-var uglify = require('gulp-uglify');\n-var imagemin = require('gulp-imagemin');\n-var sass = require('gulp-ruby-sass');\n-var clean = require('gulp-clean');\n-var concat = require('gulp-concat');\n-var cache = require('gulp-cache');\n-var size = require('gulp-size');\n-var livereload = require('gulp-livereload');\n-var lr = require('tiny-lr');\n-var server = lr();\n+var plugins = require('gulp-load-plugins')({camelize: true});",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 17,
        "commit_id": "d598007bc8d45810e0a7da0855e01822f1c60268",
        "original_commit_id": "ea9829ec79698a9a10cdb0dbbc713eb4c8b5f2e7",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "actually `plugins` is so verbose, let's just abuse $:\n\n```\nvar $ = require('gulp-load-plugins')({camelize: true});\n```\n",
        "created_at": "2014-02-03T13:09:09Z",
        "updated_at": "2014-02-03T14:32:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9381818",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9381818"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9381818"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9381841",
        "pull_request_review_id": null,
        "id": 9381841,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzODE4NDE=",
        "diff_hunk": "@@ -4,70 +4,59 @@\n \n // Load plugins\n var gulp = require('gulp');\n-var autoprefixer = require('gulp-autoprefixer');\n-var csso = require('gulp-csso');\n-var jshint = require('gulp-jshint');\n-var uglify = require('gulp-uglify');\n-var imagemin = require('gulp-imagemin');\n-var sass = require('gulp-ruby-sass');\n-var clean = require('gulp-clean');\n-var concat = require('gulp-concat');\n-var cache = require('gulp-cache');\n-var size = require('gulp-size');\n-var livereload = require('gulp-livereload');\n-var lr = require('tiny-lr');\n-var server = lr();\n+var plugins = require('gulp-load-plugins')({camelize: true});",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 17,
        "commit_id": "d598007bc8d45810e0a7da0855e01822f1c60268",
        "original_commit_id": "ea9829ec79698a9a10cdb0dbbc713eb4c8b5f2e7",
        "user": {
            "login": "hemanth",
            "id": 18315,
            "node_id": "MDQ6VXNlcjE4MzE1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemanth",
            "html_url": "https://github.com/hemanth",
            "followers_url": "https://api.github.com/users/hemanth/followers",
            "following_url": "https://api.github.com/users/hemanth/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemanth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemanth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemanth/subscriptions",
            "organizations_url": "https://api.github.com/users/hemanth/orgs",
            "repos_url": "https://api.github.com/users/hemanth/repos",
            "events_url": "https://api.github.com/users/hemanth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemanth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Okies :)\n",
        "created_at": "2014-02-03T13:10:21Z",
        "updated_at": "2014-02-03T14:32:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9381841",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9381841"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9381841"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9383249",
        "pull_request_review_id": null,
        "id": 9383249,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzODMyNDk=",
        "diff_hunk": "@@ -2,72 +2,61 @@\n \n // Generated on <%= (new Date).toISOString().split('T')[0] %> using <%= pkg.name %> <%= pkg.version %>\n \n-// Load plugins\n+// Load all the plugins.\n var gulp = require('gulp');\n-var autoprefixer = require('gulp-autoprefixer');\n-var csso = require('gulp-csso');\n-var jshint = require('gulp-jshint');\n-var uglify = require('gulp-uglify');\n-var imagemin = require('gulp-imagemin');\n-var sass = require('gulp-ruby-sass');\n-var clean = require('gulp-clean');\n-var concat = require('gulp-concat');\n-var cache = require('gulp-cache');\n-var size = require('gulp-size');\n-var livereload = require('gulp-livereload');\n-var lr = require('tiny-lr');\n-var server = lr();\n+var $ = require('gulp-load-plugin')({camelize: true});\n+var server = $.tinyLr();\n \n // Styles\n gulp.task('styles', function () {\n     return gulp.src('app/styles/main.scss')\n-        .pipe(sass({\n+        .pipe($.sass({\n           style: 'expanded',\n           loadPath: ['app/bower_components']\n         }))\n-        .pipe(livereload(server))\n-        .pipe(autoprefixer('last 1 version'))\n-        .pipe(csso())\n+        .pipe($.livereload(server))\n+        .pipe($.autoprefixer('last 1 version'))\n+        .pipe($.csso())\n         .pipe(gulp.dest('dist/styles'))\n-        .pipe(size());\n+        .pipe($.size());\n });\n \n // Scripts\n gulp.task('scripts', function () {\n     return gulp.src('app/scripts/**/*.js')\n-        .pipe(jshint('.jshintrc'))\n-        .pipe(jshint.reporter('default'))\n+        .pipe($.jshint('.$.jshintrc'))",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 47,
        "commit_id": "d598007bc8d45810e0a7da0855e01822f1c60268",
        "original_commit_id": "195af0c98122968f8f0047afb07d307f479644b3",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "uhm?\n",
        "created_at": "2014-02-03T14:09:56Z",
        "updated_at": "2014-02-03T14:32:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9383249",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9383249"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9383249"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9383358",
        "pull_request_review_id": null,
        "id": 9383358,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzODMzNTg=",
        "diff_hunk": "@@ -2,72 +2,61 @@\n \n // Generated on <%= (new Date).toISOString().split('T')[0] %> using <%= pkg.name %> <%= pkg.version %>\n \n-// Load plugins\n+// Load all the plugins.\n var gulp = require('gulp');\n-var autoprefixer = require('gulp-autoprefixer');\n-var csso = require('gulp-csso');\n-var jshint = require('gulp-jshint');\n-var uglify = require('gulp-uglify');\n-var imagemin = require('gulp-imagemin');\n-var sass = require('gulp-ruby-sass');\n-var clean = require('gulp-clean');\n-var concat = require('gulp-concat');\n-var cache = require('gulp-cache');\n-var size = require('gulp-size');\n-var livereload = require('gulp-livereload');\n-var lr = require('tiny-lr');\n-var server = lr();\n+var $ = require('gulp-load-plugin')({camelize: true});\n+var server = $.tinyLr();\n \n // Styles\n gulp.task('styles', function () {\n     return gulp.src('app/styles/main.scss')\n-        .pipe(sass({\n+        .pipe($.sass({\n           style: 'expanded',\n           loadPath: ['app/bower_components']\n         }))\n-        .pipe(livereload(server))\n-        .pipe(autoprefixer('last 1 version'))\n-        .pipe(csso())\n+        .pipe($.livereload(server))\n+        .pipe($.autoprefixer('last 1 version'))\n+        .pipe($.csso())\n         .pipe(gulp.dest('dist/styles'))\n-        .pipe(size());\n+        .pipe($.size());\n });\n \n // Scripts\n gulp.task('scripts', function () {\n     return gulp.src('app/scripts/**/*.js')\n-        .pipe(jshint('.jshintrc'))\n-        .pipe(jshint.reporter('default'))\n+        .pipe($.jshint('.$.jshintrc'))",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 47,
        "commit_id": "d598007bc8d45810e0a7da0855e01822f1c60268",
        "original_commit_id": "195af0c98122968f8f0047afb07d307f479644b3",
        "user": {
            "login": "hemanth",
            "id": 18315,
            "node_id": "MDQ6VXNlcjE4MzE1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemanth",
            "html_url": "https://github.com/hemanth",
            "followers_url": "https://api.github.com/users/hemanth/followers",
            "following_url": "https://api.github.com/users/hemanth/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemanth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemanth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemanth/subscriptions",
            "organizations_url": "https://api.github.com/users/hemanth/orgs",
            "repos_url": "https://api.github.com/users/hemanth/repos",
            "events_url": "https://api.github.com/users/hemanth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemanth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yikes! Fixed it.\n",
        "created_at": "2014-02-03T14:14:11Z",
        "updated_at": "2014-02-03T14:32:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9383358",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9383358"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/7#discussion_r9383358"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9606250",
        "pull_request_review_id": null,
        "id": 9606250,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2MDYyNTA=",
        "diff_hunk": "@@ -1,2 +1,3 @@\n+.DS_Store",
        "path": ".gitignore",
        "position": null,
        "original_position": 1,
        "commit_id": "1c1d453967c71165b9e3b9f28284e5f22e938e9f",
        "original_commit_id": "8e6ea926803c7dabe3f15bacc6accf4dc8c14014",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should be in your global gitignore: https://help.github.com/articles/ignoring-files#global-gitignore\n",
        "created_at": "2014-02-10T22:49:55Z",
        "updated_at": "2014-02-11T13:18:39Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/16#discussion_r9606250",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/16",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9606250"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/16#discussion_r9606250"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/16"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9612090",
        "pull_request_review_id": null,
        "id": 9612090,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2MTIwOTA=",
        "diff_hunk": "@@ -1,2 +1,3 @@\n+.DS_Store",
        "path": ".gitignore",
        "position": null,
        "original_position": 1,
        "commit_id": "1c1d453967c71165b9e3b9f28284e5f22e938e9f",
        "original_commit_id": "8e6ea926803c7dabe3f15bacc6accf4dc8c14014",
        "user": {
            "login": "jonkemp",
            "id": 230683,
            "node_id": "MDQ6VXNlcjIzMDY4Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/230683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonkemp",
            "html_url": "https://github.com/jonkemp",
            "followers_url": "https://api.github.com/users/jonkemp/followers",
            "following_url": "https://api.github.com/users/jonkemp/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonkemp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonkemp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonkemp/subscriptions",
            "organizations_url": "https://api.github.com/users/jonkemp/orgs",
            "repos_url": "https://api.github.com/users/jonkemp/repos",
            "events_url": "https://api.github.com/users/jonkemp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonkemp/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "My bad. Thanks! Do I edit the original commit or just push this change?\n",
        "created_at": "2014-02-11T02:50:06Z",
        "updated_at": "2014-02-11T13:18:39Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/16#discussion_r9612090",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/16",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/9612090"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/16#discussion_r9612090"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/16"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11945902",
        "pull_request_review_id": null,
        "id": 11945902,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ1OTAy",
        "diff_hunk": "@@ -13,6 +13,7 @@\n     \"gulp-csso\": \"^0.2.6\",\n     \"gulp-filter\": \"^0.4.1\",\n     \"gulp-flatten\": \"^0.0.2\",\n+    \"gulp-ignore\" :\"^1.0.1\",",
        "path": "app/templates/_package.json",
        "position": 4,
        "original_position": 4,
        "commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "original_commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "afaik not used\n",
        "created_at": "2014-04-24T12:19:46Z",
        "updated_at": "2014-04-24T12:19:46Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11945902",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11945902"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11945902"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11945907",
        "pull_request_review_id": null,
        "id": 11945907,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ1OTA3",
        "diff_hunk": "@@ -61,11 +61,16 @@ gulp.task('fonts', function () {\n         .pipe($.size());\n });\n \n+gulp.task('extras', function(){",
        "path": "app/templates/gulpfile.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "original_commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "code style\n",
        "created_at": "2014-04-24T12:19:55Z",
        "updated_at": "2014-04-24T12:19:55Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11945907",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11945907"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11945907"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11945944",
        "pull_request_review_id": null,
        "id": 11945944,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ1OTQ0",
        "diff_hunk": "@@ -61,11 +61,16 @@ gulp.task('fonts', function () {\n         .pipe($.size());\n });\n \n+gulp.task('extras', function(){\n+    return gulp.src(['app/*', '!app/*.html'])",
        "path": "app/templates/gulpfile.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "original_commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `./app/*.*` instead of `./app/*`, because the latter copies directories too (it would copy `bower_components`).\n",
        "created_at": "2014-04-24T12:21:17Z",
        "updated_at": "2014-04-24T12:21:17Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11945944",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11945944"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11945944"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11946195",
        "pull_request_review_id": null,
        "id": 11946195,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ2MTk1",
        "diff_hunk": "@@ -61,11 +61,16 @@ gulp.task('fonts', function () {\n         .pipe($.size());\n });\n \n+gulp.task('extras', function(){\n+    return gulp.src(['app/*', '!app/*.html'])",
        "path": "app/templates/gulpfile.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "original_commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "user": {
            "login": "jcsrb",
            "id": 119011,
            "node_id": "MDQ6VXNlcjExOTAxMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/119011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcsrb",
            "html_url": "https://github.com/jcsrb",
            "followers_url": "https://api.github.com/users/jcsrb/followers",
            "following_url": "https://api.github.com/users/jcsrb/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcsrb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcsrb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcsrb/subscriptions",
            "organizations_url": "https://api.github.com/users/jcsrb/orgs",
            "repos_url": "https://api.github.com/users/jcsrb/repos",
            "events_url": "https://api.github.com/users/jcsrb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcsrb/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "thanks for fixing that\n",
        "created_at": "2014-04-24T12:30:04Z",
        "updated_at": "2014-04-24T12:30:04Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11946195",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11946195"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11946195"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11946206",
        "pull_request_review_id": null,
        "id": 11946206,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ2MjA2",
        "diff_hunk": "@@ -61,11 +61,16 @@ gulp.task('fonts', function () {\n         .pipe($.size());\n });\n \n+gulp.task('extras', function(){",
        "path": "app/templates/gulpfile.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "original_commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "user": {
            "login": "jcsrb",
            "id": 119011,
            "node_id": "MDQ6VXNlcjExOTAxMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/119011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcsrb",
            "html_url": "https://github.com/jcsrb",
            "followers_url": "https://api.github.com/users/jcsrb/followers",
            "following_url": "https://api.github.com/users/jcsrb/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcsrb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcsrb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcsrb/subscriptions",
            "organizations_url": "https://api.github.com/users/jcsrb/orgs",
            "repos_url": "https://api.github.com/users/jcsrb/repos",
            "events_url": "https://api.github.com/users/jcsrb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcsrb/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "what would the correct form be? \n",
        "created_at": "2014-04-24T12:30:23Z",
        "updated_at": "2014-04-24T12:30:23Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11946206",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11946206"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11946206"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11946725",
        "pull_request_review_id": null,
        "id": 11946725,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTQ2NzI1",
        "diff_hunk": "@@ -61,11 +61,16 @@ gulp.task('fonts', function () {\n         .pipe($.size());\n });\n \n+gulp.task('extras', function(){",
        "path": "app/templates/gulpfile.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "original_commit_id": "58bd3f3fc6df1f1fde8958628e9b27b1120c6b60",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`gulp.task('extras', function () {`\n",
        "created_at": "2014-04-24T12:44:53Z",
        "updated_at": "2014-04-24T12:44:53Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11946725",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/11946725"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/93#discussion_r11946725"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/93"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12504340",
        "pull_request_review_id": null,
        "id": 12504340,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA0MzQw",
        "diff_hunk": "@@ -82,6 +82,7 @@ gulp.task('connect', function () {\n         .use(require('connect-livereload')({ port: 35729 }))\n         .use(connect.static('app'))\n         .use(connect.static('.tmp'))\n+        .use('/bower_components', connect.static('bower_components'))",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 4,
        "commit_id": "1ffd2172d5dee6d7cf48b50956b09a401faf57ea",
        "original_commit_id": "7070e940bd24c252c0af15af98f5c4e0e32cbac4",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "there should be a comment here explaining what kind of path you use for referencing bower_components references.\n",
        "created_at": "2014-05-10T14:15:00Z",
        "updated_at": "2014-05-10T19:04:09Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/95#discussion_r12504340",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/95",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12504340"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/95#discussion_r12504340"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/95"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12504549",
        "pull_request_review_id": null,
        "id": 12504549,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA0NTQ5",
        "diff_hunk": "@@ -82,6 +82,7 @@ gulp.task('connect', function () {\n         .use(require('connect-livereload')({ port: 35729 }))\n         .use(connect.static('app'))\n         .use(connect.static('.tmp'))\n+        .use('/bower_components', connect.static('bower_components'))",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 4,
        "commit_id": "1ffd2172d5dee6d7cf48b50956b09a401faf57ea",
        "original_commit_id": "7070e940bd24c252c0af15af98f5c4e0e32cbac4",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You mean `../bower_components` from `index.html` and `../../bower_components` from `main.scss`? Ideally you should never have to write those paths yourself, but in case you have to, won't that be obvious from other paths? I'm not sure what exactly to say in the comments.\n",
        "created_at": "2014-05-10T15:04:28Z",
        "updated_at": "2014-05-10T19:04:09Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/95#discussion_r12504549",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/95",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12504549"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/95#discussion_r12504549"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/95"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12504586",
        "pull_request_review_id": null,
        "id": 12504586,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA0NTg2",
        "diff_hunk": "@@ -82,6 +82,7 @@ gulp.task('connect', function () {\n         .use(require('connect-livereload')({ port: 35729 }))\n         .use(connect.static('app'))\n         .use(connect.static('.tmp'))\n+        .use('/bower_components', connect.static('bower_components'))",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 4,
        "commit_id": "1ffd2172d5dee6d7cf48b50956b09a401faf57ea",
        "original_commit_id": "7070e940bd24c252c0af15af98f5c4e0e32cbac4",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just state what kind of path they have to use. It's obvious for us, but not everyone.\n",
        "created_at": "2014-05-10T15:12:53Z",
        "updated_at": "2014-05-10T19:04:09Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/95#discussion_r12504586",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/95",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12504586"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/95#discussion_r12504586"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/95"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12504661",
        "pull_request_review_id": null,
        "id": 12504661,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA0NjYx",
        "diff_hunk": "@@ -82,6 +82,7 @@ gulp.task('connect', function () {\n         .use(require('connect-livereload')({ port: 35729 }))\n         .use(connect.static('app'))\n         .use(connect.static('.tmp'))\n+        .use('/bower_components', connect.static('bower_components'))",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 4,
        "commit_id": "1ffd2172d5dee6d7cf48b50956b09a401faf57ea",
        "original_commit_id": "7070e940bd24c252c0af15af98f5c4e0e32cbac4",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this ok?\n\n``` js\n// paths to bower_components should be relative to the current file\n// e.g. in app/index.html you should use ../bower_components\n.use('/bower_components', connect.static('bower_components'))\n```\n",
        "created_at": "2014-05-10T15:30:20Z",
        "updated_at": "2014-05-10T19:04:09Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/95#discussion_r12504661",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/95",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12504661"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/95#discussion_r12504661"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/95"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12505598",
        "pull_request_review_id": null,
        "id": 12505598,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA1NTk4",
        "diff_hunk": "@@ -82,6 +82,7 @@ gulp.task('connect', function () {\n         .use(require('connect-livereload')({ port: 35729 }))\n         .use(connect.static('app'))\n         .use(connect.static('.tmp'))\n+        .use('/bower_components', connect.static('bower_components'))",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 4,
        "commit_id": "1ffd2172d5dee6d7cf48b50956b09a401faf57ea",
        "original_commit_id": "7070e940bd24c252c0af15af98f5c4e0e32cbac4",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2014-05-10T18:46:55Z",
        "updated_at": "2014-05-10T19:04:09Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/95#discussion_r12505598",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/95",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12505598"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/95#discussion_r12505598"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/95"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12505969",
        "pull_request_review_id": null,
        "id": 12505969,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA1OTY5",
        "diff_hunk": "@@ -0,0 +1,66 @@\n+# Setting up CoffeeScript\n+\n+With this setup you can freely mix `.js` and `.coffee` files in your `app/scripts` directory, and everything will just work.\n+\n+## Steps\n+\n+### 1. Install the [gulp-coffee](https://github.com/wearefractal/gulp-coffee) plugin\n+\n+```",
        "path": "docs/recipes/coffeescript.md",
        "position": null,
        "original_position": 9,
        "commit_id": "5c950e1115aec7e4738f808bb7a3536fe9daadee",
        "original_commit_id": "fd5bf0ea8e906604cbce1a479f97ab4075b9409c",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``````\n```sh\n``````\n",
        "created_at": "2014-05-10T20:19:18Z",
        "updated_at": "2014-05-10T21:05:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12505969",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12505969"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12505969"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12505970",
        "pull_request_review_id": null,
        "id": 12505970,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA1OTcw",
        "diff_hunk": "@@ -0,0 +1,66 @@\n+# Setting up CoffeeScript\n+\n+With this setup you can freely mix `.js` and `.coffee` files in your `app/scripts` directory, and everything will just work.\n+\n+## Steps\n+\n+### 1. Install the [gulp-coffee](https://github.com/wearefractal/gulp-coffee) plugin\n+\n+```\n+npm install --save-dev gulp-coffee",
        "path": "docs/recipes/coffeescript.md",
        "position": null,
        "original_position": 10,
        "commit_id": "5c950e1115aec7e4738f808bb7a3536fe9daadee",
        "original_commit_id": "fd5bf0ea8e906604cbce1a479f97ab4075b9409c",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "$ npm\n",
        "created_at": "2014-05-10T20:19:24Z",
        "updated_at": "2014-05-10T21:05:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12505970",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12505970"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12505970"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12505977",
        "pull_request_review_id": null,
        "id": 12505977,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA1OTc3",
        "diff_hunk": "@@ -0,0 +1,66 @@\n+# Setting up CoffeeScript\n+\n+With this setup you can freely mix `.js` and `.coffee` files in your `app/scripts` directory, and everything will just work.\n+\n+## Steps\n+\n+### 1. Install the [gulp-coffee](https://github.com/wearefractal/gulp-coffee) plugin\n+\n+```\n+npm install --save-dev gulp-coffee\n+```\n+\n+### 2. Create a `scripts` task\n+\n+This compiles `.coffee` files into the `.tmp` directory.\n+\n+```js\n+gulp.task('scripts', function () {\n+    return gulp.src('app/scripts/**/*.coffee')\n+        .pipe($.coffee())\n+        .pipe(gulp.dest('.tmp/scripts'));\n+});\n+```\n+\n+### 3. Add `scripts` as a dependency of `html` and `serve`\n+\n+```js\n+gulp.task('serve', ['connect', 'styles', 'scripts'], function () {\n+    ...\n+```\n+\n+```js\n+gulp.task('html', ['styles', 'scripts'], function () {\n+    ...\n+```\n+\n+### 4. Edit your watch task\n+\n+Make these two changes (indicated by comments) to ensure that (1) generated `.js` files trigger a live reload, and (2) edits to `.coffee` files trigger recompilation.\n+\n+```js\n+gulp.task('watch', ['connect', 'serve'], function () {\n+    var server = $.livereload();\n+\n+    // watch for changes\n+\n+    gulp.watch([\n+        'app/*.html',\n+        '.tmp/styles/**/*.css',\n+        '{.tmp,app}/scripts/**/*.js', // <--- 1. watch js files in .tmp as well as app\n+        'app/images/**/*'\n+    ]).on('change', function (file) {\n+        server.changed(file.path);\n+    });\n+\n+    gulp.watch('app/styles/**/*.css', ['styles']);\n+    gulp.watch('app/scripts/**/*.coffee', ['scripts']); // <--- 2. recompile whenever .coffee files change\n+    gulp.watch('app/images/**/*', ['images']);\n+    gulp.watch('bower.json', ['wiredep']);\n+});\n+```",
        "path": "docs/recipes/coffeescript.md",
        "position": null,
        "original_position": 61,
        "commit_id": "5c950e1115aec7e4738f808bb7a3536fe9daadee",
        "original_commit_id": "fd5bf0ea8e906604cbce1a479f97ab4075b9409c",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would do a diff here and use the `diff` syntax highlighting. Makes the changes done much clearer.\n",
        "created_at": "2014-05-10T20:20:54Z",
        "updated_at": "2014-05-10T21:05:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12505977",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12505977"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12505977"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12506167",
        "pull_request_review_id": null,
        "id": 12506167,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA2MTY3",
        "diff_hunk": "@@ -17,7 +17,9 @@ Please see our [gulpfile.js](https://github.com/yeoman/generator-gulp-webapp/blo\n * TODO: Mocha Unit Testing with PhantomJS\n * TODO: Optional - Leaner Modernizr builds *(new)*\n \n-For more information on what `generator-gulp-webapp` can do for you, take a look at the [Gulp plugins](https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/_package.json) used in our `package.json`.\n+For more information on what `generator-gulp-webapp` can do for you, take a look at the [gulp plugins](https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/_package.json) used in our `package.json`.\n+\n+We also have [Recipes](https://github.com/yeoman/generator-gulp-webapp/blob/master/docs/recipes/README.md) for integrating other popular technologies like CoffeeScript.",
        "path": "README.md",
        "position": null,
        "original_position": 7,
        "commit_id": "5c950e1115aec7e4738f808bb7a3536fe9daadee",
        "original_commit_id": "d41645b2dd8d6585a4517d0f7ecf14aff876e702",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "github supports relative linking: `[Recipes](docs/recipes/README.md)`\n\nsame with the other one\n",
        "created_at": "2014-05-10T20:58:44Z",
        "updated_at": "2014-05-10T21:05:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12506167",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12506167"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12506167"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12506169",
        "pull_request_review_id": null,
        "id": 12506169,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA2MTY5",
        "diff_hunk": "@@ -17,7 +17,9 @@ Please see our [gulpfile.js](https://github.com/yeoman/generator-gulp-webapp/blo\n * TODO: Mocha Unit Testing with PhantomJS\n * TODO: Optional - Leaner Modernizr builds *(new)*\n \n-For more information on what `generator-gulp-webapp` can do for you, take a look at the [Gulp plugins](https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/_package.json) used in our `package.json`.\n+For more information on what `generator-gulp-webapp` can do for you, take a look at the [gulp plugins](https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/_package.json) used in our `package.json`.",
        "path": "README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "5c950e1115aec7e4738f808bb7a3536fe9daadee",
        "original_commit_id": "d41645b2dd8d6585a4517d0f7ecf14aff876e702",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "relative link here too\n",
        "created_at": "2014-05-10T20:59:05Z",
        "updated_at": "2014-05-10T21:05:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12506169",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12506169"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12506169"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12506170",
        "pull_request_review_id": null,
        "id": 12506170,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA2MTcw",
        "diff_hunk": "@@ -0,0 +1,3 @@\n+# Recipes\n+\n+- [Setting up CoffeeScript](https://github.com/yeoman/generator-gulp-webapp/blob/master/docs/recipes/coffeescript.md)",
        "path": "docs/recipes/README.md",
        "position": null,
        "original_position": 3,
        "commit_id": "5c950e1115aec7e4738f808bb7a3536fe9daadee",
        "original_commit_id": "d41645b2dd8d6585a4517d0f7ecf14aff876e702",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "and here\n",
        "created_at": "2014-05-10T20:59:09Z",
        "updated_at": "2014-05-10T21:05:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12506170",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12506170"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12506170"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12506175",
        "pull_request_review_id": null,
        "id": 12506175,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA2MTc1",
        "diff_hunk": "@@ -0,0 +1,66 @@\n+# Setting up CoffeeScript\n+\n+With this setup you can freely mix `.js` and `.coffee` files in your `app/scripts` directory, and everything will just work.\n+\n+## Steps\n+\n+### 1. Install the [gulp-coffee](https://github.com/wearefractal/gulp-coffee) plugin\n+\n+```sh\n+$ npm install --save-dev gulp-coffee\n+```\n+\n+### 2. Create a `scripts` task\n+\n+This compiles `.coffee` files into the `.tmp` directory.\n+\n+```js\n+gulp.task('scripts', function () {\n+    return gulp.src('app/scripts/**/*.coffee')\n+        .pipe($.coffee())\n+        .pipe(gulp.dest('.tmp/scripts'));\n+});\n+```\n+\n+### 3. Add `scripts` as a dependency of `html` and `serve`\n+\n+```js\n+gulp.task('serve', ['connect', 'styles', 'scripts'], function () {\n+    ...\n+```\n+\n+```js\n+gulp.task('html', ['styles', 'scripts'], function () {\n+    ...\n+```\n+\n+### 4. Edit your `watch` task\n+\n+These changes ensure that\n+\n+1. generated `.js` files trigger a live reload, and\n+2. edits to `.coffee` files trigger recompilation.",
        "path": "docs/recipes/coffeescript.md",
        "position": null,
        "original_position": 42,
        "commit_id": "5c950e1115aec7e4738f808bb7a3536fe9daadee",
        "original_commit_id": "a8c29e42950e3656f4dc1dc0e768d44a3c0ab9a4",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no need for list, just make it one sentence.\n",
        "created_at": "2014-05-10T21:01:14Z",
        "updated_at": "2014-05-10T21:05:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12506175",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12506175"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12506175"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12506178",
        "pull_request_review_id": null,
        "id": 12506178,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTA2MTc4",
        "diff_hunk": "@@ -0,0 +1,66 @@\n+# Setting up CoffeeScript\n+\n+With this setup you can freely mix `.js` and `.coffee` files in your `app/scripts` directory, and everything will just work.\n+\n+## Steps\n+\n+### 1. Install the [gulp-coffee](https://github.com/wearefractal/gulp-coffee) plugin\n+\n+```sh\n+$ npm install --save-dev gulp-coffee\n+```\n+\n+### 2. Create a `scripts` task\n+\n+This compiles `.coffee` files into the `.tmp` directory.\n+\n+```js\n+gulp.task('scripts', function () {\n+    return gulp.src('app/scripts/**/*.coffee')\n+        .pipe($.coffee())\n+        .pipe(gulp.dest('.tmp/scripts'));\n+});\n+```\n+\n+### 3. Add `scripts` as a dependency of `html` and `serve`\n+\n+```js\n+gulp.task('serve', ['connect', 'styles', 'scripts'], function () {\n+    ...\n+```\n+\n+```js\n+gulp.task('html', ['styles', 'scripts'], function () {\n+    ...\n+```\n+\n+### 4. Edit your `watch` task\n+\n+These changes ensure that\n+\n+1. generated `.js` files trigger a live reload, and\n+2. edits to `.coffee` files trigger recompilation.\n+\n+```diff\n+gulp.task('watch', ['connect', 'serve'], function () {\n+     gulp.watch([\n+         'app/*.html',\n+         '.tmp/styles/**/*.css',\n+-        'app/scripts/**/*.js',\n++        '{.tmp,app}/scripts/**/*.js',\n+         'app/images/**/*'\n+     ]).on('change', function (file) {\n+         server.changed(file.path);\n+     });\n+\n+     gulp.watch('app/styles/**/*.scss', ['styles']);\n++    gulp.watch('app/scripts/**/*.coffee', ['scripts']);\n+     gulp.watch('app/images/**/*', ['images']);\n+     gulp.watch('bower.json', ['wiredep']);\n+ });\n+```\n+\n+## Usage\n+\n+- Just put your `.coffee` files in `app/scripts`, and include them in your HTML as if they're `.js` files (e.g. `app/scripts/foo.coffee` => `<script src=\"scripts/foo.js\"></script>`).",
        "path": "docs/recipes/coffeescript.md",
        "position": null,
        "original_position": 65,
        "commit_id": "5c950e1115aec7e4738f808bb7a3536fe9daadee",
        "original_commit_id": "a8c29e42950e3656f4dc1dc0e768d44a3c0ab9a4",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`just` is a antiword. Just (:P) use `Put your ..`\n",
        "created_at": "2014-05-10T21:01:53Z",
        "updated_at": "2014-05-10T21:05:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12506178",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12506178"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/119#discussion_r12506178"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/119"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12553992",
        "pull_request_review_id": null,
        "id": 12553992,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTUzOTky",
        "diff_hunk": "@@ -0,0 +1,252 @@\n+# Setting up Jade\n+\n+This recipe demonstrates how to set up [Jade](http://jade-lang.com/) as your\n+HTML template engine. In a similar way you can implement a different engine,\n+like [Haml](http://haml.info/).",
        "path": "docs/recipes/jade.md",
        "position": null,
        "original_position": 5,
        "commit_id": "369df4dc12c33cdf461a4210e740eb21faeabd1d",
        "original_commit_id": "dae75e43c171a0b81004d1e4ada353869ff73c0e",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we prefer not to use a hard line break\n",
        "created_at": "2014-05-12T21:16:05Z",
        "updated_at": "2014-05-12T21:26:15Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12553992",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12553992"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12553992"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554232",
        "pull_request_review_id": null,
        "id": 12554232,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTU0MjMy",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+# Setting up Jade\n+\n+This recipe demonstrates how to set up [Jade](http://jade-lang.com/) as your HTML template engine. In a similar way you can implement a different engine, like [Haml](http://haml.info/).\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install the Jade gulp plugin:\n+\n+```sh\n+$ npm install --save-dev gulp-jade",
        "path": "docs/recipes/jade.md",
        "position": 12,
        "original_position": 12,
        "commit_id": "369df4dc12c33cdf461a4210e740eb21faeabd1d",
        "original_commit_id": "ac8fab6a1135df870bf124f420aa5d25491bbe64",
        "user": {
            "login": "eddiemonge",
            "id": 127535,
            "node_id": "MDQ6VXNlcjEyNzUzNQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/127535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eddiemonge",
            "html_url": "https://github.com/eddiemonge",
            "followers_url": "https://api.github.com/users/eddiemonge/followers",
            "following_url": "https://api.github.com/users/eddiemonge/following{/other_user}",
            "gists_url": "https://api.github.com/users/eddiemonge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eddiemonge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eddiemonge/subscriptions",
            "organizations_url": "https://api.github.com/users/eddiemonge/orgs",
            "repos_url": "https://api.github.com/users/eddiemonge/repos",
            "events_url": "https://api.github.com/users/eddiemonge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eddiemonge/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "are the starting `$` everywhere in these recipes? makes copy/pasting harder\n",
        "created_at": "2014-05-12T21:20:39Z",
        "updated_at": "2014-05-12T21:26:15Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554232",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554232"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554232"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554302",
        "pull_request_review_id": null,
        "id": 12554302,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTU0MzAy",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+# Setting up Jade\n+\n+This recipe demonstrates how to set up [Jade](http://jade-lang.com/) as your HTML template engine. In a similar way you can implement a different engine, like [Haml](http://haml.info/).\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install the Jade gulp plugin:\n+\n+```sh\n+$ npm install --save-dev gulp-jade\n+```\n+\n+### 2. Create a `views` task\n+\n+Add this task to your `gulpfile.js`, it will compile `.jade` files to `.tmp`:\n+\n+```js\n+gulp.task('views', function () {\n+    return gulp.src(['app/*.jade', '!app/layout.jade'])\n+        .pipe($.jade({pretty: true}))\n+        .pipe(gulp.dest('.tmp'));\n+});\n+```\n+\n+* This assumes your layout file is `app/layout.jade`, if it's not, rename the path accordingly.\n+* We are ignoring the layout file, otherwise it would compile to `.tmp/layout.html`.\n+* We are passing `pretty: true` as an option to get a nice HTML output, otherwise Jade would output the HTML on a single line, which would break our comment blocks for wiredep and useref.\n+\n+### 3. Add `views` as a dependency of both `html` and `serve`\n+\n+```js\n+gulp.task('html', ['views', 'styles', 'scripts'], function () {\n+    // ...\n+```\n+\n+```js\n+gulp.task('serve', ['connect', 'views', 'styles'], function () {\n+    // ...\n+```\n+\n+### 4. Update other tasks\n+\n+#### `html`\n+\n+We want to parse the compiled HTML:\n+\n+```diff\n+gulp.task('html', ['views', 'styles', 'scripts'], function () {\n+    var jsFilter = $.filter('**/*.js');\n+    var cssFilter = $.filter('**/*.css');\n+\n+-   return gulp.src('app/*.html')\n++   return gulp.src('.tmp/*.html')\n+        .pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n+        .pipe(jsFilter)\n+        .pipe($.uglify())\n+        .pipe(jsFilter.restore())\n+        .pipe(cssFilter)\n+        .pipe($.csso())\n+        .pipe(cssFilter.restore())\n+        .pipe($.useref.restore())\n+        .pipe($.useref())\n+        .pipe(gulp.dest('dist'))\n+        .pipe($.size());\n+});\n+```\n+\n+#### `extras`\n+\n+We don't want to copy over `.jade` files in the build process:\n+\n+```diff\n+gulp.task('extras', function () {\n+-   return gulp.src(['app/*.*', '!app/*.html'], { dot: true })\n++   return gulp.src(['app/*.*', '!app/*.jade'], { dot: true })\n+        .pipe(gulp.dest('dist'));\n+});\n+```\n+\n+#### `wiredep`\n+\n+Wiredep supports Jade:\n+\n+```diff\n+gulp.task('wiredep', function () {\n+    var wiredep = require('wiredep').stream;\n+\n+    gulp.src('app/styles/*.scss')\n+        .pipe(wiredep({\n+            directory: 'app/bower_components'\n+        }))\n+        .pipe(gulp.dest('app/styles'));\n+\n+-   gulp.src('app/*.html')\n++   gulp.src('app/*.jade')\n+        .pipe(wiredep({\n+            directory: 'app/bower_components',\n+            exclude: ['bootstrap-sass-official']\n+        }))\n+        .pipe(gulp.dest('app'));\n+});\n+```\n+\n+#### `watch`\n+\n+Recompile Jade templates on each change and refresh the browser after an HTML file is compiled:\n+\n+```diff\n+gulp.task('watch', ['connect', 'serve'], function () {\n+    var server = $.livereload();\n+\n+    // watch for changes\n+\n+    gulp.watch([\n+-       'app/*.html',\n++       '.tmp/*.html',\n+        '.tmp/styles/**/*.css',\n+        'app/scripts/**/*.js',\n+        'app/images/**/*'\n+    ]).on('change', function (file) {\n+        server.changed(file.path);\n+    });\n+\n++   gulp.watch('app/*.jade', ['views']);\n+    gulp.watch('app/styles/**/*.scss', ['styles']);\n+    gulp.watch('app/scripts/**/*.js', ['scripts']);\n+    gulp.watch('app/images/**/*', ['images']);\n+    gulp.watch('bower.json', ['wiredep']);\n+});\n+```\n+\n+### 5. Rewrite `index.html` as `layout.jade` + `index.jade`\n+\n+This is just one way to do it, organize your templates however you want.\n+\n+`app/layout.jade`:\n+\n+```jade\n+doctype html\n+html.no-js\n+    head\n+        meta(charset='utf-8')\n+        title My Webapp\n+        meta(name='description' content='')\n+        meta(name='viewport' content='width=device-width, initial-scale=1')\n+        // Place favicon.ico and apple-touch-icon.png in the root directory\n+\n+        // build:css styles/vendor.css\n+        // bower:css\n+        // endbower\n+        // endbuild\n+\n+        // build:css styles/main.css\n+        link(rel='stylesheet' href='styles/main.css')\n+        // endbuild\n+\n+        // build:js scripts/vendor/modernizr.js\n+        script(src='../bower_components/modernizr/modernizr.js')\n+        // endbuild\n+\n+    body\n+        | <!--[if lt IE 10]>\n+        |     <p class=\"browsehappy\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.</p>\n+        | <![endif]-->\n+\n+        .container\n+            .header\n+                ul.nav.nav-pills.pull-right\n+                    li.active: a(href='#') Home\n+                    li: a(href='#') About\n+                    li: a(href='#') Contact\n+\n+                h3.text-muted My Webapp\n+\n+            .jumbotron\n+                h1 'Allo, 'Allo!\n+                p.lead Always a pleasure scaffolding your apps.\n+                p: a.btn.btn-lg.btn-success(href='#') Splendid!\n+\n+            block content\n+\n+            .footer\n+                p \u2665 from the Yeoman team\n+\n+        // Google Analytics: change UA-XXXXX-X to be your site's ID.\n+        script.\n+            (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=\n+            function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;\n+            e=o.createElement(i);r=o.getElementsByTagName(i)[0];\n+            e.src='//www.google-analytics.com/analytics.js';\n+            r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n+            ga('create','UA-XXXXX-X');ga('send','pageview');\n+\n+        // build:js scripts/vendor.js\n+        // bower:js\n+        script(src='../bower_components/jquery/dist/jquery.js')\n+        // endbower\n+        // endbuild\n+\n+        // build:js scripts/plugins.js\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/affix.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/alert.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/dropdown.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/tooltip.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/modal.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/transition.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/button.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/popover.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/carousel.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/scrollspy.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/collapse.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/tab.js')\n+        // endbuild\n+\n+        // build:js scripts/main.js\n+        script(src='scripts/main.js')\n+        // endbuild\n+```\n+\n+`app/index.jade`:\n+\n+```jade\n+extends layout\n+\n+block content\n+    .row.marketing\n+        .col-lg-6\n+            h4 HTML5 Boilerplate\n+            p HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites.\n+\n+            h4 Sass\n+            p Sass is the most mature, stable, and powerful professional grade CSS extension language in the world.\n+\n+            h4 Bootstrap\n+            p Sleek, intuitive, and powerful mobile first front-end framework for faster and easier web development.\n+\n+            h4 Modernizr\n+            p Modernizr is an open-source JavaScript library that helps you build the next generation of HTML5 and CSS3-powered websites.\n+```\n+\n+### 6. Celebrate\n+\n+This wasn't exactly the simplest recipe in the world, go grab a :beer: or something.",
        "path": "docs/recipes/jade.md",
        "position": null,
        "original_position": 245,
        "commit_id": "369df4dc12c33cdf461a4210e740eb21faeabd1d",
        "original_commit_id": "ac8fab6a1135df870bf124f420aa5d25491bbe64",
        "user": {
            "login": "eddiemonge",
            "id": 127535,
            "node_id": "MDQ6VXNlcjEyNzUzNQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/127535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eddiemonge",
            "html_url": "https://github.com/eddiemonge",
            "followers_url": "https://api.github.com/users/eddiemonge/followers",
            "following_url": "https://api.github.com/users/eddiemonge/following{/other_user}",
            "gists_url": "https://api.github.com/users/eddiemonge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eddiemonge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eddiemonge/subscriptions",
            "organizations_url": "https://api.github.com/users/eddiemonge/orgs",
            "repos_url": "https://api.github.com/users/eddiemonge/repos",
            "events_url": "https://api.github.com/users/eddiemonge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eddiemonge/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/,/;/\n",
        "created_at": "2014-05-12T21:21:55Z",
        "updated_at": "2014-05-12T21:26:15Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554302",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554302"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554302"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554383",
        "pull_request_review_id": null,
        "id": 12554383,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTU0Mzgz",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+# Setting up Jade\n+\n+This recipe demonstrates how to set up [Jade](http://jade-lang.com/) as your HTML template engine. In a similar way you can implement a different engine, like [Haml](http://haml.info/).\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install the Jade gulp plugin:\n+\n+```sh\n+$ npm install --save-dev gulp-jade",
        "path": "docs/recipes/jade.md",
        "position": 12,
        "original_position": 12,
        "commit_id": "369df4dc12c33cdf461a4210e740eb21faeabd1d",
        "original_commit_id": "ac8fab6a1135df870bf124f420aa5d25491bbe64",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, it's a convention we both seem to use. But you're right that it makes copy/pasting harder, it would be ideal if GitHub could allow us to prepend it with a `::before`... Do we remove it then?\n",
        "created_at": "2014-05-12T21:23:19Z",
        "updated_at": "2014-05-12T21:26:15Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554383",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554383"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554383"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554534",
        "pull_request_review_id": null,
        "id": 12554534,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTU0NTM0",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+# Setting up Jade\n+\n+This recipe demonstrates how to set up [Jade](http://jade-lang.com/) as your HTML template engine. In a similar way you can implement a different engine, like [Haml](http://haml.info/).\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install the Jade gulp plugin:\n+\n+```sh\n+$ npm install --save-dev gulp-jade\n+```\n+\n+### 2. Create a `views` task\n+\n+Add this task to your `gulpfile.js`, it will compile `.jade` files to `.tmp`:\n+\n+```js\n+gulp.task('views', function () {\n+    return gulp.src(['app/*.jade', '!app/layout.jade'])\n+        .pipe($.jade({pretty: true}))\n+        .pipe(gulp.dest('.tmp'));\n+});\n+```\n+\n+* This assumes your layout file is `app/layout.jade`, if it's not, rename the path accordingly.\n+* We are ignoring the layout file, otherwise it would compile to `.tmp/layout.html`.\n+* We are passing `pretty: true` as an option to get a nice HTML output, otherwise Jade would output the HTML on a single line, which would break our comment blocks for wiredep and useref.\n+\n+### 3. Add `views` as a dependency of both `html` and `serve`\n+\n+```js\n+gulp.task('html', ['views', 'styles', 'scripts'], function () {\n+    // ...\n+```\n+\n+```js\n+gulp.task('serve', ['connect', 'views', 'styles'], function () {\n+    // ...\n+```\n+\n+### 4. Update other tasks\n+\n+#### `html`\n+\n+We want to parse the compiled HTML:\n+\n+```diff\n+gulp.task('html', ['views', 'styles', 'scripts'], function () {\n+    var jsFilter = $.filter('**/*.js');\n+    var cssFilter = $.filter('**/*.css');\n+\n+-   return gulp.src('app/*.html')\n++   return gulp.src('.tmp/*.html')\n+        .pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n+        .pipe(jsFilter)\n+        .pipe($.uglify())\n+        .pipe(jsFilter.restore())\n+        .pipe(cssFilter)\n+        .pipe($.csso())\n+        .pipe(cssFilter.restore())\n+        .pipe($.useref.restore())\n+        .pipe($.useref())\n+        .pipe(gulp.dest('dist'))\n+        .pipe($.size());\n+});\n+```\n+\n+#### `extras`\n+\n+We don't want to copy over `.jade` files in the build process:\n+\n+```diff\n+gulp.task('extras', function () {\n+-   return gulp.src(['app/*.*', '!app/*.html'], { dot: true })\n++   return gulp.src(['app/*.*', '!app/*.jade'], { dot: true })\n+        .pipe(gulp.dest('dist'));\n+});\n+```\n+\n+#### `wiredep`\n+\n+Wiredep supports Jade:\n+\n+```diff\n+gulp.task('wiredep', function () {\n+    var wiredep = require('wiredep').stream;\n+\n+    gulp.src('app/styles/*.scss')\n+        .pipe(wiredep({\n+            directory: 'app/bower_components'\n+        }))\n+        .pipe(gulp.dest('app/styles'));\n+\n+-   gulp.src('app/*.html')\n++   gulp.src('app/*.jade')\n+        .pipe(wiredep({\n+            directory: 'app/bower_components',\n+            exclude: ['bootstrap-sass-official']\n+        }))\n+        .pipe(gulp.dest('app'));\n+});\n+```\n+\n+#### `watch`\n+\n+Recompile Jade templates on each change and refresh the browser after an HTML file is compiled:\n+\n+```diff\n+gulp.task('watch', ['connect', 'serve'], function () {\n+    var server = $.livereload();\n+\n+    // watch for changes\n+\n+    gulp.watch([\n+-       'app/*.html',\n++       '.tmp/*.html',\n+        '.tmp/styles/**/*.css',\n+        'app/scripts/**/*.js',\n+        'app/images/**/*'\n+    ]).on('change', function (file) {\n+        server.changed(file.path);\n+    });\n+\n++   gulp.watch('app/*.jade', ['views']);\n+    gulp.watch('app/styles/**/*.scss', ['styles']);\n+    gulp.watch('app/scripts/**/*.js', ['scripts']);\n+    gulp.watch('app/images/**/*', ['images']);\n+    gulp.watch('bower.json', ['wiredep']);\n+});\n+```\n+\n+### 5. Rewrite `index.html` as `layout.jade` + `index.jade`\n+\n+This is just one way to do it, organize your templates however you want.\n+\n+`app/layout.jade`:\n+\n+```jade\n+doctype html\n+html.no-js\n+    head\n+        meta(charset='utf-8')\n+        title My Webapp\n+        meta(name='description' content='')\n+        meta(name='viewport' content='width=device-width, initial-scale=1')\n+        // Place favicon.ico and apple-touch-icon.png in the root directory\n+\n+        // build:css styles/vendor.css\n+        // bower:css\n+        // endbower\n+        // endbuild\n+\n+        // build:css styles/main.css\n+        link(rel='stylesheet' href='styles/main.css')\n+        // endbuild\n+\n+        // build:js scripts/vendor/modernizr.js\n+        script(src='../bower_components/modernizr/modernizr.js')\n+        // endbuild\n+\n+    body\n+        | <!--[if lt IE 10]>\n+        |     <p class=\"browsehappy\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.</p>\n+        | <![endif]-->\n+\n+        .container\n+            .header\n+                ul.nav.nav-pills.pull-right\n+                    li.active: a(href='#') Home\n+                    li: a(href='#') About\n+                    li: a(href='#') Contact\n+\n+                h3.text-muted My Webapp\n+\n+            .jumbotron\n+                h1 'Allo, 'Allo!\n+                p.lead Always a pleasure scaffolding your apps.\n+                p: a.btn.btn-lg.btn-success(href='#') Splendid!\n+\n+            block content\n+\n+            .footer\n+                p \u2665 from the Yeoman team\n+\n+        // Google Analytics: change UA-XXXXX-X to be your site's ID.\n+        script.\n+            (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=\n+            function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;\n+            e=o.createElement(i);r=o.getElementsByTagName(i)[0];\n+            e.src='//www.google-analytics.com/analytics.js';\n+            r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n+            ga('create','UA-XXXXX-X');ga('send','pageview');\n+\n+        // build:js scripts/vendor.js\n+        // bower:js\n+        script(src='../bower_components/jquery/dist/jquery.js')\n+        // endbower\n+        // endbuild\n+\n+        // build:js scripts/plugins.js\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/affix.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/alert.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/dropdown.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/tooltip.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/modal.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/transition.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/button.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/popover.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/carousel.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/scrollspy.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/collapse.js')\n+        script(src='../bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap/tab.js')\n+        // endbuild\n+\n+        // build:js scripts/main.js\n+        script(src='scripts/main.js')\n+        // endbuild\n+```\n+\n+`app/index.jade`:\n+\n+```jade\n+extends layout\n+\n+block content\n+    .row.marketing\n+        .col-lg-6\n+            h4 HTML5 Boilerplate\n+            p HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites.\n+\n+            h4 Sass\n+            p Sass is the most mature, stable, and powerful professional grade CSS extension language in the world.\n+\n+            h4 Bootstrap\n+            p Sleek, intuitive, and powerful mobile first front-end framework for faster and easier web development.\n+\n+            h4 Modernizr\n+            p Modernizr is an open-source JavaScript library that helps you build the next generation of HTML5 and CSS3-powered websites.\n+```\n+\n+### 6. Celebrate\n+\n+This wasn't exactly the simplest recipe in the world, go grab a :beer: or something.",
        "path": "docs/recipes/jade.md",
        "position": null,
        "original_position": 245,
        "commit_id": "369df4dc12c33cdf461a4210e740eb21faeabd1d",
        "original_commit_id": "ac8fab6a1135df870bf124f420aa5d25491bbe64",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.\n",
        "created_at": "2014-05-12T21:26:24Z",
        "updated_at": "2014-05-12T21:26:24Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554534",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554534"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554534"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554588",
        "pull_request_review_id": null,
        "id": 12554588,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTU0NTg4",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+# Setting up Jade\n+\n+This recipe demonstrates how to set up [Jade](http://jade-lang.com/) as your HTML template engine. In a similar way you can implement a different engine, like [Haml](http://haml.info/).\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install the Jade gulp plugin:\n+\n+```sh\n+$ npm install --save-dev gulp-jade",
        "path": "docs/recipes/jade.md",
        "position": 12,
        "original_position": 12,
        "commit_id": "369df4dc12c33cdf461a4210e740eb21faeabd1d",
        "original_commit_id": "ac8fab6a1135df870bf124f420aa5d25491bbe64",
        "user": {
            "login": "callumlocke",
            "id": 250617,
            "node_id": "MDQ6VXNlcjI1MDYxNw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/250617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/callumlocke",
            "html_url": "https://github.com/callumlocke",
            "followers_url": "https://api.github.com/users/callumlocke/followers",
            "following_url": "https://api.github.com/users/callumlocke/following{/other_user}",
            "gists_url": "https://api.github.com/users/callumlocke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/callumlocke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/callumlocke/subscriptions",
            "organizations_url": "https://api.github.com/users/callumlocke/orgs",
            "repos_url": "https://api.github.com/users/callumlocke/repos",
            "events_url": "https://api.github.com/users/callumlocke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/callumlocke/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I didn't use it in mine originally but sindre said add it... I guess the $ makes it clearer that it's a command, which is the most important thing\n",
        "created_at": "2014-05-12T21:27:34Z",
        "updated_at": "2014-05-12T21:27:34Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554588",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554588"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554588"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554615",
        "pull_request_review_id": null,
        "id": 12554615,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTU0NjE1",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+# Setting up Jade\n+\n+This recipe demonstrates how to set up [Jade](http://jade-lang.com/) as your HTML template engine. In a similar way you can implement a different engine, like [Haml](http://haml.info/).\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install the Jade gulp plugin:\n+\n+```sh\n+$ npm install --save-dev gulp-jade",
        "path": "docs/recipes/jade.md",
        "position": 12,
        "original_position": 12,
        "commit_id": "369df4dc12c33cdf461a4210e740eb21faeabd1d",
        "original_commit_id": "ac8fab6a1135df870bf124f420aa5d25491bbe64",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why would you copy paste it? It's much faster just typing it in. It's mostly just for beginners anyways.\n",
        "created_at": "2014-05-12T21:28:05Z",
        "updated_at": "2014-05-12T21:28:05Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554615",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554615"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554615"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554725",
        "pull_request_review_id": null,
        "id": 12554725,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTU0NzI1",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+# Setting up Jade\n+\n+This recipe demonstrates how to set up [Jade](http://jade-lang.com/) as your HTML template engine. In a similar way you can implement a different engine, like [Haml](http://haml.info/).\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install the Jade gulp plugin:\n+\n+```sh\n+$ npm install --save-dev gulp-jade",
        "path": "docs/recipes/jade.md",
        "position": 12,
        "original_position": 12,
        "commit_id": "369df4dc12c33cdf461a4210e740eb21faeabd1d",
        "original_commit_id": "ac8fab6a1135df870bf124f420aa5d25491bbe64",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, I don't copy/paste because I don't memorize anything that way.\n",
        "created_at": "2014-05-12T21:30:01Z",
        "updated_at": "2014-05-12T21:30:01Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554725",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554725"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554725"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554750",
        "pull_request_review_id": null,
        "id": 12554750,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTU0NzUw",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+# Setting up Jade\n+\n+This recipe demonstrates how to set up [Jade](http://jade-lang.com/) as your HTML template engine. In a similar way you can implement a different engine, like [Haml](http://haml.info/).\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install the Jade gulp plugin:\n+\n+```sh\n+$ npm install --save-dev gulp-jade",
        "path": "docs/recipes/jade.md",
        "position": 12,
        "original_position": 12,
        "commit_id": "369df4dc12c33cdf461a4210e740eb21faeabd1d",
        "original_commit_id": "ac8fab6a1135df870bf124f420aa5d25491bbe64",
        "user": {
            "login": "eddiemonge",
            "id": 127535,
            "node_id": "MDQ6VXNlcjEyNzUzNQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/127535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eddiemonge",
            "html_url": "https://github.com/eddiemonge",
            "followers_url": "https://api.github.com/users/eddiemonge/followers",
            "following_url": "https://api.github.com/users/eddiemonge/following{/other_user}",
            "gists_url": "https://api.github.com/users/eddiemonge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eddiemonge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eddiemonge/subscriptions",
            "organizations_url": "https://api.github.com/users/eddiemonge/orgs",
            "repos_url": "https://api.github.com/users/eddiemonge/repos",
            "events_url": "https://api.github.com/users/eddiemonge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eddiemonge/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "some people have issues typing. also faster to copy when you are reading then switch and paste it in\n",
        "created_at": "2014-05-12T21:30:24Z",
        "updated_at": "2014-05-12T21:30:24Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554750",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554750"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554750"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554806",
        "pull_request_review_id": null,
        "id": 12554806,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTU0ODA2",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+# Setting up Jade\n+\n+This recipe demonstrates how to set up [Jade](http://jade-lang.com/) as your HTML template engine. In a similar way you can implement a different engine, like [Haml](http://haml.info/).\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install the Jade gulp plugin:\n+\n+```sh\n+$ npm install --save-dev gulp-jade",
        "path": "docs/recipes/jade.md",
        "position": 12,
        "original_position": 12,
        "commit_id": "369df4dc12c33cdf461a4210e740eb21faeabd1d",
        "original_commit_id": "ac8fab6a1135df870bf124f420aa5d25491bbe64",
        "user": {
            "login": "callumlocke",
            "id": 250617,
            "node_id": "MDQ6VXNlcjI1MDYxNw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/250617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/callumlocke",
            "html_url": "https://github.com/callumlocke",
            "followers_url": "https://api.github.com/users/callumlocke/followers",
            "following_url": "https://api.github.com/users/callumlocke/following{/other_user}",
            "gists_url": "https://api.github.com/users/callumlocke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/callumlocke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/callumlocke/subscriptions",
            "organizations_url": "https://api.github.com/users/callumlocke/orgs",
            "repos_url": "https://api.github.com/users/callumlocke/repos",
            "events_url": "https://api.github.com/users/callumlocke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/callumlocke/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "But it's only marginally harder to copy\n",
        "created_at": "2014-05-12T21:31:34Z",
        "updated_at": "2014-05-12T21:31:34Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554806",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12554806"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/130#discussion_r12554806"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/130"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12614410",
        "pull_request_review_id": null,
        "id": 12614410,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjE0NDEw",
        "diff_hunk": "@@ -5,6 +5,7 @@\n - [Less](less.md)\n - [Jade](jade.md)\n - [GitHub Pages](gh-pages.md)\n+- [revving](revving.md)",
        "path": "docs/recipes/README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "6b98b78e4bf4266b55f5f149ee70ed5affca6b9e",
        "original_commit_id": "5013e37931c4c6b224fadd9facf03cdaeaa60fdb",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "revving => Asset revisioning\n",
        "created_at": "2014-05-13T23:21:48Z",
        "updated_at": "2014-05-13T23:40:25Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/134#discussion_r12614410",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/134",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12614410"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/134#discussion_r12614410"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12614466",
        "pull_request_review_id": null,
        "id": 12614466,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjE0NDY2",
        "diff_hunk": "@@ -0,0 +1,46 @@\n+# Static asset revisioning\n+\n+This recipe demonstrates how to set up simple static asset revisioning (aka *revving*) for scripts and styles by appending content hash to their filenames `unicorn.css` \u2192 `unicorn-098f6bcd.css`.\n+\n+Make sure to set the files to [never expire](http://developer.yahoo.com/performance/rules.html#expires) for this to have an effect.\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install these gulp plugins:\n+\n+```\n+$ npm install --save-dev gulp-rev gulp-rev-replace\n+```\n+\n+* gulp-rev appends content hashes\n+* gulp-rev-replace updates references to those files\n+\n+### 2. Update the `html` task\n+\n+Instead of wasting performance reading scripts and styles into a new stream, we can notice that we already have that stream available in the `html` task, so we can just perform revving there:\n+\n+```diff\n+gulp.task('html', ['styles'], function () {\n+    var jsFilter = $.filter('**/*.js');\n+    var cssFilter = $.filter('**/*.css');\n+\n+    return gulp.src('app/*.html')\n+        .pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n+        .pipe(jsFilter)\n+        .pipe($.uglify())\n+        .pipe(jsFilter.restore())\n+        .pipe(cssFilter)\n+        .pipe($.csso())\n+        .pipe(cssFilter.restore())\n++       .pipe($.rev())",
        "path": "docs/recipes/revving.md",
        "position": 37,
        "original_position": 37,
        "commit_id": "6b98b78e4bf4266b55f5f149ee70ed5affca6b9e",
        "original_commit_id": "5013e37931c4c6b224fadd9facf03cdaeaa60fdb",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "explain why the two rev plugins are placed like this.\n",
        "created_at": "2014-05-13T23:23:45Z",
        "updated_at": "2014-05-13T23:40:25Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/134#discussion_r12614466",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/134",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12614466"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/134#discussion_r12614466"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12614478",
        "pull_request_review_id": null,
        "id": 12614478,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjE0NDc4",
        "diff_hunk": "@@ -0,0 +1,46 @@\n+# Static asset revisioning\n+\n+This recipe demonstrates how to set up simple static asset revisioning (aka *revving*) for scripts and styles by appending content hash to their filenames `unicorn.css` \u2192 `unicorn-098f6bcd.css`.\n+\n+Make sure to set the files to [never expire](http://developer.yahoo.com/performance/rules.html#expires) for this to have an effect.\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install these gulp plugins:\n+\n+```\n+$ npm install --save-dev gulp-rev gulp-rev-replace\n+```\n+\n+* gulp-rev appends content hashes\n+* gulp-rev-replace updates references to those files",
        "path": "docs/recipes/revving.md",
        "position": null,
        "original_position": 18,
        "commit_id": "6b98b78e4bf4266b55f5f149ee70ed5affca6b9e",
        "original_commit_id": "5013e37931c4c6b224fadd9facf03cdaeaa60fdb",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "linkify the names\n",
        "created_at": "2014-05-13T23:24:12Z",
        "updated_at": "2014-05-13T23:40:25Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/134#discussion_r12614478",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/134",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12614478"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/134#discussion_r12614478"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12667813",
        "pull_request_review_id": null,
        "id": 12667813,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjY3ODEz",
        "diff_hunk": "@@ -2,55 +2,54 @@\n \n Deploying your app using `git subtree` allows the use of [GitHub Pages](https://pages.github.com). Your `gh-pages` branch will contain the files from `dist`.\n \n+\n ## Steps\n \n ### Prerequisites\n-1. If not already available, [install `git subtree`](http://engineeredweb.com/blog/how-to-install-git-subtree).\n-2. Your generated app is in a GitHub-hosted repository and set as your `origin` remote.\n \n+1. If not already available, [install git-subtree](http://engineeredweb.com/blog/how-to-install-git-subtree).\n+2. Ensure your generated app is in a GitHub-hosted repository that is set as your `origin` remote.\n+\n+> You can check your remotes with `$ git remote -v`. See [Adding a remote](https://help.github.com/articles/adding-a-remote) for more info.\n \n-### 1. Install [`gulp-subtree`](https://github.com/Snugug/gulp-subtree)\n+### 1. Install [gulp-subtree](https://github.com/Snugug/gulp-subtree)\n \n ```sh\n $ npm install --save-dev gulp-subtree\n ```\n \n-\n ### 2. Create a `deploy` task\n \n-This will run the build task, then push it to the `gh-pages` branch.\n+This will run the build task, then push it to the `gh-pages` branch:\n \n ```js\n gulp.task('deploy', ['build'], function () {\n     return gulp.src('dist')\n         .pipe($.subtree())\n-        .pipe($.clean()); \n+        .pipe($.clean());\n });\n ```\n \n-\n-### 3. Remove `dist` from `.gitignore`   \n+### 3. Remove `dist` from `.gitignore`\n \n ```diff\n-node_modules\n+ node_modules\n -dist\n-.tmp\n-.sass-cache\n-bower_components\n-test/bower_components\n+ .tmp\n+ .sass-cache\n+ bower_components\n+ test/bower_components\n ```\n \n \n ## Usage\n \n-1. Run `gulp deploy`.\n+1. Run `$ gulp deploy`.\n 2. Visit `http://[your-username].github.io/[repo-name]`.\n \n-\n-### Note\n-It may take a couple of minutes for your page to show up the first time you push to `gh-pages`. In the future, changes will show up instantly.\n-\n+> It might take a couple of minutes for your page to show up the first time you push to `gh-pages`. In the future, changes will show up instantly.\n \n ### References\n-- See [gulp-subtree](https://github.com/Snugug/gulp-subtree) for details on changing branch and commit message.\n-- See [GitHub Pages documentation](https://pages.github.com) for features such as custom domains.\n+\n+- See [gulp-subtree](https://github.com/Snugug/gulp-subtree) for details on changing the branch and commit message.\n+- See [GitHub Pages documentation](https://help.github.com/categories/20/articles) for features such as custom domainss.",
        "path": "docs/recipes/gh-pages.md",
        "position": 74,
        "original_position": 74,
        "commit_id": "91f4dac2b0edea4f39ef2df7b27064984fa70639",
        "original_commit_id": "91f4dac2b0edea4f39ef2df7b27064984fa70639",
        "user": {
            "login": "stephenplusplus",
            "id": 723048,
            "node_id": "MDQ6VXNlcjcyMzA0OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/723048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stephenplusplus",
            "html_url": "https://github.com/stephenplusplus",
            "followers_url": "https://api.github.com/users/stephenplusplus/followers",
            "following_url": "https://api.github.com/users/stephenplusplus/following{/other_user}",
            "gists_url": "https://api.github.com/users/stephenplusplus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stephenplusplus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stephenplusplus/subscriptions",
            "organizations_url": "https://api.github.com/users/stephenplusplus/orgs",
            "repos_url": "https://api.github.com/users/stephenplusplus/repos",
            "events_url": "https://api.github.com/users/stephenplusplus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stephenplusplus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "-s :)\n",
        "created_at": "2014-05-14T23:32:15Z",
        "updated_at": "2014-05-14T23:32:15Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/137#discussion_r12667813",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12667813"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/137#discussion_r12667813"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12667848",
        "pull_request_review_id": null,
        "id": 12667848,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjY3ODQ4",
        "diff_hunk": "@@ -2,55 +2,54 @@\n \n Deploying your app using `git subtree` allows the use of [GitHub Pages](https://pages.github.com). Your `gh-pages` branch will contain the files from `dist`.\n \n+\n ## Steps\n \n ### Prerequisites\n-1. If not already available, [install `git subtree`](http://engineeredweb.com/blog/how-to-install-git-subtree).\n-2. Your generated app is in a GitHub-hosted repository and set as your `origin` remote.\n \n+1. If not already available, [install git-subtree](http://engineeredweb.com/blog/how-to-install-git-subtree).\n+2. Ensure your generated app is in a GitHub-hosted repository that is set as your `origin` remote.\n+\n+> You can check your remotes with `$ git remote -v`. See [Adding a remote](https://help.github.com/articles/adding-a-remote) for more info.\n \n-### 1. Install [`gulp-subtree`](https://github.com/Snugug/gulp-subtree)\n+### 1. Install [gulp-subtree](https://github.com/Snugug/gulp-subtree)\n \n ```sh\n $ npm install --save-dev gulp-subtree\n ```\n \n-\n ### 2. Create a `deploy` task\n \n-This will run the build task, then push it to the `gh-pages` branch.\n+This will run the build task, then push it to the `gh-pages` branch:\n \n ```js\n gulp.task('deploy', ['build'], function () {\n     return gulp.src('dist')\n         .pipe($.subtree())\n-        .pipe($.clean()); \n+        .pipe($.clean());\n });\n ```\n \n-\n-### 3. Remove `dist` from `.gitignore`   \n+### 3. Remove `dist` from `.gitignore`\n \n ```diff\n-node_modules\n+ node_modules\n -dist\n-.tmp\n-.sass-cache\n-bower_components\n-test/bower_components\n+ .tmp\n+ .sass-cache\n+ bower_components\n+ test/bower_components\n ```\n \n \n ## Usage\n \n-1. Run `gulp deploy`.\n+1. Run `$ gulp deploy`.\n 2. Visit `http://[your-username].github.io/[repo-name]`.\n \n-\n-### Note\n-It may take a couple of minutes for your page to show up the first time you push to `gh-pages`. In the future, changes will show up instantly.\n-\n+> It might take a couple of minutes for your page to show up the first time you push to `gh-pages`. In the future, changes will show up instantly.\n \n ### References\n-- See [gulp-subtree](https://github.com/Snugug/gulp-subtree) for details on changing branch and commit message.\n-- See [GitHub Pages documentation](https://pages.github.com) for features such as custom domains.\n+\n+- See [gulp-subtree](https://github.com/Snugug/gulp-subtree) for details on changing the branch and commit message.\n+- See [GitHub Pages documentation](https://help.github.com/categories/20/articles) for features such as custom domainss.",
        "path": "docs/recipes/gh-pages.md",
        "position": 74,
        "original_position": 74,
        "commit_id": "91f4dac2b0edea4f39ef2df7b27064984fa70639",
        "original_commit_id": "91f4dac2b0edea4f39ef2df7b27064984fa70639",
        "user": {
            "login": "callumlocke",
            "id": 250617,
            "node_id": "MDQ6VXNlcjI1MDYxNw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/250617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/callumlocke",
            "html_url": "https://github.com/callumlocke",
            "followers_url": "https://api.github.com/users/callumlocke/followers",
            "following_url": "https://api.github.com/users/callumlocke/following{/other_user}",
            "gists_url": "https://api.github.com/users/callumlocke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/callumlocke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/callumlocke/subscriptions",
            "organizations_url": "https://api.github.com/users/callumlocke/orgs",
            "repos_url": "https://api.github.com/users/callumlocke/repos",
            "events_url": "https://api.github.com/users/callumlocke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/callumlocke/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ah shit\n",
        "created_at": "2014-05-14T23:33:05Z",
        "updated_at": "2014-05-14T23:33:05Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/137#discussion_r12667848",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12667848"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/137#discussion_r12667848"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12668059",
        "pull_request_review_id": null,
        "id": 12668059,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjY4MDU5",
        "diff_hunk": "@@ -2,55 +2,54 @@\n \n Deploying your app using `git subtree` allows the use of [GitHub Pages](https://pages.github.com). Your `gh-pages` branch will contain the files from `dist`.\n \n+\n ## Steps\n \n ### Prerequisites\n-1. If not already available, [install `git subtree`](http://engineeredweb.com/blog/how-to-install-git-subtree).\n-2. Your generated app is in a GitHub-hosted repository and set as your `origin` remote.\n \n+1. If not already available, [install git-subtree](http://engineeredweb.com/blog/how-to-install-git-subtree).\n+2. Ensure your generated app is in a GitHub-hosted repository that is set as your `origin` remote.\n+\n+> You can check your remotes with `$ git remote -v`. See [Adding a remote](https://help.github.com/articles/adding-a-remote) for more info.\n \n-### 1. Install [`gulp-subtree`](https://github.com/Snugug/gulp-subtree)\n+### 1. Install [gulp-subtree](https://github.com/Snugug/gulp-subtree)\n \n ```sh\n $ npm install --save-dev gulp-subtree\n ```\n \n-\n ### 2. Create a `deploy` task\n \n-This will run the build task, then push it to the `gh-pages` branch.\n+This will run the build task, then push it to the `gh-pages` branch:\n \n ```js\n gulp.task('deploy', ['build'], function () {\n     return gulp.src('dist')\n         .pipe($.subtree())\n-        .pipe($.clean()); \n+        .pipe($.clean());\n });\n ```\n \n-\n-### 3. Remove `dist` from `.gitignore`   \n+### 3. Remove `dist` from `.gitignore`\n \n ```diff\n-node_modules\n+ node_modules\n -dist\n-.tmp\n-.sass-cache\n-bower_components\n-test/bower_components\n+ .tmp\n+ .sass-cache\n+ bower_components\n+ test/bower_components\n ```\n \n \n ## Usage\n \n-1. Run `gulp deploy`.\n+1. Run `$ gulp deploy`.\n 2. Visit `http://[your-username].github.io/[repo-name]`.\n \n-\n-### Note\n-It may take a couple of minutes for your page to show up the first time you push to `gh-pages`. In the future, changes will show up instantly.\n-\n+> It might take a couple of minutes for your page to show up the first time you push to `gh-pages`. In the future, changes will show up instantly.\n \n ### References\n-- See [gulp-subtree](https://github.com/Snugug/gulp-subtree) for details on changing branch and commit message.\n-- See [GitHub Pages documentation](https://pages.github.com) for features such as custom domains.\n+\n+- See [gulp-subtree](https://github.com/Snugug/gulp-subtree) for details on changing the branch and commit message.\n+- See [GitHub Pages documentation](https://help.github.com/categories/20/articles) for features such as custom domainss.",
        "path": "docs/recipes/gh-pages.md",
        "position": 74,
        "original_position": 74,
        "commit_id": "91f4dac2b0edea4f39ef2df7b27064984fa70639",
        "original_commit_id": "91f4dac2b0edea4f39ef2df7b27064984fa70639",
        "user": {
            "login": "callumlocke",
            "id": 250617,
            "node_id": "MDQ6VXNlcjI1MDYxNw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/250617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/callumlocke",
            "html_url": "https://github.com/callumlocke",
            "followers_url": "https://api.github.com/users/callumlocke/followers",
            "following_url": "https://api.github.com/users/callumlocke/following{/other_user}",
            "gists_url": "https://api.github.com/users/callumlocke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/callumlocke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/callumlocke/subscriptions",
            "organizations_url": "https://api.github.com/users/callumlocke/orgs",
            "repos_url": "https://api.github.com/users/callumlocke/repos",
            "events_url": "https://api.github.com/users/callumlocke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/callumlocke/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "can someone remove that \"s\" :)\n",
        "created_at": "2014-05-14T23:40:03Z",
        "updated_at": "2014-05-14T23:40:03Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/137#discussion_r12668059",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12668059"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/137#discussion_r12668059"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12668145",
        "pull_request_review_id": null,
        "id": 12668145,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjY4MTQ1",
        "diff_hunk": "@@ -2,55 +2,54 @@\n \n Deploying your app using `git subtree` allows the use of [GitHub Pages](https://pages.github.com). Your `gh-pages` branch will contain the files from `dist`.\n \n+\n ## Steps\n \n ### Prerequisites\n-1. If not already available, [install `git subtree`](http://engineeredweb.com/blog/how-to-install-git-subtree).\n-2. Your generated app is in a GitHub-hosted repository and set as your `origin` remote.\n \n+1. If not already available, [install git-subtree](http://engineeredweb.com/blog/how-to-install-git-subtree).\n+2. Ensure your generated app is in a GitHub-hosted repository that is set as your `origin` remote.\n+\n+> You can check your remotes with `$ git remote -v`. See [Adding a remote](https://help.github.com/articles/adding-a-remote) for more info.\n \n-### 1. Install [`gulp-subtree`](https://github.com/Snugug/gulp-subtree)\n+### 1. Install [gulp-subtree](https://github.com/Snugug/gulp-subtree)\n \n ```sh\n $ npm install --save-dev gulp-subtree\n ```\n \n-\n ### 2. Create a `deploy` task\n \n-This will run the build task, then push it to the `gh-pages` branch.\n+This will run the build task, then push it to the `gh-pages` branch:\n \n ```js\n gulp.task('deploy', ['build'], function () {\n     return gulp.src('dist')\n         .pipe($.subtree())\n-        .pipe($.clean()); \n+        .pipe($.clean());\n });\n ```\n \n-\n-### 3. Remove `dist` from `.gitignore`   \n+### 3. Remove `dist` from `.gitignore`\n \n ```diff\n-node_modules\n+ node_modules\n -dist\n-.tmp\n-.sass-cache\n-bower_components\n-test/bower_components\n+ .tmp\n+ .sass-cache\n+ bower_components\n+ test/bower_components\n ```\n \n \n ## Usage\n \n-1. Run `gulp deploy`.\n+1. Run `$ gulp deploy`.\n 2. Visit `http://[your-username].github.io/[repo-name]`.\n \n-\n-### Note\n-It may take a couple of minutes for your page to show up the first time you push to `gh-pages`. In the future, changes will show up instantly.\n-\n+> It might take a couple of minutes for your page to show up the first time you push to `gh-pages`. In the future, changes will show up instantly.\n \n ### References\n-- See [gulp-subtree](https://github.com/Snugug/gulp-subtree) for details on changing branch and commit message.\n-- See [GitHub Pages documentation](https://pages.github.com) for features such as custom domains.\n+\n+- See [gulp-subtree](https://github.com/Snugug/gulp-subtree) for details on changing the branch and commit message.\n+- See [GitHub Pages documentation](https://help.github.com/categories/20/articles) for features such as custom domainss.",
        "path": "docs/recipes/gh-pages.md",
        "position": 74,
        "original_position": 74,
        "commit_id": "91f4dac2b0edea4f39ef2df7b27064984fa70639",
        "original_commit_id": "91f4dac2b0edea4f39ef2df7b27064984fa70639",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "already done\n",
        "created_at": "2014-05-14T23:42:59Z",
        "updated_at": "2014-05-14T23:42:59Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/137#discussion_r12668145",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/137",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/12668145"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/137#discussion_r12668145"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/13030580",
        "pull_request_review_id": null,
        "id": 13030580,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDMwNTgw",
        "diff_hunk": "@@ -21,6 +21,7 @@\n     \"gulp-size\": \"^0.3.0\",\n     \"gulp-uglify\": \"^0.3.0\",\n     \"gulp-useref\": \"^0.4.2\",\n+    \"gulp-replace\": \"0.3.x\",",
        "path": "app/templates/_package.json",
        "position": null,
        "original_position": 4,
        "commit_id": "bf5911256e8ff2c5f8a2db5fabee635491e99f40",
        "original_commit_id": "1f016356346d12cc4d738e1f1c5f76ac75edafeb",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "use the existing version notation\n",
        "created_at": "2014-05-25T12:32:05Z",
        "updated_at": "2014-05-26T08:11:49Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/144#discussion_r13030580",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/144",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/13030580"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/144#discussion_r13030580"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/144"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/13261108",
        "pull_request_review_id": null,
        "id": 13261108,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjYxMTA4",
        "diff_hunk": "@@ -21,6 +21,7 @@\n     \"gulp-size\": \"^0.3.0\",\n     \"gulp-uglify\": \"^0.3.0\",\n     \"gulp-useref\": \"^0.4.2\",\n+    \"gulp-replace\": \"^0.3.0\",",
        "path": "app/templates/_package.json",
        "position": 4,
        "original_position": 4,
        "commit_id": "bf5911256e8ff2c5f8a2db5fabee635491e99f40",
        "original_commit_id": "bf5911256e8ff2c5f8a2db5fabee635491e99f40",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "npm sorts dependencies alphabetically now, so it's better to put this before gulp-ruby-sass and, like @jcsrb pointed out, only include this if Bootstrap is selected:\n\n``` js\n\"gulp-livereload\": \"^1.2.0\",\n\"gulp-load-plugins\": \"^0.5.0\",<% if (includeBootstrap) { %>\n\"gulp-replace\": \"^0.3.0\",<% } if (includeSass) { %>\n\"gulp-ruby-sass\": \"^0.4.3\",<% } %>\n\"gulp-size\": \"^0.3.0\",\n```\n",
        "created_at": "2014-05-31T13:34:44Z",
        "updated_at": "2014-05-31T13:34:44Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/144#discussion_r13261108",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/144",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/13261108"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/144#discussion_r13261108"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/144"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/13261167",
        "pull_request_review_id": null,
        "id": 13261167,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjYxMTY3",
        "diff_hunk": "@@ -21,6 +21,7 @@\n     \"gulp-size\": \"^0.3.0\",\n     \"gulp-uglify\": \"^0.3.0\",\n     \"gulp-useref\": \"^0.4.2\",\n+    \"gulp-replace\": \"^0.3.0\",",
        "path": "app/templates/_package.json",
        "position": 4,
        "original_position": 4,
        "commit_id": "bf5911256e8ff2c5f8a2db5fabee635491e99f40",
        "original_commit_id": "bf5911256e8ff2c5f8a2db5fabee635491e99f40",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually, gulp-replace is only necessary with bootstrap-sass-official, just a sec...\n",
        "created_at": "2014-05-31T13:51:18Z",
        "updated_at": "2014-05-31T13:51:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/144#discussion_r13261167",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/144",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/13261167"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/144#discussion_r13261167"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/144"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/13261289",
        "pull_request_review_id": null,
        "id": 13261289,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjYxMjg5",
        "diff_hunk": "@@ -37,6 +37,7 @@ gulp.task('html', ['styles'], function () {\n         .pipe(jsFilter.restore())\n         .pipe(cssFilter)\n         .pipe($.csso())\n+        .pipe($.replace('bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap','fonts'))",
        "path": "app/templates/gulpfile.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "bf5911256e8ff2c5f8a2db5fabee635491e99f40",
        "original_commit_id": "bf5911256e8ff2c5f8a2db5fabee635491e99f40",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Here too:\n\n``` js\n.pipe(cssFilter)\n.pipe($.csso())<% if (includeSass && includeBootstrap) { %>\n.pipe($.replace('bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap','fonts'))<% } %>\n.pipe(cssFilter.restore())\n```\n\nIt will only replace if both Sass and Bootstrap are selected. LESS Bootstrap works fine because they use relative paths which works with our directory structure.\n",
        "created_at": "2014-05-31T14:22:16Z",
        "updated_at": "2014-05-31T14:22:16Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/144#discussion_r13261289",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/144",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/13261289"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/144#discussion_r13261289"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/144"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/13261290",
        "pull_request_review_id": null,
        "id": 13261290,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjYxMjkw",
        "diff_hunk": "@@ -21,6 +21,7 @@\n     \"gulp-size\": \"^0.3.0\",\n     \"gulp-uglify\": \"^0.3.0\",\n     \"gulp-useref\": \"^0.4.2\",\n+    \"gulp-replace\": \"^0.3.0\",",
        "path": "app/templates/_package.json",
        "position": 4,
        "original_position": 4,
        "commit_id": "bf5911256e8ff2c5f8a2db5fabee635491e99f40",
        "original_commit_id": "bf5911256e8ff2c5f8a2db5fabee635491e99f40",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\n\"gulp-livereload\": \"^1.2.0\",\n\"gulp-load-plugins\": \"^0.5.0\",<% if (includeSass) { if (includeBootstrap) { %>\n\"gulp-replace\": \"^0.3.0\",<% } %>\n\"gulp-ruby-sass\": \"^0.4.3\",<% } %>\n\"gulp-size\": \"^0.3.0\",\n```\n\nThis will add gulp-replace if both Sass and Bootstrap are selected and gulp-ruby-sass if Sass is selected (like it was before).\n",
        "created_at": "2014-05-31T14:22:19Z",
        "updated_at": "2014-05-31T14:22:19Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/144#discussion_r13261290",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/144",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/13261290"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/144#discussion_r13261290"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/144"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/14556674",
        "pull_request_review_id": null,
        "id": 14556674,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTU2Njc0",
        "diff_hunk": "@@ -93,7 +93,25 @@ AppGenerator.prototype.git = function () {\n };\n \n AppGenerator.prototype.bower = function () {\n-  this.copy('bower.json', 'bower.json');\n+        var bower = {\n+          name: this._.slugify(this.appname),\n+          private: true,\n+          dependencies: {}\n+        };\n+\n+       if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');",
        "path": "app/index.js",
        "position": null,
        "original_position": 12,
        "commit_id": "fbca5922ae19844def1b28db6e4dc75ec4dbb3a0",
        "original_commit_id": "f4c73fc864d512a088f326ab6efab60095ef1ce2",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Two spaces.\n",
        "created_at": "2014-07-04T11:35:37Z",
        "updated_at": "2014-07-04T11:55:27Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/168#discussion_r14556674",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/168",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/14556674"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/168#discussion_r14556674"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/168"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/14556678",
        "pull_request_review_id": null,
        "id": 14556678,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTU2Njc4",
        "diff_hunk": "@@ -93,7 +93,25 @@ AppGenerator.prototype.git = function () {\n };\n \n AppGenerator.prototype.bower = function () {\n-  this.copy('bower.json', 'bower.json');\n+        var bower = {\n+          name: this._.slugify(this.appname),\n+          private: true,\n+          dependencies: {}\n+        };\n+\n+       if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = \"~3.1.1\";\n+       }\n+\n+       if (this.includeModernizr) {\n+        bower.dependencies.modernizr = \"~2.8.1\";",
        "path": "app/index.js",
        "position": null,
        "original_position": 17,
        "commit_id": "fbca5922ae19844def1b28db6e4dc75ec4dbb3a0",
        "original_commit_id": "f4c73fc864d512a088f326ab6efab60095ef1ce2",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Two spaces.\n",
        "created_at": "2014-07-04T11:35:44Z",
        "updated_at": "2014-07-04T11:55:27Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/168#discussion_r14556678",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/168",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/14556678"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/168#discussion_r14556678"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/168"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/14556686",
        "pull_request_review_id": null,
        "id": 14556686,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTU2Njg2",
        "diff_hunk": "@@ -93,7 +93,25 @@ AppGenerator.prototype.git = function () {\n };\n \n AppGenerator.prototype.bower = function () {\n-  this.copy('bower.json', 'bower.json');\n+        var bower = {\n+          name: this._.slugify(this.appname),\n+          private: true,\n+          dependencies: {}\n+        };\n+\n+       if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = \"~3.1.1\";\n+       }\n+\n+       if (this.includeModernizr) {\n+        bower.dependencies.modernizr = \"~2.8.1\";\n+       }\n+\n+       bower.dependencies.jquery = \"~2.1.1\";\n+",
        "path": "app/index.js",
        "position": null,
        "original_position": 21,
        "commit_id": "fbca5922ae19844def1b28db6e4dc75ec4dbb3a0",
        "original_commit_id": "f4c73fc864d512a088f326ab6efab60095ef1ce2",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No need for two newlines.\n",
        "created_at": "2014-07-04T11:36:02Z",
        "updated_at": "2014-07-04T11:55:27Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/168#discussion_r14556686",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/168",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/14556686"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/168#discussion_r14556686"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/168"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/14556694",
        "pull_request_review_id": null,
        "id": 14556694,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTU2Njk0",
        "diff_hunk": "@@ -93,7 +93,25 @@ AppGenerator.prototype.git = function () {\n };\n \n AppGenerator.prototype.bower = function () {\n-  this.copy('bower.json', 'bower.json');\n+        var bower = {\n+          name: this._.slugify(this.appname),\n+          private: true,\n+          dependencies: {}\n+        };\n+\n+       if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = \"~3.1.1\";\n+       }\n+\n+       if (this.includeModernizr) {\n+        bower.dependencies.modernizr = \"~2.8.1\";\n+       }\n+\n+       bower.dependencies.jquery = \"~2.1.1\";\n+\n+\n+        this.write('bower.json', JSON.stringify(bower, null, 2));",
        "path": "app/index.js",
        "position": null,
        "original_position": 23,
        "commit_id": "fbca5922ae19844def1b28db6e4dc75ec4dbb3a0",
        "original_commit_id": "f4c73fc864d512a088f326ab6efab60095ef1ce2",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Remove the beginning space on this line.\n",
        "created_at": "2014-07-04T11:36:33Z",
        "updated_at": "2014-07-04T11:55:27Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/168#discussion_r14556694",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/168",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/14556694"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/168#discussion_r14556694"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/168"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/14556705",
        "pull_request_review_id": null,
        "id": 14556705,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTU2NzA1",
        "diff_hunk": "@@ -93,7 +93,25 @@ AppGenerator.prototype.git = function () {\n };\n \n AppGenerator.prototype.bower = function () {\n-  this.copy('bower.json', 'bower.json');\n+        var bower = {",
        "path": "app/index.js",
        "position": null,
        "original_position": 5,
        "commit_id": "fbca5922ae19844def1b28db6e4dc75ec4dbb3a0",
        "original_commit_id": "f4c73fc864d512a088f326ab6efab60095ef1ce2",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent using two spaces, not eight.\n",
        "created_at": "2014-07-04T11:37:20Z",
        "updated_at": "2014-07-04T11:55:27Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/168#discussion_r14556705",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/168",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/14556705"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/168#discussion_r14556705"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/168"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/15523191",
        "pull_request_review_id": null,
        "id": 15523191,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTIzMTkx",
        "diff_hunk": "@@ -27,13 +27,14 @@ gulp.task('html', ['styles'], function () {<% if (includeBootstrap && includeSas\n   var cssChannel = lazypipe()\n     .pipe($.csso)\n     .pipe($.replace, 'bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap','fonts');<% } %>\n+  var assets = $.useref.assets({searchPath: '{.tmp,app}'});",
        "path": "app/templates/gulpfile.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "c6b693a01f2ef03ebba6c440db55cbf6b70892e7",
        "original_commit_id": "c6b693a01f2ef03ebba6c440db55cbf6b70892e7",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "wrong indentation\n",
        "created_at": "2014-07-29T13:43:01Z",
        "updated_at": "2014-07-29T13:43:01Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/176#discussion_r15523191",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/176",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/15523191"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/176#discussion_r15523191"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/176"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/15529486",
        "pull_request_review_id": null,
        "id": 15529486,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTI5NDg2",
        "diff_hunk": "@@ -27,13 +27,14 @@ gulp.task('html', ['styles'], function () {<% if (includeBootstrap && includeSas\n   var cssChannel = lazypipe()\n     .pipe($.csso)\n     .pipe($.replace, 'bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap','fonts');<% } %>\n+  var assets = $.useref.assets({searchPath: '{.tmp,app}'});",
        "path": "app/templates/gulpfile.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "c6b693a01f2ef03ebba6c440db55cbf6b70892e7",
        "original_commit_id": "c6b693a01f2ef03ebba6c440db55cbf6b70892e7",
        "user": {
            "login": "mmrko",
            "id": 1456748,
            "node_id": "MDQ6VXNlcjE0NTY3NDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1456748?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mmrko",
            "html_url": "https://github.com/mmrko",
            "followers_url": "https://api.github.com/users/mmrko/followers",
            "following_url": "https://api.github.com/users/mmrko/following{/other_user}",
            "gists_url": "https://api.github.com/users/mmrko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mmrko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mmrko/subscriptions",
            "organizations_url": "https://api.github.com/users/mmrko/orgs",
            "repos_url": "https://api.github.com/users/mmrko/repos",
            "events_url": "https://api.github.com/users/mmrko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mmrko/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm, can't see anything wrong in the indentation :open_mouth: two spaces right?\n",
        "created_at": "2014-07-29T15:16:17Z",
        "updated_at": "2014-07-29T15:16:17Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/176#discussion_r15529486",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/176",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/15529486"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/176#discussion_r15529486"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/176"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/15531649",
        "pull_request_review_id": null,
        "id": 15531649,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTMxNjQ5",
        "diff_hunk": "@@ -27,13 +27,14 @@ gulp.task('html', ['styles'], function () {<% if (includeBootstrap && includeSas\n   var cssChannel = lazypipe()\n     .pipe($.csso)\n     .pipe($.replace, 'bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap','fonts');<% } %>\n+  var assets = $.useref.assets({searchPath: '{.tmp,app}'});",
        "path": "app/templates/gulpfile.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "c6b693a01f2ef03ebba6c440db55cbf6b70892e7",
        "original_commit_id": "c6b693a01f2ef03ebba6c440db55cbf6b70892e7",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oh, never mind. i didn't notice the .pipe stuff.\n",
        "created_at": "2014-07-29T15:45:31Z",
        "updated_at": "2014-07-29T15:45:31Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/176#discussion_r15531649",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/176",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/15531649"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/176#discussion_r15531649"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/176"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/18433951",
        "pull_request_review_id": null,
        "id": 18433951,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDMzOTUx",
        "diff_hunk": "@@ -97,7 +97,20 @@ gulp.task('html', ['styles', 'templates'], function () {\n     ...\n ```\n \n-### 7. Configure `wiredep` task to wire bower components on layout templates only\n+### 7. Configure `html` task to include files from `.tmp`\n+\n+```diff\n+ gulp.task('html', ['styles', 'scripts', 'templates'], function () {\n+   var jsFilter = $.filter('**/*.js');\n+   var cssFilter = $.filter('**/*.css');\n+ \n+-  return gulp.src('app/*.html')\n++  return gulp.src(['app/*.html', '.tmp/*.html'])\n+     .pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n+     .pipe(jsFilter)\n+```",
        "path": "docs/recipes/nunjucks.md",
        "position": null,
        "original_position": 30,
        "commit_id": "dd36a1258a3dcb33eff7c62e2c4f355b63ccd20f",
        "original_commit_id": "79b23a452207b7a732460468be523df2c820f1f4",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you make the `html` task reflect the one from the [master](https://github.com/yeoman/generator-gulp-webapp/blob/master/app/templates/gulpfile.js#L25-L40)?\n",
        "created_at": "2014-10-05T08:54:13Z",
        "updated_at": "2014-10-06T09:14:50Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/201#discussion_r18433951",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/201",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/18433951"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/201#discussion_r18433951"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/201"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/18434406",
        "pull_request_review_id": null,
        "id": 18434406,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDM0NDA2",
        "diff_hunk": "@@ -97,7 +97,20 @@ gulp.task('html', ['styles', 'templates'], function () {\n     ...\n ```\n \n-### 7. Configure `wiredep` task to wire bower components on layout templates only\n+### 7. Configure `html` task to include files from `.tmp`\n+\n+```diff\n+ gulp.task('html', ['styles', 'scripts', 'templates'], function () {\n+   var jsFilter = $.filter('**/*.js');\n+   var cssFilter = $.filter('**/*.css');\n+ \n+-  return gulp.src('app/*.html')\n++  return gulp.src(['app/*.html', '.tmp/*.html'])\n+     .pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n+     .pipe(jsFilter)\n+```",
        "path": "docs/recipes/nunjucks.md",
        "position": null,
        "original_position": 30,
        "commit_id": "dd36a1258a3dcb33eff7c62e2c4f355b63ccd20f",
        "original_commit_id": "79b23a452207b7a732460468be523df2c820f1f4",
        "user": {
            "login": "raphinesse",
            "id": 1006620,
            "node_id": "MDQ6VXNlcjEwMDY2MjA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1006620?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphinesse",
            "html_url": "https://github.com/raphinesse",
            "followers_url": "https://api.github.com/users/raphinesse/followers",
            "following_url": "https://api.github.com/users/raphinesse/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphinesse/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphinesse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphinesse/subscriptions",
            "organizations_url": "https://api.github.com/users/raphinesse/orgs",
            "repos_url": "https://api.github.com/users/raphinesse/repos",
            "events_url": "https://api.github.com/users/raphinesse/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphinesse/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done. I did only test the whole thing with the latest release, though.\n",
        "created_at": "2014-10-05T10:50:20Z",
        "updated_at": "2014-10-06T09:14:50Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/201#discussion_r18434406",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/201",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/18434406"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/201#discussion_r18434406"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/201"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/18444229",
        "pull_request_review_id": null,
        "id": 18444229,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDQ0MjI5",
        "diff_hunk": "@@ -97,7 +97,19 @@ gulp.task('html', ['styles', 'templates'], function () {\n     ...\n ```\n \n-### 7. Configure `wiredep` task to wire bower components on layout templates only\n+### 7. Configure `html` task to include files from `.tmp`\n+\n+```diff\n+ gulp.task('html', ['styles', 'templates'], function () {\n+   var assets = $.useref.assets({searchPath: '{.tmp,app}'});\n+   \n+-  return gulp.src('app/*.html')\n++  return gulp.src(['app/*.html', '.tmp/*.html'])\n+    .pipe(assets)\n+    .pipe($.if('*.js', $.uglify()))",
        "path": "docs/recipes/nunjucks.md",
        "position": null,
        "original_position": 28,
        "commit_id": "dd36a1258a3dcb33eff7c62e2c4f355b63ccd20f",
        "original_commit_id": "4e6819fd8a5476b6df54412198ca35fff84564e1",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe it would be better if you add the rest of the task to avoid confusion:\n\n``` diff\ngulp.task('html', ['styles', 'templates'], function () {\n  var assets = $.useref.assets({searchPath: '{.tmp,app}'});\n\n- return gulp.src('app/*.html')\n+ return gulp.src('app/*.html', '.tmp/*.html')\n    .pipe(assets)\n    .pipe($.if('*.js', $.uglify()))\n    .pipe($.if('*.css', $.csso()))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe(gulp.dest('dist'));\n});\n```\n",
        "created_at": "2014-10-06T07:49:37Z",
        "updated_at": "2014-10-06T09:14:50Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/201#discussion_r18444229",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/201",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/18444229"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/201#discussion_r18444229"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/201"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395616",
        "pull_request_review_id": null,
        "id": 17395616,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk1NjE2",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');",
        "path": "app/index.js",
        "position": null,
        "original_position": 30,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "IMO this file won't ever change. I'd just require it at the top of the module with the other dependencies.\n",
        "created_at": "2014-09-10T23:17:46Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395616",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395616"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395616"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395643",
        "pull_request_review_id": null,
        "id": 17395643,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk1NjQz",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {",
        "path": "app/index.js",
        "position": null,
        "original_position": 44,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "All options should first be defined in the constructor to allow better `--help` content.\n",
        "created_at": "2014-09-10T23:18:40Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395643",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395643"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395643"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395669",
        "pull_request_review_id": null,
        "id": 17395669,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk1NjY5",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));",
        "path": "app/index.js",
        "position": null,
        "original_position": 46,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just asking, but this could be the yosay message\n",
        "created_at": "2014-09-10T23:19:16Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395669",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395669"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395669"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395789",
        "pull_request_review_id": null,
        "id": 17395789,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk1Nzg5",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));",
        "path": "app/index.js",
        "position": null,
        "original_position": 130,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "simpler way: `this.dest.writeJSON(bower)`\n",
        "created_at": "2014-09-10T23:22:45Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395789",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395789"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395789"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395835",
        "pull_request_review_id": null,
        "id": 17395835,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk1ODM1",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));",
        "path": "app/index.js",
        "position": null,
        "original_position": 152,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`this.indexFile = this.src.read('index.html')`\n",
        "created_at": "2014-09-10T23:24:23Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395835",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395835"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395835"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395894",
        "pull_request_review_id": null,
        "id": 17395894,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk1ODk0",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n+      this.indexFile = this.engine(this.indexFile, this);\n+\n+      // wire Bootstrap plugins\n+      if (this.includeBootstrap) {\n+        var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n+        this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n+          bs + 'affix.js',\n+          bs + 'alert.js',\n+          bs + 'dropdown.js',\n+          bs + 'tooltip.js',\n+          bs + 'modal.js',\n+          bs + 'transition.js',\n+          bs + 'button.js',\n+          bs + 'popover.js',\n+          bs + 'carousel.js',\n+          bs + 'scrollspy.js',\n+          bs + 'collapse.js',\n+          bs + 'tab.js'\n+        ]);\n+      }\n \n-  var prompts = [{\n-    type: 'checkbox',\n-    name: 'features',\n-    message: 'What more would you like?',\n-    choices: [{\n-      name: 'Sass',\n-      value: 'includeSass',\n-      checked: true\n-    }, {\n-      name: 'Bootstrap',\n-      value: 'includeBootstrap',\n-      checked: true\n-    }, {\n-      name: 'Modernizr',\n-      value: 'includeModernizr',\n-      checked: true\n-    }]\n-  }];\n-\n-  this.prompt(prompts, function (answers) {\n-    var features = answers.features;\n-\n-    var hasFeature = function (feat) {\n-      return features.indexOf(feat) !== -1;\n+      this.indexFile = this.appendFiles({\n+        html: this.indexFile,\n+        fileType: 'js',\n+        optimizedPath: 'scripts/main.js',\n+        sourceFileList: ['scripts/main.js']\n+      });\n+    },\n+\n+    app: function () {\n+      this.mkdir('app');\n+      this.mkdir('app/scripts');\n+      this.mkdir('app/styles');\n+      this.mkdir('app/images');\n+      this.mkdir('app/fonts');\n+      this.write('app/index.html', this.indexFile);",
        "path": "app/index.js",
        "position": null,
        "original_position": 212,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd move this write to the \u201cwriteIndex\u201c method.\n\nLess `this` abuse is always best.\n",
        "created_at": "2014-09-10T23:25:25Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395894",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395894"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395894"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395933",
        "pull_request_review_id": null,
        "id": 17395933,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk1OTMz",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n+      this.indexFile = this.engine(this.indexFile, this);\n+\n+      // wire Bootstrap plugins\n+      if (this.includeBootstrap) {\n+        var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n+        this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n+          bs + 'affix.js',\n+          bs + 'alert.js',\n+          bs + 'dropdown.js',\n+          bs + 'tooltip.js',\n+          bs + 'modal.js',\n+          bs + 'transition.js',\n+          bs + 'button.js',\n+          bs + 'popover.js',\n+          bs + 'carousel.js',\n+          bs + 'scrollspy.js',\n+          bs + 'collapse.js',\n+          bs + 'tab.js'\n+        ]);\n+      }\n \n-  var prompts = [{\n-    type: 'checkbox',\n-    name: 'features',\n-    message: 'What more would you like?',\n-    choices: [{\n-      name: 'Sass',\n-      value: 'includeSass',\n-      checked: true\n-    }, {\n-      name: 'Bootstrap',\n-      value: 'includeBootstrap',\n-      checked: true\n-    }, {\n-      name: 'Modernizr',\n-      value: 'includeModernizr',\n-      checked: true\n-    }]\n-  }];\n-\n-  this.prompt(prompts, function (answers) {\n-    var features = answers.features;\n-\n-    var hasFeature = function (feat) {\n-      return features.indexOf(feat) !== -1;\n+      this.indexFile = this.appendFiles({\n+        html: this.indexFile,\n+        fileType: 'js',\n+        optimizedPath: 'scripts/main.js',\n+        sourceFileList: ['scripts/main.js']\n+      });\n+    },\n+\n+    app: function () {\n+      this.mkdir('app');\n+      this.mkdir('app/scripts');\n+      this.mkdir('app/styles');\n+      this.mkdir('app/images');\n+      this.mkdir('app/fonts');\n+      this.write('app/index.html', this.indexFile);\n+      this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n+    }\n+  },\n+\n+  install: function () {\n+    var howToInstall =\n+      '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n+      '\\nyour HTML by running:' +\n+      '\\n' +\n+      chalk.yellow.bold('\\n  gulp wiredep');\n+\n+    if (this.options['skip-install']) {\n+      this.log(howToInstall);\n+      return;\n     }\n \n-    // manually deal with the response, get back and store the results.\n-    // we change a bit this way of doing to automatically do this in the self.prompt() method.\n-    this.includeSass = hasFeature('includeSass');\n-    this.includeBootstrap = hasFeature('includeBootstrap');\n-    this.includeModernizr = hasFeature('includeModernizr');\n-\n-    cb();\n-  }.bind(this));\n-};\n-\n-AppGenerator.prototype.gulpfile = function () {\n-  this.template('gulpfile.js');\n-};\n-\n-AppGenerator.prototype.packageJSON = function () {\n-  this.template('_package.json', 'package.json');\n-};\n-\n-AppGenerator.prototype.git = function () {\n-  this.copy('gitignore', '.gitignore');\n-  this.copy('gitattributes', '.gitattributes');\n-};\n-\n-AppGenerator.prototype.bower = function () {\n-  var bower = {\n-    name: this._.slugify(this.appname),\n-    private: true,\n-    dependencies: {}\n-  };\n-\n-  if (this.includeBootstrap) {\n-    var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n-    bower.dependencies[bs] = '~3.2.0';\n-  } else {\n-    bower.dependencies.jquery = '~2.1.1';\n-  }\n-\n-  if (this.includeModernizr) {\n-    bower.dependencies.modernizr = '~2.8.1';\n-  }\n-\n-  this.copy('bowerrc', '.bowerrc');\n-  this.write('bower.json', JSON.stringify(bower, null, 2));\n-};\n-\n-AppGenerator.prototype.jshint = function () {\n-  this.copy('jshintrc', '.jshintrc');\n-};\n-\n-AppGenerator.prototype.editorConfig = function () {\n-  this.copy('editorconfig', '.editorconfig');\n-};\n-\n-AppGenerator.prototype.h5bp = function () {\n-  this.copy('favicon.ico', 'app/favicon.ico');\n-  this.copy('robots.txt', 'app/robots.txt');\n-};\n-\n-AppGenerator.prototype.mainStylesheet = function () {\n-  var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n-  this.copy(css, 'app/styles/' + css);\n-};\n-\n-AppGenerator.prototype.writeIndex = function () {\n-  this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n-  this.indexFile = this.engine(this.indexFile, this);\n-\n-  // wire Bootstrap plugins\n-  if (this.includeBootstrap) {\n-    var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n-    this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n-      bs + 'affix.js',\n-      bs + 'alert.js',\n-      bs + 'dropdown.js',\n-      bs + 'tooltip.js',\n-      bs + 'modal.js',\n-      bs + 'transition.js',\n-      bs + 'button.js',\n-      bs + 'popover.js',\n-      bs + 'carousel.js',\n-      bs + 'scrollspy.js',\n-      bs + 'collapse.js',\n-      bs + 'tab.js'\n-    ]);\n-  }\n-\n-  this.indexFile = this.appendFiles({\n-    html: this.indexFile,\n-    fileType: 'js',\n-    optimizedPath: 'scripts/main.js',\n-    sourceFileList: ['scripts/main.js']\n-  });\n-};\n-\n-AppGenerator.prototype.app = function () {\n-  this.mkdir('app');\n-  this.mkdir('app/scripts');\n-  this.mkdir('app/styles');\n-  this.mkdir('app/images');\n-  this.mkdir('app/fonts');\n-  this.write('app/index.html', this.indexFile);\n-  this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n-};\n-\n-AppGenerator.prototype.install = function () {\n-  var howToInstall =\n-    '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n-    '\\nyour HTML by running:' +\n-    '\\n' +\n-    chalk.yellow.bold('\\n  gulp wiredep');\n-\n-  if (this.options['skip-install']) {\n-    this.log(howToInstall);\n-    return;\n-  }\n+    this.installDependencies({\n+      skipMessage: this.options['skip-install-message'],\n+      skipInstall: this.options['skip-install'],\n+      callback: function () {\n+        var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n \n-  var done = this.async();\n-  this.installDependencies({\n-    skipMessage: this.options['skip-install-message'],\n-    skipInstall: this.options['skip-install'],\n-    callback: function () {\n-      var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n-\n-      // wire Bower packages to .html\n-      wiredep({\n-        bowerJson: bowerJson,\n-        directory: 'bower_components',\n-        exclude: ['bootstrap-sass', 'bootstrap.js'],\n-        src: 'app/index.html'\n-      });\n+        this.log(JSON.stringify(bowerJson));",
        "path": "app/index.js",
        "position": null,
        "original_position": 364,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why do you log that?\n",
        "created_at": "2014-09-10T23:26:50Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395933",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395933"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395933"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395951",
        "pull_request_review_id": null,
        "id": 17395951,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk1OTUx",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n+      this.indexFile = this.engine(this.indexFile, this);\n+\n+      // wire Bootstrap plugins\n+      if (this.includeBootstrap) {\n+        var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n+        this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n+          bs + 'affix.js',\n+          bs + 'alert.js',\n+          bs + 'dropdown.js',\n+          bs + 'tooltip.js',\n+          bs + 'modal.js',\n+          bs + 'transition.js',\n+          bs + 'button.js',\n+          bs + 'popover.js',\n+          bs + 'carousel.js',\n+          bs + 'scrollspy.js',\n+          bs + 'collapse.js',\n+          bs + 'tab.js'\n+        ]);\n+      }\n \n-  var prompts = [{\n-    type: 'checkbox',\n-    name: 'features',\n-    message: 'What more would you like?',\n-    choices: [{\n-      name: 'Sass',\n-      value: 'includeSass',\n-      checked: true\n-    }, {\n-      name: 'Bootstrap',\n-      value: 'includeBootstrap',\n-      checked: true\n-    }, {\n-      name: 'Modernizr',\n-      value: 'includeModernizr',\n-      checked: true\n-    }]\n-  }];\n-\n-  this.prompt(prompts, function (answers) {\n-    var features = answers.features;\n-\n-    var hasFeature = function (feat) {\n-      return features.indexOf(feat) !== -1;\n+      this.indexFile = this.appendFiles({\n+        html: this.indexFile,\n+        fileType: 'js',\n+        optimizedPath: 'scripts/main.js',\n+        sourceFileList: ['scripts/main.js']\n+      });\n+    },\n+\n+    app: function () {\n+      this.mkdir('app');\n+      this.mkdir('app/scripts');\n+      this.mkdir('app/styles');\n+      this.mkdir('app/images');\n+      this.mkdir('app/fonts');\n+      this.write('app/index.html', this.indexFile);\n+      this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n+    }\n+  },\n+\n+  install: function () {\n+    var howToInstall =\n+      '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n+      '\\nyour HTML by running:' +\n+      '\\n' +\n+      chalk.yellow.bold('\\n  gulp wiredep');\n+\n+    if (this.options['skip-install']) {\n+      this.log(howToInstall);\n+      return;\n     }\n \n-    // manually deal with the response, get back and store the results.\n-    // we change a bit this way of doing to automatically do this in the self.prompt() method.\n-    this.includeSass = hasFeature('includeSass');\n-    this.includeBootstrap = hasFeature('includeBootstrap');\n-    this.includeModernizr = hasFeature('includeModernizr');\n-\n-    cb();\n-  }.bind(this));\n-};\n-\n-AppGenerator.prototype.gulpfile = function () {\n-  this.template('gulpfile.js');\n-};\n-\n-AppGenerator.prototype.packageJSON = function () {\n-  this.template('_package.json', 'package.json');\n-};\n-\n-AppGenerator.prototype.git = function () {\n-  this.copy('gitignore', '.gitignore');\n-  this.copy('gitattributes', '.gitattributes');\n-};\n-\n-AppGenerator.prototype.bower = function () {\n-  var bower = {\n-    name: this._.slugify(this.appname),\n-    private: true,\n-    dependencies: {}\n-  };\n-\n-  if (this.includeBootstrap) {\n-    var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n-    bower.dependencies[bs] = '~3.2.0';\n-  } else {\n-    bower.dependencies.jquery = '~2.1.1';\n-  }\n-\n-  if (this.includeModernizr) {\n-    bower.dependencies.modernizr = '~2.8.1';\n-  }\n-\n-  this.copy('bowerrc', '.bowerrc');\n-  this.write('bower.json', JSON.stringify(bower, null, 2));\n-};\n-\n-AppGenerator.prototype.jshint = function () {\n-  this.copy('jshintrc', '.jshintrc');\n-};\n-\n-AppGenerator.prototype.editorConfig = function () {\n-  this.copy('editorconfig', '.editorconfig');\n-};\n-\n-AppGenerator.prototype.h5bp = function () {\n-  this.copy('favicon.ico', 'app/favicon.ico');\n-  this.copy('robots.txt', 'app/robots.txt');\n-};\n-\n-AppGenerator.prototype.mainStylesheet = function () {\n-  var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n-  this.copy(css, 'app/styles/' + css);\n-};\n-\n-AppGenerator.prototype.writeIndex = function () {\n-  this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n-  this.indexFile = this.engine(this.indexFile, this);\n-\n-  // wire Bootstrap plugins\n-  if (this.includeBootstrap) {\n-    var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n-    this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n-      bs + 'affix.js',\n-      bs + 'alert.js',\n-      bs + 'dropdown.js',\n-      bs + 'tooltip.js',\n-      bs + 'modal.js',\n-      bs + 'transition.js',\n-      bs + 'button.js',\n-      bs + 'popover.js',\n-      bs + 'carousel.js',\n-      bs + 'scrollspy.js',\n-      bs + 'collapse.js',\n-      bs + 'tab.js'\n-    ]);\n-  }\n-\n-  this.indexFile = this.appendFiles({\n-    html: this.indexFile,\n-    fileType: 'js',\n-    optimizedPath: 'scripts/main.js',\n-    sourceFileList: ['scripts/main.js']\n-  });\n-};\n-\n-AppGenerator.prototype.app = function () {\n-  this.mkdir('app');\n-  this.mkdir('app/scripts');\n-  this.mkdir('app/styles');\n-  this.mkdir('app/images');\n-  this.mkdir('app/fonts');\n-  this.write('app/index.html', this.indexFile);\n-  this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n-};\n-\n-AppGenerator.prototype.install = function () {\n-  var howToInstall =\n-    '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n-    '\\nyour HTML by running:' +\n-    '\\n' +\n-    chalk.yellow.bold('\\n  gulp wiredep');\n-\n-  if (this.options['skip-install']) {\n-    this.log(howToInstall);\n-    return;\n-  }\n+    this.installDependencies({\n+      skipMessage: this.options['skip-install-message'],\n+      skipInstall: this.options['skip-install'],\n+      callback: function () {\n+        var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));",
        "path": "app/index.js",
        "position": null,
        "original_position": 348,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "use `this.src.readJSON()` *(or `this.dest` - it is unclear which file you read currently)\n",
        "created_at": "2014-09-10T23:27:30Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395951",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395951"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395951"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395966",
        "pull_request_review_id": null,
        "id": 17395966,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk1OTY2",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n+      this.indexFile = this.engine(this.indexFile, this);\n+\n+      // wire Bootstrap plugins\n+      if (this.includeBootstrap) {\n+        var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n+        this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n+          bs + 'affix.js',\n+          bs + 'alert.js',\n+          bs + 'dropdown.js',\n+          bs + 'tooltip.js',\n+          bs + 'modal.js',\n+          bs + 'transition.js',\n+          bs + 'button.js',\n+          bs + 'popover.js',\n+          bs + 'carousel.js',\n+          bs + 'scrollspy.js',\n+          bs + 'collapse.js',\n+          bs + 'tab.js'\n+        ]);\n+      }\n \n-  var prompts = [{\n-    type: 'checkbox',\n-    name: 'features',\n-    message: 'What more would you like?',\n-    choices: [{\n-      name: 'Sass',\n-      value: 'includeSass',\n-      checked: true\n-    }, {\n-      name: 'Bootstrap',\n-      value: 'includeBootstrap',\n-      checked: true\n-    }, {\n-      name: 'Modernizr',\n-      value: 'includeModernizr',\n-      checked: true\n-    }]\n-  }];\n-\n-  this.prompt(prompts, function (answers) {\n-    var features = answers.features;\n-\n-    var hasFeature = function (feat) {\n-      return features.indexOf(feat) !== -1;\n+      this.indexFile = this.appendFiles({\n+        html: this.indexFile,\n+        fileType: 'js',\n+        optimizedPath: 'scripts/main.js',\n+        sourceFileList: ['scripts/main.js']\n+      });\n+    },\n+\n+    app: function () {\n+      this.mkdir('app');\n+      this.mkdir('app/scripts');\n+      this.mkdir('app/styles');\n+      this.mkdir('app/images');\n+      this.mkdir('app/fonts');\n+      this.write('app/index.html', this.indexFile);\n+      this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n+    }\n+  },\n+\n+  install: function () {\n+    var howToInstall =\n+      '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n+      '\\nyour HTML by running:' +\n+      '\\n' +\n+      chalk.yellow.bold('\\n  gulp wiredep');\n+\n+    if (this.options['skip-install']) {\n+      this.log(howToInstall);\n+      return;\n     }\n \n-    // manually deal with the response, get back and store the results.\n-    // we change a bit this way of doing to automatically do this in the self.prompt() method.\n-    this.includeSass = hasFeature('includeSass');\n-    this.includeBootstrap = hasFeature('includeBootstrap');\n-    this.includeModernizr = hasFeature('includeModernizr');\n-\n-    cb();\n-  }.bind(this));\n-};\n-\n-AppGenerator.prototype.gulpfile = function () {\n-  this.template('gulpfile.js');\n-};\n-\n-AppGenerator.prototype.packageJSON = function () {\n-  this.template('_package.json', 'package.json');\n-};\n-\n-AppGenerator.prototype.git = function () {\n-  this.copy('gitignore', '.gitignore');\n-  this.copy('gitattributes', '.gitattributes');\n-};\n-\n-AppGenerator.prototype.bower = function () {\n-  var bower = {\n-    name: this._.slugify(this.appname),\n-    private: true,\n-    dependencies: {}\n-  };\n-\n-  if (this.includeBootstrap) {\n-    var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n-    bower.dependencies[bs] = '~3.2.0';\n-  } else {\n-    bower.dependencies.jquery = '~2.1.1';\n-  }\n-\n-  if (this.includeModernizr) {\n-    bower.dependencies.modernizr = '~2.8.1';\n-  }\n-\n-  this.copy('bowerrc', '.bowerrc');\n-  this.write('bower.json', JSON.stringify(bower, null, 2));\n-};\n-\n-AppGenerator.prototype.jshint = function () {\n-  this.copy('jshintrc', '.jshintrc');\n-};\n-\n-AppGenerator.prototype.editorConfig = function () {\n-  this.copy('editorconfig', '.editorconfig');\n-};\n-\n-AppGenerator.prototype.h5bp = function () {\n-  this.copy('favicon.ico', 'app/favicon.ico');\n-  this.copy('robots.txt', 'app/robots.txt');\n-};\n-\n-AppGenerator.prototype.mainStylesheet = function () {\n-  var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n-  this.copy(css, 'app/styles/' + css);\n-};\n-\n-AppGenerator.prototype.writeIndex = function () {\n-  this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n-  this.indexFile = this.engine(this.indexFile, this);\n-\n-  // wire Bootstrap plugins\n-  if (this.includeBootstrap) {\n-    var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n-    this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n-      bs + 'affix.js',\n-      bs + 'alert.js',\n-      bs + 'dropdown.js',\n-      bs + 'tooltip.js',\n-      bs + 'modal.js',\n-      bs + 'transition.js',\n-      bs + 'button.js',\n-      bs + 'popover.js',\n-      bs + 'carousel.js',\n-      bs + 'scrollspy.js',\n-      bs + 'collapse.js',\n-      bs + 'tab.js'\n-    ]);\n-  }\n-\n-  this.indexFile = this.appendFiles({\n-    html: this.indexFile,\n-    fileType: 'js',\n-    optimizedPath: 'scripts/main.js',\n-    sourceFileList: ['scripts/main.js']\n-  });\n-};\n-\n-AppGenerator.prototype.app = function () {\n-  this.mkdir('app');\n-  this.mkdir('app/scripts');\n-  this.mkdir('app/styles');\n-  this.mkdir('app/images');\n-  this.mkdir('app/fonts');\n-  this.write('app/index.html', this.indexFile);\n-  this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n-};\n-\n-AppGenerator.prototype.install = function () {\n-  var howToInstall =\n-    '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n-    '\\nyour HTML by running:' +\n-    '\\n' +\n-    chalk.yellow.bold('\\n  gulp wiredep');\n-\n-  if (this.options['skip-install']) {\n-    this.log(howToInstall);\n-    return;\n-  }\n+    this.installDependencies({\n+      skipMessage: this.options['skip-install-message'],\n+      skipInstall: this.options['skip-install'],\n+      callback: function () {\n+        var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n \n-  var done = this.async();\n-  this.installDependencies({\n-    skipMessage: this.options['skip-install-message'],\n-    skipInstall: this.options['skip-install'],\n-    callback: function () {\n-      var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n-\n-      // wire Bower packages to .html\n-      wiredep({\n-        bowerJson: bowerJson,\n-        directory: 'bower_components',\n-        exclude: ['bootstrap-sass', 'bootstrap.js'],\n-        src: 'app/index.html'\n-      });\n+        this.log(JSON.stringify(bowerJson));\n \n-      if (this.includeSass) {\n-        // wire Bower packages to .scss\n+        // wire Bower packages to .html\n         wiredep({\n           bowerJson: bowerJson,\n           directory: 'bower_components',\n-          src: 'app/styles/*.scss'\n+          exclude: ['bootstrap-sass', 'bootstrap.js'],\n+          src: 'app/index.html'\n         });\n-      }\n \n-      done();\n-    }.bind(this)\n-  });\n-};\n+        if (this.includeSass) {\n+          // wire Bower packages to .scss\n+          wiredep({\n+            bowerJson: bowerJson,\n+            directory: 'bower_components',\n+            src: 'app/styles/*.scss'\n+          });\n+        }\n+      }.bind(this)\n+    });\n+\n+    this.on('end', function () {\n+      this.invoke(this.options['test-framework'], {",
        "path": "app/index.js",
        "position": null,
        "original_position": 394,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd suggest to use `composeWith` and not waiting for `end` event to launch it.\n",
        "created_at": "2014-09-10T23:28:07Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395966",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17395966"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17395966"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17396030",
        "pull_request_review_id": null,
        "id": 17396030,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk2MDMw",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n+      this.indexFile = this.engine(this.indexFile, this);\n+\n+      // wire Bootstrap plugins\n+      if (this.includeBootstrap) {\n+        var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n+        this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n+          bs + 'affix.js',\n+          bs + 'alert.js',\n+          bs + 'dropdown.js',\n+          bs + 'tooltip.js',\n+          bs + 'modal.js',\n+          bs + 'transition.js',\n+          bs + 'button.js',\n+          bs + 'popover.js',\n+          bs + 'carousel.js',\n+          bs + 'scrollspy.js',\n+          bs + 'collapse.js',\n+          bs + 'tab.js'\n+        ]);\n+      }\n \n-  var prompts = [{\n-    type: 'checkbox',\n-    name: 'features',\n-    message: 'What more would you like?',\n-    choices: [{\n-      name: 'Sass',\n-      value: 'includeSass',\n-      checked: true\n-    }, {\n-      name: 'Bootstrap',\n-      value: 'includeBootstrap',\n-      checked: true\n-    }, {\n-      name: 'Modernizr',\n-      value: 'includeModernizr',\n-      checked: true\n-    }]\n-  }];\n-\n-  this.prompt(prompts, function (answers) {\n-    var features = answers.features;\n-\n-    var hasFeature = function (feat) {\n-      return features.indexOf(feat) !== -1;\n+      this.indexFile = this.appendFiles({\n+        html: this.indexFile,\n+        fileType: 'js',\n+        optimizedPath: 'scripts/main.js',\n+        sourceFileList: ['scripts/main.js']\n+      });\n+    },\n+\n+    app: function () {\n+      this.mkdir('app');\n+      this.mkdir('app/scripts');\n+      this.mkdir('app/styles');\n+      this.mkdir('app/images');\n+      this.mkdir('app/fonts');\n+      this.write('app/index.html', this.indexFile);\n+      this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n+    }\n+  },\n+\n+  install: function () {\n+    var howToInstall =\n+      '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n+      '\\nyour HTML by running:' +\n+      '\\n' +\n+      chalk.yellow.bold('\\n  gulp wiredep');\n+\n+    if (this.options['skip-install']) {\n+      this.log(howToInstall);\n+      return;\n     }\n \n-    // manually deal with the response, get back and store the results.\n-    // we change a bit this way of doing to automatically do this in the self.prompt() method.\n-    this.includeSass = hasFeature('includeSass');\n-    this.includeBootstrap = hasFeature('includeBootstrap');\n-    this.includeModernizr = hasFeature('includeModernizr');\n-\n-    cb();\n-  }.bind(this));\n-};\n-\n-AppGenerator.prototype.gulpfile = function () {\n-  this.template('gulpfile.js');\n-};\n-\n-AppGenerator.prototype.packageJSON = function () {\n-  this.template('_package.json', 'package.json');\n-};\n-\n-AppGenerator.prototype.git = function () {\n-  this.copy('gitignore', '.gitignore');\n-  this.copy('gitattributes', '.gitattributes');\n-};\n-\n-AppGenerator.prototype.bower = function () {\n-  var bower = {\n-    name: this._.slugify(this.appname),\n-    private: true,\n-    dependencies: {}\n-  };\n-\n-  if (this.includeBootstrap) {\n-    var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n-    bower.dependencies[bs] = '~3.2.0';\n-  } else {\n-    bower.dependencies.jquery = '~2.1.1';\n-  }\n-\n-  if (this.includeModernizr) {\n-    bower.dependencies.modernizr = '~2.8.1';\n-  }\n-\n-  this.copy('bowerrc', '.bowerrc');\n-  this.write('bower.json', JSON.stringify(bower, null, 2));\n-};\n-\n-AppGenerator.prototype.jshint = function () {\n-  this.copy('jshintrc', '.jshintrc');\n-};\n-\n-AppGenerator.prototype.editorConfig = function () {\n-  this.copy('editorconfig', '.editorconfig');\n-};\n-\n-AppGenerator.prototype.h5bp = function () {\n-  this.copy('favicon.ico', 'app/favicon.ico');\n-  this.copy('robots.txt', 'app/robots.txt');\n-};\n-\n-AppGenerator.prototype.mainStylesheet = function () {\n-  var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n-  this.copy(css, 'app/styles/' + css);\n-};\n-\n-AppGenerator.prototype.writeIndex = function () {\n-  this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n-  this.indexFile = this.engine(this.indexFile, this);\n-\n-  // wire Bootstrap plugins\n-  if (this.includeBootstrap) {\n-    var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n-    this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n-      bs + 'affix.js',\n-      bs + 'alert.js',\n-      bs + 'dropdown.js',\n-      bs + 'tooltip.js',\n-      bs + 'modal.js',\n-      bs + 'transition.js',\n-      bs + 'button.js',\n-      bs + 'popover.js',\n-      bs + 'carousel.js',\n-      bs + 'scrollspy.js',\n-      bs + 'collapse.js',\n-      bs + 'tab.js'\n-    ]);\n-  }\n-\n-  this.indexFile = this.appendFiles({\n-    html: this.indexFile,\n-    fileType: 'js',\n-    optimizedPath: 'scripts/main.js',\n-    sourceFileList: ['scripts/main.js']\n-  });\n-};\n-\n-AppGenerator.prototype.app = function () {\n-  this.mkdir('app');\n-  this.mkdir('app/scripts');\n-  this.mkdir('app/styles');\n-  this.mkdir('app/images');\n-  this.mkdir('app/fonts');\n-  this.write('app/index.html', this.indexFile);\n-  this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n-};\n-\n-AppGenerator.prototype.install = function () {\n-  var howToInstall =\n-    '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n-    '\\nyour HTML by running:' +\n-    '\\n' +\n-    chalk.yellow.bold('\\n  gulp wiredep');\n-\n-  if (this.options['skip-install']) {\n-    this.log(howToInstall);\n-    return;\n-  }\n+    this.installDependencies({\n+      skipMessage: this.options['skip-install-message'],\n+      skipInstall: this.options['skip-install'],\n+      callback: function () {",
        "path": "app/index.js",
        "position": null,
        "original_position": 347,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd probably not use callback here and instead use the `end` priority.\n",
        "created_at": "2014-09-10T23:29:46Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17396030",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17396030"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17396030"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17398276",
        "pull_request_review_id": null,
        "id": 17398276,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk4Mjc2",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n+      this.indexFile = this.engine(this.indexFile, this);\n+\n+      // wire Bootstrap plugins\n+      if (this.includeBootstrap) {\n+        var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n+        this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n+          bs + 'affix.js',\n+          bs + 'alert.js',\n+          bs + 'dropdown.js',\n+          bs + 'tooltip.js',\n+          bs + 'modal.js',\n+          bs + 'transition.js',\n+          bs + 'button.js',\n+          bs + 'popover.js',\n+          bs + 'carousel.js',\n+          bs + 'scrollspy.js',\n+          bs + 'collapse.js',\n+          bs + 'tab.js'\n+        ]);\n+      }\n \n-  var prompts = [{\n-    type: 'checkbox',\n-    name: 'features',\n-    message: 'What more would you like?',\n-    choices: [{\n-      name: 'Sass',\n-      value: 'includeSass',\n-      checked: true\n-    }, {\n-      name: 'Bootstrap',\n-      value: 'includeBootstrap',\n-      checked: true\n-    }, {\n-      name: 'Modernizr',\n-      value: 'includeModernizr',\n-      checked: true\n-    }]\n-  }];\n-\n-  this.prompt(prompts, function (answers) {\n-    var features = answers.features;\n-\n-    var hasFeature = function (feat) {\n-      return features.indexOf(feat) !== -1;\n+      this.indexFile = this.appendFiles({\n+        html: this.indexFile,\n+        fileType: 'js',\n+        optimizedPath: 'scripts/main.js',\n+        sourceFileList: ['scripts/main.js']\n+      });\n+    },\n+\n+    app: function () {\n+      this.mkdir('app');\n+      this.mkdir('app/scripts');\n+      this.mkdir('app/styles');\n+      this.mkdir('app/images');\n+      this.mkdir('app/fonts');\n+      this.write('app/index.html', this.indexFile);\n+      this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n+    }\n+  },\n+\n+  install: function () {\n+    var howToInstall =\n+      '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n+      '\\nyour HTML by running:' +\n+      '\\n' +\n+      chalk.yellow.bold('\\n  gulp wiredep');\n+\n+    if (this.options['skip-install']) {\n+      this.log(howToInstall);\n+      return;\n     }\n \n-    // manually deal with the response, get back and store the results.\n-    // we change a bit this way of doing to automatically do this in the self.prompt() method.\n-    this.includeSass = hasFeature('includeSass');\n-    this.includeBootstrap = hasFeature('includeBootstrap');\n-    this.includeModernizr = hasFeature('includeModernizr');\n-\n-    cb();\n-  }.bind(this));\n-};\n-\n-AppGenerator.prototype.gulpfile = function () {\n-  this.template('gulpfile.js');\n-};\n-\n-AppGenerator.prototype.packageJSON = function () {\n-  this.template('_package.json', 'package.json');\n-};\n-\n-AppGenerator.prototype.git = function () {\n-  this.copy('gitignore', '.gitignore');\n-  this.copy('gitattributes', '.gitattributes');\n-};\n-\n-AppGenerator.prototype.bower = function () {\n-  var bower = {\n-    name: this._.slugify(this.appname),\n-    private: true,\n-    dependencies: {}\n-  };\n-\n-  if (this.includeBootstrap) {\n-    var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n-    bower.dependencies[bs] = '~3.2.0';\n-  } else {\n-    bower.dependencies.jquery = '~2.1.1';\n-  }\n-\n-  if (this.includeModernizr) {\n-    bower.dependencies.modernizr = '~2.8.1';\n-  }\n-\n-  this.copy('bowerrc', '.bowerrc');\n-  this.write('bower.json', JSON.stringify(bower, null, 2));\n-};\n-\n-AppGenerator.prototype.jshint = function () {\n-  this.copy('jshintrc', '.jshintrc');\n-};\n-\n-AppGenerator.prototype.editorConfig = function () {\n-  this.copy('editorconfig', '.editorconfig');\n-};\n-\n-AppGenerator.prototype.h5bp = function () {\n-  this.copy('favicon.ico', 'app/favicon.ico');\n-  this.copy('robots.txt', 'app/robots.txt');\n-};\n-\n-AppGenerator.prototype.mainStylesheet = function () {\n-  var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n-  this.copy(css, 'app/styles/' + css);\n-};\n-\n-AppGenerator.prototype.writeIndex = function () {\n-  this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n-  this.indexFile = this.engine(this.indexFile, this);\n-\n-  // wire Bootstrap plugins\n-  if (this.includeBootstrap) {\n-    var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n-    this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n-      bs + 'affix.js',\n-      bs + 'alert.js',\n-      bs + 'dropdown.js',\n-      bs + 'tooltip.js',\n-      bs + 'modal.js',\n-      bs + 'transition.js',\n-      bs + 'button.js',\n-      bs + 'popover.js',\n-      bs + 'carousel.js',\n-      bs + 'scrollspy.js',\n-      bs + 'collapse.js',\n-      bs + 'tab.js'\n-    ]);\n-  }\n-\n-  this.indexFile = this.appendFiles({\n-    html: this.indexFile,\n-    fileType: 'js',\n-    optimizedPath: 'scripts/main.js',\n-    sourceFileList: ['scripts/main.js']\n-  });\n-};\n-\n-AppGenerator.prototype.app = function () {\n-  this.mkdir('app');\n-  this.mkdir('app/scripts');\n-  this.mkdir('app/styles');\n-  this.mkdir('app/images');\n-  this.mkdir('app/fonts');\n-  this.write('app/index.html', this.indexFile);\n-  this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n-};\n-\n-AppGenerator.prototype.install = function () {\n-  var howToInstall =\n-    '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n-    '\\nyour HTML by running:' +\n-    '\\n' +\n-    chalk.yellow.bold('\\n  gulp wiredep');\n-\n-  if (this.options['skip-install']) {\n-    this.log(howToInstall);\n-    return;\n-  }\n+    this.installDependencies({\n+      skipMessage: this.options['skip-install-message'],\n+      skipInstall: this.options['skip-install'],\n+      callback: function () {\n+        var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n \n-  var done = this.async();\n-  this.installDependencies({\n-    skipMessage: this.options['skip-install-message'],\n-    skipInstall: this.options['skip-install'],\n-    callback: function () {\n-      var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n-\n-      // wire Bower packages to .html\n-      wiredep({\n-        bowerJson: bowerJson,\n-        directory: 'bower_components',\n-        exclude: ['bootstrap-sass', 'bootstrap.js'],\n-        src: 'app/index.html'\n-      });\n+        this.log(JSON.stringify(bowerJson));",
        "path": "app/index.js",
        "position": null,
        "original_position": 364,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Whoops, a leftover from debugging :smiley: \n",
        "created_at": "2014-09-11T00:34:47Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17398276",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17398276"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17398276"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17414934",
        "pull_request_review_id": null,
        "id": 17414934,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE0OTM0",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');",
        "path": "app/index.js",
        "position": null,
        "original_position": 30,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Since I'm not using it, can I remove the `require` altogether?\n",
        "created_at": "2014-09-11T10:59:58Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17414934",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17414934"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17414934"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17415195",
        "pull_request_review_id": null,
        "id": 17415195,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE1MTk1",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));",
        "path": "app/index.js",
        "position": null,
        "original_position": 46,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "[yosay](https://github.com/yeoman/yosay) it!\n",
        "created_at": "2014-09-11T11:08:35Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17415195",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17415195"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17415195"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17415599",
        "pull_request_review_id": null,
        "id": 17415599,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE1NTk5",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));",
        "path": "app/index.js",
        "position": null,
        "original_position": 46,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good idea! I'll make an `'Allo 'allo!` intro, unless someone has a better idea.\n",
        "created_at": "2014-09-11T11:24:13Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17415599",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17415599"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17415599"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17416308",
        "pull_request_review_id": null,
        "id": 17416308,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE2MzA4",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n+      this.indexFile = this.engine(this.indexFile, this);\n+\n+      // wire Bootstrap plugins\n+      if (this.includeBootstrap) {\n+        var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n+        this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n+          bs + 'affix.js',\n+          bs + 'alert.js',\n+          bs + 'dropdown.js',\n+          bs + 'tooltip.js',\n+          bs + 'modal.js',\n+          bs + 'transition.js',\n+          bs + 'button.js',\n+          bs + 'popover.js',\n+          bs + 'carousel.js',\n+          bs + 'scrollspy.js',\n+          bs + 'collapse.js',\n+          bs + 'tab.js'\n+        ]);\n+      }\n \n-  var prompts = [{\n-    type: 'checkbox',\n-    name: 'features',\n-    message: 'What more would you like?',\n-    choices: [{\n-      name: 'Sass',\n-      value: 'includeSass',\n-      checked: true\n-    }, {\n-      name: 'Bootstrap',\n-      value: 'includeBootstrap',\n-      checked: true\n-    }, {\n-      name: 'Modernizr',\n-      value: 'includeModernizr',\n-      checked: true\n-    }]\n-  }];\n-\n-  this.prompt(prompts, function (answers) {\n-    var features = answers.features;\n-\n-    var hasFeature = function (feat) {\n-      return features.indexOf(feat) !== -1;\n+      this.indexFile = this.appendFiles({\n+        html: this.indexFile,\n+        fileType: 'js',\n+        optimizedPath: 'scripts/main.js',\n+        sourceFileList: ['scripts/main.js']\n+      });\n+    },\n+\n+    app: function () {\n+      this.mkdir('app');\n+      this.mkdir('app/scripts');\n+      this.mkdir('app/styles');\n+      this.mkdir('app/images');\n+      this.mkdir('app/fonts');\n+      this.write('app/index.html', this.indexFile);\n+      this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n+    }\n+  },\n+\n+  install: function () {\n+    var howToInstall =\n+      '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n+      '\\nyour HTML by running:' +\n+      '\\n' +\n+      chalk.yellow.bold('\\n  gulp wiredep');\n+\n+    if (this.options['skip-install']) {\n+      this.log(howToInstall);\n+      return;\n     }\n \n-    // manually deal with the response, get back and store the results.\n-    // we change a bit this way of doing to automatically do this in the self.prompt() method.\n-    this.includeSass = hasFeature('includeSass');\n-    this.includeBootstrap = hasFeature('includeBootstrap');\n-    this.includeModernizr = hasFeature('includeModernizr');\n-\n-    cb();\n-  }.bind(this));\n-};\n-\n-AppGenerator.prototype.gulpfile = function () {\n-  this.template('gulpfile.js');\n-};\n-\n-AppGenerator.prototype.packageJSON = function () {\n-  this.template('_package.json', 'package.json');\n-};\n-\n-AppGenerator.prototype.git = function () {\n-  this.copy('gitignore', '.gitignore');\n-  this.copy('gitattributes', '.gitattributes');\n-};\n-\n-AppGenerator.prototype.bower = function () {\n-  var bower = {\n-    name: this._.slugify(this.appname),\n-    private: true,\n-    dependencies: {}\n-  };\n-\n-  if (this.includeBootstrap) {\n-    var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n-    bower.dependencies[bs] = '~3.2.0';\n-  } else {\n-    bower.dependencies.jquery = '~2.1.1';\n-  }\n-\n-  if (this.includeModernizr) {\n-    bower.dependencies.modernizr = '~2.8.1';\n-  }\n-\n-  this.copy('bowerrc', '.bowerrc');\n-  this.write('bower.json', JSON.stringify(bower, null, 2));\n-};\n-\n-AppGenerator.prototype.jshint = function () {\n-  this.copy('jshintrc', '.jshintrc');\n-};\n-\n-AppGenerator.prototype.editorConfig = function () {\n-  this.copy('editorconfig', '.editorconfig');\n-};\n-\n-AppGenerator.prototype.h5bp = function () {\n-  this.copy('favicon.ico', 'app/favicon.ico');\n-  this.copy('robots.txt', 'app/robots.txt');\n-};\n-\n-AppGenerator.prototype.mainStylesheet = function () {\n-  var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n-  this.copy(css, 'app/styles/' + css);\n-};\n-\n-AppGenerator.prototype.writeIndex = function () {\n-  this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n-  this.indexFile = this.engine(this.indexFile, this);\n-\n-  // wire Bootstrap plugins\n-  if (this.includeBootstrap) {\n-    var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n-    this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n-      bs + 'affix.js',\n-      bs + 'alert.js',\n-      bs + 'dropdown.js',\n-      bs + 'tooltip.js',\n-      bs + 'modal.js',\n-      bs + 'transition.js',\n-      bs + 'button.js',\n-      bs + 'popover.js',\n-      bs + 'carousel.js',\n-      bs + 'scrollspy.js',\n-      bs + 'collapse.js',\n-      bs + 'tab.js'\n-    ]);\n-  }\n-\n-  this.indexFile = this.appendFiles({\n-    html: this.indexFile,\n-    fileType: 'js',\n-    optimizedPath: 'scripts/main.js',\n-    sourceFileList: ['scripts/main.js']\n-  });\n-};\n-\n-AppGenerator.prototype.app = function () {\n-  this.mkdir('app');\n-  this.mkdir('app/scripts');\n-  this.mkdir('app/styles');\n-  this.mkdir('app/images');\n-  this.mkdir('app/fonts');\n-  this.write('app/index.html', this.indexFile);\n-  this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n-};\n-\n-AppGenerator.prototype.install = function () {\n-  var howToInstall =\n-    '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n-    '\\nyour HTML by running:' +\n-    '\\n' +\n-    chalk.yellow.bold('\\n  gulp wiredep');\n-\n-  if (this.options['skip-install']) {\n-    this.log(howToInstall);\n-    return;\n-  }\n+    this.installDependencies({\n+      skipMessage: this.options['skip-install-message'],\n+      skipInstall: this.options['skip-install'],\n+      callback: function () {\n+        var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n \n-  var done = this.async();\n-  this.installDependencies({\n-    skipMessage: this.options['skip-install-message'],\n-    skipInstall: this.options['skip-install'],\n-    callback: function () {\n-      var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n-\n-      // wire Bower packages to .html\n-      wiredep({\n-        bowerJson: bowerJson,\n-        directory: 'bower_components',\n-        exclude: ['bootstrap-sass', 'bootstrap.js'],\n-        src: 'app/index.html'\n-      });\n+        this.log(JSON.stringify(bowerJson));\n \n-      if (this.includeSass) {\n-        // wire Bower packages to .scss\n+        // wire Bower packages to .html\n         wiredep({\n           bowerJson: bowerJson,\n           directory: 'bower_components',\n-          src: 'app/styles/*.scss'\n+          exclude: ['bootstrap-sass', 'bootstrap.js'],\n+          src: 'app/index.html'\n         });\n-      }\n \n-      done();\n-    }.bind(this)\n-  });\n-};\n+        if (this.includeSass) {\n+          // wire Bower packages to .scss\n+          wiredep({\n+            bowerJson: bowerJson,\n+            directory: 'bower_components',\n+            src: 'app/styles/*.scss'\n+          });\n+        }\n+      }.bind(this)\n+    });\n+\n+    this.on('end', function () {\n+      this.invoke(this.options['test-framework'], {",
        "path": "app/index.js",
        "position": null,
        "original_position": 394,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not really clear on how `composeWith` works. Where do I call it? Does it run automatically when generator-gulp-webapp is initiated? Does it run in parallel with generator-gulp-webapp or after it's finished?\n",
        "created_at": "2014-09-11T11:47:17Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17416308",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17416308"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17416308"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17416515",
        "pull_request_review_id": null,
        "id": 17416515,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE2NTE1",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n+      this.indexFile = this.engine(this.indexFile, this);\n+\n+      // wire Bootstrap plugins\n+      if (this.includeBootstrap) {\n+        var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n+        this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n+          bs + 'affix.js',\n+          bs + 'alert.js',\n+          bs + 'dropdown.js',\n+          bs + 'tooltip.js',\n+          bs + 'modal.js',\n+          bs + 'transition.js',\n+          bs + 'button.js',\n+          bs + 'popover.js',\n+          bs + 'carousel.js',\n+          bs + 'scrollspy.js',\n+          bs + 'collapse.js',\n+          bs + 'tab.js'\n+        ]);\n+      }\n \n-  var prompts = [{\n-    type: 'checkbox',\n-    name: 'features',\n-    message: 'What more would you like?',\n-    choices: [{\n-      name: 'Sass',\n-      value: 'includeSass',\n-      checked: true\n-    }, {\n-      name: 'Bootstrap',\n-      value: 'includeBootstrap',\n-      checked: true\n-    }, {\n-      name: 'Modernizr',\n-      value: 'includeModernizr',\n-      checked: true\n-    }]\n-  }];\n-\n-  this.prompt(prompts, function (answers) {\n-    var features = answers.features;\n-\n-    var hasFeature = function (feat) {\n-      return features.indexOf(feat) !== -1;\n+      this.indexFile = this.appendFiles({\n+        html: this.indexFile,\n+        fileType: 'js',\n+        optimizedPath: 'scripts/main.js',\n+        sourceFileList: ['scripts/main.js']\n+      });\n+    },\n+\n+    app: function () {\n+      this.mkdir('app');\n+      this.mkdir('app/scripts');\n+      this.mkdir('app/styles');\n+      this.mkdir('app/images');\n+      this.mkdir('app/fonts');\n+      this.write('app/index.html', this.indexFile);\n+      this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n+    }\n+  },\n+\n+  install: function () {\n+    var howToInstall =\n+      '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n+      '\\nyour HTML by running:' +\n+      '\\n' +\n+      chalk.yellow.bold('\\n  gulp wiredep');\n+\n+    if (this.options['skip-install']) {\n+      this.log(howToInstall);\n+      return;\n     }\n \n-    // manually deal with the response, get back and store the results.\n-    // we change a bit this way of doing to automatically do this in the self.prompt() method.\n-    this.includeSass = hasFeature('includeSass');\n-    this.includeBootstrap = hasFeature('includeBootstrap');\n-    this.includeModernizr = hasFeature('includeModernizr');\n-\n-    cb();\n-  }.bind(this));\n-};\n-\n-AppGenerator.prototype.gulpfile = function () {\n-  this.template('gulpfile.js');\n-};\n-\n-AppGenerator.prototype.packageJSON = function () {\n-  this.template('_package.json', 'package.json');\n-};\n-\n-AppGenerator.prototype.git = function () {\n-  this.copy('gitignore', '.gitignore');\n-  this.copy('gitattributes', '.gitattributes');\n-};\n-\n-AppGenerator.prototype.bower = function () {\n-  var bower = {\n-    name: this._.slugify(this.appname),\n-    private: true,\n-    dependencies: {}\n-  };\n-\n-  if (this.includeBootstrap) {\n-    var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n-    bower.dependencies[bs] = '~3.2.0';\n-  } else {\n-    bower.dependencies.jquery = '~2.1.1';\n-  }\n-\n-  if (this.includeModernizr) {\n-    bower.dependencies.modernizr = '~2.8.1';\n-  }\n-\n-  this.copy('bowerrc', '.bowerrc');\n-  this.write('bower.json', JSON.stringify(bower, null, 2));\n-};\n-\n-AppGenerator.prototype.jshint = function () {\n-  this.copy('jshintrc', '.jshintrc');\n-};\n-\n-AppGenerator.prototype.editorConfig = function () {\n-  this.copy('editorconfig', '.editorconfig');\n-};\n-\n-AppGenerator.prototype.h5bp = function () {\n-  this.copy('favicon.ico', 'app/favicon.ico');\n-  this.copy('robots.txt', 'app/robots.txt');\n-};\n-\n-AppGenerator.prototype.mainStylesheet = function () {\n-  var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n-  this.copy(css, 'app/styles/' + css);\n-};\n-\n-AppGenerator.prototype.writeIndex = function () {\n-  this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n-  this.indexFile = this.engine(this.indexFile, this);\n-\n-  // wire Bootstrap plugins\n-  if (this.includeBootstrap) {\n-    var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n-    this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n-      bs + 'affix.js',\n-      bs + 'alert.js',\n-      bs + 'dropdown.js',\n-      bs + 'tooltip.js',\n-      bs + 'modal.js',\n-      bs + 'transition.js',\n-      bs + 'button.js',\n-      bs + 'popover.js',\n-      bs + 'carousel.js',\n-      bs + 'scrollspy.js',\n-      bs + 'collapse.js',\n-      bs + 'tab.js'\n-    ]);\n-  }\n-\n-  this.indexFile = this.appendFiles({\n-    html: this.indexFile,\n-    fileType: 'js',\n-    optimizedPath: 'scripts/main.js',\n-    sourceFileList: ['scripts/main.js']\n-  });\n-};\n-\n-AppGenerator.prototype.app = function () {\n-  this.mkdir('app');\n-  this.mkdir('app/scripts');\n-  this.mkdir('app/styles');\n-  this.mkdir('app/images');\n-  this.mkdir('app/fonts');\n-  this.write('app/index.html', this.indexFile);\n-  this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n-};\n-\n-AppGenerator.prototype.install = function () {\n-  var howToInstall =\n-    '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n-    '\\nyour HTML by running:' +\n-    '\\n' +\n-    chalk.yellow.bold('\\n  gulp wiredep');\n-\n-  if (this.options['skip-install']) {\n-    this.log(howToInstall);\n-    return;\n-  }\n+    this.installDependencies({\n+      skipMessage: this.options['skip-install-message'],\n+      skipInstall: this.options['skip-install'],\n+      callback: function () {\n+        var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n \n-  var done = this.async();\n-  this.installDependencies({\n-    skipMessage: this.options['skip-install-message'],\n-    skipInstall: this.options['skip-install'],\n-    callback: function () {\n-      var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n-\n-      // wire Bower packages to .html\n-      wiredep({\n-        bowerJson: bowerJson,\n-        directory: 'bower_components',\n-        exclude: ['bootstrap-sass', 'bootstrap.js'],\n-        src: 'app/index.html'\n-      });\n+        this.log(JSON.stringify(bowerJson));\n \n-      if (this.includeSass) {\n-        // wire Bower packages to .scss\n+        // wire Bower packages to .html\n         wiredep({\n           bowerJson: bowerJson,\n           directory: 'bower_components',\n-          src: 'app/styles/*.scss'\n+          exclude: ['bootstrap-sass', 'bootstrap.js'],\n+          src: 'app/index.html'\n         });\n-      }\n \n-      done();\n-    }.bind(this)\n-  });\n-};\n+        if (this.includeSass) {\n+          // wire Bower packages to .scss\n+          wiredep({\n+            bowerJson: bowerJson,\n+            directory: 'bower_components',\n+            src: 'app/styles/*.scss'\n+          });\n+        }\n+      }.bind(this)\n+    });\n+\n+    this.on('end', function () {\n+      this.invoke(this.options['test-framework'], {",
        "path": "app/index.js",
        "position": null,
        "original_position": 394,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm running it on `end` on purpose, because of the `chdir` problem for which I didn't manage to find a workaround. generator-mocha has to chdir to `test`, which screws up wiredep.\n",
        "created_at": "2014-09-11T11:53:54Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17416515",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17416515"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17416515"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17416627",
        "pull_request_review_id": null,
        "id": 17416627,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE2NjI3",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));",
        "path": "app/index.js",
        "position": null,
        "original_position": 130,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I get an error saying `#writeJSON` doesn't exist.\n",
        "created_at": "2014-09-11T11:57:21Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17416627",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17416627"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17416627"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17416798",
        "pull_request_review_id": null,
        "id": 17416798,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE2Nzk4",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');",
        "path": "app/index.js",
        "position": null,
        "original_position": 30,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hm, it appears that if I put `var pkg = require('../package.json')` at the top, generator complains `pkg is not defined`\u2026\n",
        "created_at": "2014-09-11T12:01:57Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17416798",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17416798"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17416798"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17442834",
        "pull_request_review_id": null,
        "id": 17442834,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDQyODM0",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));",
        "path": "app/index.js",
        "position": null,
        "original_position": 130,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh... my bad, you're correct it doesn't exist. The way you do it is fine then.\n",
        "created_at": "2014-09-11T19:26:04Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17442834",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17442834"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17442834"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17442903",
        "pull_request_review_id": null,
        "id": 17442903,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDQyOTAz",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n+      this.indexFile = this.engine(this.indexFile, this);\n+\n+      // wire Bootstrap plugins\n+      if (this.includeBootstrap) {\n+        var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n+        this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n+          bs + 'affix.js',\n+          bs + 'alert.js',\n+          bs + 'dropdown.js',\n+          bs + 'tooltip.js',\n+          bs + 'modal.js',\n+          bs + 'transition.js',\n+          bs + 'button.js',\n+          bs + 'popover.js',\n+          bs + 'carousel.js',\n+          bs + 'scrollspy.js',\n+          bs + 'collapse.js',\n+          bs + 'tab.js'\n+        ]);\n+      }\n \n-  var prompts = [{\n-    type: 'checkbox',\n-    name: 'features',\n-    message: 'What more would you like?',\n-    choices: [{\n-      name: 'Sass',\n-      value: 'includeSass',\n-      checked: true\n-    }, {\n-      name: 'Bootstrap',\n-      value: 'includeBootstrap',\n-      checked: true\n-    }, {\n-      name: 'Modernizr',\n-      value: 'includeModernizr',\n-      checked: true\n-    }]\n-  }];\n-\n-  this.prompt(prompts, function (answers) {\n-    var features = answers.features;\n-\n-    var hasFeature = function (feat) {\n-      return features.indexOf(feat) !== -1;\n+      this.indexFile = this.appendFiles({\n+        html: this.indexFile,\n+        fileType: 'js',\n+        optimizedPath: 'scripts/main.js',\n+        sourceFileList: ['scripts/main.js']\n+      });\n+    },\n+\n+    app: function () {\n+      this.mkdir('app');\n+      this.mkdir('app/scripts');\n+      this.mkdir('app/styles');\n+      this.mkdir('app/images');\n+      this.mkdir('app/fonts');\n+      this.write('app/index.html', this.indexFile);\n+      this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n+    }\n+  },\n+\n+  install: function () {\n+    var howToInstall =\n+      '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n+      '\\nyour HTML by running:' +\n+      '\\n' +\n+      chalk.yellow.bold('\\n  gulp wiredep');\n+\n+    if (this.options['skip-install']) {\n+      this.log(howToInstall);\n+      return;\n     }\n \n-    // manually deal with the response, get back and store the results.\n-    // we change a bit this way of doing to automatically do this in the self.prompt() method.\n-    this.includeSass = hasFeature('includeSass');\n-    this.includeBootstrap = hasFeature('includeBootstrap');\n-    this.includeModernizr = hasFeature('includeModernizr');\n-\n-    cb();\n-  }.bind(this));\n-};\n-\n-AppGenerator.prototype.gulpfile = function () {\n-  this.template('gulpfile.js');\n-};\n-\n-AppGenerator.prototype.packageJSON = function () {\n-  this.template('_package.json', 'package.json');\n-};\n-\n-AppGenerator.prototype.git = function () {\n-  this.copy('gitignore', '.gitignore');\n-  this.copy('gitattributes', '.gitattributes');\n-};\n-\n-AppGenerator.prototype.bower = function () {\n-  var bower = {\n-    name: this._.slugify(this.appname),\n-    private: true,\n-    dependencies: {}\n-  };\n-\n-  if (this.includeBootstrap) {\n-    var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n-    bower.dependencies[bs] = '~3.2.0';\n-  } else {\n-    bower.dependencies.jquery = '~2.1.1';\n-  }\n-\n-  if (this.includeModernizr) {\n-    bower.dependencies.modernizr = '~2.8.1';\n-  }\n-\n-  this.copy('bowerrc', '.bowerrc');\n-  this.write('bower.json', JSON.stringify(bower, null, 2));\n-};\n-\n-AppGenerator.prototype.jshint = function () {\n-  this.copy('jshintrc', '.jshintrc');\n-};\n-\n-AppGenerator.prototype.editorConfig = function () {\n-  this.copy('editorconfig', '.editorconfig');\n-};\n-\n-AppGenerator.prototype.h5bp = function () {\n-  this.copy('favicon.ico', 'app/favicon.ico');\n-  this.copy('robots.txt', 'app/robots.txt');\n-};\n-\n-AppGenerator.prototype.mainStylesheet = function () {\n-  var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n-  this.copy(css, 'app/styles/' + css);\n-};\n-\n-AppGenerator.prototype.writeIndex = function () {\n-  this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n-  this.indexFile = this.engine(this.indexFile, this);\n-\n-  // wire Bootstrap plugins\n-  if (this.includeBootstrap) {\n-    var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n-    this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n-      bs + 'affix.js',\n-      bs + 'alert.js',\n-      bs + 'dropdown.js',\n-      bs + 'tooltip.js',\n-      bs + 'modal.js',\n-      bs + 'transition.js',\n-      bs + 'button.js',\n-      bs + 'popover.js',\n-      bs + 'carousel.js',\n-      bs + 'scrollspy.js',\n-      bs + 'collapse.js',\n-      bs + 'tab.js'\n-    ]);\n-  }\n-\n-  this.indexFile = this.appendFiles({\n-    html: this.indexFile,\n-    fileType: 'js',\n-    optimizedPath: 'scripts/main.js',\n-    sourceFileList: ['scripts/main.js']\n-  });\n-};\n-\n-AppGenerator.prototype.app = function () {\n-  this.mkdir('app');\n-  this.mkdir('app/scripts');\n-  this.mkdir('app/styles');\n-  this.mkdir('app/images');\n-  this.mkdir('app/fonts');\n-  this.write('app/index.html', this.indexFile);\n-  this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n-};\n-\n-AppGenerator.prototype.install = function () {\n-  var howToInstall =\n-    '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n-    '\\nyour HTML by running:' +\n-    '\\n' +\n-    chalk.yellow.bold('\\n  gulp wiredep');\n-\n-  if (this.options['skip-install']) {\n-    this.log(howToInstall);\n-    return;\n-  }\n+    this.installDependencies({\n+      skipMessage: this.options['skip-install-message'],\n+      skipInstall: this.options['skip-install'],\n+      callback: function () {\n+        var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n \n-  var done = this.async();\n-  this.installDependencies({\n-    skipMessage: this.options['skip-install-message'],\n-    skipInstall: this.options['skip-install'],\n-    callback: function () {\n-      var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n-\n-      // wire Bower packages to .html\n-      wiredep({\n-        bowerJson: bowerJson,\n-        directory: 'bower_components',\n-        exclude: ['bootstrap-sass', 'bootstrap.js'],\n-        src: 'app/index.html'\n-      });\n+        this.log(JSON.stringify(bowerJson));\n \n-      if (this.includeSass) {\n-        // wire Bower packages to .scss\n+        // wire Bower packages to .html\n         wiredep({\n           bowerJson: bowerJson,\n           directory: 'bower_components',\n-          src: 'app/styles/*.scss'\n+          exclude: ['bootstrap-sass', 'bootstrap.js'],\n+          src: 'app/index.html'\n         });\n-      }\n \n-      done();\n-    }.bind(this)\n-  });\n-};\n+        if (this.includeSass) {\n+          // wire Bower packages to .scss\n+          wiredep({\n+            bowerJson: bowerJson,\n+            directory: 'bower_components',\n+            src: 'app/styles/*.scss'\n+          });\n+        }\n+      }.bind(this)\n+    });\n+\n+    this.on('end', function () {\n+      this.invoke(this.options['test-framework'], {",
        "path": "app/index.js",
        "position": null,
        "original_position": 394,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> I'm running it on end on purpose, because of the chdir problem for which I didn't manage to find a workaround. generator-mocha has to chdir to test, which screws up wiredep.\n\nThen add a comment explaining the bug and ideally linking to an open issue.\n",
        "created_at": "2014-09-11T19:27:16Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17442903",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17442903"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17442903"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17443014",
        "pull_request_review_id": null,
        "id": 17443014,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDQzMDE0",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n+      this.indexFile = this.engine(this.indexFile, this);\n+\n+      // wire Bootstrap plugins\n+      if (this.includeBootstrap) {\n+        var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n+        this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n+          bs + 'affix.js',\n+          bs + 'alert.js',\n+          bs + 'dropdown.js',\n+          bs + 'tooltip.js',\n+          bs + 'modal.js',\n+          bs + 'transition.js',\n+          bs + 'button.js',\n+          bs + 'popover.js',\n+          bs + 'carousel.js',\n+          bs + 'scrollspy.js',\n+          bs + 'collapse.js',\n+          bs + 'tab.js'\n+        ]);\n+      }\n \n-  var prompts = [{\n-    type: 'checkbox',\n-    name: 'features',\n-    message: 'What more would you like?',\n-    choices: [{\n-      name: 'Sass',\n-      value: 'includeSass',\n-      checked: true\n-    }, {\n-      name: 'Bootstrap',\n-      value: 'includeBootstrap',\n-      checked: true\n-    }, {\n-      name: 'Modernizr',\n-      value: 'includeModernizr',\n-      checked: true\n-    }]\n-  }];\n-\n-  this.prompt(prompts, function (answers) {\n-    var features = answers.features;\n-\n-    var hasFeature = function (feat) {\n-      return features.indexOf(feat) !== -1;\n+      this.indexFile = this.appendFiles({\n+        html: this.indexFile,\n+        fileType: 'js',\n+        optimizedPath: 'scripts/main.js',\n+        sourceFileList: ['scripts/main.js']\n+      });\n+    },\n+\n+    app: function () {\n+      this.mkdir('app');\n+      this.mkdir('app/scripts');\n+      this.mkdir('app/styles');\n+      this.mkdir('app/images');\n+      this.mkdir('app/fonts');\n+      this.write('app/index.html', this.indexFile);\n+      this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n+    }\n+  },\n+\n+  install: function () {\n+    var howToInstall =\n+      '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n+      '\\nyour HTML by running:' +\n+      '\\n' +\n+      chalk.yellow.bold('\\n  gulp wiredep');\n+\n+    if (this.options['skip-install']) {\n+      this.log(howToInstall);\n+      return;\n     }\n \n-    // manually deal with the response, get back and store the results.\n-    // we change a bit this way of doing to automatically do this in the self.prompt() method.\n-    this.includeSass = hasFeature('includeSass');\n-    this.includeBootstrap = hasFeature('includeBootstrap');\n-    this.includeModernizr = hasFeature('includeModernizr');\n-\n-    cb();\n-  }.bind(this));\n-};\n-\n-AppGenerator.prototype.gulpfile = function () {\n-  this.template('gulpfile.js');\n-};\n-\n-AppGenerator.prototype.packageJSON = function () {\n-  this.template('_package.json', 'package.json');\n-};\n-\n-AppGenerator.prototype.git = function () {\n-  this.copy('gitignore', '.gitignore');\n-  this.copy('gitattributes', '.gitattributes');\n-};\n-\n-AppGenerator.prototype.bower = function () {\n-  var bower = {\n-    name: this._.slugify(this.appname),\n-    private: true,\n-    dependencies: {}\n-  };\n-\n-  if (this.includeBootstrap) {\n-    var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n-    bower.dependencies[bs] = '~3.2.0';\n-  } else {\n-    bower.dependencies.jquery = '~2.1.1';\n-  }\n-\n-  if (this.includeModernizr) {\n-    bower.dependencies.modernizr = '~2.8.1';\n-  }\n-\n-  this.copy('bowerrc', '.bowerrc');\n-  this.write('bower.json', JSON.stringify(bower, null, 2));\n-};\n-\n-AppGenerator.prototype.jshint = function () {\n-  this.copy('jshintrc', '.jshintrc');\n-};\n-\n-AppGenerator.prototype.editorConfig = function () {\n-  this.copy('editorconfig', '.editorconfig');\n-};\n-\n-AppGenerator.prototype.h5bp = function () {\n-  this.copy('favicon.ico', 'app/favicon.ico');\n-  this.copy('robots.txt', 'app/robots.txt');\n-};\n-\n-AppGenerator.prototype.mainStylesheet = function () {\n-  var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n-  this.copy(css, 'app/styles/' + css);\n-};\n-\n-AppGenerator.prototype.writeIndex = function () {\n-  this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n-  this.indexFile = this.engine(this.indexFile, this);\n-\n-  // wire Bootstrap plugins\n-  if (this.includeBootstrap) {\n-    var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n-    this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n-      bs + 'affix.js',\n-      bs + 'alert.js',\n-      bs + 'dropdown.js',\n-      bs + 'tooltip.js',\n-      bs + 'modal.js',\n-      bs + 'transition.js',\n-      bs + 'button.js',\n-      bs + 'popover.js',\n-      bs + 'carousel.js',\n-      bs + 'scrollspy.js',\n-      bs + 'collapse.js',\n-      bs + 'tab.js'\n-    ]);\n-  }\n-\n-  this.indexFile = this.appendFiles({\n-    html: this.indexFile,\n-    fileType: 'js',\n-    optimizedPath: 'scripts/main.js',\n-    sourceFileList: ['scripts/main.js']\n-  });\n-};\n-\n-AppGenerator.prototype.app = function () {\n-  this.mkdir('app');\n-  this.mkdir('app/scripts');\n-  this.mkdir('app/styles');\n-  this.mkdir('app/images');\n-  this.mkdir('app/fonts');\n-  this.write('app/index.html', this.indexFile);\n-  this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n-};\n-\n-AppGenerator.prototype.install = function () {\n-  var howToInstall =\n-    '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n-    '\\nyour HTML by running:' +\n-    '\\n' +\n-    chalk.yellow.bold('\\n  gulp wiredep');\n-\n-  if (this.options['skip-install']) {\n-    this.log(howToInstall);\n-    return;\n-  }\n+    this.installDependencies({\n+      skipMessage: this.options['skip-install-message'],\n+      skipInstall: this.options['skip-install'],\n+      callback: function () {\n+        var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n \n-  var done = this.async();\n-  this.installDependencies({\n-    skipMessage: this.options['skip-install-message'],\n-    skipInstall: this.options['skip-install'],\n-    callback: function () {\n-      var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n-\n-      // wire Bower packages to .html\n-      wiredep({\n-        bowerJson: bowerJson,\n-        directory: 'bower_components',\n-        exclude: ['bootstrap-sass', 'bootstrap.js'],\n-        src: 'app/index.html'\n-      });\n+        this.log(JSON.stringify(bowerJson));\n \n-      if (this.includeSass) {\n-        // wire Bower packages to .scss\n+        // wire Bower packages to .html\n         wiredep({\n           bowerJson: bowerJson,\n           directory: 'bower_components',\n-          src: 'app/styles/*.scss'\n+          exclude: ['bootstrap-sass', 'bootstrap.js'],\n+          src: 'app/index.html'\n         });\n-      }\n \n-      done();\n-    }.bind(this)\n-  });\n-};\n+        if (this.includeSass) {\n+          // wire Bower packages to .scss\n+          wiredep({\n+            bowerJson: bowerJson,\n+            directory: 'bower_components',\n+            src: 'app/styles/*.scss'\n+          });\n+        }\n+      }.bind(this)\n+    });\n+\n+    this.on('end', function () {\n+      this.invoke(this.options['test-framework'], {",
        "path": "app/index.js",
        "position": null,
        "original_position": 394,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "About `composeWith` http://yeoman.io/authoring/composability.html\n\nIt will run the generator side by side, but if you call `composeWith` at this point, your generator will already be done, so it'll be almost just like calling `invoke`. Any reason you can't call it earlier though?\n",
        "created_at": "2014-09-11T19:29:01Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17443014",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17443014"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17443014"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17447832",
        "pull_request_review_id": null,
        "id": 17447832,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDQ3ODMy",
        "diff_hunk": "@@ -1,215 +1,213 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n \n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+  },\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+  initializing: function() {\n+    this.pkg = require('../package.json');\n+  },\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n-      }\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.options['skip-welcome-message']) {\n+      this.log(yosay());\n+      this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n     }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n+      }\n \n-AppGenerator.prototype.askFor = function askFor() {\n-  var cb = this.async();\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-  // welcome message\n-  if (!this.options['skip-welcome-message']) {\n-    this.log(yosay());\n-    this.log(chalk.magenta('Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n-  }\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n+      this.copy(css, 'app/styles/' + css);\n+    },\n+\n+    writeIndex: function () {\n+      this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n+      this.indexFile = this.engine(this.indexFile, this);\n+\n+      // wire Bootstrap plugins\n+      if (this.includeBootstrap) {\n+        var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n+        this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n+          bs + 'affix.js',\n+          bs + 'alert.js',\n+          bs + 'dropdown.js',\n+          bs + 'tooltip.js',\n+          bs + 'modal.js',\n+          bs + 'transition.js',\n+          bs + 'button.js',\n+          bs + 'popover.js',\n+          bs + 'carousel.js',\n+          bs + 'scrollspy.js',\n+          bs + 'collapse.js',\n+          bs + 'tab.js'\n+        ]);\n+      }\n \n-  var prompts = [{\n-    type: 'checkbox',\n-    name: 'features',\n-    message: 'What more would you like?',\n-    choices: [{\n-      name: 'Sass',\n-      value: 'includeSass',\n-      checked: true\n-    }, {\n-      name: 'Bootstrap',\n-      value: 'includeBootstrap',\n-      checked: true\n-    }, {\n-      name: 'Modernizr',\n-      value: 'includeModernizr',\n-      checked: true\n-    }]\n-  }];\n-\n-  this.prompt(prompts, function (answers) {\n-    var features = answers.features;\n-\n-    var hasFeature = function (feat) {\n-      return features.indexOf(feat) !== -1;\n+      this.indexFile = this.appendFiles({\n+        html: this.indexFile,\n+        fileType: 'js',\n+        optimizedPath: 'scripts/main.js',\n+        sourceFileList: ['scripts/main.js']\n+      });\n+    },\n+\n+    app: function () {\n+      this.mkdir('app');\n+      this.mkdir('app/scripts');\n+      this.mkdir('app/styles');\n+      this.mkdir('app/images');\n+      this.mkdir('app/fonts');\n+      this.write('app/index.html', this.indexFile);\n+      this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n+    }\n+  },\n+\n+  install: function () {\n+    var howToInstall =\n+      '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n+      '\\nyour HTML by running:' +\n+      '\\n' +\n+      chalk.yellow.bold('\\n  gulp wiredep');\n+\n+    if (this.options['skip-install']) {\n+      this.log(howToInstall);\n+      return;\n     }\n \n-    // manually deal with the response, get back and store the results.\n-    // we change a bit this way of doing to automatically do this in the self.prompt() method.\n-    this.includeSass = hasFeature('includeSass');\n-    this.includeBootstrap = hasFeature('includeBootstrap');\n-    this.includeModernizr = hasFeature('includeModernizr');\n-\n-    cb();\n-  }.bind(this));\n-};\n-\n-AppGenerator.prototype.gulpfile = function () {\n-  this.template('gulpfile.js');\n-};\n-\n-AppGenerator.prototype.packageJSON = function () {\n-  this.template('_package.json', 'package.json');\n-};\n-\n-AppGenerator.prototype.git = function () {\n-  this.copy('gitignore', '.gitignore');\n-  this.copy('gitattributes', '.gitattributes');\n-};\n-\n-AppGenerator.prototype.bower = function () {\n-  var bower = {\n-    name: this._.slugify(this.appname),\n-    private: true,\n-    dependencies: {}\n-  };\n-\n-  if (this.includeBootstrap) {\n-    var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n-    bower.dependencies[bs] = '~3.2.0';\n-  } else {\n-    bower.dependencies.jquery = '~2.1.1';\n-  }\n-\n-  if (this.includeModernizr) {\n-    bower.dependencies.modernizr = '~2.8.1';\n-  }\n-\n-  this.copy('bowerrc', '.bowerrc');\n-  this.write('bower.json', JSON.stringify(bower, null, 2));\n-};\n-\n-AppGenerator.prototype.jshint = function () {\n-  this.copy('jshintrc', '.jshintrc');\n-};\n-\n-AppGenerator.prototype.editorConfig = function () {\n-  this.copy('editorconfig', '.editorconfig');\n-};\n-\n-AppGenerator.prototype.h5bp = function () {\n-  this.copy('favicon.ico', 'app/favicon.ico');\n-  this.copy('robots.txt', 'app/robots.txt');\n-};\n-\n-AppGenerator.prototype.mainStylesheet = function () {\n-  var css = 'main.' + (this.includeSass ? 's' : '') + 'css';\n-  this.copy(css, 'app/styles/' + css);\n-};\n-\n-AppGenerator.prototype.writeIndex = function () {\n-  this.indexFile = this.readFileAsString(path.join(this.sourceRoot(), 'index.html'));\n-  this.indexFile = this.engine(this.indexFile, this);\n-\n-  // wire Bootstrap plugins\n-  if (this.includeBootstrap) {\n-    var bs = '../bower_components/bootstrap' + (this.includeSass ? '-sass-official/assets/javascripts/bootstrap/' : '/js/');\n-    this.indexFile = this.appendScripts(this.indexFile, 'scripts/plugins.js', [\n-      bs + 'affix.js',\n-      bs + 'alert.js',\n-      bs + 'dropdown.js',\n-      bs + 'tooltip.js',\n-      bs + 'modal.js',\n-      bs + 'transition.js',\n-      bs + 'button.js',\n-      bs + 'popover.js',\n-      bs + 'carousel.js',\n-      bs + 'scrollspy.js',\n-      bs + 'collapse.js',\n-      bs + 'tab.js'\n-    ]);\n-  }\n-\n-  this.indexFile = this.appendFiles({\n-    html: this.indexFile,\n-    fileType: 'js',\n-    optimizedPath: 'scripts/main.js',\n-    sourceFileList: ['scripts/main.js']\n-  });\n-};\n-\n-AppGenerator.prototype.app = function () {\n-  this.mkdir('app');\n-  this.mkdir('app/scripts');\n-  this.mkdir('app/styles');\n-  this.mkdir('app/images');\n-  this.mkdir('app/fonts');\n-  this.write('app/index.html', this.indexFile);\n-  this.write('app/scripts/main.js', 'console.log(\\'\\\\\\'Allo \\\\\\'Allo!\\');');\n-};\n-\n-AppGenerator.prototype.install = function () {\n-  var howToInstall =\n-    '\\nAfter running `npm install & bower install`, inject your front end dependencies into' +\n-    '\\nyour HTML by running:' +\n-    '\\n' +\n-    chalk.yellow.bold('\\n  gulp wiredep');\n-\n-  if (this.options['skip-install']) {\n-    this.log(howToInstall);\n-    return;\n-  }\n+    this.installDependencies({\n+      skipMessage: this.options['skip-install-message'],\n+      skipInstall: this.options['skip-install'],\n+      callback: function () {\n+        var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n \n-  var done = this.async();\n-  this.installDependencies({\n-    skipMessage: this.options['skip-install-message'],\n-    skipInstall: this.options['skip-install'],\n-    callback: function () {\n-      var bowerJson = JSON.parse(fs.readFileSync('./bower.json'));\n-\n-      // wire Bower packages to .html\n-      wiredep({\n-        bowerJson: bowerJson,\n-        directory: 'bower_components',\n-        exclude: ['bootstrap-sass', 'bootstrap.js'],\n-        src: 'app/index.html'\n-      });\n+        this.log(JSON.stringify(bowerJson));\n \n-      if (this.includeSass) {\n-        // wire Bower packages to .scss\n+        // wire Bower packages to .html\n         wiredep({\n           bowerJson: bowerJson,\n           directory: 'bower_components',\n-          src: 'app/styles/*.scss'\n+          exclude: ['bootstrap-sass', 'bootstrap.js'],\n+          src: 'app/index.html'\n         });\n-      }\n \n-      done();\n-    }.bind(this)\n-  });\n-};\n+        if (this.includeSass) {\n+          // wire Bower packages to .scss\n+          wiredep({\n+            bowerJson: bowerJson,\n+            directory: 'bower_components',\n+            src: 'app/styles/*.scss'\n+          });\n+        }\n+      }.bind(this)\n+    });\n+\n+    this.on('end', function () {\n+      this.invoke(this.options['test-framework'], {",
        "path": "app/index.js",
        "position": null,
        "original_position": 394,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "cf8997ebce203c229250eab656c7093f5cc77da2",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, I read the documentation, but I still didn't quite get it. Oh, so when you call `composeWith`, then that generator starts, got it. I would invoke it sooner, but then wiredep wouldn't work because generator-mocha changes working directory (yeoman/generator-mocha#28). I'll add a comment for now.\n",
        "created_at": "2014-09-11T20:49:24Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17447832",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17447832"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17447832"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17453416",
        "pull_request_review_id": null,
        "id": 17453416,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDUzNDE2",
        "diff_hunk": "@@ -1,196 +1,204 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n-\n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n+\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+\n+    this.option('skip-welcome-message', {\n+      desc: 'Skips the welcome message',\n+      type: Boolean\n+    });\n+    this.skipWelcomeMessage = this.options['skip-welcome-message'];\n+\n+    this.option('skip-install', {\n+      desc: 'Skips the installation of dependencies',\n+      type: Boolean\n+    });\n+    this.skipInstall = this.options['skip-install'];\n+\n+    this.option('skip-install-message', {\n+      desc: 'Skips the message after the installation of dependencies',\n+      type: Boolean\n+    });\n+    this.skipInstallMessage = this.options['skip-install-message'];\n+  },\n+\n+  initializing: function () {\n+    this.pkg = require('../package.json');\n+  },\n+\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.skipWelcomeMessage) {\n+      this.log(yosay('\\'Allo \\'allo! Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n+    }\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n       }\n-    }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';",
        "path": "app/index.js",
        "position": null,
        "original_position": 158,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "de673ac4dae5fe2b87cb03634b6b64aeb1738ef0",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just an opinionated nit, this kind of logic is hard to reason about. I'd really go if/else with a this.copy in each case.\n",
        "created_at": "2014-09-11T22:26:02Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17453416",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17453416"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17453416"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17453534",
        "pull_request_review_id": null,
        "id": 17453534,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDUzNTM0",
        "diff_hunk": "@@ -1,196 +1,204 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n-\n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n+\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];",
        "path": "app/index.js",
        "position": null,
        "original_position": 25,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "de673ac4dae5fe2b87cb03634b6b64aeb1738ef0",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should you validate test-framework value is actually compatible?\n",
        "created_at": "2014-09-11T22:28:43Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17453534",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17453534"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17453534"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17453566",
        "pull_request_review_id": null,
        "id": 17453566,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDUzNTY2",
        "diff_hunk": "@@ -1,196 +1,204 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n-\n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n+\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+\n+    this.option('skip-welcome-message', {\n+      desc: 'Skips the welcome message',\n+      type: Boolean\n+    });\n+    this.skipWelcomeMessage = this.options['skip-welcome-message'];",
        "path": "app/index.js",
        "position": null,
        "original_position": 31,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "de673ac4dae5fe2b87cb03634b6b64aeb1738ef0",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Opinionated nit here too, I don't like to assign lots of property on objects, I feel you can just call `this.options['skip-welcome-message']` when you need it. - But feel free to overlook!\n",
        "created_at": "2014-09-11T22:29:39Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17453566",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17453566"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17453566"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17459290",
        "pull_request_review_id": null,
        "id": 17459290,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU5Mjkw",
        "diff_hunk": "@@ -1,196 +1,204 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n-\n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n+\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];",
        "path": "app/index.js",
        "position": null,
        "original_position": 25,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "de673ac4dae5fe2b87cb03634b6b64aeb1738ef0",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Absolutely, good idea :smiley: \n",
        "created_at": "2014-09-12T01:15:56Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17459290",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17459290"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17459290"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17459296",
        "pull_request_review_id": null,
        "id": 17459296,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU5Mjk2",
        "diff_hunk": "@@ -1,196 +1,204 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n-\n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n+\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+\n+    this.option('skip-welcome-message', {\n+      desc: 'Skips the welcome message',\n+      type: Boolean\n+    });\n+    this.skipWelcomeMessage = this.options['skip-welcome-message'];\n+\n+    this.option('skip-install', {\n+      desc: 'Skips the installation of dependencies',\n+      type: Boolean\n+    });\n+    this.skipInstall = this.options['skip-install'];\n+\n+    this.option('skip-install-message', {\n+      desc: 'Skips the message after the installation of dependencies',\n+      type: Boolean\n+    });\n+    this.skipInstallMessage = this.options['skip-install-message'];\n+  },\n+\n+  initializing: function () {\n+    this.pkg = require('../package.json');\n+  },\n+\n+  prompting: function () {\n+    var done = this.async();\n+\n+    if (!this.skipWelcomeMessage) {\n+      this.log(yosay('\\'Allo \\'allo! Out of the box I include HTML5 Boilerplate, jQuery, and a gulpfile.js to build your app.'));\n+    }\n \n-  // for hooks to resolve on mocha by default\n-  options['test-framework'] = this.testFramework;\n+    var prompts = [{\n+      type: 'checkbox',\n+      name: 'features',\n+      message: 'What more would you like?',\n+      choices: [{\n+        name: 'Sass',\n+        value: 'includeSass',\n+        checked: true\n+      }, {\n+        name: 'Bootstrap',\n+        value: 'includeBootstrap',\n+        checked: true\n+      }, {\n+        name: 'Modernizr',\n+        value: 'includeModernizr',\n+        checked: true\n+      }]\n+    }];\n+\n+    this.prompt(prompts, function (answers) {\n+      var features = answers.features;\n+\n+      var hasFeature = function (feat) {\n+        return features.indexOf(feat) !== -1;\n+      };\n+\n+      // manually deal with the response, get back and store the results.\n+      // we change a bit this way of doing to automatically do this in the self.prompt() method.\n+      this.includeSass = hasFeature('includeSass');\n+      this.includeBootstrap = hasFeature('includeBootstrap');\n+      this.includeModernizr = hasFeature('includeModernizr');\n \n-  // resolved to mocha by default (could be switched to jasmine for instance)\n-  this.hookFor('test-framework', {\n-    as: 'app',\n-    options: {\n-      options: {\n-        'skip-install': options['skip-install-message'],\n-        'skip-message': options['skip-install']\n+      done();\n+    }.bind(this));\n+  },\n+\n+  writing: {\n+    gulpfile: function() {\n+      this.template('gulpfile.js');\n+    },\n+\n+    packageJSON: function() {\n+      this.template('_package.json', 'package.json');\n+    },\n+\n+    git: function() {\n+      this.copy('gitignore', '.gitignore');\n+      this.copy('gitattributes', '.gitattributes');\n+    },\n+\n+    bower: function() {\n+      var bower = {\n+        name: this._.slugify(this.appname),\n+        private: true,\n+        dependencies: {}\n+      };\n+\n+      if (this.includeBootstrap) {\n+        var bs = 'bootstrap' + (this.includeSass ? '-sass-official' : '');\n+        bower.dependencies[bs] = '~3.2.0';\n+      } else {\n+        bower.dependencies.jquery = '~2.1.1';\n       }\n-    }\n-  });\n \n-  this.options = options;\n-  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n-};\n+      if (this.includeModernizr) {\n+        bower.dependencies.modernizr = '~2.8.1';\n+      }\n \n-util.inherits(AppGenerator, yeoman.generators.Base);\n+      this.copy('bowerrc', '.bowerrc');\n+      this.write('bower.json', JSON.stringify(bower, null, 2));\n+    },\n+\n+    jshint: function () {\n+      this.copy('jshintrc', '.jshintrc');\n+    },\n+\n+    editorConfig: function () {\n+      this.copy('editorconfig', '.editorconfig');\n+    },\n+\n+    h5bp: function () {\n+      this.copy('favicon.ico', 'app/favicon.ico');\n+      this.copy('robots.txt', 'app/robots.txt');\n+    },\n+\n+    mainStylesheet: function () {\n+      var css = 'main.' + (this.includeSass ? 's' : '') + 'css';",
        "path": "app/index.js",
        "position": null,
        "original_position": 158,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "de673ac4dae5fe2b87cb03634b6b64aeb1738ef0",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Me too, I didn't like this either.\n",
        "created_at": "2014-09-12T01:16:10Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17459296",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17459296"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17459296"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17459314",
        "pull_request_review_id": null,
        "id": 17459314,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDU5MzE0",
        "diff_hunk": "@@ -1,196 +1,204 @@\n 'use strict';\n var fs = require('fs');\n-var util = require('util');\n var path = require('path');\n-var spawn = require('child_process').spawn;\n var yeoman = require('yeoman-generator');\n var yosay = require('yosay');\n var chalk = require('chalk');\n var wiredep = require('wiredep');\n \n-var AppGenerator = module.exports = function Appgenerator(args, options, config) {\n-  yeoman.generators.Base.apply(this, arguments);\n-\n-  // setup the test-framework property, gulpfile template will need this\n-  this.testFramework = options['test-framework'] || 'mocha';\n+module.exports = yeoman.generators.Base.extend({\n+  constructor: function () {\n+    yeoman.generators.Base.apply(this, arguments);\n+\n+    this.option('test-framework', {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    });\n+    this.testFramework = this.options['test-framework'];\n+\n+    this.option('skip-welcome-message', {\n+      desc: 'Skips the welcome message',\n+      type: Boolean\n+    });\n+    this.skipWelcomeMessage = this.options['skip-welcome-message'];",
        "path": "app/index.js",
        "position": null,
        "original_position": 31,
        "commit_id": "2bdb88e90193a5f8b3b8137ba2827d5a1cad7835",
        "original_commit_id": "de673ac4dae5fe2b87cb03634b6b64aeb1738ef0",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree.\n",
        "created_at": "2014-09-12T01:16:48Z",
        "updated_at": "2014-10-10T08:59:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17459314",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/17459314"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/194#discussion_r17459314"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/19830759",
        "pull_request_review_id": null,
        "id": 19830759,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODMwNzU5",
        "diff_hunk": "@@ -37,6 +37,7 @@ gulp.task('html', ['styles'], function () {<% if (includeBootstrap && includeSas\n     .pipe($.if('*.css', $.csso()))<% } %>\n     .pipe(assets.restore())\n     .pipe($.useref())\n+    .pipe($.if('*.html', $.minifyHtml({conditionals: true})))",
        "path": "app/templates/gulpfile.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "ddab73c54b3e547c9db95441e519b366aa86839c",
        "original_commit_id": "ddab73c54b3e547c9db95441e519b366aa86839c",
        "user": {
            "login": "eddiemonge",
            "id": 127535,
            "node_id": "MDQ6VXNlcjEyNzUzNQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/127535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eddiemonge",
            "html_url": "https://github.com/eddiemonge",
            "followers_url": "https://api.github.com/users/eddiemonge/followers",
            "following_url": "https://api.github.com/users/eddiemonge/following{/other_user}",
            "gists_url": "https://api.github.com/users/eddiemonge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eddiemonge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eddiemonge/subscriptions",
            "organizations_url": "https://api.github.com/users/eddiemonge/orgs",
            "repos_url": "https://api.github.com/users/eddiemonge/repos",
            "events_url": "https://api.github.com/users/eddiemonge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eddiemonge/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd add `loose:true` as well as that one causes issues. Not sure if gulp-minify-html will pass it to minimize though\n",
        "created_at": "2014-11-04T19:56:49Z",
        "updated_at": "2014-11-04T19:56:49Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/221#discussion_r19830759",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/221",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/19830759"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/221#discussion_r19830759"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/221"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/19834362",
        "pull_request_review_id": null,
        "id": 19834362,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODM0MzYy",
        "diff_hunk": "@@ -37,6 +37,7 @@ gulp.task('html', ['styles'], function () {<% if (includeBootstrap && includeSas\n     .pipe($.if('*.css', $.csso()))<% } %>\n     .pipe(assets.restore())\n     .pipe($.useref())\n+    .pipe($.if('*.html', $.minifyHtml({conditionals: true})))",
        "path": "app/templates/gulpfile.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "ddab73c54b3e547c9db95441e519b366aa86839c",
        "original_commit_id": "ddab73c54b3e547c9db95441e519b366aa86839c",
        "user": {
            "login": "austinpray",
            "id": 2192970,
            "node_id": "MDQ6VXNlcjIxOTI5NzA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2192970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/austinpray",
            "html_url": "https://github.com/austinpray",
            "followers_url": "https://api.github.com/users/austinpray/followers",
            "following_url": "https://api.github.com/users/austinpray/following{/other_user}",
            "gists_url": "https://api.github.com/users/austinpray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/austinpray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/austinpray/subscriptions",
            "organizations_url": "https://api.github.com/users/austinpray/orgs",
            "repos_url": "https://api.github.com/users/austinpray/repos",
            "events_url": "https://api.github.com/users/austinpray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/austinpray/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: ^\n",
        "created_at": "2014-11-04T20:50:17Z",
        "updated_at": "2014-11-04T20:50:17Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/221#discussion_r19834362",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/221",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/19834362"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/221#discussion_r19834362"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/221"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/19868663",
        "pull_request_review_id": null,
        "id": 19868663,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODY4NjYz",
        "diff_hunk": "@@ -37,6 +37,7 @@ gulp.task('html', ['styles'], function () {<% if (includeBootstrap && includeSas\n     .pipe($.if('*.css', $.csso()))<% } %>\n     .pipe(assets.restore())\n     .pipe($.useref())\n+    .pipe($.if('*.html', $.minifyHtml({conditionals: true})))",
        "path": "app/templates/gulpfile.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "ddab73c54b3e547c9db95441e519b366aa86839c",
        "original_commit_id": "ddab73c54b3e547c9db95441e519b366aa86839c",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Added on master. I'm pretty sure it will pass it to Minimize.\n",
        "created_at": "2014-11-05T12:00:36Z",
        "updated_at": "2014-11-05T12:00:36Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/221#discussion_r19868663",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/221",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/19868663"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/221#discussion_r19868663"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/221"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21054825",
        "pull_request_review_id": null,
        "id": 21054825,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDU0ODI1",
        "diff_hunk": "@@ -8,6 +8,7 @@\n - [Asset revisioning](revving.md)\n - [React](react.md)\n - [Nunjucks](nunjucks.md)\n+- [AWS S3 deployment](awspublish.md)",
        "path": "docs/recipes/README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "21ecfda1e0d977699698694def0d5ee35b96c246",
        "original_commit_id": "ec55de673f43747e0a679da59c7784e0da866bc0",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`awspublish.md` => `aws-s3-deployment.md`\n",
        "created_at": "2014-11-29T16:31:09Z",
        "updated_at": "2014-11-30T21:16:34Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/234#discussion_r21054825",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/234",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21054825"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/234#discussion_r21054825"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/234"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21054826",
        "pull_request_review_id": null,
        "id": 21054826,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDU0ODI2",
        "diff_hunk": "@@ -0,0 +1,56 @@\n+# AWS S3 Deployment\n+\n+This recipe demonstrates how to set up AWS S3 deployment task.\n+\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install the [gulp-awspublish](https://github.com/pgherveou/gulp-awspublish) gulp plugin:\n+\n+```sh\n+$ npm install --save-dev gulp-awspublish\n+```\n+\n+### 2. Create a `publish` task\n+\n+Add this task to your `gulpfile.js`. It will run `build` task before publishing:\n+\n+```js\n+gulp.task('publish', ['build'], function() {",
        "path": "docs/recipes/awspublish.md",
        "position": null,
        "original_position": 21,
        "commit_id": "21ecfda1e0d977699698694def0d5ee35b96c246",
        "original_commit_id": "ec55de673f43747e0a679da59c7784e0da866bc0",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`function () {`\n",
        "created_at": "2014-11-29T16:31:17Z",
        "updated_at": "2014-11-30T21:16:34Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/234#discussion_r21054826",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/234",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21054826"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/234#discussion_r21054826"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/234"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21054860",
        "pull_request_review_id": null,
        "id": 21054860,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDU0ODYw",
        "diff_hunk": "@@ -0,0 +1,56 @@\n+# AWS S3 Deployment\n+\n+This recipe demonstrates how to set up AWS S3 deployment task.\n+\n+\n+## Steps\n+\n+### 1. Install dependencies\n+\n+Install the [gulp-awspublish](https://github.com/pgherveou/gulp-awspublish) gulp plugin:\n+\n+```sh\n+$ npm install --save-dev gulp-awspublish\n+```\n+\n+### 2. Create a `publish` task\n+\n+Add this task to your `gulpfile.js`. It will run `build` task before publishing:\n+\n+```js\n+gulp.task('publish', ['build'], function() {\n+  // create a new publisher\n+  var publisher = $.awspublish.create({\n+    key: '...',\n+    secret: '...',\n+    bucket: '...'\n+  });\n+\n+  // define custom headers\n+  var headers = {\n+    'Cache-Control': 'max-age=315360000, no-transform, public'\n+  };\n+\n+  return gulp.src('dist/**/*.*')\n+    .pipe(publisher.publish(headers))\n+    .pipe(publisher.sync())\n+    .pipe(publisher.cache())\n+    .pipe($.awspublish.reporter());\n+});\n+```\n+\n+### 3. Add cache file to `.gitignore`.\n+\n+```\n+.awspublish-*\n+```\n+\n+> `publisher.cache()` creates a through stream that creates or updates a cache file using file s3 path and file etag. Consecutive runs of publish will use this file to avoid reuploading identical files.\n+\n+### 4. Publish\n+\n+Run the following command to deploy:\n+\n+```sh\n+$ gulp publish",
        "path": "docs/recipes/awspublish.md",
        "position": null,
        "original_position": 55,
        "commit_id": "21ecfda1e0d977699698694def0d5ee35b96c246",
        "original_commit_id": "ec55de673f43747e0a679da59c7784e0da866bc0",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I find it weird that this isn't called `gulp deploy`, when we're talking about deployment here.\n",
        "created_at": "2014-11-29T16:33:36Z",
        "updated_at": "2014-11-30T21:16:34Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/234#discussion_r21054860",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/234",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21054860"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/234#discussion_r21054860"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/234"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21422943",
        "pull_request_review_id": null,
        "id": 21422943,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIyOTQz",
        "diff_hunk": "@@ -54,3 +54,7 @@ Run the following command to deploy:\n ```sh\n $ gulp deploy\n ```\n+\n+###  4+1. Note",
        "path": "docs/recipes/aws-s3-deployment.md",
        "position": null,
        "original_position": 5,
        "commit_id": "e5743d4c319e2b5a88f3d7fb0e3e7bccbe5fbae3",
        "original_commit_id": "1c7254d3fe2df8d0188b864641372ade4761a58a",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`### Tip`\n",
        "created_at": "2014-12-07T08:54:19Z",
        "updated_at": "2014-12-07T10:51:24Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/239#discussion_r21422943",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/239",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21422943"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/239#discussion_r21422943"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/239"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21422950",
        "pull_request_review_id": null,
        "id": 21422950,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIyOTUw",
        "diff_hunk": "@@ -54,3 +54,7 @@ Run the following command to deploy:\n ```sh\n $ gulp deploy\n ```\n+\n+###  4+1. Note\n+\n+It is highly recommended to enable asset revisioning (revving). Check the according recipe.",
        "path": "docs/recipes/aws-s3-deployment.md",
        "position": null,
        "original_position": 7,
        "commit_id": "e5743d4c319e2b5a88f3d7fb0e3e7bccbe5fbae3",
        "original_commit_id": "1c7254d3fe2df8d0188b864641372ade4761a58a",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`It is highly recommended to enable [asset revisioning](docs/recipes/asset-revisioning.md).`\n",
        "created_at": "2014-12-07T08:55:06Z",
        "updated_at": "2014-12-07T10:51:24Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/239#discussion_r21422950",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/239",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21422950"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/239#discussion_r21422950"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/239"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21422953",
        "pull_request_review_id": null,
        "id": 21422953,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIyOTUz",
        "diff_hunk": "@@ -23,23 +23,18 @@ Instead of wasting performance reading CSS and JS files into a new stream, we ca\n \n ```diff\n gulp.task('html', ['styles'], function () {\n-    var jsFilter = $.filter('**/*.js');\n-    var cssFilter = $.filter('**/*.css');\n-\n-    return gulp.src('app/*.html')\n-        .pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n-        .pipe(jsFilter)\n-        .pipe($.uglify())\n-        .pipe(jsFilter.restore())\n-        .pipe(cssFilter)\n-        .pipe($.csso())\n-        .pipe(cssFilter.restore())\n-+       .pipe($.rev())\n-        .pipe($.useref.restore())\n-        .pipe($.useref())\n-+       .pipe($.revReplace())\n-        .pipe(gulp.dest('dist'))\n-        .pipe($.size());\n+  var assets = $.useref.assets({searchPath: '{.tmp,app}'});\n+\n+  return gulp.src('app/*.html')\n+    .pipe(assets)\n+    .pipe($.if('*.js', $.uglify()))\n+    .pipe($.if('*.css', $.csso()))\n++   .pipe($.rev())\n+    .pipe(assets.restore())\n+    .pipe($.useref())\n++   .pipe($.revReplace())\n+    .pipe($.if('*.html', $.minifyHtml({conditionals: true, loose: true})))\n+    .pipe(gulp.dest('dist'));",
        "path": "docs/recipes/asset-revisioning.md",
        "position": 32,
        "original_position": 32,
        "commit_id": "e5743d4c319e2b5a88f3d7fb0e3e7bccbe5fbae3",
        "original_commit_id": "1c7254d3fe2df8d0188b864641372ade4761a58a",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Don't change the indentation.\n",
        "created_at": "2014-12-07T08:55:50Z",
        "updated_at": "2014-12-07T10:51:24Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/239#discussion_r21422953",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/239",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21422953"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/239#discussion_r21422953"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/239"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21423451",
        "pull_request_review_id": null,
        "id": 21423451,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIzNDUx",
        "diff_hunk": "@@ -23,23 +23,18 @@ Instead of wasting performance reading CSS and JS files into a new stream, we ca\n \n ```diff\n gulp.task('html', ['styles'], function () {\n-    var jsFilter = $.filter('**/*.js');\n-    var cssFilter = $.filter('**/*.css');\n-\n-    return gulp.src('app/*.html')\n-        .pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n-        .pipe(jsFilter)\n-        .pipe($.uglify())\n-        .pipe(jsFilter.restore())\n-        .pipe(cssFilter)\n-        .pipe($.csso())\n-        .pipe(cssFilter.restore())\n-+       .pipe($.rev())\n-        .pipe($.useref.restore())\n-        .pipe($.useref())\n-+       .pipe($.revReplace())\n-        .pipe(gulp.dest('dist'))\n-        .pipe($.size());\n+  var assets = $.useref.assets({searchPath: '{.tmp,app}'});\n+\n+  return gulp.src('app/*.html')\n+    .pipe(assets)\n+    .pipe($.if('*.js', $.uglify()))\n+    .pipe($.if('*.css', $.csso()))\n++   .pipe($.rev())\n+    .pipe(assets.restore())\n+    .pipe($.useref())\n++   .pipe($.revReplace())\n+    .pipe($.if('*.html', $.minifyHtml({conditionals: true, loose: true})))\n+    .pipe(gulp.dest('dist'));",
        "path": "docs/recipes/asset-revisioning.md",
        "position": 32,
        "original_position": 32,
        "commit_id": "e5743d4c319e2b5a88f3d7fb0e3e7bccbe5fbae3",
        "original_commit_id": "1c7254d3fe2df8d0188b864641372ade4761a58a",
        "user": {
            "login": "aliismayilov",
            "id": 993934,
            "node_id": "MDQ6VXNlcjk5MzkzNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/993934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aliismayilov",
            "html_url": "https://github.com/aliismayilov",
            "followers_url": "https://api.github.com/users/aliismayilov/followers",
            "following_url": "https://api.github.com/users/aliismayilov/following{/other_user}",
            "gists_url": "https://api.github.com/users/aliismayilov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aliismayilov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aliismayilov/subscriptions",
            "organizations_url": "https://api.github.com/users/aliismayilov/orgs",
            "repos_url": "https://api.github.com/users/aliismayilov/repos",
            "events_url": "https://api.github.com/users/aliismayilov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aliismayilov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@sindresorhus why? this is the default indentation.\n",
        "created_at": "2014-12-07T10:48:14Z",
        "updated_at": "2014-12-07T10:51:24Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/239#discussion_r21423451",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/239",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21423451"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/239#discussion_r21423451"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/239"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21423480",
        "pull_request_review_id": null,
        "id": 21423480,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIzNDgw",
        "diff_hunk": "@@ -23,23 +23,18 @@ Instead of wasting performance reading CSS and JS files into a new stream, we ca\n \n ```diff\n gulp.task('html', ['styles'], function () {\n-    var jsFilter = $.filter('**/*.js');\n-    var cssFilter = $.filter('**/*.css');\n-\n-    return gulp.src('app/*.html')\n-        .pipe($.useref.assets({searchPath: '{.tmp,app}'}))\n-        .pipe(jsFilter)\n-        .pipe($.uglify())\n-        .pipe(jsFilter.restore())\n-        .pipe(cssFilter)\n-        .pipe($.csso())\n-        .pipe(cssFilter.restore())\n-+       .pipe($.rev())\n-        .pipe($.useref.restore())\n-        .pipe($.useref())\n-+       .pipe($.revReplace())\n-        .pipe(gulp.dest('dist'))\n-        .pipe($.size());\n+  var assets = $.useref.assets({searchPath: '{.tmp,app}'});\n+\n+  return gulp.src('app/*.html')\n+    .pipe(assets)\n+    .pipe($.if('*.js', $.uglify()))\n+    .pipe($.if('*.css', $.csso()))\n++   .pipe($.rev())\n+    .pipe(assets.restore())\n+    .pipe($.useref())\n++   .pipe($.revReplace())\n+    .pipe($.if('*.html', $.minifyHtml({conditionals: true, loose: true})))\n+    .pipe(gulp.dest('dist'));",
        "path": "docs/recipes/asset-revisioning.md",
        "position": 32,
        "original_position": 32,
        "commit_id": "e5743d4c319e2b5a88f3d7fb0e3e7bccbe5fbae3",
        "original_commit_id": "1c7254d3fe2df8d0188b864641372ade4761a58a",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "k\n",
        "created_at": "2014-12-07T10:50:00Z",
        "updated_at": "2014-12-07T10:51:24Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/239#discussion_r21423480",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/239",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21423480"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/239#discussion_r21423480"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/239"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/18005137",
        "pull_request_review_id": null,
        "id": 18005137,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDA1MTM3",
        "diff_hunk": "@@ -22,18 +24,22 @@ gulp.task('jshint', function () {\n     .pipe($.jshint.reporter('fail'));\n });\n \n-gulp.task('html', ['styles'], function () {<% if (includeBootstrap && includeSass) { %>\n-  var lazypipe = require('lazypipe');\n-  var cssChannel = lazypipe()\n-    .pipe($.csso)\n-    .pipe($.replace, 'bower_components/bootstrap-sass-official/assets/fonts/bootstrap','fonts');<% } %>\n+gulp.task('html', ['styles'], function () {\n   var assets = $.useref.assets({searchPath: '{.tmp,app}'});\n \n   return gulp.src('app/*.html')\n     .pipe(assets)\n-    .pipe($.if('*.js', $.uglify()))<% if (includeBootstrap && includeSass) { %>\n-    .pipe($.if('*.css', cssChannel()))<% } else { %>\n-    .pipe($.if('*.css', $.csso()))<% } %>\n+    .pipe($.if('*.js', $.uglify()))\n+    .pipe($.if('*.css', $.postcss([<% if (includeBootstrap && includeSass) { %>\n+      function (css, opts) {\n+        css.eachDecl(function (decl) {\n+          if (decl.prop === 'src') {\n+            decl.value = decl.value.replace(RegExp('bower_components/bootstrap-sass-official/assets/fonts/bootstrap', 'g'), 'fonts');",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 33,
        "commit_id": "f6e9d6cf21cf401bfc484d3e8ff9df258869e9e2",
        "original_commit_id": "c5c5f1e31316a232ffe77801157ac4d0e53dc279",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This isn't scalable. We should use a `postcss` plugin that can generically replace URLs references.\n",
        "created_at": "2014-09-24T22:33:55Z",
        "updated_at": "2014-12-15T12:07:43Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/188#discussion_r18005137",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/188",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/18005137"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/188#discussion_r18005137"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/188"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21831067",
        "pull_request_review_id": null,
        "id": 21831067,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODMxMDY3",
        "diff_hunk": "@@ -10,7 +10,8 @@ gulp.task('styles', function () {<% if (includeSass) { %>\n     .pipe($.rubySass({\n       style: 'expanded',\n       precision: 10\n-    }))<% } else { %>\n+    }))\n+    .on('error', function(err) { console.log(err.message); })<% } else { %>",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 6,
        "commit_id": "7851bc033b2061e251867c70afa6cf324bac10bf",
        "original_commit_id": "8da22af9d229f1c31a66814c36f8ddda8c24df60",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`.on('error', console.error.bind(console));`\n",
        "created_at": "2014-12-15T15:21:06Z",
        "updated_at": "2014-12-15T18:21:10Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/242#discussion_r21831067",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/242",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21831067"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/242#discussion_r21831067"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/242"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21956192",
        "pull_request_review_id": null,
        "id": 21956192,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU2MTky",
        "diff_hunk": "@@ -217,6 +217,7 @@ module.exports = yeoman.generators.Base.extend({\n         bowerJson: bowerJson,\n         directory: 'bower_components',\n         exclude: ['bootstrap-sass', 'bootstrap.js'],\n+        ignorePath: /^(\\.\\.\\/)+/,",
        "path": "app/index.js",
        "position": 13,
        "original_position": 13,
        "commit_id": "64cf7be0979bbba494d56341ba3102fb2b4d07eb",
        "original_commit_id": "8aed74a58011ff12da09fbffda4b380c2e95763e",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nignorePath: /^\\.\\.\\//,\n```\n",
        "created_at": "2014-12-17T07:19:48Z",
        "updated_at": "2014-12-18T13:04:29Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21956192",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21956192"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21956192"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21956196",
        "pull_request_review_id": null,
        "id": 21956196,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU2MTk2",
        "diff_hunk": "@@ -225,6 +226,7 @@ module.exports = yeoman.generators.Base.extend({\n         wiredep({\n           bowerJson: bowerJson,\n           directory: 'bower_components',\n+          ignorePath: /^(\\.\\.\\/)+/,",
        "path": "app/index.js",
        "position": 21,
        "original_position": 21,
        "commit_id": "64cf7be0979bbba494d56341ba3102fb2b4d07eb",
        "original_commit_id": "8aed74a58011ff12da09fbffda4b380c2e95763e",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nignorePath: /^\\.\\.\\//,\n```\n",
        "created_at": "2014-12-17T07:19:55Z",
        "updated_at": "2014-12-18T13:04:29Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21956196",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21956196"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21956196"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21956203",
        "pull_request_review_id": null,
        "id": 21956203,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU2MjAz",
        "diff_hunk": "@@ -95,11 +94,16 @@ gulp.task('wiredep', function () {\n   var wiredep = require('wiredep').stream;\n <% if (includeSass) { %>\n   gulp.src('app/styles/*.scss')\n-    .pipe(wiredep())\n+    .pipe(wiredep({\n+      ignorePath: /^(\\.\\.\\/)+/",
        "path": "app/templates/gulpfile.js",
        "position": 34,
        "original_position": 34,
        "commit_id": "64cf7be0979bbba494d56341ba3102fb2b4d07eb",
        "original_commit_id": "8aed74a58011ff12da09fbffda4b380c2e95763e",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nignorePath: /^\\.\\.\\//\n```\n",
        "created_at": "2014-12-17T07:20:23Z",
        "updated_at": "2014-12-18T13:04:29Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21956203",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21956203"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21956203"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21956211",
        "pull_request_review_id": null,
        "id": 21956211,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU2MjEx",
        "diff_hunk": "@@ -95,11 +94,16 @@ gulp.task('wiredep', function () {\n   var wiredep = require('wiredep').stream;\n <% if (includeSass) { %>\n   gulp.src('app/styles/*.scss')\n-    .pipe(wiredep())\n+    .pipe(wiredep({\n+      ignorePath: /^(\\.\\.\\/)+/\n+    }))\n     .pipe(gulp.dest('app/styles'));\n <% } %>\n   gulp.src('app/*.html')\n-    .pipe(wiredep(<% if (includeSass && includeBootstrap) { %>{exclude: ['bootstrap-sass-official']}<% } %>))\n+    .pipe(wiredep({<% if (includeSass && includeBootstrap) { %>\n+      exclude: ['bootstrap-sass-official'],<% } %>\n+      ignorePath: /^(\\.\\.\\/)+/",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 42,
        "commit_id": "64cf7be0979bbba494d56341ba3102fb2b4d07eb",
        "original_commit_id": "8aed74a58011ff12da09fbffda4b380c2e95763e",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nignorePath: /^\\.\\.\\//\n```\n",
        "created_at": "2014-12-17T07:20:43Z",
        "updated_at": "2014-12-18T13:04:29Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21956211",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21956211"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21956211"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21969054",
        "pull_request_review_id": null,
        "id": 21969054,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MDU0",
        "diff_hunk": "@@ -95,11 +94,16 @@ gulp.task('wiredep', function () {\n   var wiredep = require('wiredep').stream;\n <% if (includeSass) { %>\n   gulp.src('app/styles/*.scss')\n-    .pipe(wiredep())\n+    .pipe(wiredep({\n+      ignorePath: /^(\\.\\.\\/)+/",
        "path": "app/templates/gulpfile.js",
        "position": 34,
        "original_position": 34,
        "commit_id": "64cf7be0979bbba494d56341ba3102fb2b4d07eb",
        "original_commit_id": "8aed74a58011ff12da09fbffda4b380c2e95763e",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Doing that for Sass files would still result in a `../bower_components` path, which is what I'm trying to avoid.\n",
        "created_at": "2014-12-17T12:42:37Z",
        "updated_at": "2014-12-18T13:04:29Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21969054",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21969054"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21969054"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21972154",
        "pull_request_review_id": null,
        "id": 21972154,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTcyMTU0",
        "diff_hunk": "@@ -217,6 +217,7 @@ module.exports = yeoman.generators.Base.extend({\n         bowerJson: bowerJson,\n         directory: 'bower_components',\n         exclude: ['bootstrap-sass', 'bootstrap.js'],\n+        ignorePath: /^(\\.\\.\\/)+/,",
        "path": "app/index.js",
        "position": 13,
        "original_position": 13,
        "commit_id": "64cf7be0979bbba494d56341ba3102fb2b4d07eb",
        "original_commit_id": "8aed74a58011ff12da09fbffda4b380c2e95763e",
        "user": {
            "login": "stephenplusplus",
            "id": 723048,
            "node_id": "MDQ6VXNlcjcyMzA0OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/723048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stephenplusplus",
            "html_url": "https://github.com/stephenplusplus",
            "followers_url": "https://api.github.com/users/stephenplusplus/followers",
            "following_url": "https://api.github.com/users/stephenplusplus/following{/other_user}",
            "gists_url": "https://api.github.com/users/stephenplusplus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stephenplusplus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stephenplusplus/subscriptions",
            "organizations_url": "https://api.github.com/users/stephenplusplus/orgs",
            "repos_url": "https://api.github.com/users/stephenplusplus/repos",
            "events_url": "https://api.github.com/users/stephenplusplus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stephenplusplus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If just one ../ is being replaced, a string: \"../\" also works.\n",
        "created_at": "2014-12-17T13:52:35Z",
        "updated_at": "2014-12-18T13:04:29Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21972154",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21972154"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21972154"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21986464",
        "pull_request_review_id": null,
        "id": 21986464,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTg2NDY0",
        "diff_hunk": "@@ -95,11 +94,16 @@ gulp.task('wiredep', function () {\n   var wiredep = require('wiredep').stream;\n <% if (includeSass) { %>\n   gulp.src('app/styles/*.scss')\n-    .pipe(wiredep())\n+    .pipe(wiredep({\n+      ignorePath: /^(\\.\\.\\/)+/",
        "path": "app/templates/gulpfile.js",
        "position": 34,
        "original_position": 34,
        "commit_id": "64cf7be0979bbba494d56341ba3102fb2b4d07eb",
        "original_commit_id": "8aed74a58011ff12da09fbffda4b380c2e95763e",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, I didn't realize it might be multiple.\n",
        "created_at": "2014-12-17T17:02:18Z",
        "updated_at": "2014-12-18T13:04:29Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21986464",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21986464"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21986464"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21987685",
        "pull_request_review_id": null,
        "id": 21987685,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTg3Njg1",
        "diff_hunk": "@@ -95,11 +94,16 @@ gulp.task('wiredep', function () {\n   var wiredep = require('wiredep').stream;\n <% if (includeSass) { %>\n   gulp.src('app/styles/*.scss')\n-    .pipe(wiredep())\n+    .pipe(wiredep({\n+      ignorePath: /^(\\.\\.\\/)+/",
        "path": "app/templates/gulpfile.js",
        "position": 34,
        "original_position": 34,
        "commit_id": "64cf7be0979bbba494d56341ba3102fb2b4d07eb",
        "original_commit_id": "8aed74a58011ff12da09fbffda4b380c2e95763e",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, I would like to leave it like this, because it's more semantic. If the user happens to create `app/styles/sub/folder/style.scss`, Bower `@import`s would still work.\n",
        "created_at": "2014-12-17T17:17:49Z",
        "updated_at": "2014-12-18T13:04:29Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21987685",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21987685"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21987685"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21988226",
        "pull_request_review_id": null,
        "id": 21988226,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTg4MjI2",
        "diff_hunk": "@@ -95,11 +94,16 @@ gulp.task('wiredep', function () {\n   var wiredep = require('wiredep').stream;\n <% if (includeSass) { %>\n   gulp.src('app/styles/*.scss')\n-    .pipe(wiredep())\n+    .pipe(wiredep({\n+      ignorePath: /^(\\.\\.\\/)+/\n+    }))\n     .pipe(gulp.dest('app/styles'));\n <% } %>\n   gulp.src('app/*.html')\n-    .pipe(wiredep(<% if (includeSass && includeBootstrap) { %>{exclude: ['bootstrap-sass-official']}<% } %>))\n+    .pipe(wiredep({<% if (includeSass && includeBootstrap) { %>\n+      exclude: ['bootstrap-sass-official'],<% } %>\n+      ignorePath: /^(\\.\\.\\/)+/",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 42,
        "commit_id": "64cf7be0979bbba494d56341ba3102fb2b4d07eb",
        "original_commit_id": "8aed74a58011ff12da09fbffda4b380c2e95763e",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would actually want this:\n\n``` js\nignorePath: /^(\\.\\.\\/)*\\.\\./\n```\n\nThis would always end up with the absolute `/bower_components` path, regardless of the file structure. A relative `bower_components` path wouldn't work in `about/index.html`. (I know other asset paths wouldn't work also, but we can at least offer some help.) This would be inconsistent, but nicer to use. And maybe trying to achieve inconsistency here is silly, because `@import`ing works differently than serving assets.\n\nThoughts? @eddiemonge?\n\nAlso, sorry for bothering you with this stuff. It will be over soon.\n",
        "created_at": "2014-12-17T17:24:07Z",
        "updated_at": "2014-12-18T13:04:29Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21988226",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/21988226"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/236#discussion_r21988226"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/236"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/22249872",
        "pull_request_review_id": null,
        "id": 22249872,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjQ5ODcy",
        "diff_hunk": "@@ -0,0 +1,107 @@\n+# Getting Started\n+\n+Welcome to the [gulp][gulp] flavor of our web app generator! If you're not familiar with gulp, we suggest checking out [their docs][gulp-docs].\n+\n+If you haven't already, install [yo][yo] and this generator by running:\n+\n+```sh\n+$ npm install -g yo generator-gulp-webapp\n+```\n+\n+Now you can scaffold your very own web app:\n+\n+```sh\n+$ mkdir my-webap\n+$ cd my-webapp\n+$ yo gulp-webapp\n+```\n+\n+To start developing, run:\n+\n+```sh\n+$ gulp serve\n+```\n+\n+This will fire up a local web server, open http://localhost:9000 in your default browser and watch files for changes, reloading the browser automatically via [LiveReload][lr].\n+\n+To make a production-ready build of the app, run:\n+\n+```sh\n+$ gulp\n+```\n+\n+## Tasks\n+\n+To get the list of available tasks, run:\n+\n+```sh\n+$ gulp --tasks\n+```\n+\n+## Gulp plugins\n+\n+As you might have noticed, gulp plugins (the ones that begin with `gulp-`) don't have to be `require()`'d. They are automatically picked up by [gulp-load-plugins][plugins] and available through the `$` variable.\n+\n+## Serve\n+\n+We use the `.tmp` directory mostly for compiling assets like SCSS files. It has precedence over `app`, so if you had an `app/index.html` template compiling to `.tmp/index.html`, http://localhost:9000 would point to `.tmp/index.html`, which is what we want.\n+\n+This system can be a little confusing with the `watch` task, but it's actually pretty simple:\n+\n+* notify LiveReload when compiled assets change\n+* run the compile task when source assets change\n+\n+E.g. if you have Less files, you would want to notify LiveReload when Less files have compiled, i.e. when `.tmp/styles/**/*.css` change, but you would want to compile Less files by running the `styles` task when source files change, i.e. `app/styles/**/*.less`.",
        "path": "docs/README.md",
        "position": 54,
        "original_position": 54,
        "commit_id": "c9d76cd1d0a03ead6a35c66d57cfa0b7722fa00f",
        "original_commit_id": "c9d76cd1d0a03ead6a35c66d57cfa0b7722fa00f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "LESS\n",
        "created_at": "2014-12-24T09:14:14Z",
        "updated_at": "2014-12-24T09:14:14Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/248#discussion_r22249872",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/248",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/22249872"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/248#discussion_r22249872"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/248"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/22261511",
        "pull_request_review_id": null,
        "id": 22261511,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjYxNTEx",
        "diff_hunk": "@@ -0,0 +1,107 @@\n+# Getting Started\n+\n+Welcome to the [gulp][gulp] flavor of our web app generator! If you're not familiar with gulp, we suggest checking out [their docs][gulp-docs].\n+\n+If you haven't already, install [yo][yo] and this generator by running:\n+\n+```sh\n+$ npm install -g yo generator-gulp-webapp\n+```\n+\n+Now you can scaffold your very own web app:\n+\n+```sh\n+$ mkdir my-webap\n+$ cd my-webapp\n+$ yo gulp-webapp\n+```\n+\n+To start developing, run:\n+\n+```sh\n+$ gulp serve\n+```\n+\n+This will fire up a local web server, open http://localhost:9000 in your default browser and watch files for changes, reloading the browser automatically via [LiveReload][lr].\n+\n+To make a production-ready build of the app, run:\n+\n+```sh\n+$ gulp\n+```\n+\n+## Tasks\n+\n+To get the list of available tasks, run:\n+\n+```sh\n+$ gulp --tasks\n+```\n+\n+## Gulp plugins\n+\n+As you might have noticed, gulp plugins (the ones that begin with `gulp-`) don't have to be `require()`'d. They are automatically picked up by [gulp-load-plugins][plugins] and available through the `$` variable.\n+\n+## Serve\n+\n+We use the `.tmp` directory mostly for compiling assets like SCSS files. It has precedence over `app`, so if you had an `app/index.html` template compiling to `.tmp/index.html`, http://localhost:9000 would point to `.tmp/index.html`, which is what we want.\n+\n+This system can be a little confusing with the `watch` task, but it's actually pretty simple:\n+\n+* notify LiveReload when compiled assets change\n+* run the compile task when source assets change\n+\n+E.g. if you have Less files, you would want to notify LiveReload when Less files have compiled, i.e. when `.tmp/styles/**/*.css` change, but you would want to compile Less files by running the `styles` task when source files change, i.e. `app/styles/**/*.less`.",
        "path": "docs/README.md",
        "position": 54,
        "original_position": 54,
        "commit_id": "c9d76cd1d0a03ead6a35c66d57cfa0b7722fa00f",
        "original_commit_id": "c9d76cd1d0a03ead6a35c66d57cfa0b7722fa00f",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I used [their official site](http://lesscss.org/) as a reference, so I'm not sure anymore :smiley: \n",
        "created_at": "2014-12-24T18:27:32Z",
        "updated_at": "2014-12-24T18:27:32Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/248#discussion_r22261511",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/248",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/22261511"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/248#discussion_r22261511"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/248"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/23500036",
        "pull_request_review_id": null,
        "id": 23500036,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTAwMDM2",
        "diff_hunk": "@@ -63,7 +63,6 @@ gulp.task('extras', function () {\n   return gulp.src([\n     'app/*.*',\n     '!app/*.html',",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 3,
        "commit_id": "11afbae5c0a020068ca0e48d79869543e2bf92f1",
        "original_commit_id": "c60ca4e47d5af056a5ec1def155b5a053e155c4e",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please remove the trailing `,`.\n",
        "created_at": "2015-01-24T22:37:33Z",
        "updated_at": "2015-01-24T22:39:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/262#discussion_r23500036",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/262",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/23500036"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/262#discussion_r23500036"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/262"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/23500058",
        "pull_request_review_id": null,
        "id": 23500058,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTAwMDU4",
        "diff_hunk": "@@ -63,7 +63,6 @@ gulp.task('extras', function () {\n   return gulp.src([\n     'app/*.*',\n     '!app/*.html',",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 3,
        "commit_id": "11afbae5c0a020068ca0e48d79869543e2bf92f1",
        "original_commit_id": "c60ca4e47d5af056a5ec1def155b5a053e155c4e",
        "user": {
            "login": "arthurvr",
            "id": 6025224,
            "node_id": "MDQ6VXNlcjYwMjUyMjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6025224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvr",
            "html_url": "https://github.com/arthurvr",
            "followers_url": "https://api.github.com/users/arthurvr/followers",
            "following_url": "https://api.github.com/users/arthurvr/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvr/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvr/orgs",
            "repos_url": "https://api.github.com/users/arthurvr/repos",
            "events_url": "https://api.github.com/users/arthurvr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done\n",
        "created_at": "2015-01-24T22:39:41Z",
        "updated_at": "2015-01-24T22:39:41Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/262#discussion_r23500058",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/262",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/23500058"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/262#discussion_r23500058"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/262"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26004478",
        "pull_request_review_id": null,
        "id": 26004478,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDA0NDc4",
        "diff_hunk": "@@ -187,6 +187,7 @@ module.exports = yeoman.generators.Base.extend({\n       this.mkdir('app/images');\n       this.mkdir('app/fonts');\n       this.copy('main.js', 'app/scripts/main.js');\n+      this.copy('apple-touch-icon.png', 'app/apple-touch-icon.png');",
        "path": "app/index.js",
        "position": null,
        "original_position": 4,
        "commit_id": "b221022c5cdbb196ebbe7c098a272d551afa2d46",
        "original_commit_id": "4d9a73934cd29ba997b5c5c1f5efb3b8ec4df1c2",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe put this next to `this.copy('favicon.ico', 'app/favicon.ico');`?\n",
        "created_at": "2015-03-08T11:59:54Z",
        "updated_at": "2015-03-08T13:44:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/290#discussion_r26004478",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/290",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26004478"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/290#discussion_r26004478"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/290"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26004768",
        "pull_request_review_id": null,
        "id": 26004768,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDA0NzY4",
        "diff_hunk": "@@ -187,6 +187,7 @@ module.exports = yeoman.generators.Base.extend({\n       this.mkdir('app/images');\n       this.mkdir('app/fonts');\n       this.copy('main.js', 'app/scripts/main.js');\n+      this.copy('apple-touch-icon.png', 'app/apple-touch-icon.png');",
        "path": "app/index.js",
        "position": null,
        "original_position": 4,
        "commit_id": "b221022c5cdbb196ebbe7c098a272d551afa2d46",
        "original_commit_id": "4d9a73934cd29ba997b5c5c1f5efb3b8ec4df1c2",
        "user": {
            "login": "arthurvr",
            "id": 6025224,
            "node_id": "MDQ6VXNlcjYwMjUyMjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6025224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvr",
            "html_url": "https://github.com/arthurvr",
            "followers_url": "https://api.github.com/users/arthurvr/followers",
            "following_url": "https://api.github.com/users/arthurvr/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvr/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvr/orgs",
            "repos_url": "https://api.github.com/users/arthurvr/repos",
            "events_url": "https://api.github.com/users/arthurvr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done\n",
        "created_at": "2015-03-08T12:44:31Z",
        "updated_at": "2015-03-08T13:44:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/290#discussion_r26004768",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/290",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26004768"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/290#discussion_r26004768"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/290"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26459510",
        "pull_request_review_id": null,
        "id": 26459510,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDU5NTEw",
        "diff_hunk": "@@ -25,13 +25,23 @@ gulp.task('styles', function () {<% if (includeSass) { %>\n     .pipe(reload({stream: true}));\n });\n \n-gulp.task('jshint', function () {\n-  return gulp.src('app/scripts/**/*.js')\n-    .pipe(reload({stream: true, once: true}))\n-    .pipe($.jshint())\n-    .pipe($.jshint.reporter('jshint-stylish'))\n-    .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n-});\n+/**\n+ * @param {String|Array} files to provide to `gulp.src`\n+ * @return {Function} callback for `gulp.task` et al\n+ */\n+function jshint (files) {\n+  return function(){\n+    return gulp.src(files)\n+      .pipe(reload({stream: true, once: true}))\n+      .pipe($.jshint())\n+      .pipe($.jshint.reporter('jshint-stylish'))\n+      .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n+  };\n+}\n+\n+gulp.task('jshint', jshint('app/scripts/**/*.js'));\n+\n+gulp.task('jshint:tests', jshint('test/spec/**/*.js'));",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 27,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "al-the-x",
            "id": 96015,
            "node_id": "MDQ6VXNlcjk2MDE1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/96015?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/al-the-x",
            "html_url": "https://github.com/al-the-x",
            "followers_url": "https://api.github.com/users/al-the-x/followers",
            "following_url": "https://api.github.com/users/al-the-x/following{/other_user}",
            "gists_url": "https://api.github.com/users/al-the-x/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/al-the-x/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/al-the-x/subscriptions",
            "organizations_url": "https://api.github.com/users/al-the-x/orgs",
            "repos_url": "https://api.github.com/users/al-the-x/repos",
            "events_url": "https://api.github.com/users/al-the-x/events{/privacy}",
            "received_events_url": "https://api.github.com/users/al-the-x/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not in the original proposal, I know...\n",
        "created_at": "2015-03-16T04:33:26Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26459510",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26459510"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26459510"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26459518",
        "pull_request_review_id": null,
        "id": 26459518,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDU5NTE4",
        "diff_hunk": "@@ -112,6 +122,22 @@ gulp.task('serve:dist', function () {\n   });\n });\n \n+gulp.task('serve:tests', function(){\n+  browserSync({\n+    notify: false,\n+    port: 9090,\n+    server: {\n+      baseDir: 'test'\n+    }\n+  });\n+\n+  gulp.watch([\n+    'test/spec/**/*.js',\n+  ]).on('change', reload);\n+\n+  gulp.watch('test/spec/**/*.js', [ 'jshint:tests' ]);",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 48,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "al-the-x",
            "id": 96015,
            "node_id": "MDQ6VXNlcjk2MDE1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/96015?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/al-the-x",
            "html_url": "https://github.com/al-the-x",
            "followers_url": "https://api.github.com/users/al-the-x/followers",
            "following_url": "https://api.github.com/users/al-the-x/following{/other_user}",
            "gists_url": "https://api.github.com/users/al-the-x/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/al-the-x/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/al-the-x/subscriptions",
            "organizations_url": "https://api.github.com/users/al-the-x/orgs",
            "repos_url": "https://api.github.com/users/al-the-x/repos",
            "events_url": "https://api.github.com/users/al-the-x/events{/privacy}",
            "received_events_url": "https://api.github.com/users/al-the-x/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Mostly so I could have a sanity check a la `gulp serve`...\n",
        "created_at": "2015-03-16T04:33:57Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26459518",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26459518"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26459518"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26459535",
        "pull_request_review_id": null,
        "id": 26459535,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDU5NTM1",
        "diff_hunk": "@@ -112,6 +122,22 @@ gulp.task('serve:dist', function () {\n   });\n });\n \n+gulp.task('serve:tests', function(){\n+  browserSync({\n+    notify: false,\n+    port: 9090,",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 38,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "al-the-x",
            "id": 96015,
            "node_id": "MDQ6VXNlcjk2MDE1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/96015?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/al-the-x",
            "html_url": "https://github.com/al-the-x",
            "followers_url": "https://api.github.com/users/al-the-x/followers",
            "following_url": "https://api.github.com/users/al-the-x/following{/other_user}",
            "gists_url": "https://api.github.com/users/al-the-x/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/al-the-x/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/al-the-x/subscriptions",
            "organizations_url": "https://api.github.com/users/al-the-x/orgs",
            "repos_url": "https://api.github.com/users/al-the-x/repos",
            "events_url": "https://api.github.com/users/al-the-x/events{/privacy}",
            "received_events_url": "https://api.github.com/users/al-the-x/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In case a dev is running `gulp serve` _and_ `gulp serve:tests` simultaneously, they won't collide...\n",
        "created_at": "2015-03-16T04:34:58Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26459535",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26459535"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26459535"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26459593",
        "pull_request_review_id": null,
        "id": 26459593,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDU5NTkz",
        "diff_hunk": "@@ -112,6 +122,22 @@ gulp.task('serve:dist', function () {\n   });\n });\n \n+gulp.task('serve:tests', function(){\n+  browserSync({\n+    notify: false,\n+    port: 9090,\n+    server: {\n+      baseDir: 'test'\n+    }\n+  });",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 42,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "al-the-x",
            "id": 96015,
            "node_id": "MDQ6VXNlcjk2MDE1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/96015?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/al-the-x",
            "html_url": "https://github.com/al-the-x",
            "followers_url": "https://api.github.com/users/al-the-x/followers",
            "following_url": "https://api.github.com/users/al-the-x/following{/other_user}",
            "gists_url": "https://api.github.com/users/al-the-x/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/al-the-x/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/al-the-x/subscriptions",
            "organizations_url": "https://api.github.com/users/al-the-x/orgs",
            "repos_url": "https://api.github.com/users/al-the-x/repos",
            "events_url": "https://api.github.com/users/al-the-x/events{/privacy}",
            "received_events_url": "https://api.github.com/users/al-the-x/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I omitted the route for the local `bower_components` directory as `generator-mocha` uses relative URLs inside `test/index.html`. Haven't checked with Jasmine yet...\n",
        "created_at": "2015-03-16T04:38:20Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26459593",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26459593"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26459593"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26473608",
        "pull_request_review_id": null,
        "id": 26473608,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDczNjA4",
        "diff_hunk": "@@ -112,6 +122,22 @@ gulp.task('serve:dist', function () {\n   });\n });\n \n+gulp.task('serve:tests', function(){\n+  browserSync({\n+    notify: false,\n+    port: 9090,",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 38,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "To be consistent with generator-webapp:\n- `serve:test`\n- `open: false`\n- `port: 9001`\n",
        "created_at": "2015-03-16T10:36:44Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26473608",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26473608"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26473608"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26473634",
        "pull_request_review_id": null,
        "id": 26473634,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDczNjM0",
        "diff_hunk": "@@ -25,13 +25,23 @@ gulp.task('styles', function () {<% if (includeSass) { %>\n     .pipe(reload({stream: true}));\n });\n \n-gulp.task('jshint', function () {\n-  return gulp.src('app/scripts/**/*.js')\n-    .pipe(reload({stream: true, once: true}))\n-    .pipe($.jshint())\n-    .pipe($.jshint.reporter('jshint-stylish'))\n-    .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n-});\n+/**\n+ * @param {String|Array} files to provide to `gulp.src`\n+ * @return {Function} callback for `gulp.task` et al\n+ */\n+function jshint (files) {\n+  return function(){\n+    return gulp.src(files)\n+      .pipe(reload({stream: true, once: true}))\n+      .pipe($.jshint())\n+      .pipe($.jshint.reporter('jshint-stylish'))\n+      .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n+  };\n+}\n+\n+gulp.task('jshint', jshint('app/scripts/**/*.js'));\n+\n+gulp.task('jshint:tests', jshint('test/spec/**/*.js'));",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 27,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "To be consistent with generator-webapp:\n- `jshint:test`\n",
        "created_at": "2015-03-16T10:37:13Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26473634",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26473634"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26473634"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26484313",
        "pull_request_review_id": null,
        "id": 26484313,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDg0MzEz",
        "diff_hunk": "@@ -25,13 +25,23 @@ gulp.task('styles', function () {<% if (includeSass) { %>\n     .pipe(reload({stream: true}));\n });\n \n-gulp.task('jshint', function () {\n-  return gulp.src('app/scripts/**/*.js')\n-    .pipe(reload({stream: true, once: true}))\n-    .pipe($.jshint())\n-    .pipe($.jshint.reporter('jshint-stylish'))\n-    .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n-});\n+/**\n+ * @param {String|Array} files to provide to `gulp.src`\n+ * @return {Function} callback for `gulp.task` et al\n+ */",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 14,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "not interested in having docstrings comments in the gulpfile.\n",
        "created_at": "2015-03-16T13:41:34Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26484313",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26484313"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26484313"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26484343",
        "pull_request_review_id": null,
        "id": 26484343,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDg0MzQz",
        "diff_hunk": "@@ -25,13 +25,23 @@ gulp.task('styles', function () {<% if (includeSass) { %>\n     .pipe(reload({stream: true}));\n });\n \n-gulp.task('jshint', function () {\n-  return gulp.src('app/scripts/**/*.js')\n-    .pipe(reload({stream: true, once: true}))\n-    .pipe($.jshint())\n-    .pipe($.jshint.reporter('jshint-stylish'))\n-    .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n-});\n+/**\n+ * @param {String|Array} files to provide to `gulp.src`\n+ * @return {Function} callback for `gulp.task` et al\n+ */\n+function jshint (files) {\n+  return function(){",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 16,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`return function () {`\n",
        "created_at": "2015-03-16T13:42:04Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26484343",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26484343"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26484343"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26484364",
        "pull_request_review_id": null,
        "id": 26484364,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDg0MzY0",
        "diff_hunk": "@@ -112,6 +122,22 @@ gulp.task('serve:dist', function () {\n   });\n });\n \n+gulp.task('serve:tests', function(){",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 35,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`function () {`\n",
        "created_at": "2015-03-16T13:42:21Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26484364",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26484364"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26484364"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26484425",
        "pull_request_review_id": null,
        "id": 26484425,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDg0NDI1",
        "diff_hunk": "@@ -112,6 +122,22 @@ gulp.task('serve:dist', function () {\n   });\n });\n \n+gulp.task('serve:tests', function(){\n+  browserSync({\n+    notify: false,\n+    port: 9090,\n+    server: {\n+      baseDir: 'test'\n+    }\n+  });\n+\n+  gulp.watch([\n+    'test/spec/**/*.js',\n+  ]).on('change', reload);\n+\n+  gulp.watch('test/spec/**/*.js', [ 'jshint:tests' ]);",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 48,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "code style\n\n``` js\ngulp.watch('test/spec/**/*.js', ['jshint:tests']);\n```\n",
        "created_at": "2015-03-16T13:43:08Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26484425",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26484425"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26484425"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26504355",
        "pull_request_review_id": null,
        "id": 26504355,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTA0MzU1",
        "diff_hunk": "@@ -25,13 +25,23 @@ gulp.task('styles', function () {<% if (includeSass) { %>\n     .pipe(reload({stream: true}));\n });\n \n-gulp.task('jshint', function () {\n-  return gulp.src('app/scripts/**/*.js')\n-    .pipe(reload({stream: true, once: true}))\n-    .pipe($.jshint())\n-    .pipe($.jshint.reporter('jshint-stylish'))\n-    .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n-});\n+/**\n+ * @param {String|Array} files to provide to `gulp.src`\n+ * @return {Function} callback for `gulp.task` et al\n+ */",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 14,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "al-the-x",
            "id": 96015,
            "node_id": "MDQ6VXNlcjk2MDE1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/96015?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/al-the-x",
            "html_url": "https://github.com/al-the-x",
            "followers_url": "https://api.github.com/users/al-the-x/followers",
            "following_url": "https://api.github.com/users/al-the-x/following{/other_user}",
            "gists_url": "https://api.github.com/users/al-the-x/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/al-the-x/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/al-the-x/subscriptions",
            "organizations_url": "https://api.github.com/users/al-the-x/orgs",
            "repos_url": "https://api.github.com/users/al-the-x/repos",
            "events_url": "https://api.github.com/users/al-the-x/events{/privacy}",
            "received_events_url": "https://api.github.com/users/al-the-x/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sure thing. Recommended alternative?\n",
        "created_at": "2015-03-16T16:58:10Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26504355",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26504355"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26504355"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26505794",
        "pull_request_review_id": null,
        "id": 26505794,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTA1Nzk0",
        "diff_hunk": "@@ -112,6 +122,22 @@ gulp.task('serve:dist', function () {\n   });\n });\n \n+gulp.task('serve:tests', function(){\n+  browserSync({\n+    notify: false,\n+    port: 9090,",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 38,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "al-the-x",
            "id": 96015,
            "node_id": "MDQ6VXNlcjk2MDE1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/96015?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/al-the-x",
            "html_url": "https://github.com/al-the-x",
            "followers_url": "https://api.github.com/users/al-the-x/followers",
            "following_url": "https://api.github.com/users/al-the-x/following{/other_user}",
            "gists_url": "https://api.github.com/users/al-the-x/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/al-the-x/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/al-the-x/subscriptions",
            "organizations_url": "https://api.github.com/users/al-the-x/orgs",
            "repos_url": "https://api.github.com/users/al-the-x/repos",
            "events_url": "https://api.github.com/users/al-the-x/events{/privacy}",
            "received_events_url": "https://api.github.com/users/al-the-x/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Lemme check the docs and test this, but I believe that Browser Sync grabs `port` _and_ `port + 1` by default (the second port is for the new management interface). If my suspicion is correct, I'll happily submit a patch to `generator-webapp` to maintain consistency.\n",
        "created_at": "2015-03-16T17:12:39Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26505794",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26505794"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26505794"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26506015",
        "pull_request_review_id": null,
        "id": 26506015,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTA2MDE1",
        "diff_hunk": "@@ -25,13 +25,23 @@ gulp.task('styles', function () {<% if (includeSass) { %>\n     .pipe(reload({stream: true}));\n });\n \n-gulp.task('jshint', function () {\n-  return gulp.src('app/scripts/**/*.js')\n-    .pipe(reload({stream: true, once: true}))\n-    .pipe($.jshint())\n-    .pipe($.jshint.reporter('jshint-stylish'))\n-    .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n-});\n+/**\n+ * @param {String|Array} files to provide to `gulp.src`\n+ * @return {Function} callback for `gulp.task` et al\n+ */\n+function jshint (files) {",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 15,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`function jshint(files) {`\n",
        "created_at": "2015-03-16T17:15:01Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26506015",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26506015"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26506015"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26506061",
        "pull_request_review_id": null,
        "id": 26506061,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTA2MDYx",
        "diff_hunk": "@@ -25,13 +25,23 @@ gulp.task('styles', function () {<% if (includeSass) { %>\n     .pipe(reload({stream: true}));\n });\n \n-gulp.task('jshint', function () {\n-  return gulp.src('app/scripts/**/*.js')\n-    .pipe(reload({stream: true, once: true}))\n-    .pipe($.jshint())\n-    .pipe($.jshint.reporter('jshint-stylish'))\n-    .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n-});\n+/**\n+ * @param {String|Array} files to provide to `gulp.src`\n+ * @return {Function} callback for `gulp.task` et al\n+ */",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 14,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Remove them altogether.\n",
        "created_at": "2015-03-16T17:15:17Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26506061",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26506061"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26506061"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26506122",
        "pull_request_review_id": null,
        "id": 26506122,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTA2MTIy",
        "diff_hunk": "@@ -25,13 +25,23 @@ gulp.task('styles', function () {<% if (includeSass) { %>\n     .pipe(reload({stream: true}));\n });\n \n-gulp.task('jshint', function () {\n-  return gulp.src('app/scripts/**/*.js')\n-    .pipe(reload({stream: true, once: true}))\n-    .pipe($.jshint())\n-    .pipe($.jshint.reporter('jshint-stylish'))\n-    .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n-});\n+/**\n+ * @param {String|Array} files to provide to `gulp.src`\n+ * @return {Function} callback for `gulp.task` et al\n+ */\n+function jshint (files) {\n+  return function(){\n+    return gulp.src(files)\n+      .pipe(reload({stream: true, once: true}))\n+      .pipe($.jshint())\n+      .pipe($.jshint.reporter('jshint-stylish'))\n+      .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n+  };\n+}\n+\n+gulp.task('jshint', jshint('app/scripts/**/*.js'));\n+",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 26,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "a403b41b674b376681e3ebd5b8a19a0833b44569",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Remove this empty line.\n",
        "created_at": "2015-03-16T17:15:54Z",
        "updated_at": "2015-04-06T16:51:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26506122",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/26506122"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r26506122"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/27810270",
        "pull_request_review_id": null,
        "id": 27810270,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODEwMjcw",
        "diff_hunk": "@@ -112,6 +117,24 @@ gulp.task('serve:dist', function () {\n   });\n });\n \n+gulp.task('serve:test', function () {\n+  browserSync({\n+    notify: false,\n+    open: false,\n+    port: 9000,\n+    ui: false,",
        "path": "app/templates/gulpfile.js",
        "position": 35,
        "original_position": 35,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "user": {
            "login": "al-the-x",
            "id": 96015,
            "node_id": "MDQ6VXNlcjk2MDE1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/96015?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/al-the-x",
            "html_url": "https://github.com/al-the-x",
            "followers_url": "https://api.github.com/users/al-the-x/followers",
            "following_url": "https://api.github.com/users/al-the-x/following{/other_user}",
            "gists_url": "https://api.github.com/users/al-the-x/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/al-the-x/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/al-the-x/subscriptions",
            "organizations_url": "https://api.github.com/users/al-the-x/orgs",
            "repos_url": "https://api.github.com/users/al-the-x/repos",
            "events_url": "https://api.github.com/users/al-the-x/events{/privacy}",
            "received_events_url": "https://api.github.com/users/al-the-x/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The new UI introduced in Browser Sync 2.x binds to port 3001 by default. If another process is already using the port, it binds to the next available. I've run into situations with my students running Browser-Sync concurrently on the same or different projects and getting confused about which project was running on what port... Only compounded by the use of _two_ sets of ports now. It's unlikely that running tests will require the UI, so I've disabled it instead.\n",
        "created_at": "2015-04-06T16:58:21Z",
        "updated_at": "2015-04-06T16:58:21Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r27810270",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/27810270"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r27810270"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/27852786",
        "pull_request_review_id": null,
        "id": 27852786,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODUyNzg2",
        "diff_hunk": "@@ -75,7 +75,10 @@ gulp.task('extras', function () {\n   }).pipe(gulp.dest('dist'));\n });\n \n-gulp.task('clean', require('del').bind(null, ['.tmp', 'dist']));\n+gulp.task('clean', function(done){\n+  require('del')(['.tmp', 'dist']);\n+  return $.cache.clearAll(done);\n+});",
        "path": "app/templates/gulpfile.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "75d0f7885c3276fbb025712c38da72fa05e02686",
        "original_commit_id": "75d0f7885c3276fbb025712c38da72fa05e02686",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`del` is async, so this is incorrect as it will not wait for it to finish.\n",
        "created_at": "2015-04-07T05:50:09Z",
        "updated_at": "2015-04-07T05:50:09Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/300#discussion_r27852786",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/300",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/27852786"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/300#discussion_r27852786"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/300"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/27855869",
        "pull_request_review_id": null,
        "id": 27855869,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODU1ODY5",
        "diff_hunk": "@@ -75,7 +75,10 @@ gulp.task('extras', function () {\n   }).pipe(gulp.dest('dist'));\n });\n \n-gulp.task('clean', require('del').bind(null, ['.tmp', 'dist']));\n+gulp.task('clean', function(done){",
        "path": "app/templates/gulpfile.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "75d0f7885c3276fbb025712c38da72fa05e02686",
        "original_commit_id": "75d0f7885c3276fbb025712c38da72fa05e02686",
        "user": {
            "login": "arthurvr",
            "id": 6025224,
            "node_id": "MDQ6VXNlcjYwMjUyMjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6025224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvr",
            "html_url": "https://github.com/arthurvr",
            "followers_url": "https://api.github.com/users/arthurvr/followers",
            "following_url": "https://api.github.com/users/arthurvr/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvr/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvr/orgs",
            "repos_url": "https://api.github.com/users/arthurvr/repos",
            "events_url": "https://api.github.com/users/arthurvr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "code style\n\n``` js\nfunction (done) {\n```\n",
        "created_at": "2015-04-07T07:19:13Z",
        "updated_at": "2015-04-07T07:19:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/300#discussion_r27855869",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/300",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/27855869"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/300#discussion_r27855869"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/300"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/28239398",
        "pull_request_review_id": null,
        "id": 28239398,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MjM5Mzk4",
        "diff_hunk": "@@ -131,7 +130,12 @@ gulp.task('wiredep', function () {\n });\n \n gulp.task('build', ['jshint', 'html', 'images', 'fonts', 'extras'], function () {\n-  return gulp.src('dist/**/*').pipe($.size({title: 'build', gzip: true}));\n+  return gulp.src('dist/**/*', {base: 'dist'})\n+    .pipe($.revAll({ignore: ['favicon.ico', 'apple-touch-icon.png', 'robots.txt', '.html']}))",
        "path": "app/templates/gulpfile.js",
        "position": 14,
        "original_position": 14,
        "commit_id": "f9a995b83c091e2c1fdea420245820e61445728c",
        "original_commit_id": "f9a995b83c091e2c1fdea420245820e61445728c",
        "user": {
            "login": "austinpray",
            "id": 2192970,
            "node_id": "MDQ6VXNlcjIxOTI5NzA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2192970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/austinpray",
            "html_url": "https://github.com/austinpray",
            "followers_url": "https://api.github.com/users/austinpray/followers",
            "following_url": "https://api.github.com/users/austinpray/following{/other_user}",
            "gists_url": "https://api.github.com/users/austinpray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/austinpray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/austinpray/subscriptions",
            "organizations_url": "https://api.github.com/users/austinpray/orgs",
            "repos_url": "https://api.github.com/users/austinpray/repos",
            "events_url": "https://api.github.com/users/austinpray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/austinpray/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "https://github.com/smysnk/gulp-rev-all/blob/591d18d4247f287b0821896f8a266b6f7128963c/README.md#upgrading-to-v08x\n\n> New Feature: Ignoring files has changed, ignore option has been removed and has been replaced with dontGlobal, dontRenameFile, dontUpdateReference, dontSearchFile which allows for more control and less ambiguity on what is being ignored\n",
        "created_at": "2015-04-13T13:56:14Z",
        "updated_at": "2015-04-13T13:56:14Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/293#discussion_r28239398",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/293",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/28239398"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/293#discussion_r28239398"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/293"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/28469168",
        "pull_request_review_id": null,
        "id": 28469168,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDY5MTY4",
        "diff_hunk": "@@ -112,6 +117,24 @@ gulp.task('serve:dist', function () {\n   });\n });\n \n+gulp.task('serve:test', function () {\n+  browserSync({\n+    notify: false,\n+    open: false,\n+    port: 9000,\n+    ui: false,",
        "path": "app/templates/gulpfile.js",
        "position": 35,
        "original_position": 35,
        "commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "original_commit_id": "11269d7573e4f53683f61d3f208bb516f934b519",
        "user": {
            "login": "addyosmani",
            "id": 110953,
            "node_id": "MDQ6VXNlcjExMDk1Mw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/110953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/addyosmani",
            "html_url": "https://github.com/addyosmani",
            "followers_url": "https://api.github.com/users/addyosmani/followers",
            "following_url": "https://api.github.com/users/addyosmani/following{/other_user}",
            "gists_url": "https://api.github.com/users/addyosmani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/addyosmani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/addyosmani/subscriptions",
            "organizations_url": "https://api.github.com/users/addyosmani/orgs",
            "repos_url": "https://api.github.com/users/addyosmani/repos",
            "events_url": "https://api.github.com/users/addyosmani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/addyosmani/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2015-04-15T22:23:27Z",
        "updated_at": "2015-04-15T22:23:27Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r28469168",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/28469168"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/292#discussion_r28469168"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32124158",
        "pull_request_review_id": null,
        "id": 32124158,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTI0MTU4",
        "diff_hunk": "@@ -43,7 +43,7 @@ gulp.task('html', ['styles'], function () {\n   return gulp.src('app/*.html')\n     .pipe(assets)\n     .pipe($.if('*.js', $.uglify()))\n-    .pipe($.if('*.css', $.csso()))\n+    .pipe($.if('*.css',$.minifyCss({compatibility: '*'})))",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 5,
        "commit_id": "98c31ce7c5997b81db2a32f17ee0518cea0d0e3a",
        "original_commit_id": "a7e5df4fcde38f1a9f8304905cc27b6bf7fcffc6",
        "user": {
            "login": "appleboy",
            "id": 21979,
            "node_id": "MDQ6VXNlcjIxOTc5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/21979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/appleboy",
            "html_url": "https://github.com/appleboy",
            "followers_url": "https://api.github.com/users/appleboy/followers",
            "following_url": "https://api.github.com/users/appleboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/appleboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/appleboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/appleboy/subscriptions",
            "organizations_url": "https://api.github.com/users/appleboy/orgs",
            "repos_url": "https://api.github.com/users/appleboy/repos",
            "events_url": "https://api.github.com/users/appleboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/appleboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "need one space\n\n```\n.pipe($.if('*.css', $.minifyCss({compatibility: '*'})))\n```\n",
        "created_at": "2015-06-10T14:40:57Z",
        "updated_at": "2015-06-11T13:49:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/325#discussion_r32124158",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/325",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32124158"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/325#discussion_r32124158"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/325"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32373768",
        "pull_request_review_id": null,
        "id": 32373768,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzczNzY4",
        "diff_hunk": "@@ -75,7 +75,20 @@ module.exports = yeoman.generators.Base.extend({\n       this.includeBootstrap = hasFeature('includeBootstrap');\n       this.includeModernizr = hasFeature('includeModernizr');\n \n-      done();\n+      // give the option to exclude jquery if bootstrap isn't selected\n+      if(!this.includeBootstrap) {",
        "path": "app/index.js",
        "position": null,
        "original_position": 6,
        "commit_id": "9e41f200dc8414ef5ff1d929ae391cfb9ad5ea9b",
        "original_commit_id": "9c3fcc1cbea191c0e7cee810b646823dcf9b735f",
        "user": {
            "login": "arthurvr",
            "id": 6025224,
            "node_id": "MDQ6VXNlcjYwMjUyMjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6025224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvr",
            "html_url": "https://github.com/arthurvr",
            "followers_url": "https://api.github.com/users/arthurvr/followers",
            "following_url": "https://api.github.com/users/arthurvr/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvr/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvr/orgs",
            "repos_url": "https://api.github.com/users/arthurvr/repos",
            "events_url": "https://api.github.com/users/arthurvr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`if (!this.includeBootstrap) {`\n",
        "created_at": "2015-06-13T20:49:55Z",
        "updated_at": "2015-06-15T22:55:45Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32373768",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32373768"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32373768"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32373775",
        "pull_request_review_id": null,
        "id": 32373775,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzczNzc1",
        "diff_hunk": "@@ -75,7 +75,20 @@ module.exports = yeoman.generators.Base.extend({\n       this.includeBootstrap = hasFeature('includeBootstrap');\n       this.includeModernizr = hasFeature('includeModernizr');\n \n-      done();\n+      // give the option to exclude jquery if bootstrap isn't selected\n+      if(!this.includeBootstrap) {\n+        this.prompt({\n+          type: 'confirm',\n+          message: 'Include jQuery',\n+          name: 'includeJQuery',\n+          default: true\n+        }, function(jQueryAnswer) {\n+          this.includejQuery = jQueryAnswer.includeJQuery;",
        "path": "app/index.js",
        "position": null,
        "original_position": 13,
        "commit_id": "9e41f200dc8414ef5ff1d929ae391cfb9ad5ea9b",
        "original_commit_id": "9c3fcc1cbea191c0e7cee810b646823dcf9b735f",
        "user": {
            "login": "arthurvr",
            "id": 6025224,
            "node_id": "MDQ6VXNlcjYwMjUyMjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6025224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvr",
            "html_url": "https://github.com/arthurvr",
            "followers_url": "https://api.github.com/users/arthurvr/followers",
            "following_url": "https://api.github.com/users/arthurvr/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvr/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvr/orgs",
            "repos_url": "https://api.github.com/users/arthurvr/repos",
            "events_url": "https://api.github.com/users/arthurvr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why aren't you consistent about the name? Some identifiers use capital `J`s while others use `j`.\n",
        "created_at": "2015-06-13T20:50:44Z",
        "updated_at": "2015-06-15T22:55:45Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32373775",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32373775"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32373775"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32373780",
        "pull_request_review_id": null,
        "id": 32373780,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzczNzgw",
        "diff_hunk": "@@ -111,6 +124,9 @@ module.exports = yeoman.generators.Base.extend({\n         bower.dependencies.modernizr = '~2.8.1';\n       }\n \n+      if(Object.keys(bower.dependencies).length < 1) {\n+        this.mkdir('bower_components');\n+      }",
        "path": "app/index.js",
        "position": null,
        "original_position": 37,
        "commit_id": "9e41f200dc8414ef5ff1d929ae391cfb9ad5ea9b",
        "original_commit_id": "9c3fcc1cbea191c0e7cee810b646823dcf9b735f",
        "user": {
            "login": "arthurvr",
            "id": 6025224,
            "node_id": "MDQ6VXNlcjYwMjUyMjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6025224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvr",
            "html_url": "https://github.com/arthurvr",
            "followers_url": "https://api.github.com/users/arthurvr/followers",
            "following_url": "https://api.github.com/users/arthurvr/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvr/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvr/orgs",
            "repos_url": "https://api.github.com/users/arthurvr/repos",
            "events_url": "https://api.github.com/users/arthurvr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why do we need this whole snippet? Won't bower automatically create the directory when the first package gets installed?\n",
        "created_at": "2015-06-13T20:51:51Z",
        "updated_at": "2015-06-15T22:55:45Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32373780",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32373780"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32373780"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32373783",
        "pull_request_review_id": null,
        "id": 32373783,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzczNzgz",
        "diff_hunk": "@@ -103,7 +116,7 @@ module.exports = yeoman.generators.Base.extend({\n       if (this.includeBootstrap) {\n         var bs = 'bootstrap' + (this.includeSass ? '-sass' : '');\n         bower.dependencies[bs] = '~3.3.1';\n-      } else {\n+      } else if(this.includeJQuery) {",
        "path": "app/index.js",
        "position": null,
        "original_position": 27,
        "commit_id": "9e41f200dc8414ef5ff1d929ae391cfb9ad5ea9b",
        "original_commit_id": "9c3fcc1cbea191c0e7cee810b646823dcf9b735f",
        "user": {
            "login": "arthurvr",
            "id": 6025224,
            "node_id": "MDQ6VXNlcjYwMjUyMjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6025224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvr",
            "html_url": "https://github.com/arthurvr",
            "followers_url": "https://api.github.com/users/arthurvr/followers",
            "following_url": "https://api.github.com/users/arthurvr/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvr/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvr/orgs",
            "repos_url": "https://api.github.com/users/arthurvr/repos",
            "events_url": "https://api.github.com/users/arthurvr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`if (this.includeJQuery) {`\n",
        "created_at": "2015-06-13T20:52:10Z",
        "updated_at": "2015-06-15T22:55:45Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32373783",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32373783"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32373783"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32373787",
        "pull_request_review_id": null,
        "id": 32373787,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzczNzg3",
        "diff_hunk": "@@ -75,7 +75,20 @@ module.exports = yeoman.generators.Base.extend({\n       this.includeBootstrap = hasFeature('includeBootstrap');\n       this.includeModernizr = hasFeature('includeModernizr');\n \n-      done();\n+      // give the option to exclude jquery if bootstrap isn't selected\n+      if(!this.includeBootstrap) {\n+        this.prompt({\n+          type: 'confirm',\n+          message: 'Include jQuery',\n+          name: 'includeJQuery',\n+          default: true\n+        }, function(jQueryAnswer) {",
        "path": "app/index.js",
        "position": null,
        "original_position": 12,
        "commit_id": "9e41f200dc8414ef5ff1d929ae391cfb9ad5ea9b",
        "original_commit_id": "9c3fcc1cbea191c0e7cee810b646823dcf9b735f",
        "user": {
            "login": "arthurvr",
            "id": 6025224,
            "node_id": "MDQ6VXNlcjYwMjUyMjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6025224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvr",
            "html_url": "https://github.com/arthurvr",
            "followers_url": "https://api.github.com/users/arthurvr/followers",
            "following_url": "https://api.github.com/users/arthurvr/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvr/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvr/orgs",
            "repos_url": "https://api.github.com/users/arthurvr/repos",
            "events_url": "https://api.github.com/users/arthurvr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`function (`\n",
        "created_at": "2015-06-13T20:52:19Z",
        "updated_at": "2015-06-15T22:55:45Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32373787",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32373787"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32373787"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32465313",
        "pull_request_review_id": null,
        "id": 32465313,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDY1MzEz",
        "diff_hunk": "@@ -35,9 +38,12 @@ describe('Bootstrap feature', function () {\n       helpers.run(path.join(__dirname, '../app'))\n         .inDir(path.join(__dirname, 'temp'))\n         .withOptions({'skip-install': true})\n-        .withPrompts({features: [\n-          'includeBootstrap'\n-        ]})\n+        .withPrompts({\n+          features: [\n+            'includeBootstrap'\n+          ],\n+          includeJQuery: false",
        "path": "test/bootstrap.js",
        "position": null,
        "original_position": 34,
        "commit_id": "9e41f200dc8414ef5ff1d929ae391cfb9ad5ea9b",
        "original_commit_id": "3612860fa9ec3985e35b769bd6bbcae98428c805",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Same here.\n",
        "created_at": "2015-06-15T20:52:05Z",
        "updated_at": "2015-06-15T22:55:45Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32465313",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32465313"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32465313"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32465318",
        "pull_request_review_id": null,
        "id": 32465318,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDY1MzE4",
        "diff_hunk": "@@ -9,14 +9,17 @@ describe('Bootstrap feature', function () {\n       helpers.run(path.join(__dirname, '../app'))\n         .inDir(path.join(__dirname, 'temp'))\n         .withOptions({'skip-install': true})\n-        .withPrompts({features: [\n-          'includeSass',\n-          'includeBootstrap'\n-        ]})\n+        .withPrompts({\n+          features: [\n+            'includeSass',\n+            'includeBootstrap'\n+          ],\n+          includeJQuery: false",
        "path": "test/bootstrap.js",
        "position": null,
        "original_position": 13,
        "commit_id": "9e41f200dc8414ef5ff1d929ae391cfb9ad5ea9b",
        "original_commit_id": "3612860fa9ec3985e35b769bd6bbcae98428c805",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think this option is unnecessary and reads weird, because `includeBootstrap` implies jQuery, it's a dependency of Bootstrap, and here `includeJQuery` is set to `false`.\n",
        "created_at": "2015-06-15T20:52:07Z",
        "updated_at": "2015-06-15T22:55:45Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32465318",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32465318"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/333#discussion_r32465318"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/333"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32708305",
        "pull_request_review_id": null,
        "id": 32708305,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNzA4MzA1",
        "diff_hunk": "@@ -25,18 +25,28 @@ gulp.task('styles', () => {<% if (includeSass) { %>\n     .pipe(reload({stream: true}));\n });\n \n-function lint(files) {\n+function lint(files, options) {\n   return () => {\n     return gulp.src(files)\n       .pipe(reload({stream: true, once: true}))\n-      .pipe($.eslint())\n+      .pipe($.eslint(options))\n       .pipe($.eslint.format())\n       .pipe($.if(!browserSync.active, $.eslint.failAfterError()));\n   };\n }\n+const testLintOptions = {\n+  \"env\": {\n+    \"mocha\": true\n+  },\n+  \"globals\": {\n+    \"assert\": false,\n+    \"expect\": false,\n+    \"should\": false",
        "path": "app/templates/gulpfile.babel.js",
        "position": null,
        "original_position": 22,
        "commit_id": "d287ed7edb4a6df301561b52cd1d9944530c4523",
        "original_commit_id": "e43096f500ef8c220ff1b3509f9bf0cbebee0e65",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Remove `\"` from the keys.\n",
        "created_at": "2015-06-18T08:29:07Z",
        "updated_at": "2015-06-18T10:48:18Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/339#discussion_r32708305",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/339",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32708305"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/339#discussion_r32708305"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/339"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32930462",
        "pull_request_review_id": null,
        "id": 32930462,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTMwNDYy",
        "diff_hunk": "@@ -3,3 +3,12 @@ See the [contributing docs](https://github.com/yeoman/yeoman/blob/master/contrib\n Note: We are regularly asked whether we can add or take away features. If a change is good enough to have a positive impact on all users, we are happy to consider it.\n \n If not, `generator-gulp-webapp` is fork-friendly and you can always maintain a custom version which you `npm install && npm link` to continue using via `yo gulp-webapp` or a name of your choosing.\n+\n+## Support Questions\n+\n+We frequently get issues where people *modified* something after they finished scaffolding and things weren't working properly. These are classified as **support** questions; they are related to this generator, but not something we did wrong. It's best to ask those on [Stack Overflow] with tags `#yeoman` and `#gulp` instead of opening an issue here. You can also ask questions in our IRC channel (`#yeoman` on [Freenode]).\n+\n+If the issue has already been opened before it turned out to be a support question, feel free to paste the link to the Stack Overflow question, so we can answer it.\n+\n+[stack overflow]: (http://stackoverflow.com)",
        "path": "contributing.md",
        "position": null,
        "original_position": 11,
        "commit_id": "640afff346eca4b371832ea78adcfaddc5e824e0",
        "original_commit_id": "cae9503cf1fecbda148eb317f36658103784709a",
        "user": {
            "login": "arthurvr",
            "id": 6025224,
            "node_id": "MDQ6VXNlcjYwMjUyMjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6025224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvr",
            "html_url": "https://github.com/arthurvr",
            "followers_url": "https://api.github.com/users/arthurvr/followers",
            "following_url": "https://api.github.com/users/arthurvr/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvr/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvr/orgs",
            "repos_url": "https://api.github.com/users/arthurvr/repos",
            "events_url": "https://api.github.com/users/arthurvr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> `(http://stackoverflow.com)`\n\nremove the parentheses\n",
        "created_at": "2015-06-22T12:53:19Z",
        "updated_at": "2015-06-22T12:55:22Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/347#discussion_r32930462",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/347",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/32930462"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/347#discussion_r32930462"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/347"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/36053893",
        "pull_request_review_id": null,
        "id": 36053893,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MDUzODkz",
        "diff_hunk": "@@ -15,7 +15,8 @@\n     \"gulp-imagemin\": \"^2.2.1\",\n     \"gulp-load-plugins\": \"^0.10.0\",\n     \"gulp-minify-css\": \"^1.1.1\",\n-    \"gulp-minify-html\": \"^1.0.0\",<% if (includeSass) { %>\n+    \"gulp-minify-html\": \"^1.0.0\",\n+    \"gulp-rev-all\": \"^0.8.0\",<% if (includeSass) { %>",
        "path": "app/templates/_package.json",
        "position": 6,
        "original_position": 6,
        "commit_id": "d58254eaa3518a2daa1b859176e88a3592a45101",
        "original_commit_id": "d58254eaa3518a2daa1b859176e88a3592a45101",
        "user": {
            "login": "alferov",
            "id": 5904649,
            "node_id": "MDQ6VXNlcjU5MDQ2NDk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5904649?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alferov",
            "html_url": "https://github.com/alferov",
            "followers_url": "https://api.github.com/users/alferov/followers",
            "following_url": "https://api.github.com/users/alferov/following{/other_user}",
            "gists_url": "https://api.github.com/users/alferov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alferov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alferov/subscriptions",
            "organizations_url": "https://api.github.com/users/alferov/orgs",
            "repos_url": "https://api.github.com/users/alferov/repos",
            "events_url": "https://api.github.com/users/alferov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alferov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> \"gulp-rev-all\": \"duplicate of gulp-rev\",\n\nI'm sorry, but `gulp-rev-all` is [blacklisted](https://github.com/gulpjs/plugins/blob/master/src/blackList.json#L70), [gulp-rev](https://github.com/sindresorhus/gulp-rev) should be able to get the job done.\n",
        "created_at": "2015-08-03T03:21:33Z",
        "updated_at": "2015-08-03T03:23:32Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/360#discussion_r36053893",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/360",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/36053893"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/360#discussion_r36053893"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/36067514",
        "pull_request_review_id": null,
        "id": 36067514,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MDY3NTE0",
        "diff_hunk": "@@ -15,7 +15,8 @@\n     \"gulp-imagemin\": \"^2.2.1\",\n     \"gulp-load-plugins\": \"^0.10.0\",\n     \"gulp-minify-css\": \"^1.1.1\",\n-    \"gulp-minify-html\": \"^1.0.0\",<% if (includeSass) { %>\n+    \"gulp-minify-html\": \"^1.0.0\",\n+    \"gulp-rev-all\": \"^0.8.0\",<% if (includeSass) { %>",
        "path": "app/templates/_package.json",
        "position": 6,
        "original_position": 6,
        "commit_id": "d58254eaa3518a2daa1b859176e88a3592a45101",
        "original_commit_id": "d58254eaa3518a2daa1b859176e88a3592a45101",
        "user": {
            "login": "hivre",
            "id": 9581049,
            "node_id": "MDQ6VXNlcjk1ODEwNDk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9581049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hivre",
            "html_url": "https://github.com/hivre",
            "followers_url": "https://api.github.com/users/hivre/followers",
            "following_url": "https://api.github.com/users/hivre/following{/other_user}",
            "gists_url": "https://api.github.com/users/hivre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hivre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hivre/subscriptions",
            "organizations_url": "https://api.github.com/users/hivre/orgs",
            "repos_url": "https://api.github.com/users/hivre/repos",
            "events_url": "https://api.github.com/users/hivre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hivre/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, I can work on that, but it'll require about 3 plugins to do what rev-all does. \nInteresting strategy to blacklist forks...\n",
        "created_at": "2015-08-03T09:09:07Z",
        "updated_at": "2015-08-03T09:09:07Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/360#discussion_r36067514",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/360",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/36067514"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/360#discussion_r36067514"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/36580226",
        "pull_request_review_id": null,
        "id": 36580226,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwMjI2",
        "diff_hunk": "@@ -15,7 +15,8 @@\n     \"gulp-imagemin\": \"^2.2.1\",\n     \"gulp-load-plugins\": \"^0.10.0\",\n     \"gulp-minify-css\": \"^1.1.1\",\n-    \"gulp-minify-html\": \"^1.0.0\",<% if (includeSass) { %>\n+    \"gulp-minify-html\": \"^1.0.0\",\n+    \"gulp-rev-all\": \"^0.8.0\",<% if (includeSass) { %>",
        "path": "app/templates/_package.json",
        "position": 6,
        "original_position": 6,
        "commit_id": "d58254eaa3518a2daa1b859176e88a3592a45101",
        "original_commit_id": "d58254eaa3518a2daa1b859176e88a3592a45101",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Asset revisioning is pretty complicated to set up with gulp, so I'm sad that they blacklisted it, but I guess composite plugins aren't best practice.\n",
        "created_at": "2015-08-08T17:43:13Z",
        "updated_at": "2015-08-08T17:43:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/360#discussion_r36580226",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/360",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/36580226"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/360#discussion_r36580226"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/38858846",
        "pull_request_review_id": null,
        "id": 38858846,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4ODQ2",
        "diff_hunk": "@@ -19,7 +19,7 @@ gulp.task('styles', () => {<% if (includeSass) { %>\n     }).on('error', $.sass.logError))<% } else { %>\n   return gulp.src('app/styles/*.css')\n     .pipe($.sourcemaps.init())<% } %>\n-    .pipe($.autoprefixer({browsers: ['last 1 version']}))\n+    .pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))",
        "path": "app/templates/gulpfile.babel.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "0d56413e8c5fb4eab81a434eeb526683eb3df78d",
        "original_commit_id": "0d56413e8c5fb4eab81a434eeb526683eb3df78d",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is this change a part of updating Autoprefixer?\n",
        "created_at": "2015-09-07T12:41:30Z",
        "updated_at": "2015-09-07T12:41:30Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/375#discussion_r38858846",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/375",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/38858846"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/375#discussion_r38858846"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/375"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/38893834",
        "pull_request_review_id": null,
        "id": 38893834,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzODM0",
        "diff_hunk": "@@ -19,7 +19,7 @@ gulp.task('styles', () => {<% if (includeSass) { %>\n     }).on('error', $.sass.logError))<% } else { %>\n   return gulp.src('app/styles/*.css')\n     .pipe($.sourcemaps.init())<% } %>\n-    .pipe($.autoprefixer({browsers: ['last 1 version']}))\n+    .pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))",
        "path": "app/templates/gulpfile.babel.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "0d56413e8c5fb4eab81a434eeb526683eb3df78d",
        "original_commit_id": "0d56413e8c5fb4eab81a434eeb526683eb3df78d",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Right, it's best to keep them in sync.\n",
        "created_at": "2015-09-08T06:42:38Z",
        "updated_at": "2015-09-08T06:42:38Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/375#discussion_r38893834",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/375",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/38893834"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/375#discussion_r38893834"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/375"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/38889114",
        "pull_request_review_id": null,
        "id": 38889114,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg5MTE0",
        "diff_hunk": "@@ -19,7 +19,7 @@ gulp.task('styles', () => {<% if (includeSass) { %>\n     }).on('error', $.sass.logError))<% } else { %>\n   return gulp.src('app/styles/*.css')\n     .pipe($.sourcemaps.init())<% } %>\n-    .pipe($.autoprefixer({browsers: ['last 1 version']}))\n+    .pipe($.autoprefixer({browsers: ['> 1%', 'last 2 versions', 'Firefox ESR']}))",
        "path": "app/templates/gulpfile.babel.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "0d56413e8c5fb4eab81a434eeb526683eb3df78d",
        "original_commit_id": "0d56413e8c5fb4eab81a434eeb526683eb3df78d",
        "user": {
            "login": "neilhem",
            "id": 1889800,
            "node_id": "MDQ6VXNlcjE4ODk4MDA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1889800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neilhem",
            "html_url": "https://github.com/neilhem",
            "followers_url": "https://api.github.com/users/neilhem/followers",
            "following_url": "https://api.github.com/users/neilhem/following{/other_user}",
            "gists_url": "https://api.github.com/users/neilhem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neilhem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neilhem/subscriptions",
            "organizations_url": "https://api.github.com/users/neilhem/orgs",
            "repos_url": "https://api.github.com/users/neilhem/repos",
            "events_url": "https://api.github.com/users/neilhem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neilhem/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I have set default browsers as it listed in [browserlist](https://github.com/ai/browserslist#browserslist-) default config. [Generator-webapp](https://github.com/yeoman/generator-webapp) has the same default config, but for Autoprefixer 5. Which should be updated too when migrate to Autoprefixer 6.\n",
        "created_at": "2015-09-08T04:02:38Z",
        "updated_at": "2015-09-08T08:01:19Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/375#discussion_r38889114",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/375",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/38889114"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/375#discussion_r38889114"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/375"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/48556639",
        "pull_request_review_id": null,
        "id": 48556639,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU2NjM5",
        "diff_hunk": "@@ -88,9 +88,11 @@ gulp.task('extras', () => {\n   }).pipe(gulp.dest('dist'));\n });\n \n-gulp.task('clean', del.bind(null, ['.tmp', 'dist']));\n+gulp.task('clean', () => {\n+  return del.bind(null, ['.tmp', 'dist']);",
        "path": "app/templates/gulpfile.babel.js",
        "position": 24,
        "original_position": 6,
        "commit_id": "b69c566b317e2294bec80e959acac6f69de96bb3",
        "original_commit_id": "db5a19d5b3aa694627d7da4c46f01874aa20befb",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nreturn del(['.tmp', 'dist']);\n```\n",
        "created_at": "2015-12-29T17:44:51Z",
        "updated_at": "2016-01-01T20:58:44Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/434#discussion_r48556639",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/434",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/48556639"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/434#discussion_r48556639"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/434"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/56045804",
        "pull_request_review_id": null,
        "id": 56045804,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDQ1ODA0",
        "diff_hunk": "@@ -23,10 +26,10 @@ gulp.task('scripts', () => {\n });\n ```\n \n-### 3. Add `scripts` as a dependency of `html` and `serve`\n+#### 2.2 Add `scripts` as a dependency of `html`, `serve`, `server:test`, and `build`\n \n ```js\n-gulp.task('html', ['styles', 'scripts'], () => () {",
        "path": "docs/recipes/coffeescript.md",
        "position": 29,
        "original_position": 29,
        "commit_id": "49a3bc5c343b806005bd12326751b9b7d7d33a1f",
        "original_commit_id": "49a3bc5c343b806005bd12326751b9b7d7d33a1f",
        "user": {
            "login": "eddiemonge",
            "id": 127535,
            "node_id": "MDQ6VXNlcjEyNzUzNQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/127535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eddiemonge",
            "html_url": "https://github.com/eddiemonge",
            "followers_url": "https://api.github.com/users/eddiemonge/followers",
            "following_url": "https://api.github.com/users/eddiemonge/following{/other_user}",
            "gists_url": "https://api.github.com/users/eddiemonge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eddiemonge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eddiemonge/subscriptions",
            "organizations_url": "https://api.github.com/users/eddiemonge/orgs",
            "repos_url": "https://api.github.com/users/eddiemonge/repos",
            "events_url": "https://api.github.com/users/eddiemonge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eddiemonge/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this looks like a typo and should be fixed regardless\n",
        "created_at": "2016-03-14T17:58:15Z",
        "updated_at": "2016-03-14T17:58:15Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/481#discussion_r56045804",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/481",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/56045804"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/481#discussion_r56045804"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/481"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/56186962",
        "pull_request_review_id": null,
        "id": 56186962,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTg2OTYy",
        "diff_hunk": "@@ -23,10 +26,10 @@ gulp.task('scripts', () => {\n });\n ```\n \n-### 3. Add `scripts` as a dependency of `html` and `serve`\n+#### 2.2 Add `scripts` as a dependency of `html`, `serve`, `server:test`, and `build`\n \n ```js\n-gulp.task('html', ['styles', 'scripts'], () => () {",
        "path": "docs/recipes/coffeescript.md",
        "position": 29,
        "original_position": 29,
        "commit_id": "49a3bc5c343b806005bd12326751b9b7d7d33a1f",
        "original_commit_id": "49a3bc5c343b806005bd12326751b9b7d7d33a1f",
        "user": {
            "login": "pebcakerror",
            "id": 613574,
            "node_id": "MDQ6VXNlcjYxMzU3NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/613574?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pebcakerror",
            "html_url": "https://github.com/pebcakerror",
            "followers_url": "https://api.github.com/users/pebcakerror/followers",
            "following_url": "https://api.github.com/users/pebcakerror/following{/other_user}",
            "gists_url": "https://api.github.com/users/pebcakerror/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pebcakerror/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pebcakerror/subscriptions",
            "organizations_url": "https://api.github.com/users/pebcakerror/orgs",
            "repos_url": "https://api.github.com/users/pebcakerror/repos",
            "events_url": "https://api.github.com/users/pebcakerror/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pebcakerror/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This line corrects the typo from the original recipe.\n",
        "created_at": "2016-03-15T15:49:10Z",
        "updated_at": "2016-03-15T15:49:10Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/481#discussion_r56186962",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/481",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/56186962"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/481#discussion_r56186962"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/481"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/57961643",
        "pull_request_review_id": null,
        "id": 57961643,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTYxNjQz",
        "diff_hunk": "@@ -5,15 +5,18 @@ With this setup you can freely mix `.js` and `.coffee` files in your `app/script\n \n ## Steps\n \n+\n ### 1. Install the [gulp-coffee](https://github.com/wearefractal/gulp-coffee) plugin\n \n ```\n $ npm install --save-dev gulp-coffee\n ```\n \n-### 2. Create a `scripts` task\n+### 2. app/scripts:",
        "path": "docs/recipes/coffeescript.md",
        "position": 12,
        "original_position": 12,
        "commit_id": "49a3bc5c343b806005bd12326751b9b7d7d33a1f",
        "original_commit_id": "49a3bc5c343b806005bd12326751b9b7d7d33a1f",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Probably better to call this \"Source\" instead of \"app/scripts\".\n",
        "created_at": "2016-03-30T20:53:10Z",
        "updated_at": "2016-03-30T20:53:10Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/481#discussion_r57961643",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/481",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/57961643"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/481#discussion_r57961643"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/481"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/59512839",
        "pull_request_review_id": null,
        "id": 59512839,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTEyODM5",
        "diff_hunk": "@@ -0,0 +1,72 @@\n+# Setting up Browserify / Babelify\n+\n+With this setup you can import modules into your `main.js`. Only code used in `main.js` will be called by the app.\n+\n+\n+## Steps\n+\n+### 1. Install the required plugins\n+\n+```\n+$ npm install -save babelify vinyl-buffer vinyl-source-stream\n+```\n+\n+### 2. Edit your `scripts` task\n+\n+```diff\n+gulp.task('scripts', () => {\n+-  return gulp.src('app/scripts/**/*.js')\n++\n++  const b = browserify({\n++    entries: 'app/scripts/main.js',\n++    transform: babelify,",
        "path": "docs/recipes/browserify.md",
        "position": 32,
        "original_position": 22,
        "commit_id": "4521dc83a17d2257974dd7df167dee25d3673413",
        "original_commit_id": "047e9e14a7876160764ef067986e22a553edb49b",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should probably remove this in favor of `b.transform('babelify')`.\n",
        "created_at": "2016-04-13T08:46:46Z",
        "updated_at": "2016-04-13T23:48:09Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/502#discussion_r59512839",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/502",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/59512839"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/502#discussion_r59512839"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/502"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/59560970",
        "pull_request_review_id": null,
        "id": 59560970,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTYwOTcw",
        "diff_hunk": "@@ -0,0 +1,72 @@\n+# Setting up Browserify / Babelify\n+\n+With this setup you can import modules into your `main.js`. Only code used in `main.js` will be called by the app.\n+\n+\n+## Steps\n+\n+### 1. Install the required plugins\n+\n+```\n+$ npm install -save babelify vinyl-buffer vinyl-source-stream\n+```\n+\n+### 2. Edit your `scripts` task\n+\n+```diff\n+gulp.task('scripts', () => {\n+-  return gulp.src('app/scripts/**/*.js')\n++\n++  const b = browserify({\n++    entries: 'app/scripts/main.js',\n++    transform: babelify,\n++    debug: true\n++  });\n++\n++  return b.bundle()\n++    .pipe(source('bundle.js'))\n+     .pipe($.plumber())\n+-    .pipe($.sourcemaps.init())\n+-    .pipe($.babel())\n++    .pipe(buffer())\n++    .pipe($.sourcemaps.init({loadMaps: true}))\n+     .pipe($.sourcemaps.write('.'))\n+     .pipe(gulp.dest('.tmp/scripts'))\n+     .pipe(reload({stream: true}));\n+});\n+```\n+\n+### 3. Edit your `index.html` \n+\n+We are going to require the compiled bundle.\n+\n+```diff\n+<!-- endbuild -->\n+\n+     <!-- build:js scripts/main.js -->\n+-    <script src=\"scripts/main.js\"></script>\n++    <script src=\"scripts/bundle.js\"></script>\n+     <!-- endbuild -->\n+   </body>\n+ </html>\n+```\n+\n+## Usage\n+\n+- Put your modules in `app/scripts`, and require them in your `main.js`.\n+\n+For example, you could have `foo.js`:\n+\n+```js\n+module.exports =  {\n+  speak: () => console.log('hello world')\n+}\n+```\n+\n+And then in your `main.js`:\n+\n+```js\n+let foo = require('./foo')",
        "path": "docs/recipes/browserify.md",
        "position": null,
        "original_position": 69,
        "commit_id": "4521dc83a17d2257974dd7df167dee25d3673413",
        "original_commit_id": "047e9e14a7876160764ef067986e22a553edb49b",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`const foo = require('./foo');`\n",
        "created_at": "2016-04-13T14:44:18Z",
        "updated_at": "2016-04-13T23:48:09Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/502#discussion_r59560970",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/502",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/59560970"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/502#discussion_r59560970"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/502"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/59561146",
        "pull_request_review_id": null,
        "id": 59561146,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTYxMTQ2",
        "diff_hunk": "@@ -0,0 +1,72 @@\n+# Setting up Browserify / Babelify\n+\n+With this setup you can import modules into your `main.js`. Only code used in `main.js` will be called by the app.\n+\n+\n+## Steps\n+\n+### 1. Install the required plugins\n+\n+```\n+$ npm install -save babelify vinyl-buffer vinyl-source-stream\n+```\n+\n+### 2. Edit your `scripts` task\n+\n+```diff\n+gulp.task('scripts', () => {\n+-  return gulp.src('app/scripts/**/*.js')\n++\n++  const b = browserify({\n++    entries: 'app/scripts/main.js',\n++    transform: babelify,\n++    debug: true\n++  });\n++\n++  return b.bundle()\n++    .pipe(source('bundle.js'))\n+     .pipe($.plumber())\n+-    .pipe($.sourcemaps.init())\n+-    .pipe($.babel())\n++    .pipe(buffer())\n++    .pipe($.sourcemaps.init({loadMaps: true}))\n+     .pipe($.sourcemaps.write('.'))\n+     .pipe(gulp.dest('.tmp/scripts'))\n+     .pipe(reload({stream: true}));\n+});\n+```\n+\n+### 3. Edit your `index.html` \n+\n+We are going to require the compiled bundle.\n+\n+```diff\n+<!-- endbuild -->\n+\n+     <!-- build:js scripts/main.js -->\n+-    <script src=\"scripts/main.js\"></script>\n++    <script src=\"scripts/bundle.js\"></script>\n+     <!-- endbuild -->\n+   </body>\n+ </html>\n+```\n+\n+## Usage\n+\n+- Put your modules in `app/scripts`, and require them in your `main.js`.\n+\n+For example, you could have `foo.js`:\n+\n+```js\n+module.exports =  {\n+  speak: () => console.log('hello world')\n+}",
        "path": "docs/recipes/browserify.md",
        "position": null,
        "original_position": 63,
        "commit_id": "4521dc83a17d2257974dd7df167dee25d3673413",
        "original_commit_id": "047e9e14a7876160764ef067986e22a553edb49b",
        "user": {
            "login": "kevva",
            "id": 709159,
            "node_id": "MDQ6VXNlcjcwOTE1OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/709159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevva",
            "html_url": "https://github.com/kevva",
            "followers_url": "https://api.github.com/users/kevva/followers",
            "following_url": "https://api.github.com/users/kevva/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevva/subscriptions",
            "organizations_url": "https://api.github.com/users/kevva/orgs",
            "repos_url": "https://api.github.com/users/kevva/repos",
            "events_url": "https://api.github.com/users/kevva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevva/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`module.exports.speak = () => console.log('hello world');`\n",
        "created_at": "2016-04-13T14:45:00Z",
        "updated_at": "2016-04-13T23:48:09Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/502#discussion_r59561146",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/502",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/59561146"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/502#discussion_r59561146"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/502"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/70521512",
        "pull_request_review_id": null,
        "id": 70521512,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNTIxNTEy",
        "diff_hunk": "@@ -111,7 +112,8 @@ Wiredep supports Jade:\n        exclude: ['bootstrap-sass'],\n        ignorePath: /^(\\.\\.\\/)*\\.\\./\n      }))\n-     .pipe(gulp.dest('app/layouts'));\n+-     .pipe(gulp.dest('app'));\n++     .pipe(gulp.dest('app/layouts'));",
        "path": "docs/recipes/jade.md",
        "position": null,
        "original_position": 16,
        "commit_id": "e8b0fea01eb249434b2843d2adc941699696a7fa",
        "original_commit_id": "b743d5bf22d46362e01e469a0b15e3992649a011",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Both of these lines have one extra space in the indentation.\n",
        "created_at": "2016-07-12T21:01:06Z",
        "updated_at": "2016-07-12T21:54:45Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/542#discussion_r70521512",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/542",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/70521512"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/542#discussion_r70521512"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/542"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/79985800",
        "pull_request_review_id": 1090567,
        "id": 79985800,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5OTg1ODAw",
        "diff_hunk": "@@ -170,6 +170,7 @@ gulp.task('serve:test', () => {\n <% if (includeBabel) { -%>\n   gulp.watch('app/scripts/**/*.js', ['scripts']);\n <% } -%>\n+  gulp.watch('test/index.html').on('change', reload);\n   gulp.watch('test/spec/**/*.js').on('change', reload);",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 5,
        "commit_id": "aec66b822a463222a18ba60ee46ca73b1ee354c4",
        "original_commit_id": "0a61a0992e1bac2ae7183f73b7d28d70bc18cc3f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`gulp.watch()` can accept an array, so just include it here. No need for multiple listeners.\n",
        "created_at": "2016-09-22T07:16:52Z",
        "updated_at": "2016-09-22T14:06:54Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/575#discussion_r79985800",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/575",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/79985800"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/575#discussion_r79985800"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/575"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/80046223",
        "pull_request_review_id": 1146871,
        "id": 80046223,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwMDQ2MjIz",
        "diff_hunk": "@@ -170,6 +170,7 @@ gulp.task('serve:test', () => {\n <% if (includeBabel) { -%>\n   gulp.watch('app/scripts/**/*.js', ['scripts']);\n <% } -%>\n+  gulp.watch('test/index.html').on('change', reload);\n   gulp.watch('test/spec/**/*.js').on('change', reload);",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 5,
        "commit_id": "aec66b822a463222a18ba60ee46ca73b1ee354c4",
        "original_commit_id": "0a61a0992e1bac2ae7183f73b7d28d70bc18cc3f",
        "user": {
            "login": "weltonrodrigo",
            "id": 1644644,
            "node_id": "MDQ6VXNlcjE2NDQ2NDQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1644644?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/weltonrodrigo",
            "html_url": "https://github.com/weltonrodrigo",
            "followers_url": "https://api.github.com/users/weltonrodrigo/followers",
            "following_url": "https://api.github.com/users/weltonrodrigo/following{/other_user}",
            "gists_url": "https://api.github.com/users/weltonrodrigo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/weltonrodrigo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weltonrodrigo/subscriptions",
            "organizations_url": "https://api.github.com/users/weltonrodrigo/orgs",
            "repos_url": "https://api.github.com/users/weltonrodrigo/repos",
            "events_url": "https://api.github.com/users/weltonrodrigo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/weltonrodrigo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'll change and squash them.\n",
        "created_at": "2016-09-22T14:00:14Z",
        "updated_at": "2016-09-22T14:06:54Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/575#discussion_r80046223",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/575",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/80046223"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/575#discussion_r80046223"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/575"
            }
        },
        "in_reply_to_id": 79985800
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/80630806",
        "pull_request_review_id": 1675041,
        "id": 80630806,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNjMwODA2",
        "diff_hunk": "@@ -0,0 +1,2 @@\n+node_modules\n+bower_components",
        "path": "app/templates/.dockerignore",
        "position": 2,
        "original_position": 2,
        "commit_id": "314c3a901b06b07a7f36a72e7d43233e2f732730",
        "original_commit_id": "314c3a901b06b07a7f36a72e7d43233e2f732730",
        "user": {
            "login": "neilhem",
            "id": 1889800,
            "node_id": "MDQ6VXNlcjE4ODk4MDA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1889800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neilhem",
            "html_url": "https://github.com/neilhem",
            "followers_url": "https://api.github.com/users/neilhem/followers",
            "following_url": "https://api.github.com/users/neilhem/following{/other_user}",
            "gists_url": "https://api.github.com/users/neilhem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neilhem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neilhem/subscriptions",
            "organizations_url": "https://api.github.com/users/neilhem/orgs",
            "repos_url": "https://api.github.com/users/neilhem/repos",
            "events_url": "https://api.github.com/users/neilhem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neilhem/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should be an empty newline at the end of file\n",
        "created_at": "2016-09-27T07:06:04Z",
        "updated_at": "2016-09-27T07:06:05Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/576#discussion_r80630806",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/576",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/80630806"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/576#discussion_r80630806"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/576"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/80630823",
        "pull_request_review_id": 1675054,
        "id": 80630823,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNjMwODIz",
        "diff_hunk": "@@ -0,0 +1,24 @@\n+FROM sbehrends/docker-webapp\n+MAINTAINER Sergio Behrends\n+\n+# Create app directory\n+RUN mkdir -p /usr/src/app\n+WORKDIR /usr/src/app\n+\n+# Install node dependencies\n+COPY package.json /usr/src/app/\n+RUN npm install\n+\n+# Install bower dependencies\n+COPY bower.json /usr/src/app/\n+RUN bower install --allow-root\n+\n+# Bundle app source\n+COPY . /usr/src/app\n+\n+# Build app\n+RUN gulp build\n+\n+# Serve app\n+EXPOSE 9000\n+CMD [ \"gulp\", \"serve:dist\" ]",
        "path": "app/templates/Dockerfile",
        "position": 24,
        "original_position": 24,
        "commit_id": "314c3a901b06b07a7f36a72e7d43233e2f732730",
        "original_commit_id": "314c3a901b06b07a7f36a72e7d43233e2f732730",
        "user": {
            "login": "neilhem",
            "id": 1889800,
            "node_id": "MDQ6VXNlcjE4ODk4MDA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1889800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neilhem",
            "html_url": "https://github.com/neilhem",
            "followers_url": "https://api.github.com/users/neilhem/followers",
            "following_url": "https://api.github.com/users/neilhem/following{/other_user}",
            "gists_url": "https://api.github.com/users/neilhem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neilhem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neilhem/subscriptions",
            "organizations_url": "https://api.github.com/users/neilhem/orgs",
            "repos_url": "https://api.github.com/users/neilhem/repos",
            "events_url": "https://api.github.com/users/neilhem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neilhem/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should be an empty newline at the end of file\n",
        "created_at": "2016-09-27T07:06:12Z",
        "updated_at": "2016-09-27T07:06:12Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/576#discussion_r80630823",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/576",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/80630823"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/576#discussion_r80630823"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/576"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/86671912",
        "pull_request_review_id": 7320511,
        "id": 86671912,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NjcxOTEy",
        "diff_hunk": "@@ -23,33 +23,72 @@ $ bower install --save handlebars\n ```\n \n * You need this so you can include the Handlebars runtime in your page \u2013 even compiled templates depend on this. (You won't need to include the entire Handlebars library though.)\n+  ```\n+  // bower.json\n+  {\n+    \"name\": \"MyApp\",\n+    \"dependencies\": {\n+      ...\n+    },\n+    \"devDependencies\": {\n+      ...\n+    },\n+    \"overrides\": {\n+      \"handlebars\": {\n+        \"main\": [\"handlebars.runtime.js\"]\n+      }\n+    }\n+  }\n+  ```",
        "path": "docs/recipes/handlebars.md",
        "position": 29,
        "original_position": 29,
        "commit_id": "4865a9d83cbe626ff2c0707ef7bccb555f200630",
        "original_commit_id": "4865a9d83cbe626ff2c0707ef7bccb555f200630",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "These code block is not rendering correctly, could you fix that?\n",
        "created_at": "2016-11-05T19:37:10Z",
        "updated_at": "2016-11-05T20:31:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/565#discussion_r86671912",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/565",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/86671912"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/565#discussion_r86671912"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/565"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/86672450",
        "pull_request_review_id": 7320511,
        "id": 86672450,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NjcyNDUw",
        "diff_hunk": "@@ -23,33 +23,72 @@ $ bower install --save handlebars\n ```\n \n * You need this so you can include the Handlebars runtime in your page \u2013 even compiled templates depend on this. (You won't need to include the entire Handlebars library though.)\n+  ```\n+  // bower.json\n+  {\n+    \"name\": \"MyApp\",\n+    \"dependencies\": {\n+      ...\n+    },\n+    \"devDependencies\": {\n+      ...\n+    },\n+    \"overrides\": {\n+      \"handlebars\": {\n+        \"main\": [\"handlebars.runtime.js\"]\n+      }\n+    }\n+  }\n+  ```\n * It's a good idea to verify you've installed the same version of Handlebars as the one used by internally by gulp-handlebars, to guarantee compatibility between the runtime and your compiled templates. Look in `node_modules/gulp-handlebars/package.json` under `\"dependencies\"` and check the handlebars version \u2013 if necessary, you can ask bower to install that specific version, e.g. `bower install --save handlebars#^1.3.0`.\n \n ### 2. Create a `templates` task\n \n ```js\n gulp.task('templates', () => {\n-  return gulp.src('app/templates/**/*.hbs')\n+  return gulp.src('app/templates/*.hbs')\n+    .pipe($.plumber())\n     .pipe($.handlebars())\n     .pipe($.defineModule('plain'))\n     .pipe($.declare({\n       namespace: 'MyApp.templates' // change this to whatever you want\n     }))\n+    .pipe($.concat('templates.js'))\n     .pipe(gulp.dest('.tmp/templates'));\n });\n ```\n+This compiles `.hbs` files into `templates.js` file in the `.tmp/templates` directory.\n \n-This compiles `.hbs` files into `.js` files in the `.tmp` directory.\n+### 2.1 Using Partials\n+\n+```js\n+gulp.task('partials', function() {\n+  return gulp.src('app/templates/partials/*.hbs')\n+    .pipe($.plumber())\n+    .pipe($.handlebars())\n+    .pipe($.wrap('Handlebars.registerPartial(<%= processPartialName(file.relative) %>, Handlebars.template(<%= contents %>));', {}, {\n+      imports: {\n+        processPartialName: function(fileName) {\n+          // Escape the output with JSON.stringify\n+          return JSON.stringify(path.basename(fileName, '.js'));\n+        }\n+      }\n+    }))\n+    .pipe($.concat('partials.js'))\n+    .pipe(gulp.dest('.tmp/templates'));\n+});\n+```\n+This compiles the `.hbs` files inside the `templates/partials` directory into `partials.js` file in the `.tmp/templates` directory.\n \n ### 3. Add `templates` as a dependency of both `html` and `serve`",
        "path": "docs/recipes/handlebars.md",
        "position": 72,
        "original_position": 72,
        "commit_id": "4865a9d83cbe626ff2c0707ef7bccb555f200630",
        "original_commit_id": "4865a9d83cbe626ff2c0707ef7bccb555f200630",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This title needs to include the `partials` task (so \"Add `templates` and `partials`\u2026\").\n",
        "created_at": "2016-11-05T20:12:17Z",
        "updated_at": "2016-11-05T20:31:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/565#discussion_r86672450",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/565",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/86672450"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/565#discussion_r86672450"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/565"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/86672501",
        "pull_request_review_id": 7320511,
        "id": 86672501,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NjcyNTAx",
        "diff_hunk": "@@ -58,32 +97,39 @@ gulp.task('serve', ['styles', 'templates', 'fonts'], () => {\n Edit your `serve` task so that (a) editing an `.hbs` file triggers the `templates` task, and (b) the browser is reloaded whenever a `.js` file is generated in `.tmp/templates`:\n \n ```diff\n- gulp.task('serve', ['styles', 'templates', 'fonts'], () => {\n+gulp.task('serve', ['styles', 'templates', 'partials', 'scripts', 'fonts'], () => {",
        "path": "docs/recipes/handlebars.md",
        "position": 91,
        "original_position": 91,
        "commit_id": "4865a9d83cbe626ff2c0707ef7bccb555f200630",
        "original_commit_id": "4865a9d83cbe626ff2c0707ef7bccb555f200630",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The original `gulpfile.js` has changed (that is my fault for not merging this earlier, sorry \ud83d\ude13). Could you please update this task to reflect the changes? So instead of adding `partials` and `scripts` to the task itself, add it to the [line below](https://github.com/yeoman/generator-webapp/blob/master/app/templates/gulpfile.js#L97).\n",
        "created_at": "2016-11-05T20:17:09Z",
        "updated_at": "2016-11-05T20:31:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/565#discussion_r86672501",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/565",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/86672501"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/565#discussion_r86672501"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/565"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/86672576",
        "pull_request_review_id": 7320511,
        "id": 86672576,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NjcyNTc2",
        "diff_hunk": "@@ -58,32 +97,39 @@ gulp.task('serve', ['styles', 'templates', 'fonts'], () => {\n Edit your `serve` task so that (a) editing an `.hbs` file triggers the `templates` task, and (b) the browser is reloaded whenever a `.js` file is generated in `.tmp/templates`:\n \n ```diff\n- gulp.task('serve', ['styles', 'templates', 'fonts'], () => {\n+gulp.task('serve', ['styles', 'templates', 'partials', 'scripts', 'fonts'], () => {\n    ...\n    gulp.watch([\n-     'app/*.html',\n-     '.tmp/styles/**/*.css',\n-+    '.tmp/templates/**/*.js',\n-     'app/scripts/**/*.js',\n-     'app/images/**/*'\n-   ]).on('change', reload);\n-\n-   gulp.watch('app/styles/**/*.scss', ['styles', reload]);\n-+  gulp.watch('app/templates/**/*.hbs', ['templates', reload]);\n-   gulp.watch('bower.json', ['wiredep', 'fonts', reload]);\n+    'app/*.html',\n+    'app/images/**/*',\n+    '.tmp/fonts/**/*',\n++   '.tmp/templates/**/*.js',\n+  ]).on('change', reload);\n+\n+  gulp.watch('app/styles/**/*.scss', ['styles']);\n++  gulp.watch('app/templates/*.hbs', ['templates']);\n++  gulp.watch('app/templates/partials/*.hbs', ['partials']);\n+  gulp.watch('app/scripts/**/*.js', ['scripts']);\n+  gulp.watch('app/fonts/**/*', ['fonts']);\n+  gulp.watch('bower.json', ['wiredep', 'fonts']);\n  });\n ```\n \n ## Usage\n \n-Put `.hbs` files in `app/templates`, and include them in your HTML as if they're `.js` files.\n-\n-Example \u2013 if you've written a template at `app/templates/foo.hbs`:\n+Put your `.hbs` files in `app/templates` and `app/templates/partials` (if you using partials), and include in your HTML after the bower components:\n \n ```html\n-<script src=\"bower_components/handlebars/handlebars.runtime.js\"></script>\n-<script src=\"templates/foo.js\"></script>\n-<script src=\"scripts/main.js\"></script>\n+  <!-- build:js scripts/vendor.js -->\n+  <!-- bower:js -->\n+  ...\n+  <!-- endbower -->\n+  <!-- endbuild -->\n+\n+  <!-- build:js templates/index.js -->",
        "path": "docs/recipes/handlebars.md",
        "position": 136,
        "original_position": 136,
        "commit_id": "4865a9d83cbe626ff2c0707ef7bccb555f200630",
        "original_commit_id": "4865a9d83cbe626ff2c0707ef7bccb555f200630",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe I'm missing something here, but why open another comment block, why not just merge templates and partials with the `scripts/main.js` block next to it?\n",
        "created_at": "2016-11-05T20:22:04Z",
        "updated_at": "2016-11-05T23:02:28Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/565#discussion_r86672576",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/565",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/86672576"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/565#discussion_r86672576"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/565"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/86672626",
        "pull_request_review_id": 7320511,
        "id": 86672626,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NjcyNjI2",
        "diff_hunk": "@@ -10,7 +10,7 @@ This recipe shows how to set up Handlebars to precompile your templates, includi\n Install some gulp plugins:\n \n ```\n-$ npm install --save-dev gulp-handlebars gulp-define-module gulp-declare\n+$ npm install --save-dev path gulp-concat gulp-handlebars gulp-define-module gulp-declare",
        "path": "docs/recipes/handlebars.md",
        "position": 5,
        "original_position": 5,
        "commit_id": "4865a9d83cbe626ff2c0707ef7bccb555f200630",
        "original_commit_id": "4865a9d83cbe626ff2c0707ef7bccb555f200630",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I believe gulp-wrap is missing here? Also, `path` is a built-in module, so I don't think it should be there.\r\n",
        "created_at": "2016-11-05T20:25:55Z",
        "updated_at": "2017-01-12T09:08:55Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/565#discussion_r86672626",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/565",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/86672626"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/565#discussion_r86672626"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/565"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/97217922",
        "pull_request_review_id": 17824720,
        "id": 97217922,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3MjE3OTIy",
        "diff_hunk": "@@ -23,22 +23,28 @@\n     <!-- endbuild --><% } %>\n   </head>\n   <body>\n-    <!--[if lt IE 10]>\n+    <!--[if IE]>\n       <p class=\"browserupgrade\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.</p>\n     <![endif]-->\n     <% if (includeBootstrap) { %>\n     <div class=\"container\">\n       <div class=\"header\">\n-        <ul class=\"nav nav-pills pull-right\">\n-          <li class=\"active\"><a href=\"#\">Home</a></li>\n-          <li><a href=\"#\">About</a></li>\n-          <li><a href=\"#\">Contact</a></li>\n+        <ul class=\"nav nav-pills <% if (legacyBootstrap) { %>pull<% } else { %>float<% } %>-right\">\n+          <li class=\"<% if (legacyBootstrap) { %>active<% } else { %>nav-item<% } %>\">\n+            <a <% if (!legacyBootstrap) { %>class=\"nav-link active\" <% } %>href=\"#\">Home</a>\n+          </li>\n+          <li>\n+            <a <% if (!legacyBootstrap) { %>class=\"nav-link\" <% } %>href=\"#\">About</a>\n+          </li>\n+          <li>\n+            <a <% if (!legacyBootstrap) { %>class=\"nav-link\" <% } %>href=\"#\">Contact</a>\n+          </li>\n         </ul>\n         <h3 class=\"text-muted\"><%= appname %></h3>\n       </div>\n \n       <div class=\"jumbotron\">\n-        <h1>'Allo, 'Allo!</h1>\n+        <h1 <% if (!legacyBootstrap) { %>class=\"display-3\" <% } %>>'Allo, 'Allo!</h1>",
        "path": "app/templates/index.html",
        "position": null,
        "original_position": 40,
        "commit_id": "a076e3adad6531e904d10d40c86447d1e9c708c6",
        "original_commit_id": "5f61a87e9deaea1a201cb316ead5156a5490e53c",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Move the space after `h1` inside the `if` statement:\r\n\r\n```html\r\n<h1<% if (!legacyBootstrap) { %> class=\"display-3\" <% } %>>'Allo, 'Allo!</h1>\r\n```\r\n\r\n(Notice the space before `class`.)",
        "created_at": "2017-01-22T09:42:12Z",
        "updated_at": "2017-01-22T15:25:41Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/621#discussion_r97217922",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/621",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/97217922"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/621#discussion_r97217922"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/621"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/97218127",
        "pull_request_review_id": 17824720,
        "id": 97218127,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3MjE4MTI3",
        "diff_hunk": "@@ -64,9 +64,18 @@ gulp.task('html', ['styles'], () => {\n <% } -%>\n   return gulp.src('app/*.html')\n     .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n-    .pipe($.if('*.js', $.uglify()))\n+    .pipe($.if('*.js', $.uglify({compress: {drop_console: true}})))\n     .pipe($.if('*.css', $.cssnano({safe: true, autoprefixer: false})))\n-    .pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n+    .pipe($.if('*.html', $.htmlmin({\n+      collapseWhitespace: true,\n+      minifyCSS: true,\n+      minifyJS: {compress: {drop_console: true}},\n+      processConditionalComments: true,\n+      removeComments: true,\n+      removeEmptyAttributes: true,\n+      removeScriptTypeAttributes: true,\n+      removeStyleLinkTypeAttributes: true\n+    })))",
        "path": "app/templates/gulpfile.js",
        "position": 17,
        "original_position": 17,
        "commit_id": "a076e3adad6531e904d10d40c86447d1e9c708c6",
        "original_commit_id": "5f61a87e9deaea1a201cb316ead5156a5490e53c",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you explain these changes to the `html` task?",
        "created_at": "2017-01-22T09:51:51Z",
        "updated_at": "2017-01-22T15:25:41Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/621#discussion_r97218127",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/621",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/97218127"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/621#discussion_r97218127"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/621"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/97224703",
        "pull_request_review_id": 17830322,
        "id": 97224703,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3MjI0NzAz",
        "diff_hunk": "@@ -64,9 +64,18 @@ gulp.task('html', ['styles'], () => {\n <% } -%>\n   return gulp.src('app/*.html')\n     .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n-    .pipe($.if('*.js', $.uglify()))\n+    .pipe($.if('*.js', $.uglify({compress: {drop_console: true}})))\n     .pipe($.if('*.css', $.cssnano({safe: true, autoprefixer: false})))\n-    .pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n+    .pipe($.if('*.html', $.htmlmin({\n+      collapseWhitespace: true,\n+      minifyCSS: true,\n+      minifyJS: {compress: {drop_console: true}},\n+      processConditionalComments: true,\n+      removeComments: true,\n+      removeEmptyAttributes: true,\n+      removeScriptTypeAttributes: true,\n+      removeStyleLinkTypeAttributes: true\n+    })))",
        "path": "app/templates/gulpfile.js",
        "position": 17,
        "original_position": 17,
        "commit_id": "a076e3adad6531e904d10d40c86447d1e9c708c6",
        "original_commit_id": "5f61a87e9deaea1a201cb316ead5156a5490e53c",
        "user": {
            "login": "MarkyMarkNo1",
            "id": 2435073,
            "node_id": "MDQ6VXNlcjI0MzUwNzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2435073?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkyMarkNo1",
            "html_url": "https://github.com/MarkyMarkNo1",
            "followers_url": "https://api.github.com/users/MarkyMarkNo1/followers",
            "following_url": "https://api.github.com/users/MarkyMarkNo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkyMarkNo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkyMarkNo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkyMarkNo1/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkyMarkNo1/orgs",
            "repos_url": "https://api.github.com/users/MarkyMarkNo1/repos",
            "events_url": "https://api.github.com/users/MarkyMarkNo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkyMarkNo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sure, my suggestions. Would you like inline comments, or just here for clarification?\r\n\r\n```javascript\r\n// https://github.com/kangax/html-minifier#options-quick-reference\r\n$.htmlmin({\r\n  collapseWhitespace: true,\r\n  // Minify CSS in style elements and style attributes\r\n  minifyCSS: true,\r\n  // Minify JavaScript in script elements and event attributes\r\n  minifyJS: {compress: {drop_console: true}},\r\n  // Process contents of conditional comments through minifier\r\n  processConditionalComments: true,\r\n  // Strip HTML comments\r\n  removeComments: true,\r\n  // Remove all attributes with whitespace-only values\r\n  removeEmptyAttributes: true,\r\n  // Remove type=\"text/javascript\" from script tags\r\n  removeScriptTypeAttributes: true,\r\n  // Remove type=\"text/css\" from style and link tags\r\n  removeStyleLinkTypeAttributes: true\r\n})\r\n```\r\n",
        "created_at": "2017-01-22T14:57:59Z",
        "updated_at": "2017-01-22T15:25:41Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/621#discussion_r97224703",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/621",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/97224703"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/621#discussion_r97224703"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/621"
            }
        },
        "in_reply_to_id": 97218127
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/97278456",
        "pull_request_review_id": 17881625,
        "id": 97278456,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3Mjc4NDU2",
        "diff_hunk": "@@ -64,9 +64,18 @@ gulp.task('html', ['styles'], () => {\n <% } -%>\n   return gulp.src('app/*.html')\n     .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n-    .pipe($.if('*.js', $.uglify()))\n+    .pipe($.if('*.js', $.uglify({compress: {drop_console: true}})))\n     .pipe($.if('*.css', $.cssnano({safe: true, autoprefixer: false})))\n-    .pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n+    .pipe($.if('*.html', $.htmlmin({\n+      collapseWhitespace: true,\n+      minifyCSS: true,\n+      minifyJS: {compress: {drop_console: true}},\n+      processConditionalComments: true,\n+      removeComments: true,\n+      removeEmptyAttributes: true,\n+      removeScriptTypeAttributes: true,\n+      removeStyleLinkTypeAttributes: true\n+    })))",
        "path": "app/templates/gulpfile.js",
        "position": 17,
        "original_position": 17,
        "commit_id": "a076e3adad6531e904d10d40c86447d1e9c708c6",
        "original_commit_id": "5f61a87e9deaea1a201cb316ead5156a5490e53c",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I meant, how are these changes related to Bootstrap 4?",
        "created_at": "2017-01-23T09:26:20Z",
        "updated_at": "2017-01-23T09:26:21Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/621#discussion_r97278456",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/621",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/97278456"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/621#discussion_r97278456"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/621"
            }
        },
        "in_reply_to_id": 97218127
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/97284263",
        "pull_request_review_id": 17887649,
        "id": 97284263,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3Mjg0MjYz",
        "diff_hunk": "@@ -64,9 +64,18 @@ gulp.task('html', ['styles'], () => {\n <% } -%>\n   return gulp.src('app/*.html')\n     .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n-    .pipe($.if('*.js', $.uglify()))\n+    .pipe($.if('*.js', $.uglify({compress: {drop_console: true}})))\n     .pipe($.if('*.css', $.cssnano({safe: true, autoprefixer: false})))\n-    .pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n+    .pipe($.if('*.html', $.htmlmin({\n+      collapseWhitespace: true,\n+      minifyCSS: true,\n+      minifyJS: {compress: {drop_console: true}},\n+      processConditionalComments: true,\n+      removeComments: true,\n+      removeEmptyAttributes: true,\n+      removeScriptTypeAttributes: true,\n+      removeStyleLinkTypeAttributes: true\n+    })))",
        "path": "app/templates/gulpfile.js",
        "position": 17,
        "original_position": 17,
        "commit_id": "a076e3adad6531e904d10d40c86447d1e9c708c6",
        "original_commit_id": "5f61a87e9deaea1a201cb316ead5156a5490e53c",
        "user": {
            "login": "MarkyMarkNo1",
            "id": 2435073,
            "node_id": "MDQ6VXNlcjI0MzUwNzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2435073?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkyMarkNo1",
            "html_url": "https://github.com/MarkyMarkNo1",
            "followers_url": "https://api.github.com/users/MarkyMarkNo1/followers",
            "following_url": "https://api.github.com/users/MarkyMarkNo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkyMarkNo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkyMarkNo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkyMarkNo1/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkyMarkNo1/orgs",
            "repos_url": "https://api.github.com/users/MarkyMarkNo1/repos",
            "events_url": "https://api.github.com/users/MarkyMarkNo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkyMarkNo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually these tweaks are not in direct relation to BS4, just best practices to optimize a production build.",
        "created_at": "2017-01-23T10:00:28Z",
        "updated_at": "2017-01-23T10:00:28Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/621#discussion_r97284263",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/621",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/97284263"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/621#discussion_r97284263"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/621"
            }
        },
        "in_reply_to_id": 97218127
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/101380213",
        "pull_request_review_id": 22107253,
        "id": 101380213,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTM4MDIxMw==",
        "diff_hunk": "@@ -72,7 +72,17 @@ gulp.task('views', () => {\n \n This compiles `app/*.njk` files into static `.html` files in the `.tmp` directory.\n \n-### 5. Add `views` as a dependency of both `html` and `serve`\n+### 5. Create a 'views_reload' task",
        "path": "docs/recipes/nunjucks.md",
        "position": null,
        "original_position": 5,
        "commit_id": "4d77dfa88ecbbd42c945dadd70eada3a86e5933f",
        "original_commit_id": "c8c5fd6855fa12ac4bb5c44fcbb96d443269597d",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would prefer that we use `:` for separating task words instead of `_`. Could you change this (and the following occurrences) to `views:reload`?",
        "created_at": "2017-02-15T20:54:12Z",
        "updated_at": "2017-02-15T20:58:51Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/631#discussion_r101380213",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/631",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/101380213"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/631#discussion_r101380213"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/631"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/107234369",
        "pull_request_review_id": 28194719,
        "id": 107234369,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNzIzNDM2OQ==",
        "diff_hunk": "@@ -125,7 +125,9 @@ Recompile Pug templates on each change and reload the browser after an HTML file\n \n ```diff\n  gulp.task('serve', ['views', 'styles', 'scripts', 'fonts'], () => {\n-   ...\n+-   runSequence(['clean', 'wiredep'], ['styles', 'scripts', fonts'], () => {\n++   runSequence(['clean', 'wiredep'], ['html', 'styles', 'scripts', fonts'], () => {",
        "path": "docs/recipes/pug.md",
        "position": 6,
        "original_position": 6,
        "commit_id": "aa53304f28155d20a05e6890831e7f8f7c61cea0",
        "original_commit_id": "aa53304f28155d20a05e6890831e7f8f7c61cea0",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Don't you mean `views` instead of `html`?",
        "created_at": "2017-03-21T18:15:20Z",
        "updated_at": "2017-03-21T18:15:45Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/643#discussion_r107234369",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/643",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/107234369"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/643#discussion_r107234369"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/643"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/108054552",
        "pull_request_review_id": 29064670,
        "id": 108054552,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODA1NDU1Mg==",
        "diff_hunk": "@@ -125,7 +125,9 @@ Recompile Pug templates on each change and reload the browser after an HTML file\n \n ```diff\n  gulp.task('serve', ['views', 'styles', 'scripts', 'fonts'], () => {\n-   ...\n+-   runSequence(['clean', 'wiredep'], ['styles', 'scripts', fonts'], () => {\n++   runSequence(['clean', 'wiredep'], ['html', 'styles', 'scripts', fonts'], () => {",
        "path": "docs/recipes/pug.md",
        "position": 6,
        "original_position": 6,
        "commit_id": "aa53304f28155d20a05e6890831e7f8f7c61cea0",
        "original_commit_id": "aa53304f28155d20a05e6890831e7f8f7c61cea0",
        "user": {
            "login": "s1n",
            "id": 35360,
            "node_id": "MDQ6VXNlcjM1MzYw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/35360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/s1n",
            "html_url": "https://github.com/s1n",
            "followers_url": "https://api.github.com/users/s1n/followers",
            "following_url": "https://api.github.com/users/s1n/following{/other_user}",
            "gists_url": "https://api.github.com/users/s1n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/s1n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/s1n/subscriptions",
            "organizations_url": "https://api.github.com/users/s1n/orgs",
            "repos_url": "https://api.github.com/users/s1n/repos",
            "events_url": "https://api.github.com/users/s1n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/s1n/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, but I can't figure out how to amend this commit since I edited it via github. Would you rather I close this pull request and open a new one?",
        "created_at": "2017-03-26T08:04:37Z",
        "updated_at": "2017-03-26T08:04:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/643#discussion_r108054552",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/643",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/108054552"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/643#discussion_r108054552"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/643"
            }
        },
        "in_reply_to_id": 107234369
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/108090932",
        "pull_request_review_id": 29099376,
        "id": 108090932,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODA5MDkzMg==",
        "diff_hunk": "@@ -125,7 +125,9 @@ Recompile Pug templates on each change and reload the browser after an HTML file\n \n ```diff\n  gulp.task('serve', ['views', 'styles', 'scripts', 'fonts'], () => {\n-   ...\n+-   runSequence(['clean', 'wiredep'], ['styles', 'scripts', fonts'], () => {\n++   runSequence(['clean', 'wiredep'], ['html', 'styles', 'scripts', fonts'], () => {",
        "path": "docs/recipes/pug.md",
        "position": 6,
        "original_position": 6,
        "commit_id": "aa53304f28155d20a05e6890831e7f8f7c61cea0",
        "original_commit_id": "aa53304f28155d20a05e6890831e7f8f7c61cea0",
        "user": {
            "login": "neilhem",
            "id": 1889800,
            "node_id": "MDQ6VXNlcjE4ODk4MDA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1889800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neilhem",
            "html_url": "https://github.com/neilhem",
            "followers_url": "https://api.github.com/users/neilhem/followers",
            "following_url": "https://api.github.com/users/neilhem/following{/other_user}",
            "gists_url": "https://api.github.com/users/neilhem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neilhem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neilhem/subscriptions",
            "organizations_url": "https://api.github.com/users/neilhem/orgs",
            "repos_url": "https://api.github.com/users/neilhem/repos",
            "events_url": "https://api.github.com/users/neilhem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neilhem/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You can push a new commit, we will squash all commits into one and merge",
        "created_at": "2017-03-27T04:56:57Z",
        "updated_at": "2017-03-27T04:56:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/643#discussion_r108090932",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/643",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/108090932"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/643#discussion_r108090932"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/643"
            }
        },
        "in_reply_to_id": 107234369
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227055499",
        "pull_request_review_id": 167010538,
        "id": 227055499,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzA1NTQ5OQ==",
        "diff_hunk": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"generator-webapp\",\n-  \"version\": \"3.0.1\",\n+  \"version\": \"3.0.2\",",
        "path": "package.json",
        "position": null,
        "original_position": 4,
        "commit_id": "da7d5a045fea9d8956893c8793d428cfec96c6d9",
        "original_commit_id": "5ced90f88e717499afb286a607cf5de8438b3632",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Don't bump the version, I will do it, instead just let me know that you would like to see this feature published ASAP. \ud83d\ude09 ",
        "created_at": "2018-10-22T17:03:08Z",
        "updated_at": "2018-10-23T14:49:28Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/730#discussion_r227055499",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/730",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227055499"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/730#discussion_r227055499"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/730"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227371849",
        "pull_request_review_id": 167395365,
        "id": 227371849,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzM3MTg0OQ==",
        "diff_hunk": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"generator-webapp\",\n-  \"version\": \"3.0.1\",\n+  \"version\": \"3.0.2\",",
        "path": "package.json",
        "position": null,
        "original_position": 4,
        "commit_id": "da7d5a045fea9d8956893c8793d428cfec96c6d9",
        "original_commit_id": "5ced90f88e717499afb286a607cf5de8438b3632",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh! Great! I will update it now ^^",
        "created_at": "2018-10-23T12:44:55Z",
        "updated_at": "2018-10-23T14:49:28Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/730#discussion_r227371849",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/730",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227371849"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/730#discussion_r227371849"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/730"
            }
        },
        "in_reply_to_id": 227055499
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227425655",
        "pull_request_review_id": 167461989,
        "id": 227425655,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzQyNTY1NQ==",
        "diff_hunk": "@@ -7,11 +7,13 @@ const wiredep = require('wiredep').stream;\n const runSequence = require('run-sequence');\n const autoprefixer = require('autoprefixer');\n const cssnano = require('cssnano');\n+const argv = require('yargs').argv;",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 4,
        "commit_id": "da7d5a045fea9d8956893c8793d428cfec96c6d9",
        "original_commit_id": "8ea6cffee992a92740e22cdefaa10b2c2d9dfbd8",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So sorry to nitpick, but you can destructure this instead:\r\n```suggestion\r\nconst { argv } = require('yargs');\r\n```",
        "created_at": "2018-10-23T14:42:43Z",
        "updated_at": "2018-10-23T14:49:28Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/730#discussion_r227425655",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/730",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227425655"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/730#discussion_r227425655"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/730"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227428592",
        "pull_request_review_id": 167465876,
        "id": 227428592,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzQyODU5Mg==",
        "diff_hunk": "@@ -7,11 +7,13 @@ const wiredep = require('wiredep').stream;\n const runSequence = require('run-sequence');\n const autoprefixer = require('autoprefixer');\n const cssnano = require('cssnano');\n+const argv = require('yargs').argv;",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 4,
        "commit_id": "da7d5a045fea9d8956893c8793d428cfec96c6d9",
        "original_commit_id": "8ea6cffee992a92740e22cdefaa10b2c2d9dfbd8",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Right! Let me change that \ud83d\udc4d ",
        "created_at": "2018-10-23T14:49:20Z",
        "updated_at": "2018-10-23T14:49:28Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/730#discussion_r227428592",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/730",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227428592"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/730#discussion_r227428592"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/730"
            }
        },
        "in_reply_to_id": 227425655
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227659683",
        "pull_request_review_id": 167748986,
        "id": 227659683,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzY1OTY4Mw==",
        "diff_hunk": "@@ -4,39 +4,50 @@\n     \"node\": \">=4\"\n   },\n   \"devDependencies\": {\n-    \"autoprefixer\": \"^7.1.2\",\n-    \"babel-core\": \"^6.4.0\",\n-    \"babel-preset-es2015\": \"^6.3.13\",\n+    <% if (includeBabel || includeSass) { %>\n+    \"gulp-plumber\": \"^1.0.1\",\n+    <% } %>\n+    <% if (includeBabel) { %>\n+    \"@babel/core\": \"^7.1.2\",\n+    \"@babel/preset-env\": \"^7.1.0\",\n+    \"gulp-babel\": \"^8.0.0\",\n+    <% } %>\n+    <% if (includeSass) { %>\n+    \"gulp-filter\": \"^5.1.0\",\n+    \"gulp-sass\": \"^4.0.2\",\n+    <% } %>\n+    \"gulp-postcss\": \"^8.0.0\",",
        "path": "app/templates/_package.json",
        "position": null,
        "original_position": 19,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You mentioned gulp-postcss in #732 and you were right! Looking at `gulpfile.js` now I see that it needs to be added always like you did here, good job!",
        "created_at": "2018-10-24T06:46:51Z",
        "updated_at": "2018-10-24T13:32:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227659683",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227659683"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227659683"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227660802",
        "pull_request_review_id": 167748986,
        "id": 227660802,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzY2MDgwMg==",
        "diff_hunk": "@@ -4,39 +4,50 @@\n     \"node\": \">=4\"\n   },\n   \"devDependencies\": {",
        "path": "app/templates/_package.json",
        "position": 3,
        "original_position": 3,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Dependencies need to be in the alphabetical order, because that's how package managers order them. I think that as soon as a user adds a new package, the dependencies below would order these alphabetically and cause an unnecessary diff.\r\n\r\nIt's not very convenient for conditional statements, I know. \ud83d\ude15 Alternatively you could try to use something like [sort-package-json](https://www.npmjs.com/package/sort-package-json) (but only for dependencies).",
        "created_at": "2018-10-24T06:51:11Z",
        "updated_at": "2018-10-24T13:32:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227660802",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227660802"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227660802"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227661657",
        "pull_request_review_id": 167748986,
        "id": 227661657,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzY2MTY1Nw==",
        "diff_hunk": "@@ -4,39 +4,50 @@\n     \"node\": \">=4\"\n   },\n   \"devDependencies\": {\n-    \"autoprefixer\": \"^7.1.2\",\n-    \"babel-core\": \"^6.4.0\",\n-    \"babel-preset-es2015\": \"^6.3.13\",\n+    <% if (includeBabel || includeSass) { %>\n+    \"gulp-plumber\": \"^1.0.1\",\n+    <% } %>\n+    <% if (includeBabel) { %>\n+    \"@babel/core\": \"^7.1.2\",",
        "path": "app/templates/_package.json",
        "position": 6,
        "original_position": 11,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think this technique of conditionals will leave empty lines (try it for yourself to see). Please compress it like we were doing so far:\r\n\r\n```\r\n\"devDependencies\": {<% if (includeBabel || includeSass) { %>\r\n\"gulp-plumber\": \"^1.0.1\",<% } if (includeBabel) { %>\r\n\"@babel/core\": \"^7.1.2\",\r\n```\r\n\r\nSame applies to other instances of this.",
        "created_at": "2018-10-24T06:54:52Z",
        "updated_at": "2018-10-24T13:32:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227661657",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227661657"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227661657"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227663352",
        "pull_request_review_id": 167748986,
        "id": 227663352,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzY2MzM1Mg==",
        "diff_hunk": "@@ -4,39 +4,50 @@\n     \"node\": \">=4\"\n   },\n   \"devDependencies\": {\n-    \"autoprefixer\": \"^7.1.2\",\n-    \"babel-core\": \"^6.4.0\",\n-    \"babel-preset-es2015\": \"^6.3.13\",\n+    <% if (includeBabel || includeSass) { %>\n+    \"gulp-plumber\": \"^1.0.1\",\n+    <% } %>\n+    <% if (includeBabel) { %>\n+    \"@babel/core\": \"^7.1.2\",\n+    \"@babel/preset-env\": \"^7.1.0\",\n+    \"gulp-babel\": \"^8.0.0\",\n+    <% } %>\n+    <% if (includeSass) { %>\n+    \"gulp-filter\": \"^5.1.0\",\n+    \"gulp-sass\": \"^4.0.2\",\n+    <% } %>\n+    \"gulp-postcss\": \"^8.0.0\",\n+    \"autoprefixer\": \"^9.3.0\",\n     \"babel-register\": \"^6.5.2\",\n     \"browser-sync\": \"^2.2.1\",\n-    \"cssnano\": \"^3.10.0\",\n-    \"del\": \"^2.2.0\",\n-    \"gulp\": \"^3.9.0\",<% if (includeBabel) { %>\n-    \"gulp-babel\": \"^6.1.1\",<% } %>\n-    \"gulp-cache\": \"^0.4.2\",\n-    \"gulp-eslint\": \"^3.0.0\",<% if (includeSass) { %>\n-    \"gulp-filter\": \"^4.0.0\",<% } %>\n-    \"gulp-htmlmin\": \"^3.0.0\",\n+    \"cssnano\": \"^4.1.7\",\n+    \"del\": \"^3.0.0\",\n+    \"gulp\": \"^3.9.0\",\n+    \"gulp-cache\": \"^1.0.2\",\n+    \"gulp-eslint\": \"^5.0.0\",\n+    \"gulp-htmlmin\": \"^5.0.1\",\n     \"gulp-if\": \"^2.0.2\",\n-    \"gulp-imagemin\": \"^3.0.1\",\n-    \"gulp-load-plugins\": \"^1.2.4\",<% if (includeBabel || includeSass) { %>\n-    \"gulp-plumber\": \"^1.0.1\",\n-    \"gulp-postcss\": \"^7.0.0\",<% } if (includeSass) { %>\n-    \"gulp-sass\": \"^3.0.0\",<% } %>\n-    \"gulp-size\": \"^2.1.0\",\n+    \"gulp-imagemin\": \"^4.1.0\",\n+    \"gulp-load-plugins\": \"^1.2.4\",\n+    \"gulp-size\": \"^3.0.0\",\n     \"gulp-sourcemaps\": \"^2.2.0\",\n-    \"gulp-uglify\": \"^2.0.0\",\n+    \"gulp-uglify\": \"^3.0.1\",\n     \"gulp-useref\": \"^3.0.0\",\n     \"main-bower-files\": \"^2.5.0\",\n-    \"run-sequence\": \"^1.2.2\",\n+    \"mocha\": \"^5.2.0\",",
        "path": "app/templates/_package.json",
        "position": 57,
        "original_position": 53,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is Mocha being added? Depending on whether Mocha or Jasmine is chosen, those test runners will be installed by generator-mocha and generator-jasmine respectively.",
        "created_at": "2018-10-24T07:02:18Z",
        "updated_at": "2018-10-24T13:32:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227663352",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227663352"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227663352"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227664200",
        "pull_request_review_id": 167748986,
        "id": 227664200,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzY2NDIwMA==",
        "diff_hunk": "@@ -1,5 +1,5 @@\n {\n   \"presets\": [\n-    \"es2015\"\n+    \"@babel/env\"",
        "path": "app/templates/babelrc",
        "position": null,
        "original_position": 4,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Does this shorthand work? I suggest typing `@babel/preset-env` instead either way, because that's how it says in the official documentation. I recall that Babel folks even started discouraging shorthands at some point, but I can't find that info. \ud83e\udd14 ",
        "created_at": "2018-10-24T07:06:17Z",
        "updated_at": "2018-10-24T13:32:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227664200",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227664200"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227664200"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227781803",
        "pull_request_review_id": 167899338,
        "id": 227781803,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzc4MTgwMw==",
        "diff_hunk": "@@ -4,39 +4,50 @@\n     \"node\": \">=4\"\n   },\n   \"devDependencies\": {\n-    \"autoprefixer\": \"^7.1.2\",\n-    \"babel-core\": \"^6.4.0\",\n-    \"babel-preset-es2015\": \"^6.3.13\",\n+    <% if (includeBabel || includeSass) { %>\n+    \"gulp-plumber\": \"^1.0.1\",\n+    <% } %>\n+    <% if (includeBabel) { %>\n+    \"@babel/core\": \"^7.1.2\",\n+    \"@babel/preset-env\": \"^7.1.0\",\n+    \"gulp-babel\": \"^8.0.0\",\n+    <% } %>\n+    <% if (includeSass) { %>\n+    \"gulp-filter\": \"^5.1.0\",\n+    \"gulp-sass\": \"^4.0.2\",\n+    <% } %>\n+    \"gulp-postcss\": \"^8.0.0\",",
        "path": "app/templates/_package.json",
        "position": null,
        "original_position": 19,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks!",
        "created_at": "2018-10-24T13:14:17Z",
        "updated_at": "2018-10-24T13:32:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227781803",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227781803"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227781803"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        },
        "in_reply_to_id": 227659683
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227782183",
        "pull_request_review_id": 167899826,
        "id": 227782183,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzc4MjE4Mw==",
        "diff_hunk": "@@ -4,39 +4,50 @@\n     \"node\": \">=4\"\n   },\n   \"devDependencies\": {",
        "path": "app/templates/_package.json",
        "position": 3,
        "original_position": 3,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I will fix that in a moment \ud83d\udc4d ",
        "created_at": "2018-10-24T13:15:15Z",
        "updated_at": "2018-10-24T13:32:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227782183",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227782183"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227782183"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        },
        "in_reply_to_id": 227660802
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227782409",
        "pull_request_review_id": 167900103,
        "id": 227782409,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzc4MjQwOQ==",
        "diff_hunk": "@@ -4,39 +4,50 @@\n     \"node\": \">=4\"\n   },\n   \"devDependencies\": {\n-    \"autoprefixer\": \"^7.1.2\",\n-    \"babel-core\": \"^6.4.0\",\n-    \"babel-preset-es2015\": \"^6.3.13\",\n+    <% if (includeBabel || includeSass) { %>\n+    \"gulp-plumber\": \"^1.0.1\",\n+    <% } %>\n+    <% if (includeBabel) { %>\n+    \"@babel/core\": \"^7.1.2\",",
        "path": "app/templates/_package.json",
        "position": 6,
        "original_position": 11,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "mm... let me recheck that ;-)",
        "created_at": "2018-10-24T13:15:53Z",
        "updated_at": "2018-10-24T13:32:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227782409",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227782409"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227782409"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        },
        "in_reply_to_id": 227661657
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227782671",
        "pull_request_review_id": 167900417,
        "id": 227782671,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzc4MjY3MQ==",
        "diff_hunk": "@@ -1,5 +1,5 @@\n {\n   \"presets\": [\n-    \"es2015\"\n+    \"@babel/env\"",
        "path": "app/templates/babelrc",
        "position": null,
        "original_position": 4,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Looks like `@babel/preset-env` is the right one",
        "created_at": "2018-10-24T13:16:32Z",
        "updated_at": "2018-10-24T13:32:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227782671",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227782671"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227782671"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        },
        "in_reply_to_id": 227664200
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227788506",
        "pull_request_review_id": 167907804,
        "id": 227788506,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzc4ODUwNg==",
        "diff_hunk": "@@ -4,39 +4,50 @@\n     \"node\": \">=4\"\n   },\n   \"devDependencies\": {\n-    \"autoprefixer\": \"^7.1.2\",\n-    \"babel-core\": \"^6.4.0\",\n-    \"babel-preset-es2015\": \"^6.3.13\",\n+    <% if (includeBabel || includeSass) { %>\n+    \"gulp-plumber\": \"^1.0.1\",\n+    <% } %>\n+    <% if (includeBabel) { %>\n+    \"@babel/core\": \"^7.1.2\",\n+    \"@babel/preset-env\": \"^7.1.0\",\n+    \"gulp-babel\": \"^8.0.0\",\n+    <% } %>\n+    <% if (includeSass) { %>\n+    \"gulp-filter\": \"^5.1.0\",\n+    \"gulp-sass\": \"^4.0.2\",\n+    <% } %>\n+    \"gulp-postcss\": \"^8.0.0\",\n+    \"autoprefixer\": \"^9.3.0\",\n     \"babel-register\": \"^6.5.2\",\n     \"browser-sync\": \"^2.2.1\",\n-    \"cssnano\": \"^3.10.0\",\n-    \"del\": \"^2.2.0\",\n-    \"gulp\": \"^3.9.0\",<% if (includeBabel) { %>\n-    \"gulp-babel\": \"^6.1.1\",<% } %>\n-    \"gulp-cache\": \"^0.4.2\",\n-    \"gulp-eslint\": \"^3.0.0\",<% if (includeSass) { %>\n-    \"gulp-filter\": \"^4.0.0\",<% } %>\n-    \"gulp-htmlmin\": \"^3.0.0\",\n+    \"cssnano\": \"^4.1.7\",\n+    \"del\": \"^3.0.0\",\n+    \"gulp\": \"^3.9.0\",\n+    \"gulp-cache\": \"^1.0.2\",\n+    \"gulp-eslint\": \"^5.0.0\",\n+    \"gulp-htmlmin\": \"^5.0.1\",\n     \"gulp-if\": \"^2.0.2\",\n-    \"gulp-imagemin\": \"^3.0.1\",\n-    \"gulp-load-plugins\": \"^1.2.4\",<% if (includeBabel || includeSass) { %>\n-    \"gulp-plumber\": \"^1.0.1\",\n-    \"gulp-postcss\": \"^7.0.0\",<% } if (includeSass) { %>\n-    \"gulp-sass\": \"^3.0.0\",<% } %>\n-    \"gulp-size\": \"^2.1.0\",\n+    \"gulp-imagemin\": \"^4.1.0\",\n+    \"gulp-load-plugins\": \"^1.2.4\",\n+    \"gulp-size\": \"^3.0.0\",\n     \"gulp-sourcemaps\": \"^2.2.0\",\n-    \"gulp-uglify\": \"^2.0.0\",\n+    \"gulp-uglify\": \"^3.0.1\",\n     \"gulp-useref\": \"^3.0.0\",\n     \"main-bower-files\": \"^2.5.0\",\n-    \"run-sequence\": \"^1.2.2\",\n+    \"mocha\": \"^5.2.0\",",
        "path": "app/templates/_package.json",
        "position": 57,
        "original_position": 53,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ok!",
        "created_at": "2018-10-24T13:30:49Z",
        "updated_at": "2018-10-24T13:32:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227788506",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227788506"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227788506"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        },
        "in_reply_to_id": 227663352
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227788693",
        "pull_request_review_id": 167908049,
        "id": 227788693,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzc4ODY5Mw==",
        "diff_hunk": "@@ -4,39 +4,50 @@\n     \"node\": \">=4\"\n   },\n   \"devDependencies\": {\n-    \"autoprefixer\": \"^7.1.2\",\n-    \"babel-core\": \"^6.4.0\",\n-    \"babel-preset-es2015\": \"^6.3.13\",\n+    <% if (includeBabel || includeSass) { %>\n+    \"gulp-plumber\": \"^1.0.1\",\n+    <% } %>\n+    <% if (includeBabel) { %>\n+    \"@babel/core\": \"^7.1.2\",",
        "path": "app/templates/_package.json",
        "position": 6,
        "original_position": 11,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It is working fine as expected... no empty lines or spaces... \ud83d\udcaf ",
        "created_at": "2018-10-24T13:31:20Z",
        "updated_at": "2018-10-24T13:32:37Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227788693",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227788693"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227788693"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        },
        "in_reply_to_id": 227661657
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227789464",
        "pull_request_review_id": 167909065,
        "id": 227789464,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzc4OTQ2NA==",
        "diff_hunk": "@@ -4,39 +4,50 @@\n     \"node\": \">=4\"\n   },\n   \"devDependencies\": {",
        "path": "app/templates/_package.json",
        "position": 3,
        "original_position": 3,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed in [9b80b73e064061e8afe5cebdc719d76a719936fa](https://github.com/yeoman/generator-webapp/pull/733/commits/9b80b73e064061e8afe5cebdc719d76a719936fa)",
        "created_at": "2018-10-24T13:33:15Z",
        "updated_at": "2018-10-24T13:33:15Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227789464",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227789464"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227789464"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        },
        "in_reply_to_id": 227660802
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227789626",
        "pull_request_review_id": 167909278,
        "id": 227789626,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzc4OTYyNg==",
        "diff_hunk": "@@ -1,5 +1,5 @@\n {\n   \"presets\": [\n-    \"es2015\"\n+    \"@babel/env\"",
        "path": "app/templates/babelrc",
        "position": null,
        "original_position": 4,
        "commit_id": "427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec",
        "original_commit_id": "bf503c1f3e75aceea1321287bc3ae7b6d1beadf8",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed in [427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec](https://github.com/yeoman/generator-webapp/pull/733/commits/427abcedb1a63cb38d7c8bd1b4c25dd0b296bfec)",
        "created_at": "2018-10-24T13:33:37Z",
        "updated_at": "2018-10-24T13:33:38Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227789626",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/227789626"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/733#discussion_r227789626"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/733"
            }
        },
        "in_reply_to_id": 227664200
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231602798",
        "pull_request_review_id": 172607720,
        "id": 231602798,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYwMjc5OA==",
        "diff_hunk": "@@ -30,23 +29,22 @@ If your favorite feature is missing and you really need Ruby Sass, you can alway\n \n ## Getting Started\n \n-- Install: `npm install --global yo gulp-cli bower generator-webapp`\n+- Install: `npm install --global yo gulp-cli generator-webapp`\n - Run `yo webapp` to scaffold your webapp\n-- Run `gulp serve` to preview and watch for changes\n-- Run `gulp serve --port=8080` to preview and watch for changes in port `8080`\n-- Run `bower install --save <package>` to install frontend dependencies\n-- Run `gulp serve:test` to run the tests in the browser\n-- Run `gulp serve:test --port=8085` to run the tests in the browser in port `8085`\n-- Run `gulp` to build your webapp for production\n-- Run `gulp serve:dist` to preview the production build\n-- Run `gulp serve:dist --port=5000` to preview the production build in port `5000`\n+- Run `npm run serve` or `npm start` to preview and watch for changes",
        "path": "README.md",
        "position": null,
        "original_position": 23,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it's confusing to have two scripts doing the same thing, I suggest having only `npm start` and deleting the `serve` script.",
        "created_at": "2018-11-07T17:28:20Z",
        "updated_at": "2018-11-29T15:14:57Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231602798",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231602798"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231602798"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231608149",
        "pull_request_review_id": 172607720,
        "id": 231608149,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYwODE0OQ==",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+{\n+  \"minify\": true,\n+  \"classPrefix\": \"modernizr-\",\n+  \"options\": [\n+    \"addTest\",\n+    \"atRule\",\n+    \"domPrefixes\",\n+    \"hasEvent\",\n+    \"html5shiv\",\n+    \"html5printshiv\",\n+    \"load\",\n+    \"mq\",\n+    \"prefixed\",\n+    \"prefixes\",\n+    \"prefixedCSS\",\n+    \"setClasses\",\n+    \"testAllProps\",\n+    \"testProp\",\n+    \"testStyles\"\n+  ],\n+  \"feature-detects\": [\n+    \"a/download\",\n+    \"ambientlight\",\n+    \"applicationcache\",\n+    \"audio\",\n+    \"audio/loop\",\n+    \"audio/preload\",\n+    \"audio/webaudio\",\n+    \"battery\",\n+    \"battery/lowbattery\",\n+    \"blob\",\n+    \"canvas\",\n+    \"canvas/blending\",\n+    \"canvas/todataurl\",\n+    \"canvas/winding\",\n+    \"canvastext\",\n+    \"contenteditable\",\n+    \"contextmenu\",\n+    \"cookies\",\n+    \"cors\",\n+    \"custom-elements\",\n+    \"crypto\",\n+    \"crypto/getrandomvalues\",\n+    \"css/all\",\n+    \"css/animations\",\n+    \"css/appearance\",\n+    \"css/backdropfilter\",\n+    \"css/backgroundblendmode\",\n+    \"css/backgroundcliptext\",\n+    \"css/backgroundposition-shorthand\",\n+    \"css/backgroundposition-xy\",\n+    \"css/backgroundrepeat\",\n+    \"css/backgroundsize\",\n+    \"css/backgroundsizecover\",\n+    \"css/borderimage\",\n+    \"css/borderradius\",\n+    \"css/boxshadow\",\n+    \"css/boxsizing\",\n+    \"css/calc\",\n+    \"css/checked\",\n+    \"css/chunit\",\n+    \"css/columns\",\n+    \"css/cssgrid\",\n+    \"css/cubicbezierrange\",\n+    \"css/displayrunin\",\n+    \"css/displaytable\",\n+    \"css/ellipsis\",\n+    \"css/escape\",\n+    \"css/exunit\",\n+    \"css/filters\",\n+    \"css/flexbox\",\n+    \"css/flexboxlegacy\",\n+    \"css/flexboxtweener\",\n+    \"css/flexwrap\",\n+    \"css/fontface\",\n+    \"css/generatedcontent\",\n+    \"css/gradients\",\n+    \"css/hairline\",\n+    \"css/hsla\",\n+    \"css/hyphens\",\n+    \"css/invalid\",\n+    \"css/lastchild\",\n+    \"css/mask\",\n+    \"css/mediaqueries\",\n+    \"css/multiplebgs\",\n+    \"css/nthchild\",\n+    \"css/objectfit\",\n+    \"css/opacity\",\n+    \"css/overflow-scrolling\",\n+    \"css/pointerevents\",\n+    \"css/positionsticky\",\n+    \"css/pseudoanimations\",\n+    \"css/pseudotransitions\",\n+    \"css/reflections\",\n+    \"css/regions\",\n+    \"css/remunit\",\n+    \"css/resize\",\n+    \"css/rgba\",\n+    \"css/scrollbars\",\n+    \"css/scrollsnappoints\",\n+    \"css/shapes\",\n+    \"css/siblinggeneral\",\n+    \"css/subpixelfont\",\n+    \"css/supports\",\n+    \"css/target\",\n+    \"css/textalignlast\",\n+    \"css/textshadow\",\n+    \"css/transforms\",\n+    \"css/transformslevel2\",\n+    \"css/transforms3d\",\n+    \"css/transformstylepreserve3d\",\n+    \"css/transitions\",\n+    \"css/userselect\",\n+    \"css/valid\",\n+    \"css/variablefonts\",\n+    \"css/vhunit\",\n+    \"css/vmaxunit\",\n+    \"css/vminunit\",\n+    \"css/vwunit\",\n+    \"css/will-change\",\n+    \"css/wrapflow\",\n+    \"custom-protocol-handler\",\n+    \"customevent\",\n+    \"dart\",\n+    \"dataview-api\",\n+    \"dom/classlist\",\n+    \"dom/createElement-attrs\",\n+    \"dom/dataset\",\n+    \"dom/documentfragment\",\n+    \"dom/hidden\",\n+    \"dom/microdata\",\n+    \"dom/mutationObserver\",\n+    \"dom/passiveeventlisteners\",\n+    \"elem/bdi\",\n+    \"elem/datalist\",\n+    \"elem/details\",\n+    \"elem/output\",\n+    \"elem/picture\",\n+    \"elem/progress-meter\",\n+    \"elem/ruby\",\n+    \"elem/template\",\n+    \"elem/time\",\n+    \"elem/track\",\n+    \"elem/unknown\",\n+    \"emoji\",\n+    \"es5/array\",\n+    \"es5/date\",\n+    \"es5/function\",\n+    \"es5/object\",\n+    \"es5/specification\",\n+    \"es5/strictmode\",\n+    \"es5/string\",\n+    \"es5/syntax\",\n+    \"es5/undefined\",\n+    \"es6/array\",\n+    \"es6/collections\",\n+    \"es6/contains\",\n+    \"es6/generators\",\n+    \"es6/math\",\n+    \"es6/number\",\n+    \"es6/object\",\n+    \"es6/promises\",\n+    \"es6/string\",\n+    \"event/deviceorientation-motion\",\n+    \"event/oninput\",\n+    \"eventlistener\",\n+    \"exif-orientation\",\n+    \"file/api\",\n+    \"file/filesystem\",\n+    \"flash\",\n+    \"forms/capture\",\n+    \"forms/fileinput\",\n+    \"forms/fileinputdirectory\",\n+    \"forms/formattribute\",\n+    \"forms/inputnumber-l10n\",\n+    \"forms/placeholder\",\n+    \"forms/requestautocomplete\",\n+    \"forms/validation\",\n+    \"fullscreen-api\",\n+    \"gamepad\",\n+    \"geolocation\",\n+    \"hashchange\",\n+    \"hiddenscroll\",\n+    \"history\",\n+    \"htmlimports\",\n+    \"ie8compat\",\n+    \"iframe/sandbox\",\n+    \"iframe/seamless\",\n+    \"iframe/srcdoc\",\n+    \"img/apng\",\n+    \"img/crossorigin\",\n+    \"img/jpeg2000\",\n+    \"img/jpegxr\",\n+    \"img/sizes\",\n+    \"img/srcset\",\n+    \"img/webp\",\n+    \"img/webp-alpha\",\n+    \"img/webp-animation\",\n+    \"img/webp-lossless\",\n+    \"indexeddb\",\n+    \"indexeddbblob\",\n+    \"input\",\n+    \"input/formaction\",\n+    \"input/formenctype\",\n+    \"input/formmethod\",\n+    \"input/formtarget\",\n+    \"inputsearchevent\",\n+    \"inputtypes\",\n+    \"intl\",\n+    \"json\",\n+    \"ligatures\",\n+    \"lists-reversed\",\n+    \"mathml\",\n+    \"mediaquery/hovermq\",\n+    \"mediaquery/pointermq\",\n+    \"messagechannel\",\n+    \"network/beacon\",\n+    \"network/connection\",\n+    \"network/eventsource\",\n+    \"network/fetch\",\n+    \"network/xhr-responsetype\",\n+    \"network/xhr-responsetype-arraybuffer\",\n+    \"network/xhr-responsetype-blob\",\n+    \"network/xhr-responsetype-document\",\n+    \"network/xhr-responsetype-json\",\n+    \"network/xhr-responsetype-text\",\n+    \"network/xhr2\",\n+    \"notification\",\n+    \"pagevisibility-api\",\n+    \"performance\",\n+    \"pointerevents\",\n+    \"pointerlock-api\",\n+    \"postmessage\",\n+    \"proximity\",\n+    \"queryselector\",\n+    \"quota-management-api\",\n+    \"requestanimationframe\",\n+    \"script/async\",\n+    \"script/defer\",\n+    \"serviceworker\",\n+    \"speech/speech-recognition\",\n+    \"speech/speech-synthesis\",\n+    \"storage/localstorage\",\n+    \"storage/sessionstorage\",\n+    \"storage/websqldatabase\",\n+    \"style/scoped\",\n+    \"svg\",\n+    \"svg/asimg\",\n+    \"svg/clippaths\",\n+    \"svg/filters\",\n+    \"svg/foreignobject\",\n+    \"svg/inline\",\n+    \"svg/smil\",\n+    \"templatestrings\",\n+    \"textarea/maxlength\",\n+    \"touchevents\",\n+    \"typed-arrays\",\n+    \"unicode\",\n+    \"unicode-range\",\n+    \"url/bloburls\",\n+    \"url/data-uri\",\n+    \"url/parser\",\n+    \"url/urlsearchparams\",\n+    \"userdata\",\n+    \"vibration\",\n+    \"video\",\n+    \"video/autoplay\",\n+    \"video/crossorigin\",\n+    \"video/loop\",\n+    \"video/preload\",\n+    \"vml\",\n+    \"web-intents\",\n+    \"webanimations\",\n+    \"webgl\",\n+    \"webgl/extensions\",\n+    \"webrtc/datachannel\",\n+    \"webrtc/getusermedia\",\n+    \"webrtc/peerconnection\",\n+    \"websockets\",\n+    \"websockets/binary\",\n+    \"window/framed\",\n+    \"workers/blobworkers\",\n+    \"workers/dataworkers\",\n+    \"workers/sharedworkers\",\n+    \"workers/transferables\",\n+    \"workers/webworkers\",\n+    \"xdomainrequest\"\n+  ]\n+}",
        "path": "app/templates/modernizr.json",
        "position": 27,
        "original_position": 289,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I suggest not adding all feature detects, instead just a few as an example, because people won't need most of them. I suggest leaving these, they are quite common:\r\n\r\n```\r\ncss/supports\r\nimg/sizes\r\nimg/srcset\r\nserviceworker\r\ntouchevents\r\n```\r\n\r\nI wonder if it's possible to add a comment inside this file linking to the entire list \ud83e\udd14 \r\n\r\nAlso, add newline at the end of the file.",
        "created_at": "2018-11-07T17:44:25Z",
        "updated_at": "2018-11-29T15:14:57Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231608149",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231608149"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231608149"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231801925",
        "pull_request_review_id": 172607720,
        "id": 231801925,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTgwMTkyNQ==",
        "diff_hunk": "@@ -57,7 +55,7 @@ If your favorite feature is missing and you really need Ruby Sass, you can alway\n - `--skip-install-message`\n   Skips the the message displayed after scaffolding has finished and before the dependencies are being installed.\n - `--skip-install`\n-  Skips the automatic execution of `bower` and `npm` after scaffolding has finished.\n+  Skips the automatic execution of `npm` after scaffolding has finished.",
        "path": "README.md",
        "position": null,
        "original_position": 46,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This would make it more clear and tool-independent:\r\n\r\n```suggestion\r\n  Doesn't automatically install dependencies after scaffolding has finished.\r\n```\r\n\r\nFor example, we also support Yarn, which isn't included here, and we shouldn't have to think about that when writing the docs.",
        "created_at": "2018-11-08T08:43:14Z",
        "updated_at": "2018-11-29T15:14:57Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231801925",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231801925"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231801925"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231802102",
        "pull_request_review_id": 172607720,
        "id": 231802102,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTgwMjEwMg==",
        "diff_hunk": "@@ -75,18 +72,18 @@ module.exports = class extends Generator {\n         name: 'Bootstrap 4',\n         value: false\n       }],\n-      when: answers => answers.features.indexOf('includeBootstrap') !== -1\n+      when: answers => answers.features.includes('includeBootstrap')",
        "path": "app/index.js",
        "position": null,
        "original_position": 16,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oooh, nice \u2728 ",
        "created_at": "2018-11-08T08:43:57Z",
        "updated_at": "2018-11-29T15:14:57Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231802102",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231802102"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231802102"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231802583",
        "pull_request_review_id": 172607720,
        "id": 231802583,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTgwMjU4Mw==",
        "diff_hunk": "@@ -377,42 +248,10 @@ module.exports = class extends Generator {\n     const hasYarn = commandExists('yarn');\n     this.installDependencies({\n       npm: !hasYarn,\n-      bower: true,\n       yarn: hasYarn,\n+      bower: false,\n       skipMessage: this.options['skip-install-message'],\n       skipInstall: this.options['skip-install']\n     });\n   }\n-\n-  end() {\n-    const bowerJson = this.fs.readJSON(this.destinationPath('bower.json'));\n-    const warning = chalk.yellow.bold;\n-    const howToInstall = `\n-After running ${warning('npm install & bower install')}, inject your\n-front end dependencies by running ${warning('gulp wiredep')}.`;\n-\n-    if (this.options['skip-install']) {\n-      this.log(howToInstall);\n-      return;\n-    }\n-\n-    // wire Bower packages to .html\n-    wiredep({\n-      bowerJson: bowerJson,\n-      directory: 'bower_components',\n-      exclude: ['bootstrap-sass', 'bootstrap.js'],\n-      ignorePath: /^(\\.\\.\\/)*\\.\\./,\n-      src: 'app/index.html'\n-    });\n-\n-    if (this.includeSass) {\n-      // wire Bower packages to .scss\n-      wiredep({\n-        bowerJson: bowerJson,\n-        directory: 'bower_components',\n-        ignorePath: /^(\\.\\.\\/)+/,\n-        src: 'app/styles/*.scss'\n-      });\n-    }\n-  }",
        "path": "app/index.js",
        "position": 321,
        "original_position": 275,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\ud83d\udd25\ud83d\udd25\ud83d\udd25 ",
        "created_at": "2018-11-08T08:45:50Z",
        "updated_at": "2018-11-29T15:14:57Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231802583",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231802583"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231802583"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231803359",
        "pull_request_review_id": 172607720,
        "id": 231803359,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTgwMzM1OQ==",
        "diff_hunk": "@@ -3,6 +3,22 @@\n   \"engines\": {\n     \"node\": \">=4\"\n   },\n+  \"dependencies\": {\n+    <% if (includeModernizr) { %>\n+    \"modernizr\": \"^3.6.0\",\n+    <% } %>\n+    <% if(includeJQuery && !includeBootstrap) { %>\n+    \"jquery\": \"^3.3.1\"\n+    <% } %>\n+    <% if (includeBootstrap && !legacyBootstrap) { %>\n+    \"bootstrap\": \"^4.1.3\",\n+    \"jquery\": \"^3.3.1\"\n+    <% } %>\n+    <% if(legacyBootstrap) { %>",
        "path": "app/templates/_package.json",
        "position": null,
        "original_position": 15,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Bootstrap v4 is now stable (it was in alpha when we added support from it), let's ditch support for v3. \ud83d\udd25 ",
        "created_at": "2018-11-08T08:48:30Z",
        "updated_at": "2018-11-29T15:14:57Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231803359",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231803359"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231803359"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231804576",
        "pull_request_review_id": 172607720,
        "id": 231804576,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTgwNDU3Ng==",
        "diff_hunk": "@@ -39,12 +55,27 @@\n     \"gulp-sourcemaps\": \"^2.2.0\",\n     \"gulp-uglify\": \"^3.0.1\",\n     \"gulp-useref\": \"^3.0.0\",\n-    \"main-bower-files\": \"^2.5.0\",\n     \"mocha\": \"^5.2.0\",\n     \"run-sequence\": \"^2.2.1\",\n-    \"wiredep\": \"^4.0.0\",\n     \"yargs\": \"12.0.2\"\n-  },\n+  }, \n+  \"scripts\": {\n+    <% if (includeModernizr) { %>\n+    \"build:modernizr\": \"./node_modules/modernizr/bin/modernizr -c modernizr.json -d app/scripts/modernizr.js\",",
        "path": "app/templates/_package.json",
        "position": null,
        "original_position": 36,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I suggest renaming this script to `modernizr` instead because it's not a variation of the `build` script, like `serve:dist` is a variation of `serve`. (I won't include this in the suggestion below because it has to be edited in multiple places.)\r\n\r\nAlso, within npm scripts you don't have to worry about targeting local executables, that behavior is built-in:\r\n\r\n```suggestion\r\n    \"build:modernizr\": \"modernizr -c modernizr.json -d app/scripts/modernizr.js\",\r\n```",
        "created_at": "2018-11-08T08:52:51Z",
        "updated_at": "2018-11-29T15:14:57Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231804576",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231804576"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231804576"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231807562",
        "pull_request_review_id": 172607720,
        "id": 231807562,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTgwNzU2Mg==",
        "diff_hunk": "@@ -179,31 +178,17 @@ gulp.task('serve:test', () => {\n   gulp.watch('test/spec/**/*.js', ['lint:test']);\n });\n \n-// inject bower components\n-gulp.task('wiredep', () => {<% if (includeSass) { %>\n-  gulp.src('app/styles/*.scss')\n-    .pipe($.filter(file => file.stat && file.stat.size))\n-    .pipe(wiredep({\n-      ignorePath: /^(\\.\\.\\/)+/\n-    }))\n-    .pipe(gulp.dest('app/styles'));\n-<% } %>\n-  gulp.src('app/*.html')\n-    .pipe(wiredep({<% if (includeBootstrap) { if (includeSass) { %>\n-      exclude: ['bootstrap<% if (legacyBootstrap) { %>-sass<% } %>'],<% } else { %>\n-      exclude: ['bootstrap.js'],<% }} %>\n-      ignorePath: /^(\\.\\.\\/)*\\.\\./\n-    }))\n-    .pipe(gulp.dest('app'));\n-});\n+gulp.task(\"build:size\", () => {\n+  return gulp.src('dist/**/*').pipe($.size({title: 'build', gzip: true}));\n+})\n \n gulp.task('build', ['lint', 'html', 'images', 'fonts', 'extras'], () => {\n-  return gulp.src('dist/**/*').pipe($.size({title: 'build', gzip: true}));\n+  return gulp.src('.tmp/**/*').pipe(gulp.dest('dist'));\n });\n \n gulp.task('default', () => {\n   return new Promise(resolve => {\n     dev = false;\n-    runSequence(['clean', 'wiredep'], 'build', resolve);\n+    runSequence('clean', 'build', 'build:size', resolve);\n   });\n-});\n+});",
        "path": "app/templates/gulpfile.js",
        "position": 99,
        "original_position": 100,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I suggest configuring your text editor to recognize `.editorconfig` files, that way you'll avoid diffs like this. We require newline at the end of each file.",
        "created_at": "2018-11-08T09:03:19Z",
        "updated_at": "2018-11-29T15:14:57Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231807562",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231807562"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231807562"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231808807",
        "pull_request_review_id": 172607720,
        "id": 231808807,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTgwODgwNw==",
        "diff_hunk": "@@ -179,31 +178,17 @@ gulp.task('serve:test', () => {\n   gulp.watch('test/spec/**/*.js', ['lint:test']);\n });\n \n-// inject bower components\n-gulp.task('wiredep', () => {<% if (includeSass) { %>\n-  gulp.src('app/styles/*.scss')\n-    .pipe($.filter(file => file.stat && file.stat.size))\n-    .pipe(wiredep({\n-      ignorePath: /^(\\.\\.\\/)+/\n-    }))\n-    .pipe(gulp.dest('app/styles'));\n-<% } %>\n-  gulp.src('app/*.html')\n-    .pipe(wiredep({<% if (includeBootstrap) { if (includeSass) { %>\n-      exclude: ['bootstrap<% if (legacyBootstrap) { %>-sass<% } %>'],<% } else { %>\n-      exclude: ['bootstrap.js'],<% }} %>\n-      ignorePath: /^(\\.\\.\\/)*\\.\\./\n-    }))\n-    .pipe(gulp.dest('app'));\n-});\n+gulp.task(\"build:size\", () => {",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 84,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If this task only measures the file size and doesn't do anything to the files, I suggest renaming it to `size` instead.",
        "created_at": "2018-11-08T09:07:38Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231808807",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231808807"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231808807"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231812198",
        "pull_request_review_id": 172607720,
        "id": 231812198,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTgxMjE5OA==",
        "diff_hunk": "@@ -9,18 +9,16 @@\n     <link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\">\n     <!-- Place favicon.ico in the root directory -->\n \n-    <!-- build:css styles/vendor.css -->\n-    <!-- bower:css -->\n-    <!-- endbower -->\n-    <!-- endbuild -->",
        "path": "app/templates/index.html",
        "position": 14,
        "original_position": 7,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Don't remove `build` comments, they're from gulp-useref, which concatenates and compresses JS and CSS. Or are you using another approach that I didn't notice?\r\n\r\nYou are correct to remove `bower` comments because they're from wiredep",
        "created_at": "2018-11-08T09:18:44Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231812198",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231812198"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231812198"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231812578",
        "pull_request_review_id": 172607720,
        "id": 231812578,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTgxMjU3OA==",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+{\n+  \"minify\": true,",
        "path": "app/templates/modernizr.json",
        "position": null,
        "original_position": 2,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perhaps minifying is not necessary because we'll do that with gulp-useref in the build step. Leaving it unminified may help when debugging.",
        "created_at": "2018-11-08T09:19:57Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231812578",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/231812578"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r231812578"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233904298",
        "pull_request_review_id": 175426127,
        "id": 233904298,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzkwNDI5OA==",
        "diff_hunk": "@@ -30,23 +29,22 @@ If your favorite feature is missing and you really need Ruby Sass, you can alway\n \n ## Getting Started\n \n-- Install: `npm install --global yo gulp-cli bower generator-webapp`\n+- Install: `npm install --global yo gulp-cli generator-webapp`\n - Run `yo webapp` to scaffold your webapp\n-- Run `gulp serve` to preview and watch for changes\n-- Run `gulp serve --port=8080` to preview and watch for changes in port `8080`\n-- Run `bower install --save <package>` to install frontend dependencies\n-- Run `gulp serve:test` to run the tests in the browser\n-- Run `gulp serve:test --port=8085` to run the tests in the browser in port `8085`\n-- Run `gulp` to build your webapp for production\n-- Run `gulp serve:dist` to preview the production build\n-- Run `gulp serve:dist --port=5000` to preview the production build in port `5000`\n+- Run `npm run serve` or `npm start` to preview and watch for changes",
        "path": "README.md",
        "position": null,
        "original_position": 23,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree!",
        "created_at": "2018-11-15T16:03:14Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233904298",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233904298"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233904298"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 231602798
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233905104",
        "pull_request_review_id": 175427152,
        "id": 233905104,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzkwNTEwNA==",
        "diff_hunk": "@@ -75,18 +72,18 @@ module.exports = class extends Generator {\n         name: 'Bootstrap 4',\n         value: false\n       }],\n-      when: answers => answers.features.indexOf('includeBootstrap') !== -1\n+      when: answers => answers.features.includes('includeBootstrap')",
        "path": "app/index.js",
        "position": null,
        "original_position": 16,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks!",
        "created_at": "2018-11-15T16:05:09Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233905104",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233905104"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233905104"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 231802102
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233905601",
        "pull_request_review_id": 175427880,
        "id": 233905601,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzkwNTYwMQ==",
        "diff_hunk": "@@ -377,42 +248,10 @@ module.exports = class extends Generator {\n     const hasYarn = commandExists('yarn');\n     this.installDependencies({\n       npm: !hasYarn,\n-      bower: true,\n       yarn: hasYarn,\n+      bower: false,\n       skipMessage: this.options['skip-install-message'],\n       skipInstall: this.options['skip-install']\n     });\n   }\n-\n-  end() {\n-    const bowerJson = this.fs.readJSON(this.destinationPath('bower.json'));\n-    const warning = chalk.yellow.bold;\n-    const howToInstall = `\n-After running ${warning('npm install & bower install')}, inject your\n-front end dependencies by running ${warning('gulp wiredep')}.`;\n-\n-    if (this.options['skip-install']) {\n-      this.log(howToInstall);\n-      return;\n-    }\n-\n-    // wire Bower packages to .html\n-    wiredep({\n-      bowerJson: bowerJson,\n-      directory: 'bower_components',\n-      exclude: ['bootstrap-sass', 'bootstrap.js'],\n-      ignorePath: /^(\\.\\.\\/)*\\.\\./,\n-      src: 'app/index.html'\n-    });\n-\n-    if (this.includeSass) {\n-      // wire Bower packages to .scss\n-      wiredep({\n-        bowerJson: bowerJson,\n-        directory: 'bower_components',\n-        ignorePath: /^(\\.\\.\\/)+/,\n-        src: 'app/styles/*.scss'\n-      });\n-    }\n-  }",
        "path": "app/index.js",
        "position": 321,
        "original_position": 275,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yeah! :metal::metal::metal:",
        "created_at": "2018-11-15T16:06:28Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233905601",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233905601"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233905601"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 231802583
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233906440",
        "pull_request_review_id": 175428947,
        "id": 233906440,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzkwNjQ0MA==",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+{\n+  \"minify\": true,",
        "path": "app/templates/modernizr.json",
        "position": null,
        "original_position": 2,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\ud83d\udc4c ",
        "created_at": "2018-11-15T16:08:21Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233906440",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233906440"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233906440"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 231812578
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233908231",
        "pull_request_review_id": 175431198,
        "id": 233908231,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzkwODIzMQ==",
        "diff_hunk": "@@ -9,18 +9,16 @@\n     <link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\">\n     <!-- Place favicon.ico in the root directory -->\n \n-    <!-- build:css styles/vendor.css -->\n-    <!-- bower:css -->\n-    <!-- endbower -->\n-    <!-- endbuild -->",
        "path": "app/templates/index.html",
        "position": 14,
        "original_position": 7,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "My mistake! I wasn't aware of this build way before, I will reinclude this lines and JS related too",
        "created_at": "2018-11-15T16:12:37Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233908231",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233908231"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233908231"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 231812198
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233909035",
        "pull_request_review_id": 175432209,
        "id": 233909035,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzkwOTAzNQ==",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+{\n+  \"minify\": true,\n+  \"classPrefix\": \"modernizr-\",\n+  \"options\": [\n+    \"addTest\",\n+    \"atRule\",\n+    \"domPrefixes\",\n+    \"hasEvent\",\n+    \"html5shiv\",\n+    \"html5printshiv\",\n+    \"load\",\n+    \"mq\",\n+    \"prefixed\",\n+    \"prefixes\",\n+    \"prefixedCSS\",\n+    \"setClasses\",\n+    \"testAllProps\",\n+    \"testProp\",\n+    \"testStyles\"\n+  ],\n+  \"feature-detects\": [\n+    \"a/download\",\n+    \"ambientlight\",\n+    \"applicationcache\",\n+    \"audio\",\n+    \"audio/loop\",\n+    \"audio/preload\",\n+    \"audio/webaudio\",\n+    \"battery\",\n+    \"battery/lowbattery\",\n+    \"blob\",\n+    \"canvas\",\n+    \"canvas/blending\",\n+    \"canvas/todataurl\",\n+    \"canvas/winding\",\n+    \"canvastext\",\n+    \"contenteditable\",\n+    \"contextmenu\",\n+    \"cookies\",\n+    \"cors\",\n+    \"custom-elements\",\n+    \"crypto\",\n+    \"crypto/getrandomvalues\",\n+    \"css/all\",\n+    \"css/animations\",\n+    \"css/appearance\",\n+    \"css/backdropfilter\",\n+    \"css/backgroundblendmode\",\n+    \"css/backgroundcliptext\",\n+    \"css/backgroundposition-shorthand\",\n+    \"css/backgroundposition-xy\",\n+    \"css/backgroundrepeat\",\n+    \"css/backgroundsize\",\n+    \"css/backgroundsizecover\",\n+    \"css/borderimage\",\n+    \"css/borderradius\",\n+    \"css/boxshadow\",\n+    \"css/boxsizing\",\n+    \"css/calc\",\n+    \"css/checked\",\n+    \"css/chunit\",\n+    \"css/columns\",\n+    \"css/cssgrid\",\n+    \"css/cubicbezierrange\",\n+    \"css/displayrunin\",\n+    \"css/displaytable\",\n+    \"css/ellipsis\",\n+    \"css/escape\",\n+    \"css/exunit\",\n+    \"css/filters\",\n+    \"css/flexbox\",\n+    \"css/flexboxlegacy\",\n+    \"css/flexboxtweener\",\n+    \"css/flexwrap\",\n+    \"css/fontface\",\n+    \"css/generatedcontent\",\n+    \"css/gradients\",\n+    \"css/hairline\",\n+    \"css/hsla\",\n+    \"css/hyphens\",\n+    \"css/invalid\",\n+    \"css/lastchild\",\n+    \"css/mask\",\n+    \"css/mediaqueries\",\n+    \"css/multiplebgs\",\n+    \"css/nthchild\",\n+    \"css/objectfit\",\n+    \"css/opacity\",\n+    \"css/overflow-scrolling\",\n+    \"css/pointerevents\",\n+    \"css/positionsticky\",\n+    \"css/pseudoanimations\",\n+    \"css/pseudotransitions\",\n+    \"css/reflections\",\n+    \"css/regions\",\n+    \"css/remunit\",\n+    \"css/resize\",\n+    \"css/rgba\",\n+    \"css/scrollbars\",\n+    \"css/scrollsnappoints\",\n+    \"css/shapes\",\n+    \"css/siblinggeneral\",\n+    \"css/subpixelfont\",\n+    \"css/supports\",\n+    \"css/target\",\n+    \"css/textalignlast\",\n+    \"css/textshadow\",\n+    \"css/transforms\",\n+    \"css/transformslevel2\",\n+    \"css/transforms3d\",\n+    \"css/transformstylepreserve3d\",\n+    \"css/transitions\",\n+    \"css/userselect\",\n+    \"css/valid\",\n+    \"css/variablefonts\",\n+    \"css/vhunit\",\n+    \"css/vmaxunit\",\n+    \"css/vminunit\",\n+    \"css/vwunit\",\n+    \"css/will-change\",\n+    \"css/wrapflow\",\n+    \"custom-protocol-handler\",\n+    \"customevent\",\n+    \"dart\",\n+    \"dataview-api\",\n+    \"dom/classlist\",\n+    \"dom/createElement-attrs\",\n+    \"dom/dataset\",\n+    \"dom/documentfragment\",\n+    \"dom/hidden\",\n+    \"dom/microdata\",\n+    \"dom/mutationObserver\",\n+    \"dom/passiveeventlisteners\",\n+    \"elem/bdi\",\n+    \"elem/datalist\",\n+    \"elem/details\",\n+    \"elem/output\",\n+    \"elem/picture\",\n+    \"elem/progress-meter\",\n+    \"elem/ruby\",\n+    \"elem/template\",\n+    \"elem/time\",\n+    \"elem/track\",\n+    \"elem/unknown\",\n+    \"emoji\",\n+    \"es5/array\",\n+    \"es5/date\",\n+    \"es5/function\",\n+    \"es5/object\",\n+    \"es5/specification\",\n+    \"es5/strictmode\",\n+    \"es5/string\",\n+    \"es5/syntax\",\n+    \"es5/undefined\",\n+    \"es6/array\",\n+    \"es6/collections\",\n+    \"es6/contains\",\n+    \"es6/generators\",\n+    \"es6/math\",\n+    \"es6/number\",\n+    \"es6/object\",\n+    \"es6/promises\",\n+    \"es6/string\",\n+    \"event/deviceorientation-motion\",\n+    \"event/oninput\",\n+    \"eventlistener\",\n+    \"exif-orientation\",\n+    \"file/api\",\n+    \"file/filesystem\",\n+    \"flash\",\n+    \"forms/capture\",\n+    \"forms/fileinput\",\n+    \"forms/fileinputdirectory\",\n+    \"forms/formattribute\",\n+    \"forms/inputnumber-l10n\",\n+    \"forms/placeholder\",\n+    \"forms/requestautocomplete\",\n+    \"forms/validation\",\n+    \"fullscreen-api\",\n+    \"gamepad\",\n+    \"geolocation\",\n+    \"hashchange\",\n+    \"hiddenscroll\",\n+    \"history\",\n+    \"htmlimports\",\n+    \"ie8compat\",\n+    \"iframe/sandbox\",\n+    \"iframe/seamless\",\n+    \"iframe/srcdoc\",\n+    \"img/apng\",\n+    \"img/crossorigin\",\n+    \"img/jpeg2000\",\n+    \"img/jpegxr\",\n+    \"img/sizes\",\n+    \"img/srcset\",\n+    \"img/webp\",\n+    \"img/webp-alpha\",\n+    \"img/webp-animation\",\n+    \"img/webp-lossless\",\n+    \"indexeddb\",\n+    \"indexeddbblob\",\n+    \"input\",\n+    \"input/formaction\",\n+    \"input/formenctype\",\n+    \"input/formmethod\",\n+    \"input/formtarget\",\n+    \"inputsearchevent\",\n+    \"inputtypes\",\n+    \"intl\",\n+    \"json\",\n+    \"ligatures\",\n+    \"lists-reversed\",\n+    \"mathml\",\n+    \"mediaquery/hovermq\",\n+    \"mediaquery/pointermq\",\n+    \"messagechannel\",\n+    \"network/beacon\",\n+    \"network/connection\",\n+    \"network/eventsource\",\n+    \"network/fetch\",\n+    \"network/xhr-responsetype\",\n+    \"network/xhr-responsetype-arraybuffer\",\n+    \"network/xhr-responsetype-blob\",\n+    \"network/xhr-responsetype-document\",\n+    \"network/xhr-responsetype-json\",\n+    \"network/xhr-responsetype-text\",\n+    \"network/xhr2\",\n+    \"notification\",\n+    \"pagevisibility-api\",\n+    \"performance\",\n+    \"pointerevents\",\n+    \"pointerlock-api\",\n+    \"postmessage\",\n+    \"proximity\",\n+    \"queryselector\",\n+    \"quota-management-api\",\n+    \"requestanimationframe\",\n+    \"script/async\",\n+    \"script/defer\",\n+    \"serviceworker\",\n+    \"speech/speech-recognition\",\n+    \"speech/speech-synthesis\",\n+    \"storage/localstorage\",\n+    \"storage/sessionstorage\",\n+    \"storage/websqldatabase\",\n+    \"style/scoped\",\n+    \"svg\",\n+    \"svg/asimg\",\n+    \"svg/clippaths\",\n+    \"svg/filters\",\n+    \"svg/foreignobject\",\n+    \"svg/inline\",\n+    \"svg/smil\",\n+    \"templatestrings\",\n+    \"textarea/maxlength\",\n+    \"touchevents\",\n+    \"typed-arrays\",\n+    \"unicode\",\n+    \"unicode-range\",\n+    \"url/bloburls\",\n+    \"url/data-uri\",\n+    \"url/parser\",\n+    \"url/urlsearchparams\",\n+    \"userdata\",\n+    \"vibration\",\n+    \"video\",\n+    \"video/autoplay\",\n+    \"video/crossorigin\",\n+    \"video/loop\",\n+    \"video/preload\",\n+    \"vml\",\n+    \"web-intents\",\n+    \"webanimations\",\n+    \"webgl\",\n+    \"webgl/extensions\",\n+    \"webrtc/datachannel\",\n+    \"webrtc/getusermedia\",\n+    \"webrtc/peerconnection\",\n+    \"websockets\",\n+    \"websockets/binary\",\n+    \"window/framed\",\n+    \"workers/blobworkers\",\n+    \"workers/dataworkers\",\n+    \"workers/sharedworkers\",\n+    \"workers/transferables\",\n+    \"workers/webworkers\",\n+    \"xdomainrequest\"\n+  ]\n+}",
        "path": "app/templates/modernizr.json",
        "position": 27,
        "original_position": 289,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "great! I will update the list asap!",
        "created_at": "2018-11-15T16:14:28Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233909035",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233909035"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233909035"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 231608149
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233909648",
        "pull_request_review_id": 175432994,
        "id": 233909648,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzkwOTY0OA==",
        "diff_hunk": "@@ -3,6 +3,22 @@\n   \"engines\": {\n     \"node\": \">=4\"\n   },\n+  \"dependencies\": {\n+    <% if (includeModernizr) { %>\n+    \"modernizr\": \"^3.6.0\",\n+    <% } %>\n+    <% if(includeJQuery && !includeBootstrap) { %>\n+    \"jquery\": \"^3.3.1\"\n+    <% } %>\n+    <% if (includeBootstrap && !legacyBootstrap) { %>\n+    \"bootstrap\": \"^4.1.3\",\n+    \"jquery\": \"^3.3.1\"\n+    <% } %>\n+    <% if(legacyBootstrap) { %>",
        "path": "app/templates/_package.json",
        "position": null,
        "original_position": 15,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\ud83e\udd18 yeah!! Let me implement this one in a separate commit, just to keep all more clear in the changelog ^^",
        "created_at": "2018-11-15T16:15:52Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233909648",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233909648"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233909648"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 231803359
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233910808",
        "pull_request_review_id": 175434499,
        "id": 233910808,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzkxMDgwOA==",
        "diff_hunk": "@@ -179,31 +178,17 @@ gulp.task('serve:test', () => {\n   gulp.watch('test/spec/**/*.js', ['lint:test']);\n });\n \n-// inject bower components\n-gulp.task('wiredep', () => {<% if (includeSass) { %>\n-  gulp.src('app/styles/*.scss')\n-    .pipe($.filter(file => file.stat && file.stat.size))\n-    .pipe(wiredep({\n-      ignorePath: /^(\\.\\.\\/)+/\n-    }))\n-    .pipe(gulp.dest('app/styles'));\n-<% } %>\n-  gulp.src('app/*.html')\n-    .pipe(wiredep({<% if (includeBootstrap) { if (includeSass) { %>\n-      exclude: ['bootstrap<% if (legacyBootstrap) { %>-sass<% } %>'],<% } else { %>\n-      exclude: ['bootstrap.js'],<% }} %>\n-      ignorePath: /^(\\.\\.\\/)*\\.\\./\n-    }))\n-    .pipe(gulp.dest('app'));\n-});\n+gulp.task(\"build:size\", () => {\n+  return gulp.src('dist/**/*').pipe($.size({title: 'build', gzip: true}));\n+})\n \n gulp.task('build', ['lint', 'html', 'images', 'fonts', 'extras'], () => {\n-  return gulp.src('dist/**/*').pipe($.size({title: 'build', gzip: true}));\n+  return gulp.src('.tmp/**/*').pipe(gulp.dest('dist'));\n });\n \n gulp.task('default', () => {\n   return new Promise(resolve => {\n     dev = false;\n-    runSequence(['clean', 'wiredep'], 'build', resolve);\n+    runSequence('clean', 'build', 'build:size', resolve);\n   });\n-});\n+});",
        "path": "app/templates/gulpfile.js",
        "position": 99,
        "original_position": 100,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh! let me see what can I do... right now I am using c9.io... and the support for `.editorconfig` has been [delayed](https://community.c9.io/t/support-editorconfig/5813) for a long time...",
        "created_at": "2018-11-15T16:18:40Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233910808",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233910808"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233910808"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 231807562
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233916963",
        "pull_request_review_id": 175442106,
        "id": 233916963,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzkxNjk2Mw==",
        "diff_hunk": "@@ -179,31 +178,17 @@ gulp.task('serve:test', () => {\n   gulp.watch('test/spec/**/*.js', ['lint:test']);\n });\n \n-// inject bower components\n-gulp.task('wiredep', () => {<% if (includeSass) { %>\n-  gulp.src('app/styles/*.scss')\n-    .pipe($.filter(file => file.stat && file.stat.size))\n-    .pipe(wiredep({\n-      ignorePath: /^(\\.\\.\\/)+/\n-    }))\n-    .pipe(gulp.dest('app/styles'));\n-<% } %>\n-  gulp.src('app/*.html')\n-    .pipe(wiredep({<% if (includeBootstrap) { if (includeSass) { %>\n-      exclude: ['bootstrap<% if (legacyBootstrap) { %>-sass<% } %>'],<% } else { %>\n-      exclude: ['bootstrap.js'],<% }} %>\n-      ignorePath: /^(\\.\\.\\/)*\\.\\./\n-    }))\n-    .pipe(gulp.dest('app'));\n-});\n+gulp.task(\"build:size\", () => {",
        "path": "app/templates/gulpfile.js",
        "position": null,
        "original_position": 84,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I fixed this one too ^^",
        "created_at": "2018-11-15T16:32:55Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233916963",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233916963"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233916963"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 231808807
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233932581",
        "pull_request_review_id": 175461969,
        "id": 233932581,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzkzMjU4MQ==",
        "diff_hunk": "@@ -3,6 +3,22 @@\n   \"engines\": {\n     \"node\": \">=4\"\n   },\n+  \"dependencies\": {\n+    <% if (includeModernizr) { %>\n+    \"modernizr\": \"^3.6.0\",\n+    <% } %>\n+    <% if(includeJQuery && !includeBootstrap) { %>\n+    \"jquery\": \"^3.3.1\"\n+    <% } %>\n+    <% if (includeBootstrap && !legacyBootstrap) { %>\n+    \"bootstrap\": \"^4.1.3\",\n+    \"jquery\": \"^3.3.1\"\n+    <% } %>\n+    <% if(legacyBootstrap) { %>",
        "path": "app/templates/_package.json",
        "position": null,
        "original_position": 15,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\ud83e\udd18Done! https://github.com/yeoman/generator-webapp/pull/737/commits/e912dacef54ea5347766ee02cd832d36e904ca5a",
        "created_at": "2018-11-15T17:12:47Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233932581",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/233932581"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r233932581"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 231803359
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235431982",
        "pull_request_review_id": 177295500,
        "id": 235431982,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTQzMTk4Mg==",
        "diff_hunk": "@@ -3,24 +3,23 @@\n   <head>\n     <meta charset=\"utf-8\">\n     <meta name=\"description\" content=\"\">\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1<% if (includeBootstrap && !legacyBootstrap) { %>, shrink-to-fit=no<% } %>\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1<% if (includeBootstrap) { %>, shrink-to-fit=no<% } %>\">\n     <title><%= appname %></title>\n \n     <link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\">\n     <!-- Place favicon.ico in the root directory -->\n \n-    <!-- build:css styles/vendor.css -->\n-    <!-- bower:css -->\n-    <!-- endbower -->\n-    <!-- endbuild -->\n-\n     <!-- build:css styles/main.css -->\n     <link rel=\"stylesheet\" href=\"styles/main.css\">\n     <!-- endbuild -->\n     <% if (includeModernizr) { %>\n-    <!-- build:js scripts/vendor/modernizr.js -->\n-    <script src=\"/bower_components/modernizr/modernizr.js\"></script>\n-    <!-- endbuild --><% } %>\n+    <script src=\"scripts/modernizr.js\"></script>",
        "path": "app/templates/index.html",
        "position": 23,
        "original_position": 23,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "6ad07404f840c9dc8c2b51d7c584b061b01e4cbb",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this going to be uglified in production? If not, I think we should keep the `build:js` comments.",
        "created_at": "2018-11-21T15:27:53Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235431982",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235431982"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235431982"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235433140",
        "pull_request_review_id": 177295500,
        "id": 235433140,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTQzMzE0MA==",
        "diff_hunk": "@@ -90,17 +89,13 @@ <h1>'Allo, 'Allo!</h1>\n       r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n       ga('create','UA-XXXXX-X');ga('send','pageview');\n     </script>\n-\n-    <!-- build:js scripts/vendor.js -->\n-    <!-- bower:js -->\n-    <!-- endbower -->\n-    <!-- endbuild -->\n+    <!-- build:js scripts/vendor.js -->\t\n+    <!-- endbuild -->\t\n+    <% if (includeJQuery || includeBootstrap) { %>\n+      <script type=\"text/javascript\" src=\"/node_modules/jquery/dist/jquery.min.js\"></script>",
        "path": "app/templates/index.html",
        "position": 72,
        "original_position": 74,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "6ad07404f840c9dc8c2b51d7c584b061b01e4cbb",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think jQuery should be within `build.js` comments. Even though this one is already compressed, useref _concatenates_ all vendor scripts into one `vendor.js` file, resulting in a single HTTP request, which is what we're aiming for.",
        "created_at": "2018-11-21T15:30:44Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235433140",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235433140"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235433140"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235433855",
        "pull_request_review_id": 177295500,
        "id": 235433855,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTQzMzg1NQ==",
        "diff_hunk": "@@ -90,17 +89,13 @@ <h1>'Allo, 'Allo!</h1>\n       r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n       ga('create','UA-XXXXX-X');ga('send','pageview');\n     </script>\n-\n-    <!-- build:js scripts/vendor.js -->\n-    <!-- bower:js -->\n-    <!-- endbower -->\n-    <!-- endbuild -->\n+    <!-- build:js scripts/vendor.js -->\t\n+    <!-- endbuild -->\t\n+    <% if (includeJQuery || includeBootstrap) { %>\n+      <script type=\"text/javascript\" src=\"/node_modules/jquery/dist/jquery.min.js\"></script>\n+    <% } %>\n     <% if (includeBootstrap) { %>\n-    <!-- build:js scripts/plugins.js -->\n-<% bsPlugins.forEach(function (plugin) { -%>\n-    <script src=\"<%= bsPath + plugin %>.js\"></script>\n-<% }) -%>\n-    <!-- endbuild -->\n+      <script type=\"text/javascript\" src=\"/node_modules/bootstrap/dist/js/bootstrap.min.js\"></script>",
        "path": "app/templates/index.html",
        "position": 80,
        "original_position": 82,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "6ad07404f840c9dc8c2b51d7c584b061b01e4cbb",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it's best to place both jQuery and Bootstrap under the `vendor.js` build comment.",
        "created_at": "2018-11-21T15:32:32Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235433855",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235433855"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235433855"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235485261",
        "pull_request_review_id": 177362972,
        "id": 235485261,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTQ4NTI2MQ==",
        "diff_hunk": "@@ -90,17 +89,13 @@ <h1>'Allo, 'Allo!</h1>\n       r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n       ga('create','UA-XXXXX-X');ga('send','pageview');\n     </script>\n-\n-    <!-- build:js scripts/vendor.js -->\n-    <!-- bower:js -->\n-    <!-- endbower -->\n-    <!-- endbuild -->\n+    <!-- build:js scripts/vendor.js -->\t\n+    <!-- endbuild -->\t\n+    <% if (includeJQuery || includeBootstrap) { %>\n+      <script type=\"text/javascript\" src=\"/node_modules/jquery/dist/jquery.min.js\"></script>\n+    <% } %>\n     <% if (includeBootstrap) { %>\n-    <!-- build:js scripts/plugins.js -->\n-<% bsPlugins.forEach(function (plugin) { -%>\n-    <script src=\"<%= bsPath + plugin %>.js\"></script>\n-<% }) -%>\n-    <!-- endbuild -->\n+      <script type=\"text/javascript\" src=\"/node_modules/bootstrap/dist/js/bootstrap.min.js\"></script>",
        "path": "app/templates/index.html",
        "position": 80,
        "original_position": 82,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "6ad07404f840c9dc8c2b51d7c584b061b01e4cbb",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree! :-)",
        "created_at": "2018-11-21T17:48:01Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235485261",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235485261"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235485261"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 235433855
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235485320",
        "pull_request_review_id": 177363052,
        "id": 235485320,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTQ4NTMyMA==",
        "diff_hunk": "@@ -90,17 +89,13 @@ <h1>'Allo, 'Allo!</h1>\n       r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n       ga('create','UA-XXXXX-X');ga('send','pageview');\n     </script>\n-\n-    <!-- build:js scripts/vendor.js -->\n-    <!-- bower:js -->\n-    <!-- endbower -->\n-    <!-- endbuild -->\n+    <!-- build:js scripts/vendor.js -->\t\n+    <!-- endbuild -->\t\n+    <% if (includeJQuery || includeBootstrap) { %>\n+      <script type=\"text/javascript\" src=\"/node_modules/jquery/dist/jquery.min.js\"></script>",
        "path": "app/templates/index.html",
        "position": 72,
        "original_position": 74,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "6ad07404f840c9dc8c2b51d7c584b061b01e4cbb",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes! Sounds fine to me",
        "created_at": "2018-11-21T17:48:13Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235485320",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235485320"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235485320"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 235433140
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235485507",
        "pull_request_review_id": 177363153,
        "id": 235485507,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTQ4NTUwNw==",
        "diff_hunk": "@@ -3,24 +3,23 @@\n   <head>\n     <meta charset=\"utf-8\">\n     <meta name=\"description\" content=\"\">\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1<% if (includeBootstrap && !legacyBootstrap) { %>, shrink-to-fit=no<% } %>\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1<% if (includeBootstrap) { %>, shrink-to-fit=no<% } %>\">\n     <title><%= appname %></title>\n \n     <link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\">\n     <!-- Place favicon.ico in the root directory -->\n \n-    <!-- build:css styles/vendor.css -->\n-    <!-- bower:css -->\n-    <!-- endbower -->\n-    <!-- endbuild -->\n-\n     <!-- build:css styles/main.css -->\n     <link rel=\"stylesheet\" href=\"styles/main.css\">\n     <!-- endbuild -->\n     <% if (includeModernizr) { %>\n-    <!-- build:js scripts/vendor/modernizr.js -->\n-    <script src=\"/bower_components/modernizr/modernizr.js\"></script>\n-    <!-- endbuild --><% } %>\n+    <script src=\"scripts/modernizr.js\"></script>",
        "path": "app/templates/index.html",
        "position": 23,
        "original_position": 23,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "6ad07404f840c9dc8c2b51d7c584b061b01e4cbb",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "God idea! Let me change that now ^^",
        "created_at": "2018-11-21T17:48:28Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235485507",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235485507"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235485507"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 235431982
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235510636",
        "pull_request_review_id": 177394206,
        "id": 235510636,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTUxMDYzNg==",
        "diff_hunk": "@@ -90,18 +86,17 @@ <h1>'Allo, 'Allo!</h1>\n       r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n       ga('create','UA-XXXXX-X');ga('send','pageview');\n     </script>\n-\n-    <!-- build:js scripts/vendor.js -->\n-    <!-- bower:js -->\n-    <!-- endbower -->\n-    <!-- endbuild -->\n+    <!-- build:js scripts/vendor.js -->\t\n+    <% if (includeModernizr) { %>\n+    <script src=\"scripts/modernizr.js\"></script>",
        "path": "app/templates/index.html",
        "position": null,
        "original_position": 71,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "7004e839730a1291c6bf8a62a9b98cfd22f105d9",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please keep Modernizr in `<head>`, otherwise there might be a flash of outdated content, because Modernizr can affect CSS too, which means that the page will first load the styles **before** Modernizr was loaded.\r\n\r\nYou can surround it in build comments with the name `scripts/vendor/modernizr.js` like it was before.",
        "created_at": "2018-11-21T19:14:08Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235510636",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235510636"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235510636"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235537118",
        "pull_request_review_id": 177427300,
        "id": 235537118,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTUzNzExOA==",
        "diff_hunk": "@@ -90,18 +86,17 @@ <h1>'Allo, 'Allo!</h1>\n       r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n       ga('create','UA-XXXXX-X');ga('send','pageview');\n     </script>\n-\n-    <!-- build:js scripts/vendor.js -->\n-    <!-- bower:js -->\n-    <!-- endbower -->\n-    <!-- endbuild -->\n+    <!-- build:js scripts/vendor.js -->\t\n+    <% if (includeModernizr) { %>\n+    <script src=\"scripts/modernizr.js\"></script>",
        "path": "app/templates/index.html",
        "position": null,
        "original_position": 71,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "7004e839730a1291c6bf8a62a9b98cfd22f105d9",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I restored it \ud83d\udc4d ",
        "created_at": "2018-11-21T20:59:48Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235537118",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235537118"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235537118"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 235510636
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235582472",
        "pull_request_review_id": 177481292,
        "id": 235582472,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTU4MjQ3Mg==",
        "diff_hunk": "@@ -3,6 +3,22 @@\n   \"engines\": {\n     \"node\": \">=4\"\n   },\n+  \"dependencies\": {\n+    <% if (includeModernizr) { %>\n+    \"modernizr\": \"^3.6.0\",",
        "path": "app/templates/_package.json",
        "position": 9,
        "original_position": 6,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "JelmarBosscher",
            "id": 1714717,
            "node_id": "MDQ6VXNlcjE3MTQ3MTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1714717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JelmarBosscher",
            "html_url": "https://github.com/JelmarBosscher",
            "followers_url": "https://api.github.com/users/JelmarBosscher/followers",
            "following_url": "https://api.github.com/users/JelmarBosscher/following{/other_user}",
            "gists_url": "https://api.github.com/users/JelmarBosscher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JelmarBosscher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JelmarBosscher/subscriptions",
            "organizations_url": "https://api.github.com/users/JelmarBosscher/orgs",
            "repos_url": "https://api.github.com/users/JelmarBosscher/repos",
            "events_url": "https://api.github.com/users/JelmarBosscher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JelmarBosscher/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This line will still have a comma `,` when I scaffold without jQuery and bootstrap. \r\nWill throw `npm ERR! JSON.parse Failed to parse json`.",
        "created_at": "2018-11-22T01:51:43Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235582472",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235582472"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235582472"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235612720",
        "pull_request_review_id": 177517053,
        "id": 235612720,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTYxMjcyMA==",
        "diff_hunk": "@@ -3,6 +3,22 @@\n   \"engines\": {\n     \"node\": \">=4\"\n   },\n+  \"dependencies\": {\n+    <% if (includeModernizr) { %>\n+    \"modernizr\": \"^3.6.0\",",
        "path": "app/templates/_package.json",
        "position": 9,
        "original_position": 6,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh wow, good catch!",
        "created_at": "2018-11-22T06:26:00Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235612720",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235612720"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235612720"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 235582472
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235703465",
        "pull_request_review_id": 177628883,
        "id": 235703465,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTcwMzQ2NQ==",
        "diff_hunk": "@@ -3,6 +3,22 @@\n   \"engines\": {\n     \"node\": \">=4\"\n   },\n+  \"dependencies\": {\n+    <% if (includeModernizr) { %>\n+    \"modernizr\": \"^3.6.0\",",
        "path": "app/templates/_package.json",
        "position": 9,
        "original_position": 6,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "8970ce3650aae5e9a6bfa2985ed0bf82c7a365d3",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let me fix that! \ud83d\udc4d ",
        "created_at": "2018-11-22T12:10:46Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235703465",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235703465"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235703465"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 235582472
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235718230",
        "pull_request_review_id": 177647847,
        "id": 235718230,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTcxODIzMA==",
        "diff_hunk": "@@ -3,24 +3,23 @@\n   <head>\n     <meta charset=\"utf-8\">\n     <meta name=\"description\" content=\"\">\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1<% if (includeBootstrap && !legacyBootstrap) { %>, shrink-to-fit=no<% } %>\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1<% if (includeBootstrap) { %>, shrink-to-fit=no<% } %>\">\n     <title><%= appname %></title>\n \n     <link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\">\n     <!-- Place favicon.ico in the root directory -->\n \n-    <!-- build:css styles/vendor.css -->\n-    <!-- bower:css -->\n-    <!-- endbower -->\n-    <!-- endbuild -->\n-\n     <!-- build:css styles/main.css -->\n     <link rel=\"stylesheet\" href=\"styles/main.css\">\n     <!-- endbuild -->\n     <% if (includeModernizr) { %>\n-    <!-- build:js scripts/vendor/modernizr.js -->\n-    <script src=\"/bower_components/modernizr/modernizr.js\"></script>\n-    <!-- endbuild --><% } %>\n+    <script src=\"scripts/modernizr.js\"></script>",
        "path": "app/templates/index.html",
        "position": 23,
        "original_position": 23,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "6ad07404f840c9dc8c2b51d7c584b061b01e4cbb",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is what I meant:\r\n\r\n```html\r\n<!-- build:js scripts/vendor/modernizr.js -->\r\n<script src=\"scripts/modernizr.js\"></script>\r\n<!-- endbuild -->\r\n```\r\n\r\nThis way it will be compressed in production.",
        "created_at": "2018-11-22T13:04:33Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235718230",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235718230"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235718230"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 235431982
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235733461",
        "pull_request_review_id": 177666605,
        "id": 235733461,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTczMzQ2MQ==",
        "diff_hunk": "@@ -3,24 +3,23 @@\n   <head>\n     <meta charset=\"utf-8\">\n     <meta name=\"description\" content=\"\">\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1<% if (includeBootstrap && !legacyBootstrap) { %>, shrink-to-fit=no<% } %>\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1<% if (includeBootstrap) { %>, shrink-to-fit=no<% } %>\">\n     <title><%= appname %></title>\n \n     <link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\">\n     <!-- Place favicon.ico in the root directory -->\n \n-    <!-- build:css styles/vendor.css -->\n-    <!-- bower:css -->\n-    <!-- endbower -->\n-    <!-- endbuild -->\n-\n     <!-- build:css styles/main.css -->\n     <link rel=\"stylesheet\" href=\"styles/main.css\">\n     <!-- endbuild -->\n     <% if (includeModernizr) { %>\n-    <!-- build:js scripts/vendor/modernizr.js -->\n-    <script src=\"/bower_components/modernizr/modernizr.js\"></script>\n-    <!-- endbuild --><% } %>\n+    <script src=\"scripts/modernizr.js\"></script>",
        "path": "app/templates/index.html",
        "position": 23,
        "original_position": 23,
        "commit_id": "4a8fa0a4af18ac727c47ff8e2d70337ffd620ac1",
        "original_commit_id": "6ad07404f840c9dc8c2b51d7c584b061b01e4cbb",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Now should be fine here https://github.com/yeoman/generator-webapp/pull/737/commits/f9ccfa817a58e43497423f16d1acb7eab2e4e013",
        "created_at": "2018-11-22T13:53:42Z",
        "updated_at": "2018-11-29T15:14:58Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235733461",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/235733461"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/737#discussion_r235733461"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/737"
            }
        },
        "in_reply_to_id": 235431982
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239661952",
        "pull_request_review_id": 182508472,
        "id": 239661952,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTY2MTk1Mg==",
        "diff_hunk": "@@ -84,146 +42,39 @@ module.exports = class extends Generator {\n   }\n \n   writing() {\n-    this._writingModernizr();\n-    this._writingGulpfile();\n-    this._writingPackageJSON();\n-    this._writingBabel();\n-    this._writingGit();\n-    this._writingEditorConfig();\n-    this._writingH5bp();\n-    this._writingStyles();\n-    this._writingScripts();\n-    this._writingHtml();\n-    this._writingMisc();\n-  }\n-\n-  _writingModernizr() {\n-    if(this.includeModernizr) {\n-      this.fs.copy(\n-        this.templatePath('modernizr.json'),\n-        this.destinationPath('modernizr.json')\n-      );\n-    }\n-  }\n-  _writingGulpfile() {\n-    this.fs.copyTpl(\n-      this.templatePath('gulpfile.js'),\n-      this.destinationPath('gulpfile.js'),\n-      {\n-        date: (new Date).toISOString().split('T')[0],\n-        name: this.pkg.name,\n-        version: this.pkg.version,\n-        includeSass: this.includeSass,\n-        includeBootstrap: this.includeBootstrap,\n-        includeBabel: this.options['babel'],\n-        testFramework: this.options['test-framework']\n-      }\n-    );\n-  }\n-\n-  _writingPackageJSON() {\n-    this.fs.copyTpl(\n-      this.templatePath('_package.json'),\n-      this.destinationPath('package.json'),\n-      {\n-        includeSass: this.includeSass,\n-        includeBabel: this.options['babel'],\n-        includeJQuery: this.includeJQuery,\n-        includeBootstrap: this.includeBootstrap,\n-        includeModernizr: this.includeModernizr\n-      }\n-    );\n-  }\n-\n-  _writingBabel() {\n-    this.fs.copy(\n-      this.templatePath('babelrc'),\n-      this.destinationPath('.babelrc')\n-    );\n-  }\n-\n-  _writingGit() {\n-    this.fs.copy(\n-      this.templatePath('gitignore'),\n-      this.destinationPath('.gitignore'));\n-\n-    this.fs.copy(\n-      this.templatePath('gitattributes'),\n-      this.destinationPath('.gitattributes'));\n-  }\n-\n-  _writingEditorConfig() {\n-    this.fs.copy(\n-      this.templatePath('editorconfig'),\n-      this.destinationPath('.editorconfig')\n-    );\n-  }\n-\n-  _writingH5bp() {\n-    this.fs.copy(\n-      this.templatePath('favicon.ico'),\n-      this.destinationPath('app/favicon.ico')\n-    );\n-\n-    this.fs.copy(\n-      this.templatePath('apple-touch-icon.png'),\n-      this.destinationPath('app/apple-touch-icon.png')\n-    );\n+    const _self = this;",
        "path": "app/index.js",
        "position": null,
        "original_position": 172,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Setting `_self = this` should not be needed, this is the main purpose of arrow functions: you should be able to use `this`, it is inherited from the parent scope.\r\n\r\n```js\r\nconst _self = this\r\nconst fn = () => {\r\n  console.log(this === self) // true\r\n}\r\n```",
        "created_at": "2018-12-07T00:21:28Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239661952",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239661952"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239661952"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239662301",
        "pull_request_review_id": 182508472,
        "id": 239662301,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTY2MjMwMQ==",
        "diff_hunk": "@@ -84,146 +42,39 @@ module.exports = class extends Generator {\n   }\n \n   writing() {\n-    this._writingModernizr();\n-    this._writingGulpfile();\n-    this._writingPackageJSON();\n-    this._writingBabel();\n-    this._writingGit();\n-    this._writingEditorConfig();\n-    this._writingH5bp();\n-    this._writingStyles();\n-    this._writingScripts();\n-    this._writingHtml();\n-    this._writingMisc();\n-  }\n-\n-  _writingModernizr() {\n-    if(this.includeModernizr) {\n-      this.fs.copy(\n-        this.templatePath('modernizr.json'),\n-        this.destinationPath('modernizr.json')\n-      );\n-    }\n-  }\n-  _writingGulpfile() {\n-    this.fs.copyTpl(\n-      this.templatePath('gulpfile.js'),\n-      this.destinationPath('gulpfile.js'),\n-      {\n-        date: (new Date).toISOString().split('T')[0],\n-        name: this.pkg.name,\n-        version: this.pkg.version,\n-        includeSass: this.includeSass,\n-        includeBootstrap: this.includeBootstrap,\n-        includeBabel: this.options['babel'],\n-        testFramework: this.options['test-framework']\n-      }\n-    );\n-  }\n-\n-  _writingPackageJSON() {\n-    this.fs.copyTpl(\n-      this.templatePath('_package.json'),\n-      this.destinationPath('package.json'),\n-      {\n-        includeSass: this.includeSass,\n-        includeBabel: this.options['babel'],\n-        includeJQuery: this.includeJQuery,\n-        includeBootstrap: this.includeBootstrap,\n-        includeModernizr: this.includeModernizr\n-      }\n-    );\n-  }\n-\n-  _writingBabel() {\n-    this.fs.copy(\n-      this.templatePath('babelrc'),\n-      this.destinationPath('.babelrc')\n-    );\n-  }\n-\n-  _writingGit() {\n-    this.fs.copy(\n-      this.templatePath('gitignore'),\n-      this.destinationPath('.gitignore'));\n-\n-    this.fs.copy(\n-      this.templatePath('gitattributes'),\n-      this.destinationPath('.gitattributes'));\n-  }\n-\n-  _writingEditorConfig() {\n-    this.fs.copy(\n-      this.templatePath('editorconfig'),\n-      this.destinationPath('.editorconfig')\n-    );\n-  }\n-\n-  _writingH5bp() {\n-    this.fs.copy(\n-      this.templatePath('favicon.ico'),\n-      this.destinationPath('app/favicon.ico')\n-    );\n-\n-    this.fs.copy(\n-      this.templatePath('apple-touch-icon.png'),\n-      this.destinationPath('app/apple-touch-icon.png')\n-    );\n+    const _self = this;\n+    const data = {",
        "path": "app/index.js",
        "position": null,
        "original_position": 173,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "A more meaningful variable name, for example:\r\n```suggestion\r\n    const templateData = {\r\n```",
        "created_at": "2018-12-07T00:23:41Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239662301",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239662301"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239662301"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239662555",
        "pull_request_review_id": 182508472,
        "id": 239662555,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTY2MjU1NQ==",
        "diff_hunk": "@@ -0,0 +1,93 @@\n+module.exports = {\n+  options: {\n+    'skip-welcome-message': {\n+      desc: 'Skips the welcome message',\n+      type: Boolean\n+    },\n+    'skip-install-message': {\n+      desc: 'Skips the message after the installation of dependencies',\n+      type: Boolean\n+    },\n+    'test-framework': {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    },\n+    'babel': {\n+      desc: 'Use Babel',\n+      type: Boolean,\n+      defaults: true\n+    }\n+  },\n+  prompts: [{\n+    type: 'checkbox',\n+    name: 'features',\n+    message: 'Which additional features would you like to include?',\n+    choices: [{\n+      name: 'Sass',\n+      value: 'includeSass',\n+      checked: true\n+    }, {\n+      name: 'Bootstrap',\n+      value: 'includeBootstrap',\n+      checked: true\n+    }, {\n+      name: 'Modernizr',\n+      value: 'includeModernizr',\n+      checked: true\n+    }]\n+  }, {\n+    type: 'confirm',\n+    name: 'includeJQuery',\n+    message: 'Would you like to include jQuery?',\n+    default: true,\n+    when: answers => !answers.features.includes('includeBootstrap')\n+  }],\n+  dirToCreate: ['app/images', 'app/fonts'],",
        "path": "app/lib/config.js",
        "position": null,
        "original_position": 46,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\n  dirsToCreate: ['app/images', 'app/fonts'],\r\n```",
        "created_at": "2018-12-07T00:25:23Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239662555",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239662555"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239662555"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239663734",
        "pull_request_review_id": 182508472,
        "id": 239663734,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTY2MzczNA==",
        "diff_hunk": "@@ -84,146 +42,39 @@ module.exports = class extends Generator {\n   }\n \n   writing() {\n-    this._writingModernizr();\n-    this._writingGulpfile();\n-    this._writingPackageJSON();\n-    this._writingBabel();\n-    this._writingGit();\n-    this._writingEditorConfig();\n-    this._writingH5bp();\n-    this._writingStyles();\n-    this._writingScripts();\n-    this._writingHtml();\n-    this._writingMisc();\n-  }\n-\n-  _writingModernizr() {\n-    if(this.includeModernizr) {\n-      this.fs.copy(\n-        this.templatePath('modernizr.json'),\n-        this.destinationPath('modernizr.json')\n-      );\n-    }\n-  }\n-  _writingGulpfile() {\n-    this.fs.copyTpl(\n-      this.templatePath('gulpfile.js'),\n-      this.destinationPath('gulpfile.js'),\n-      {\n-        date: (new Date).toISOString().split('T')[0],\n-        name: this.pkg.name,\n-        version: this.pkg.version,\n-        includeSass: this.includeSass,\n-        includeBootstrap: this.includeBootstrap,\n-        includeBabel: this.options['babel'],\n-        testFramework: this.options['test-framework']\n-      }\n-    );\n-  }\n-\n-  _writingPackageJSON() {\n-    this.fs.copyTpl(\n-      this.templatePath('_package.json'),\n-      this.destinationPath('package.json'),\n-      {\n-        includeSass: this.includeSass,\n-        includeBabel: this.options['babel'],\n-        includeJQuery: this.includeJQuery,\n-        includeBootstrap: this.includeBootstrap,\n-        includeModernizr: this.includeModernizr\n-      }\n-    );\n-  }\n-\n-  _writingBabel() {\n-    this.fs.copy(\n-      this.templatePath('babelrc'),\n-      this.destinationPath('.babelrc')\n-    );\n-  }\n-\n-  _writingGit() {\n-    this.fs.copy(\n-      this.templatePath('gitignore'),\n-      this.destinationPath('.gitignore'));\n-\n-    this.fs.copy(\n-      this.templatePath('gitattributes'),\n-      this.destinationPath('.gitattributes'));\n-  }\n-\n-  _writingEditorConfig() {\n-    this.fs.copy(\n-      this.templatePath('editorconfig'),\n-      this.destinationPath('.editorconfig')\n-    );\n-  }\n-\n-  _writingH5bp() {\n-    this.fs.copy(\n-      this.templatePath('favicon.ico'),\n-      this.destinationPath('app/favicon.ico')\n-    );\n-\n-    this.fs.copy(\n-      this.templatePath('apple-touch-icon.png'),\n-      this.destinationPath('app/apple-touch-icon.png')\n-    );\n+    const _self = this;\n+    const data = {\n+      appname: this.appname,\n+      date: (new Date).toISOString().split('T')[0],\n+      name: this.pkg.name,\n+      version: this.pkg.version,\n+      includeSass: this.includeSass,\n+      includeBootstrap: this.includeBootstrap,\n+      includeBabel: this.options.babel,\n+      testFramework: this.options['test-framework'],\n+      includeJQuery: this.includeJQuery,\n+      includeModernizr: this.includeModernizr\n+    };\n+\n+    // Render Files\n+    config.filesToRender.forEach(file => {\n+      helper.copyTpl.call(_self, file.input, file.output, data);",
        "path": "app/index.js",
        "position": null,
        "original_position": 188,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nice JavaScript skills!\r\n\r\nI was wondering, since there are so few helpers, maybe you could define them in this scope as arrow functions? That way you have them all in one place and you don't have to use `.call()` every time.",
        "created_at": "2018-12-07T00:32:49Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239663734",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239663734"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239663734"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239663921",
        "pull_request_review_id": 182508472,
        "id": 239663921,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTY2MzkyMQ==",
        "diff_hunk": "@@ -236,4 +87,4 @@ module.exports = class extends Generator {\n       skipInstall: this.options['skip-install']\n     });\n   }\n-};\n+};",
        "path": "app/index.js",
        "position": 282,
        "original_position": 263,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's turn on final newlines in your text editor \ud83d\ude04 Which one are you using? Generally it should be enough to install an EditorConfig extension, because we have it configured in `.editorconfig`.",
        "created_at": "2018-12-07T00:34:05Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239663921",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239663921"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239663921"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239664655",
        "pull_request_review_id": 182508472,
        "id": 239664655,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTY2NDY1NQ==",
        "diff_hunk": "@@ -0,0 +1,27 @@\n+const mkdirp = require('mkdirp');\n+\n+function createDirectory(path) {\n+  mkdirp(path);\n+}",
        "path": "app/lib/helper.js",
        "position": null,
        "original_position": 5,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You can simply do:\r\n\r\n```js\r\nconst createDirectory = require('mkdirp')\r\n```\r\n\r\nbut I suggest sticking to the name `mkdirp` because it more accurately signals what it does, i.e. `mkdir -p`, which creates a directory and all its parent directories (if they don't already exist).",
        "created_at": "2018-12-07T00:38:35Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239664655",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/239664655"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r239664655"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/240101295",
        "pull_request_review_id": 183051756,
        "id": 240101295,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDEwMTI5NQ==",
        "diff_hunk": "@@ -84,146 +42,39 @@ module.exports = class extends Generator {\n   }\n \n   writing() {\n-    this._writingModernizr();\n-    this._writingGulpfile();\n-    this._writingPackageJSON();\n-    this._writingBabel();\n-    this._writingGit();\n-    this._writingEditorConfig();\n-    this._writingH5bp();\n-    this._writingStyles();\n-    this._writingScripts();\n-    this._writingHtml();\n-    this._writingMisc();\n-  }\n-\n-  _writingModernizr() {\n-    if(this.includeModernizr) {\n-      this.fs.copy(\n-        this.templatePath('modernizr.json'),\n-        this.destinationPath('modernizr.json')\n-      );\n-    }\n-  }\n-  _writingGulpfile() {\n-    this.fs.copyTpl(\n-      this.templatePath('gulpfile.js'),\n-      this.destinationPath('gulpfile.js'),\n-      {\n-        date: (new Date).toISOString().split('T')[0],\n-        name: this.pkg.name,\n-        version: this.pkg.version,\n-        includeSass: this.includeSass,\n-        includeBootstrap: this.includeBootstrap,\n-        includeBabel: this.options['babel'],\n-        testFramework: this.options['test-framework']\n-      }\n-    );\n-  }\n-\n-  _writingPackageJSON() {\n-    this.fs.copyTpl(\n-      this.templatePath('_package.json'),\n-      this.destinationPath('package.json'),\n-      {\n-        includeSass: this.includeSass,\n-        includeBabel: this.options['babel'],\n-        includeJQuery: this.includeJQuery,\n-        includeBootstrap: this.includeBootstrap,\n-        includeModernizr: this.includeModernizr\n-      }\n-    );\n-  }\n-\n-  _writingBabel() {\n-    this.fs.copy(\n-      this.templatePath('babelrc'),\n-      this.destinationPath('.babelrc')\n-    );\n-  }\n-\n-  _writingGit() {\n-    this.fs.copy(\n-      this.templatePath('gitignore'),\n-      this.destinationPath('.gitignore'));\n-\n-    this.fs.copy(\n-      this.templatePath('gitattributes'),\n-      this.destinationPath('.gitattributes'));\n-  }\n-\n-  _writingEditorConfig() {\n-    this.fs.copy(\n-      this.templatePath('editorconfig'),\n-      this.destinationPath('.editorconfig')\n-    );\n-  }\n-\n-  _writingH5bp() {\n-    this.fs.copy(\n-      this.templatePath('favicon.ico'),\n-      this.destinationPath('app/favicon.ico')\n-    );\n-\n-    this.fs.copy(\n-      this.templatePath('apple-touch-icon.png'),\n-      this.destinationPath('app/apple-touch-icon.png')\n-    );\n+    const _self = this;",
        "path": "app/index.js",
        "position": null,
        "original_position": 172,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OMG! So true! Let me refactor this \ud83d\ude04 ",
        "created_at": "2018-12-10T07:12:40Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r240101295",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/240101295"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r240101295"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        },
        "in_reply_to_id": 239661952
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/240101556",
        "pull_request_review_id": 183052079,
        "id": 240101556,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDEwMTU1Ng==",
        "diff_hunk": "@@ -84,146 +42,39 @@ module.exports = class extends Generator {\n   }\n \n   writing() {\n-    this._writingModernizr();\n-    this._writingGulpfile();\n-    this._writingPackageJSON();\n-    this._writingBabel();\n-    this._writingGit();\n-    this._writingEditorConfig();\n-    this._writingH5bp();\n-    this._writingStyles();\n-    this._writingScripts();\n-    this._writingHtml();\n-    this._writingMisc();\n-  }\n-\n-  _writingModernizr() {\n-    if(this.includeModernizr) {\n-      this.fs.copy(\n-        this.templatePath('modernizr.json'),\n-        this.destinationPath('modernizr.json')\n-      );\n-    }\n-  }\n-  _writingGulpfile() {\n-    this.fs.copyTpl(\n-      this.templatePath('gulpfile.js'),\n-      this.destinationPath('gulpfile.js'),\n-      {\n-        date: (new Date).toISOString().split('T')[0],\n-        name: this.pkg.name,\n-        version: this.pkg.version,\n-        includeSass: this.includeSass,\n-        includeBootstrap: this.includeBootstrap,\n-        includeBabel: this.options['babel'],\n-        testFramework: this.options['test-framework']\n-      }\n-    );\n-  }\n-\n-  _writingPackageJSON() {\n-    this.fs.copyTpl(\n-      this.templatePath('_package.json'),\n-      this.destinationPath('package.json'),\n-      {\n-        includeSass: this.includeSass,\n-        includeBabel: this.options['babel'],\n-        includeJQuery: this.includeJQuery,\n-        includeBootstrap: this.includeBootstrap,\n-        includeModernizr: this.includeModernizr\n-      }\n-    );\n-  }\n-\n-  _writingBabel() {\n-    this.fs.copy(\n-      this.templatePath('babelrc'),\n-      this.destinationPath('.babelrc')\n-    );\n-  }\n-\n-  _writingGit() {\n-    this.fs.copy(\n-      this.templatePath('gitignore'),\n-      this.destinationPath('.gitignore'));\n-\n-    this.fs.copy(\n-      this.templatePath('gitattributes'),\n-      this.destinationPath('.gitattributes'));\n-  }\n-\n-  _writingEditorConfig() {\n-    this.fs.copy(\n-      this.templatePath('editorconfig'),\n-      this.destinationPath('.editorconfig')\n-    );\n-  }\n-\n-  _writingH5bp() {\n-    this.fs.copy(\n-      this.templatePath('favicon.ico'),\n-      this.destinationPath('app/favicon.ico')\n-    );\n-\n-    this.fs.copy(\n-      this.templatePath('apple-touch-icon.png'),\n-      this.destinationPath('app/apple-touch-icon.png')\n-    );\n+    const _self = this;\n+    const data = {\n+      appname: this.appname,\n+      date: (new Date).toISOString().split('T')[0],\n+      name: this.pkg.name,\n+      version: this.pkg.version,\n+      includeSass: this.includeSass,\n+      includeBootstrap: this.includeBootstrap,\n+      includeBabel: this.options.babel,\n+      testFramework: this.options['test-framework'],\n+      includeJQuery: this.includeJQuery,\n+      includeModernizr: this.includeModernizr\n+    };\n+\n+    // Render Files\n+    config.filesToRender.forEach(file => {\n+      helper.copyTpl.call(_self, file.input, file.output, data);",
        "path": "app/index.js",
        "position": null,
        "original_position": 188,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Great! Let me change that \ud83d\ude04 ",
        "created_at": "2018-12-10T07:14:24Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r240101556",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/240101556"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r240101556"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        },
        "in_reply_to_id": 239663734
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/240101801",
        "pull_request_review_id": 183052369,
        "id": 240101801,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDEwMTgwMQ==",
        "diff_hunk": "@@ -236,4 +87,4 @@ module.exports = class extends Generator {\n       skipInstall: this.options['skip-install']\n     });\n   }\n-};\n+};",
        "path": "app/index.js",
        "position": 282,
        "original_position": 263,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\ud83d\ude13 yeah! I am using c9.io and right now is not supported, but I can fix with eslint... let me check that point also in #741 ",
        "created_at": "2018-12-10T07:15:37Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r240101801",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/240101801"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r240101801"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        },
        "in_reply_to_id": 239663921
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/240101852",
        "pull_request_review_id": 183052434,
        "id": 240101852,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDEwMTg1Mg==",
        "diff_hunk": "@@ -0,0 +1,27 @@\n+const mkdirp = require('mkdirp');\n+\n+function createDirectory(path) {\n+  mkdirp(path);\n+}",
        "path": "app/lib/helper.js",
        "position": null,
        "original_position": 5,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`mkdirp` sounds awesome to me ^^ ",
        "created_at": "2018-12-10T07:15:58Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r240101852",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/240101852"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r240101852"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        },
        "in_reply_to_id": 239664655
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/241389175",
        "pull_request_review_id": 184647123,
        "id": 241389175,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MTM4OTE3NQ==",
        "diff_hunk": "@@ -0,0 +1,93 @@\n+module.exports = {\n+  options: {\n+    'skip-welcome-message': {\n+      desc: 'Skips the welcome message',\n+      type: Boolean\n+    },\n+    'skip-install-message': {\n+      desc: 'Skips the message after the installation of dependencies',\n+      type: Boolean\n+    },\n+    'test-framework': {\n+      desc: 'Test framework to be invoked',\n+      type: String,\n+      defaults: 'mocha'\n+    },\n+    'babel': {\n+      desc: 'Use Babel',\n+      type: Boolean,\n+      defaults: true\n+    }\n+  },\n+  prompts: [{\n+    type: 'checkbox',\n+    name: 'features',\n+    message: 'Which additional features would you like to include?',\n+    choices: [{\n+      name: 'Sass',\n+      value: 'includeSass',\n+      checked: true\n+    }, {\n+      name: 'Bootstrap',\n+      value: 'includeBootstrap',\n+      checked: true\n+    }, {\n+      name: 'Modernizr',\n+      value: 'includeModernizr',\n+      checked: true\n+    }]\n+  }, {\n+    type: 'confirm',\n+    name: 'includeJQuery',\n+    message: 'Would you like to include jQuery?',\n+    default: true,\n+    when: answers => !answers.features.includes('includeBootstrap')\n+  }],\n+  dirToCreate: ['app/images', 'app/fonts'],",
        "path": "app/lib/config.js",
        "position": null,
        "original_position": 46,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok! :-)",
        "created_at": "2018-12-13T12:57:08Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r241389175",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/241389175"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r241389175"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        },
        "in_reply_to_id": 239662555
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/241389244",
        "pull_request_review_id": 184647222,
        "id": 241389244,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MTM4OTI0NA==",
        "diff_hunk": "@@ -84,146 +42,39 @@ module.exports = class extends Generator {\n   }\n \n   writing() {\n-    this._writingModernizr();\n-    this._writingGulpfile();\n-    this._writingPackageJSON();\n-    this._writingBabel();\n-    this._writingGit();\n-    this._writingEditorConfig();\n-    this._writingH5bp();\n-    this._writingStyles();\n-    this._writingScripts();\n-    this._writingHtml();\n-    this._writingMisc();\n-  }\n-\n-  _writingModernizr() {\n-    if(this.includeModernizr) {\n-      this.fs.copy(\n-        this.templatePath('modernizr.json'),\n-        this.destinationPath('modernizr.json')\n-      );\n-    }\n-  }\n-  _writingGulpfile() {\n-    this.fs.copyTpl(\n-      this.templatePath('gulpfile.js'),\n-      this.destinationPath('gulpfile.js'),\n-      {\n-        date: (new Date).toISOString().split('T')[0],\n-        name: this.pkg.name,\n-        version: this.pkg.version,\n-        includeSass: this.includeSass,\n-        includeBootstrap: this.includeBootstrap,\n-        includeBabel: this.options['babel'],\n-        testFramework: this.options['test-framework']\n-      }\n-    );\n-  }\n-\n-  _writingPackageJSON() {\n-    this.fs.copyTpl(\n-      this.templatePath('_package.json'),\n-      this.destinationPath('package.json'),\n-      {\n-        includeSass: this.includeSass,\n-        includeBabel: this.options['babel'],\n-        includeJQuery: this.includeJQuery,\n-        includeBootstrap: this.includeBootstrap,\n-        includeModernizr: this.includeModernizr\n-      }\n-    );\n-  }\n-\n-  _writingBabel() {\n-    this.fs.copy(\n-      this.templatePath('babelrc'),\n-      this.destinationPath('.babelrc')\n-    );\n-  }\n-\n-  _writingGit() {\n-    this.fs.copy(\n-      this.templatePath('gitignore'),\n-      this.destinationPath('.gitignore'));\n-\n-    this.fs.copy(\n-      this.templatePath('gitattributes'),\n-      this.destinationPath('.gitattributes'));\n-  }\n-\n-  _writingEditorConfig() {\n-    this.fs.copy(\n-      this.templatePath('editorconfig'),\n-      this.destinationPath('.editorconfig')\n-    );\n-  }\n-\n-  _writingH5bp() {\n-    this.fs.copy(\n-      this.templatePath('favicon.ico'),\n-      this.destinationPath('app/favicon.ico')\n-    );\n-\n-    this.fs.copy(\n-      this.templatePath('apple-touch-icon.png'),\n-      this.destinationPath('app/apple-touch-icon.png')\n-    );\n+    const _self = this;\n+    const data = {",
        "path": "app/index.js",
        "position": null,
        "original_position": 173,
        "commit_id": "58de4e0c47dc24c14b9c02dfc6f124c779721497",
        "original_commit_id": "17ef6e36c7e17b6490993b92bbde67f27768236d",
        "user": {
            "login": "UlisesGascon",
            "id": 5110813,
            "node_id": "MDQ6VXNlcjUxMTA4MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5110813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlisesGascon",
            "html_url": "https://github.com/UlisesGascon",
            "followers_url": "https://api.github.com/users/UlisesGascon/followers",
            "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
            "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
            "repos_url": "https://api.github.com/users/UlisesGascon/repos",
            "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sounds good!",
        "created_at": "2018-12-13T12:57:24Z",
        "updated_at": "2018-12-14T07:32:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r241389244",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/241389244"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/741#discussion_r241389244"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/741"
            }
        },
        "in_reply_to_id": 239662301
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/262050597",
        "pull_request_review_id": 210129480,
        "id": 262050597,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjA1MDU5Nw==",
        "diff_hunk": "@@ -101,91 +101,69 @@ gulp.task('serve', () => {\n ### 7. Configure `html` task to include files from `.tmp`\n \n ```diff\n- gulp.task('html', ['styles', 'views', 'scripts'], () => {\n--  return gulp.src('app/*.html')\n-+  return gulp.src(['app/*.html', '.tmp/*.html'])\n-     .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n-     .pipe($.if('*.js', $.uglify()))\n-     .pipe($.if('*.css', $.cssnano({safe: true, autoprefixer: false})))\n-     .pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n-     .pipe(gulp.dest('dist'));\n- });\n+function html() {\n+- return src('app/*.html')\n++ return src(['app/*.html', '.tmp/*.html'])\n+   .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n+   .pipe($.if(/\\.js$/, $.uglify({compress: {drop_console: true}})))\n+   .pipe($.if(/\\.css$/, $.postcss([cssnano({safe: true, autoprefixer: false})])))\n+   .pipe($.if(/\\.html$/, $.htmlmin({\n+     collapseWhitespace: true,\n+     minifyCSS: true,\n+     minifyJS: {compress: {drop_console: true}},\n+     processConditionalComments: true,\n+     removeComments: true,\n+     removeEmptyAttributes: true,\n+     removeScriptTypeAttributes: true,\n+     removeStyleLinkTypeAttributes: true\n+  })))\n+  .pipe(dest('dist'));\n+}\n ```\n \n ### 8. Update `extras`\n \n We don't want to copy over `.njk` files in the build process:\n \n ```diff\n- gulp.task('extras', () => {\n-   return gulp.src([\n-     'app/*.*',\n--    '!app/*.html'\n-+    '!app/*.html',\n-+    '!app/*.njk'\n-   ], {\n-     dot: true\n-   }).pipe(gulp.dest('dist'));\n- });\n-```\n-\n-### 9. Configure `wiredep` task to wire Bower components on layout templates only\n-\n-Wiredep does not support `.njk` ([yet](https://github.com/taptapship/wiredep/pull/258)), so also add in the file type definition.\n+function extras() {\n+  return src([\n+    'app/*',\n+-   '!app/*.html'\n++   '!app/*.html',\n++   '!app/*.njk'\n+  ], {\n+    dot: true\n+  }).pipe(dest('dist'));\n+};\n+```\n+### 9. Edit your `watch` task\n \n ```diff\n-  gulp.task('wiredep', () => {\n-    ...\n-\n--   gulp.src('app/*.html')\n-+   gulp.src('app/layouts/*.njk')\n-      .pipe(wiredep({\n-        exclude: ['bootstrap-sass'],\n--       ignorePath: /^(\\.\\.\\/)*\\.\\./\n-+       ignorePath: /^(\\.\\.\\/)*\\.\\./,\n-+       fileTypes: {\n-+         njk: {\n-+           block: /(([ \\t]*)<!--\\s*bower:*(\\S*)\\s*-->)(\\n|\\r|.)*?(<!--\\s*endbower\\s*-->)/gi,\n-+           detect: {\n-+             js: /<script.*src=['\"]([^'\"]+)/gi,\n-+             css: /<link.*href=['\"]([^'\"]+)/gi\n-+           },\n-+           replace: {\n-+             js: '<script src=\"{{filePath}}\"></script>',\n-+             css: '<link rel=\"stylesheet\" href=\"{{filePath}}\" />'\n-+           }\n-+         }\n-+       }\n-+     }))\n--     .pipe(gulp.dest('app'));\n-+     .pipe(gulp.dest('app/layouts'));\n-  });\n-```\n+  watch([\n+-   'app/*.html',\n+    'app/images/**/*',\n+    '.tmp/fonts/**/*'\n+  ]).on('change', server.reload);\n \n++ watch('app/**/*.{html,njk}', views);",
        "path": "docs/recipes/nunjucks.md",
        "position": 134,
        "original_position": 134,
        "commit_id": "c5217cfc3549bfac95cc6a9ef6a1d5f291f4dfc4",
        "original_commit_id": "c5217cfc3549bfac95cc6a9ef6a1d5f291f4dfc4",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You probably meant to call `viewsreload` here, but instead I suggest removing `viewsreload` function entirely and simply calling `server.reload` directly:\r\n\r\n```js\r\nwatch('app/**/*.{html,njk}', server.reload);\r\n```",
        "created_at": "2019-03-04T13:09:09Z",
        "updated_at": "2019-03-04T13:26:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/753#discussion_r262050597",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/753",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/262050597"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/753#discussion_r262050597"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/753"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/262052060",
        "pull_request_review_id": 210129480,
        "id": 262052060,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjA1MjA2MA==",
        "diff_hunk": "@@ -101,91 +101,69 @@ gulp.task('serve', () => {\n ### 7. Configure `html` task to include files from `.tmp`\n \n ```diff\n- gulp.task('html', ['styles', 'views', 'scripts'], () => {\n--  return gulp.src('app/*.html')\n-+  return gulp.src(['app/*.html', '.tmp/*.html'])\n-     .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n-     .pipe($.if('*.js', $.uglify()))\n-     .pipe($.if('*.css', $.cssnano({safe: true, autoprefixer: false})))\n-     .pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n-     .pipe(gulp.dest('dist'));\n- });\n+function html() {\n+- return src('app/*.html')\n++ return src(['app/*.html', '.tmp/*.html'])\n+   .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n+   .pipe($.if(/\\.js$/, $.uglify({compress: {drop_console: true}})))\n+   .pipe($.if(/\\.css$/, $.postcss([cssnano({safe: true, autoprefixer: false})])))\n+   .pipe($.if(/\\.html$/, $.htmlmin({\n+     collapseWhitespace: true,\n+     minifyCSS: true,\n+     minifyJS: {compress: {drop_console: true}},\n+     processConditionalComments: true,\n+     removeComments: true,\n+     removeEmptyAttributes: true,\n+     removeScriptTypeAttributes: true,\n+     removeStyleLinkTypeAttributes: true\n+  })))\n+  .pipe(dest('dist'));\n+}\n ```\n \n ### 8. Update `extras`\n \n We don't want to copy over `.njk` files in the build process:\n \n ```diff\n- gulp.task('extras', () => {\n-   return gulp.src([\n-     'app/*.*',\n--    '!app/*.html'\n-+    '!app/*.html',\n-+    '!app/*.njk'\n-   ], {\n-     dot: true\n-   }).pipe(gulp.dest('dist'));\n- });\n-```\n-\n-### 9. Configure `wiredep` task to wire Bower components on layout templates only\n-\n-Wiredep does not support `.njk` ([yet](https://github.com/taptapship/wiredep/pull/258)), so also add in the file type definition.\n+function extras() {\n+  return src([\n+    'app/*',\n+-   '!app/*.html'\n++   '!app/*.html',\n++   '!app/*.njk'\n+  ], {\n+    dot: true\n+  }).pipe(dest('dist'));\n+};\n+```\n+### 9. Edit your `watch` task\n \n ```diff\n-  gulp.task('wiredep', () => {\n-    ...\n-\n--   gulp.src('app/*.html')\n-+   gulp.src('app/layouts/*.njk')\n-      .pipe(wiredep({\n-        exclude: ['bootstrap-sass'],\n--       ignorePath: /^(\\.\\.\\/)*\\.\\./\n-+       ignorePath: /^(\\.\\.\\/)*\\.\\./,\n-+       fileTypes: {\n-+         njk: {\n-+           block: /(([ \\t]*)<!--\\s*bower:*(\\S*)\\s*-->)(\\n|\\r|.)*?(<!--\\s*endbower\\s*-->)/gi,\n-+           detect: {\n-+             js: /<script.*src=['\"]([^'\"]+)/gi,\n-+             css: /<link.*href=['\"]([^'\"]+)/gi\n-+           },\n-+           replace: {\n-+             js: '<script src=\"{{filePath}}\"></script>',\n-+             css: '<link rel=\"stylesheet\" href=\"{{filePath}}\" />'\n-+           }\n-+         }\n-+       }\n-+     }))\n--     .pipe(gulp.dest('app'));\n-+     .pipe(gulp.dest('app/layouts'));\n-  });\n-```\n+  watch([\n+-   'app/*.html',\n+    'app/images/**/*',\n+    '.tmp/fonts/**/*'\n+  ]).on('change', server.reload);\n \n++ watch('app/**/*.{html,njk}', views);\n+  watch('app/styles/**/*.scss', styles);\n+  watch('app/scripts/**/*.js', scripts);\n+  watch('app/fonts/**/*', fonts);\n+}\n+```\n \n-### 10. Edit your `serve` task\n+### 9. Edit your `serve` task\n \n-Edit your `serve` task so that editing `.html` and `.njk` files triggers the `views:reload` task:\n+Edit your `serve` task so that editing `.html` and `.njk` files triggers the `viewsreload` function:",
        "path": "docs/recipes/nunjucks.md",
        "position": 145,
        "original_position": 145,
        "commit_id": "c5217cfc3549bfac95cc6a9ef6a1d5f291f4dfc4",
        "original_commit_id": "c5217cfc3549bfac95cc6a9ef6a1d5f291f4dfc4",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This description needs to be updated to something more accurate:\r\n\r\n> Compile `.njk` files before running the server\r\n\r\nBut instead I suggest deleting this section and moving the code below to step 6, which contains old `gulpfile.js` code and needs to be updated anyway. You can update its title so the whole 6th step section goes something like this:\r\n\r\n> ### 6. Add `views` as a dependency of both `serve` and `build`\r\n>\r\n> ```diff\r\n>  if (isDev) {\r\n> -  serve = series(clean, parallel(styles, scripts, fonts), startAppServer);\r\n> +  serve = series(clean, parallel(views, styles, scripts, fonts), startAppServer);\r\n>  } ...\r\n> ```\r\n>\r\n> ```diff\r\n>  const build = series(\r\n>    parallel(\r\n>     lint,\r\n> -   series(parallel(styles, scripts), html),\r\n> +   series(parallel(views, styles, scripts), html),\r\n>     images,\r\n>     fonts,\r\n>     extras\r\n>    ),\r\n>    measureSize\r\n>  );\r\n> ```",
        "created_at": "2019-03-04T13:14:02Z",
        "updated_at": "2019-03-04T13:26:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/753#discussion_r262052060",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/753",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/262052060"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/753#discussion_r262052060"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/753"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/262055932",
        "pull_request_review_id": 210129480,
        "id": 262055932,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjA1NTkzMg==",
        "diff_hunk": "@@ -101,91 +101,69 @@ gulp.task('serve', () => {\n ### 7. Configure `html` task to include files from `.tmp`\n \n ```diff\n- gulp.task('html', ['styles', 'views', 'scripts'], () => {\n--  return gulp.src('app/*.html')\n-+  return gulp.src(['app/*.html', '.tmp/*.html'])\n-     .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n-     .pipe($.if('*.js', $.uglify()))\n-     .pipe($.if('*.css', $.cssnano({safe: true, autoprefixer: false})))\n-     .pipe($.if('*.html', $.htmlmin({collapseWhitespace: true})))\n-     .pipe(gulp.dest('dist'));\n- });\n+function html() {\n+- return src('app/*.html')\n++ return src(['app/*.html', '.tmp/*.html'])\n+   .pipe($.useref({searchPath: ['.tmp', 'app', '.']}))\n+   .pipe($.if(/\\.js$/, $.uglify({compress: {drop_console: true}})))\n+   .pipe($.if(/\\.css$/, $.postcss([cssnano({safe: true, autoprefixer: false})])))\n+   .pipe($.if(/\\.html$/, $.htmlmin({\n+     collapseWhitespace: true,\n+     minifyCSS: true,\n+     minifyJS: {compress: {drop_console: true}},\n+     processConditionalComments: true,\n+     removeComments: true,\n+     removeEmptyAttributes: true,\n+     removeScriptTypeAttributes: true,\n+     removeStyleLinkTypeAttributes: true\n+  })))\n+  .pipe(dest('dist'));\n+}\n ```\n \n ### 8. Update `extras`\n \n We don't want to copy over `.njk` files in the build process:\n \n ```diff\n- gulp.task('extras', () => {\n-   return gulp.src([\n-     'app/*.*',\n--    '!app/*.html'\n-+    '!app/*.html',\n-+    '!app/*.njk'\n-   ], {\n-     dot: true\n-   }).pipe(gulp.dest('dist'));\n- });\n-```\n-\n-### 9. Configure `wiredep` task to wire Bower components on layout templates only\n-\n-Wiredep does not support `.njk` ([yet](https://github.com/taptapship/wiredep/pull/258)), so also add in the file type definition.\n+function extras() {\n+  return src([\n+    'app/*',\n+-   '!app/*.html'\n++   '!app/*.html',\n++   '!app/*.njk'\n+  ], {\n+    dot: true\n+  }).pipe(dest('dist'));\n+};\n+```\n+### 9. Edit your `watch` task\n \n ```diff\n-  gulp.task('wiredep', () => {\n-    ...\n-\n--   gulp.src('app/*.html')\n-+   gulp.src('app/layouts/*.njk')\n-      .pipe(wiredep({\n-        exclude: ['bootstrap-sass'],\n--       ignorePath: /^(\\.\\.\\/)*\\.\\./\n-+       ignorePath: /^(\\.\\.\\/)*\\.\\./,\n-+       fileTypes: {\n-+         njk: {\n-+           block: /(([ \\t]*)<!--\\s*bower:*(\\S*)\\s*-->)(\\n|\\r|.)*?(<!--\\s*endbower\\s*-->)/gi,\n-+           detect: {\n-+             js: /<script.*src=['\"]([^'\"]+)/gi,\n-+             css: /<link.*href=['\"]([^'\"]+)/gi\n-+           },\n-+           replace: {\n-+             js: '<script src=\"{{filePath}}\"></script>',\n-+             css: '<link rel=\"stylesheet\" href=\"{{filePath}}\" />'\n-+           }\n-+         }\n-+       }\n-+     }))\n--     .pipe(gulp.dest('app'));\n-+     .pipe(gulp.dest('app/layouts'));\n-  });\n-```\n+  watch([\n+-   'app/*.html',\n+    'app/images/**/*',\n+    '.tmp/fonts/**/*'\n+  ]).on('change', server.reload);\n \n++ watch('app/**/*.{html,njk}', views);\n+  watch('app/styles/**/*.scss', styles);\n+  watch('app/scripts/**/*.js', scripts);\n+  watch('app/fonts/**/*', fonts);\n+}\n+```\n \n-### 10. Edit your `serve` task\n+### 9. Edit your `serve` task\n \n-Edit your `serve` task so that editing `.html` and `.njk` files triggers the `views:reload` task:\n+Edit your `serve` task so that editing `.html` and `.njk` files triggers the `viewsreload` function:\n \n ```diff\n-  gulp.task('serve', ['views', 'styles', 'fonts'], () => {\n-    runSequence(['clean', 'wiredep'], ['views', 'styles', 'scripts', 'fonts'], () => {\n-      ...\n-\n-    gulp.watch([\n--     'app/*.html',\n-      'app/scripts/**/*.js',\n-      'app/images/**/*',\n-      '.tmp/fonts/**/*'\n-    ]).on('change', reload);\n-     \n-+     gulp.watch('app/**/*.{html,njk}', ['views:reload']);\n-      gulp.watch('app/styles/**/*.scss', ['styles']);\n-      gulp.watch('app/scripts/**/*.js', ['scripts']);\n-      gulp.watch('app/fonts/**/*', ['fonts']);\n-      gulp.watch('bower.json', ['wiredep', 'fonts']);\n-    });\n-  });\n+let serve;\n+if (isDev) {\n+- serve = series(clean, parallel(styles, scripts, fonts), startAppServer);\n++ serve = series(clean, parallel(views, styles, scripts, fonts), startAppServer);\n+} ...\n+}",
        "path": "docs/recipes/nunjucks.md",
        "position": 171,
        "original_position": 171,
        "commit_id": "c5217cfc3549bfac95cc6a9ef6a1d5f291f4dfc4",
        "original_commit_id": "c5217cfc3549bfac95cc6a9ef6a1d5f291f4dfc4",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Best remove this extra `}` to avoid confusion.",
        "created_at": "2019-03-04T13:26:04Z",
        "updated_at": "2019-03-04T13:26:13Z",
        "html_url": "https://github.com/yeoman/generator-webapp/pull/753#discussion_r262055932",
        "pull_request_url": "https://api.github.com/repos/yeoman/generator-webapp/pulls/753",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/comments/262055932"
            },
            "html": {
                "href": "https://github.com/yeoman/generator-webapp/pull/753#discussion_r262055932"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/generator-webapp/pulls/753"
            }
        }
    }
]