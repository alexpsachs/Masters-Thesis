[
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/567631",
        "pull_request_review_id": null,
        "id": 567631,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzYzMQ==",
        "diff_hunk": "@@ -893,11 +897,32 @@ protected function makeRequest($url, $params, $ch=null) {\n       curl_close($ch);\n       throw $e;\n     }\n+\n+\tif (curl_getinfo($ch, CURLINFO_HTTP_CODE) == 302) {\n+        curl_close($ch);",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 19,
        "commit_id": "659cd809efa02bec5b76212dd873761bd4384941",
        "original_commit_id": "f94bb1699118e47d8d0626a6b47b92c902c00c06",
        "user": {
            "login": "mikesherov",
            "id": 364532,
            "node_id": "MDQ6VXNlcjM2NDUzMg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/364532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikesherov",
            "html_url": "https://github.com/mikesherov",
            "followers_url": "https://api.github.com/users/mikesherov/followers",
            "following_url": "https://api.github.com/users/mikesherov/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikesherov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikesherov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikesherov/subscriptions",
            "organizations_url": "https://api.github.com/users/mikesherov/orgs",
            "repos_url": "https://api.github.com/users/mikesherov/repos",
            "events_url": "https://api.github.com/users/mikesherov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikesherov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Looks like you replaced spaces with tabs? I'd say you should use facebook's style to increase the chances of the pull being merged.\n",
        "created_at": "2012-03-16T12:24:03Z",
        "updated_at": "2012-03-28T15:03:53Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/13#discussion_r567631",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/13",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/567631"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/13#discussion_r567631"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/567636",
        "pull_request_review_id": null,
        "id": 567636,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzYzNg==",
        "diff_hunk": "@@ -893,11 +897,32 @@ protected function makeRequest($url, $params, $ch=null) {\n       curl_close($ch);\n       throw $e;\n     }\n+\n+\tif (curl_getinfo($ch, CURLINFO_HTTP_CODE) == 302) {\n+        curl_close($ch);\n+\t\treturn json_encode($this->headers['location']);\n+\t}\n+\n     curl_close($ch);\n     return $result;\n   }\n \n   /**\n+   * Parse and store the response headers.\n+   *\n+   * @param $ch The curl handle\n+   * @param string $header The response header\n+   * @return int\n+   */\n+  public function readHeaders($ch, $header)\n+  {",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 35,
        "commit_id": "659cd809efa02bec5b76212dd873761bd4384941",
        "original_commit_id": "f94bb1699118e47d8d0626a6b47b92c902c00c06",
        "user": {
            "login": "mikesherov",
            "id": 364532,
            "node_id": "MDQ6VXNlcjM2NDUzMg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/364532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikesherov",
            "html_url": "https://github.com/mikesherov",
            "followers_url": "https://api.github.com/users/mikesherov/followers",
            "following_url": "https://api.github.com/users/mikesherov/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikesherov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikesherov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikesherov/subscriptions",
            "organizations_url": "https://api.github.com/users/mikesherov/orgs",
            "repos_url": "https://api.github.com/users/mikesherov/repos",
            "events_url": "https://api.github.com/users/mikesherov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikesherov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Facebook puts to opening curly on the same line as the declaration.\n",
        "created_at": "2012-03-16T12:24:58Z",
        "updated_at": "2012-03-28T15:03:53Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/13#discussion_r567636",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/13",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/567636"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/13#discussion_r567636"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/567654",
        "pull_request_review_id": null,
        "id": 567654,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzY1NA==",
        "diff_hunk": "@@ -854,7 +854,11 @@ protected function makeRequest($url, $params, $ch=null) {\n     }\n \n     $opts = self::$CURL_OPTS;\n-    if ($this->getFileUploadSupport()) {\n+\n+\t$this->headers = array();\n+\t$opts[CURLOPT_HEADERFUNCTION] = array(&$this, 'readHeaders');\n+\n+    if ($this->useFileUploadSupport()) {",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 9,
        "commit_id": "659cd809efa02bec5b76212dd873761bd4384941",
        "original_commit_id": "f94bb1699118e47d8d0626a6b47b92c902c00c06",
        "user": {
            "login": "mikesherov",
            "id": 364532,
            "node_id": "MDQ6VXNlcjM2NDUzMg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/364532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikesherov",
            "html_url": "https://github.com/mikesherov",
            "followers_url": "https://api.github.com/users/mikesherov/followers",
            "following_url": "https://api.github.com/users/mikesherov/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikesherov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikesherov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikesherov/subscriptions",
            "organizations_url": "https://api.github.com/users/mikesherov/orgs",
            "repos_url": "https://api.github.com/users/mikesherov/repos",
            "events_url": "https://api.github.com/users/mikesherov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikesherov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "useFileUploadSupport() is deprecated, please revert this to `getFileUploadSupport()`\n",
        "created_at": "2012-03-16T12:30:07Z",
        "updated_at": "2012-03-28T15:03:53Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/13#discussion_r567654",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/13",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/567654"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/13#discussion_r567654"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/665454",
        "pull_request_review_id": null,
        "id": 665454,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTQ1NA==",
        "diff_hunk": "@@ -713,6 +725,11 @@ protected function getAccessTokenFromCode($code, $redirect_uri = null) {\n                           'redirect_uri' => $redirect_uri,\n                           'code' => $code));\n     } catch (FacebookApiException $e) {\n+      // Throw CURL exceptions",
        "path": "src/base_facebook.php",
        "position": 30,
        "original_position": 30,
        "commit_id": "2d79b9c4bc070cdf7f431622bcf51dcf2fb66611",
        "original_commit_id": "2d79b9c4bc070cdf7f431622bcf51dcf2fb66611",
        "user": {
            "login": "omerida",
            "id": 493854,
            "node_id": "MDQ6VXNlcjQ5Mzg1NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/493854?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omerida",
            "html_url": "https://github.com/omerida",
            "followers_url": "https://api.github.com/users/omerida/followers",
            "following_url": "https://api.github.com/users/omerida/following{/other_user}",
            "gists_url": "https://api.github.com/users/omerida/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omerida/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omerida/subscriptions",
            "organizations_url": "https://api.github.com/users/omerida/orgs",
            "repos_url": "https://api.github.com/users/omerida/repos",
            "events_url": "https://api.github.com/users/omerida/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omerida/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why can't you catch curl exceptions in a separate catch block?\n",
        "created_at": "2012-04-10T14:17:02Z",
        "updated_at": "2012-04-10T14:17:02Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/16#discussion_r665454",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/16",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/665454"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/16#discussion_r665454"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/16"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/665459",
        "pull_request_review_id": null,
        "id": 665459,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTQ1OQ==",
        "diff_hunk": "@@ -1222,6 +1239,26 @@ protected function getMetadataCookie() {\n   }\n \n   /**\n+   * Set custom CURL options.\n+   *\n+   * @param array $curlOptions CURL options\n+   * @return BaseFacebook\n+   */\n+  public function setCurlOptions(array $curlOptions) {\n+    $this->curl_opts = $curlOptions;\n+    return $this;\n+  }\n+\n+  /**\n+   * Get CURL options (default + custom).\n+   *\n+   * @return array CURL options\n+   */\n+  public function getCurlOptions() {\n+    return $this->curl_opts + self::$CURL_OPTS;",
        "path": "src/base_facebook.php",
        "position": 67,
        "original_position": 67,
        "commit_id": "2d79b9c4bc070cdf7f431622bcf51dcf2fb66611",
        "original_commit_id": "2d79b9c4bc070cdf7f431622bcf51dcf2fb66611",
        "user": {
            "login": "omerida",
            "id": 493854,
            "node_id": "MDQ6VXNlcjQ5Mzg1NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/493854?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omerida",
            "html_url": "https://github.com/omerida",
            "followers_url": "https://api.github.com/users/omerida/followers",
            "following_url": "https://api.github.com/users/omerida/following{/other_user}",
            "gists_url": "https://api.github.com/users/omerida/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omerida/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omerida/subscriptions",
            "organizations_url": "https://api.github.com/users/omerida/orgs",
            "repos_url": "https://api.github.com/users/omerida/repos",
            "events_url": "https://api.github.com/users/omerida/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omerida/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You may need to reverse this so that users can override the default curl options.\nreturn self::$CURL_OPTS + $this->curl_opts;\n",
        "created_at": "2012-04-10T14:18:01Z",
        "updated_at": "2012-04-10T14:18:01Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/16#discussion_r665459",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/16",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/665459"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/16#discussion_r665459"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/16"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/665748",
        "pull_request_review_id": null,
        "id": 665748,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTc0OA==",
        "diff_hunk": "@@ -713,6 +725,11 @@ protected function getAccessTokenFromCode($code, $redirect_uri = null) {\n                           'redirect_uri' => $redirect_uri,\n                           'code' => $code));\n     } catch (FacebookApiException $e) {\n+      // Throw CURL exceptions",
        "path": "src/base_facebook.php",
        "position": 30,
        "original_position": 30,
        "commit_id": "2d79b9c4bc070cdf7f431622bcf51dcf2fb66611",
        "original_commit_id": "2d79b9c4bc070cdf7f431622bcf51dcf2fb66611",
        "user": {
            "login": "comel",
            "id": 1394646,
            "node_id": "MDQ6VXNlcjEzOTQ2NDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1394646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comel",
            "html_url": "https://github.com/comel",
            "followers_url": "https://api.github.com/users/comel/followers",
            "following_url": "https://api.github.com/users/comel/following{/other_user}",
            "gists_url": "https://api.github.com/users/comel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comel/subscriptions",
            "organizations_url": "https://api.github.com/users/comel/orgs",
            "repos_url": "https://api.github.com/users/comel/repos",
            "events_url": "https://api.github.com/users/comel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comel/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Because curl exceptions are wrapped inside FacebookApiException...\n",
        "created_at": "2012-04-10T15:15:01Z",
        "updated_at": "2012-04-10T15:15:01Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/16#discussion_r665748",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/16",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/665748"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/16#discussion_r665748"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/16"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/665749",
        "pull_request_review_id": null,
        "id": 665749,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTc0OQ==",
        "diff_hunk": "@@ -1222,6 +1239,26 @@ protected function getMetadataCookie() {\n   }\n \n   /**\n+   * Set custom CURL options.\n+   *\n+   * @param array $curlOptions CURL options\n+   * @return BaseFacebook\n+   */\n+  public function setCurlOptions(array $curlOptions) {\n+    $this->curl_opts = $curlOptions;\n+    return $this;\n+  }\n+\n+  /**\n+   * Get CURL options (default + custom).\n+   *\n+   * @return array CURL options\n+   */\n+  public function getCurlOptions() {\n+    return $this->curl_opts + self::$CURL_OPTS;",
        "path": "src/base_facebook.php",
        "position": 67,
        "original_position": 67,
        "commit_id": "2d79b9c4bc070cdf7f431622bcf51dcf2fb66611",
        "original_commit_id": "2d79b9c4bc070cdf7f431622bcf51dcf2fb66611",
        "user": {
            "login": "comel",
            "id": 1394646,
            "node_id": "MDQ6VXNlcjEzOTQ2NDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1394646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comel",
            "html_url": "https://github.com/comel",
            "followers_url": "https://api.github.com/users/comel/followers",
            "following_url": "https://api.github.com/users/comel/following{/other_user}",
            "gists_url": "https://api.github.com/users/comel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comel/subscriptions",
            "organizations_url": "https://api.github.com/users/comel/orgs",
            "repos_url": "https://api.github.com/users/comel/repos",
            "events_url": "https://api.github.com/users/comel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comel/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is exactly  what this code does, try it...\n",
        "created_at": "2012-04-10T15:15:08Z",
        "updated_at": "2012-04-10T15:15:08Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/16#discussion_r665749",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/16",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/665749"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/16#discussion_r665749"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/16"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/666161",
        "pull_request_review_id": null,
        "id": 666161,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjE2MQ==",
        "diff_hunk": "@@ -1222,6 +1239,26 @@ protected function getMetadataCookie() {\n   }\n \n   /**\n+   * Set custom CURL options.\n+   *\n+   * @param array $curlOptions CURL options\n+   * @return BaseFacebook\n+   */\n+  public function setCurlOptions(array $curlOptions) {\n+    $this->curl_opts = $curlOptions;\n+    return $this;\n+  }\n+\n+  /**\n+   * Get CURL options (default + custom).\n+   *\n+   * @return array CURL options\n+   */\n+  public function getCurlOptions() {\n+    return $this->curl_opts + self::$CURL_OPTS;",
        "path": "src/base_facebook.php",
        "position": 67,
        "original_position": 67,
        "commit_id": "2d79b9c4bc070cdf7f431622bcf51dcf2fb66611",
        "original_commit_id": "2d79b9c4bc070cdf7f431622bcf51dcf2fb66611",
        "user": {
            "login": "omerida",
            "id": 493854,
            "node_id": "MDQ6VXNlcjQ5Mzg1NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/493854?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omerida",
            "html_url": "https://github.com/omerida",
            "followers_url": "https://api.github.com/users/omerida/followers",
            "following_url": "https://api.github.com/users/omerida/following{/other_user}",
            "gists_url": "https://api.github.com/users/omerida/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omerida/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omerida/subscriptions",
            "organizations_url": "https://api.github.com/users/omerida/orgs",
            "repos_url": "https://api.github.com/users/omerida/repos",
            "events_url": "https://api.github.com/users/omerida/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omerida/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oh right, adding arrays is different than array_merge ... sigh, php.\n",
        "created_at": "2012-04-10T16:11:39Z",
        "updated_at": "2012-04-10T16:11:39Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/16#discussion_r666161",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/16",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/666161"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/16#discussion_r666161"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/16"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1038201",
        "pull_request_review_id": null,
        "id": 1038201,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMzgyMDE=",
        "diff_hunk": "@@ -330,6 +330,44 @@ public function setAccessToken($access_token) {\n   }\n \n   /**\n+   * Extend an access token, while removing the short-lived token that might have been generated via client-side flow.\n+   * Thanks to http://stackoverflow.com/questions/486896/adding-a-parameter-to-the-url-with-javascript for the workaround\n+   */\n+  public function getExtendedAccessToken() {\n+    try {\n+      // need to circumvent json_decode by calling _oauthRequest\n+      // directly, since response isn't JSON format.\n+      $access_token_response =\n+        $this->_oauthRequest(\n+          $this->getUrl('graph', '/oauth/access_token'),\n+          $params = array(    'client_id' => $this->getAppId(),\n+          'client_secret' => $this->getAppSecret(),\n+          'grant_type'=>'fb_exchange_token',\n+          'fb_exchange_token'=>$this->getAccessToken(),\n+        ));\n+      } catch (FacebookApiException $e) {\n+        // most likely that user very recently revoked authorization.\n+        // In any event, we don't have an access token, so say so.\n+        return false;\n+      }\n+  \n+      if (empty($access_token_response)) {\n+        return false;\n+      }\n+      \n+      $response_params = array();\n+      parse_str($access_token_response, $response_params);\n+      \n+      if (!isset($response_params['access_token'])) {\n+        return false;\n+      }\n+      \n+      $this->destroySession();\n+      \n+      $this->setPersistentData('access_token', $response_params['access_token']);",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 38,
        "commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "original_commit_id": "e22aa12604f2b92ee23c793fc6137bb40c648431",
        "user": {
            "login": "onema",
            "id": 532616,
            "node_id": "MDQ6VXNlcjUzMjYxNg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/532616?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/onema",
            "html_url": "https://github.com/onema",
            "followers_url": "https://api.github.com/users/onema/followers",
            "following_url": "https://api.github.com/users/onema/following{/other_user}",
            "gists_url": "https://api.github.com/users/onema/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/onema/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/onema/subscriptions",
            "organizations_url": "https://api.github.com/users/onema/orgs",
            "repos_url": "https://api.github.com/users/onema/repos",
            "events_url": "https://api.github.com/users/onema/events{/privacy}",
            "received_events_url": "https://api.github.com/users/onema/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Shouldn't this method return the extended token value? after all is called getExtendedAccessToken, right?\n",
        "created_at": "2012-06-23T18:50:23Z",
        "updated_at": "2012-06-29T22:46:22Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1038201",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1038201"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1038201"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1079462",
        "pull_request_review_id": null,
        "id": 1079462,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNzk0NjI=",
        "diff_hunk": "@@ -330,6 +330,44 @@ public function setAccessToken($access_token) {\n   }\n \n   /**\n+   * Extend an access token, while removing the short-lived token that might have been generated via client-side flow.\n+   * Thanks to http://stackoverflow.com/questions/486896/adding-a-parameter-to-the-url-with-javascript for the workaround\n+   */\n+  public function getExtendedAccessToken() {\n+    try {\n+      // need to circumvent json_decode by calling _oauthRequest\n+      // directly, since response isn't JSON format.\n+      $access_token_response =\n+        $this->_oauthRequest(\n+          $this->getUrl('graph', '/oauth/access_token'),\n+          $params = array(    'client_id' => $this->getAppId(),\n+          'client_secret' => $this->getAppSecret(),\n+          'grant_type'=>'fb_exchange_token',\n+          'fb_exchange_token'=>$this->getAccessToken(),\n+        ));\n+      } catch (FacebookApiException $e) {\n+        // most likely that user very recently revoked authorization.\n+        // In any event, we don't have an access token, so say so.\n+        return false;\n+      }\n+  \n+      if (empty($access_token_response)) {\n+        return false;\n+      }\n+      \n+      $response_params = array();\n+      parse_str($access_token_response, $response_params);\n+      \n+      if (!isset($response_params['access_token'])) {\n+        return false;\n+      }\n+      \n+      $this->destroySession();\n+      \n+      $this->setPersistentData('access_token', $response_params['access_token']);",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 38,
        "commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "original_commit_id": "e22aa12604f2b92ee23c793fc6137bb40c648431",
        "user": {
            "login": "mattwkelly",
            "id": 174449,
            "node_id": "MDQ6VXNlcjE3NDQ0OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/174449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattwkelly",
            "html_url": "https://github.com/mattwkelly",
            "followers_url": "https://api.github.com/users/mattwkelly/followers",
            "following_url": "https://api.github.com/users/mattwkelly/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattwkelly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattwkelly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattwkelly/subscriptions",
            "organizations_url": "https://api.github.com/users/mattwkelly/orgs",
            "repos_url": "https://api.github.com/users/mattwkelly/repos",
            "events_url": "https://api.github.com/users/mattwkelly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattwkelly/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@onema: I'll change the function name to set*.  Sound reasonable?\n",
        "created_at": "2012-06-29T22:33:58Z",
        "updated_at": "2012-06-29T22:46:22Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1079462",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1079462"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1079462"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1080671",
        "pull_request_review_id": null,
        "id": 1080671,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODA2NzE=",
        "diff_hunk": "@@ -330,6 +330,44 @@ public function setAccessToken($access_token) {\n   }\n \n   /**\n+   * Extend an access token, while removing the short-lived token that might have been generated via client-side flow.\n+   * Thanks to http://stackoverflow.com/questions/486896/adding-a-parameter-to-the-url-with-javascript for the workaround\n+   */\n+  public function getExtendedAccessToken() {\n+    try {\n+      // need to circumvent json_decode by calling _oauthRequest\n+      // directly, since response isn't JSON format.\n+      $access_token_response =\n+        $this->_oauthRequest(\n+          $this->getUrl('graph', '/oauth/access_token'),\n+          $params = array(    'client_id' => $this->getAppId(),\n+          'client_secret' => $this->getAppSecret(),\n+          'grant_type'=>'fb_exchange_token',\n+          'fb_exchange_token'=>$this->getAccessToken(),\n+        ));\n+      } catch (FacebookApiException $e) {\n+        // most likely that user very recently revoked authorization.\n+        // In any event, we don't have an access token, so say so.\n+        return false;\n+      }\n+  \n+      if (empty($access_token_response)) {\n+        return false;\n+      }\n+      \n+      $response_params = array();\n+      parse_str($access_token_response, $response_params);\n+      \n+      if (!isset($response_params['access_token'])) {\n+        return false;\n+      }\n+      \n+      $this->destroySession();\n+      \n+      $this->setPersistentData('access_token', $response_params['access_token']);",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 38,
        "commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "original_commit_id": "e22aa12604f2b92ee23c793fc6137bb40c648431",
        "user": {
            "login": "onema",
            "id": 532616,
            "node_id": "MDQ6VXNlcjUzMjYxNg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/532616?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/onema",
            "html_url": "https://github.com/onema",
            "followers_url": "https://api.github.com/users/onema/followers",
            "following_url": "https://api.github.com/users/onema/following{/other_user}",
            "gists_url": "https://api.github.com/users/onema/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/onema/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/onema/subscriptions",
            "organizations_url": "https://api.github.com/users/onema/orgs",
            "repos_url": "https://api.github.com/users/onema/repos",
            "events_url": "https://api.github.com/users/onema/events{/privacy}",
            "received_events_url": "https://api.github.com/users/onema/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "actually get\\* is not a bad name, just return the extended token you just requested for. set\\* is not a very good name because you are not setting anything (not passing any parameters, see other setter methods). \n\nIf you really don't want to return the token I think request\\* would be a better name?\n",
        "created_at": "2012-06-30T15:21:30Z",
        "updated_at": "2012-06-30T15:21:30Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1080671",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1080671"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1080671"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1080676",
        "pull_request_review_id": null,
        "id": 1080676,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODA2NzY=",
        "diff_hunk": "@@ -330,6 +330,49 @@ public function setAccessToken($access_token) {\n   }\n \n   /**\n+   * Extend an access token, while removing the short-lived token that might\n+   * have been generated via client-side flow. Thanks to http://bit.ly/b0Pt0H\n+   * for the workaround.\n+   */\n+  public function setExtendedAccessToken() {\n+    try {\n+      // need to circumvent json_decode by calling _oauthRequest\n+      // directly, since response isn't JSON format.\n+      $access_token_response = $this->_oauthRequest(\n+        $this->getUrl('graph', '/oauth/access_token'),\n+        $params = array(\n+          'client_id' => $this->getAppId(),\n+          'client_secret' => $this->getAppSecret(),\n+          'grant_type' => 'fb_exchange_token',\n+          'fb_exchange_token' => $this->getAccessToken(),\n+        )\n+      );\n+    }\n+    catch (FacebookApiException $e) {\n+      // most likely that user very recently revoked authorization.\n+      // In any event, we don't have an access token, so say so.\n+      return false;\n+    }\n+  \n+    if (empty($access_token_response)) {\n+      return false;\n+    }\n+      \n+    $response_params = array();\n+    parse_str($access_token_response, $response_params);\n+    \n+    if (!isset($response_params['access_token'])) {\n+      return false;\n+    }\n+    \n+    $this->destroySession();",
        "path": "src/base_facebook.php",
        "position": 39,
        "original_position": 39,
        "commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "original_commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "user": {
            "login": "onema",
            "id": 532616,
            "node_id": "MDQ6VXNlcjUzMjYxNg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/532616?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/onema",
            "html_url": "https://github.com/onema",
            "followers_url": "https://api.github.com/users/onema/followers",
            "following_url": "https://api.github.com/users/onema/following{/other_user}",
            "gists_url": "https://api.github.com/users/onema/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/onema/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/onema/subscriptions",
            "organizations_url": "https://api.github.com/users/onema/orgs",
            "repos_url": "https://api.github.com/users/onema/repos",
            "events_url": "https://api.github.com/users/onema/events{/privacy}",
            "received_events_url": "https://api.github.com/users/onema/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should you be destroying the session here? The only methods that use this in the BaseFacebook class are _rest and throwAPIException. this can cause problems if you don't leave it up to the user of the class to kill the session. Makes sense? \n",
        "created_at": "2012-06-30T15:27:15Z",
        "updated_at": "2012-06-30T15:27:15Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1080676",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1080676"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1080676"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1093136",
        "pull_request_review_id": null,
        "id": 1093136,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTMxMzY=",
        "diff_hunk": "@@ -330,6 +330,49 @@ public function setAccessToken($access_token) {\n   }\n \n   /**\n+   * Extend an access token, while removing the short-lived token that might\n+   * have been generated via client-side flow. Thanks to http://bit.ly/b0Pt0H\n+   * for the workaround.\n+   */\n+  public function setExtendedAccessToken() {\n+    try {\n+      // need to circumvent json_decode by calling _oauthRequest\n+      // directly, since response isn't JSON format.\n+      $access_token_response = $this->_oauthRequest(\n+        $this->getUrl('graph', '/oauth/access_token'),\n+        $params = array(\n+          'client_id' => $this->getAppId(),\n+          'client_secret' => $this->getAppSecret(),\n+          'grant_type' => 'fb_exchange_token',\n+          'fb_exchange_token' => $this->getAccessToken(),\n+        )\n+      );\n+    }\n+    catch (FacebookApiException $e) {\n+      // most likely that user very recently revoked authorization.\n+      // In any event, we don't have an access token, so say so.\n+      return false;\n+    }\n+  \n+    if (empty($access_token_response)) {\n+      return false;\n+    }\n+      \n+    $response_params = array();\n+    parse_str($access_token_response, $response_params);\n+    \n+    if (!isset($response_params['access_token'])) {\n+      return false;\n+    }\n+    \n+    $this->destroySession();",
        "path": "src/base_facebook.php",
        "position": 39,
        "original_position": 39,
        "commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "original_commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "user": {
            "login": "mattwkelly",
            "id": 174449,
            "node_id": "MDQ6VXNlcjE3NDQ0OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/174449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattwkelly",
            "html_url": "https://github.com/mattwkelly",
            "followers_url": "https://api.github.com/users/mattwkelly/followers",
            "following_url": "https://api.github.com/users/mattwkelly/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattwkelly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattwkelly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattwkelly/subscriptions",
            "organizations_url": "https://api.github.com/users/mattwkelly/orgs",
            "repos_url": "https://api.github.com/users/mattwkelly/repos",
            "events_url": "https://api.github.com/users/mattwkelly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattwkelly/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What problems can it lead to?\n",
        "created_at": "2012-07-03T15:13:43Z",
        "updated_at": "2012-07-03T15:13:43Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1093136",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1093136"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1093136"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1093145",
        "pull_request_review_id": null,
        "id": 1093145,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTMxNDU=",
        "diff_hunk": "@@ -330,6 +330,44 @@ public function setAccessToken($access_token) {\n   }\n \n   /**\n+   * Extend an access token, while removing the short-lived token that might have been generated via client-side flow.\n+   * Thanks to http://stackoverflow.com/questions/486896/adding-a-parameter-to-the-url-with-javascript for the workaround\n+   */\n+  public function getExtendedAccessToken() {\n+    try {\n+      // need to circumvent json_decode by calling _oauthRequest\n+      // directly, since response isn't JSON format.\n+      $access_token_response =\n+        $this->_oauthRequest(\n+          $this->getUrl('graph', '/oauth/access_token'),\n+          $params = array(    'client_id' => $this->getAppId(),\n+          'client_secret' => $this->getAppSecret(),\n+          'grant_type'=>'fb_exchange_token',\n+          'fb_exchange_token'=>$this->getAccessToken(),\n+        ));\n+      } catch (FacebookApiException $e) {\n+        // most likely that user very recently revoked authorization.\n+        // In any event, we don't have an access token, so say so.\n+        return false;\n+      }\n+  \n+      if (empty($access_token_response)) {\n+        return false;\n+      }\n+      \n+      $response_params = array();\n+      parse_str($access_token_response, $response_params);\n+      \n+      if (!isset($response_params['access_token'])) {\n+        return false;\n+      }\n+      \n+      $this->destroySession();\n+      \n+      $this->setPersistentData('access_token', $response_params['access_token']);",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 38,
        "commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "original_commit_id": "e22aa12604f2b92ee23c793fc6137bb40c648431",
        "user": {
            "login": "mattwkelly",
            "id": 174449,
            "node_id": "MDQ6VXNlcjE3NDQ0OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/174449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattwkelly",
            "html_url": "https://github.com/mattwkelly",
            "followers_url": "https://api.github.com/users/mattwkelly/followers",
            "following_url": "https://api.github.com/users/mattwkelly/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattwkelly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattwkelly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattwkelly/subscriptions",
            "organizations_url": "https://api.github.com/users/mattwkelly/orgs",
            "repos_url": "https://api.github.com/users/mattwkelly/repos",
            "events_url": "https://api.github.com/users/mattwkelly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattwkelly/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It is setting a new access token.\n",
        "created_at": "2012-07-03T15:14:35Z",
        "updated_at": "2012-07-03T15:14:35Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1093145",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1093145"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1093145"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1195850",
        "pull_request_review_id": null,
        "id": 1195850,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTU4NTA=",
        "diff_hunk": "@@ -330,6 +330,44 @@ public function setAccessToken($access_token) {\n   }\n \n   /**\n+   * Extend an access token, while removing the short-lived token that might have been generated via client-side flow.\n+   * Thanks to http://stackoverflow.com/questions/486896/adding-a-parameter-to-the-url-with-javascript for the workaround\n+   */\n+  public function getExtendedAccessToken() {\n+    try {\n+      // need to circumvent json_decode by calling _oauthRequest\n+      // directly, since response isn't JSON format.\n+      $access_token_response =\n+        $this->_oauthRequest(\n+          $this->getUrl('graph', '/oauth/access_token'),\n+          $params = array(    'client_id' => $this->getAppId(),\n+          'client_secret' => $this->getAppSecret(),\n+          'grant_type'=>'fb_exchange_token',\n+          'fb_exchange_token'=>$this->getAccessToken(),\n+        ));\n+      } catch (FacebookApiException $e) {\n+        // most likely that user very recently revoked authorization.\n+        // In any event, we don't have an access token, so say so.\n+        return false;\n+      }\n+  \n+      if (empty($access_token_response)) {\n+        return false;\n+      }\n+      \n+      $response_params = array();\n+      parse_str($access_token_response, $response_params);\n+      \n+      if (!isset($response_params['access_token'])) {\n+        return false;\n+      }\n+      \n+      $this->destroySession();\n+      \n+      $this->setPersistentData('access_token', $response_params['access_token']);",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 38,
        "commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "original_commit_id": "e22aa12604f2b92ee23c793fc6137bb40c648431",
        "user": {
            "login": "MarcHoogvliet",
            "id": 1402181,
            "node_id": "MDQ6VXNlcjE0MDIxODE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1402181?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcHoogvliet",
            "html_url": "https://github.com/MarcHoogvliet",
            "followers_url": "https://api.github.com/users/MarcHoogvliet/followers",
            "following_url": "https://api.github.com/users/MarcHoogvliet/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarcHoogvliet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarcHoogvliet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarcHoogvliet/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcHoogvliet/orgs",
            "repos_url": "https://api.github.com/users/MarcHoogvliet/repos",
            "events_url": "https://api.github.com/users/MarcHoogvliet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarcHoogvliet/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hey, I posted this in January on StackOverflow, called it getExtendedAccessToken which seemed to make the most sense to me back then. I found most use in it when it returns the new accesstoken. \n\nYou can see it here, http://stackoverflow.com/questions/8982025/how-to-extend-access-token-validity-since-offline-access-deprecation/9035036#9035036\n\nI'm also not sure why you'd want to destroy the session in there?\n",
        "created_at": "2012-07-19T11:19:06Z",
        "updated_at": "2012-07-19T15:31:17Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1195850",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1195850"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1195850"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1246847",
        "pull_request_review_id": null,
        "id": 1246847,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDY4NDc=",
        "diff_hunk": "@@ -330,6 +330,44 @@ public function setAccessToken($access_token) {\n   }\n \n   /**\n+   * Extend an access token, while removing the short-lived token that might have been generated via client-side flow.\n+   * Thanks to http://stackoverflow.com/questions/486896/adding-a-parameter-to-the-url-with-javascript for the workaround\n+   */\n+  public function getExtendedAccessToken() {\n+    try {\n+      // need to circumvent json_decode by calling _oauthRequest\n+      // directly, since response isn't JSON format.\n+      $access_token_response =\n+        $this->_oauthRequest(\n+          $this->getUrl('graph', '/oauth/access_token'),\n+          $params = array(    'client_id' => $this->getAppId(),\n+          'client_secret' => $this->getAppSecret(),\n+          'grant_type'=>'fb_exchange_token',\n+          'fb_exchange_token'=>$this->getAccessToken(),\n+        ));\n+      } catch (FacebookApiException $e) {\n+        // most likely that user very recently revoked authorization.\n+        // In any event, we don't have an access token, so say so.\n+        return false;\n+      }\n+  \n+      if (empty($access_token_response)) {\n+        return false;\n+      }\n+      \n+      $response_params = array();\n+      parse_str($access_token_response, $response_params);\n+      \n+      if (!isset($response_params['access_token'])) {\n+        return false;\n+      }\n+      \n+      $this->destroySession();\n+      \n+      $this->setPersistentData('access_token', $response_params['access_token']);",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 38,
        "commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "original_commit_id": "e22aa12604f2b92ee23c793fc6137bb40c648431",
        "user": {
            "login": "mattwkelly",
            "id": 174449,
            "node_id": "MDQ6VXNlcjE3NDQ0OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/174449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattwkelly",
            "html_url": "https://github.com/mattwkelly",
            "followers_url": "https://api.github.com/users/mattwkelly/followers",
            "following_url": "https://api.github.com/users/mattwkelly/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattwkelly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattwkelly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattwkelly/subscriptions",
            "organizations_url": "https://api.github.com/users/mattwkelly/orgs",
            "repos_url": "https://api.github.com/users/mattwkelly/repos",
            "events_url": "https://api.github.com/users/mattwkelly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattwkelly/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@JoinScribbly, if you don't destroy the session, you'll end up with two, which can lead to all sorts of problems.\n",
        "created_at": "2012-07-26T18:27:22Z",
        "updated_at": "2012-07-26T18:27:22Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1246847",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1246847"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r1246847"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1638823",
        "pull_request_review_id": null,
        "id": 1638823,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzg4MjM=",
        "diff_hunk": "@@ -320,6 +331,47 @@ public function getFileUploadSupport() {\n   }\n \n   /**\n+   * Sets the proxy to be used when doing http requests to the rmote servers",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 35,
        "commit_id": "1d083d88d9bfe13fcb881711e6af6083cd11c370",
        "original_commit_id": "716657efef9ed6c944bde7b35946ad510ae571b3",
        "user": {
            "login": "nikcorg",
            "id": 816988,
            "node_id": "MDQ6VXNlcjgxNjk4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/816988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikcorg",
            "html_url": "https://github.com/nikcorg",
            "followers_url": "https://api.github.com/users/nikcorg/followers",
            "following_url": "https://api.github.com/users/nikcorg/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikcorg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikcorg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikcorg/subscriptions",
            "organizations_url": "https://api.github.com/users/nikcorg/orgs",
            "repos_url": "https://api.github.com/users/nikcorg/repos",
            "events_url": "https://api.github.com/users/nikcorg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikcorg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If you're interested, there's a typo on this line. At the very end it says \"rmote servers\" which should be \"remote servers\".\n",
        "created_at": "2012-09-19T12:07:00Z",
        "updated_at": "2012-09-19T12:38:58Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/36#discussion_r1638823",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/36",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1638823"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/36#discussion_r1638823"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/36"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1638827",
        "pull_request_review_id": null,
        "id": 1638827,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzg4Mjc=",
        "diff_hunk": "@@ -320,6 +331,47 @@ public function getFileUploadSupport() {\n   }\n \n   /**\n+   * Sets the proxy to be used when doing http requests to the rmote servers\n+   *\n+   * @param string $proxyUrl The procy URL string, including scheme, username,",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 37,
        "commit_id": "1d083d88d9bfe13fcb881711e6af6083cd11c370",
        "original_commit_id": "716657efef9ed6c944bde7b35946ad510ae571b3",
        "user": {
            "login": "nikcorg",
            "id": 816988,
            "node_id": "MDQ6VXNlcjgxNjk4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/816988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikcorg",
            "html_url": "https://github.com/nikcorg",
            "followers_url": "https://api.github.com/users/nikcorg/followers",
            "following_url": "https://api.github.com/users/nikcorg/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikcorg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikcorg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikcorg/subscriptions",
            "organizations_url": "https://api.github.com/users/nikcorg/orgs",
            "repos_url": "https://api.github.com/users/nikcorg/repos",
            "events_url": "https://api.github.com/users/nikcorg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikcorg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Typo:  \"The procy\" should be \"The proxy\"\n",
        "created_at": "2012-09-19T12:08:01Z",
        "updated_at": "2012-09-19T12:38:58Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/36#discussion_r1638827",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/36",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1638827"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/36#discussion_r1638827"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/36"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1638902",
        "pull_request_review_id": null,
        "id": 1638902,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzg5MDI=",
        "diff_hunk": "@@ -320,6 +331,47 @@ public function getFileUploadSupport() {\n   }\n \n   /**\n+   * Sets the proxy to be used when doing http requests to the rmote servers",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 35,
        "commit_id": "1d083d88d9bfe13fcb881711e6af6083cd11c370",
        "original_commit_id": "716657efef9ed6c944bde7b35946ad510ae571b3",
        "user": {
            "login": "moisadoru",
            "id": 109328,
            "node_id": "MDQ6VXNlcjEwOTMyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/109328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/moisadoru",
            "html_url": "https://github.com/moisadoru",
            "followers_url": "https://api.github.com/users/moisadoru/followers",
            "following_url": "https://api.github.com/users/moisadoru/following{/other_user}",
            "gists_url": "https://api.github.com/users/moisadoru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/moisadoru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/moisadoru/subscriptions",
            "organizations_url": "https://api.github.com/users/moisadoru/orgs",
            "repos_url": "https://api.github.com/users/moisadoru/repos",
            "events_url": "https://api.github.com/users/moisadoru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/moisadoru/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks Niklas!\n",
        "created_at": "2012-09-19T12:17:22Z",
        "updated_at": "2012-09-19T12:38:58Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/36#discussion_r1638902",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/36",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/1638902"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/36#discussion_r1638902"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/36"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/2642216",
        "pull_request_review_id": null,
        "id": 2642216,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDIyMTY=",
        "diff_hunk": "@@ -335,6 +336,34 @@ public function testGetUserFromSignedRequest() {\n                         'Failed to get user ID from a valid signed request.');\n   }\n \n+  public function testSignedRequestRewrite(){\n+    $facebook = new FBRewrite(array(\n+      'appId'  => self::APP_ID,\n+      'secret' => self::SECRET,\n+    ));\n+\n+    $_REQUEST['signed_request'] = self::kValidSignedRequest(self::TEST_USER, 'Hello sweetie');\n+\n+    $this->assertEquals('499834690', $facebook->getUser(),",
        "path": "tests/tests.php",
        "position": 44,
        "original_position": 44,
        "commit_id": "88140cd091c0fb9c655604471eb35473b8f9f790",
        "original_commit_id": "88140cd091c0fb9c655604471eb35473b8f9f790",
        "user": {
            "login": "oyvindkinsey",
            "id": 108034,
            "node_id": "MDQ6VXNlcjEwODAzNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/108034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oyvindkinsey",
            "html_url": "https://github.com/oyvindkinsey",
            "followers_url": "https://api.github.com/users/oyvindkinsey/followers",
            "following_url": "https://api.github.com/users/oyvindkinsey/following{/other_user}",
            "gists_url": "https://api.github.com/users/oyvindkinsey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oyvindkinsey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oyvindkinsey/subscriptions",
            "organizations_url": "https://api.github.com/users/oyvindkinsey/orgs",
            "repos_url": "https://api.github.com/users/oyvindkinsey/repos",
            "events_url": "https://api.github.com/users/oyvindkinsey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oyvindkinsey/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`self::TEST_USER`\n",
        "created_at": "2013-01-14T22:12:02Z",
        "updated_at": "2013-01-14T22:12:02Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/56#discussion_r2642216",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/56",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/2642216"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/56#discussion_r2642216"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/56"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/2642232",
        "pull_request_review_id": null,
        "id": 2642232,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDIyMzI=",
        "diff_hunk": "@@ -335,6 +336,34 @@ public function testGetUserFromSignedRequest() {\n                         'Failed to get user ID from a valid signed request.');\n   }\n \n+  public function testSignedRequestRewrite(){\n+    $facebook = new FBRewrite(array(\n+      'appId'  => self::APP_ID,\n+      'secret' => self::SECRET,\n+    ));\n+\n+    $_REQUEST['signed_request'] = self::kValidSignedRequest(self::TEST_USER, 'Hello sweetie');\n+\n+    $this->assertEquals('499834690', $facebook->getUser(),\n+                        'Failed to get user ID from a valid signed request.');\n+\n+    $this->assertEquals('Hello sweetie', $facebook->getAccessToken(),\n+                        'Failed to get access token from signed request');\n+\n+    $facebook->uncache();\n+\n+    $_REQUEST['signed_request'] = self::kValidSignedRequest(self::TEST_USER_2, 'spoilers');\n+\n+    $this->assertEquals('499835484', $facebook->getUser(),",
        "path": "tests/tests.php",
        "position": 54,
        "original_position": 54,
        "commit_id": "88140cd091c0fb9c655604471eb35473b8f9f790",
        "original_commit_id": "88140cd091c0fb9c655604471eb35473b8f9f790",
        "user": {
            "login": "oyvindkinsey",
            "id": 108034,
            "node_id": "MDQ6VXNlcjEwODAzNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/108034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oyvindkinsey",
            "html_url": "https://github.com/oyvindkinsey",
            "followers_url": "https://api.github.com/users/oyvindkinsey/followers",
            "following_url": "https://api.github.com/users/oyvindkinsey/following{/other_user}",
            "gists_url": "https://api.github.com/users/oyvindkinsey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oyvindkinsey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oyvindkinsey/subscriptions",
            "organizations_url": "https://api.github.com/users/oyvindkinsey/orgs",
            "repos_url": "https://api.github.com/users/oyvindkinsey/repos",
            "events_url": "https://api.github.com/users/oyvindkinsey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oyvindkinsey/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`self::TEST_USER_2`\n",
        "created_at": "2013-01-14T22:12:38Z",
        "updated_at": "2013-01-14T22:12:38Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/56#discussion_r2642232",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/56",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/2642232"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/56#discussion_r2642232"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/56"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/2642243",
        "pull_request_review_id": null,
        "id": 2642243,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDIyNDM=",
        "diff_hunk": "@@ -335,6 +336,34 @@ public function testGetUserFromSignedRequest() {\n                         'Failed to get user ID from a valid signed request.');\n   }\n \n+  public function testSignedRequestRewrite(){\n+    $facebook = new FBRewrite(array(\n+      'appId'  => self::APP_ID,\n+      'secret' => self::SECRET,\n+    ));\n+\n+    $_REQUEST['signed_request'] = self::kValidSignedRequest(self::TEST_USER, 'Hello sweetie');\n+\n+    $this->assertEquals('499834690', $facebook->getUser(),\n+                        'Failed to get user ID from a valid signed request.');\n+\n+    $this->assertEquals('Hello sweetie', $facebook->getAccessToken(),\n+                        'Failed to get access token from signed request');\n+\n+    $facebook->uncache();\n+\n+    $_REQUEST['signed_request'] = self::kValidSignedRequest(self::TEST_USER_2, 'spoilers');\n+\n+    $this->assertEquals('499835484', $facebook->getUser(),\n+                        'Failed to get user ID from a valid signed request.');\n+\n+    $this->assertNotEquals('Hello sweetie', $facebook->getAccessToken(),\n+                           'Failed to get access token from signed request');",
        "path": "tests/tests.php",
        "position": 58,
        "original_position": 58,
        "commit_id": "88140cd091c0fb9c655604471eb35473b8f9f790",
        "original_commit_id": "88140cd091c0fb9c655604471eb35473b8f9f790",
        "user": {
            "login": "oyvindkinsey",
            "id": 108034,
            "node_id": "MDQ6VXNlcjEwODAzNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/108034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oyvindkinsey",
            "html_url": "https://github.com/oyvindkinsey",
            "followers_url": "https://api.github.com/users/oyvindkinsey/followers",
            "following_url": "https://api.github.com/users/oyvindkinsey/following{/other_user}",
            "gists_url": "https://api.github.com/users/oyvindkinsey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oyvindkinsey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oyvindkinsey/subscriptions",
            "organizations_url": "https://api.github.com/users/oyvindkinsey/orgs",
            "repos_url": "https://api.github.com/users/oyvindkinsey/repos",
            "events_url": "https://api.github.com/users/oyvindkinsey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oyvindkinsey/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is redundant due to the next test.\n",
        "created_at": "2013-01-14T22:13:07Z",
        "updated_at": "2013-01-14T22:13:07Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/56#discussion_r2642243",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/56",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/2642243"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/56#discussion_r2642243"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/56"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/2642276",
        "pull_request_review_id": null,
        "id": 2642276,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDIyNzY=",
        "diff_hunk": "@@ -529,6 +529,11 @@ protected function getUserFromAvailableData() {\n     if ($signed_request) {\n       if (array_key_exists('user_id', $signed_request)) {\n         $user = $signed_request['user_id'];\n+\n+        if($user != $this->user || $user != $this->getPersistentData('user_id')){",
        "path": "src/base_facebook.php",
        "position": 5,
        "original_position": 5,
        "commit_id": "88140cd091c0fb9c655604471eb35473b8f9f790",
        "original_commit_id": "88140cd091c0fb9c655604471eb35473b8f9f790",
        "user": {
            "login": "oyvindkinsey",
            "id": 108034,
            "node_id": "MDQ6VXNlcjEwODAzNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/108034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oyvindkinsey",
            "html_url": "https://github.com/oyvindkinsey",
            "followers_url": "https://api.github.com/users/oyvindkinsey/followers",
            "following_url": "https://api.github.com/users/oyvindkinsey/following{/other_user}",
            "gists_url": "https://api.github.com/users/oyvindkinsey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oyvindkinsey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oyvindkinsey/subscriptions",
            "organizations_url": "https://api.github.com/users/oyvindkinsey/orgs",
            "repos_url": "https://api.github.com/users/oyvindkinsey/repos",
            "events_url": "https://api.github.com/users/oyvindkinsey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oyvindkinsey/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If `$this->user` is set, then you will never end up in this codepath, so only checking the second conditional should be enough, or you end up clearing even when there is nothing to clear.\n",
        "created_at": "2013-01-14T22:15:01Z",
        "updated_at": "2013-01-14T22:15:01Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/56#discussion_r2642276",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/56",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/2642276"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/56#discussion_r2642276"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/56"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/4332739",
        "pull_request_review_id": null,
        "id": 4332739,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3Mzk=",
        "diff_hunk": "@@ -1 +1,2 @@\n /coverage/\n+.DS_Store",
        "path": ".gitignore",
        "position": 2,
        "original_position": 2,
        "commit_id": "795640d5beb717538c04c8b23b0d7c9b1a7574a7",
        "original_commit_id": "795640d5beb717538c04c8b23b0d7c9b1a7574a7",
        "user": {
            "login": "LasseRafn",
            "id": 2689341,
            "node_id": "MDQ6VXNlcjI2ODkzNDE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2689341?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LasseRafn",
            "html_url": "https://github.com/LasseRafn",
            "followers_url": "https://api.github.com/users/LasseRafn/followers",
            "following_url": "https://api.github.com/users/LasseRafn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LasseRafn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LasseRafn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LasseRafn/subscriptions",
            "organizations_url": "https://api.github.com/users/LasseRafn/orgs",
            "repos_url": "https://api.github.com/users/LasseRafn/repos",
            "events_url": "https://api.github.com/users/LasseRafn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LasseRafn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Remove\n",
        "created_at": "2013-05-22T06:31:18Z",
        "updated_at": "2013-05-22T06:31:18Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/77#discussion_r4332739",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/77",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/4332739"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/77#discussion_r4332739"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/4332753",
        "pull_request_review_id": null,
        "id": 4332753,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3NTM=",
        "diff_hunk": "@@ -1 +1,2 @@\n /coverage/\n+.DS_Store",
        "path": ".gitignore",
        "position": 2,
        "original_position": 2,
        "commit_id": "795640d5beb717538c04c8b23b0d7c9b1a7574a7",
        "original_commit_id": "795640d5beb717538c04c8b23b0d7c9b1a7574a7",
        "user": {
            "login": "Veilkrand",
            "id": 155007,
            "node_id": "MDQ6VXNlcjE1NTAwNw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/155007?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Veilkrand",
            "html_url": "https://github.com/Veilkrand",
            "followers_url": "https://api.github.com/users/Veilkrand/followers",
            "following_url": "https://api.github.com/users/Veilkrand/following{/other_user}",
            "gists_url": "https://api.github.com/users/Veilkrand/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Veilkrand/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Veilkrand/subscriptions",
            "organizations_url": "https://api.github.com/users/Veilkrand/orgs",
            "repos_url": "https://api.github.com/users/Veilkrand/repos",
            "events_url": "https://api.github.com/users/Veilkrand/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Veilkrand/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do you mean the file? It's already done\n",
        "created_at": "2013-05-22T06:33:34Z",
        "updated_at": "2013-05-22T06:33:34Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/77#discussion_r4332753",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/77",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/4332753"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/77#discussion_r4332753"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/4332766",
        "pull_request_review_id": null,
        "id": 4332766,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3NjY=",
        "diff_hunk": "@@ -1 +1,2 @@\n /coverage/\n+.DS_Store",
        "path": ".gitignore",
        "position": 2,
        "original_position": 2,
        "commit_id": "795640d5beb717538c04c8b23b0d7c9b1a7574a7",
        "original_commit_id": "795640d5beb717538c04c8b23b0d7c9b1a7574a7",
        "user": {
            "login": "LasseRafn",
            "id": 2689341,
            "node_id": "MDQ6VXNlcjI2ODkzNDE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2689341?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LasseRafn",
            "html_url": "https://github.com/LasseRafn",
            "followers_url": "https://api.github.com/users/LasseRafn/followers",
            "following_url": "https://api.github.com/users/LasseRafn/following{/other_user}",
            "gists_url": "https://api.github.com/users/LasseRafn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LasseRafn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LasseRafn/subscriptions",
            "organizations_url": "https://api.github.com/users/LasseRafn/orgs",
            "repos_url": "https://api.github.com/users/LasseRafn/repos",
            "events_url": "https://api.github.com/users/LasseRafn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LasseRafn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, great! :+1: \n",
        "created_at": "2013-05-22T06:35:02Z",
        "updated_at": "2013-05-22T06:35:02Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/77#discussion_r4332766",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/77",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/4332766"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/77#discussion_r4332766"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/8009321",
        "pull_request_review_id": null,
        "id": 8009321,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwMDkzMjE=",
        "diff_hunk": "@@ -330,6 +330,49 @@ public function setAccessToken($access_token) {\n   }\n \n   /**\n+   * Extend an access token, while removing the short-lived token that might\n+   * have been generated via client-side flow. Thanks to http://bit.ly/b0Pt0H\n+   * for the workaround.\n+   */\n+  public function setExtendedAccessToken() {\n+    try {\n+      // need to circumvent json_decode by calling _oauthRequest\n+      // directly, since response isn't JSON format.\n+      $access_token_response = $this->_oauthRequest(\n+        $this->getUrl('graph', '/oauth/access_token'),\n+        $params = array(\n+          'client_id' => $this->getAppId(),\n+          'client_secret' => $this->getAppSecret(),\n+          'grant_type' => 'fb_exchange_token',\n+          'fb_exchange_token' => $this->getAccessToken(),\n+        )\n+      );\n+    }\n+    catch (FacebookApiException $e) {\n+      // most likely that user very recently revoked authorization.\n+      // In any event, we don't have an access token, so say so.\n+      return false;\n+    }\n+  \n+    if (empty($access_token_response)) {\n+      return false;\n+    }\n+      \n+    $response_params = array();\n+    parse_str($access_token_response, $response_params);\n+    \n+    if (!isset($response_params['access_token'])) {\n+      return false;\n+    }\n+    \n+    $this->destroySession();",
        "path": "src/base_facebook.php",
        "position": 39,
        "original_position": 39,
        "commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "original_commit_id": "f336af0f6631743573a797c729d4e740e57001a3",
        "user": {
            "login": "roman02",
            "id": 1476055,
            "node_id": "MDQ6VXNlcjE0NzYwNTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1476055?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/roman02",
            "html_url": "https://github.com/roman02",
            "followers_url": "https://api.github.com/users/roman02/followers",
            "following_url": "https://api.github.com/users/roman02/following{/other_user}",
            "gists_url": "https://api.github.com/users/roman02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/roman02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/roman02/subscriptions",
            "organizations_url": "https://api.github.com/users/roman02/orgs",
            "repos_url": "https://api.github.com/users/roman02/repos",
            "events_url": "https://api.github.com/users/roman02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/roman02/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is there a benefit in destroying the session here?\n",
        "created_at": "2013-11-30T00:26:26Z",
        "updated_at": "2013-11-30T00:26:26Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r8009321",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/8009321"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/24#discussion_r8009321"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/8510929",
        "pull_request_review_id": null,
        "id": 8510929,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MTA5Mjk=",
        "diff_hunk": "@@ -721,7 +721,7 @@ protected function getMetadataCookieName() {\n    *               code could not be determined.\n    */\n   protected function getCode() {\n-    if (!isset($_REQUEST['code']) || !isset($_REQUEST['state'])) {\n+    if (!isset($_REQUEST['code']) || !isset($_REQUEST['state']) || !isset($this->state)) {\n       return false;\n     }\n     if ($this->state === $_REQUEST['state']) {",
        "path": "src/base_facebook.php",
        "position": 8,
        "original_position": 8,
        "commit_id": "48d2e382ffd45bcdc071304521a58f3d47b7a50a",
        "original_commit_id": "48d2e382ffd45bcdc071304521a58f3d47b7a50a",
        "user": {
            "login": "jimmykane",
            "id": 1268723,
            "node_id": "MDQ6VXNlcjEyNjg3MjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1268723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimmykane",
            "html_url": "https://github.com/jimmykane",
            "followers_url": "https://api.github.com/users/jimmykane/followers",
            "following_url": "https://api.github.com/users/jimmykane/following{/other_user}",
            "gists_url": "https://api.github.com/users/jimmykane/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jimmykane/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jimmykane/subscriptions",
            "organizations_url": "https://api.github.com/users/jimmykane/orgs",
            "repos_url": "https://api.github.com/users/jimmykane/repos",
            "events_url": "https://api.github.com/users/jimmykane/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jimmykane/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Question not for the pull request (that's ok) but for the following as noted in the start of the block.\nShouldn't inside this block after nullifying the state, also nullify the persistent state?\nWhen a new facebook object is initialized the state is read from persistent data. This is ok to check against CSRF. \nBut when the check is done then the state is read again and fires up again a message. \nThis happens also in this pull request, and in all previous commits since v3.0.0 or so. \n\nExample: \n\n`user` gets redirected to login controller, then form the login controller to facebook (state is set), then to user page. User hits back in the browser and goes to the login controller. State remains in the REQUEST and state is read from persistent (because was not nullified) and thus an invalid CSRF error. \n\nI would have cleared the persistent state but did not in doubt of what affect such action could have on the shared session since I have not quite indulged to it\n",
        "created_at": "2013-12-20T21:08:34Z",
        "updated_at": "2013-12-20T21:08:34Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/134#discussion_r8510929",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/134",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/8510929"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/134#discussion_r8510929"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/8993529",
        "pull_request_review_id": null,
        "id": 8993529,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5OTM1Mjk=",
        "diff_hunk": "@@ -617,7 +617,8 @@ protected function getUserFromAvailableData() {\n    */\n   public function getLoginUrl($params=array()) {\n     $this->establishCSRFTokenState();\n-    $currentUrl = $this->getCurrentUrl();\n+    // Do not need to generate current URL if it will be overwritten by user\n+    $currentUrl = $params['redirect_uri'] ? '' : $this->getCurrentUrl();",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 6,
        "commit_id": "2515f0568e7422886266adc228f90831c80109be",
        "original_commit_id": "7e9c16ba7604c228cd2a2c96e0d58c648672e62a",
        "user": {
            "login": "yguedidi",
            "id": 1480128,
            "node_id": "MDQ6VXNlcjE0ODAxMjg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1480128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yguedidi",
            "html_url": "https://github.com/yguedidi",
            "followers_url": "https://api.github.com/users/yguedidi/followers",
            "following_url": "https://api.github.com/users/yguedidi/following{/other_user}",
            "gists_url": "https://api.github.com/users/yguedidi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yguedidi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yguedidi/subscriptions",
            "organizations_url": "https://api.github.com/users/yguedidi/orgs",
            "repos_url": "https://api.github.com/users/yguedidi/repos",
            "events_url": "https://api.github.com/users/yguedidi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yguedidi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Shouldn't be `$currentUrl = isset($params['redirect_uri']) ? $params['redirect_uri'] : $this->getCurrentUrl();` ?\n",
        "created_at": "2014-01-19T19:21:10Z",
        "updated_at": "2014-01-19T19:49:04Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/145#discussion_r8993529",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/145",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/8993529"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/145#discussion_r8993529"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/145"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/8993684",
        "pull_request_review_id": null,
        "id": 8993684,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5OTM2ODQ=",
        "diff_hunk": "@@ -617,7 +617,8 @@ protected function getUserFromAvailableData() {\n    */\n   public function getLoginUrl($params=array()) {\n     $this->establishCSRFTokenState();\n-    $currentUrl = $this->getCurrentUrl();\n+    // Do not need to generate current URL if it will be overwritten by user\n+    $currentUrl = $params['redirect_uri'] ? '' : $this->getCurrentUrl();",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 6,
        "commit_id": "2515f0568e7422886266adc228f90831c80109be",
        "original_commit_id": "7e9c16ba7604c228cd2a2c96e0d58c648672e62a",
        "user": {
            "login": "bocharsky-bw",
            "id": 3317635,
            "node_id": "MDQ6VXNlcjMzMTc2MzU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3317635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bocharsky-bw",
            "html_url": "https://github.com/bocharsky-bw",
            "followers_url": "https://api.github.com/users/bocharsky-bw/followers",
            "following_url": "https://api.github.com/users/bocharsky-bw/following{/other_user}",
            "gists_url": "https://api.github.com/users/bocharsky-bw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bocharsky-bw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bocharsky-bw/subscriptions",
            "organizations_url": "https://api.github.com/users/bocharsky-bw/orgs",
            "repos_url": "https://api.github.com/users/bocharsky-bw/repos",
            "events_url": "https://api.github.com/users/bocharsky-bw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bocharsky-bw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks for correct remark!\n",
        "created_at": "2014-01-19T19:51:00Z",
        "updated_at": "2014-01-19T19:51:00Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/145#discussion_r8993684",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/145",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/8993684"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/145#discussion_r8993684"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/145"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/8993708",
        "pull_request_review_id": null,
        "id": 8993708,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5OTM3MDg=",
        "diff_hunk": "@@ -617,7 +617,8 @@ protected function getUserFromAvailableData() {\n    */\n   public function getLoginUrl($params=array()) {\n     $this->establishCSRFTokenState();\n-    $currentUrl = $this->getCurrentUrl();\n+    // Do not need to generate current URL if it will be overwritten by user\n+    $currentUrl = $params['redirect_uri'] ? '' : $this->getCurrentUrl();",
        "path": "src/base_facebook.php",
        "position": null,
        "original_position": 6,
        "commit_id": "2515f0568e7422886266adc228f90831c80109be",
        "original_commit_id": "7e9c16ba7604c228cd2a2c96e0d58c648672e62a",
        "user": {
            "login": "yguedidi",
            "id": 1480128,
            "node_id": "MDQ6VXNlcjE0ODAxMjg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1480128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yguedidi",
            "html_url": "https://github.com/yguedidi",
            "followers_url": "https://api.github.com/users/yguedidi/followers",
            "following_url": "https://api.github.com/users/yguedidi/following{/other_user}",
            "gists_url": "https://api.github.com/users/yguedidi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yguedidi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yguedidi/subscriptions",
            "organizations_url": "https://api.github.com/users/yguedidi/orgs",
            "repos_url": "https://api.github.com/users/yguedidi/repos",
            "events_url": "https://api.github.com/users/yguedidi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yguedidi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're welcome\n",
        "created_at": "2014-01-19T19:57:33Z",
        "updated_at": "2014-01-19T19:57:33Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/145#discussion_r8993708",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/145",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/8993708"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/145#discussion_r8993708"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/145"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/12225341",
        "pull_request_review_id": null,
        "id": 12225341,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjI1MzQx",
        "diff_hunk": "@@ -77,10 +78,7 @@\n     <?php if ($user): ?>\n       <a href=\"<?php echo $logoutUrl; ?>\">Logout</a>\n     <?php else: ?>\n-      <div>\n-        Check the login status using OAuth 2.0 handled by the PHP SDK:\n-        <a href=\"<?php echo $statusUrl; ?>\">Check the login status</a>\n-      </div>\n+      ",
        "path": "examples/example.php",
        "position": 18,
        "original_position": 18,
        "commit_id": "093e0c9785fcbf990ead6d1d08c70dce88346b5c",
        "original_commit_id": "093e0c9785fcbf990ead6d1d08c70dce88346b5c",
        "user": {
            "login": "vrdvaibhav",
            "id": 5214115,
            "node_id": "MDQ6VXNlcjUyMTQxMTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5214115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vrdvaibhav",
            "html_url": "https://github.com/vrdvaibhav",
            "followers_url": "https://api.github.com/users/vrdvaibhav/followers",
            "following_url": "https://api.github.com/users/vrdvaibhav/following{/other_user}",
            "gists_url": "https://api.github.com/users/vrdvaibhav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vrdvaibhav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vrdvaibhav/subscriptions",
            "organizations_url": "https://api.github.com/users/vrdvaibhav/orgs",
            "repos_url": "https://api.github.com/users/vrdvaibhav/repos",
            "events_url": "https://api.github.com/users/vrdvaibhav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vrdvaibhav/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "removed the link which display link to view Login status.\n",
        "created_at": "2014-05-02T11:02:23Z",
        "updated_at": "2014-05-02T11:02:23Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/181#discussion_r12225341",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/181",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/12225341"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/181#discussion_r12225341"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/12225352",
        "pull_request_review_id": null,
        "id": 12225352,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjI1MzUy",
        "diff_hunk": "@@ -46,7 +46,8 @@\n if ($user) {\n   $logoutUrl = $facebook->getLogoutUrl();\n } else {\n-  $statusUrl = $facebook->getLoginStatusUrl();\n+  //getLoginStatusUrl() is Depricated and will show error if used\n+  //$statusUrl = $facebook->getLoginStatusUrl();",
        "path": "examples/example.php",
        "position": 6,
        "original_position": 6,
        "commit_id": "093e0c9785fcbf990ead6d1d08c70dce88346b5c",
        "original_commit_id": "093e0c9785fcbf990ead6d1d08c70dce88346b5c",
        "user": {
            "login": "vrdvaibhav",
            "id": 5214115,
            "node_id": "MDQ6VXNlcjUyMTQxMTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5214115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vrdvaibhav",
            "html_url": "https://github.com/vrdvaibhav",
            "followers_url": "https://api.github.com/users/vrdvaibhav/followers",
            "following_url": "https://api.github.com/users/vrdvaibhav/following{/other_user}",
            "gists_url": "https://api.github.com/users/vrdvaibhav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vrdvaibhav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vrdvaibhav/subscriptions",
            "organizations_url": "https://api.github.com/users/vrdvaibhav/orgs",
            "repos_url": "https://api.github.com/users/vrdvaibhav/repos",
            "events_url": "https://api.github.com/users/vrdvaibhav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vrdvaibhav/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "commented the Line which calls `getLoginStatusUrl()` method\n",
        "created_at": "2014-05-02T11:03:10Z",
        "updated_at": "2014-05-02T11:03:10Z",
        "html_url": "https://github.com/facebookarchive/facebook-php-sdk/pull/181#discussion_r12225352",
        "pull_request_url": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/181",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/comments/12225352"
            },
            "html": {
                "href": "https://github.com/facebookarchive/facebook-php-sdk/pull/181#discussion_r12225352"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/facebookarchive/facebook-php-sdk/pulls/181"
            }
        }
    }
]