[
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/1570198",
        "pull_request_review_id": null,
        "id": 1570198,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzAxOTg=",
        "diff_hunk": "@@ -54,6 +64,11 @@ set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Wunused-function\")\n set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ggdb\")\n \n set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wunused-function\")\n+set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} --std=c++0x\")",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 21,
        "commit_id": "f711a6ec255a5c90189c8174ea10f381d5105dc4",
        "original_commit_id": "79c31f21956e213aeee4fa84d5303b51c6539ab1",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no need, see line 79\n",
        "created_at": "2012-09-10T20:25:23Z",
        "updated_at": "2012-09-10T20:27:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/13#discussion_r1570198",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/1570198"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/13#discussion_r1570198"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/1570333",
        "pull_request_review_id": null,
        "id": 1570333,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzAzMzM=",
        "diff_hunk": "@@ -54,6 +64,11 @@ set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Wunused-function\")\n set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ggdb\")\n \n set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wunused-function\")\n+set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} --std=c++0x\")",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 21,
        "commit_id": "f711a6ec255a5c90189c8174ea10f381d5105dc4",
        "original_commit_id": "79c31f21956e213aeee4fa84d5303b51c6539ab1",
        "user": {
            "login": "iapain",
            "id": 35413,
            "node_id": "MDQ6VXNlcjM1NDEz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/35413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iapain",
            "html_url": "https://github.com/iapain",
            "followers_url": "https://api.github.com/users/iapain/followers",
            "following_url": "https://api.github.com/users/iapain/following{/other_user}",
            "gists_url": "https://api.github.com/users/iapain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iapain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iapain/subscriptions",
            "organizations_url": "https://api.github.com/users/iapain/orgs",
            "repos_url": "https://api.github.com/users/iapain/repos",
            "events_url": "https://api.github.com/users/iapain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iapain/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@coolwanglu removed. Overlooked :)\n",
        "created_at": "2012-09-10T20:36:09Z",
        "updated_at": "2012-09-10T20:36:09Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/13#discussion_r1570333",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/13",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/1570333"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/13#discussion_r1570333"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2228887",
        "pull_request_review_id": null,
        "id": 2228887,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjg4ODc=",
        "diff_hunk": "@@ -0,0 +1,113 @@\n+#ifndef HTMLDEVICE_H__\n+#define HTMLDEVICE_H__\n+\n+#include <string>\n+#include <memory>\n+#include <fstream>\n+#include \"util.h\"\n+\n+class AnnotBorder;\n+class AnnotColor;\n+\n+namespace pdf2htmlEX {\n+\n+class Param;\n+class TmpFiles;\n+class TextState;\n+\n+class HTMLDevice \n+{\n+public:\n+    HTMLDevice( Param const& param, TmpFiles& tmp_files );\n+\n+\tvoid set_default_ctm(double *ctm);\n+\n+\tvoid document_start();\n+\tvoid document_end();\n+\n+\tstd::string page_start( int pageNum );",
        "path": "src/include/HTMLDevice.h",
        "position": null,
        "original_position": 28,
        "commit_id": "7b1e3fcab631827f8ed0ff9ac110018c3be67939",
        "original_commit_id": "5051c5742fa543d86b96cefd0d3c821450345b5b",
        "user": {
            "login": "filodej",
            "id": 39648,
            "node_id": "MDQ6VXNlcjM5NjQ4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/39648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/filodej",
            "html_url": "https://github.com/filodej",
            "followers_url": "https://api.github.com/users/filodej/followers",
            "following_url": "https://api.github.com/users/filodej/following{/other_user}",
            "gists_url": "https://api.github.com/users/filodej/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/filodej/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/filodej/subscriptions",
            "organizations_url": "https://api.github.com/users/filodej/orgs",
            "repos_url": "https://api.github.com/users/filodej/repos",
            "events_url": "https://api.github.com/users/filodej/events{/privacy}",
            "received_events_url": "https://api.github.com/users/filodej/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The page_start method returning the filename for background image is just an ugly hack and shortcut, there should definitely be a better separation of concerns \n",
        "created_at": "2012-11-26T23:04:21Z",
        "updated_at": "2012-11-27T23:03:31Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/50#discussion_r2228887",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/50",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2228887"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/50#discussion_r2228887"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/50"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2228953",
        "pull_request_review_id": null,
        "id": 2228953,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjg5NTM=",
        "diff_hunk": "@@ -0,0 +1,113 @@\n+#ifndef HTMLDEVICE_H__\n+#define HTMLDEVICE_H__\n+\n+#include <string>\n+#include <memory>\n+#include <fstream>\n+#include \"util.h\"\n+\n+class AnnotBorder;\n+class AnnotColor;\n+\n+namespace pdf2htmlEX {\n+\n+class Param;\n+class TmpFiles;\n+class TextState;\n+\n+class HTMLDevice \n+{\n+public:\n+    HTMLDevice( Param const& param, TmpFiles& tmp_files );\n+\n+\tvoid set_default_ctm(double *ctm);\n+\n+\tvoid document_start();\n+\tvoid document_end();\n+\n+\tstd::string page_start( int pageNum );\n+\tvoid page_end();\n+\tvoid page_header( double pageWidth, double pageHeight, int pageNum );\n+\tvoid page_footer( double const* ctm );\n+\n+\n+\t////////////////////////////////////////////////////\n+\t// export css styles\n+\t////////////////////////////////////////////////////\n+\t/*\n+\t * remote font: to be retrieved from the web server\n+\t * local font: to be substituted with a local (client side) font\n+\t */\n+\n+\tvoid export_remote_font( \n+\t\tFontInfo const& info, \n+\t\tstd::string const& suffix, \n+\t\tstd::string const& fontfileformat ) ;\n+\tvoid export_remote_default_font(long long fn_id) ;\n+\tvoid export_local_font( \n+\t\tFontInfo const& info, \n+\t\tstd::string const& original_font_name, \n+\t\tstd::string const& cssfont,\n+\t\tFontAttrs const& attrs );\n+\n+\tvoid export_font_size (long long fs_id, double font_size) ;\n+\tvoid export_transform_matrix (long long tm_id, const double * tm) ;\n+\tvoid export_letter_space (long long ls_id, double letter_space) ;\n+\tvoid export_word_space (long long ws_id, double word_space) ;\n+\tvoid export_color (long long color_id, const GfxRGB * rgb) ;\n+\tvoid export_whitespace (long long ws_id, double ws_width) ;\n+\tvoid export_rise (long long rise_id, double rise) ;\n+\tvoid export_height(long long height_id, double height) ;\n+\n+\t\n+\tvoid css_draw_rectangle( double x, double y, double w, double h, double scale, long long tm,\n+\t\t\t\t\t\t\t double * line_width_array, int line_width_count,\n+\t\t\t\t\t\t\t const GfxRGB * line_color, const GfxRGB * fill_color, \n+\t\t\t\t\t\t\t void (*style_function)(void *, std::ostream &), void * style_function_data );",
        "path": "src/include/HTMLDevice.h",
        "position": null,
        "original_position": 66,
        "commit_id": "7b1e3fcab631827f8ed0ff9ac110018c3be67939",
        "original_commit_id": "5051c5742fa543d86b96cefd0d3c821450345b5b",
        "user": {
            "login": "filodej",
            "id": 39648,
            "node_id": "MDQ6VXNlcjM5NjQ4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/39648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/filodej",
            "html_url": "https://github.com/filodej",
            "followers_url": "https://api.github.com/users/filodej/followers",
            "following_url": "https://api.github.com/users/filodej/following{/other_user}",
            "gists_url": "https://api.github.com/users/filodej/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/filodej/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/filodej/subscriptions",
            "organizations_url": "https://api.github.com/users/filodej/orgs",
            "repos_url": "https://api.github.com/users/filodej/repos",
            "events_url": "https://api.github.com/users/filodej/events{/privacy}",
            "received_events_url": "https://api.github.com/users/filodej/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Here the separation is by no means complete - renderer provides the style_function which is specific for HTML output\n",
        "created_at": "2012-11-26T23:12:22Z",
        "updated_at": "2012-11-27T23:03:31Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/50#discussion_r2228953",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/50",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2228953"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/50#discussion_r2228953"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/50"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2402982",
        "pull_request_review_id": null,
        "id": 2402982,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDI5ODI=",
        "diff_hunk": "@@ -393,6 +362,49 @@ void HTMLRenderer::post_process()\n     }\n }\n \n+void HTMLRenderer::determine_scale_factors(int width, int height)\n+{\n+    double zoom = 1.0;\n+\n+    vector<double> zoom_factors;\n+\n+    if(is_positive(param->zoom))\n+    {\n+        zoom_factors.push_back(param->zoom);\n+    }\n+\n+    if(is_positive(param->fit_width))\n+    {\n+        zoom_factors.push_back((param->fit_width) / width);\n+    }\n+\n+    if(is_positive(param->fit_height))\n+    {\n+        zoom_factors.push_back((param->fit_height) / height);\n+    }\n+\n+    if(zoom_factors.empty())\n+    {\n+        zoom = 1.0;\n+    }\n+    else\n+    {\n+        zoom = *min_element(zoom_factors.begin(), zoom_factors.end());\n+    }\n+\n+    text_scale_factor1 = max<double>(zoom, param->font_size_multiplier);\n+    text_scale_factor2 = zoom / text_scale_factor1;\n+}\n+\n+double HTMLRenderer::text_zoom_factor (int page_number){\n+\n+\tif(is_positive(param->fit_every) && !is_positive(param->zoom)){",
        "path": "src/HTMLRenderer/general.cc",
        "position": 89,
        "original_position": 89,
        "commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "original_commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why check param->zoom here\n",
        "created_at": "2012-12-13T02:16:02Z",
        "updated_at": "2012-12-13T02:16:02Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2402982",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2402982"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2402982"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2404794",
        "pull_request_review_id": null,
        "id": 2404794,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDQ3OTQ=",
        "diff_hunk": "@@ -393,6 +362,49 @@ void HTMLRenderer::post_process()\n     }\n }\n \n+void HTMLRenderer::determine_scale_factors(int width, int height)\n+{\n+    double zoom = 1.0;\n+\n+    vector<double> zoom_factors;\n+\n+    if(is_positive(param->zoom))\n+    {\n+        zoom_factors.push_back(param->zoom);\n+    }\n+\n+    if(is_positive(param->fit_width))\n+    {\n+        zoom_factors.push_back((param->fit_width) / width);\n+    }\n+\n+    if(is_positive(param->fit_height))\n+    {\n+        zoom_factors.push_back((param->fit_height) / height);\n+    }\n+\n+    if(zoom_factors.empty())\n+    {\n+        zoom = 1.0;\n+    }\n+    else\n+    {\n+        zoom = *min_element(zoom_factors.begin(), zoom_factors.end());\n+    }\n+\n+    text_scale_factor1 = max<double>(zoom, param->font_size_multiplier);\n+    text_scale_factor2 = zoom / text_scale_factor1;\n+}\n+\n+double HTMLRenderer::text_zoom_factor (int page_number){\n+\n+\tif(is_positive(param->fit_every) && !is_positive(param->zoom)){",
        "path": "src/HTMLRenderer/general.cc",
        "position": 89,
        "original_position": 89,
        "commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "original_commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "user": {
            "login": "Simanas",
            "id": 2435008,
            "node_id": "MDQ6VXNlcjI0MzUwMDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2435008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Simanas",
            "html_url": "https://github.com/Simanas",
            "followers_url": "https://api.github.com/users/Simanas/followers",
            "following_url": "https://api.github.com/users/Simanas/following{/other_user}",
            "gists_url": "https://api.github.com/users/Simanas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Simanas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Simanas/subscriptions",
            "organizations_url": "https://api.github.com/users/Simanas/orgs",
            "repos_url": "https://api.github.com/users/Simanas/repos",
            "events_url": "https://api.github.com/users/Simanas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Simanas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "As we discussed earlier, if zoom is presented, fit_every should not affect anything. \n",
        "created_at": "2012-12-13T08:34:52Z",
        "updated_at": "2012-12-13T08:34:52Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2404794",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2404794"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2404794"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2405625",
        "pull_request_review_id": null,
        "id": 2405625,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDU2MjU=",
        "diff_hunk": "@@ -393,6 +362,49 @@ void HTMLRenderer::post_process()\n     }\n }\n \n+void HTMLRenderer::determine_scale_factors(int width, int height)\n+{\n+    double zoom = 1.0;\n+\n+    vector<double> zoom_factors;\n+\n+    if(is_positive(param->zoom))\n+    {\n+        zoom_factors.push_back(param->zoom);\n+    }\n+\n+    if(is_positive(param->fit_width))\n+    {\n+        zoom_factors.push_back((param->fit_width) / width);\n+    }\n+\n+    if(is_positive(param->fit_height))\n+    {\n+        zoom_factors.push_back((param->fit_height) / height);\n+    }\n+\n+    if(zoom_factors.empty())\n+    {\n+        zoom = 1.0;\n+    }\n+    else\n+    {\n+        zoom = *min_element(zoom_factors.begin(), zoom_factors.end());\n+    }\n+\n+    text_scale_factor1 = max<double>(zoom, param->font_size_multiplier);\n+    text_scale_factor2 = zoom / text_scale_factor1;\n+}\n+\n+double HTMLRenderer::text_zoom_factor (int page_number){\n+\n+\tif(is_positive(param->fit_every) && !is_positive(param->zoom)){",
        "path": "src/HTMLRenderer/general.cc",
        "position": 89,
        "original_position": 89,
        "commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "original_commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why is that, it would be confusing.\n",
        "created_at": "2012-12-13T10:28:32Z",
        "updated_at": "2012-12-13T10:28:32Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2405625",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2405625"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2405625"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2405827",
        "pull_request_review_id": null,
        "id": 2405827,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDU4Mjc=",
        "diff_hunk": "@@ -393,6 +362,49 @@ void HTMLRenderer::post_process()\n     }\n }\n \n+void HTMLRenderer::determine_scale_factors(int width, int height)\n+{\n+    double zoom = 1.0;\n+\n+    vector<double> zoom_factors;\n+\n+    if(is_positive(param->zoom))\n+    {\n+        zoom_factors.push_back(param->zoom);\n+    }\n+\n+    if(is_positive(param->fit_width))\n+    {\n+        zoom_factors.push_back((param->fit_width) / width);\n+    }\n+\n+    if(is_positive(param->fit_height))\n+    {\n+        zoom_factors.push_back((param->fit_height) / height);\n+    }\n+\n+    if(zoom_factors.empty())\n+    {\n+        zoom = 1.0;\n+    }\n+    else\n+    {\n+        zoom = *min_element(zoom_factors.begin(), zoom_factors.end());\n+    }\n+\n+    text_scale_factor1 = max<double>(zoom, param->font_size_multiplier);\n+    text_scale_factor2 = zoom / text_scale_factor1;\n+}\n+\n+double HTMLRenderer::text_zoom_factor (int page_number){\n+\n+\tif(is_positive(param->fit_every) && !is_positive(param->zoom)){",
        "path": "src/HTMLRenderer/general.cc",
        "position": 89,
        "original_position": 89,
        "commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "original_commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "user": {
            "login": "Simanas",
            "id": 2435008,
            "node_id": "MDQ6VXNlcjI0MzUwMDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2435008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Simanas",
            "html_url": "https://github.com/Simanas",
            "followers_url": "https://api.github.com/users/Simanas/followers",
            "following_url": "https://api.github.com/users/Simanas/following{/other_user}",
            "gists_url": "https://api.github.com/users/Simanas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Simanas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Simanas/subscriptions",
            "organizations_url": "https://api.github.com/users/Simanas/orgs",
            "repos_url": "https://api.github.com/users/Simanas/repos",
            "events_url": "https://api.github.com/users/Simanas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Simanas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If  we do not check it here, then if --zoom, --fit-width, --fit-every is presented it would create unwanted results, because in document with different page sizes this method *min_element(zoom_factors.begin(), zoom_factors.end())  on some pages will return zoom value on some calculated zoom value from --fit-width value.\n",
        "created_at": "2012-12-13T10:56:30Z",
        "updated_at": "2012-12-13T10:56:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2405827",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2405827"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2405827"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2406319",
        "pull_request_review_id": null,
        "id": 2406319,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDYzMTk=",
        "diff_hunk": "@@ -393,6 +362,49 @@ void HTMLRenderer::post_process()\n     }\n }\n \n+void HTMLRenderer::determine_scale_factors(int width, int height)\n+{\n+    double zoom = 1.0;\n+\n+    vector<double> zoom_factors;\n+\n+    if(is_positive(param->zoom))\n+    {\n+        zoom_factors.push_back(param->zoom);\n+    }\n+\n+    if(is_positive(param->fit_width))\n+    {\n+        zoom_factors.push_back((param->fit_width) / width);\n+    }\n+\n+    if(is_positive(param->fit_height))\n+    {\n+        zoom_factors.push_back((param->fit_height) / height);\n+    }\n+\n+    if(zoom_factors.empty())\n+    {\n+        zoom = 1.0;\n+    }\n+    else\n+    {\n+        zoom = *min_element(zoom_factors.begin(), zoom_factors.end());\n+    }\n+\n+    text_scale_factor1 = max<double>(zoom, param->font_size_multiplier);\n+    text_scale_factor2 = zoom / text_scale_factor1;\n+}\n+\n+double HTMLRenderer::text_zoom_factor (int page_number){\n+\n+\tif(is_positive(param->fit_every) && !is_positive(param->zoom)){",
        "path": "src/HTMLRenderer/general.cc",
        "position": 89,
        "original_position": 89,
        "commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "original_commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Currently, if more than one of --zoom, --fit-width/height is specified, the \"smallest one\" will be used.\n\"--zoom disables --fit-every\" is not intuitive to me, and not even written in the manpage.\n",
        "created_at": "2012-12-13T11:50:52Z",
        "updated_at": "2012-12-13T11:50:52Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2406319",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2406319"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2406319"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2406508",
        "pull_request_review_id": null,
        "id": 2406508,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDY1MDg=",
        "diff_hunk": "@@ -393,6 +362,49 @@ void HTMLRenderer::post_process()\n     }\n }\n \n+void HTMLRenderer::determine_scale_factors(int width, int height)\n+{\n+    double zoom = 1.0;\n+\n+    vector<double> zoom_factors;\n+\n+    if(is_positive(param->zoom))\n+    {\n+        zoom_factors.push_back(param->zoom);\n+    }\n+\n+    if(is_positive(param->fit_width))\n+    {\n+        zoom_factors.push_back((param->fit_width) / width);\n+    }\n+\n+    if(is_positive(param->fit_height))\n+    {\n+        zoom_factors.push_back((param->fit_height) / height);\n+    }\n+\n+    if(zoom_factors.empty())\n+    {\n+        zoom = 1.0;\n+    }\n+    else\n+    {\n+        zoom = *min_element(zoom_factors.begin(), zoom_factors.end());\n+    }\n+\n+    text_scale_factor1 = max<double>(zoom, param->font_size_multiplier);\n+    text_scale_factor2 = zoom / text_scale_factor1;\n+}\n+\n+double HTMLRenderer::text_zoom_factor (int page_number){\n+\n+\tif(is_positive(param->fit_every) && !is_positive(param->zoom)){",
        "path": "src/HTMLRenderer/general.cc",
        "position": 89,
        "original_position": 89,
        "commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "original_commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "user": {
            "login": "Simanas",
            "id": 2435008,
            "node_id": "MDQ6VXNlcjI0MzUwMDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2435008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Simanas",
            "html_url": "https://github.com/Simanas",
            "followers_url": "https://api.github.com/users/Simanas/followers",
            "following_url": "https://api.github.com/users/Simanas/following{/other_user}",
            "gists_url": "https://api.github.com/users/Simanas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Simanas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Simanas/subscriptions",
            "organizations_url": "https://api.github.com/users/Simanas/orgs",
            "repos_url": "https://api.github.com/users/Simanas/repos",
            "events_url": "https://api.github.com/users/Simanas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Simanas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You are wrong. Currently the smallest of --zoom, --fit-width/document_width and --fit-height/document_width is used to get text_scale_factors for every page.\n\nIn my modification if you remove param->zoom check, then for every page the smallest of --zoom, --fit-width/page_width and --fit-height/page_width will be used, which would be a stupid behavior. :)\n",
        "created_at": "2012-12-13T12:17:38Z",
        "updated_at": "2012-12-13T12:17:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2406508",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2406508"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2406508"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2406517",
        "pull_request_review_id": null,
        "id": 2406517,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDY1MTc=",
        "diff_hunk": "@@ -393,6 +362,49 @@ void HTMLRenderer::post_process()\n     }\n }\n \n+void HTMLRenderer::determine_scale_factors(int width, int height)\n+{\n+    double zoom = 1.0;\n+\n+    vector<double> zoom_factors;\n+\n+    if(is_positive(param->zoom))\n+    {\n+        zoom_factors.push_back(param->zoom);\n+    }\n+\n+    if(is_positive(param->fit_width))\n+    {\n+        zoom_factors.push_back((param->fit_width) / width);\n+    }\n+\n+    if(is_positive(param->fit_height))\n+    {\n+        zoom_factors.push_back((param->fit_height) / height);\n+    }\n+\n+    if(zoom_factors.empty())\n+    {\n+        zoom = 1.0;\n+    }\n+    else\n+    {\n+        zoom = *min_element(zoom_factors.begin(), zoom_factors.end());\n+    }\n+\n+    text_scale_factor1 = max<double>(zoom, param->font_size_multiplier);\n+    text_scale_factor2 = zoom / text_scale_factor1;\n+}\n+\n+double HTMLRenderer::text_zoom_factor (int page_number){\n+\n+\tif(is_positive(param->fit_every) && !is_positive(param->zoom)){",
        "path": "src/HTMLRenderer/general.cc",
        "position": 89,
        "original_position": 89,
        "commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "original_commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "user": {
            "login": "Simanas",
            "id": 2435008,
            "node_id": "MDQ6VXNlcjI0MzUwMDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2435008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Simanas",
            "html_url": "https://github.com/Simanas",
            "followers_url": "https://api.github.com/users/Simanas/followers",
            "following_url": "https://api.github.com/users/Simanas/following{/other_user}",
            "gists_url": "https://api.github.com/users/Simanas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Simanas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Simanas/subscriptions",
            "organizations_url": "https://api.github.com/users/Simanas/orgs",
            "repos_url": "https://api.github.com/users/Simanas/repos",
            "events_url": "https://api.github.com/users/Simanas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Simanas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah... man page should be modificated if you decide to accept this change. \n",
        "created_at": "2012-12-13T12:18:58Z",
        "updated_at": "2012-12-13T12:18:58Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2406517",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2406517"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2406517"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2410472",
        "pull_request_review_id": null,
        "id": 2410472,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MTA0NzI=",
        "diff_hunk": "@@ -393,6 +362,49 @@ void HTMLRenderer::post_process()\n     }\n }\n \n+void HTMLRenderer::determine_scale_factors(int width, int height)\n+{\n+    double zoom = 1.0;\n+\n+    vector<double> zoom_factors;\n+\n+    if(is_positive(param->zoom))\n+    {\n+        zoom_factors.push_back(param->zoom);\n+    }\n+\n+    if(is_positive(param->fit_width))\n+    {\n+        zoom_factors.push_back((param->fit_width) / width);\n+    }\n+\n+    if(is_positive(param->fit_height))\n+    {\n+        zoom_factors.push_back((param->fit_height) / height);\n+    }\n+\n+    if(zoom_factors.empty())\n+    {\n+        zoom = 1.0;\n+    }\n+    else\n+    {\n+        zoom = *min_element(zoom_factors.begin(), zoom_factors.end());\n+    }\n+\n+    text_scale_factor1 = max<double>(zoom, param->font_size_multiplier);\n+    text_scale_factor2 = zoom / text_scale_factor1;\n+}\n+\n+double HTMLRenderer::text_zoom_factor (int page_number){\n+\n+\tif(is_positive(param->fit_every) && !is_positive(param->zoom)){",
        "path": "src/HTMLRenderer/general.cc",
        "position": 89,
        "original_position": 89,
        "commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "original_commit_id": "80649b259f658fad29dcaca5f083cca37752c89b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I just meant --zoom and --fit-width/page_width for each page.\n\nOn Thu, Dec 13, 2012 at 8:17 PM, Simanas notifications@github.com wrote:\n\n> In src/HTMLRenderer/general.cc:\n> \n> > -    if(zoom_factors.empty())\n> > -    {\n> > -        zoom = 1.0;\n> > -    }\n> > -    else\n> > -    {\n> > -        zoom = *min_element(zoom_factors.begin(), zoom_factors.end());\n> > -    }\n> >   +\n> > -    text_scale_factor1 = max<double>(zoom, param->font_size_multiplier);\n> > -    text_scale_factor2 = zoom / text_scale_factor1;\n> >   +}\n> >   +\n> >   +double HTMLRenderer::text_zoom_factor (int page_number){\n> >   +\n> > -   if(is_positive(param->fit_every) && !is_positive(param->zoom)){\n> \n> You are wrong. Currently the smallest of --zoom,\n> --fit-width/document_width and --fit-height/document_width is used to get\n> text_scale_factors for every page.\n> \n> In my modification if you remove param->zoom check, then for every page\n> the smallest of --zoom, --fit-width/page_width and --fit-height/page_width\n> will be used, which would be a stupid behavior. :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/57/files#r2406508.\n",
        "created_at": "2012-12-13T17:44:23Z",
        "updated_at": "2012-12-13T17:44:23Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2410472",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2410472"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/57#discussion_r2410472"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/57"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2741259",
        "pull_request_review_id": null,
        "id": 2741259,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEyNTk=",
        "diff_hunk": "@@ -400,3 +400,10 @@ void ffw_auto_hint(void)\n     FVAutoHint(cur_fv);\n     FVAutoInstr(cur_fv);\n }\n+\n+char* ffw_get_version(void)\n+{\n+    char* str = (char*)malloc(sizeof(char) * 20);",
        "path": "src/util/ffw.c",
        "position": null,
        "original_position": 7,
        "commit_id": "43ae72b9b0e400284d7c081ba86f327f18433cbe",
        "original_commit_id": "b1dc3eb11ae16ea2725f37d2b78ff893e336ed45",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This causes mem leak. Why not just return an integer?\n",
        "created_at": "2013-01-23T13:11:19Z",
        "updated_at": "2013-01-23T15:02:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/70#discussion_r2741259",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/70",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2741259"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/70#discussion_r2741259"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/70"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2741300",
        "pull_request_review_id": null,
        "id": 2741300,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEzMDA=",
        "diff_hunk": "@@ -47,11 +56,24 @@ void show_usage_and_exit(const char * dummy = nullptr)\n     exit(EXIT_FAILURE);\n }\n \n+void show_usage_and_exit(const char * dummy = nullptr)",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 41,
        "commit_id": "43ae72b9b0e400284d7c081ba86f327f18433cbe",
        "original_commit_id": "b1dc3eb11ae16ea2725f37d2b78ff893e336ed45",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The function names become confusing.\n- I think it's not necessary to show version in \"usage\", show_usage_and_exit actually also shows version...\n- the 2 functions show_xxx and show_xxx_and_exit can be merged.\n",
        "created_at": "2013-01-23T13:14:44Z",
        "updated_at": "2013-01-23T15:02:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/70#discussion_r2741300",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/70",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2741300"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/70#discussion_r2741300"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/70"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2742512",
        "pull_request_review_id": null,
        "id": 2742512,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDI1MTI=",
        "diff_hunk": "@@ -400,3 +400,10 @@ void ffw_auto_hint(void)\n     FVAutoHint(cur_fv);\n     FVAutoInstr(cur_fv);\n }\n+\n+char* ffw_get_version(void)\n+{\n+    char* str = (char*)malloc(sizeof(char) * 20);",
        "path": "src/util/ffw.c",
        "position": null,
        "original_position": 7,
        "commit_id": "43ae72b9b0e400284d7c081ba86f327f18433cbe",
        "original_commit_id": "b1dc3eb11ae16ea2725f37d2b78ff893e336ed45",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I switched from retrieving the version`char*` to retrieving the version `long`... will fix this.\n",
        "created_at": "2013-01-23T15:03:33Z",
        "updated_at": "2013-01-23T15:03:33Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/70#discussion_r2742512",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/70",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2742512"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/70#discussion_r2742512"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/70"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2742518",
        "pull_request_review_id": null,
        "id": 2742518,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDI1MTg=",
        "diff_hunk": "@@ -47,11 +56,24 @@ void show_usage_and_exit(const char * dummy = nullptr)\n     exit(EXIT_FAILURE);\n }\n \n+void show_usage_and_exit(const char * dummy = nullptr)",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 41,
        "commit_id": "43ae72b9b0e400284d7c081ba86f327f18433cbe",
        "original_commit_id": "b1dc3eb11ae16ea2725f37d2b78ff893e336ed45",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, I will remove the version information from \"usage\"\n",
        "created_at": "2013-01-23T15:03:58Z",
        "updated_at": "2013-01-23T15:03:58Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/70#discussion_r2742518",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/70",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2742518"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/70#discussion_r2742518"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/70"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2772972",
        "pull_request_review_id": null,
        "id": 2772972,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzI5NzI=",
        "diff_hunk": "@@ -18,6 +18,7 @@ struct Param\n     // PDF stuff\n     std::string owner_password, user_password;\n     std::string input_filename, output_filename;\n+    bool no_drm;",
        "path": "src/Param.h",
        "position": null,
        "original_position": 4,
        "commit_id": "f3d8b8a954c500443e7d067da3cbaf37f23c529d",
        "original_commit_id": "88467667a224fc03713cb8be794695179bd81501",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've been avoiding using 'bool', instead I'll use 'int',\n\nOne reason is I feel unsafe to print the default value, not sure if there are environment such that boolalpha is on by default, then users will see 'true' or 'false' as the default values, but `--no_drm true` is not accepted.\n\nAnother is that there could be multiple values in the future, also I want to restrict the data types to int/double/string only, such that it will be relief for templates in ArgParser\n",
        "created_at": "2013-01-25T11:30:32Z",
        "updated_at": "2013-01-25T13:13:35Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2772972",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2772972"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2772972"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2772980",
        "pull_request_review_id": null,
        "id": 2772980,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzI5ODA=",
        "diff_hunk": "@@ -192,7 +193,10 @@ int main(int argc, char **argv)\n \n         // check for copy permission\n         if (!doc->okToCopy()) {\n-            throw \"Copying of text from this document is not allowed.\";\n+            if (!param.no_drm) {",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 13,
        "commit_id": "f3d8b8a954c500443e7d067da3cbaf37f23c529d",
        "original_commit_id": "88467667a224fc03713cb8be794695179bd81501",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "please change this to param.no_drm == 0\n",
        "created_at": "2013-01-25T11:31:02Z",
        "updated_at": "2013-01-25T13:13:35Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2772980",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2772980"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2772980"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2772983",
        "pull_request_review_id": null,
        "id": 2772983,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzI5ODM=",
        "diff_hunk": "@@ -64,6 +64,7 @@ void parse_options (int argc, char **argv)\n \n         .add(\"owner-password,o\", &param.owner_password, \"\", \"owner password (for encrypted files)\", nullptr, true)\n         .add(\"user-password,u\", &param.user_password, \"\", \"user password (for encrypted files)\", nullptr, true)\n+        .add(\"no-drm\", &param.no_drm, false, \"override document DRM settings\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 4,
        "commit_id": "f3d8b8a954c500443e7d067da3cbaf37f23c529d",
        "original_commit_id": "88467667a224fc03713cb8be794695179bd81501",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please also update the manpage accordingly\n",
        "created_at": "2013-01-25T11:31:25Z",
        "updated_at": "2013-01-25T13:13:35Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2772983",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2772983"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2772983"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773102",
        "pull_request_review_id": null,
        "id": 2773102,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzMxMDI=",
        "diff_hunk": "@@ -0,0 +1,18 @@\n+language: cpp\n+compiler: gcc\n+before_install:\n+  - sudo apt-get update -qq\n+  - sudo apt-get install -qq libfontforge-dev libopenjpeg-dev libspiro-dev",
        "path": ".travis.yml",
        "position": null,
        "original_position": 5,
        "commit_id": "f3d8b8a954c500443e7d067da3cbaf37f23c529d",
        "original_commit_id": "88467667a224fc03713cb8be794695179bd81501",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't know if libpng-dev is installed by default, and if this covers all poppler's dependencies, because many dependencies are optional\n\nPerhaps `sudo apt-get build-dep poppler` is simpler and better.\n\nAnd maybe install poppler from a PPA is simpler and faster, we don't want to compile poppler everytime...\n",
        "created_at": "2013-01-25T11:43:00Z",
        "updated_at": "2013-01-25T13:13:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773102",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773102"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773102"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773457",
        "pull_request_review_id": null,
        "id": 2773457,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzM0NTc=",
        "diff_hunk": "@@ -0,0 +1,18 @@\n+language: cpp\n+compiler: gcc\n+before_install:\n+  - sudo apt-get update -qq\n+  - sudo apt-get install -qq libfontforge-dev libopenjpeg-dev libspiro-dev",
        "path": ".travis.yml",
        "position": null,
        "original_position": 5,
        "commit_id": "f3d8b8a954c500443e7d067da3cbaf37f23c529d",
        "original_commit_id": "88467667a224fc03713cb8be794695179bd81501",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The Ubuntu images used by Travis are old (poppler v0.19), and we really want to be building against the latest stable version of poppler. We could set up a PPA, but I don't use Ubuntu.\n",
        "created_at": "2013-01-25T12:28:58Z",
        "updated_at": "2013-01-25T13:13:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773457",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773457"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773457"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773473",
        "pull_request_review_id": null,
        "id": 2773473,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzM0NzM=",
        "diff_hunk": "@@ -18,6 +18,7 @@ struct Param\n     // PDF stuff\n     std::string owner_password, user_password;\n     std::string input_filename, output_filename;\n+    bool no_drm;",
        "path": "src/Param.h",
        "position": null,
        "original_position": 4,
        "commit_id": "f3d8b8a954c500443e7d067da3cbaf37f23c529d",
        "original_commit_id": "88467667a224fc03713cb8be794695179bd81501",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Really this should just be a `--no_drm` flag, not a flag with an argument `--no_drm <arg>` but your ArgParser does not seem to support that. I'll change it to an `int` for now\n",
        "created_at": "2013-01-25T12:31:59Z",
        "updated_at": "2013-01-25T13:13:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773473",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773473"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773473"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773488",
        "pull_request_review_id": null,
        "id": 2773488,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzM0ODg=",
        "diff_hunk": "@@ -0,0 +1,18 @@\n+language: cpp\n+compiler: gcc\n+before_install:\n+  - sudo apt-get update -qq\n+  - sudo apt-get install -qq libfontforge-dev libopenjpeg-dev libspiro-dev",
        "path": ".travis.yml",
        "position": null,
        "original_position": 5,
        "commit_id": "f3d8b8a954c500443e7d067da3cbaf37f23c529d",
        "original_commit_id": "88467667a224fc03713cb8be794695179bd81501",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've got one for pdf2htmlEX, which includes poppler 0.20.3, to use it:\n\nsudo add-apt-repository ppa:coolwanglu/pdf2htmlex\nsudo apt-get update\nsudo apt-get install libpoppler-dev\n\nOn Fri, Jan 25, 2013 at 8:29 PM, John Hewson notifications@github.comwrote:\n\n> In .travis.yml:\n> \n> > @@ -0,0 +1,18 @@\n> > +language: cpp\n> > +compiler: gcc\n> > +before_install:\n> > -  - sudo apt-get update -qq\n> > -  - sudo apt-get install -qq libfontforge-dev libopenjpeg-dev libspiro-dev\n> \n> The Ubuntu images used by Travis are old (poppler v0.19), and we really\n> want to be building against the latest stable version of poppler. We could\n> set up a PPA, but I don't use Ubuntu.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/75/files#r2773457.\n",
        "created_at": "2013-01-25T12:34:59Z",
        "updated_at": "2013-01-25T13:13:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773488",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773488"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773488"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773508",
        "pull_request_review_id": null,
        "id": 2773508,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzM1MDg=",
        "diff_hunk": "@@ -18,6 +18,7 @@ struct Param\n     // PDF stuff\n     std::string owner_password, user_password;\n     std::string input_filename, output_filename;\n+    bool no_drm;",
        "path": "src/Param.h",
        "position": null,
        "original_position": 4,
        "commit_id": "f3d8b8a954c500443e7d067da3cbaf37f23c529d",
        "original_commit_id": "88467667a224fc03713cb8be794695179bd81501",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yes, that is an annoying thing I know.\n\nThat kind of flag can be implemented by a customized callback function.\n\nOn Fri, Jan 25, 2013 at 8:32 PM, John Hewson notifications@github.comwrote:\n\n> In src/Param.h:\n> \n> > @@ -18,6 +18,7 @@ struct Param\n> >      // PDF stuff\n> >      std::string owner_password, user_password;\n> >      std::string input_filename, output_filename;\n> > -    bool no_drm;\n> \n> Really this should just be a --no_drm flag, not a flag with an argument --no_drm\n> <arg> but your ArgParser does not seem to support that. I'll change it to\n> an int for now\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/75/files#r2773473.\n",
        "created_at": "2013-01-25T12:36:33Z",
        "updated_at": "2013-01-25T13:13:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773508",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773508"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773508"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773727",
        "pull_request_review_id": null,
        "id": 2773727,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzM3Mjc=",
        "diff_hunk": "@@ -0,0 +1,18 @@\n+language: cpp\n+compiler: gcc\n+before_install:\n+  - sudo apt-get update -qq\n+  - sudo apt-get install -qq libfontforge-dev libopenjpeg-dev libspiro-dev",
        "path": ".travis.yml",
        "position": null,
        "original_position": 5,
        "commit_id": "f3d8b8a954c500443e7d067da3cbaf37f23c529d",
        "original_commit_id": "88467667a224fc03713cb8be794695179bd81501",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perfect!\n",
        "created_at": "2013-01-25T13:04:20Z",
        "updated_at": "2013-01-25T13:13:37Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773727",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2773727"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/75#discussion_r2773727"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/75"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786136",
        "pull_request_review_id": null,
        "id": 2786136,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODYxMzY=",
        "diff_hunk": "@@ -44,57 +58,62 @@ Specify destination folder\n .B --data-dir <dir> (Default: @CMAKE_INSTALL_PREFIX@/share/pdf2htmlEX)\n Specify the folder holding the manifest and other files\n .TP\n-.B -f, --first-page <num> (Default: 1)\n-Specify the first page to process\n-.TP\n-.B -l, --last-page <num> (Default: last page)\n-Specify the last page to process\n-.TP\n-.B --zoom <ratio>, --fit-width <width>, --fit-height <height>\n---zoom specifies the zoom factor directly; --fit-width/height specifies the maximum width/height of a page, the values are in pixels.\n+.B --css-filename <filename> (Default: <none>)\n+Specify the filename of the generated css file, if not embedded.\n \n If multiple values are specified, the minimum one will be used.\n \n If none is specified, pages will be rendered as 72DPI.\n-.TP\n-.B --hdpi <dpi>, --vdpi <dpi> (Default: 144)\n-Specify the horizontal and vertical DPI for images\n-.TP\n-.B --use-cropbox <0|1> (Default: 0)\n-Use CropBox instead of MediaBox for output.\n-.TP\n-.B --process-nontext <0|1> (Default: 1)\n-Whether to process non-text objects (as images)\n-.TP\n-.B --single-html <0|1> (Default: 1)\n-Whether to embed everything into one HTML file.\n \n-If switched off, there will be several files generated along with the HTML file including files for fonts, css, images.\n-.TP\n-.B --split-pages <0|1> (Default: 0)\n-If turned on, each page is saved in a separated files, also the generated css file will be store separatedly as if single-html=0\n \n-The output files will be named as <output-filename>0.page, <output-filename>1.page, ...\n .TP\n-.B --embed-base-font <0|1> (Default: 1)\n-Whether to embed base 14 fonts.\n+.B Embedded Fonts\n+.TP\n+.B --embed-standard-font\n+Whether to embed standard 14 fonts.\n \n There are several base font defined in PDF standards, which are supposed to be provided by the PDF reader.\n \n If this switch is on, local matched font will be used and embedded; otherwise only font names are exported such that web browsers may try to find proper fonts themselves.\n .TP\n-.B --embed-external-font <0|1> (Default: 0)\n-Similar as above but for non-base fonts.\n+.B --embed-external-fonts\n+Same as above except for non-standard 14 fonts.\n+.TP\n+.B --font-suffix <suffix> (Default: .ttf)\n+Specify the suffix and format of fonts extracted from the PDF file. If it's empty, the file name will be determined automatically.\n .TP\n-.B --decompose-ligature <0|1> (Default: 0)\n+.B --decompose-ligatures\n Decompose ligatures. For example 'fi' -> 'f''i'.\n .TP\n-.B --heps <len>, --veps <len> (Default: 1)\n+.B --keep-unused-glyphs\n+Keep unused glyphs in embedded fonts. Results in larger file sizes.\n+.TP\n+.B --auto-hint\n+If set to 1, hints will be generated for the fonts using fontforge. ",
        "path": "pdf2htmlEX.1.in",
        "position": 126,
        "original_position": 126,
        "commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "original_commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "description of auto-hint should be changed\n",
        "created_at": "2013-01-27T06:19:06Z",
        "updated_at": "2013-01-27T06:19:06Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786136",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786136"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786136"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786149",
        "pull_request_review_id": null,
        "id": 2786149,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODYxNDk=",
        "diff_hunk": "@@ -117,49 +134,58 @@ If this value is set to 1, the ToUnicode Map is always applied, if provided in P\n If set to -1, a customized map is used such that rendering will be correct in HTML (visually the same), but you may not get correct characters by select & copy & paste.\n \n If set to 0, pdf2htmlEX would try its best to balance the two methods above.\n-.TP\n-.B --space-as-offset <0|1> (Default: 0)\n-Treat space characters as offsets, which may increase the size of the output.\n \n Turn it on if space characters are not displayed correctly, or you want to remove positional spaces.\n+\n+.TP\n+.B Encryption\n+.TP\n+.B -o, --owner-password <password>\n+Specify owner password\n .TP\n-.B --stretch-narrow-glyph <0|1> (Default: 0)\n-If set to 1, glyphs narrower than described in PDF will be stretched; otherwise space will be padded to the right of the glyphs\n+.B -u, --user-password <password>\n+Specify user password\n+.TP\n+.B --no-drm\n+Override document DRM settings\n+\n .TP\n-.B --squeeze-wide-glyph <0|1> (Default: 1)\n-If set to 1, glyphs wider than described in PDF will be squeezed; otherwise it will be truncated.\n+.B Misc.\n .TP\n-.B --remove-unused-glyph <0|1> (Default: 1)\n-If set to 1, remove unused glyphs in embedded fonts in order to reduce the file size.\n+.B --keep-temp\n+Keep temporary files after processing.\n .TP\n-.B --font-suffix <suffix> (Default: .ttf), --font-format <format> (Default: truetype)\n-Specify the suffix and format of fonts extracted from the PDF file. They should be consistent.\n+.B --debug\n+Show debug information.\n .TP\n-.B --external-hint-tool <tool> (Default: <none>)\n-If specified, the tool will be called in order to enhanced hinting for fonts, this will precede --auto-hint.\n+.B --debug-split-pages\n+If turned on, each page is saved in a separated files, also the generated css file will be store separately as if --single-html\n \n-The tool will be called as '<tool> <in.suffix> <out.suffix>', where suffix will be the same as specified for --font-suffix.\n+The output files will be named as <output-filename>0.page, <output-filename>1.page, ...\n .TP\n-.B --css-filename <filename> (Default: <none>)\n-Specify the filename of the generated css file, if not embedded.\n+.B --no-graphics",
        "path": "pdf2htmlEX.1.in",
        "position": 217,
        "original_position": 217,
        "commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "original_commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "--text-only might be better.\n",
        "created_at": "2013-01-27T06:33:13Z",
        "updated_at": "2013-01-27T06:33:13Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786149",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786149"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786149"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786150",
        "pull_request_review_id": null,
        "id": 2786150,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODYxNTA=",
        "diff_hunk": "@@ -117,49 +134,58 @@ If this value is set to 1, the ToUnicode Map is always applied, if provided in P\n If set to -1, a customized map is used such that rendering will be correct in HTML (visually the same), but you may not get correct characters by select & copy & paste.\n \n If set to 0, pdf2htmlEX would try its best to balance the two methods above.\n-.TP\n-.B --space-as-offset <0|1> (Default: 0)\n-Treat space characters as offsets, which may increase the size of the output.\n \n Turn it on if space characters are not displayed correctly, or you want to remove positional spaces.\n+\n+.TP\n+.B Encryption\n+.TP\n+.B -o, --owner-password <password>\n+Specify owner password\n .TP\n-.B --stretch-narrow-glyph <0|1> (Default: 0)\n-If set to 1, glyphs narrower than described in PDF will be stretched; otherwise space will be padded to the right of the glyphs\n+.B -u, --user-password <password>\n+Specify user password\n+.TP\n+.B --no-drm\n+Override document DRM settings\n+\n .TP\n-.B --squeeze-wide-glyph <0|1> (Default: 1)\n-If set to 1, glyphs wider than described in PDF will be squeezed; otherwise it will be truncated.\n+.B Misc.\n .TP\n-.B --remove-unused-glyph <0|1> (Default: 1)\n-If set to 1, remove unused glyphs in embedded fonts in order to reduce the file size.\n+.B --keep-temp\n+Keep temporary files after processing.\n .TP\n-.B --font-suffix <suffix> (Default: .ttf), --font-format <format> (Default: truetype)\n-Specify the suffix and format of fonts extracted from the PDF file. They should be consistent.\n+.B --debug\n+Show debug information.\n .TP\n-.B --external-hint-tool <tool> (Default: <none>)\n-If specified, the tool will be called in order to enhanced hinting for fonts, this will precede --auto-hint.\n+.B --debug-split-pages",
        "path": "pdf2htmlEX.1.in",
        "position": 209,
        "original_position": 209,
        "commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "original_commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is not for debug.\nThere are people who need it.\n",
        "created_at": "2013-01-27T06:33:55Z",
        "updated_at": "2013-01-27T06:33:55Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786150",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786150"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786150"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786151",
        "pull_request_review_id": null,
        "id": 2786151,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODYxNTE=",
        "diff_hunk": "@@ -44,57 +58,62 @@ Specify destination folder\n .B --data-dir <dir> (Default: @CMAKE_INSTALL_PREFIX@/share/pdf2htmlEX)\n Specify the folder holding the manifest and other files\n .TP\n-.B -f, --first-page <num> (Default: 1)\n-Specify the first page to process\n-.TP\n-.B -l, --last-page <num> (Default: last page)\n-Specify the last page to process\n-.TP\n-.B --zoom <ratio>, --fit-width <width>, --fit-height <height>\n---zoom specifies the zoom factor directly; --fit-width/height specifies the maximum width/height of a page, the values are in pixels.\n+.B --css-filename <filename> (Default: <none>)\n+Specify the filename of the generated css file, if not embedded.\n \n If multiple values are specified, the minimum one will be used.\n \n If none is specified, pages will be rendered as 72DPI.\n-.TP\n-.B --hdpi <dpi>, --vdpi <dpi> (Default: 144)\n-Specify the horizontal and vertical DPI for images\n-.TP\n-.B --use-cropbox <0|1> (Default: 0)\n-Use CropBox instead of MediaBox for output.\n-.TP\n-.B --process-nontext <0|1> (Default: 1)\n-Whether to process non-text objects (as images)\n-.TP\n-.B --single-html <0|1> (Default: 1)\n-Whether to embed everything into one HTML file.\n \n-If switched off, there will be several files generated along with the HTML file including files for fonts, css, images.\n-.TP\n-.B --split-pages <0|1> (Default: 0)\n-If turned on, each page is saved in a separated files, also the generated css file will be store separatedly as if single-html=0\n \n-The output files will be named as <output-filename>0.page, <output-filename>1.page, ...\n .TP\n-.B --embed-base-font <0|1> (Default: 1)\n-Whether to embed base 14 fonts.\n+.B Embedded Fonts\n+.TP\n+.B --embed-standard-font\n+Whether to embed standard 14 fonts.\n \n There are several base font defined in PDF standards, which are supposed to be provided by the PDF reader.\n \n If this switch is on, local matched font will be used and embedded; otherwise only font names are exported such that web browsers may try to find proper fonts themselves.\n .TP\n-.B --embed-external-font <0|1> (Default: 0)\n-Similar as above but for non-base fonts.\n+.B --embed-external-fonts\n+Same as above except for non-standard 14 fonts.\n+.TP\n+.B --font-suffix <suffix> (Default: .ttf)\n+Specify the suffix and format of fonts extracted from the PDF file. If it's empty, the file name will be determined automatically.\n .TP\n-.B --decompose-ligature <0|1> (Default: 0)\n+.B --decompose-ligatures\n Decompose ligatures. For example 'fi' -> 'f''i'.\n .TP\n-.B --heps <len>, --veps <len> (Default: 1)\n+.B --keep-unused-glyphs\n+Keep unused glyphs in embedded fonts. Results in larger file sizes.\n+.TP\n+.B --auto-hint\n+If set to 1, hints will be generated for the fonts using fontforge. \n+\n+This may be preceded by --external-hint-tool.\n+.B --external-hint-tool <tool> (Default: <none>)\n+If specified, the tool will be called in order to enhanced hinting for fonts, this will precede --auto-hint.\n+\n+The tool will be called as '<tool> <in.suffix> <out.suffix>', where suffix will be the same as specified for --font-suffix.\n+.TP\n+.TP\n+.B --stretch-narrow-glyphs\n+Glyphs narrower than described in PDF will be stretched; otherwise space will be padded to the right of the glyphs\n+.TP\n+.B --dont-shrink-wide-glyphs\n+Truncate wide glyphs rather than shrinking them.\n+\n+\n+.TP\n+.B Text\n+.TP\n+.B --h-merge-threshold <len>, --v-merge-threshold <len> (Default: 1)",
        "path": "pdf2htmlEX.1.in",
        "position": 145,
        "original_position": 145,
        "commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "original_commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Kind of too long, while I don't have a better name..\n",
        "created_at": "2013-01-27T06:34:41Z",
        "updated_at": "2013-01-27T06:35:11Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786151",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786151"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786151"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786153",
        "pull_request_review_id": null,
        "id": 2786153,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODYxNTM=",
        "diff_hunk": "@@ -23,20 +23,34 @@ Other objects are rendered as images and also embedded.\n \n .SH OPTIONS\n .TP\n-.B --help\n-Show all options\n+.B Pages\n .TP\n-.B -v, --version\n-Show copyright and version\n .TP\n-.B -o, --owner-password <password>\n-Specify owner password\n+.B -f, --first-page <int> (Default: 1)\n+The first page to process\n .TP\n-.B -u, --user-password <password>\n-Specify user password\n+.B -l, --last-page <int> (Default: last page)\n+The last page to process\n+\n+\n .TP\n-.B --no-drm <0|1> (Default: 0)\n-Override document DRM settings\n+.B Dimensions\n+.TP\n+.B --zoom <ratio>, --fit-width <width>, --fit-height <height>\n+--zoom specifies the zoom factor directly; --fit-width/height specifies the maximum width/height of a page, the values are in pixels.\n+.TP\n+.B --cropbox\n+Use the PDF's CropBox instead of MediaBox for output\n+.TP\n+.B --hdpi <dpi>, --vdpi <dpi> (Default: 144)\n+The horizontal and vertical DPI for graphics\n+\n+\n+.TP\n+.B Output Files\n+.TP\n+.B --multiple-files",
        "path": "pdf2htmlEX.1.in",
        "position": 55,
        "original_position": 55,
        "commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "original_commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is more confusing than `single-html` to me.\nMaybe --dont-embed-all ? not sure\n",
        "created_at": "2013-01-27T06:36:03Z",
        "updated_at": "2013-01-27T06:36:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786153",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786153"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786153"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786155",
        "pull_request_review_id": null,
        "id": 2786155,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODYxNTU=",
        "diff_hunk": "@@ -59,52 +54,58 @@ void show_version_and_exit(const char * dummy = nullptr)\n void parse_options (int argc, char **argv)\n {\n     argparser\n-        .add(\"help,h\", \"show all options\", &show_usage_and_exit)\n-        .add(\"version,v\", \"show copyright and version info\", &show_version_and_exit)\n-\n+        // pages\n+        .add(\"first-page,f\", &param.first_page, 1, \"first page to convert\", nullptr, true)\n+        .add(\"last-page,l\", &param.last_page, numeric_limits<int>::max(), \"last page to convert\", nullptr, true)\n+        \n+        // dimensions\n+        .add(\"zoom\", &param.zoom, 0, \"zoom ratio\", nullptr, true)\n+        .add(\"fit-width\", &param.fit_width, 0, \"fit width to <fp> pixels\", nullptr, true)\n+        .add(\"fit-height\", &param.fit_height, 0, \"fit height to <fp> pixels\", nullptr, true)\n+        .add(\"cropbox\", \"use CropBox instead of MediaBox\", [](const char*) { param.use_cropbox = 1; })\n+        .add(\"hdpi\", &param.h_dpi, 144.0, \"horizontal resolution for graphics in DPI\")\n+        .add(\"vdpi\", &param.v_dpi, 144.0, \"vertical resolution for graphics in DPI\")\n+        \n+         // output files\n+        .add(\"multiple-files\", \"don't combine all output into a single HTML file\", [](const char*) { param.multiple_files = 1; })\n+        .add(\"dest-dir\", &param.dest_dir, \".\", \"destination directory\", nullptr, true)\n+        .add(\"data-dir\", &param.data_dir, PDF2HTMLEX_DATA_PATH, \"data directory\")\n+        .add(\"css-filename\", &param.css_filename, \"\", \"filename of the generated CSS file\", nullptr, true)\n+        \n+        // embedded fonts\n+        .add(\"embed-standard-fonts\", \"embed local match for standard 14 fonts\", [](const char*) { param.embed_base_font = 1; })\n+        .add(\"embed-external-fonts\", \"embed local match for external fonts\", [](const char*) { param.embed_external_font = 1; })\n+        .add(\"font-suffix\", &param.font_suffix, \".ttf\", \"format for embedded font files (.ttf*,.otf,.woff,.svg)\", nullptr, true)\n+        .add(\"decompose-ligatures\", \"decompose ligatures, such as \\uFB01 -> fi\", [](const char*) { param.decompose_ligature = 1; })\n+        .add(\"keep-unused-glyphs\", \"keep unused glyphs in embedded fonts\", [](const char*) { param.keep_unused_glyph = 1; })\n+        .add(\"auto-hint\", \"use fontforge autohint on fonts without hints\", [](const char*) { param.auto_hint = 1; })\n+        .add(\"external-hint-tool\", &param.external_hint_tool, \"\", \"external tool for hinting fonts (overrides --auto-hint)\", nullptr, true)\n+        .add(\"stretch-narrow-glyphs\", \"stretch narrow glyphs instead of padding them\", [](const char*) { param.stretch_narrow_glyph = 1; })\n+        .add(\"dont-shrink-wide-glyphs\", \"truncating wide glyphs instead of shrinking them\", [](const char*) { param.dont_shrink_wide_glyph = 1; })\n+        \n+        // text\n+        .add(\"h-merge-threshold\", &param.h_eps, 1.0, \"horizontal threshold for merging text, in pixels\")\n+        .add(\"v-merge-threshold\", &param.v_eps, 1.0, \"vertical threshold for merging text, in pixels\")\n+        .add(\"word-break-threshold\", &param.space_threshold, (1.0/8), \"word break threshold (threshold * em)\")\n+        .add(\"font-size-multiplier\", &param.font_size_multiplier, 4.0, \"a value greater than 1 increases the rendering accuracy\")\n+        .add(\"space-as-offset\", \"treat space characters as offsets\", [](const char*) { param.space_as_offset = 1; })\n+        .add(\"tounicode\", &param.tounicode, 0, \"how to handle ToUnicode CMaps (0=auto*, 1=force, -1=ignore)\", nullptr, true)\n+        \n+        // encryption\n         .add(\"owner-password,o\", &param.owner_password, \"\", \"owner password (for encrypted files)\", nullptr, true)\n         .add(\"user-password,u\", &param.user_password, \"\", \"user password (for encrypted files)\", nullptr, true)\n-        .add(\"no-drm\", &param.no_drm, 0, \"override document DRM settings\")\n-\n-        .add(\"dest-dir\", &param.dest_dir, \".\", \"specify destination directory\")\n-        .add(\"data-dir\", &param.data_dir, PDF2HTMLEX_DATA_PATH, \"specify data directory\")\n-\n-        .add(\"first-page,f\", &param.first_page, 1, \"first page to process\")\n-        .add(\"last-page,l\", &param.last_page, numeric_limits<int>::max(), \"last page to process\")\n-\n-        .add(\"zoom\", &param.zoom, 0, \"zoom ratio\", nullptr, true)\n-        .add(\"fit-width\", &param.fit_width, 0, \"fit width to <arg> pixels\", nullptr, true) \n-        .add(\"fit-height\", &param.fit_height, 0, \"fit height to <arg> pixels\", nullptr, true)\n-        .add(\"hdpi\", &param.h_dpi, 144.0, \"horizontal DPI for non-text\")\n-        .add(\"vdpi\", &param.v_dpi, 144.0, \"vertical DPI for non-text\")\n-        .add(\"use-cropbox\", &param.use_cropbox, 0, \"use CropBox instead of MediaBox\")\n-\n-        .add(\"process-nontext\", &param.process_nontext, 1, \"process nontext objects\")\n-        .add(\"single-html\", &param.single_html, 1, \"combine everything into one single HTML file\")\n-        .add(\"split-pages\", &param.split_pages, 0, \"split pages into separated files\")\n-        .add(\"embed-base-font\", &param.embed_base_font, 0, \"embed local matched font for base 14 fonts in the PDF file\")\n-        .add(\"embed-external-font\", &param.embed_external_font, 0, \"embed local matched font for external fonts in the PDF file\")\n-        .add(\"decompose-ligature\", &param.decompose_ligature, 0, \"decompose ligatures, for example 'fi' -> 'f''i'\")\n-\n-        .add(\"heps\", &param.h_eps, 1.0, \"max tolerated horizontal offset (in pixels)\")\n-        .add(\"veps\", &param.v_eps, 1.0, \"max tolerated vertical offset (in pixels)\")\n-        .add(\"space-threshold\", &param.space_threshold, (1.0/8), \"distance no thiner than (threshold * em) will be considered as a space character\")\n-        .add(\"font-size-multiplier\", &param.font_size_multiplier, 4.0, \"setting a value greater than 1 would increase the rendering accuracy\")\n-        .add(\"auto-hint\", &param.auto_hint, 0, \"Whether to generate hints for fonts\")\n-        .add(\"tounicode\", &param.tounicode, 0, \"Specify how to deal with ToUnicode map, 0 for auto, 1 for forced, -1 for disabled\")\n-        .add(\"space-as-offset\", &param.space_as_offset, 0, \"treat space characters as offsets\")\n-        .add(\"stretch-narrow-glyph\", &param.stretch_narrow_glyph, 0, \"stretch narrow glyphs instead of padding space\")\n-        .add(\"squeeze-wide-glyph\", &param.squeeze_wide_glyph, 1, \"squeeze wide glyphs instead of truncating\")\n-        .add(\"remove-unused-glyph\", &param.remove_unused_glyph, 1, \"remove unused glyphs in embedded fonts\")\n-\n-        .add(\"font-suffix\", &param.font_suffix, \".ttf\", \"suffix for extracted font files\")\n-        .add(\"font-format\", &param.font_format, \"opentype\", \"format for extracted font files\")\n-        .add(\"external-hint-tool\", &param.external_hint_tool, \"\", \"external tool for hintting fonts.(overrides --auto-hint)\")\n-        .add(\"css-filename\", &param.css_filename, \"\", \"Specify the file name of the generated css file\")\n-\n-        .add(\"debug\", &param.debug, 0, \"output debug information\")\n-        .add(\"clean-tmp\", &param.clean_tmp, 1, \"clean temporary files after processing\")\n-        .add(\"css-draw\", &param.css_draw, 0, \"[Experimental and Unsupported] CSS Drawing\")\n+        .add(\"no-drm\", \"override document DRM settings\", [](const char*) { param.no_drm = 1; })\n+        \n+        // misc.\n+        .add(\"keep-temp\", \"keep temporary files after processing\", [](const char*) { param.keep_temp = 1; })\n+        .add(\"debug\", \"[debug] print debug information\", [](const char*) { param.debug = 1; })\n+        .add(\"debug-split-pages\", \"[debug] split pages into separate .page files\", [](const char*) { param.split_pages = 1; })",
        "path": "src/pdf2htmlEX.cc",
        "position": 108,
        "original_position": 108,
        "commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "original_commit_id": "897c551ead0cc87a35af7e4dc141a62bf8b44022",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this is not for debug\n",
        "created_at": "2013-01-27T06:38:13Z",
        "updated_at": "2013-01-27T06:38:13Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786155",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2786155"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/77#discussion_r2786155"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2805398",
        "pull_request_review_id": null,
        "id": 2805398,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDUzOTg=",
        "diff_hunk": "@@ -81,6 +75,27 @@ If turned on, pages will be stored into separated files named as <output-filenam\n Also the css and outline will be stored into separated files, and the will be no <output-filename>.html generated.\n \n This switch is useful if you want pages to be loaded separately & dynamically -- in which case you need to compose the page yourself, and a supporting backend might be necessary.\n+\n+.TP\n+.B --dest-dir <dir> (Default: .)\n+Specify destination folder\n+\n+.TP\n+.B --css-filename <filename> (Default: <none>)\n+Specify the filename of the generated css file, if not embedded.\n+\n+If it's empty, the file name will be determined automatically.\n+\n+.TP\n+.B --outline-filename <filename> (Default: <none>)\n+Specify the filename of the generated outline file, if not embedded.\n+\n+If it's empty, the file name will be determined automatically.\n+\n+\n+.TP\n+.B Embedded Fonts",
        "path": "pdf2htmlEX.1.in",
        "position": null,
        "original_position": 99,
        "commit_id": "efbd9c8c1effb3f7d71d6b79a548642c9be8f247",
        "original_commit_id": "6c16aedb634a8358371143db94e1f8a2c30a2bf2",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "They're not for 'embedded' fonts only, just for all fonts.\n",
        "created_at": "2013-01-29T07:54:51Z",
        "updated_at": "2013-01-29T10:39:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/78#discussion_r2805398",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/78",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2805398"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/78#discussion_r2805398"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2805488",
        "pull_request_review_id": null,
        "id": 2805488,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDU0ODg=",
        "diff_hunk": "@@ -175,8 +186,17 @@ class ArgParser\n \n     for(int i = s.size(); i < arg_col_width; ++i)\n         out << ' ';\n-\n-    out << \" \" << description << std::endl;\n+    \n+    out << \" \" << description;\n+    \n+    if(need_arg && !dont_show_default)\n+    {\n+        out << \" (default is \";",
        "path": "src/util/ArgParser.h",
        "position": null,
        "original_position": 50,
        "commit_id": "efbd9c8c1effb3f7d71d6b79a548642c9be8f247",
        "original_commit_id": "6c16aedb634a8358371143db94e1f8a2c30a2bf2",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe change to \"(Default: \"\n",
        "created_at": "2013-01-29T08:10:40Z",
        "updated_at": "2013-01-29T10:39:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/78#discussion_r2805488",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/78",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2805488"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/78#discussion_r2805488"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2806784",
        "pull_request_review_id": null,
        "id": 2806784,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDY3ODQ=",
        "diff_hunk": "@@ -81,6 +75,27 @@ If turned on, pages will be stored into separated files named as <output-filenam\n Also the css and outline will be stored into separated files, and the will be no <output-filename>.html generated.\n \n This switch is useful if you want pages to be loaded separately & dynamically -- in which case you need to compose the page yourself, and a supporting backend might be necessary.\n+\n+.TP\n+.B --dest-dir <dir> (Default: .)\n+Specify destination folder\n+\n+.TP\n+.B --css-filename <filename> (Default: <none>)\n+Specify the filename of the generated css file, if not embedded.\n+\n+If it's empty, the file name will be determined automatically.\n+\n+.TP\n+.B --outline-filename <filename> (Default: <none>)\n+Specify the filename of the generated outline file, if not embedded.\n+\n+If it's empty, the file name will be determined automatically.\n+\n+\n+.TP\n+.B Embedded Fonts",
        "path": "pdf2htmlEX.1.in",
        "position": null,
        "original_position": 99,
        "commit_id": "efbd9c8c1effb3f7d71d6b79a548642c9be8f247",
        "original_commit_id": "6c16aedb634a8358371143db94e1f8a2c30a2bf2",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ok, will change to \"Fonts\"\n",
        "created_at": "2013-01-29T10:27:42Z",
        "updated_at": "2013-01-29T10:39:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/78#discussion_r2806784",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/78",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2806784"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/78#discussion_r2806784"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2806818",
        "pull_request_review_id": null,
        "id": 2806818,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDY4MTg=",
        "diff_hunk": "@@ -175,8 +186,17 @@ class ArgParser\n \n     for(int i = s.size(); i < arg_col_width; ++i)\n         out << ' ';\n-\n-    out << \" \" << description << std::endl;\n+    \n+    out << \" \" << description;\n+    \n+    if(need_arg && !dont_show_default)\n+    {\n+        out << \" (default is \";",
        "path": "src/util/ArgParser.h",
        "position": null,
        "original_position": 50,
        "commit_id": "efbd9c8c1effb3f7d71d6b79a548642c9be8f247",
        "original_commit_id": "6c16aedb634a8358371143db94e1f8a2c30a2bf2",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yeah we could do that\n",
        "created_at": "2013-01-29T10:31:38Z",
        "updated_at": "2013-01-29T10:39:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/78#discussion_r2806818",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/78",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2806818"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/78#discussion_r2806818"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2808345",
        "pull_request_review_id": null,
        "id": 2808345,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDgzNDU=",
        "diff_hunk": "@@ -18,40 +18,62 @@\n \n namespace pdf2htmlEX {\n \n-void HTMLRenderer::export_remote_font(const FontInfo & info, const string & suffix, const string & fontfileformat, GfxFont * font) \n-{\n-    f_css.fs << \"@font-face{\"\n-        << \"font-family:f\" << info.id << \";\"\n-        << \"src:url(\";\n-\n+    void HTMLRenderer::export_remote_font(const FontInfo & info, const string & suffix, GfxFont * font)",
        "path": "src/HTMLRenderer/export.cc",
        "position": null,
        "original_position": 10,
        "commit_id": "b9763d10727c4b7e5c082fc55dc2e2903cdb7912",
        "original_commit_id": "6fda07bec3fb2c111abf866372c61477831887bc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "seems that the indent is wrong?\n",
        "created_at": "2013-01-29T13:21:12Z",
        "updated_at": "2013-01-29T18:14:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/79#discussion_r2808345",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/79",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2808345"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/79#discussion_r2808345"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2811730",
        "pull_request_review_id": null,
        "id": 2811730,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTE3MzA=",
        "diff_hunk": "@@ -111,6 +112,11 @@ void parse_options (int argc, char **argv)\n         \n         .add(\"\", &param.input_filename, \"\", \"\")\n         .add(\"\", &param.output_filename, \"\", \"\")\n+        \n+        // deprecated\n+        .add(\"font-format\", &deprecated_string, \"\", \"\", [] (const char*) {",
        "path": "src/pdf2htmlEX.cc",
        "position": 23,
        "original_position": 23,
        "commit_id": "b9763d10727c4b7e5c082fc55dc2e2903cdb7912",
        "original_commit_id": "b2d28e2490c3c032983454f7817584d1eae64c18",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "A pointer to a local variable here is not a good idea. I will change it such that nullptr can be accepted.\n",
        "created_at": "2013-01-29T17:05:28Z",
        "updated_at": "2013-01-29T18:14:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/79#discussion_r2811730",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/79",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2811730"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/79#discussion_r2811730"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2812737",
        "pull_request_review_id": null,
        "id": 2812737,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTI3Mzc=",
        "diff_hunk": "@@ -111,6 +112,11 @@ void parse_options (int argc, char **argv)\n         \n         .add(\"\", &param.input_filename, \"\", \"\")\n         .add(\"\", &param.output_filename, \"\", \"\")\n+        \n+        // deprecated\n+        .add(\"font-format\", &deprecated_string, \"\", \"\", [] (const char*) {",
        "path": "src/pdf2htmlEX.cc",
        "position": 23,
        "original_position": 23,
        "commit_id": "b9763d10727c4b7e5c082fc55dc2e2903cdb7912",
        "original_commit_id": "b2d28e2490c3c032983454f7817584d1eae64c18",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I had tried that but getopt treats a nullptr as meaning the flag does not accept an argument:\n\n```\n./pdf2htmlEX --font-format=foo\npdf2htmlEX: option `--font-format' doesn't allow an argument\n```\n",
        "created_at": "2013-01-29T18:10:20Z",
        "updated_at": "2013-01-29T18:14:29Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/79#discussion_r2812737",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/79",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2812737"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/79#discussion_r2812737"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855734",
        "pull_request_review_id": null,
        "id": 2855734,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTU3MzQ=",
        "diff_hunk": "@@ -125,6 +125,22 @@ span {\n }\n .a {\n }\n+/* transparent color - Firefox, IE, etc. */\n+.ct { /*fill*/\n+  color: white;",
        "path": "share/base.css",
        "position": 6,
        "original_position": 6,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why not `color:transparent`\nwe cannot assume that the background is white.\n\nAnd yeah, we are running out of letters for the classes, I'll have to rearrange them.\n",
        "created_at": "2013-02-01T05:24:14Z",
        "updated_at": "2013-02-01T05:24:14Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855734",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855734"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855734"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855741",
        "pull_request_review_id": null,
        "id": 2855741,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTU3NDE=",
        "diff_hunk": "@@ -235,7 +236,8 @@ class HTMLRenderer : public OutputDev\n         long long install_transform_matrix(const double * tm);\n         long long install_letter_space(double letter_space);\n         long long install_word_space(double word_space);\n-        long long install_color(const GfxRGB * rgb);\n+        long long install_fill_color(const GfxRGB * rgb);",
        "path": "src/HTMLRenderer/HTMLRenderer.h",
        "position": 15,
        "original_position": 15,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "As we have too many `types of states`, I'll need to create a class for this, after merging your commit, something like in #50 \n",
        "created_at": "2013-02-01T05:26:02Z",
        "updated_at": "2013-02-01T05:26:02Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855741",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855741"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855741"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855760",
        "pull_request_review_id": null,
        "id": 2855760,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTU3NjA=",
        "diff_hunk": "@@ -125,6 +125,22 @@ span {\n }\n .a {\n }\n+/* transparent color - Firefox, IE, etc. */\n+.ct { /*fill*/\n+  color: white;\n+}\n+.Ct { /*stroke*/",
        "path": "share/base.css",
        "position": 8,
        "original_position": 8,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ct Ct and Cd look ugly.\n\nOriginally I use single characters in order to reduce the size of output. Now I realized that the dominating parts are fonts and images.\n\nHowever we can still save a few kilo bytes from the class names.\n\nThere are two options:\n- since we have to use 2-char class names (or just ignore readability at all...), I'll rename all of them, for example `fn` for font name, `fs` for font size etc\n- use macros and just assign the letters sequentially... like const char FONT_SIZE_CLASS='a'; ...='b' etc. We have still some time before reaching 26 (or 52) class types.\n  Maybe the 2nd one is better..\n",
        "created_at": "2013-02-01T05:29:42Z",
        "updated_at": "2013-02-01T05:30:24Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855760",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855760"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855760"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855768",
        "pull_request_review_id": null,
        "id": 2855768,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTU3Njg=",
        "diff_hunk": "@@ -125,6 +125,22 @@ span {\n }\n .a {\n }\n+/* transparent color - Firefox, IE, etc. */\n+.ct { /*fill*/\n+  color: white;\n+}\n+.Ct { /*stroke*/\n+    text-shadow: none;\n+}\n+/* transparent color - WebKit */\n+@media screen and (-webkit-min-device-pixel-ratio:0) {",
        "path": "share/base.css",
        "position": 12,
        "original_position": 12,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "what's this line for? (I know it's for WebKit only, but why `screen` and `min-device-pixel-ratio`)\n",
        "created_at": "2013-02-01T05:30:49Z",
        "updated_at": "2013-02-01T05:32:00Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855768",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855768"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855768"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855829",
        "pull_request_review_id": null,
        "id": 2855829,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTU4Mjk=",
        "diff_hunk": "@@ -178,9 +178,29 @@ void HTMLRenderer::export_word_space (long long ws_id, double word_space)\n     f_css.fs << \".w\" << ws_id << \"{word-spacing:\" << round(word_space) << \"px;}\" << endl;\n }\n \n-void HTMLRenderer::export_color (long long color_id, const GfxRGB * rgb) \n+void HTMLRenderer::export_fill_color (long long color_id, const GfxRGB * rgb) \n {\n-    f_css.fs << \".c\" << color_id << \"{color:\" << (*rgb) << \";}\" << endl;\n+    f_css.fs << \".c\" << color_id << \"{color:\" << *rgb << \";}\" << endl;\n+}\n+\n+void HTMLRenderer::export_stroke_color (long long color_id, const GfxRGB * rgb) \n+{   \n+    // TODO: take the stroke width from the graphics state,\n+    //       currently using 0.015em as a good default\n+    \n+    // Firefox, IE, etc.\n+    f_css.fs << \".C\" << color_id << \"{\"\n+             << \"text-shadow: \"\n+             << \"-0.015em 0 \"  << *rgb << \",\" \n+             << \"0 0.015em \"   << *rgb << \",\"\n+             << \"0.015em 0 \"   << *rgb << \",\"\n+             << \"0 -0.015em  \" << *rgb << \";\"\n+             << \"}\" << endl;\n+    \n+    // WebKit\n+    f_css.fs << \"@media screen and (-webkit-min-device-pixel-ratio:0) {\";\n+    f_css.fs << \".C\" << color_id << \"{-webkit-text-stroke: 0.015em \" << *rgb << \";text-shadow: none;}\";\n+    f_css.fs << \"}\";",
        "path": "src/HTMLRenderer/export.cc",
        "position": 28,
        "original_position": 28,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For Firefox, we can use text-shadow in 4 directions to simluate this\nhttps://github.com/coolwanglu/pdf2htmlEX/pull/81/files\n",
        "created_at": "2013-02-01T05:40:08Z",
        "updated_at": "2013-02-01T05:40:16Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855829",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855829"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855829"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855838",
        "pull_request_review_id": null,
        "id": 2855838,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTU4Mzg=",
        "diff_hunk": "@@ -350,25 +356,65 @@ void HTMLRenderer::check_state_change(GfxState * state)\n     }\n \n     // color\n-    if(all_changed || color_changed)\n+    if(all_changed || fill_color_changed || stroke_color_changed)\n     {\n-        GfxRGB new_color;\n         /*\n          * Render modes 0 2 4 6 fill text (stroke or not)\n          * Render modes 1 5 stroke only\n          * Render modes 3 7 hidden (but ok, we won't even draw text)\n          */\n-        if(state->getRender() % 2 == 0)\n-            state->getFillRGB(&new_color);\n-        else\n-            state->getStrokeRGB(&new_color);\n-\n-        if(!((new_color.r == cur_color.r) && (new_color.g == cur_color.g) && (new_color.b == cur_color.b)))\n+        \n+        // PDF Spec. Table 106 \u2013  Text rendering modes\n+        bool is_filled, is_stroked;\n+        switch (state->getRender()) {",
        "path": "src/HTMLRenderer/state.cc",
        "position": 77,
        "original_position": 77,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think gcc is clever enough. \nI'd suggest to use an (const static) array here and get is_filled/stroked by index\n",
        "created_at": "2013-02-01T05:42:07Z",
        "updated_at": "2013-02-01T05:42:07Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855838",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855838"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855838"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855861",
        "pull_request_review_id": null,
        "id": 2855861,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTU4NjE=",
        "diff_hunk": "@@ -350,25 +356,65 @@ void HTMLRenderer::check_state_change(GfxState * state)\n     }\n \n     // color\n-    if(all_changed || color_changed)\n+    if(all_changed || fill_color_changed || stroke_color_changed)\n     {\n-        GfxRGB new_color;\n         /*\n          * Render modes 0 2 4 6 fill text (stroke or not)\n          * Render modes 1 5 stroke only\n          * Render modes 3 7 hidden (but ok, we won't even draw text)\n          */\n-        if(state->getRender() % 2 == 0)\n-            state->getFillRGB(&new_color);\n-        else\n-            state->getStrokeRGB(&new_color);\n-\n-        if(!((new_color.r == cur_color.r) && (new_color.g == cur_color.g) && (new_color.b == cur_color.b)))\n+        \n+        // PDF Spec. Table 106 \u2013  Text rendering modes\n+        bool is_filled, is_stroked;\n+        switch (state->getRender()) {\n+            case 0: is_filled = true;  is_stroked = false; break;\n+            case 1: is_filled = false; is_stroked = true;  break;\n+            case 2: is_filled = true;  is_stroked = true;  break;\n+            case 3: is_filled = false; is_stroked = false; break;\n+            case 4: is_filled = true;  is_stroked = false; break;\n+            case 5: is_filled = false; is_stroked = true;  break;\n+            case 6: is_filled = true;  is_stroked = true;  break;\n+            case 7: is_filled = false; is_stroked = false; break;\n+        }\n+        \n+        GfxRGB new_color;\n+        \n+        // fill\n+        state->getFillRGB(&new_color);\n+        \n+        if(cur_has_fill != is_filled ||\n+            !((new_color.r == cur_fill_color.r) &&",
        "path": "src/HTMLRenderer/state.cc",
        "position": 94,
        "original_position": 94,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "GfxRGB_equal is available\n",
        "created_at": "2013-02-01T05:46:45Z",
        "updated_at": "2013-02-01T05:46:45Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855861",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855861"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855861"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855862",
        "pull_request_review_id": null,
        "id": 2855862,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTU4NjI=",
        "diff_hunk": "@@ -350,25 +356,65 @@ void HTMLRenderer::check_state_change(GfxState * state)\n     }\n \n     // color\n-    if(all_changed || color_changed)\n+    if(all_changed || fill_color_changed || stroke_color_changed)\n     {\n-        GfxRGB new_color;\n         /*\n          * Render modes 0 2 4 6 fill text (stroke or not)\n          * Render modes 1 5 stroke only\n          * Render modes 3 7 hidden (but ok, we won't even draw text)\n          */\n-        if(state->getRender() % 2 == 0)\n-            state->getFillRGB(&new_color);\n-        else\n-            state->getStrokeRGB(&new_color);\n-\n-        if(!((new_color.r == cur_color.r) && (new_color.g == cur_color.g) && (new_color.b == cur_color.b)))\n+        \n+        // PDF Spec. Table 106 \u2013  Text rendering modes\n+        bool is_filled, is_stroked;\n+        switch (state->getRender()) {\n+            case 0: is_filled = true;  is_stroked = false; break;\n+            case 1: is_filled = false; is_stroked = true;  break;\n+            case 2: is_filled = true;  is_stroked = true;  break;\n+            case 3: is_filled = false; is_stroked = false; break;\n+            case 4: is_filled = true;  is_stroked = false; break;\n+            case 5: is_filled = false; is_stroked = true;  break;\n+            case 6: is_filled = true;  is_stroked = true;  break;\n+            case 7: is_filled = false; is_stroked = false; break;\n+        }\n+        \n+        GfxRGB new_color;\n+        \n+        // fill\n+        state->getFillRGB(&new_color);",
        "path": "src/HTMLRenderer/state.cc",
        "position": 91,
        "original_position": 91,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we don't need to update cur_fill_color unless `is_filled` is true.\nsame for storke color below\n",
        "created_at": "2013-02-01T05:47:28Z",
        "updated_at": "2013-02-01T05:47:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855862",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2855862"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2855862"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858381",
        "pull_request_review_id": null,
        "id": 2858381,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTgzODE=",
        "diff_hunk": "@@ -125,6 +125,22 @@ span {\n }\n .a {\n }\n+/* transparent color - Firefox, IE, etc. */\n+.ct { /*fill*/\n+  color: white;",
        "path": "share/base.css",
        "position": 6,
        "original_position": 6,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It doesn't work because the shadow occupies _the entire area behind the text_ and not just _the area around the edges_. So you end up just seing the shadow color filling the entire text, which is equivalent to filling the text with the stroke color. Presuming the background is white is the best we can do, it's going to work 80% of the time.\n",
        "created_at": "2013-02-01T12:11:18Z",
        "updated_at": "2013-02-01T12:11:18Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858381",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858381"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858381"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858407",
        "pull_request_review_id": null,
        "id": 2858407,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg0MDc=",
        "diff_hunk": "@@ -125,6 +125,22 @@ span {\n }\n .a {\n }\n+/* transparent color - Firefox, IE, etc. */\n+.ct { /*fill*/\n+  color: white;\n+}\n+.Ct { /*stroke*/",
        "path": "share/base.css",
        "position": 8,
        "original_position": 8,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> for example fn for font name, fs for font size etc\n\nI prefer this option, the output will get gzipped anyway by most sensible HTTP servers\n",
        "created_at": "2013-02-01T12:15:13Z",
        "updated_at": "2013-02-01T12:15:13Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858407",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858407"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858407"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858419",
        "pull_request_review_id": null,
        "id": 2858419,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg0MTk=",
        "diff_hunk": "@@ -125,6 +125,22 @@ span {\n }\n .a {\n }\n+/* transparent color - Firefox, IE, etc. */\n+.ct { /*fill*/\n+  color: white;\n+}\n+.Ct { /*stroke*/\n+    text-shadow: none;\n+}\n+/* transparent color - WebKit */\n+@media screen and (-webkit-min-device-pixel-ratio:0) {",
        "path": "share/base.css",
        "position": 12,
        "original_position": 12,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is just a trick to get WebKit-only CSS. It's for the screen as in `screen` vs `print`, `-webkit-min-device-pixel-ratio` is asking for a minimum PPI on the device (e.g. iPhone retina display is ratio of 2).\n",
        "created_at": "2013-02-01T12:16:13Z",
        "updated_at": "2013-02-01T12:17:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858419",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858419"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858419"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858441",
        "pull_request_review_id": null,
        "id": 2858441,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg0NDE=",
        "diff_hunk": "@@ -235,7 +236,8 @@ class HTMLRenderer : public OutputDev\n         long long install_transform_matrix(const double * tm);\n         long long install_letter_space(double letter_space);\n         long long install_word_space(double word_space);\n-        long long install_color(const GfxRGB * rgb);\n+        long long install_fill_color(const GfxRGB * rgb);",
        "path": "src/HTMLRenderer/HTMLRenderer.h",
        "position": 15,
        "original_position": 15,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sounds like a good idea.\n",
        "created_at": "2013-02-01T12:18:50Z",
        "updated_at": "2013-02-01T12:18:50Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858441",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858441"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858441"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858446",
        "pull_request_review_id": null,
        "id": 2858446,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg0NDY=",
        "diff_hunk": "@@ -178,9 +178,29 @@ void HTMLRenderer::export_word_space (long long ws_id, double word_space)\n     f_css.fs << \".w\" << ws_id << \"{word-spacing:\" << round(word_space) << \"px;}\" << endl;\n }\n \n-void HTMLRenderer::export_color (long long color_id, const GfxRGB * rgb) \n+void HTMLRenderer::export_fill_color (long long color_id, const GfxRGB * rgb) \n {\n-    f_css.fs << \".c\" << color_id << \"{color:\" << (*rgb) << \";}\" << endl;\n+    f_css.fs << \".c\" << color_id << \"{color:\" << *rgb << \";}\" << endl;\n+}\n+\n+void HTMLRenderer::export_stroke_color (long long color_id, const GfxRGB * rgb) \n+{   \n+    // TODO: take the stroke width from the graphics state,\n+    //       currently using 0.015em as a good default\n+    \n+    // Firefox, IE, etc.\n+    f_css.fs << \".C\" << color_id << \"{\"\n+             << \"text-shadow: \"\n+             << \"-0.015em 0 \"  << *rgb << \",\" \n+             << \"0 0.015em \"   << *rgb << \",\"\n+             << \"0.015em 0 \"   << *rgb << \",\"\n+             << \"0 -0.015em  \" << *rgb << \";\"\n+             << \"}\" << endl;\n+    \n+    // WebKit\n+    f_css.fs << \"@media screen and (-webkit-min-device-pixel-ratio:0) {\";\n+    f_css.fs << \".C\" << color_id << \"{-webkit-text-stroke: 0.015em \" << *rgb << \";text-shadow: none;}\";\n+    f_css.fs << \"}\";",
        "path": "src/HTMLRenderer/export.cc",
        "position": 28,
        "original_position": 28,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, that's what it does.\n",
        "created_at": "2013-02-01T12:19:44Z",
        "updated_at": "2013-02-01T12:19:44Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858446",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858446"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858446"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858468",
        "pull_request_review_id": null,
        "id": 2858468,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg0Njg=",
        "diff_hunk": "@@ -350,25 +356,65 @@ void HTMLRenderer::check_state_change(GfxState * state)\n     }\n \n     // color\n-    if(all_changed || color_changed)\n+    if(all_changed || fill_color_changed || stroke_color_changed)\n     {\n-        GfxRGB new_color;\n         /*\n          * Render modes 0 2 4 6 fill text (stroke or not)\n          * Render modes 1 5 stroke only\n          * Render modes 3 7 hidden (but ok, we won't even draw text)\n          */\n-        if(state->getRender() % 2 == 0)\n-            state->getFillRGB(&new_color);\n-        else\n-            state->getStrokeRGB(&new_color);\n-\n-        if(!((new_color.r == cur_color.r) && (new_color.g == cur_color.g) && (new_color.b == cur_color.b)))\n+        \n+        // PDF Spec. Table 106 \u2013  Text rendering modes\n+        bool is_filled, is_stroked;\n+        switch (state->getRender()) {",
        "path": "src/HTMLRenderer/state.cc",
        "position": 77,
        "original_position": 77,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Probably not the # 1 optimisation on the list of things to do. Doing less file I/O for example would save you seconds on each run of pdf2htmlEX...\n",
        "created_at": "2013-02-01T12:21:58Z",
        "updated_at": "2013-02-01T12:23:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858468",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858468"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858468"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858488",
        "pull_request_review_id": null,
        "id": 2858488,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg0ODg=",
        "diff_hunk": "@@ -350,25 +356,65 @@ void HTMLRenderer::check_state_change(GfxState * state)\n     }\n \n     // color\n-    if(all_changed || color_changed)\n+    if(all_changed || fill_color_changed || stroke_color_changed)\n     {\n-        GfxRGB new_color;\n         /*\n          * Render modes 0 2 4 6 fill text (stroke or not)\n          * Render modes 1 5 stroke only\n          * Render modes 3 7 hidden (but ok, we won't even draw text)\n          */\n-        if(state->getRender() % 2 == 0)\n-            state->getFillRGB(&new_color);\n-        else\n-            state->getStrokeRGB(&new_color);\n-\n-        if(!((new_color.r == cur_color.r) && (new_color.g == cur_color.g) && (new_color.b == cur_color.b)))\n+        \n+        // PDF Spec. Table 106 \u2013  Text rendering modes\n+        bool is_filled, is_stroked;\n+        switch (state->getRender()) {\n+            case 0: is_filled = true;  is_stroked = false; break;\n+            case 1: is_filled = false; is_stroked = true;  break;\n+            case 2: is_filled = true;  is_stroked = true;  break;\n+            case 3: is_filled = false; is_stroked = false; break;\n+            case 4: is_filled = true;  is_stroked = false; break;\n+            case 5: is_filled = false; is_stroked = true;  break;\n+            case 6: is_filled = true;  is_stroked = true;  break;\n+            case 7: is_filled = false; is_stroked = false; break;\n+        }\n+        \n+        GfxRGB new_color;\n+        \n+        // fill\n+        state->getFillRGB(&new_color);\n+        \n+        if(cur_has_fill != is_filled ||\n+            !((new_color.r == cur_fill_color.r) &&",
        "path": "src/HTMLRenderer/state.cc",
        "position": 94,
        "original_position": 94,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's your code, not mine.\n",
        "created_at": "2013-02-01T12:24:30Z",
        "updated_at": "2013-02-01T12:24:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858488",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858488"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858488"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858553",
        "pull_request_review_id": null,
        "id": 2858553,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg1NTM=",
        "diff_hunk": "@@ -350,25 +356,65 @@ void HTMLRenderer::check_state_change(GfxState * state)\n     }\n \n     // color\n-    if(all_changed || color_changed)\n+    if(all_changed || fill_color_changed || stroke_color_changed)\n     {\n-        GfxRGB new_color;\n         /*\n          * Render modes 0 2 4 6 fill text (stroke or not)\n          * Render modes 1 5 stroke only\n          * Render modes 3 7 hidden (but ok, we won't even draw text)\n          */\n-        if(state->getRender() % 2 == 0)\n-            state->getFillRGB(&new_color);\n-        else\n-            state->getStrokeRGB(&new_color);\n-\n-        if(!((new_color.r == cur_color.r) && (new_color.g == cur_color.g) && (new_color.b == cur_color.b)))\n+        \n+        // PDF Spec. Table 106 \u2013  Text rendering modes\n+        bool is_filled, is_stroked;\n+        switch (state->getRender()) {\n+            case 0: is_filled = true;  is_stroked = false; break;\n+            case 1: is_filled = false; is_stroked = true;  break;\n+            case 2: is_filled = true;  is_stroked = true;  break;\n+            case 3: is_filled = false; is_stroked = false; break;\n+            case 4: is_filled = true;  is_stroked = false; break;\n+            case 5: is_filled = false; is_stroked = true;  break;\n+            case 6: is_filled = true;  is_stroked = true;  break;\n+            case 7: is_filled = false; is_stroked = false; break;\n+        }\n+        \n+        GfxRGB new_color;\n+        \n+        // fill\n+        state->getFillRGB(&new_color);",
        "path": "src/HTMLRenderer/state.cc",
        "position": 91,
        "original_position": 91,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sorry, what line are you commenting on?\n",
        "created_at": "2013-02-01T12:33:23Z",
        "updated_at": "2013-02-01T12:33:23Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858553",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858553"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858553"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858814",
        "pull_request_review_id": null,
        "id": 2858814,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg4MTQ=",
        "diff_hunk": "@@ -125,6 +125,22 @@ span {\n }\n .a {\n }\n+/* transparent color - Firefox, IE, etc. */\n+.ct { /*fill*/\n+  color: white;",
        "path": "share/base.css",
        "position": 6,
        "original_position": 6,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Right..hmm let me think about it\n",
        "created_at": "2013-02-01T13:10:31Z",
        "updated_at": "2013-02-01T13:10:31Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858814",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858814"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858814"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858829",
        "pull_request_review_id": null,
        "id": 2858829,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg4Mjk=",
        "diff_hunk": "@@ -125,6 +125,22 @@ span {\n }\n .a {\n }\n+/* transparent color - Firefox, IE, etc. */\n+.ct { /*fill*/\n+  color: white;\n+}\n+.Ct { /*stroke*/",
        "path": "share/base.css",
        "position": 8,
        "original_position": 8,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For sequential version, we can easily ensure no collision, and we have the constants/marcos anyway. \nFor 2-char version, we need to carefully assign them each time we add a new one.\n\nThe only difference is readability in HTML.\n",
        "created_at": "2013-02-01T13:12:12Z",
        "updated_at": "2013-02-01T13:12:12Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858829",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858829"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858829"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858858",
        "pull_request_review_id": null,
        "id": 2858858,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg4NTg=",
        "diff_hunk": "@@ -125,6 +125,22 @@ span {\n }\n .a {\n }\n+/* transparent color - Firefox, IE, etc. */\n+.ct { /*fill*/\n+  color: white;\n+}\n+.Ct { /*stroke*/\n+    text-shadow: none;\n+}\n+/* transparent color - WebKit */\n+@media screen and (-webkit-min-device-pixel-ratio:0) {",
        "path": "share/base.css",
        "position": 12,
        "original_position": 12,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "printing is not supported right now, I guess we can ignore @media for now.\n\nDoes the ppi thing depend on @media screen?\n",
        "created_at": "2013-02-01T13:17:03Z",
        "updated_at": "2013-02-01T13:17:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858858",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858858"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858858"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858868",
        "pull_request_review_id": null,
        "id": 2858868,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg4Njg=",
        "diff_hunk": "@@ -178,9 +178,29 @@ void HTMLRenderer::export_word_space (long long ws_id, double word_space)\n     f_css.fs << \".w\" << ws_id << \"{word-spacing:\" << round(word_space) << \"px;}\" << endl;\n }\n \n-void HTMLRenderer::export_color (long long color_id, const GfxRGB * rgb) \n+void HTMLRenderer::export_fill_color (long long color_id, const GfxRGB * rgb) \n {\n-    f_css.fs << \".c\" << color_id << \"{color:\" << (*rgb) << \";}\" << endl;\n+    f_css.fs << \".c\" << color_id << \"{color:\" << *rgb << \";}\" << endl;\n+}\n+\n+void HTMLRenderer::export_stroke_color (long long color_id, const GfxRGB * rgb) \n+{   \n+    // TODO: take the stroke width from the graphics state,\n+    //       currently using 0.015em as a good default\n+    \n+    // Firefox, IE, etc.\n+    f_css.fs << \".C\" << color_id << \"{\"\n+             << \"text-shadow: \"\n+             << \"-0.015em 0 \"  << *rgb << \",\" \n+             << \"0 0.015em \"   << *rgb << \",\"\n+             << \"0.015em 0 \"   << *rgb << \",\"\n+             << \"0 -0.015em  \" << *rgb << \";\"\n+             << \"}\" << endl;\n+    \n+    // WebKit\n+    f_css.fs << \"@media screen and (-webkit-min-device-pixel-ratio:0) {\";\n+    f_css.fs << \".C\" << color_id << \"{-webkit-text-stroke: 0.015em \" << *rgb << \";text-shadow: none;}\";\n+    f_css.fs << \"}\";",
        "path": "src/HTMLRenderer/export.cc",
        "position": 28,
        "original_position": 28,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oops.. I actually didn't see the Firefox block....\n",
        "created_at": "2013-02-01T13:18:28Z",
        "updated_at": "2013-02-01T13:18:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858868",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858868"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858868"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858961",
        "pull_request_review_id": null,
        "id": 2858961,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg5NjE=",
        "diff_hunk": "@@ -125,6 +125,22 @@ span {\n }\n .a {\n }\n+/* transparent color - Firefox, IE, etc. */\n+.ct { /*fill*/\n+  color: white;\n+}\n+.Ct { /*stroke*/\n+    text-shadow: none;\n+}\n+/* transparent color - WebKit */\n+@media screen and (-webkit-min-device-pixel-ratio:0) {",
        "path": "share/base.css",
        "position": 12,
        "original_position": 12,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> Does the ppi thing depend on @media screen?\n\nYes, it's a media query against the screen's PPI.\n",
        "created_at": "2013-02-01T13:28:52Z",
        "updated_at": "2013-02-01T13:29:12Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858961",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858961"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858961"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858997",
        "pull_request_review_id": null,
        "id": 2858997,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTg5OTc=",
        "diff_hunk": "@@ -350,25 +356,65 @@ void HTMLRenderer::check_state_change(GfxState * state)\n     }\n \n     // color\n-    if(all_changed || color_changed)\n+    if(all_changed || fill_color_changed || stroke_color_changed)\n     {\n-        GfxRGB new_color;\n         /*\n          * Render modes 0 2 4 6 fill text (stroke or not)\n          * Render modes 1 5 stroke only\n          * Render modes 3 7 hidden (but ok, we won't even draw text)\n          */\n-        if(state->getRender() % 2 == 0)\n-            state->getFillRGB(&new_color);\n-        else\n-            state->getStrokeRGB(&new_color);\n-\n-        if(!((new_color.r == cur_color.r) && (new_color.g == cur_color.g) && (new_color.b == cur_color.b)))\n+        \n+        // PDF Spec. Table 106 \u2013  Text rendering modes\n+        bool is_filled, is_stroked;\n+        switch (state->getRender()) {",
        "path": "src/HTMLRenderer/state.cc",
        "position": 77,
        "original_position": 77,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just make it more elegant. I'll fix it afterwards.\n",
        "created_at": "2013-02-01T13:32:12Z",
        "updated_at": "2013-02-01T13:32:12Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858997",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2858997"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2858997"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2859028",
        "pull_request_review_id": null,
        "id": 2859028,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTkwMjg=",
        "diff_hunk": "@@ -350,25 +356,65 @@ void HTMLRenderer::check_state_change(GfxState * state)\n     }\n \n     // color\n-    if(all_changed || color_changed)\n+    if(all_changed || fill_color_changed || stroke_color_changed)\n     {\n-        GfxRGB new_color;\n         /*\n          * Render modes 0 2 4 6 fill text (stroke or not)\n          * Render modes 1 5 stroke only\n          * Render modes 3 7 hidden (but ok, we won't even draw text)\n          */\n-        if(state->getRender() % 2 == 0)\n-            state->getFillRGB(&new_color);\n-        else\n-            state->getStrokeRGB(&new_color);\n-\n-        if(!((new_color.r == cur_color.r) && (new_color.g == cur_color.g) && (new_color.b == cur_color.b)))\n+        \n+        // PDF Spec. Table 106 \u2013  Text rendering modes\n+        bool is_filled, is_stroked;\n+        switch (state->getRender()) {\n+            case 0: is_filled = true;  is_stroked = false; break;\n+            case 1: is_filled = false; is_stroked = true;  break;\n+            case 2: is_filled = true;  is_stroked = true;  break;\n+            case 3: is_filled = false; is_stroked = false; break;\n+            case 4: is_filled = true;  is_stroked = false; break;\n+            case 5: is_filled = false; is_stroked = true;  break;\n+            case 6: is_filled = true;  is_stroked = true;  break;\n+            case 7: is_filled = false; is_stroked = false; break;\n+        }\n+        \n+        GfxRGB new_color;\n+        \n+        // fill\n+        state->getFillRGB(&new_color);",
        "path": "src/HTMLRenderer/state.cc",
        "position": 91,
        "original_position": 91,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I meant some time you don't have to retrieve new_color.\nBut never mind, I'll revise this function\n",
        "created_at": "2013-02-01T13:35:08Z",
        "updated_at": "2013-02-01T13:35:08Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2859028",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2859028"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2859028"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2859030",
        "pull_request_review_id": null,
        "id": 2859030,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTkwMzA=",
        "diff_hunk": "@@ -350,25 +356,65 @@ void HTMLRenderer::check_state_change(GfxState * state)\n     }\n \n     // color\n-    if(all_changed || color_changed)\n+    if(all_changed || fill_color_changed || stroke_color_changed)\n     {\n-        GfxRGB new_color;\n         /*\n          * Render modes 0 2 4 6 fill text (stroke or not)\n          * Render modes 1 5 stroke only\n          * Render modes 3 7 hidden (but ok, we won't even draw text)\n          */\n-        if(state->getRender() % 2 == 0)\n-            state->getFillRGB(&new_color);\n-        else\n-            state->getStrokeRGB(&new_color);\n-\n-        if(!((new_color.r == cur_color.r) && (new_color.g == cur_color.g) && (new_color.b == cur_color.b)))\n+        \n+        // PDF Spec. Table 106 \u2013  Text rendering modes\n+        bool is_filled, is_stroked;\n+        switch (state->getRender()) {\n+            case 0: is_filled = true;  is_stroked = false; break;\n+            case 1: is_filled = false; is_stroked = true;  break;\n+            case 2: is_filled = true;  is_stroked = true;  break;\n+            case 3: is_filled = false; is_stroked = false; break;\n+            case 4: is_filled = true;  is_stroked = false; break;\n+            case 5: is_filled = false; is_stroked = true;  break;\n+            case 6: is_filled = true;  is_stroked = true;  break;\n+            case 7: is_filled = false; is_stroked = false; break;\n+        }\n+        \n+        GfxRGB new_color;\n+        \n+        // fill\n+        state->getFillRGB(&new_color);\n+        \n+        if(cur_has_fill != is_filled ||\n+            !((new_color.r == cur_fill_color.r) &&",
        "path": "src/HTMLRenderer/state.cc",
        "position": 94,
        "original_position": 94,
        "commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "original_commit_id": "6973760a85b7106efcc8842b05c815da3b96ae7a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Right, I'll fix it.\n",
        "created_at": "2013-02-01T13:35:15Z",
        "updated_at": "2013-02-01T13:35:15Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2859030",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/2859030"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/81#discussion_r2859030"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/81"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3404858",
        "pull_request_review_id": null,
        "id": 3404858,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDQ4NTg=",
        "diff_hunk": "@@ -223,12 +224,27 @@ int main(int argc, char **argv)\n             else\n             {\n                 if(param.split_pages)\n-                    param.output_filename = s;\n+                    param.output_filename = sanitize_filename(s + \"%d.page\", true);\n                 else\n                     param.output_filename = s + \".html\";\n                 \n             }\n         }\n+\t\telse if(param.split_pages)\n+        {\n+            // Need to make sure we have a page number placeholder in the filename\n+            if(!std::regex_match(param.output_filename, std::regex(\"^.*%[0-9]*d.*$\")))",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 31,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "83c947462a2f5b599003c36a182f634a7f7e92ee",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not `regex_search(...\"%[0-9]*d\")` ? Might be a little bit more readable.\n",
        "created_at": "2013-03-17T05:54:00Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3404858",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3404858"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3404858"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3404888",
        "pull_request_review_id": null,
        "id": 3404888,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDQ4ODg=",
        "diff_hunk": "@@ -223,12 +224,27 @@ int main(int argc, char **argv)\n             else\n             {\n                 if(param.split_pages)\n-                    param.output_filename = s;\n+                    param.output_filename = sanitize_filename(s + \"%d.page\", true);\n                 else\n                     param.output_filename = s + \".html\";\n                 \n             }\n         }\n+\t\telse if(param.split_pages)\n+        {\n+            // Need to make sure we have a page number placeholder in the filename\n+            if(!std::regex_match(param.output_filename, std::regex(\"^.*%[0-9]*d.*$\")))\n+            {\n+                // Inject the placeholder just before the file extension",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 33,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "83c947462a2f5b599003c36a182f634a7f7e92ee",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In manpage, it says the output will be named as `<output-filename>1.page`, so when output-filename is `x.page`, the output should be `x.page1.page` instead of `x1.page` <-- which is the current behaviour\n\nMy opinion is \n- If no `output-filename` is specified, use `<input-filename-without-suffix>%d.page`\n- Otherwise there must be a valid placeholder in the specified template.\n- If a users specifies a output-filename without a placeholder, we may either use the old behaviour (appending `%d.page`) or show a warning about the change here.\n\nWhat do you think?\n",
        "created_at": "2013-03-17T06:08:26Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3404888",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3404888"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3404888"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407652",
        "pull_request_review_id": null,
        "id": 3407652,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc2NTI=",
        "diff_hunk": "@@ -39,6 +39,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized = string();",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 6,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "4614e0c18d6385929f2ff964004865a79d946c5f",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`string sanitized;` would be enough.\n",
        "created_at": "2013-03-18T04:47:49Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407652",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407652"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407652"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407656",
        "pull_request_review_id": null,
        "id": 3407656,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc2NTY=",
        "diff_hunk": "@@ -39,6 +39,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized = string();\n+    bool format_specifier_found = false;\n+    \n+    for(int i = 0; i < filename.size(); i++) \n+    {\n+        if('%' == filename[i])\n+        {\n+            if(format_specifier_found)\n+            {\n+                sanitized.push_back('%');\n+                sanitized.push_back('%');\n+            }\n+            else  \n+            {\n+                // We haven't found the format specifier yet, so see if we can use this one as a valid formatter\n+                int original_i = i;\n+                string tmp(\"\");",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 22,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "4614e0c18d6385929f2ff964004865a79d946c5f",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ditto. `string tmp;`\n",
        "created_at": "2013-03-18T04:48:00Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407656",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407656"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407656"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407801",
        "pull_request_review_id": null,
        "id": 3407801,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc4MDE=",
        "diff_hunk": "@@ -39,6 +40,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized;\n+    bool format_specifier_found = false;\n+    \n+    for(uint i = 0; i < filename.size(); i++) ",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 17,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "c0972e1baa336792d86aec698d19d113b1c3f7c0",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "uint is not standard C++, please use size_t instead.\n",
        "created_at": "2013-03-18T05:24:15Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407801",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407801"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407801"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407827",
        "pull_request_review_id": null,
        "id": 3407827,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc4Mjc=",
        "diff_hunk": "@@ -39,6 +40,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized;\n+    bool format_specifier_found = false;\n+    \n+    for(uint i = 0; i < filename.size(); i++) \n+    {\n+        if('%' == filename[i])\n+        {\n+            if(format_specifier_found)\n+            {\n+                sanitized.push_back('%');\n+                sanitized.push_back('%');\n+            }\n+            else  \n+            {\n+                // We haven't found the format specifier yet, so see if we can use this one as a valid formatter\n+                int original_i = i;\n+                string tmp;\n+                tmp.push_back('%');\n+                while(++i < filename.size())\n+                {\n+                    tmp.push_back(filename[i]);\n+                    \n+                    // If we aren't still in option specifiers, stop looking\n+                    if(!strchr(\"+-#0123456789.\", filename[i]))\n+                    {\n+                        break;\n+                    }\n+                }\n+                \n+                // Check to see if we yielded a valid format speifier\n+                if('d' == tmp.back())\n+                {\n+                    // Found a valid integer format\n+                    sanitized.append(tmp);\n+                    format_specifier_found = true;\n+                }\n+                else\n+                {\n+                    // Not a valid format specifier. Just append the protected %\n+                    // and keep looking from where we left of in the search\n+                    sanitized.push_back('%');\n+                    sanitized.push_back('%');\n+                    i = original_i;\n+                }\n+            }\n+        }\n+        else \n+        {\n+            sanitized.push_back(filename[i]);\n+        }\n+    }\n+    \n+    return sanitized;\n+}\n+\n+bool contains_integer_placeholder(const string & filename)",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 69,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "c0972e1baa336792d86aec698d19d113b1c3f7c0",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why not return something from `sanitize_filename` instead of a new function?\n",
        "created_at": "2013-03-18T05:30:13Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407827",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407827"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407827"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407856",
        "pull_request_review_id": null,
        "id": 3407856,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc4NTY=",
        "diff_hunk": "@@ -39,6 +40,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized;\n+    bool format_specifier_found = false;\n+    \n+    for(size_t i = 0; i < filename.size(); i++) \n+    {\n+        if('%' == filename[i])\n+        {\n+            if(format_specifier_found)\n+            {\n+                sanitized.push_back('%');\n+                sanitized.push_back('%');\n+            }\n+            else  \n+            {\n+                // We haven't found the format specifier yet, so see if we can use this one as a valid formatter\n+                size_t original_i = i;\n+                string tmp;\n+                tmp.push_back('%');\n+                while(++i < filename.size())\n+                {\n+                    tmp.push_back(filename[i]);\n+                    \n+                    // If we aren't still in option specifiers, stop looking\n+                    if(!strchr(\"+-#0123456789.\", filename[i]))",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 37,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "ccc8ff4761446a10d9946f49456a158ec007755e",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is too much for us for now (e.g. '-' and '#'), and it does not check all cases (e.g. '1..2'). \nBut I think it's ok to leave as it is. \n\nThe No.1 target is to make sure we don't crash, and we can just describe supported formats in the documentation.\n",
        "created_at": "2013-03-18T05:36:37Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407856",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407856"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407856"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407861",
        "pull_request_review_id": null,
        "id": 3407861,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc4NjE=",
        "diff_hunk": "@@ -39,6 +40,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized;\n+    bool format_specifier_found = false;\n+    \n+    for(uint i = 0; i < filename.size(); i++) \n+    {\n+        if('%' == filename[i])\n+        {\n+            if(format_specifier_found)\n+            {\n+                sanitized.push_back('%');\n+                sanitized.push_back('%');\n+            }\n+            else  \n+            {\n+                // We haven't found the format specifier yet, so see if we can use this one as a valid formatter\n+                int original_i = i;\n+                string tmp;\n+                tmp.push_back('%');\n+                while(++i < filename.size())\n+                {\n+                    tmp.push_back(filename[i]);\n+                    \n+                    // If we aren't still in option specifiers, stop looking\n+                    if(!strchr(\"+-#0123456789.\", filename[i]))\n+                    {\n+                        break;\n+                    }\n+                }\n+                \n+                // Check to see if we yielded a valid format speifier\n+                if('d' == tmp.back())\n+                {\n+                    // Found a valid integer format\n+                    sanitized.append(tmp);\n+                    format_specifier_found = true;\n+                }\n+                else\n+                {\n+                    // Not a valid format specifier. Just append the protected %\n+                    // and keep looking from where we left of in the search\n+                    sanitized.push_back('%');\n+                    sanitized.push_back('%');\n+                    i = original_i;\n+                }\n+            }\n+        }\n+        else \n+        {\n+            sanitized.push_back(filename[i]);\n+        }\n+    }\n+    \n+    return sanitized;\n+}\n+\n+bool contains_integer_placeholder(const string & filename)",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 69,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "c0972e1baa336792d86aec698d19d113b1c3f7c0",
        "user": {
            "login": "rmorlok",
            "id": 95372,
            "node_id": "MDQ6VXNlcjk1Mzcy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/95372?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmorlok",
            "html_url": "https://github.com/rmorlok",
            "followers_url": "https://api.github.com/users/rmorlok/followers",
            "following_url": "https://api.github.com/users/rmorlok/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmorlok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmorlok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmorlok/subscriptions",
            "organizations_url": "https://api.github.com/users/rmorlok/orgs",
            "repos_url": "https://api.github.com/users/rmorlok/repos",
            "events_url": "https://api.github.com/users/rmorlok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmorlok/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I suppose sanitize filename could return something special if it didn't find a `%d` but then the function wouldn't really be just sanitizing, it would be validating and sanitizing. The concerns seemed separate to me.\n",
        "created_at": "2013-03-18T05:37:08Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407861",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407861"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407861"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407885",
        "pull_request_review_id": null,
        "id": 3407885,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc4ODU=",
        "diff_hunk": "@@ -39,6 +40,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized;\n+    bool format_specifier_found = false;\n+    \n+    for(uint i = 0; i < filename.size(); i++) \n+    {\n+        if('%' == filename[i])\n+        {\n+            if(format_specifier_found)\n+            {\n+                sanitized.push_back('%');\n+                sanitized.push_back('%');\n+            }\n+            else  \n+            {\n+                // We haven't found the format specifier yet, so see if we can use this one as a valid formatter\n+                int original_i = i;\n+                string tmp;\n+                tmp.push_back('%');\n+                while(++i < filename.size())\n+                {\n+                    tmp.push_back(filename[i]);\n+                    \n+                    // If we aren't still in option specifiers, stop looking\n+                    if(!strchr(\"+-#0123456789.\", filename[i]))\n+                    {\n+                        break;\n+                    }\n+                }\n+                \n+                // Check to see if we yielded a valid format speifier\n+                if('d' == tmp.back())\n+                {\n+                    // Found a valid integer format\n+                    sanitized.append(tmp);\n+                    format_specifier_found = true;\n+                }\n+                else\n+                {\n+                    // Not a valid format specifier. Just append the protected %\n+                    // and keep looking from where we left of in the search\n+                    sanitized.push_back('%');\n+                    sanitized.push_back('%');\n+                    i = original_i;\n+                }\n+            }\n+        }\n+        else \n+        {\n+            sanitized.push_back(filename[i]);\n+        }\n+    }\n+    \n+    return sanitized;\n+}\n+\n+bool contains_integer_placeholder(const string & filename)",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 69,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "c0972e1baa336792d86aec698d19d113b1c3f7c0",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see what you mean, but suppose `%x` is supported in the future, it might be a good idea to have two functions being maintained at the same time.\n\nFor now I think it's reasonable to merge them and leave some comments right before the function, something like:\n`sanitize all occurrences of '%' except for the first valid format specifier; return true if there is a valid one found`\n\nwhat do you think?\n",
        "created_at": "2013-03-18T05:43:18Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407885",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407885"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407885"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407890",
        "pull_request_review_id": null,
        "id": 3407890,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc4OTA=",
        "diff_hunk": "@@ -39,6 +40,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized;\n+    bool format_specifier_found = false;\n+    \n+    for(size_t i = 0; i < filename.size(); i++) \n+    {\n+        if('%' == filename[i])\n+        {\n+            if(format_specifier_found)\n+            {\n+                sanitized.push_back('%');\n+                sanitized.push_back('%');\n+            }\n+            else  \n+            {\n+                // We haven't found the format specifier yet, so see if we can use this one as a valid formatter\n+                size_t original_i = i;\n+                string tmp;\n+                tmp.push_back('%');\n+                while(++i < filename.size())\n+                {\n+                    tmp.push_back(filename[i]);\n+                    \n+                    // If we aren't still in option specifiers, stop looking\n+                    if(!strchr(\"+-#0123456789.\", filename[i]))",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 37,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "ccc8ff4761446a10d9946f49456a158ec007755e",
        "user": {
            "login": "rmorlok",
            "id": 95372,
            "node_id": "MDQ6VXNlcjk1Mzcy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/95372?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmorlok",
            "html_url": "https://github.com/rmorlok",
            "followers_url": "https://api.github.com/users/rmorlok/followers",
            "following_url": "https://api.github.com/users/rmorlok/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmorlok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmorlok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmorlok/subscriptions",
            "organizations_url": "https://api.github.com/users/rmorlok/orgs",
            "repos_url": "https://api.github.com/users/rmorlok/repos",
            "events_url": "https://api.github.com/users/rmorlok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmorlok/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You are correct, it does allow for some invalid format specifiers to get through (so does gnuplot). The challenge is that without regex, if you truly want to model the syntax for format specifiers, you need to explicitly encode the languages's state machine.\n\nOne option would be to remove some of the formatting options, eg only allow 0-9.\n",
        "created_at": "2013-03-18T05:43:51Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407890",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407890"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407890"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407916",
        "pull_request_review_id": null,
        "id": 3407916,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc5MTY=",
        "diff_hunk": "@@ -39,6 +40,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized;\n+    bool format_specifier_found = false;\n+    \n+    for(uint i = 0; i < filename.size(); i++) \n+    {\n+        if('%' == filename[i])\n+        {\n+            if(format_specifier_found)\n+            {\n+                sanitized.push_back('%');\n+                sanitized.push_back('%');\n+            }\n+            else  \n+            {\n+                // We haven't found the format specifier yet, so see if we can use this one as a valid formatter\n+                int original_i = i;\n+                string tmp;\n+                tmp.push_back('%');\n+                while(++i < filename.size())\n+                {\n+                    tmp.push_back(filename[i]);\n+                    \n+                    // If we aren't still in option specifiers, stop looking\n+                    if(!strchr(\"+-#0123456789.\", filename[i]))\n+                    {\n+                        break;\n+                    }\n+                }\n+                \n+                // Check to see if we yielded a valid format speifier\n+                if('d' == tmp.back())\n+                {\n+                    // Found a valid integer format\n+                    sanitized.append(tmp);\n+                    format_specifier_found = true;\n+                }\n+                else\n+                {\n+                    // Not a valid format specifier. Just append the protected %\n+                    // and keep looking from where we left of in the search\n+                    sanitized.push_back('%');\n+                    sanitized.push_back('%');\n+                    i = original_i;\n+                }\n+            }\n+        }\n+        else \n+        {\n+            sanitized.push_back(filename[i]);\n+        }\n+    }\n+    \n+    return sanitized;\n+}\n+\n+bool contains_integer_placeholder(const string & filename)",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 69,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "c0972e1baa336792d86aec698d19d113b1c3f7c0",
        "user": {
            "login": "rmorlok",
            "id": 95372,
            "node_id": "MDQ6VXNlcjk1Mzcy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/95372?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmorlok",
            "html_url": "https://github.com/rmorlok",
            "followers_url": "https://api.github.com/users/rmorlok/followers",
            "following_url": "https://api.github.com/users/rmorlok/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmorlok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmorlok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmorlok/subscriptions",
            "organizations_url": "https://api.github.com/users/rmorlok/orgs",
            "repos_url": "https://api.github.com/users/rmorlok/repos",
            "events_url": "https://api.github.com/users/rmorlok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmorlok/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "are you talking about modifying the string in place and then returning a boolean? As a general rule I think it's better to avoid modifying data received through arguments and instead leave functions side-effect free, but I'm fine doing that if you prefer.\n",
        "created_at": "2013-03-18T05:48:53Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407916",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407916"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407916"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407917",
        "pull_request_review_id": null,
        "id": 3407917,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc5MTc=",
        "diff_hunk": "@@ -39,6 +40,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized;\n+    bool format_specifier_found = false;\n+    \n+    for(size_t i = 0; i < filename.size(); i++) \n+    {\n+        if('%' == filename[i])\n+        {\n+            if(format_specifier_found)\n+            {\n+                sanitized.push_back('%');\n+                sanitized.push_back('%');\n+            }\n+            else  \n+            {\n+                // We haven't found the format specifier yet, so see if we can use this one as a valid formatter\n+                size_t original_i = i;\n+                string tmp;\n+                tmp.push_back('%');\n+                while(++i < filename.size())\n+                {\n+                    tmp.push_back(filename[i]);\n+                    \n+                    // If we aren't still in option specifiers, stop looking\n+                    if(!strchr(\"+-#0123456789.\", filename[i]))",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 37,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "ccc8ff4761446a10d9946f49456a158ec007755e",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I thinks it's fair to allow 0-9 only.\nI'll try what happens if I specify `%999d`\n\nOn Mon, Mar 18, 2013 at 1:43 PM, Ryan Morlok notifications@github.comwrote:\n\n> In src/util/path.cc:\n> \n> > -            {\n> > -                sanitized.push_back('%');\n> > -                sanitized.push_back('%');\n> > -            }\n> > -            else\n> > -            {\n> > -                // We haven't found the format specifier yet, so see if we can use this one as a valid formatter\n> > -                size_t original_i = i;\n> > -                string tmp;\n> > -                tmp.push_back('%');\n> > -                while(++i < filename.size())\n> > -                {\n> > -                    tmp.push_back(filename[i]);\n> >   +\n> > -                    // If we aren't still in option specifiers, stop looking\n> > -                    if(!strchr(\"+-#0123456789.\", filename[i]))\n> \n> You are correct, it does allow for some invalid format specifiers to get\n> through (so does gnuplot). The challenge is that without regex, if you\n> truly want to model the syntax for format specifiers, you need to\n> explicitly encode the languages's state machine.\n> \n> One option would be to remove some of the formatting options, eg only\n> allow 0-9.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/98/files#r3407890\n> .\n",
        "created_at": "2013-03-18T05:48:55Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407917",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407917"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407917"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407969",
        "pull_request_review_id": null,
        "id": 3407969,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc5Njk=",
        "diff_hunk": "@@ -39,6 +40,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized;\n+    bool format_specifier_found = false;\n+    \n+    for(uint i = 0; i < filename.size(); i++) \n+    {\n+        if('%' == filename[i])\n+        {\n+            if(format_specifier_found)\n+            {\n+                sanitized.push_back('%');\n+                sanitized.push_back('%');\n+            }\n+            else  \n+            {\n+                // We haven't found the format specifier yet, so see if we can use this one as a valid formatter\n+                int original_i = i;\n+                string tmp;\n+                tmp.push_back('%');\n+                while(++i < filename.size())\n+                {\n+                    tmp.push_back(filename[i]);\n+                    \n+                    // If we aren't still in option specifiers, stop looking\n+                    if(!strchr(\"+-#0123456789.\", filename[i]))\n+                    {\n+                        break;\n+                    }\n+                }\n+                \n+                // Check to see if we yielded a valid format speifier\n+                if('d' == tmp.back())\n+                {\n+                    // Found a valid integer format\n+                    sanitized.append(tmp);\n+                    format_specifier_found = true;\n+                }\n+                else\n+                {\n+                    // Not a valid format specifier. Just append the protected %\n+                    // and keep looking from where we left of in the search\n+                    sanitized.push_back('%');\n+                    sanitized.push_back('%');\n+                    i = original_i;\n+                }\n+            }\n+        }\n+        else \n+        {\n+            sanitized.push_back(filename[i]);\n+        }\n+    }\n+    \n+    return sanitized;\n+}\n+\n+bool contains_integer_placeholder(const string & filename)",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 69,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "c0972e1baa336792d86aec698d19d113b1c3f7c0",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh I was stupid. Never mind.\nSo how about this, leave the two functions, but define a global const string:\n`const char * VALID_FORMAT_SPECIFIER_IN_FILENAME=\"diuoxX\";` and use `strchr` instead of comparing with 'd'\n",
        "created_at": "2013-03-18T05:59:03Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407969",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3407969"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3407969"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3408011",
        "pull_request_review_id": null,
        "id": 3408011,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDgwMTE=",
        "diff_hunk": "@@ -39,6 +40,100 @@ void create_directories(const string & path)\n     }\n }\n \n+string sanitize_filename(const string & filename)\n+{\n+    string sanitized;\n+    bool format_specifier_found = false;\n+    \n+    for(size_t i = 0; i < filename.size(); i++) \n+    {\n+        if('%' == filename[i])\n+        {\n+            if(format_specifier_found)\n+            {\n+                sanitized.push_back('%');\n+                sanitized.push_back('%');\n+            }\n+            else  \n+            {\n+                // We haven't found the format specifier yet, so see if we can use this one as a valid formatter\n+                size_t original_i = i;\n+                string tmp;\n+                tmp.push_back('%');\n+                while(++i < filename.size())\n+                {\n+                    tmp.push_back(filename[i]);\n+                    \n+                    // If we aren't still in option specifiers, stop looking\n+                    if(!strchr(\"+-#0123456789.\", filename[i]))",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 37,
        "commit_id": "6298c19a3b4667d2a775c709749d96a6e77ebc25",
        "original_commit_id": "ccc8ff4761446a10d9946f49456a158ec007755e",
        "user": {
            "login": "rmorlok",
            "id": 95372,
            "node_id": "MDQ6VXNlcjk1Mzcy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/95372?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmorlok",
            "html_url": "https://github.com/rmorlok",
            "followers_url": "https://api.github.com/users/rmorlok/followers",
            "following_url": "https://api.github.com/users/rmorlok/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmorlok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmorlok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmorlok/subscriptions",
            "organizations_url": "https://api.github.com/users/rmorlok/orgs",
            "repos_url": "https://api.github.com/users/rmorlok/repos",
            "events_url": "https://api.github.com/users/rmorlok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmorlok/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I tried this and it said it couldn't open the file. The filename exceeds the 255 chars allowed on my computer (OSX). I think this is reasonable behavior.\n",
        "created_at": "2013-03-18T06:11:41Z",
        "updated_at": "2013-03-18T06:39:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3408011",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3408011"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/98#discussion_r3408011"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/98"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668174",
        "pull_request_review_id": null,
        "id": 3668174,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxNzQ=",
        "diff_hunk": "@@ -26,8 +26,6 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n         return;\n \n     auto font = state->getFont();\n-    double cur_letter_space = state->getCharSpace();",
        "path": "src/HTMLRenderer/text.cc",
        "position": 4,
        "original_position": 4,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I assume caching these values would be (a tiny bit) faster?\n",
        "created_at": "2013-04-05T05:01:14Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668174",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668174"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668174"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668188",
        "pull_request_review_id": null,
        "id": 3668188,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxODg=",
        "diff_hunk": "@@ -48,39 +46,84 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n+        {\n+            dx += state->getCharSpace();",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 67,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should be `dy`?\n",
        "created_at": "2013-04-05T05:03:18Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668188",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668188"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668188"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668207",
        "pull_request_review_id": null,
        "id": 3668207,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgyMDc=",
        "diff_hunk": "@@ -48,39 +46,84 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        else\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        dx *= state->getHorizScaling();\n         \n-        if(is_space && (param->space_as_offset))\n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n+        \n+        // check if char is entirely outside the clipping rect\n+        if(x + dev_total_dx + dev_dx < xMin || x + dev_total_dx > xMax ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 102,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please use `a<b-EPS` and `a>b+EPS`\n",
        "created_at": "2013-04-05T05:06:54Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668207",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668207"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668207"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668221",
        "pull_request_review_id": null,
        "id": 3668221,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgyMjE=",
        "diff_hunk": "@@ -48,39 +46,84 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        else\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        dx *= state->getHorizScaling();\n         \n-        if(is_space && (param->space_as_offset))\n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n+        \n+        // check if char is entirely outside the clipping rect\n+        if(x + dev_total_dx + dev_dx < xMin || x + dev_total_dx > xMax ||\n+           y + dev_total_dy + dev_dy < yMin || y + dev_total_dy > yMax)\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace()) * draw_text_scale);",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 107,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "if `is_space`, `word space` should be included\n",
        "created_at": "2013-04-05T05:09:50Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668221",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668221"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668221"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668226",
        "pull_request_review_id": null,
        "id": 3668226,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgyMjY=",
        "diff_hunk": "@@ -48,39 +46,84 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())",
        "path": "src/HTMLRenderer/text.cc",
        "position": 65,
        "original_position": 65,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "anyway writing mode fonts are not supported yet, there will be many other problems in the next few lines...\n",
        "created_at": "2013-04-05T05:11:43Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668226",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668226"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668226"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668470",
        "pull_request_review_id": null,
        "id": 3668470,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg0NzA=",
        "diff_hunk": "@@ -48,39 +46,84 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        else\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        dx *= state->getHorizScaling();\n         \n-        if(is_space && (param->space_as_offset))\n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n+        \n+        // check if char is entirely outside the clipping rect\n+        if(x + dev_total_dx + dev_dx < xMin || x + dev_total_dx > xMax ||\n+           y + dev_total_dy + dev_dy < yMin || y + dev_total_dy > yMax)\n         {",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 104,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For horizontal text, dev_dx is the width of the current char, and dev_dy is 0.\nTo get the bounding box of the current char, `ascent`, `descent` and `font size` should be involved.\n",
        "created_at": "2013-04-05T06:03:53Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668470",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3668470"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3668470"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3670741",
        "pull_request_review_id": null,
        "id": 3670741,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA3NDE=",
        "diff_hunk": "@@ -26,8 +26,6 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n         return;\n \n     auto font = state->getFont();\n-    double cur_letter_space = state->getCharSpace();",
        "path": "src/HTMLRenderer/text.cc",
        "position": 4,
        "original_position": 4,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nope... see GfxState.h\n\n``` c++\ndouble getCharSpace() { return charSpace; }\n```\n\nThat'll get inlined.\n",
        "created_at": "2013-04-05T10:23:49Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3670741",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3670741"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3670741"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3670768",
        "pull_request_review_id": null,
        "id": 3670768,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA3Njg=",
        "diff_hunk": "@@ -48,39 +46,84 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n+        {\n+            dx += state->getCharSpace();",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 67,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, WMode stuff should be `dy`, will fix it.\n",
        "created_at": "2013-04-05T10:27:07Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3670768",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3670768"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3670768"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3670780",
        "pull_request_review_id": null,
        "id": 3670780,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA3ODA=",
        "diff_hunk": "@@ -26,8 +26,6 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n         return;\n \n     auto font = state->getFont();\n-    double cur_letter_space = state->getCharSpace();",
        "path": "src/HTMLRenderer/text.cc",
        "position": 4,
        "original_position": 4,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh. I see..\n",
        "created_at": "2013-04-05T10:28:23Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3670780",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3670780"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3670780"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671126",
        "pull_request_review_id": null,
        "id": 3671126,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzExMjY=",
        "diff_hunk": "@@ -48,39 +46,84 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        else\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        dx *= state->getHorizScaling();\n         \n-        if(is_space && (param->space_as_offset))\n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n+        \n+        // check if char is entirely outside the clipping rect\n+        if(x + dev_total_dx + dev_dx < xMin || x + dev_total_dx > xMax ||\n+           y + dev_total_dy + dev_dy < yMin || y + dev_total_dy > yMax)\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace()) * draw_text_scale);",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 107,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah ok, I'll refactor the if-then\n",
        "created_at": "2013-04-05T11:02:50Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671126",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671126"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671126"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671138",
        "pull_request_review_id": null,
        "id": 3671138,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzExMzg=",
        "diff_hunk": "@@ -48,39 +46,84 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())",
        "path": "src/HTMLRenderer/text.cc",
        "position": 65,
        "original_position": 65,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, I took that from PSOutputDev, it's just meant to be a starting point.\n",
        "created_at": "2013-04-05T11:04:22Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671138",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671138"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671138"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671155",
        "pull_request_review_id": null,
        "id": 3671155,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzExNTU=",
        "diff_hunk": "@@ -48,39 +46,84 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        else\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        dx *= state->getHorizScaling();\n         \n-        if(is_space && (param->space_as_offset))\n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n+        \n+        // check if char is entirely outside the clipping rect\n+        if(x + dev_total_dx + dev_dx < xMin || x + dev_total_dx > xMax ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 102,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "1b738ffb5e36f85d5cad5b3a318461d23e4bc02b",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Will do.\n",
        "created_at": "2013-04-05T11:06:04Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671155",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671155"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671155"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671507",
        "pull_request_review_id": null,
        "id": 3671507,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE1MDc=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Note that `dev_dx` could be negative.\n",
        "created_at": "2013-04-05T11:40:14Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671507",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671507"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671507"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671555",
        "pull_request_review_id": null,
        "id": 3671555,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE1NTU=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's ok, all of the values can.\n",
        "created_at": "2013-04-05T11:43:33Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671555",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671555"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671555"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671596",
        "pull_request_review_id": null,
        "id": 3671596,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE1OTY=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seems that you are testing if the interval  `(x+dev_total_dx, x+dev_total+dev_dx)` intersects with the interval `(xMin, xMax)`.\nAnd you assume that `dev_dx > 0`, otherwise the first interval should be `(x+dev_total_dx+dev_dx, x+dev_total)`.\n\nLater if you transform the bbox from the text coordinate system into device system, you need to find min/max x/y from the 4 (transformed) corners.\n",
        "created_at": "2013-04-05T11:46:37Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671596",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671596"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671596"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671620",
        "pull_request_review_id": null,
        "id": 3671620,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2MjA=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();",
        "path": "src/HTMLRenderer/text.cc",
        "position": 91,
        "original_position": 91,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think `text_zoom_factor` should not be involved, this function is something about pdf2htmlEX, but the clip-visibility test here should have nothing to do with (the behaviour of) pdf2htmlEX?\n",
        "created_at": "2013-04-05T11:49:13Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671620",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671620"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671620"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671728",
        "pull_request_review_id": null,
        "id": 3671728,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3Mjg=",
        "diff_hunk": "@@ -48,39 +46,90 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dummy, dev_dx;\n+        state->textTransformDelta(dx, 0, &dev_dx, &dummy);",
        "path": "src/HTMLRenderer/text.cc",
        "position": 95,
        "original_position": 95,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "b6d031d09e2b4416575ec764473f38f0e1cf367a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why `dummy`? So you do not consider any rotations?\n",
        "created_at": "2013-04-05T12:02:52Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671728",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671728"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671728"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671825",
        "pull_request_review_id": null,
        "id": 3671825,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE4MjU=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();",
        "path": "src/HTMLRenderer/text.cc",
        "position": 91,
        "original_position": 91,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, you're right. I had some debugging code which required `text_zoom_factor` to work properly. I'll take it out.\n",
        "created_at": "2013-04-05T12:11:27Z",
        "updated_at": "2013-04-05T12:28:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671825",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3671825"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3671825"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674279",
        "pull_request_review_id": null,
        "id": 3674279,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQyNzk=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No, I'm testing if the character rectangle is entirely outside the clipping rectangle. This is not a test for intersection.\n",
        "created_at": "2013-04-05T14:51:51Z",
        "updated_at": "2013-04-05T14:51:51Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674279",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674279"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674279"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674296",
        "pull_request_review_id": null,
        "id": 3674296,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQyOTY=",
        "diff_hunk": "@@ -48,39 +46,90 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dummy, dev_dx;\n+        state->textTransformDelta(dx, 0, &dev_dx, &dummy);",
        "path": "src/HTMLRenderer/text.cc",
        "position": 95,
        "original_position": 95,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "b6d031d09e2b4416575ec764473f38f0e1cf367a",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Because `dy` is always zero. I'm ignoring WMode for now.\n",
        "created_at": "2013-04-05T14:52:56Z",
        "updated_at": "2013-04-05T14:52:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674296",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674296"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674296"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674314",
        "pull_request_review_id": null,
        "id": 3674314,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzMTQ=",
        "diff_hunk": "@@ -48,39 +46,90 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dummy, dev_dx;\n+        state->textTransformDelta(dx, 0, &dev_dx, &dummy);",
        "path": "src/HTMLRenderer/text.cc",
        "position": 95,
        "original_position": 95,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "b6d031d09e2b4416575ec764473f38f0e1cf367a",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmmm... this isn't supposed to be ignoring rotations, I guess that `dev_dy` could be non-zero when `dy` is zero, so perhaps `dev_dy` does need to be taken into account...\n",
        "created_at": "2013-04-05T14:54:30Z",
        "updated_at": "2013-04-05T14:54:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674314",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674314"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674314"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674431",
        "pull_request_review_id": null,
        "id": 3674431,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ0MzE=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Those are same thing. Suppose `x+dev_total_dx = 5`, `xMin=0` and `xMax=10`.\n\nNow if `dev_dx=-100`. I think the code would go wrong\n\nOn Fri, Apr 5, 2013 at 10:51 PM, John Hewson notifications@github.comwrote:\n\n> In src/HTMLRenderer/text.cc:\n> \n> > ```\n> >      if(is_space && (param->space_as_offset))\n> >      {\n> >          // ignore horiz_scaling, as it's merged in CTM\n> > ```\n> > -            text_line_buf->append_offset((dx1 \\* cur_font_size + cur_letter_space + cur_word_space) \\* draw_text_scale);\n> > -            text_line_buf->append_offset((char_dx \\* state->getFontSize() + state->getCharSpace() + state->getWordSpace()) \\* draw_text_scale);\n> > -        }\n> > -        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||\n> \n> No, I'm testing if the character rectangle is entirely outside the\n> clipping rectangle. This is not a test for intersection.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/114/files#r3674279\n> .\n",
        "created_at": "2013-04-05T14:59:34Z",
        "updated_at": "2013-04-05T14:59:34Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674431",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674431"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674431"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674757",
        "pull_request_review_id": null,
        "id": 3674757,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ3NTc=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That would be 5 + (-100) < 0 which is correct - the character box lies entirely to the left of the clipping area.\n",
        "created_at": "2013-04-05T15:16:09Z",
        "updated_at": "2013-04-05T15:16:09Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674757",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674757"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674757"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674799",
        "pull_request_review_id": null,
        "id": 3674799,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ3OTk=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No, the character box on the x-axis is [-95,5], and `[xmin, xmax] = [0, 10]`\nSo `[0,5]` is the common part. They are not completely separated.\n\nOn Fri, Apr 5, 2013 at 11:16 PM, John Hewson notifications@github.comwrote:\n\n> In src/HTMLRenderer/text.cc:\n> \n> > ```\n> >      if(is_space && (param->space_as_offset))\n> >      {\n> >          // ignore horiz_scaling, as it's merged in CTM\n> > ```\n> > -            text_line_buf->append_offset((dx1 \\* cur_font_size + cur_letter_space + cur_word_space) \\* draw_text_scale);\n> > -            text_line_buf->append_offset((char_dx \\* state->getFontSize() + state->getCharSpace() + state->getWordSpace()) \\* draw_text_scale);\n> > -        }\n> > -        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||\n> \n> That would be 5 + (-100) < 0 which is correct - the character box lies\n> entirely to the left of the clipping area.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/114/files#r3674757\n> .\n",
        "created_at": "2013-04-05T15:18:44Z",
        "updated_at": "2013-04-05T15:18:44Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674799",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3674799"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3674799"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675192",
        "pull_request_review_id": null,
        "id": 3675192,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUxOTI=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure how likely that is to happen? This should solve it...\n\n```\nx + max(dev_total_dx, dev_total_dx + dev_dx) < xMin \n```\n\netc.\n",
        "created_at": "2013-04-05T15:41:14Z",
        "updated_at": "2013-04-05T15:41:59Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675192",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675192"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675192"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675263",
        "pull_request_review_id": null,
        "id": 3675263,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUyNjM=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For example, a transform matrix that flip everything horizontally, such\nthat text are going to the left.\n\nJust like I mentioned, min/max x/y should be determined (again) after any\ntransformations.\n\nOn Fri, Apr 5, 2013 at 11:41 PM, John Hewson notifications@github.comwrote:\n\n> In src/HTMLRenderer/text.cc:\n> \n> > ```\n> >      if(is_space && (param->space_as_offset))\n> >      {\n> >          // ignore horiz_scaling, as it's merged in CTM\n> > ```\n> > -            text_line_buf->append_offset((dx1 \\* cur_font_size + cur_letter_space + cur_word_space) \\* draw_text_scale);\n> > -            text_line_buf->append_offset((char_dx \\* state->getFontSize() + state->getCharSpace() + state->getWordSpace()) \\* draw_text_scale);\n> > -        }\n> > -        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||\n> \n> I'm not sure how likely that is to happen? This should solve it...\n> \n> x + max(dev_total_dx, dev_total_dx + dev_dx) < xMin\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/114/files#r3675192\n> .\n",
        "created_at": "2013-04-05T15:45:28Z",
        "updated_at": "2013-04-05T15:45:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675263",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675263"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675263"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675403",
        "pull_request_review_id": null,
        "id": 3675403,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU0MDM=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> min/max x/y should be determined (again) after any transformations.\n\nWhat do you mean? Transformations can't occur partway through a string.\n",
        "created_at": "2013-04-05T15:53:11Z",
        "updated_at": "2013-04-05T15:53:11Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675403",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675403"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675403"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675430",
        "pull_request_review_id": null,
        "id": 3675430,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU0MzA=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I mean in text coordinate system, text go from left to right.\n\"meanwhile\", the ctm will flip everything horizontally.\n\nSo the result is char_dx is always positive, but dev_dx is always -char_dx\nDoes this make sense?\n\nOn Fri, Apr 5, 2013 at 11:53 PM, John Hewson notifications@github.comwrote:\n\n> In src/HTMLRenderer/text.cc:\n> \n> > ```\n> >      if(is_space && (param->space_as_offset))\n> >      {\n> >          // ignore horiz_scaling, as it's merged in CTM\n> > ```\n> > -            text_line_buf->append_offset((dx1 \\* cur_font_size + cur_letter_space + cur_word_space) \\* draw_text_scale);\n> > -            text_line_buf->append_offset((char_dx \\* state->getFontSize() + state->getCharSpace() + state->getWordSpace()) \\* draw_text_scale);\n> > -        }\n> > -        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||\n> \n>  min/max x/y should be determined (again) after any transformations.\n> \n> What do you mean? Transformations can't occur partway through a string.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/114/files#r3675403\n> .\n",
        "created_at": "2013-04-05T15:55:17Z",
        "updated_at": "2013-04-05T15:55:17Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675430",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675430"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675430"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675493",
        "pull_request_review_id": null,
        "id": 3675493,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU0OTM=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What is `char_dx`?\n",
        "created_at": "2013-04-05T16:00:12Z",
        "updated_at": "2013-04-05T16:00:12Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675493",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675493"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675493"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675605",
        "pull_request_review_id": null,
        "id": 3675605,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2MDU=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`char_dx` is in the code, which is the width of a char stored in the Font,\nthe value is in the Text coordinate system.\n\nLater this value will transformed by text_tm and ctm in turn.\n\nsee\nhttps://github.com/jahewson/pdf2htmlEX/blob/36a0ceb831c30e00f702be5d46734aa00d074d01/src/HTMLRenderer/text.cc#L66\n\nand\nhttps://github.com/jahewson/pdf2htmlEX/blob/36a0ceb831c30e00f702be5d46734aa00d074d01/src/HTMLRenderer/text.cc#L104-L106\n\nOn Sat, Apr 6, 2013 at 12:00 AM, John Hewson notifications@github.comwrote:\n\n> In src/HTMLRenderer/text.cc:\n> \n> > ```\n> >      if(is_space && (param->space_as_offset))\n> >      {\n> >          // ignore horiz_scaling, as it's merged in CTM\n> > ```\n> > -            text_line_buf->append_offset((dx1 \\* cur_font_size + cur_letter_space + cur_word_space) \\* draw_text_scale);\n> > -            text_line_buf->append_offset((char_dx \\* state->getFontSize() + state->getCharSpace() + state->getWordSpace()) \\* draw_text_scale);\n> > -        }\n> > -        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||\n> \n> What is char_dx?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/114/files#r3675493\n> .\n",
        "created_at": "2013-04-05T16:08:37Z",
        "updated_at": "2013-04-05T16:08:37Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675605",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675605"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675605"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675802",
        "pull_request_review_id": null,
        "id": 3675802,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU4MDI=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sorry, yes, `char_dx` is the unmodified value, I forgot.\n\n>  dev_dx is always -char_dx\n\nSeems wrong to me...\n",
        "created_at": "2013-04-05T16:21:13Z",
        "updated_at": "2013-04-05T16:21:13Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675802",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3675802"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3675802"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3676238",
        "pull_request_review_id": null,
        "id": 3676238,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYyMzg=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Suppose text_tm is [1,0,0,1,0,0](identity)\nand ctm is [-1,0,0,1,0,0](horizontal flip)\n\nand ignore text_scale, horizontal_scale etc.\n\nthen dev_dx=-char_dx\n\nhmm. I wish I could make up a sample PDF manually\n\nOn Sat, Apr 6, 2013 at 12:21 AM, John Hewson notifications@github.comwrote:\n\n> In src/HTMLRenderer/text.cc:\n> \n> > ```\n> >      if(is_space && (param->space_as_offset))\n> >      {\n> >          // ignore horiz_scaling, as it's merged in CTM\n> > ```\n> > -            text_line_buf->append_offset((dx1 \\* cur_font_size + cur_letter_space + cur_word_space) \\* draw_text_scale);\n> > -            text_line_buf->append_offset((char_dx \\* state->getFontSize() + state->getCharSpace() + state->getWordSpace()) \\* draw_text_scale);\n> > -        }\n> > -        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||\n> \n> Sorry, yes, char_dx is the unmodified value, I forgot.\n> \n> dev_dx is always -char_dx\n> \n> Seems wrong to me...\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/114/files#r3675802\n> .\n",
        "created_at": "2013-04-05T16:45:21Z",
        "updated_at": "2013-04-05T16:45:21Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3676238",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3676238"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3676238"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3676793",
        "pull_request_review_id": null,
        "id": 3676793,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY3OTM=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "jahewson",
            "id": 467695,
            "node_id": "MDQ6VXNlcjQ2NzY5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/467695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jahewson",
            "html_url": "https://github.com/jahewson",
            "followers_url": "https://api.github.com/users/jahewson/followers",
            "following_url": "https://api.github.com/users/jahewson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jahewson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jahewson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jahewson/subscriptions",
            "organizations_url": "https://api.github.com/users/jahewson/orgs",
            "repos_url": "https://api.github.com/users/jahewson/repos",
            "events_url": "https://api.github.com/users/jahewson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jahewson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah that makes sense, you said \"always\" which confused me, really you mean \"could be\". Cheers!\n",
        "created_at": "2013-04-05T17:20:49Z",
        "updated_at": "2013-04-05T17:20:49Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3676793",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3676793"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3676793"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3676812",
        "pull_request_review_id": null,
        "id": 3676812,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY4MTI=",
        "diff_hunk": "@@ -48,39 +46,83 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n     // get the unicodes\n     char *p = s->getCString();\n     int len = s->getLength();\n-\n-    double dx = 0;\n-    double dy = 0;\n-    double dx1,dy1;\n-    double ox, oy;\n-\n-    int nChars = 0;\n-    int nSpaces = 0;\n-    int uLen;\n-\n-    CharCode code;\n-    Unicode *u = nullptr;\n-\n+    \n+    // current clipping rect (in device space)\n+    double xMin, yMin, xMax, yMax;\n+    state->getClipBBox(&xMin, &yMin, &xMax, &yMax);\n+    \n+    // current position (in device space)\n+    double x, y;\n+    state->transform(state->getCurX(), state->getCurY(), &x, &y);\n+    \n+    // total delta of the string\n+    double total_dx = 0;\n+    double total_dy = 0;\n+    \n     while (len > 0) \n     {\n-        auto n = font->getNextChar(p, len, &code, &u, &uLen, &dx1, &dy1, &ox, &oy);\n-\n-        if(!(equal(ox, 0) && equal(oy, 0)))\n+        CharCode code; Unicode *u; int uLen;\n+        double char_dx, char_dy, origin_x, origin_y;\n+        auto n = font->getNextChar(p, len, &code, &u, &uLen, &char_dx, &char_dy, &origin_x, &origin_y);\n+        \n+        if(!(equal(origin_x, 0) && equal(origin_y, 0)))\n         {\n             cerr << \"TODO: non-zero origins\" << endl;\n         }\n-\n+        \n+        // adjust deltas for char space, word space, and horizontal scaling\n+        // source: PSOutputDev::drawString\n+        double dx = char_dx;\n+        double dy = char_dy;\n+        \n         bool is_space = false;\n-        if (n == 1 && *p == ' ') \n+        \n+        dx *= state->getFontSize();\n+        dy *= state->getFontSize();\n+        \n+        if (font->getWMode())\n         {\n-            ++nSpaces;\n-            is_space = true;\n+            dy += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dy += state->getWordSpace();\n+                is_space = true;\n+            }\n         }\n+        else\n+        {\n+            dx += state->getCharSpace();\n+            if (n == 1 && *p == ' ')\n+            {\n+                dx += state->getWordSpace();\n+                is_space = true;\n+            }\n+        }\n+        dx *= state->getHorizScaling();\n+        \n+        // transform from text space to device space\n+        double dev_total_dx, dev_total_dy;\n+        state->textTransformDelta(total_dx, total_dy, &dev_total_dx, &dev_total_dy);\n+        state->transformDelta(dev_total_dx, dev_total_dy, &dev_total_dx, &dev_total_dy);\n+        dev_total_dx *= text_zoom_factor();\n+        dev_total_dy *= text_zoom_factor();\n+        \n+        double dev_dx, dev_dy;\n+        state->textTransformDelta(dx, dy, &dev_dx, &dev_dy);\n+        state->transformDelta(dev_dx, dev_dy, &dev_dx, &dev_dy);\n+        dev_dx *= text_zoom_factor();\n+        dev_dy *= text_zoom_factor();\n         \n         if(is_space && (param->space_as_offset))\n         {\n             // ignore horiz_scaling, as it's merged in CTM\n-            text_line_buf->append_offset((dx1 * cur_font_size + cur_letter_space + cur_word_space) * draw_text_scale); \n+            text_line_buf->append_offset((char_dx * state->getFontSize() + state->getCharSpace() + state->getWordSpace()) * draw_text_scale); \n+        }\n+        else if(x + dev_total_dx + dev_dx < xMin - EPS || x + dev_total_dx > xMax + EPS ||",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 106,
        "commit_id": "36a0ceb831c30e00f702be5d46734aa00d074d01",
        "original_commit_id": "418034bbc43404a166b1212cc5beaaf27821b683",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oops..\n",
        "created_at": "2013-04-05T17:22:08Z",
        "updated_at": "2013-04-05T17:22:08Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3676812",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/3676812"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/114#discussion_r3676812"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/114"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4262812",
        "pull_request_review_id": null,
        "id": 4262812,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI4MTI=",
        "diff_hunk": "@@ -38,26 +41,35 @@ var pdf2htmlEX = (function(){\n   var Page = function(page, container) {\n     if(page == undefined) return;\n \n+    this.loaded = false;\n     this.p = $(page);\n+    this.container = container;\n     this.n = parseInt(this.p.attr('data-page-no'), 16);\n     this.b = $('.'+CSS_CLASS_NAMES['page_content_box'], this.p);\n \n-    /*\n-     * scale ratios\n-     * \n-     * default_r : the first one\n-     * set_r : last set \n-     * cur_r : currently using\n-     */\n-    this.default_r = this.set_r = this.cur_r = this.p.height() / this.b.height();\n-\n-    this.data = JSON.parse($($('.'+CSS_CLASS_NAMES['page_data'], this.p)[0]).attr('data-data'));\n-\n-    this.ctm = this.data.ctm;\n-    this.ictm = invert(this.ctm);\n-    this.container = container;\n+    if (this.b[0])\n+      this.init();\n   };\n   $.extend(Page.prototype, {\n+    init : function(){\n+      this.b = $('.'+CSS_CLASS_NAMES['page_content_box'], this.p);",
        "path": "share/pdf2htmlEX.js.in",
        "position": 39,
        "original_position": 39,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why `this.b` is assigned again?\n",
        "created_at": "2013-05-16T19:20:17Z",
        "updated_at": "2013-05-16T19:20:17Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4262812",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4262812"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4262812"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4262902",
        "pull_request_review_id": null,
        "id": 4262902,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5MDI=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is not good : \n- `w0` and `h0` are not reliable\n- html code might be changed in the future, and manipulating it here is hard to maintain\n\nmaybe the frames can be generated in the code, with actual widths and heights\n",
        "created_at": "2013-05-16T19:23:22Z",
        "updated_at": "2013-05-16T19:23:22Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4262902",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4262902"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4262902"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4262972",
        "pull_request_review_id": null,
        "id": 4262972,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5NzI=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';\n+          // TODO: add a spinner in placeholder\n+        }\n+\n+        // Unique append to speed up DOM processing\n+        $('#'+this.container_id).append(html);",
        "path": "share/pdf2htmlEX.js.in",
        "position": 105,
        "original_position": 105,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There should have been a variable for container, `this.container`?\n",
        "created_at": "2013-05-16T19:25:40Z",
        "updated_at": "2013-05-16T19:25:40Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4262972",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4262972"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4262972"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4263095",
        "pull_request_review_id": null,
        "id": 4263095,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwOTU=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 94,
        "original_position": 94,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`find_pages` is supposed to locate the pages, so I don't suggest adding preloading codes here. \nOr maybe you can change the function name if it is not used elsewhere.\n",
        "created_at": "2013-05-16T19:31:06Z",
        "updated_at": "2013-05-16T19:31:06Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4263095",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4263095"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4263095"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4263140",
        "pull_request_review_id": null,
        "id": 4263140,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMxNDA=",
        "diff_hunk": "@@ -38,26 +41,35 @@ var pdf2htmlEX = (function(){\n   var Page = function(page, container) {\n     if(page == undefined) return;\n \n+    this.loaded = false;\n     this.p = $(page);\n+    this.container = container;\n     this.n = parseInt(this.p.attr('data-page-no'), 16);\n     this.b = $('.'+CSS_CLASS_NAMES['page_content_box'], this.p);\n \n-    /*\n-     * scale ratios\n-     * \n-     * default_r : the first one\n-     * set_r : last set \n-     * cur_r : currently using\n-     */\n-    this.default_r = this.set_r = this.cur_r = this.p.height() / this.b.height();\n-\n-    this.data = JSON.parse($($('.'+CSS_CLASS_NAMES['page_data'], this.p)[0]).attr('data-data'));\n-\n-    this.ctm = this.data.ctm;\n-    this.ictm = invert(this.ctm);\n-    this.container = container;\n+    if (this.b[0])\n+      this.init();\n   };\n   $.extend(Page.prototype, {\n+    init : function(){",
        "path": "share/pdf2htmlEX.js.in",
        "position": 38,
        "original_position": 38,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why a new function instead of doing stuffs in the constructor?\n",
        "created_at": "2013-05-16T19:33:00Z",
        "updated_at": "2013-05-16T19:33:00Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4263140",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4263140"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4263140"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4265458",
        "pull_request_review_id": null,
        "id": 4265458,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU0NTg=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ok, actual widths, heights and ctm, so target_page.ctm is always defined.\n\nDo you prefer rendering placeholders client-side (exchanging page sizes and ctm via json) or do you prefer modifing main html when --split-pages 1? Do I edit this code by myself or do you do it?\n",
        "created_at": "2013-05-16T21:10:05Z",
        "updated_at": "2013-05-16T21:10:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4265458",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4265458"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4265458"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4265470",
        "pull_request_review_id": null,
        "id": 4265470,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU0NzA=",
        "diff_hunk": "@@ -38,26 +41,35 @@ var pdf2htmlEX = (function(){\n   var Page = function(page, container) {\n     if(page == undefined) return;\n \n+    this.loaded = false;\n     this.p = $(page);\n+    this.container = container;\n     this.n = parseInt(this.p.attr('data-page-no'), 16);\n     this.b = $('.'+CSS_CLASS_NAMES['page_content_box'], this.p);\n \n-    /*\n-     * scale ratios\n-     * \n-     * default_r : the first one\n-     * set_r : last set \n-     * cur_r : currently using\n-     */\n-    this.default_r = this.set_r = this.cur_r = this.p.height() / this.b.height();\n-\n-    this.data = JSON.parse($($('.'+CSS_CLASS_NAMES['page_data'], this.p)[0]).attr('data-data'));\n-\n-    this.ctm = this.data.ctm;\n-    this.ictm = invert(this.ctm);\n-    this.container = container;\n+    if (this.b[0])\n+      this.init();\n   };\n   $.extend(Page.prototype, {\n+    init : function(){\n+      this.b = $('.'+CSS_CLASS_NAMES['page_content_box'], this.p);",
        "path": "share/pdf2htmlEX.js.in",
        "position": 39,
        "original_position": 39,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you are right, edited.\n",
        "created_at": "2013-05-16T21:10:28Z",
        "updated_at": "2013-05-16T21:10:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4265470",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4265470"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4265470"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4265473",
        "pull_request_review_id": null,
        "id": 4265473,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU0NzM=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';\n+          // TODO: add a spinner in placeholder\n+        }\n+\n+        // Unique append to speed up DOM processing\n+        $('#'+this.container_id).append(html);",
        "path": "share/pdf2htmlEX.js.in",
        "position": 105,
        "original_position": 105,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you are right, edited.\n",
        "created_at": "2013-05-16T21:10:36Z",
        "updated_at": "2013-05-16T21:10:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4265473",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4265473"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4265473"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4265513",
        "pull_request_review_id": null,
        "id": 4265513,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU1MTM=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 94,
        "original_position": 94,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "sure! I wait your answer of previous question before editing\n",
        "created_at": "2013-05-16T21:12:29Z",
        "updated_at": "2013-05-16T21:12:29Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4265513",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4265513"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4265513"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4265562",
        "pull_request_review_id": null,
        "id": 4265562,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU1NjI=",
        "diff_hunk": "@@ -38,26 +41,35 @@ var pdf2htmlEX = (function(){\n   var Page = function(page, container) {\n     if(page == undefined) return;\n \n+    this.loaded = false;\n     this.p = $(page);\n+    this.container = container;\n     this.n = parseInt(this.p.attr('data-page-no'), 16);\n     this.b = $('.'+CSS_CLASS_NAMES['page_content_box'], this.p);\n \n-    /*\n-     * scale ratios\n-     * \n-     * default_r : the first one\n-     * set_r : last set \n-     * cur_r : currently using\n-     */\n-    this.default_r = this.set_r = this.cur_r = this.p.height() / this.b.height();\n-\n-    this.data = JSON.parse($($('.'+CSS_CLASS_NAMES['page_data'], this.p)[0]).attr('data-data'));\n-\n-    this.ctm = this.data.ctm;\n-    this.ictm = invert(this.ctm);\n-    this.container = container;\n+    if (this.b[0])\n+      this.init();\n   };\n   $.extend(Page.prototype, {\n+    init : function(){",
        "path": "share/pdf2htmlEX.js.in",
        "position": 38,
        "original_position": 38,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you are right, edited.\n",
        "created_at": "2013-05-16T21:14:30Z",
        "updated_at": "2013-05-16T21:14:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4265562",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4265562"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4265562"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4290383",
        "pull_request_review_id": null,
        "id": 4290383,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzODM=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it's not worth putting those info into HTML, just to show placeholders, the extra JSON will increase the file size. I think it's enough to put a spin loader there, or maybe just some 'Loading...' text with a fair `margin-top`.\n",
        "created_at": "2013-05-19T17:04:22Z",
        "updated_at": "2013-05-19T17:04:22Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4290383",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4290383"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4290383"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4290958",
        "pull_request_review_id": null,
        "id": 4290958,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5NTg=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "JSON structure can be very lean and it's a solution for passing width and height as you suggest.\nFor example:\n\n``` javascript\nlayout = {\n  1: {\n    width: 800,\n    height: 1300,\n    ctm: [1.344538,0.000000,0.000000,1.344538,0.000000,0.000000]\n  },\n  2: {\n    width: 1300,\n    height: 800,\n    ctm: [1.344538,0.000000,0.000000,1.344538,0.000000,0.000000]\n  },\n ...\n}\n```\n\ngzipped file size is negligible.\n\nI agree putting a spinner, but inside a fake div .pc. I think that the full structure (a div .pd and a .pf) is still needed to resemble aesthetically the other pages when you scroll (and for consistency too). Furthermore once page is loaded, the content just appear and the frame stay there because it already has the correct shape and size.\n",
        "created_at": "2013-05-19T21:32:52Z",
        "updated_at": "2013-05-19T21:33:53Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4290958",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4290958"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4290958"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4335341",
        "pull_request_review_id": null,
        "id": 4335341,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzNDE=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree that the empty frameboxes give a better visual effect and user experience, for example a user may directly scroll to page 100 without waiting for the first 99 pages being loaded.\n\nMaybe we can add a new element in `manifest`, or just reuse the `$page` element for that. What concerns me is that now the page info has to be stored twice, one in the master HTML and one in the `.page` file, which is redundant and not elegant. Let's try to find a better one?\n\nAlso don't forget to add your self in `AUTHORS`\n",
        "created_at": "2013-05-22T10:21:29Z",
        "updated_at": "2013-05-22T10:21:29Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4335341",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4335341"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4335341"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4336165",
        "pull_request_review_id": null,
        "id": 4336165,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxNjU=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "To drop redunance we can put in `.page` just the page content.\nRegarding the manifest question I see two solutions:\n1) code frames in HTML directly (through `$pages` or a new element)\n2) render frames client-side by JavaScript basing on informations passed by json or a variable.\n\nMaybe first solution is cleaner and faster (despite a slightly bigger file size, that anyway is highly gzippable by the web server).\n\nPs: sure I will add me to the authoers, thanks Lu.\n",
        "created_at": "2013-05-22T11:24:33Z",
        "updated_at": "2013-05-22T11:24:33Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4336165",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4336165"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4336165"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4344014",
        "pull_request_review_id": null,
        "id": 4344014,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwMTQ=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is kind of a dilemma.\n\nThe top priority concern should be that the output is flexible for different kind of customization. Usually people using `--split-page 1` do not use the HTML file generated by pdf2htmlEX, what they need are the css file and the `.page` files. So I've been hoping that each single `.page` file is holding all information necessary for the corresponding page. Therefore I don't want to remove the current  content from `.page` files.\n\nSo now I'm heading towards the JS solution. Ideally we have all the metrics packed into a JSON, in some way like:\n\n``` javascript\n[{\n   urls : ['1.page', '2.page', ... , '10.page'],\n   width: 100,\n   height: 200,\n   ctm: [...]\n},{\n   urls: ['11.page'],\n   width: 200,\n   height:100,\n   ctm:[...]\n}]\n```\n\nI think it's reasonable since very few PDF have different sizes or ctms in the pages.\n\nIn this way, JS will draw some empty frames while loading the pages. But what concerns me is that the old code seems to be not flexible enough for this situation. And using `.pd`, `.pf` etc. look more like a hacking to me, which would become difficult to maintain once the page layout is changed. I see you have added `loaded` for the `Page` class, and I think we should introduce different behavior based on `loade`, or even create a new class, e.g. `PageLoader`, instead of creating a fake `.pf` etc.\n\nWhat do you think?\n",
        "created_at": "2013-05-22T17:34:40Z",
        "updated_at": "2013-05-22T17:34:40Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4344014",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4344014"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4344014"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4354569",
        "pull_request_review_id": null,
        "id": 4354569,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1Njk=",
        "diff_hunk": "@@ -38,26 +41,35 @@ var pdf2htmlEX = (function(){\n   var Page = function(page, container) {\n     if(page == undefined) return;\n \n+    this.loaded = false;\n     this.p = $(page);\n+    this.container = container;\n     this.n = parseInt(this.p.attr('data-page-no'), 16);\n     this.b = $('.'+CSS_CLASS_NAMES['page_content_box'], this.p);\n \n-    /*\n-     * scale ratios\n-     * \n-     * default_r : the first one\n-     * set_r : last set \n-     * cur_r : currently using\n-     */\n-    this.default_r = this.set_r = this.cur_r = this.p.height() / this.b.height();\n-\n-    this.data = JSON.parse($($('.'+CSS_CLASS_NAMES['page_data'], this.p)[0]).attr('data-data'));\n-\n-    this.ctm = this.data.ctm;\n-    this.ictm = invert(this.ctm);\n-    this.container = container;\n+    if (this.b[0])\n+      this.init();\n   };\n   $.extend(Page.prototype, {\n+    init : function(){",
        "path": "share/pdf2htmlEX.js.in",
        "position": 38,
        "original_position": 38,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I mean why you created this new function `init`?\n",
        "created_at": "2013-05-23T06:09:06Z",
        "updated_at": "2013-05-23T06:09:06Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4354569",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4354569"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4354569"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4432859",
        "pull_request_review_id": null,
        "id": 4432859,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI4NTk=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "From my personal point of view using PD/PF doesn't sounds like an hack and can keep the code coherent between loaded and unloaded pages: just for example, scaling code (for the reason explained in the other issue) works both with loaded and unloaded pages. Otherwise in any existing and future functions we should take in consideration if page is loaded or not and deal with different DOM.\n\nAnyway it's not a big deal, so if you prefer to keep PD/PF just for loaded pages no problem, I'll submit a fix in the following days.\n\nFor the matter of `.page` files, I get it. Keep them unmodified and do the stuff in javascript viewer.\nCan you patch the binary to output the json mentioned above (or a variable inside the main `.html`)? I'm more skilled in frontend that in C and this would save me a lot of time.\n",
        "created_at": "2013-05-29T12:17:04Z",
        "updated_at": "2013-05-29T12:17:04Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4432859",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4432859"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4432859"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4438388",
        "pull_request_review_id": null,
        "id": 4438388,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgzODg=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not against 'pd/pf' for unload pages, I just don't want JS handle the structure. Maybe I can output the empty frames in the backend.\n\nI'll also implement the JSON info, will let you know once finished.\n",
        "created_at": "2013-05-29T16:19:57Z",
        "updated_at": "2013-05-29T16:19:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4438388",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4438388"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4438388"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4438821",
        "pull_request_review_id": null,
        "id": 4438821,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4MjE=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1:\n",
        "created_at": "2013-05-29T16:39:59Z",
        "updated_at": "2013-05-29T16:39:59Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4438821",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4438821"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4438821"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4474802",
        "pull_request_review_id": null,
        "id": 4474802,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4MDI=",
        "diff_hunk": "@@ -7,6 +7,7 @@ Hongliang Tian <tatetian@gmail.com>\n John Hewson <john@jahewson.com>\n Lu Wang <coolwanglu@gmail.com>\n Ryan Morlok <ryan.morlok@morlok.com>\n+Michele Redolfi <michele@tecnicaict.com>",
        "path": "AUTHORS",
        "position": null,
        "original_position": 4,
        "commit_id": "933efc1d6c525ea33c4ac5c402f5494537244b5d",
        "original_commit_id": "a59c6a8865ee25e415c0711d2d280c3e781ae134",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's actually in the lexicographical order.\n",
        "created_at": "2013-05-31T10:40:57Z",
        "updated_at": "2013-05-31T10:43:54Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/160#discussion_r4474802",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/160",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4474802"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/160#discussion_r4474802"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/160"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4604178",
        "pull_request_review_id": null,
        "id": 4604178,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNzg=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hi @micred, I've done something in the `lazyload` branch. \n\nNow I've got empty frames dumped when `split-pages=1`, and there is an extra property `data-page-url` for them. I didn't output the `ctm` for them, since I guess it would not be necessary? But for the jumping function, it should wait for the page loaded before it try to use ctm.\n\nHow do you think about it?\n\nI think we need a new pull request to that branch, since the program would break in the middle of the implementation. I'm not sure if we can modify the existing pull request. Can you please close this one and open a new one?\n",
        "created_at": "2013-06-09T14:22:24Z",
        "updated_at": "2013-06-09T14:22:24Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4604178",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4604178"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4604178"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4659383",
        "pull_request_review_id": null,
        "id": 4659383,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzODM=",
        "diff_hunk": "@@ -155,33 +167,65 @@ var pdf2htmlEX = (function(){\n       $('img', this.container).on('dragstart', function(e){return false;});\n \n       this.render();\n-\n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n     },\n     find_pages : function() {\n       var new_pages = new Array();\n-      var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n-      /* don't use for(..in..) */\n-      for(var i = 0, l = pl.length; i < l; ++i) {\n-        var p = new Page(pl[i], this.container);\n-        new_pages[p.n] = p;\n+\n+      if (this.page_urls.length == 0) {\n+        // when --split-pages 0\n+        var pl= $('.'+CSS_CLASS_NAMES['page_frame'], this.container);\n+        /* don't use for(..in..) */\n+        for(var i = 0, l = pl.length; i < l; ++i) {\n+          var p = new Page(pl[i], this.container);\n+          new_pages[p.n] = p;\n+        }\n+      } else {\n+        // when --split-pages 1, create page frames to allow page lazy loading inside\n+        var html = '';\n+        for(var i = 0, l = this.page_urls.length; i < l; ++i) {\n+          // Create placeholder (they will be replaced when page is loaded)\n+          var page_no_hex = (i+1).toString(16);\n+          html += '<div class=\"' + CSS_CLASS_NAMES['page_decoration'] +' w0 h0\"><div id=\"' + CSS_CLASS_NAMES['page_frame'] + page_no_hex + '\" class=\"' + CSS_CLASS_NAMES['page_frame'] + '\" data-page-no=\"' + page_no_hex + '\"></div></div>';",
        "path": "share/pdf2htmlEX.js.in",
        "position": 100,
        "original_position": 100,
        "commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "original_commit_id": "9c6156c6461c512031031203edaaefa6a14cfa09",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Great. I am pushing on the new branch.\n",
        "created_at": "2013-06-12T15:49:54Z",
        "updated_at": "2013-06-12T15:49:54Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4659383",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4659383"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/147#discussion_r4659383"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671743",
        "pull_request_review_id": null,
        "id": 4671743,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3NDM=",
        "diff_hunk": "@@ -172,19 +183,54 @@ var pdf2htmlEX = (function(){\n       }\n       this.pages = new_pages;\n     },\n-    load_page : function(idx) {\n-      if(idx < this.page_urls.length){\n-        var _ = this;\n+    load_page : function(idx, pages_to_preload, successCallback) {",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 113,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Now I feel that starting `idx` from 0 is so not intuitive. Can you please make it starting from 1?\n",
        "created_at": "2013-06-13T02:35:49Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671743",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671743"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671743"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671777",
        "pull_request_review_id": null,
        "id": 4671777,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3Nzc=",
        "diff_hunk": "@@ -345,11 +394,26 @@ var pdf2htmlEX = (function(){\n       }\n \n       if(ok) {\n-        pos = transform(target_page.ctm, pos);\n-        if(upside_down) {\n-          pos[1] = target_page.height() - pos[1];\n+        if (target_page.loaded) {\n+          pos = transform(target_page.ctm, pos);\n+            if(upside_down) {\n+            pos[1] = target_page.height() - pos[1];\n+          }\n+          _.scroll_to(detail[0], pos);\n+        } else {\n+          // Scroll to the exact position once loaded.\n+          _.load_page(target_page.n - 1, 1, function() {            // load_page index starts from 0\n+            target_page = _.pages[target_page.n];\n+            pos = transform(target_page.ctm, pos);\n+            if(upside_down) {\n+              pos[1] = target_page.height() - pos[1];\n+            }\n+            _.scroll_to(detail[0], pos);",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 212,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I guess it would be better to create a function for line 407-411? Since they are used twice here.\n",
        "created_at": "2013-06-13T02:38:03Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671777",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671777"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671777"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671797",
        "pull_request_review_id": null,
        "id": 4671797,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3OTc=",
        "diff_hunk": "@@ -211,7 +257,11 @@ var pdf2htmlEX = (function(){\n       for(var i in pl) {\n         var p = pl[i];\n         if(p.is_nearly_visible()){\n-          p.show();\n+          if (p.loaded) {\n+            p.show();\n+            this.container.trigger(\"pageShown\", i);",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 177,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is this event used anywhere?\n",
        "created_at": "2013-06-13T02:39:58Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671797",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671797"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671797"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671806",
        "pull_request_review_id": null,
        "id": 4671806,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4MDY=",
        "diff_hunk": "@@ -141,26 +156,22 @@ var pdf2htmlEX = (function(){\n       if(this.outline.children().length > 0) { \n         this.sidebar.addClass('opened');\n       }\n-      \n+\n       this.find_pages();\n \n       // register schedule rendering\n       var _ = this;\n       this.container.scroll(function(){ _.schedule_render(); });\n \n-      //this.zoom_fixer();\n+      this.zoom_fixer();",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 88,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is `zoom_fixer` fixed here?\n",
        "created_at": "2013-06-13T02:40:38Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671806",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671806"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671806"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671811",
        "pull_request_review_id": null,
        "id": 4671811,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4MTE=",
        "diff_hunk": "@@ -141,26 +156,22 @@ var pdf2htmlEX = (function(){\n       if(this.outline.children().length > 0) { \n         this.sidebar.addClass('opened');\n       }\n-      \n+\n       this.find_pages();\n \n       // register schedule rendering\n       var _ = this;\n       this.container.scroll(function(){ _.schedule_render(); });\n \n-      //this.zoom_fixer();\n+      this.zoom_fixer();\n       \n       // handle links\n       this.container.add(this.outline).on('click', '.'+CSS_CLASS_NAMES['link'], this, this.link_handler);\n \n-      // disable background image draging\n-      $('img', this.container).on('dragstart', function(e){return false;});\n-\n       this.render();\n \n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n+      // Trigger documentLoaded event\n+      $(this.container).trigger(\"documentLoaded\");",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 102,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is this event used?\n",
        "created_at": "2013-06-13T02:40:50Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671811",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671811"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671811"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671829",
        "pull_request_review_id": null,
        "id": 4671829,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4Mjk=",
        "diff_hunk": "@@ -141,26 +156,22 @@ var pdf2htmlEX = (function(){\n       if(this.outline.children().length > 0) { \n         this.sidebar.addClass('opened');\n       }\n-      \n+\n       this.find_pages();\n \n       // register schedule rendering\n       var _ = this;\n       this.container.scroll(function(){ _.schedule_render(); });\n \n-      //this.zoom_fixer();\n+      this.zoom_fixer();\n       \n       // handle links\n       this.container.add(this.outline).on('click', '.'+CSS_CLASS_NAMES['link'], this, this.link_handler);\n \n-      // disable background image draging\n-      $('img', this.container).on('dragstart', function(e){return false;});\n-\n       this.render();\n \n-      // load split pages\n-      // has no effect if --split-pages is 0\n-      this.load_page(0);\n+      // Trigger documentLoaded event\n+      $(this.container).trigger(\"documentLoaded\");",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 102,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "And no need to wrap `$` around `container`.\n",
        "created_at": "2013-06-13T02:43:13Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671829",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671829"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671829"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671831",
        "pull_request_review_id": null,
        "id": 4671831,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4MzE=",
        "diff_hunk": "@@ -172,19 +183,54 @@ var pdf2htmlEX = (function(){\n       }\n       this.pages = new_pages;\n     },\n-    load_page : function(idx) {\n-      if(idx < this.page_urls.length){\n-        var _ = this;\n+    load_page : function(idx, pages_to_preload, successCallback) {\n+      if (this.pages[idx+1].loaded)\n+        return;  // Page is loaded\n+\n+      if (pages_loading[idx])\n+        return;  // Page is already loading\n+\n+      var page_no_hex = (idx+1).toString(16);\n+      var $pf = $(this.container).find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 121,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no need to wrap `$` around `this.container`.\n",
        "created_at": "2013-06-13T02:43:31Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671831",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671831"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671831"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671833",
        "pull_request_review_id": null,
        "id": 4671833,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4MzM=",
        "diff_hunk": "@@ -172,19 +183,54 @@ var pdf2htmlEX = (function(){\n       }\n       this.pages = new_pages;\n     },\n-    load_page : function(idx) {\n-      if(idx < this.page_urls.length){\n-        var _ = this;\n+    load_page : function(idx, pages_to_preload, successCallback) {\n+      if (this.pages[idx+1].loaded)\n+        return;  // Page is loaded\n+\n+      if (pages_loading[idx])\n+        return;  // Page is already loading\n+\n+      var page_no_hex = (idx+1).toString(16);\n+      var $pf = $(this.container).find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);\n+      if($pf.length == 0)\n+        return;  // Page does not exist\n+\n+      var _ = this;\n+\n+      var url = $pf.data('page-url');\n+      if (url && url.length > 0) {\n+        pages_loading[idx] = true;       // Set semaphore\n+\n         $.ajax({\n-          url: this.page_urls[idx],\n+          url: url,\n           dataType: 'text'\n         }).done(function(data){\n-          $('#'+_.container_id).append(data);\n-          _.find_pages();\n-          _.schedule_render();\n-          _.load_page(idx+1);\n-        });\n+            _.pages[idx+1].p.parent().replaceWith(data);         // pages index starts from 1\n+\n+            var $new_pf = $(_.container).find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 143,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "still about `$`.\n",
        "created_at": "2013-06-13T02:43:48Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671833",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671833"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671833"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671852",
        "pull_request_review_id": null,
        "id": 4671852,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4NTI=",
        "diff_hunk": "@@ -172,19 +183,54 @@ var pdf2htmlEX = (function(){\n       }\n       this.pages = new_pages;\n     },\n-    load_page : function(idx) {\n-      if(idx < this.page_urls.length){\n-        var _ = this;\n+    load_page : function(idx, pages_to_preload, successCallback) {\n+      if (this.pages[idx+1].loaded)\n+        return;  // Page is loaded\n+\n+      if (pages_loading[idx])\n+        return;  // Page is already loading\n+\n+      var page_no_hex = (idx+1).toString(16);\n+      var $pf = $(this.container).find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);\n+      if($pf.length == 0)\n+        return;  // Page does not exist\n+\n+      var _ = this;\n+\n+      var url = $pf.data('page-url');\n+      if (url && url.length > 0) {\n+        pages_loading[idx] = true;       // Set semaphore\n+\n         $.ajax({\n-          url: this.page_urls[idx],\n+          url: url,\n           dataType: 'text'\n         }).done(function(data){\n-          $('#'+_.container_id).append(data);\n-          _.find_pages();\n-          _.schedule_render();\n-          _.load_page(idx+1);\n-        });\n+            _.pages[idx+1].p.parent().replaceWith(data);         // pages index starts from 1\n+\n+            var $new_pf = $(_.container).find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);\n+            _.pages[idx+1] = new Page($new_pf, _.container);\n+            _.pages[idx+1].rescale(_.scale);\n+            _.schedule_render();\n+\n+            // Event fired when page is loaded. Please notice that it's not necessarily rendered (see event pageShown).\n+            _.container.trigger(\"pageLoaded\", idx+1);\n+\n+            // disable background image dragging\n+            $new_pf.find('.'+CSS_CLASS_NAMES['background_image']).on('dragstart', function(e){return false;});\n+\n+            // Reset loading token\n+            pages_loading[idx] = undefined;",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 155,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "maybe `delete pages_loading[idx]` is better?\nbtw, which one do you think is better, map or array? (for `pages_loading`)\n",
        "created_at": "2013-06-13T02:46:03Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671852",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671852"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671852"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671864",
        "pull_request_review_id": null,
        "id": 4671864,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4NjQ=",
        "diff_hunk": "@@ -172,19 +183,54 @@ var pdf2htmlEX = (function(){\n       }\n       this.pages = new_pages;\n     },\n-    load_page : function(idx) {\n-      if(idx < this.page_urls.length){\n-        var _ = this;\n+    load_page : function(idx, pages_to_preload, successCallback) {\n+      if (this.pages[idx+1].loaded)\n+        return;  // Page is loaded\n+\n+      if (pages_loading[idx])\n+        return;  // Page is already loading\n+\n+      var page_no_hex = (idx+1).toString(16);\n+      var $pf = $(this.container).find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);\n+      if($pf.length == 0)\n+        return;  // Page does not exist\n+\n+      var _ = this;\n+\n+      var url = $pf.data('page-url');\n+      if (url && url.length > 0) {\n+        pages_loading[idx] = true;       // Set semaphore\n+\n         $.ajax({\n-          url: this.page_urls[idx],\n+          url: url,\n           dataType: 'text'\n         }).done(function(data){\n-          $('#'+_.container_id).append(data);\n-          _.find_pages();\n-          _.schedule_render();\n-          _.load_page(idx+1);\n-        });\n+            _.pages[idx+1].p.parent().replaceWith(data);         // pages index starts from 1\n+\n+            var $new_pf = $(_.container).find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);\n+            _.pages[idx+1] = new Page($new_pf, _.container);\n+            _.pages[idx+1].rescale(_.scale);\n+            _.schedule_render();\n+\n+            // Event fired when page is loaded. Please notice that it's not necessarily rendered (see event pageShown).\n+            _.container.trigger(\"pageLoaded\", idx+1);\n+\n+            // disable background image dragging\n+            $new_pf.find('.'+CSS_CLASS_NAMES['background_image']).on('dragstart', function(e){return false;});\n+\n+            // Reset loading token\n+            pages_loading[idx] = undefined;",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 155,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "And I wonder if we need to do this when page loading fails.\n",
        "created_at": "2013-06-13T02:47:52Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671864",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671864"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671864"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671887",
        "pull_request_review_id": null,
        "id": 4671887,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4ODc=",
        "diff_hunk": "@@ -18,6 +18,9 @@ var pdf2htmlEX = (function(){\n     link             : '@CSS_LINK_CN@',\n     __dummy__        : 'no comma'\n   };\n+  var PAGES_TO_PRELOAD = 3;",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 4,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this looks like a constant, I mean which is not modifiable. \nhow about `DEFAULT_PAGES_TO_PRELOAD` or `PAGES_TO_PRELOAD_DEFAULT` or something like that?\n",
        "created_at": "2013-06-13T02:50:49Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671887",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671887"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671887"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671890",
        "pull_request_review_id": null,
        "id": 4671890,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4OTA=",
        "diff_hunk": "@@ -18,6 +18,9 @@ var pdf2htmlEX = (function(){\n     link             : '@CSS_LINK_CN@',\n     __dummy__        : 'no comma'\n   };\n+  var PAGES_TO_PRELOAD = 3;\n+\n+  var pages_loading = {};",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 6,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "there could be multiple instances of viewers, so I think we should move this object into the viewer object.\n",
        "created_at": "2013-06-13T02:51:19Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671890",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4671890"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4671890"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675663",
        "pull_request_review_id": null,
        "id": 4675663,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU2NjM=",
        "diff_hunk": "@@ -345,11 +394,26 @@ var pdf2htmlEX = (function(){\n       }\n \n       if(ok) {\n-        pos = transform(target_page.ctm, pos);\n-        if(upside_down) {\n-          pos[1] = target_page.height() - pos[1];\n+        if (target_page.loaded) {\n+          pos = transform(target_page.ctm, pos);\n+            if(upside_down) {\n+            pos[1] = target_page.height() - pos[1];\n+          }\n+          _.scroll_to(detail[0], pos);\n+        } else {\n+          // Scroll to the exact position once loaded.\n+          _.load_page(target_page.n - 1, 1, function() {            // load_page index starts from 0\n+            target_page = _.pages[target_page.n];\n+            pos = transform(target_page.ctm, pos);\n+            if(upside_down) {\n+              pos[1] = target_page.height() - pos[1];\n+            }\n+            _.scroll_to(detail[0], pos);",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 212,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done\n",
        "created_at": "2013-06-13T09:52:59Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675663",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675663"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675663"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675700",
        "pull_request_review_id": null,
        "id": 4675700,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU3MDA=",
        "diff_hunk": "@@ -211,7 +257,11 @@ var pdf2htmlEX = (function(){\n       for(var i in pl) {\n         var p = pl[i];\n         if(p.is_nearly_visible()){\n-          p.show();\n+          if (p.loaded) {\n+            p.show();\n+            this.container.trigger(\"pageShown\", i);",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 177,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no, it's useful for my installation but I think that events can be useful for anyone need to integrate pdf2htmlEX into existing projects. Tell me if you want to keep it or not.\n",
        "created_at": "2013-06-13T09:55:31Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675700",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675700"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675700"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675718",
        "pull_request_review_id": null,
        "id": 4675718,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU3MTg=",
        "diff_hunk": "@@ -67,6 +82,7 @@ var pdf2htmlEX = (function(){\n     show : function(){\n       if(Math.abs(this.set_r - this.cur_r) > EPS) {\n         this.cur_r = this.set_r;\n+        //TODO make it cross-browser compliant",
        "path": "share/pdf2htmlEX.js.in",
        "position": 61,
        "original_position": 63,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do you mean IE8 here?\n",
        "created_at": "2013-06-13T09:56:45Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675718",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675718"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675718"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675725",
        "pull_request_review_id": null,
        "id": 4675725,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU3MjU=",
        "diff_hunk": "@@ -211,7 +257,11 @@ var pdf2htmlEX = (function(){\n       for(var i in pl) {\n         var p = pl[i];\n         if(p.is_nearly_visible()){\n-          p.show();\n+          if (p.loaded) {\n+            p.show();\n+            this.container.trigger(\"pageShown\", i);",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 177,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think we'd better remove them for now, since they're not used.\n",
        "created_at": "2013-06-13T09:57:23Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675725",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675725"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675725"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675761",
        "pull_request_review_id": null,
        "id": 4675761,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU3NjE=",
        "diff_hunk": "@@ -172,19 +183,54 @@ var pdf2htmlEX = (function(){\n       }\n       this.pages = new_pages;\n     },\n-    load_page : function(idx) {\n-      if(idx < this.page_urls.length){\n-        var _ = this;\n+    load_page : function(idx, pages_to_preload, successCallback) {\n+      if (this.pages[idx+1].loaded)\n+        return;  // Page is loaded\n+\n+      if (pages_loading[idx])\n+        return;  // Page is already loading\n+\n+      var page_no_hex = (idx+1).toString(16);\n+      var $pf = $(this.container).find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);\n+      if($pf.length == 0)\n+        return;  // Page does not exist\n+\n+      var _ = this;\n+\n+      var url = $pf.data('page-url');\n+      if (url && url.length > 0) {\n+        pages_loading[idx] = true;       // Set semaphore\n+\n         $.ajax({\n-          url: this.page_urls[idx],\n+          url: url,\n           dataType: 'text'\n         }).done(function(data){\n-          $('#'+_.container_id).append(data);\n-          _.find_pages();\n-          _.schedule_render();\n-          _.load_page(idx+1);\n-        });\n+            _.pages[idx+1].p.parent().replaceWith(data);         // pages index starts from 1\n+\n+            var $new_pf = $(_.container).find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);\n+            _.pages[idx+1] = new Page($new_pf, _.container);\n+            _.pages[idx+1].rescale(_.scale);\n+            _.schedule_render();\n+\n+            // Event fired when page is loaded. Please notice that it's not necessarily rendered (see event pageShown).\n+            _.container.trigger(\"pageLoaded\", idx+1);\n+\n+            // disable background image dragging\n+            $new_pf.find('.'+CSS_CLASS_NAMES['background_image']).on('dragstart', function(e){return false;});\n+\n+            // Reset loading token\n+            pages_loading[idx] = undefined;",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 155,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you right\n",
        "created_at": "2013-06-13T09:59:52Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675761",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675761"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675761"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675922",
        "pull_request_review_id": null,
        "id": 4675922,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5MjI=",
        "diff_hunk": "@@ -18,6 +18,9 @@ var pdf2htmlEX = (function(){\n     link             : '@CSS_LINK_CN@',\n     __dummy__        : 'no comma'\n   };\n+  var PAGES_TO_PRELOAD = 3;",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 4,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done\n",
        "created_at": "2013-06-13T10:14:05Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675922",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4675922"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4675922"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4676129",
        "pull_request_review_id": null,
        "id": 4676129,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYxMjk=",
        "diff_hunk": "@@ -18,6 +18,9 @@ var pdf2htmlEX = (function(){\n     link             : '@CSS_LINK_CN@',\n     __dummy__        : 'no comma'\n   };\n+  var PAGES_TO_PRELOAD = 3;\n+\n+  var pages_loading = {};",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 6,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done\n",
        "created_at": "2013-06-13T10:32:05Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4676129",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4676129"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4676129"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4676174",
        "pull_request_review_id": null,
        "id": 4676174,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYxNzQ=",
        "diff_hunk": "@@ -172,19 +183,54 @@ var pdf2htmlEX = (function(){\n       }\n       this.pages = new_pages;\n     },\n-    load_page : function(idx) {\n-      if(idx < this.page_urls.length){\n-        var _ = this;\n+    load_page : function(idx, pages_to_preload, successCallback) {",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 113,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "d5ade42d5a11d6511f4a96353727646d4fef9d32",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "sure\n",
        "created_at": "2013-06-13T10:36:50Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4676174",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4676174"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4676174"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4676919",
        "pull_request_review_id": null,
        "id": 4676919,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MTk=",
        "diff_hunk": "@@ -172,19 +183,65 @@ var pdf2htmlEX = (function(){\n       }\n       this.pages = new_pages;\n     },\n-    load_page : function(idx) {\n-      if(idx < this.page_urls.length){\n-        var _ = this;\n+    load_page : function(idx, pages_to_preload, successCallback, errorCallback) {\n+      if (idx >= this.pages.length)\n+        return;  // Page does not exist\n+\n+      if (this.pages[idx].loaded)\n+        return;  // Page is loaded\n+\n+      if (this.pages_loading[idx])\n+        return;  // Page is already loading\n+\n+      var page_no_hex = idx.toString(16);\n+      var $pf = this.container.find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);",
        "path": "share/pdf2htmlEX.js.in",
        "position": 117,
        "original_position": 119,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "51dd4fdecd75977a7638212a5bfeb2082e45b1a5",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see you use `$` for `pf` and `new_pf`, which is ok, but I wonder why?\n",
        "created_at": "2013-06-13T11:47:08Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4676919",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4676919"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4676919"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4677524",
        "pull_request_review_id": null,
        "id": 4677524,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1MjQ=",
        "diff_hunk": "@@ -172,19 +183,65 @@ var pdf2htmlEX = (function(){\n       }\n       this.pages = new_pages;\n     },\n-    load_page : function(idx) {\n-      if(idx < this.page_urls.length){\n-        var _ = this;\n+    load_page : function(idx, pages_to_preload, successCallback, errorCallback) {\n+      if (idx >= this.pages.length)\n+        return;  // Page does not exist\n+\n+      if (this.pages[idx].loaded)\n+        return;  // Page is loaded\n+\n+      if (this.pages_loading[idx])\n+        return;  // Page is already loading\n+\n+      var page_no_hex = idx.toString(16);\n+      var $pf = this.container.find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);",
        "path": "share/pdf2htmlEX.js.in",
        "position": 117,
        "original_position": 119,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "51dd4fdecd75977a7638212a5bfeb2082e45b1a5",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm used to the convention of putting a dollar in variable name of jQuery objects. Which is the guideline? w/o dollars?\n",
        "created_at": "2013-06-13T12:35:19Z",
        "updated_at": "2013-06-13T12:41:26Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4677524",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4677524"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4677524"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4677877",
        "pull_request_review_id": null,
        "id": 4677877,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4Nzc=",
        "diff_hunk": "@@ -172,19 +183,65 @@ var pdf2htmlEX = (function(){\n       }\n       this.pages = new_pages;\n     },\n-    load_page : function(idx) {\n-      if(idx < this.page_urls.length){\n-        var _ = this;\n+    load_page : function(idx, pages_to_preload, successCallback, errorCallback) {\n+      if (idx >= this.pages.length)\n+        return;  // Page does not exist\n+\n+      if (this.pages[idx].loaded)\n+        return;  // Page is loaded\n+\n+      if (this.pages_loading[idx])\n+        return;  // Page is already loading\n+\n+      var page_no_hex = idx.toString(16);\n+      var $pf = this.container.find('#' + CSS_CLASS_NAMES['page_frame'] + page_no_hex);",
        "path": "share/pdf2htmlEX.js.in",
        "position": 117,
        "original_position": 119,
        "commit_id": "25a3273bac9b8e4b1cd236f56cb2df1fdddfe1ba",
        "original_commit_id": "51dd4fdecd75977a7638212a5bfeb2082e45b1a5",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, that sounds pretty good. I'll convert some of my variables then.\n",
        "created_at": "2013-06-13T12:54:49Z",
        "updated_at": "2013-06-13T12:54:49Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4677877",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/4677877"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/171#discussion_r4677877"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/171"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5004549",
        "pull_request_review_id": null,
        "id": 5004549,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1NDk=",
        "diff_hunk": "@@ -164,6 +164,8 @@ var pdf2htmlEX = (function(){\n \n       //this.zoom_fixer();\n       \n+      this.add_key_handler();",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 4,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "316d547ac0d0cfdfbc0b58a0616fcb5a41b2e9ca",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please use a more meaningful name, e.g. `navigation_key_handler`\n",
        "created_at": "2013-07-03T09:05:52Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5004549",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5004549"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5004549"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5004579",
        "pull_request_review_id": null,
        "id": 5004579,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1Nzk=",
        "diff_hunk": "@@ -323,6 +325,64 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    add_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 16,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "316d547ac0d0cfdfbc0b58a0616fcb5a41b2e9ca",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Binding the handler to `window` might not be a good idea, note that the output of pdf2htmlEX is supposed to be embedded into another page, and there might be multiple documents in a same page.\n\nOn the other hand, I just realized that I don't know how to fix this without binding an event to `window`, it's a dilemma to me.\n",
        "created_at": "2013-07-03T09:08:07Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5004579",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5004579"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5004579"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5004594",
        "pull_request_review_id": null,
        "id": 5004594,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1OTQ=",
        "diff_hunk": "@@ -323,6 +325,64 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    add_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page Down\n+          _.scroll_to_page(_.get_prev_page());\n+          break;\n+        case 34: // Page Up\n+          _.scroll_to_page(_.get_next_page());\n+          break;\n+        case 35: // End\n+          if (e.ctrlKey)\n+            _.scroll_to_page(_.pages[_.pages.length-1]);\n+          break;\n+        case 36: // Home\n+          if (e.ctrlKey)\n+            _.scroll_to_page(_.pages[1]);\n+          break;",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 32,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "316d547ac0d0cfdfbc0b58a0616fcb5a41b2e9ca",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You might want to call `e.preventDefault()` if the event is handled.\n",
        "created_at": "2013-07-03T09:08:43Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5004594",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5004594"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5004594"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5004646",
        "pull_request_review_id": null,
        "id": 5004646,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NDY=",
        "diff_hunk": "@@ -323,6 +325,64 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    add_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page Down\n+          _.scroll_to_page(_.get_prev_page());",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 20,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "316d547ac0d0cfdfbc0b58a0616fcb5a41b2e9ca",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If you try a real PDF Viewer (or actually many other document readers), pgup is actually one 'screen' up, instead of one page (as in the document) up. So I don't think the logic is correct here.\n\nI think that pgup/down, home/end should just change the scroll value, which should have nothing to do with the pages.\n",
        "created_at": "2013-07-03T09:12:26Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5004646",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5004646"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5004646"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5006121",
        "pull_request_review_id": null,
        "id": 5006121,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYxMjE=",
        "diff_hunk": "@@ -323,6 +325,87 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page UP:\n+          // pageup        -> scroll one screen up\n+          // alt-pageup    -> scroll one page up\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_prev_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()-_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 34: // Page DOWN\n+          // pagedown      -> scroll one screen down\n+          // alt-pagedown  -> scroll one page down\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_next_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()+_.$container.height());\n+          }\n+          e.preventDefault();",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 40,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "4bde91423d982d79ff17e37a756655b517352f96",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You may add a `return` statement for the `default` case, then call `preventDefault` after the `switch` clause. It would be easier to read.\n\nPlease refer to the function above this one.\n",
        "created_at": "2013-07-03T10:44:13Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5006121",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5006121"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5006121"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5006133",
        "pull_request_review_id": null,
        "id": 5006133,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYxMzM=",
        "diff_hunk": "@@ -323,6 +325,87 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page UP:\n+          // pageup        -> scroll one screen up\n+          // alt-pageup    -> scroll one page up\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_prev_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()-_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 34: // Page DOWN\n+          // pagedown      -> scroll one screen down\n+          // alt-pagedown  -> scroll one page down\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_next_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()+_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 35: // End\n+          if (e.ctrlKey) {\n+            _.scroll_to_page(_.pages[_.pages.length-1]);",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 45,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "4bde91423d982d79ff17e37a756655b517352f96",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For Home & End, just scroll to 0 and height()\n",
        "created_at": "2013-07-03T10:44:35Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5006133",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5006133"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5006133"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5006143",
        "pull_request_review_id": null,
        "id": 5006143,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYxNDM=",
        "diff_hunk": "@@ -323,6 +325,87 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page UP:\n+          // pageup        -> scroll one screen up\n+          // alt-pageup    -> scroll one page up\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_prev_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()-_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 34: // Page DOWN\n+          // pagedown      -> scroll one screen down\n+          // alt-pagedown  -> scroll one page down\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_next_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()+_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 35: // End\n+          if (e.ctrlKey) {\n+            _.scroll_to_page(_.pages[_.pages.length-1]);\n+            e.preventDefault();\n+          }\n+          break;\n+\n+        case 36: // Home\n+          if (e.ctrlKey) {\n+            _.scroll_to_page(_.pages[1]);\n+            e.preventDefault();\n+          }\n+          break;\n+        }\n+      });\n+    },\n+\n+    // Find the first page that is at least half a page below the current position\n+    get_next_page : function() {\n+      var _ = this;\n+\n+      var position = [0,0];\n+      var page_height = _.$container.height();\n+\n+      var pl = this.pages;",
        "path": "share/pdf2htmlEX.js.in",
        "position": 71,
        "original_position": 67,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "4bde91423d982d79ff17e37a756655b517352f96",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I guess `get_next/prev_page` can be removed now.\n",
        "created_at": "2013-07-03T10:44:57Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5006143",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5006143"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5006143"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5006147",
        "pull_request_review_id": null,
        "id": 5006147,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYxNDc=",
        "diff_hunk": "@@ -423,6 +506,16 @@ var pdf2htmlEX = (function(){\n       }\n     }, \n     \n+    scroll_to_page : function(target_page) {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 105,
        "original_position": 101,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "4bde91423d982d79ff17e37a756655b517352f96",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can also be removed.\n",
        "created_at": "2013-07-03T10:45:08Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5006147",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5006147"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5006147"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5019259",
        "pull_request_review_id": null,
        "id": 5019259,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNTk=",
        "diff_hunk": "@@ -323,6 +325,87 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page UP:\n+          // pageup        -> scroll one screen up\n+          // alt-pageup    -> scroll one page up\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_prev_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()-_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 34: // Page DOWN\n+          // pagedown      -> scroll one screen down\n+          // alt-pagedown  -> scroll one page down\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_next_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()+_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 35: // End\n+          if (e.ctrlKey) {\n+            _.scroll_to_page(_.pages[_.pages.length-1]);\n+            e.preventDefault();\n+          }\n+          break;\n+\n+        case 36: // Home\n+          if (e.ctrlKey) {\n+            _.scroll_to_page(_.pages[1]);\n+            e.preventDefault();\n+          }\n+          break;\n+        }\n+      });\n+    },\n+\n+    // Find the first page that is at least half a page below the current position\n+    get_next_page : function() {\n+      var _ = this;\n+\n+      var position = [0,0];\n+      var page_height = _.$container.height();\n+\n+      var pl = this.pages;",
        "path": "share/pdf2htmlEX.js.in",
        "position": 71,
        "original_position": 67,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "4bde91423d982d79ff17e37a756655b517352f96",
        "user": {
            "login": "dbdr",
            "id": 2729515,
            "node_id": "MDQ6VXNlcjI3Mjk1MTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2729515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbdr",
            "html_url": "https://github.com/dbdr",
            "followers_url": "https://api.github.com/users/dbdr/followers",
            "following_url": "https://api.github.com/users/dbdr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbdr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbdr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbdr/subscriptions",
            "organizations_url": "https://api.github.com/users/dbdr/orgs",
            "repos_url": "https://api.github.com/users/dbdr/repos",
            "events_url": "https://api.github.com/users/dbdr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbdr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's still needed for implementing alt-page up\n",
        "created_at": "2013-07-03T20:12:43Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5019259",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5019259"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5019259"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5019265",
        "pull_request_review_id": null,
        "id": 5019265,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNjU=",
        "diff_hunk": "@@ -423,6 +506,16 @@ var pdf2htmlEX = (function(){\n       }\n     }, \n     \n+    scroll_to_page : function(target_page) {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 105,
        "original_position": 101,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "4bde91423d982d79ff17e37a756655b517352f96",
        "user": {
            "login": "dbdr",
            "id": 2729515,
            "node_id": "MDQ6VXNlcjI3Mjk1MTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2729515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbdr",
            "html_url": "https://github.com/dbdr",
            "followers_url": "https://api.github.com/users/dbdr/followers",
            "following_url": "https://api.github.com/users/dbdr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbdr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbdr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbdr/subscriptions",
            "organizations_url": "https://api.github.com/users/dbdr/orgs",
            "repos_url": "https://api.github.com/users/dbdr/repos",
            "events_url": "https://api.github.com/users/dbdr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbdr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is also still needed :)\n",
        "created_at": "2013-07-03T20:13:02Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5019265",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5019265"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5019265"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5019496",
        "pull_request_review_id": null,
        "id": 5019496,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk0OTY=",
        "diff_hunk": "@@ -323,6 +325,87 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page UP:\n+          // pageup        -> scroll one screen up\n+          // alt-pageup    -> scroll one page up\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_prev_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()-_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 34: // Page DOWN\n+          // pagedown      -> scroll one screen down\n+          // alt-pagedown  -> scroll one page down\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_next_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()+_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 35: // End\n+          if (e.ctrlKey) {\n+            _.scroll_to_page(_.pages[_.pages.length-1]);",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 45,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "4bde91423d982d79ff17e37a756655b517352f96",
        "user": {
            "login": "dbdr",
            "id": 2729515,
            "node_id": "MDQ6VXNlcjI3Mjk1MTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2729515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbdr",
            "html_url": "https://github.com/dbdr",
            "followers_url": "https://api.github.com/users/dbdr/followers",
            "following_url": "https://api.github.com/users/dbdr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbdr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbdr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbdr/subscriptions",
            "organizations_url": "https://api.github.com/users/dbdr/orgs",
            "repos_url": "https://api.github.com/users/dbdr/repos",
            "events_url": "https://api.github.com/users/dbdr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbdr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For home, yes.\n\nFor end I tried `_.$container.scrollTop(_.$container.height())` but that did not work. That scrolls only one screen down, not to the end. Did you mean something else?\n",
        "created_at": "2013-07-03T20:25:15Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5019496",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5019496"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5019496"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5019556",
        "pull_request_review_id": null,
        "id": 5019556,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk1NTY=",
        "diff_hunk": "@@ -323,6 +325,87 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page UP:\n+          // pageup        -> scroll one screen up\n+          // alt-pageup    -> scroll one page up\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_prev_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()-_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 34: // Page DOWN\n+          // pagedown      -> scroll one screen down\n+          // alt-pagedown  -> scroll one page down\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_next_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()+_.$container.height());\n+          }\n+          e.preventDefault();",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 40,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "4bde91423d982d79ff17e37a756655b517352f96",
        "user": {
            "login": "dbdr",
            "id": 2729515,
            "node_id": "MDQ6VXNlcjI3Mjk1MTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2729515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbdr",
            "html_url": "https://github.com/dbdr",
            "followers_url": "https://api.github.com/users/dbdr/followers",
            "following_url": "https://api.github.com/users/dbdr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbdr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbdr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbdr/subscriptions",
            "organizations_url": "https://api.github.com/users/dbdr/orgs",
            "repos_url": "https://api.github.com/users/dbdr/repos",
            "events_url": "https://api.github.com/users/dbdr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbdr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I did it in my latest version. Note that because for some keys only one case is handled, more returns are needed, so it's a question of taste if that's simpler. But it does have only one place to call `preventDefault()`, which is nicer.\n",
        "created_at": "2013-07-03T20:28:03Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5019556",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5019556"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5019556"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5019647",
        "pull_request_review_id": null,
        "id": 5019647,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk2NDc=",
        "diff_hunk": "@@ -423,6 +510,16 @@ var pdf2htmlEX = (function(){\n       }\n     }, \n     \n+    scroll_to_page : function(target_page) {\n+      if (target_page == undefined) return;\n+\n+      // Show a bit of space above the target page when scrolling\n+      // TODO: do not hardcode!\n+      var page_padding = 10;",
        "path": "share/pdf2htmlEX.js.in",
        "position": 110,
        "original_position": 110,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "08ba884b7fd0def3e42e1ce4ed8da51d56912142",
        "user": {
            "login": "dbdr",
            "id": 2729515,
            "node_id": "MDQ6VXNlcjI3Mjk1MTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2729515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbdr",
            "html_url": "https://github.com/dbdr",
            "followers_url": "https://api.github.com/users/dbdr/followers",
            "following_url": "https://api.github.com/users/dbdr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbdr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbdr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbdr/subscriptions",
            "organizations_url": "https://api.github.com/users/dbdr/orgs",
            "repos_url": "https://api.github.com/users/dbdr/repos",
            "events_url": "https://api.github.com/users/dbdr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbdr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What is the cleaner way to do this? Ideally, show exactly the same amount as the padding before page 1 when scrolled to the top.\n",
        "created_at": "2013-07-03T20:33:32Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5019647",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5019647"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5019647"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5021758",
        "pull_request_review_id": null,
        "id": 5021758,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE3NTg=",
        "diff_hunk": "@@ -323,6 +325,87 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page UP:\n+          // pageup        -> scroll one screen up\n+          // alt-pageup    -> scroll one page up\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_prev_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()-_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 34: // Page DOWN\n+          // pagedown      -> scroll one screen down\n+          // alt-pagedown  -> scroll one page down\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_next_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()+_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 35: // End\n+          if (e.ctrlKey) {\n+            _.scroll_to_page(_.pages[_.pages.length-1]);",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 45,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "4bde91423d982d79ff17e37a756655b517352f96",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "try `scrollHeight`\n",
        "created_at": "2013-07-03T22:26:27Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5021758",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5021758"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5021758"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5021778",
        "pull_request_review_id": null,
        "id": 5021778,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE3Nzg=",
        "diff_hunk": "@@ -323,6 +325,87 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page UP:\n+          // pageup        -> scroll one screen up\n+          // alt-pageup    -> scroll one page up\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_prev_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()-_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 34: // Page DOWN\n+          // pagedown      -> scroll one screen down\n+          // alt-pagedown  -> scroll one page down\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_next_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()+_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 35: // End\n+          if (e.ctrlKey) {\n+            _.scroll_to_page(_.pages[_.pages.length-1]);\n+            e.preventDefault();\n+          }\n+          break;\n+\n+        case 36: // Home\n+          if (e.ctrlKey) {\n+            _.scroll_to_page(_.pages[1]);\n+            e.preventDefault();\n+          }\n+          break;\n+        }\n+      });\n+    },\n+\n+    // Find the first page that is at least half a page below the current position\n+    get_next_page : function() {\n+      var _ = this;\n+\n+      var position = [0,0];\n+      var page_height = _.$container.height();\n+\n+      var pl = this.pages;",
        "path": "share/pdf2htmlEX.js.in",
        "position": 71,
        "original_position": 67,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "4bde91423d982d79ff17e37a756655b517352f96",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh I actually missed it.\nIs `alt-pgup` standard? In Adobe Reader it's `ctrl-pgup`\n\nAnd I think the logic here is not correct, e.g. consider there are 3 pages visible in the view.\n",
        "created_at": "2013-07-03T22:27:42Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5021778",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5021778"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5021778"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5021814",
        "pull_request_review_id": null,
        "id": 5021814,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4MTQ=",
        "diff_hunk": "@@ -423,6 +510,16 @@ var pdf2htmlEX = (function(){\n       }\n     }, \n     \n+    scroll_to_page : function(target_page) {\n+      if (target_page == undefined) return;\n+\n+      // Show a bit of space above the target page when scrolling\n+      // TODO: do not hardcode!\n+      var page_padding = 10;",
        "path": "share/pdf2htmlEX.js.in",
        "position": 110,
        "original_position": 110,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "08ba884b7fd0def3e42e1ce4ed8da51d56912142",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually I don't think we need a padding here.\nAnd I think `scroll_to_page` can be replaced by calling `scroll_to`\n\nIf you really need to define a constant, do it at the top.\n",
        "created_at": "2013-07-03T22:29:13Z",
        "updated_at": "2013-07-14T14:38:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5021814",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5021814"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5021814"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5181973",
        "pull_request_review_id": null,
        "id": 5181973,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE5NzM=",
        "diff_hunk": "@@ -323,6 +325,87 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page UP:\n+          // pageup        -> scroll one screen up\n+          // alt-pageup    -> scroll one page up\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_prev_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()-_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 34: // Page DOWN\n+          // pagedown      -> scroll one screen down\n+          // alt-pagedown  -> scroll one page down\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_next_page());\n+          }\n+          else {\n+            _.$container.scrollTop(_.$container.scrollTop()+_.$container.height());\n+          }\n+          e.preventDefault();\n+          break;\n+\n+        case 35: // End\n+          if (e.ctrlKey) {\n+            _.scroll_to_page(_.pages[_.pages.length-1]);\n+            e.preventDefault();\n+          }\n+          break;\n+\n+        case 36: // Home\n+          if (e.ctrlKey) {\n+            _.scroll_to_page(_.pages[1]);\n+            e.preventDefault();\n+          }\n+          break;\n+        }\n+      });\n+    },\n+\n+    // Find the first page that is at least half a page below the current position\n+    get_next_page : function() {\n+      var _ = this;\n+\n+      var position = [0,0];\n+      var page_height = _.$container.height();\n+\n+      var pl = this.pages;",
        "path": "share/pdf2htmlEX.js.in",
        "position": 71,
        "original_position": 67,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "4bde91423d982d79ff17e37a756655b517352f96",
        "user": {
            "login": "dbdr",
            "id": 2729515,
            "node_id": "MDQ6VXNlcjI3Mjk1MTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2729515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbdr",
            "html_url": "https://github.com/dbdr",
            "followers_url": "https://api.github.com/users/dbdr/followers",
            "following_url": "https://api.github.com/users/dbdr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbdr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbdr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbdr/subscriptions",
            "organizations_url": "https://api.github.com/users/dbdr/orgs",
            "repos_url": "https://api.github.com/users/dbdr/repos",
            "events_url": "https://api.github.com/users/dbdr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbdr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`ctrl-pgup` typically moves to the next browser tab, which is why I used alt for this.\n\nWith three pages visible, it puts page 3 at the top, so you see pages 3 to 5. I guess you could argue to have page 2 at the top (exactly one page down), or page 4 (\"about one screen down, but at an exact page boundary\"). I don't have a strong opinion either way, and am fine with the current behavior too. I'm not sure I would often zoom out that much, as that makes pages barely visible. Even a single page is often small when fit on a screen.\n\nThe point of this feature is to scroll down at a page boundary, as I find it tiresome to adapt to the page boundary to constantly appear at a different place on the screen.\n",
        "created_at": "2013-07-14T14:56:55Z",
        "updated_at": "2013-07-14T14:56:55Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5181973",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5181973"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5181973"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5181984",
        "pull_request_review_id": null,
        "id": 5181984,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE5ODQ=",
        "diff_hunk": "@@ -423,6 +510,16 @@ var pdf2htmlEX = (function(){\n       }\n     }, \n     \n+    scroll_to_page : function(target_page) {\n+      if (target_page == undefined) return;\n+\n+      // Show a bit of space above the target page when scrolling\n+      // TODO: do not hardcode!\n+      var page_padding = 10;",
        "path": "share/pdf2htmlEX.js.in",
        "position": 110,
        "original_position": 110,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "08ba884b7fd0def3e42e1ce4ed8da51d56912142",
        "user": {
            "login": "dbdr",
            "id": 2729515,
            "node_id": "MDQ6VXNlcjI3Mjk1MTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2729515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbdr",
            "html_url": "https://github.com/dbdr",
            "followers_url": "https://api.github.com/users/dbdr/followers",
            "following_url": "https://api.github.com/users/dbdr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbdr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbdr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbdr/subscriptions",
            "organizations_url": "https://api.github.com/users/dbdr/orgs",
            "repos_url": "https://api.github.com/users/dbdr/repos",
            "events_url": "https://api.github.com/users/dbdr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbdr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The reason for the padding is that when pressing alt-pgdn once, page 2 appears exactly where page 1 appears when scrolled to the top. So there is no move of the page boundaries, which I find more visually pleasing.\n\nWhich constant in the code defines the distance between the top of the client and the top border of page 1?\n",
        "created_at": "2013-07-14T15:01:42Z",
        "updated_at": "2013-07-14T15:02:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5181984",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5181984"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5181984"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5675807",
        "pull_request_review_id": null,
        "id": 5675807,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzU4MDc=",
        "diff_hunk": "@@ -423,6 +510,16 @@ var pdf2htmlEX = (function(){\n       }\n     }, \n     \n+    scroll_to_page : function(target_page) {\n+      if (target_page == undefined) return;\n+\n+      // Show a bit of space above the target page when scrolling\n+      // TODO: do not hardcode!\n+      var page_padding = 10;",
        "path": "share/pdf2htmlEX.js.in",
        "position": 110,
        "original_position": 110,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "08ba884b7fd0def3e42e1ce4ed8da51d56912142",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In that case we might need to change the css code, to remove margin-top of the pages.\n",
        "created_at": "2013-08-09T03:30:18Z",
        "updated_at": "2013-08-09T03:30:18Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5675807",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5675807"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5675807"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5682661",
        "pull_request_review_id": null,
        "id": 5682661,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODI2NjE=",
        "diff_hunk": "@@ -423,6 +510,16 @@ var pdf2htmlEX = (function(){\n       }\n     }, \n     \n+    scroll_to_page : function(target_page) {\n+      if (target_page == undefined) return;\n+\n+      // Show a bit of space above the target page when scrolling\n+      // TODO: do not hardcode!\n+      var page_padding = 10;",
        "path": "share/pdf2htmlEX.js.in",
        "position": 110,
        "original_position": 110,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "08ba884b7fd0def3e42e1ce4ed8da51d56912142",
        "user": {
            "login": "dbdr",
            "id": 2729515,
            "node_id": "MDQ6VXNlcjI3Mjk1MTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2729515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbdr",
            "html_url": "https://github.com/dbdr",
            "followers_url": "https://api.github.com/users/dbdr/followers",
            "following_url": "https://api.github.com/users/dbdr/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbdr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbdr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbdr/subscriptions",
            "organizations_url": "https://api.github.com/users/dbdr/orgs",
            "repos_url": "https://api.github.com/users/dbdr/repos",
            "events_url": "https://api.github.com/users/dbdr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbdr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Are you saying to remove the margin altogether, or to implement it in a different way?\n",
        "created_at": "2013-08-09T13:36:48Z",
        "updated_at": "2013-08-09T13:36:48Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5682661",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5682661"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5682661"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5684495",
        "pull_request_review_id": null,
        "id": 5684495,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODQ0OTU=",
        "diff_hunk": "@@ -423,6 +510,16 @@ var pdf2htmlEX = (function(){\n       }\n     }, \n     \n+    scroll_to_page : function(target_page) {\n+      if (target_page == undefined) return;\n+\n+      // Show a bit of space above the target page when scrolling\n+      // TODO: do not hardcode!\n+      var page_padding = 10;",
        "path": "share/pdf2htmlEX.js.in",
        "position": 110,
        "original_position": 110,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "08ba884b7fd0def3e42e1ce4ed8da51d56912142",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'll try to figure it out.\n\nI cannot merge this right now, since there's global handler registered, which might affect other users who do not want this. I'm planning to create a standalone mode where we are free to add UI features.\n",
        "created_at": "2013-08-09T14:48:36Z",
        "updated_at": "2013-08-09T14:48:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5684495",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5684495"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r5684495"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5696860",
        "pull_request_review_id": null,
        "id": 5696860,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTY4NjA=",
        "diff_hunk": "@@ -109,18 +118,15 @@ var pdf2htmlEX = (function(){\n       /* I should use the height of the previous page or the next page here\n        * but since they are not easily available, just use '*2', which should be a good estimate in most cases\n        */\n-      return !((off[1] > this.height() * 2) || (off[1] + this.$container.height() * 2 < 0));\n+      return !((off[1] > this.h * 2) || (off[1] + this.$container.height() * 2 < 0));\n     },\n     /* return the coordinate of the top-left corner of container\n-     * in our cooridnate system\n+     * in our coordinate system\n      */\n     position : function () {\n       var off = this.$p.offset();\n       var off_c = this.$container.offset();\n       return [off_c.left-off.left, off_c.top-off.top];\n-    },\n-    height : function() {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 102,
        "original_position": 101,
        "commit_id": "6abc16fb5391ebebdffa4aad4817012d9c258fd8",
        "original_commit_id": "ed1df3b470d1481127111383d278ffdc0c4a8c74",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why did you change all `height()` to `h` instead of simply changing this function?\n",
        "created_at": "2013-08-10T03:59:54Z",
        "updated_at": "2013-08-13T09:33:17Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/186#discussion_r5696860",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/186",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5696860"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/186#discussion_r5696860"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/186"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5731377",
        "pull_request_review_id": null,
        "id": 5731377,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzEzNzc=",
        "diff_hunk": "@@ -109,18 +118,15 @@ var pdf2htmlEX = (function(){\n       /* I should use the height of the previous page or the next page here\n        * but since they are not easily available, just use '*2', which should be a good estimate in most cases\n        */\n-      return !((off[1] > this.height() * 2) || (off[1] + this.$container.height() * 2 < 0));\n+      return !((off[1] > this.h * 2) || (off[1] + this.$container.height() * 2 < 0));\n     },\n     /* return the coordinate of the top-left corner of container\n-     * in our cooridnate system\n+     * in our coordinate system\n      */\n     position : function () {\n       var off = this.$p.offset();\n       var off_c = this.$container.offset();\n       return [off_c.left-off.left, off_c.top-off.top];\n-    },\n-    height : function() {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 102,
        "original_position": 101,
        "commit_id": "6abc16fb5391ebebdffa4aad4817012d9c258fd8",
        "original_commit_id": "ed1df3b470d1481127111383d278ffdc0c4a8c74",
        "user": {
            "login": "micred",
            "id": 511434,
            "node_id": "MDQ6VXNlcjUxMTQzNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/511434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micred",
            "html_url": "https://github.com/micred",
            "followers_url": "https://api.github.com/users/micred/followers",
            "following_url": "https://api.github.com/users/micred/following{/other_user}",
            "gists_url": "https://api.github.com/users/micred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micred/subscriptions",
            "organizations_url": "https://api.github.com/users/micred/orgs",
            "repos_url": "https://api.github.com/users/micred/repos",
            "events_url": "https://api.github.com/users/micred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micred/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Because calling jQuery.height() is heavier then caching page height in a variable (height is used often while zooming) and it looks cleaner to me.\n",
        "created_at": "2013-08-13T09:19:21Z",
        "updated_at": "2013-08-13T09:33:17Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/186#discussion_r5731377",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/186",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/5731377"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/186#discussion_r5731377"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/186"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/6646133",
        "pull_request_review_id": null,
        "id": 6646133,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDYxMzM=",
        "diff_hunk": "@@ -323,6 +325,91 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 16,
        "original_position": 16,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm about to merge this pull request now.\nI wonder if `$(windows)` can be changed to `$container` here, since there might be multiple instance of pdf2htmlEX.Viewer on the same page\n",
        "created_at": "2013-09-29T03:37:49Z",
        "updated_at": "2013-09-29T03:37:49Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r6646133",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/6646133"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r6646133"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/6646148",
        "pull_request_review_id": null,
        "id": 6646148,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDYxNDg=",
        "diff_hunk": "@@ -323,6 +325,91 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page UP:\n+          // pageup        -> scroll one screen up\n+          // alt-pageup    -> scroll one page up",
        "path": "share/pdf2htmlEX.js.in",
        "position": 21,
        "original_position": 21,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Still I'm think that alg+pgup is king of confusing, since people cannot learn about this shortcut unless they see the source code. \nOf course I can add a wiki page for this, but I don't think a _user_ viewing a page produced by pdf2htmlEX (by some other party) would go all the way to the wiki here.\nSo I'd suggest remove it. On the other hand, I checked pdf.js, they use jkl;np for navigating, might be worth a try if you are interested.\n",
        "created_at": "2013-09-29T03:44:02Z",
        "updated_at": "2013-09-29T03:44:02Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r6646148",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/6646148"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r6646148"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/6646149",
        "pull_request_review_id": null,
        "id": 6646149,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDYxNDk=",
        "diff_hunk": "@@ -323,6 +325,91 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n+    navigation_key_handler : function () {\n+      var _ = this;\n+\n+      $(window).on('keydown', function keydown(e) {\n+\n+        switch (e.keyCode) {\n+        case 33: // Page UP:\n+          // pageup        -> scroll one screen up\n+          // alt-pageup    -> scroll one page up\n+          if (e.altKey) {\n+            _.scroll_to_page(_.get_prev_page());",
        "path": "share/pdf2htmlEX.js.in",
        "position": 23,
        "original_position": 23,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "pdf.js keeps tracking the current page, I wonder if that's better for us.\n",
        "created_at": "2013-09-29T03:44:28Z",
        "updated_at": "2013-09-29T03:44:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r6646149",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/6646149"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r6646149"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/6646353",
        "pull_request_review_id": null,
        "id": 6646353,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDYzNTM=",
        "diff_hunk": "@@ -423,6 +510,16 @@ var pdf2htmlEX = (function(){\n       }\n     }, \n     \n+    scroll_to_page : function(target_page) {\n+      if (target_page == undefined) return;\n+\n+      // Show a bit of space above the target page when scrolling\n+      // TODO: do not hardcode!\n+      var page_padding = 10;",
        "path": "share/pdf2htmlEX.js.in",
        "position": 110,
        "original_position": 110,
        "commit_id": "b78cdd0a9d3b39c1aa6e70fd95d9ac2b4d808fe0",
        "original_commit_id": "08ba884b7fd0def3e42e1ce4ed8da51d56912142",
        "user": null,
        "body": "Great idea\n",
        "created_at": "2013-09-29T06:47:50Z",
        "updated_at": "2013-09-29T06:47:50Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r6646353",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/6646353"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/181#discussion_r6646353"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/181"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/6651291",
        "pull_request_review_id": null,
        "id": 6651291,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTEyOTE=",
        "diff_hunk": "@@ -323,15 +332,85 @@ var pdf2htmlEX = (function(){\n       });\n     },\n \n-    rescale : function (ratio, is_relative) {\n+    rescale : function (ratio, is_relative, offsetX, offsetY) {\n+      if (! offsetX)\n+        offsetX = 0;\n+      if (! offsetY)\n+        offsetY = 0;\n+\n+      // Save offset of the active page\n+      var active_page = this.get_active_page();\n+      var prev_offset = active_page.$p.offset();\n+      var old_scale = this.scale;\n+\n+      var prerendering_enabled = false;\n+      if (SMOOTH_ZOOM_THRESHOLD > 0) {\n+        // Immediate rendering optimizations enabled to improve reactiveness while zooming\n+        // Find out which pages are visible\n+        var min_visible, max_visible;\n+        min_visible = max_visible = active_page.n;\n+        while (min_visible > 0 && this.pages[min_visible].is_visible()) { min_visible-- }",
        "path": "share/pdf2htmlEX.js.in",
        "position": 176,
        "original_position": 176,
        "commit_id": "6abc16fb5391ebebdffa4aad4817012d9c258fd8",
        "original_commit_id": "6abc16fb5391ebebdffa4aad4817012d9c258fd8",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't assume that the page numbers are continuous.\n",
        "created_at": "2013-09-30T07:29:43Z",
        "updated_at": "2013-09-30T07:29:43Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/186#discussion_r6651291",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/186",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/6651291"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/186#discussion_r6651291"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/186"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124600",
        "pull_request_review_id": null,
        "id": 8124600,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMjQ2MDA=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is kind of hacky here, I'm not sure if it makes sense if people are not following the original guide.\n",
        "created_at": "2013-12-05T10:00:37Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124600",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124600"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124600"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124704",
        "pull_request_review_id": null,
        "id": 8124704,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMjQ3MDQ=",
        "diff_hunk": "@@ -54,5 +55,25 @@ void TmpFiles::clean()\n         cerr << \"Remove temporary directory: \" << param.tmp_dir << endl;\n }\n \n+double TmpFiles::get_total_size() const\n+{\n+    double total_size = 0;\n+#ifndef _WIN32\n+    struct stat st;",
        "path": "src/TmpFiles.cc",
        "position": null,
        "original_position": 30,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "maybe it is more intuitive to define auto macro for `stat` or `_stat` ?\n",
        "created_at": "2013-12-05T10:05:21Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124704",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124704"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124704"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124760",
        "pull_request_review_id": null,
        "id": 8124760,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMjQ3NjA=",
        "diff_hunk": "@@ -54,5 +55,25 @@ void TmpFiles::clean()\n         cerr << \"Remove temporary directory: \" << param.tmp_dir << endl;\n }\n \n+double TmpFiles::get_total_size() const",
        "path": "src/TmpFiles.cc",
        "position": null,
        "original_position": 26,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "please add some comments before this function, indicating the units returned (kb, mb ...)\n",
        "created_at": "2013-12-05T10:07:57Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124760",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124760"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124760"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124803",
        "pull_request_review_id": null,
        "id": 8124803,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMjQ4MDM=",
        "diff_hunk": "@@ -106,21 +115,53 @@ void embed_parser (const char * str)\n     }\n }\n \n+void prepare_directories()\n+{\n+    std::string tmp_dir = param.basetmp_dir + \"/pdf2htmlEX-XXXXXX\";\n+#ifndef _WIN32\n+    errno = 0;\n+\n+    auto_ptr<char> pBuf(new char[tmp_dir.size() + 1]);\n+    strcpy(pBuf.get(), tmp_dir.c_str());\n+    auto p = mkdtemp(pBuf.get());\n+    if(p == nullptr)\n+    {\n+        const char * errmsg = strerror(errno);\n+        if(!errmsg)\n+        {\n+            errmsg = \"unknown error\";\n+        }\n+        cerr << \"Cannot create temp directory: \" << errmsg << endl;\n+        exit(EXIT_FAILURE);\n+    }\n+    param.tmp_dir = pBuf.get();\n+#else\n+    srand((unsigned)time(0));\n+    int rand_value = (int)((rand() / ((double)RAND_MAX+1.0)) * 1e6);\n+    stringstream ss;\n+    ss << setw(6) << rand_value;\n+\n+    tmp_dir.erase(tmp_dir.size() - 6);\n+    param.tmp_dir = tmp_dir + ss.str();\n+    ::CreateDirectory(param.tmp_dir.c_str(), NULL);",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 56,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "please print some message here upon failure.\n",
        "created_at": "2013-12-05T10:09:47Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124803",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124803"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124803"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124821",
        "pull_request_review_id": null,
        "id": 8124821,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMjQ4MjE=",
        "diff_hunk": "@@ -65,7 +70,11 @@ void show_version_and_exit(const char * dummy = nullptr)\n #if ENABLE_SVG\n     cerr << \"  cairo \" << cairo_version_string() << endl;\n #endif\n+#ifdef _WIN32\n+    cerr << \"Default data-dir: \" << param.data_dir << endl;\n+#else\n     cerr << \"Default data-dir: \" << PDF2HTMLEX_DATA_PATH << endl;",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 19,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It'd be better to make it consistent, for example always use `param.data_dir` here, and set up the correct default value in `pdf2htmlEX.cc`\n",
        "created_at": "2013-12-05T10:10:24Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124821",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124821"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124821"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124889",
        "pull_request_review_id": null,
        "id": 8124889,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMjQ4ODk=",
        "diff_hunk": "@@ -128,6 +169,7 @@ void parse_options (int argc, char **argv)\n         .add(\"embed-image\", &param.embed_image, 1, \"embed image files into output\")\n         .add(\"embed-javascript\", &param.embed_javascript, 1, \"embed JavaScript files into output\")\n         .add(\"embed-outline\", &param.embed_outline, 1, \"embed outlines into output\")\n+        .add(\"max-output-size\", &param.max_size, -1, \"maximum output size, in KB (-1 for no max)\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 85,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please make the option name and the variable name consistent, as others.\nAlso this limits the size of all temp files, instead of output (there might be unused temp files), so maybe it's better to rename it to `temp-size-limit` or something.\n\nPlease also rename 'no max' to 'no limit'.\n",
        "created_at": "2013-12-05T10:12:56Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124889",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124889"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124889"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124893",
        "pull_request_review_id": null,
        "id": 8124893,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMjQ4OTM=",
        "diff_hunk": "@@ -160,19 +202,24 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n-        \n+\n         // encryption\n         .add(\"owner-password,o\", &param.owner_password, \"\", \"owner password (for encrypted files)\", true)\n         .add(\"user-password,u\", &param.user_password, \"\", \"user password (for encrypted files)\", true)\n         .add(\"no-drm\", &param.no_drm, 0, \"override document DRM settings\")\n-        \n+\n         // misc.\n         .add(\"clean-tmp\", &param.clean_tmp, 1, \"remove temporary files after conversion\")\n+        .add(\"base-tmp-dir\", &param.basetmp_dir, param.basetmp_dir, \"base temporary directory - will create pdf2htmlEX-XXXXXX under it\")\n+#ifdef _WIN32\n+        .add(\"data-dir\", &param.data_dir, param.data_dir, \"specify data directory\")\n+#else\n         .add(\"data-dir\", &param.data_dir, PDF2HTMLEX_DATA_PATH, \"specify data directory\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 125,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please make it consistent and set up the inital value below\n",
        "created_at": "2013-12-05T10:13:12Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124893",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124893"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124893"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124917",
        "pull_request_review_id": null,
        "id": 8124917,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMjQ5MTc=",
        "diff_hunk": "@@ -19,6 +19,11 @@\n \n #include \"ffw.h\"\n \n+#if defined(_WIN32)\n+#undef printf",
        "path": "src/util/ffw.c",
        "position": null,
        "original_position": 5,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I saw this in the guide, but I wonder they are necessary. Did you test this?\n",
        "created_at": "2013-12-05T10:14:04Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124917",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124917"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124917"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124944",
        "pull_request_review_id": null,
        "id": 8124944,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMjQ5NDQ=",
        "diff_hunk": "@@ -14,6 +14,17 @@\n \n using std::string;\n \n+#if defined(_WIN32)\n+#include <windows.h>\n+int mkdir(const char *pathname, mode_t mode) {",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 6,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I remember that there is `_mkdir` in Windows.\nIf you really want a re-implementation, please post those functions in a separate file, and add conditional compile/link in Cmakefiles\n",
        "created_at": "2013-12-05T10:15:24Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124944",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124944"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124944"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124955",
        "pull_request_review_id": null,
        "id": 8124955,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxMjQ5NTU=",
        "diff_hunk": "@@ -31,9 +42,15 @@ void create_directories(const string & path)\n     {\n         if(errno == EEXIST)\n         {\n+#if defined(_WIN32)\n+            struct _stat32 stat_buf;",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 23,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "again, a auto `_stat32` or `stat32` would be nice.\n",
        "created_at": "2013-12-05T10:15:49Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124955",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8124955"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8124955"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8141919",
        "pull_request_review_id": null,
        "id": 8141919,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNDE5MTk=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I followed the guide from here: http://oku.edu.mie-u.ac.jp/~okumura/texwiki/?pdf2htmlEX and they had I have the same problem. Looks like cmake does not find all the dependencies. I'm no cmake expert, so any hint on how you would do that?\n",
        "created_at": "2013-12-05T19:45:42Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8141919",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8141919"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8141919"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8142532",
        "pull_request_review_id": null,
        "id": 8142532,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNDI1MzI=",
        "diff_hunk": "@@ -128,6 +169,7 @@ void parse_options (int argc, char **argv)\n         .add(\"embed-image\", &param.embed_image, 1, \"embed image files into output\")\n         .add(\"embed-javascript\", &param.embed_javascript, 1, \"embed JavaScript files into output\")\n         .add(\"embed-outline\", &param.embed_outline, 1, \"embed outlines into output\")\n+        .add(\"max-output-size\", &param.max_size, -1, \"maximum output size, in KB (-1 for no max)\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 85,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I fixed the max vs limit and added more information in the help:\n\n```\n    .add(\"output-size-limit\", &param.max_size, -1, \"Limit the output size, in KB (-1 for no limit). This is only an estimate, the output may be bigger\")\n```\n\nThe goal of this parameter is to limit the HTML to a size. The beat way I found to plug this is to limit the number of pages, once the limit has been reached. Since I did not want to hook too deep in the system, I use the temp files, but still I think we should keep the parameter as a output-size-limit.\n\nWhat do you think?\n",
        "created_at": "2013-12-05T20:01:48Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8142532",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8142532"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8142532"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8142609",
        "pull_request_review_id": null,
        "id": 8142609,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNDI2MDk=",
        "diff_hunk": "@@ -19,6 +19,11 @@\n \n #include \"ffw.h\"\n \n+#if defined(_WIN32)\n+#undef printf",
        "path": "src/util/ffw.c",
        "position": null,
        "original_position": 5,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not necessary, I removed it - good catch. I guess it was late when I tried it :)\n",
        "created_at": "2013-12-05T20:03:43Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8142609",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8142609"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8142609"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8157115",
        "pull_request_review_id": null,
        "id": 8157115,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNTcxMTU=",
        "diff_hunk": "@@ -128,6 +169,7 @@ void parse_options (int argc, char **argv)\n         .add(\"embed-image\", &param.embed_image, 1, \"embed image files into output\")\n         .add(\"embed-javascript\", &param.embed_javascript, 1, \"embed JavaScript files into output\")\n         .add(\"embed-outline\", &param.embed_outline, 1, \"embed outlines into output\")\n+        .add(\"output-size-limit\", &param.max_size, -1, \"Limit the output size, in KB (-1 for no limit). This is only an estimate, the output may be bigger\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 86,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "762281ed5bbab8c013b31cae5d58438505727f75",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I thought you misunderstood my previous comments.\n\nSince some temp file may be not used in the final output, the output is likely to be smaller.\nThis option indeed limits the total size, not of the output, but all the intermediate files.\n",
        "created_at": "2013-12-06T09:48:49Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8157115",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8157115"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8157115"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8157158",
        "pull_request_review_id": null,
        "id": 8157158,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNTcxNTg=",
        "diff_hunk": "@@ -160,19 +202,20 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n-        \n+\n         // encryption\n         .add(\"owner-password,o\", &param.owner_password, \"\", \"owner password (for encrypted files)\", true)\n         .add(\"user-password,u\", &param.user_password, \"\", \"user password (for encrypted files)\", true)\n         .add(\"no-drm\", &param.no_drm, 0, \"override document DRM settings\")\n-        \n+\n         // misc.\n         .add(\"clean-tmp\", &param.clean_tmp, 1, \"remove temporary files after conversion\")\n-        .add(\"data-dir\", &param.data_dir, PDF2HTMLEX_DATA_PATH, \"specify data directory\")\n+        .add(\"base-tmp-dir\", &param.basetmp_dir, param.basetmp_dir, \"base temporary directory - will create pdf2htmlEX-XXXXXX under it\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 123,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "762281ed5bbab8c013b31cae5d58438505727f75",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`base-tmp-dir` might be confusing for used, maybe just use `tmp-dir`.\nfor the comments, just use `specify the location of tempory directory`.\n\nAnd you don't have to rename `param.tmp_dir` in other locations, you may just assign new values in `prepare_dirs`\n",
        "created_at": "2013-12-06T09:50:37Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8157158",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8157158"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8157158"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8157189",
        "pull_request_review_id": null,
        "id": 8157189,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNTcxODk=",
        "diff_hunk": "@@ -12,6 +12,15 @@\n \n #include \"path.h\"\n \n+#ifdef _WIN32\n+#   include <direct.h>\n+#   define STAT _stat\n+#   define MKDIR(A, B) mkdir(A)",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 7,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "762281ed5bbab8c013b31cae5d58438505727f75",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`_mkdir`? I'm not sure actually. \nJust make sure that it can be built\n",
        "created_at": "2013-12-06T09:52:33Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8157189",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8157189"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8157189"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8160560",
        "pull_request_review_id": null,
        "id": 8160560,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNjA1NjA=",
        "diff_hunk": "@@ -128,6 +169,7 @@ void parse_options (int argc, char **argv)\n         .add(\"embed-image\", &param.embed_image, 1, \"embed image files into output\")\n         .add(\"embed-javascript\", &param.embed_javascript, 1, \"embed JavaScript files into output\")\n         .add(\"embed-outline\", &param.embed_outline, 1, \"embed outlines into output\")\n+        .add(\"output-size-limit\", &param.max_size, -1, \"Limit the output size, in KB (-1 for no limit). This is only an estimate, the output may be bigger\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 86,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "762281ed5bbab8c013b31cae5d58438505727f75",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I understand. What I want is an option that limit the total output size to a specified size. Since it is not possible to really limit the output to the exact specified size, I decided to use the temp files, understandind that it is an approximation and that the final output will be either smaller or larger (I've seen both in my tests).\n\nIs there a better way to do that or does the actual implementation works for you?\n\nThanks\n",
        "created_at": "2013-12-06T13:23:19Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8160560",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8160560"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8160560"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8160791",
        "pull_request_review_id": null,
        "id": 8160791,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNjA3OTE=",
        "diff_hunk": "@@ -12,6 +12,15 @@\n \n #include \"path.h\"\n \n+#ifdef _WIN32\n+#   include <direct.h>\n+#   define STAT _stat\n+#   define MKDIR(A, B) mkdir(A)",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 7,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "762281ed5bbab8c013b31cae5d58438505727f75",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Compile and works on Windows/MinGW & Linux (Ubuntu).\n",
        "created_at": "2013-12-06T13:37:46Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8160791",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8160791"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8160791"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8161494",
        "pull_request_review_id": null,
        "id": 8161494,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNjE0OTQ=",
        "diff_hunk": "@@ -12,6 +12,15 @@\n \n #include \"path.h\"\n \n+#ifdef _WIN32\n+#   include <direct.h>\n+#   define STAT _stat\n+#   define MKDIR(A, B) mkdir(A)",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 7,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "762281ed5bbab8c013b31cae5d58438505727f75",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "http://msdn.microsoft.com/en-us/library/2fkk4dzw.aspx\n",
        "created_at": "2013-12-06T14:13:10Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8161494",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8161494"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8161494"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8165103",
        "pull_request_review_id": null,
        "id": 8165103,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNjUxMDM=",
        "diff_hunk": "@@ -12,6 +12,15 @@\n \n #include \"path.h\"\n \n+#ifdef _WIN32\n+#   include <direct.h>\n+#   define STAT _stat\n+#   define MKDIR(A, B) mkdir(A)",
        "path": "src/util/path.cc",
        "position": null,
        "original_position": 7,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "762281ed5bbab8c013b31cae5d58438505727f75",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Works well with mkdir or _mkdir.. I pushed a new version with _mkdir\n",
        "created_at": "2013-12-06T16:18:29Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8165103",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8165103"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8165103"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8180660",
        "pull_request_review_id": null,
        "id": 8180660,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxODA2NjA=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't have a good solution either. But the situations, a user may choose not to use png in poppler, therefore he/she won't need to install png and link with it here. So it doesn't make sense to add a hard dependency here.\n\nI'll try to setup a mingw and try different combinations.\n",
        "created_at": "2013-12-07T07:32:44Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8180660",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8180660"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8180660"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8180685",
        "pull_request_review_id": null,
        "id": 8180685,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxODA2ODU=",
        "diff_hunk": "@@ -13,6 +13,7 @@ John Hewson <john@jahewson.com>\n Michele Redolfi <michele@tecnicaict.com>\n Mick Giles <mick@mickgiles.com>\n Ryan Morlok <ryan.morlok@morlok.com>\n+Marc Sanfacon <marc.sanfacon@gmail.com>",
        "path": "AUTHORS",
        "position": null,
        "original_position": 4,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The list is actually alphabetical. \n",
        "created_at": "2013-12-07T07:42:28Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8180685",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8180685"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8180685"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8257700",
        "pull_request_review_id": null,
        "id": 8257700,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyNTc3MDA=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seems that I still need a few days before I have time to try mingw. \n\nWhat if you remove the line here? In other envrionments, the dependencies are automatically handled by pkg-config, and you don't have to add them.\n",
        "created_at": "2013-12-11T05:16:18Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8257700",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8257700"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8257700"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8271104",
        "pull_request_review_id": null,
        "id": 8271104,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyNzExMDQ=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I removed it, but it doesn't link. Still, I pushed the changes - without\nthe additional libraries. If you want you can merge like this.\n\nI'll try to find time to investigate why pkg_config doesn't find the\nlibraries.\n\nOn Wed, Dec 11, 2013 at 12:16 AM, Lu Wang notifications@github.com wrote:\n\n> In CMakeLists.txt:\n> \n> > @@ -130,6 +130,10 @@ else()\n> >      set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n> >  endif()\n> > \n> > +# Add additional dependencies\n> > +if(MINGW)\n> > +set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)\n> \n> Seems that I still need a few days before I have time to try mingw.\n> \n> What if you remove the line here? In other envrionments, the dependencies\n> are automatically handled by pkg-config, and you don't have to add them.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8257700\n> .\n",
        "created_at": "2013-12-11T16:02:09Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8271104",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8271104"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8271104"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8350955",
        "pull_request_review_id": null,
        "id": 8350955,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgzNTA5NTU=",
        "diff_hunk": "@@ -128,6 +169,7 @@ void parse_options (int argc, char **argv)\n         .add(\"embed-image\", &param.embed_image, 1, \"embed image files into output\")\n         .add(\"embed-javascript\", &param.embed_javascript, 1, \"embed JavaScript files into output\")\n         .add(\"embed-outline\", &param.embed_outline, 1, \"embed outlines into output\")\n+        .add(\"output-size-limit\", &param.max_size, -1, \"Limit the output size, in KB (-1 for no limit). This is only an estimate, the output may be bigger\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 86,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "762281ed5bbab8c013b31cae5d58438505727f75",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh yes, sometime when temp files are embedded in base64, it gets bigger.\nSince the parameter actually means the exact size of temp file, let's just use something like 'tmp_file_size_limit`, or similar names you lie, but just make sure that the description and the variable name match, which don't currently.\n\nOh, and don't forget to update the manpage accordingly.\n",
        "created_at": "2013-12-14T07:16:54Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8350955",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8350955"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8350955"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8350958",
        "pull_request_review_id": null,
        "id": 8350958,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgzNTA5NTg=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "45f9cd116bfdb07470f5eba4d7a5d03909518cfc",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure about it. I think I've put dependency checks in CMakeList, as it works on Linux and Mac. Not sure why it won't work on mingw\n",
        "created_at": "2013-12-14T07:19:15Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8350958",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8350958"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8350958"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8462427",
        "pull_request_review_id": null,
        "id": 8462427,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjI0Mjc=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it's better not leave it like this, users might be confused.\n\npkg-config itself should work, as poppler is found with it. But I've no idea why it does not work for other libs.\n",
        "created_at": "2013-12-19T07:39:33Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8462427",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8462427"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8462427"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8468775",
        "pull_request_review_id": null,
        "id": 8468775,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0Njg3NzU=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Those lines are removed from CMakeLists.txt in my repo.\n\nOn Thu, Dec 19, 2013 at 2:39 AM, Lu Wang notifications@github.com wrote:\n\n> In CMakeLists.txt:\n> \n> > @@ -130,6 +130,10 @@ else()\n> >      set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n> >  endif()\n> > \n> > +# Add additional dependencies\n> > +if(MINGW)\n> > +set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)\n> \n> I think it's better not leave it like this, users might be confused.\n> \n> pkg-config itself should work, as poppler is found with it. But I've no\n> idea why it does not work for other libs.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8462427\n> .\n",
        "created_at": "2013-12-19T13:30:58Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8468775",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8468775"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8468775"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8468906",
        "pull_request_review_id": null,
        "id": 8468906,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0Njg5MDY=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "By 'like this', I actually meant 'removing all of them', since you mentioned that it didn't link.\nAnd adding all of them might not link either if some of disabled by the user.\n\nHoping that we can find a solution.\n",
        "created_at": "2013-12-19T13:37:37Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8468906",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8468906"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8468906"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8469008",
        "pull_request_review_id": null,
        "id": 8469008,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjkwMDg=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I removed the complete lines from the file. I checked in the repo a minute\nago and did not see the lines. You still see them?\n\nhttps://github.com/marcsanfacon/pdf2htmlEX/blob/master/CMakeLists.txt\n\nOn Thu, Dec 19, 2013 at 8:37 AM, Lu Wang notifications@github.com wrote:\n\n> In CMakeLists.txt:\n> \n> > @@ -130,6 +130,10 @@ else()\n> >      set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n> >  endif()\n> > \n> > +# Add additional dependencies\n> > +if(MINGW)\n> > +set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)\n> \n> By 'like this', I actually meant 'removing all of them', since you\n> mentioned that it didn't link.\n> And adding all of them might not link either if some of disabled by the\n> user.\n> \n> Hoping that we can find a solution.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8468906\n> .\n",
        "created_at": "2013-12-19T13:40:52Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8469008",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8469008"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8469008"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8469052",
        "pull_request_review_id": null,
        "id": 8469052,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjkwNTI=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No I don't see them.\n\nOn Thu, Dec 19, 2013 at 9:40 PM, marcsanfacon notifications@github.comwrote:\n\n> In CMakeLists.txt:\n> \n> > @@ -130,6 +130,10 @@ else()\n> >      set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n> >  endif()\n> > \n> > +# Add additional dependencies\n> > +if(MINGW)\n> > +set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)\n> \n> I removed the complete lines from the file. I checked in the repo a minute\n> ago and did not see the lines. You still see them?\n> https://github.com/marcsanfacon/pdf2htmlEX/blob/master/CMakeLists.txt\n> \u2026 <#1430b167475cd1ac_>\n> On Thu, Dec 19, 2013 at 8:37 AM, Lu Wang notifications@github.com\n> wrote: In CMakeLists.txt: > @@ -130,6 +130,10 @@ else() >\n> set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES}) > endif() > >\n> +# Add additional dependencies > +if(MINGW) > +set(PDF2HTMLEX_LIBS\n> ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg\n> glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode) By 'like\n> this', I actually meant 'removing all of them', since you mentioned that it\n> didn't link. And adding all of them might not link either if some of\n> disabled by the user. Hoping that we can find a solution. \u2014 Reply to this\n> email directly or view it on GitHub<\n> https://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8468906> .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8469008\n> .\n",
        "created_at": "2013-12-19T13:42:19Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8469052",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8469052"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8469052"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8469618",
        "pull_request_review_id": null,
        "id": 8469618,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0Njk2MTg=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I just did a test and the output from cmake for the librairies (and thus\nfor pkg_config) is the same in Linux and MINGW. Looks like in Linux, g++\nautomatically finds libraries that need to be linked but not MINGW.\n\nI'll do more tests to find out why\n\nOn Thu, Dec 19, 2013 at 8:42 AM, Lu Wang notifications@github.com wrote:\n\n> In CMakeLists.txt:\n> \n> > @@ -130,6 +130,10 @@ else()\n> >      set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n> >  endif()\n> > \n> > +# Add additional dependencies\n> > +if(MINGW)\n> > +set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)\n> \n> No I don't see them.\n> \u2026 <#1430b17f41a57580_>\n> On Thu, Dec 19, 2013 at 9:40 PM, marcsanfacon notifications@github.comwrote:\n> In CMakeLists.txt: > @@ -130,6 +130,10 @@ else() > set(PDF2HTMLEX_LIBS\n> ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES}) > endif() > > +# Add additional\n> dependencies > +if(MINGW) > +set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl\n> iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2\n> tiff gio-2.0.dll ltdl plibc.dll gunicode) I removed the complete lines from\n> the file. I checked in the repo a minute ago and did not see the lines. You\n> still see them?\n> https://github.com/marcsanfacon/pdf2htmlEX/blob/master/CMakeLists.txt \u2026\n> <#1430b167475cd1ac_> On Thu, Dec 19, 2013 at 8:37 AM, Lu Wang <\n> notifications@github.com> wrote: In CMakeLists.txt: > @@ -130,6 +130,10\n> @@ else() > set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES}) >\n> endif() > > +# Add additional dependencies > +if(MINGW) >\n> +set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo\n> gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl\n> plibc.dll gunicode) By 'like this', I actually meant 'removing all of\n> them', since you mentioned that it didn't link. And adding all of them\n> might not link either if some of disabled by the user. Hoping that we can\n> find a solution. \u2014 Reply to this email directly or view it on GitHub<\n> https://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8468906> . \u2014\n> Reply to this email directly or view it on GitHub<\n> https://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8469008> .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8469052\n> .\n",
        "created_at": "2013-12-19T14:07:58Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8469618",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8469618"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8469618"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8668521",
        "pull_request_review_id": null,
        "id": 8668521,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2Njg1MjE=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Haven't been able to find out why, yet.\n\nAny plan on integrating my modifications to the main branch?\n\nOn Thu, Dec 19, 2013 at 9:07 AM, Marc Sanfacon marc.sanfacon@gmail.comwrote:\n\n> I just did a test and the output from cmake for the librairies (and thus\n> for pkg_config) is the same in Linux and MINGW. Looks like in Linux, g++\n> automatically finds libraries that need to be linked but not MINGW.\n> \n> I'll do more tests to find out why\n> \n> On Thu, Dec 19, 2013 at 8:42 AM, Lu Wang notifications@github.com wrote:\n> \n> > In CMakeLists.txt:\n> > \n> > > @@ -130,6 +130,10 @@ else()\n> > >      set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n> > >  endif()\n> > > \n> > > +# Add additional dependencies\n> > > +if(MINGW)\n> > > +set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)\n> > \n> > No I don't see them.\n> > \u2026 <#1430b2f1a416f1e9_1430b17f41a57580_>\n> > On Thu, Dec 19, 2013 at 9:40 PM, marcsanfacon notifications@github.comwrote:\n> > In CMakeLists.txt: > @@ -130,6 +130,10 @@ else() > set(PDF2HTMLEX_LIBS\n> > ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES}) > endif() > > +# Add additional\n> > dependencies > +if(MINGW) > +set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl\n> > iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2\n> > tiff gio-2.0.dll ltdl plibc.dll gunicode) I removed the complete lines from\n> > the file. I checked in the repo a minute ago and did not see the lines. You\n> > still see them?\n> > https://github.com/marcsanfacon/pdf2htmlEX/blob/master/CMakeLists.txt \u2026\n> > <#1430b167475cd1ac_> On Thu, Dec 19, 2013 at 8:37 AM, Lu Wang <\n> > notifications@github.com> wrote: In CMakeLists.txt: > @@ -130,6 +130,10\n> > @@ else() > set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES}) >\n> > endif() > > +# Add additional dependencies > +if(MINGW) >\n> > +set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo\n> > gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl\n> > plibc.dll gunicode) By 'like this', I actually meant 'removing all of\n> > them', since you mentioned that it didn't link. And adding all of them\n> > might not link either if some of disabled by the user. Hoping that we can\n> > find a solution. \u2014 Reply to this email directly or view it on GitHub<\n> > https://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8468906> . \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8469008> .\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8469052\n> > .\n",
        "created_at": "2014-01-06T16:14:29Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8668521",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8668521"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8668521"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8687443",
        "pull_request_review_id": null,
        "id": 8687443,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODc0NDM=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think that it's not good to link with all the libs or none of them,\neither will confuse the users.\nMaybe it's not the right time to support mingw, you may remove the changes\nin cmakelist and I will merge other modifcations.\n\nThanks!\n",
        "created_at": "2014-01-07T07:42:01Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8687443",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8687443"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8687443"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8692830",
        "pull_request_review_id": null,
        "id": 8692830,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2OTI4MzA=",
        "diff_hunk": "@@ -130,6 +130,10 @@ else()\n     set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n endif()\n \n+# Add additional dependencies\n+if(MINGW)\n+set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 24,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5f388ad147ffe75dc089118583e21b7377196d9b",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The changes are removed.\n\nThanks!\n\nOn Tue, Jan 7, 2014 at 2:42 AM, Lu Wang notifications@github.com wrote:\n\n> In CMakeLists.txt:\n> \n> > @@ -130,6 +130,10 @@ else()\n> >      set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} ${PYTHON_LIBRARIES})\n> >  endif()\n> > \n> > +# Add additional dependencies\n> > +if(MINGW)\n> > +set(PDF2HTMLEX_LIBS ${PDF2HTMLEX_LIBS} intl iconv gettextlib gettextpo gutils png jpeg openjpeg glib-2.0.dll z xml2 tiff gio-2.0.dll ltdl plibc.dll gunicode)\n> \n> I think that it's not good to link with all the libs or none of them,\n> either will confuse the users. Maybe it's not the right time to support\n> mingw, you may remove the changes in cmakelist and I will merge other\n> modifcations. Thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/254/files#r8687443\n> .\n",
        "created_at": "2014-01-07T13:33:43Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8692830",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8692830"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8692830"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8754160",
        "pull_request_review_id": null,
        "id": 8754160,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NTQxNjA=",
        "diff_hunk": "@@ -106,21 +112,56 @@ void embed_parser (const char * str)\n     }\n }\n \n+void prepare_directories()\n+{\n+    std::string tmp_dir = param.basetmp_dir + \"/pdf2htmlEX-XXXXXX\";\n+#ifndef _WIN32\n+    errno = 0;\n+\n+    auto_ptr<char> pBuf(new char[tmp_dir.size() + 1]);",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 32,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "652b40971ac18885e4be4d330c595acf04b5f675",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`auto_ptr` has been deprecated (by `unique_ptr`), \nBut I wonder why not just use `std::string`?\n",
        "created_at": "2014-01-09T12:02:19Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8754160",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8754160"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8754160"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8754182",
        "pull_request_review_id": null,
        "id": 8754182,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NTQxODI=",
        "diff_hunk": "@@ -128,6 +169,7 @@ void parse_options (int argc, char **argv)\n         .add(\"embed-image\", &param.embed_image, 1, \"embed image files into output\")\n         .add(\"embed-javascript\", &param.embed_javascript, 1, \"embed JavaScript files into output\")\n         .add(\"embed-outline\", &param.embed_outline, 1, \"embed outlines into output\")\n+        .add(\"tmp-file-size-limit\", &param.max_size, -1, \"Limit the temporary file output size, in KB (-1 for no limit). This is only an estimate, the output may be bigger\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 86,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "652b40971ac18885e4be4d330c595acf04b5f675",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's use unified names for both the parameter name and the variable name, just like others.\n",
        "created_at": "2014-01-09T12:03:53Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8754182",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8754182"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8754182"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8754220",
        "pull_request_review_id": null,
        "id": 8754220,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NTQyMjA=",
        "diff_hunk": "@@ -160,19 +202,20 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n-        \n+\n         // encryption\n         .add(\"owner-password,o\", &param.owner_password, \"\", \"owner password (for encrypted files)\", true)\n         .add(\"user-password,u\", &param.user_password, \"\", \"user password (for encrypted files)\", true)\n         .add(\"no-drm\", &param.no_drm, 0, \"override document DRM settings\")\n-        \n+\n         // misc.\n         .add(\"clean-tmp\", &param.clean_tmp, 1, \"remove temporary files after conversion\")\n-        .add(\"data-dir\", &param.data_dir, PDF2HTMLEX_DATA_PATH, \"specify data directory\")\n+        .add(\"tmp-dir\", &param.basetmp_dir, param.basetmp_dir, \"specify the location of tempory directory.\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 123,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "652b40971ac18885e4be4d330c595acf04b5f675",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Again, let's use unified names, I think it's fine to use `tmp_dir`.\n",
        "created_at": "2014-01-09T12:06:33Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8754220",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8754220"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8754220"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8754261",
        "pull_request_review_id": null,
        "id": 8754261,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NTQyNjE=",
        "diff_hunk": "@@ -106,21 +112,56 @@ void embed_parser (const char * str)\n     }\n }\n \n+void prepare_directories()\n+{\n+    std::string tmp_dir = param.basetmp_dir + \"/pdf2htmlEX-XXXXXX\";\n+#ifndef _WIN32\n+    errno = 0;\n+\n+    auto_ptr<char> pBuf(new char[tmp_dir.size() + 1]);",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 32,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "652b40971ac18885e4be4d330c595acf04b5f675",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh I was wrong about `std::string`. But I think `new` & `delete` might be clearer here.\n",
        "created_at": "2014-01-09T12:09:06Z",
        "updated_at": "2014-01-09T13:14:57Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8754261",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8754261"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8754261"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786445",
        "pull_request_review_id": null,
        "id": 8786445,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODY0NDU=",
        "diff_hunk": "@@ -12,8 +12,10 @@ If you want to use pdf2htmlEX (or your modified version) in your online service,\n through which a user can provide one or more files through a computer network, \n and view any part of the result produced by pdf2htmlEX (or your modified version) on \n the file(s) provided by the user, you should credit pdf2htmlEX with a proper link to \n-https://github.com/coolwanglu/pdf2htmlEX in the page where the result is presented, \n-or the homepage of your service, or a page directly accessible from the homepage of your service.\n+https://github.com/coolwanglu/pdf2htmlEX in ANY of the following places:",
        "path": "LICENSE",
        "position": 6,
        "original_position": 6,
        "commit_id": "0b210f8a2bf0243f7d2725b150a05ea863d95a8d",
        "original_commit_id": "0b210f8a2bf0243f7d2725b150a05ea863d95a8d",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm. maybe 'ANY' is ambiguous here, it could be `any one` or `all`\nHow about `in at least one of the following`?\n",
        "created_at": "2014-01-10T12:07:22Z",
        "updated_at": "2014-01-10T12:07:22Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/283#discussion_r8786445",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/283",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786445"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/283#discussion_r8786445"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/283"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786487",
        "pull_request_review_id": null,
        "id": 8786487,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODY0ODc=",
        "diff_hunk": "@@ -12,8 +12,10 @@ If you want to use pdf2htmlEX (or your modified version) in your online service,\n through which a user can provide one or more files through a computer network, \n and view any part of the result produced by pdf2htmlEX (or your modified version) on \n the file(s) provided by the user, you should credit pdf2htmlEX with a proper link to \n-https://github.com/coolwanglu/pdf2htmlEX in the page where the result is presented, \n-or the homepage of your service, or a page directly accessible from the homepage of your service.\n+https://github.com/coolwanglu/pdf2htmlEX in ANY of the following places:",
        "path": "LICENSE",
        "position": 6,
        "original_position": 6,
        "commit_id": "0b210f8a2bf0243f7d2725b150a05ea863d95a8d",
        "original_commit_id": "0b210f8a2bf0243f7d2725b150a05ea863d95a8d",
        "user": {
            "login": "wanminliu",
            "id": 5844031,
            "node_id": "MDQ6VXNlcjU4NDQwMzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5844031?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanminliu",
            "html_url": "https://github.com/wanminliu",
            "followers_url": "https://api.github.com/users/wanminliu/followers",
            "following_url": "https://api.github.com/users/wanminliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanminliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanminliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanminliu/subscriptions",
            "organizations_url": "https://api.github.com/users/wanminliu/orgs",
            "repos_url": "https://api.github.com/users/wanminliu/repos",
            "events_url": "https://api.github.com/users/wanminliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanminliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"in at least one of the following\" is good.\n\nOn Fri, Jan 10, 2014 at 8:07 PM, Lu Wang notifications@github.com wrote:\n\n> In LICENSE:\n> \n> > @@ -12,8 +12,10 @@ If you want to use pdf2htmlEX (or your modified version) in your online service,\n> >  through which a user can provide one or more files through a computer network,\n> >  and view any part of the result produced by pdf2htmlEX (or your modified version) on\n> >  the file(s) provided by the user, you should credit pdf2htmlEX with a proper link to\n> > -https://github.com/coolwanglu/pdf2htmlEX in the page where the result is presented,\n> > -or the homepage of your service, or a page directly accessible from the homepage of your service.\n> > +https://github.com/coolwanglu/pdf2htmlEX in ANY of the following places:\n> \n> Hmm. maybe 'ANY' is ambiguous here, it could be any one or all\n> How about in at least one of the following?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/283/files#r8786445\n> .\n",
        "created_at": "2014-01-10T12:09:01Z",
        "updated_at": "2014-01-10T12:09:01Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/283#discussion_r8786487",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/283",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786487"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/283#discussion_r8786487"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/283"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786528",
        "pull_request_review_id": null,
        "id": 8786528,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODY1Mjg=",
        "diff_hunk": "@@ -12,8 +12,10 @@ If you want to use pdf2htmlEX (or your modified version) in your online service,\n through which a user can provide one or more files through a computer network, \n and view any part of the result produced by pdf2htmlEX (or your modified version) on \n the file(s) provided by the user, you should credit pdf2htmlEX with a proper link to \n-https://github.com/coolwanglu/pdf2htmlEX in the page where the result is presented, \n-or the homepage of your service, or a page directly accessible from the homepage of your service.\n+https://github.com/coolwanglu/pdf2htmlEX in ANY of the following places:\n+ - the result is presented, ",
        "path": "LICENSE",
        "position": 7,
        "original_position": 7,
        "commit_id": "0b210f8a2bf0243f7d2725b150a05ea863d95a8d",
        "original_commit_id": "0b210f8a2bf0243f7d2725b150a05ea863d95a8d",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Change the items like this:\n- The page where the output of pdf2htmlEX is presented.\n- The homepage of your service.\n- A page that is directly accessible from the homepage of your service.\n\nAlso add yourself in `AUTHORS`, which is alphabetical.\n",
        "created_at": "2014-01-10T12:11:23Z",
        "updated_at": "2014-01-10T12:11:23Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/283#discussion_r8786528",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/283",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786528"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/283#discussion_r8786528"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/283"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786760",
        "pull_request_review_id": null,
        "id": 8786760,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODY3NjA=",
        "diff_hunk": "@@ -12,8 +12,10 @@ If you want to use pdf2htmlEX (or your modified version) in your online service,\n through which a user can provide one or more files through a computer network, \n and view any part of the result produced by pdf2htmlEX (or your modified version) on \n the file(s) provided by the user, you should credit pdf2htmlEX with a proper link to \n-https://github.com/coolwanglu/pdf2htmlEX in the page where the result is presented, \n-or the homepage of your service, or a page directly accessible from the homepage of your service.\n+https://github.com/coolwanglu/pdf2htmlEX in ANY of the following places:\n+ - the result is presented, ",
        "path": "LICENSE",
        "position": 7,
        "original_position": 7,
        "commit_id": "0b210f8a2bf0243f7d2725b150a05ea863d95a8d",
        "original_commit_id": "0b210f8a2bf0243f7d2725b150a05ea863d95a8d",
        "user": {
            "login": "wanminliu",
            "id": 5844031,
            "node_id": "MDQ6VXNlcjU4NDQwMzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5844031?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanminliu",
            "html_url": "https://github.com/wanminliu",
            "followers_url": "https://api.github.com/users/wanminliu/followers",
            "following_url": "https://api.github.com/users/wanminliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanminliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanminliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanminliu/subscriptions",
            "organizations_url": "https://api.github.com/users/wanminliu/orgs",
            "repos_url": "https://api.github.com/users/wanminliu/repos",
            "events_url": "https://api.github.com/users/wanminliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanminliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The following is NOT  alphabetical.\nChris Cinelli chris@allestelle.com\nDaniel Bonniot de Ruisselet dbonniot@chemaxon.com\nDeepak iapain@gmail.com\nDenis Sablic denis.sablic@gmail.com\nfilodej philode@gmail.com\nhasufell julian.ospald@googlemail.com\nHerbert Jones herbert@mediafire.com\nHongliang Tian tatetian@gmail.com\nJohn Hewson john@jahewson.com\nMichele Redolfi michele@tecnicaict.com\nMick Giles mick@mickgiles.com\nRyan Morlok ryan.morlok@morlok.com\n\nOn Fri, Jan 10, 2014 at 8:11 PM, Lu Wang notifications@github.com wrote:\n\n> In LICENSE:\n> \n> > @@ -12,8 +12,10 @@ If you want to use pdf2htmlEX (or your modified version) in your online service,\n> >  through which a user can provide one or more files through a computer network,\n> >  and view any part of the result produced by pdf2htmlEX (or your modified version) on\n> >  the file(s) provided by the user, you should credit pdf2htmlEX with a proper link to\n> > -https://github.com/coolwanglu/pdf2htmlEX in the page where the result is presented,\n> > -or the homepage of your service, or a page directly accessible from the homepage of your service.\n> > +https://github.com/coolwanglu/pdf2htmlEX\n> >  in ANY of the following places:\n> > - \\- the result is presented,\n> \n> Change the items like this:\n> - The page where the output of pdf2htmlEX is presented.\n> - The homepage of your service.\n> - A page that is directly accessible from the homepage of your service.\n> \n> Also add yourself in AUTHORS, which is alphabetical.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/283/files#r8786528\n> .\n",
        "created_at": "2014-01-10T12:25:27Z",
        "updated_at": "2014-01-10T12:25:27Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/283#discussion_r8786760",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/283",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786760"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/283#discussion_r8786760"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/283"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786768",
        "pull_request_review_id": null,
        "id": 8786768,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODY3Njg=",
        "diff_hunk": "@@ -12,8 +12,10 @@ If you want to use pdf2htmlEX (or your modified version) in your online service,\n through which a user can provide one or more files through a computer network, \n and view any part of the result produced by pdf2htmlEX (or your modified version) on \n the file(s) provided by the user, you should credit pdf2htmlEX with a proper link to \n-https://github.com/coolwanglu/pdf2htmlEX in the page where the result is presented, \n-or the homepage of your service, or a page directly accessible from the homepage of your service.\n+https://github.com/coolwanglu/pdf2htmlEX in ANY of the following places:\n+ - the result is presented, ",
        "path": "LICENSE",
        "position": 7,
        "original_position": 7,
        "commit_id": "0b210f8a2bf0243f7d2725b150a05ea863d95a8d",
        "original_commit_id": "0b210f8a2bf0243f7d2725b150a05ea863d95a8d",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why not\n",
        "created_at": "2014-01-10T12:25:56Z",
        "updated_at": "2014-01-10T12:25:56Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/283#discussion_r8786768",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/283",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786768"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/283#discussion_r8786768"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/283"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786217",
        "pull_request_review_id": null,
        "id": 8786217,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODYyMTc=",
        "diff_hunk": "@@ -12,8 +12,10 @@ If you want to use pdf2htmlEX (or your modified version) in your online service,\n through which a user can provide one or more files through a computer network, \n and view any part of the result produced by pdf2htmlEX (or your modified version) on \n the file(s) provided by the user, you should credit pdf2htmlEX with a proper link to \n-https://github.com/coolwanglu/pdf2htmlEX in the page where the result is presented, \n-or the homepage of your service, or a page directly accessible from the homepage of your service.\n+https://github.com/coolwanglu/pdf2htmlEX ",
        "path": "LICENSE",
        "position": null,
        "original_position": 6,
        "commit_id": "55059e0e7ac4850b860830f7ef5b1f8809dfe42f",
        "original_commit_id": "b032d2ed2d418f1bd962a6d3f626fd843f26e50f",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should be `with a proper link to xxxx in any of the following places:`\n",
        "created_at": "2014-01-10T11:54:40Z",
        "updated_at": "2014-01-10T12:54:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/282#discussion_r8786217",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/282",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786217"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/282#discussion_r8786217"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/282"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786222",
        "pull_request_review_id": null,
        "id": 8786222,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODYyMjI=",
        "diff_hunk": "@@ -12,8 +12,10 @@ If you want to use pdf2htmlEX (or your modified version) in your online service,\n through which a user can provide one or more files through a computer network, \n and view any part of the result produced by pdf2htmlEX (or your modified version) on \n the file(s) provided by the user, you should credit pdf2htmlEX with a proper link to \n-https://github.com/coolwanglu/pdf2htmlEX in the page where the result is presented, \n-or the homepage of your service, or a page directly accessible from the homepage of your service.\n+https://github.com/coolwanglu/pdf2htmlEX \n+ - in the page where the result is presented, \n+ - or the homepage of your service, ",
        "path": "LICENSE",
        "position": null,
        "original_position": 8,
        "commit_id": "55059e0e7ac4850b860830f7ef5b1f8809dfe42f",
        "original_commit_id": "b032d2ed2d418f1bd962a6d3f626fd843f26e50f",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Then remove all the `or`'s\n",
        "created_at": "2014-01-10T11:54:55Z",
        "updated_at": "2014-01-10T12:54:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/282#discussion_r8786222",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/282",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8786222"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/282#discussion_r8786222"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/282"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8809409",
        "pull_request_review_id": null,
        "id": 8809409,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MDk0MDk=",
        "diff_hunk": "@@ -107,15 +107,20 @@ void HTMLRenderer::process(PDFDoc *doc)\n     }\n \n     int page_count = (param.last_page - param.first_page + 1);\n-    for(int i = param.first_page; i <= param.last_page ; ++i) \n+    for(int i = param.first_page; i <= param.last_page ; ++i)\n     {\n+        if (param.tmp_file_size_limit != -1 && tmp_files.get_total_size() > param.tmp_file_size_limit * 1024) {",
        "path": "src/HTMLRenderer/general.cc",
        "position": 34,
        "original_position": 34,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I removed `*1024` as there's not description about the unit.\n",
        "created_at": "2014-01-11T08:14:00Z",
        "updated_at": "2014-01-11T08:14:00Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8809409",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8809409"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8809409"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8809415",
        "pull_request_review_id": null,
        "id": 8809415,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MDk0MTU=",
        "diff_hunk": "@@ -106,21 +112,56 @@ void embed_parser (const char * str)\n     }\n }\n \n+void prepare_directories()\n+{\n+    std::string tmp_dir = param.tmp_dir + \"/pdf2htmlEX-XXXXXX\";\n+#ifndef _WIN32\n+    errno = 0;\n+\n+    unique_ptr<char> pBuf(new char[tmp_dir.size() + 1]);\n+    strcpy(pBuf.get(), tmp_dir.c_str());\n+    auto p = mkdtemp(pBuf.get());\n+    if(p == nullptr)\n+    {\n+        const char * errmsg = strerror(errno);\n+        if(!errmsg)\n+        {\n+            errmsg = \"unknown error\";\n+        }\n+        cerr << \"Cannot create temp directory: \" << errmsg << endl;\n+        exit(EXIT_FAILURE);\n+    }\n+    param.tmp_dir = pBuf.get();\n+#else\n+    srand((unsigned)time(0));\n+    int rand_value = (int)((rand() / ((double)RAND_MAX+1.0)) * 1e6);\n+    stringstream ss;\n+    ss << setw(6) << rand_value;\n+\n+    tmp_dir.erase(tmp_dir.size() - 6);\n+    param.tmp_dir = tmp_dir + ss.str();\n+    if (mkdir(param.tmp_dir.c_str())) {",
        "path": "src/pdf2htmlEX.cc",
        "position": 54,
        "original_position": 54,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I wonder if you tested this, since you mentioned that `mkdir` does not work in win32. \nPlease file a new PR if necessary.\n",
        "created_at": "2014-01-11T08:16:30Z",
        "updated_at": "2014-01-11T08:16:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8809415",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8809415"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8809415"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8809420",
        "pull_request_review_id": null,
        "id": 8809420,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MDk0MjA=",
        "diff_hunk": "@@ -107,15 +107,20 @@ void HTMLRenderer::process(PDFDoc *doc)\n     }\n \n     int page_count = (param.last_page - param.first_page + 1);\n-    for(int i = param.first_page; i <= param.last_page ; ++i) \n+    for(int i = param.first_page; i <= param.last_page ; ++i)\n     {\n+        if (param.tmp_file_size_limit != -1 && tmp_files.get_total_size() > param.tmp_file_size_limit * 1024) {",
        "path": "src/HTMLRenderer/general.cc",
        "position": 34,
        "original_position": 34,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, you added in the short description. I'll fix it.\n",
        "created_at": "2014-01-11T08:17:14Z",
        "updated_at": "2014-01-11T08:17:14Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8809420",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8809420"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8809420"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8809452",
        "pull_request_review_id": null,
        "id": 8809452,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MDk0NTI=",
        "diff_hunk": "@@ -42,6 +42,12 @@\n Param param;\n ArgParser argparser;\n \n+#ifdef _WIN32\n+#   include <iomanip>\n+#   include <libgen.h>\n+#   include <direct.h>",
        "path": "src/pdf2htmlEX.cc",
        "position": 7,
        "original_position": 7,
        "commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "original_commit_id": "5fab160e05cdf5fd8acfc20388687449f4b8c78f",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`rmdir` is usually defined in `unistd.h`, I wonder if it is so for mingw. \nI hope that there are as few `_WIN32` as possible.\n",
        "created_at": "2014-01-11T08:31:21Z",
        "updated_at": "2014-01-11T08:31:21Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8809452",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8809452"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/254#discussion_r8809452"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/254"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8850787",
        "pull_request_review_id": null,
        "id": 8850787,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NTA3ODc=",
        "diff_hunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Win32 specific functions\n+ *\n+ * by MarcSanfacon\n+ * 2014.01.13\n+ */\n+\n+#ifndef WIN32_H__\n+#define WIN32_H__\n+\n+#ifdef _WIN32\n+\n+#include <io.h>\n+#include <libgen.h>\n+#include <sstream>\n+\n+char *mkdtemp(char *temp);\n+\n+#define mkdir(A, B) _mkdir(A)",
        "path": "src/util/win32.h",
        "position": null,
        "original_position": 19,
        "commit_id": "f0c260d6a0d62755b5daab3aaf7b54e2fddb0b68",
        "original_commit_id": "5aebf2c73896798cd701d006a978a6d471a49f68",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I just downloaded and tried mingw, mkdir and stat are provided\n\n``` C\n#include <iostream>\n#include <unistd.h>\n#include <sys/stat.h>\n\nusing namespace std;\n\nint main() \n{\n  struct stat st;\n  cout << &mkdir << endl;\n  return 0;\n}\n```\n",
        "created_at": "2014-01-14T05:06:26Z",
        "updated_at": "2014-01-15T13:32:25Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8850787",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8850787"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8850787"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8859334",
        "pull_request_review_id": null,
        "id": 8859334,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NTkzMzQ=",
        "diff_hunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Win32 specific functions\n+ *\n+ * by MarcSanfacon\n+ * 2014.01.13\n+ */\n+\n+#ifndef WIN32_H__\n+#define WIN32_H__\n+\n+#ifdef _WIN32\n+\n+#include <io.h>\n+#include <libgen.h>\n+#include <sstream>\n+\n+char *mkdtemp(char *temp);\n+\n+#define mkdir(A, B) _mkdir(A)",
        "path": "src/util/win32.h",
        "position": null,
        "original_position": 19,
        "commit_id": "f0c260d6a0d62755b5daab3aaf7b54e2fddb0b68",
        "original_commit_id": "5aebf2c73896798cd701d006a978a6d471a49f68",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hi Lu, mkdir is provided, but takes only 1 parameter - at least on the\nlatest version of MingW, the one I use.\n\n```\nsrc/util/path.cc:30:40: error: too many arguments to function 'int\n```\n\nmkdir(const char_)'\n         int r = mkdir(path.c_str(), S_IRWXU);\n                                        ^\n    In file included from src/util/win32.h:13:0,\n                     from src/util/path.cc:14:\n    d:\\apps\\mingw\\include\\io.h:311:37: note: declared here\n     _CRTIMP int __cdecl __MINGW_NOTHROW mkdir (const char_);\n\nThat is why I use a define. Defining to _mkdir or mkdir works either way.\n\nFor \"struct stat\", it seems it is not defined when compiling PDF2HTML,\nprobably due to:\n\n```\nsys/stat..h\n#ifndef __STRICT_ANSI__\nstruct stat {\n...\n```\n\nBefore committing the code, I tried compiling it without changes and also\nsearched for the functions in the MingW headers but couldn't find them,\nthus the defines.\n\nOn Tue, Jan 14, 2014 at 12:06 AM, Lu Wang notifications@github.com wrote:\n\n> In src/util/win32.h:\n> \n> > - \\* by MarcSanfacon\n> > - \\* 2014.01.13\n> > - */\n> >   +\n> >   +#ifndef WIN32_H__\n> >   +#define WIN32_H__\n> >   +\n> >   +#ifdef _WIN32\n> >   +\n> >   +#include <io.h>\n> >   +#include <libgen.h>\n> >   +#include <sstream>\n> >   +\n> >   +char *mkdtemp(char *temp);\n> >   +\n> >   +#define mkdir(A, B) _mkdir(A)\n> \n> I just downloaded and tried mingw, mkdir and stat are provided\n> \n> #include <iostream>#include <unistd.h>#include <sys/stat.h>\n> using namespace std;\n> int main() {\n>   struct stat st;\n>   cout << &mkdir << endl;\n>   return 0;}\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/285/files#r8850787\n> .\n",
        "created_at": "2014-01-14T13:33:24Z",
        "updated_at": "2014-01-15T13:32:25Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8859334",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8859334"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8859334"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8859391",
        "pull_request_review_id": null,
        "id": 8859391,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NTkzOTE=",
        "diff_hunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Win32 specific functions\n+ *\n+ * by MarcSanfacon\n+ * 2014.01.13\n+ */\n+\n+#ifndef WIN32_H__\n+#define WIN32_H__\n+\n+#ifdef _WIN32\n+\n+#include <io.h>\n+#include <libgen.h>\n+#include <sstream>\n+\n+char *mkdtemp(char *temp);\n+\n+#define mkdir(A, B) _mkdir(A)",
        "path": "src/util/win32.h",
        "position": null,
        "original_position": 19,
        "commit_id": "f0c260d6a0d62755b5daab3aaf7b54e2fddb0b68",
        "original_commit_id": "5aebf2c73896798cd701d006a978a6d471a49f68",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, thanks for the info, let me do some more experiments.\n",
        "created_at": "2014-01-14T13:36:43Z",
        "updated_at": "2014-01-15T13:32:25Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8859391",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8859391"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8859391"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8887782",
        "pull_request_review_id": null,
        "id": 8887782,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4ODc3ODI=",
        "diff_hunk": "@@ -206,6 +206,8 @@ set(PDF2HTMLEX_SRC ${PDF2HTMLEX_SRC}\n     src/util/path.cc\n     src/util/unicode.h\n     src/util/unicode.cc\n+    src/util/win32.h",
        "path": "CMakeLists.txt",
        "position": null,
        "original_position": 4,
        "commit_id": "f0c260d6a0d62755b5daab3aaf7b54e2fddb0b68",
        "original_commit_id": "94ddd697a689704b3e3d7488fc360682082f1228",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's call the new files `mingw.*`\n",
        "created_at": "2014-01-15T06:45:33Z",
        "updated_at": "2014-01-15T13:32:25Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8887782",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8887782"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8887782"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8887791",
        "pull_request_review_id": null,
        "id": 8887791,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4ODc3OTE=",
        "diff_hunk": "@@ -14,6 +14,7 @@\n \n #include \"TmpFiles.h\"\n #include \"Param.h\"\n+#include \"util/win32.h\"",
        "path": "src/TmpFiles.cc",
        "position": null,
        "original_position": 4,
        "commit_id": "f0c260d6a0d62755b5daab3aaf7b54e2fddb0b68",
        "original_commit_id": "94ddd697a689704b3e3d7488fc360682082f1228",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please add a macro test around the include, it will make the code more readable although there is already a macro guard inside the file, or maybe you can remove that guard.\n",
        "created_at": "2014-01-15T06:46:19Z",
        "updated_at": "2014-01-15T13:32:25Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8887791",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8887791"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8887791"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8887806",
        "pull_request_review_id": null,
        "id": 8887806,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4ODc4MDY=",
        "diff_hunk": "@@ -342,8 +343,13 @@ void check_param()\n int main(int argc, char **argv)\n {\n     // We need to adjust these directories before parsing the options.\n+#ifndef __MINGW32__",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 12,
        "commit_id": "f0c260d6a0d62755b5daab3aaf7b54e2fddb0b68",
        "original_commit_id": "94ddd697a689704b3e3d7488fc360682082f1228",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see you always use `ifndef`, which might not be a good idea if there are potentially other platforms. E.g.\n\n```\n#if WIN32\n#elif UNIX\n#endif\n```\n",
        "created_at": "2014-01-15T06:47:39Z",
        "updated_at": "2014-01-15T13:32:25Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8887806",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8887806"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8887806"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8887833",
        "pull_request_review_id": null,
        "id": 8887833,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4ODc4MzM=",
        "diff_hunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Win32 specific functions\n+ *\n+ * by MarcSanfacon\n+ * 2014.01.13\n+ */\n+\n+#ifdef __MINGW32__\n+\n+#include <string>\n+#include <iostream>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <limits.h>\n+#include <libgen.h>\n+\n+#include \"win32.h\"\n+\n+using namespace std;\n+\n+char* mkdtemp(char* temp)\n+{\n+    char *filename = nullptr;\n+    if (temp != nullptr) {\n+        filename = mktemp(temp);\n+        if (filename != nullptr) {\n+            if (_mkdir(temp) != 0) {\n+                filename = nullptr;\n+            }\n+        }\n+    }\n+\n+    return filename;\n+}\n+\n+namespace pdf2htmlEX {\n+string get_exec_dir(char *dir)\n+{\n+    // Under Windows, the default data_dir is under /data in the pdf2htmlEX directory\n+    string s = dirname(dir);\n+    if (s == \".\") {\n+        char* wd(getcwd(nullptr, PATH_MAX));\n+        s = wd;\n+        free(wd);\n+    }\n+    s += \"/data\";\n+    return s;\n+}\n+\n+string get_tmp_dir()\n+{\n+    // Under Windows, the temp path is not under /tmp, find it.\n+    char *tmp = getenv(\"TMP\");\n+    if (tmp == nullptr) {\n+        tmp = getenv(\"TEMP\");\n+    }\n+\n+    if (tmp == nullptr) {\n+        cerr << \"Error: Cannot find temporary directory. Export TMP/TEMP variable.\";",
        "path": "src/util/win32.cc",
        "position": null,
        "original_position": 59,
        "commit_id": "f0c260d6a0d62755b5daab3aaf7b54e2fddb0b68",
        "original_commit_id": "94ddd697a689704b3e3d7488fc360682082f1228",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This function is only used to locate the default location, and a user may specify their own locations.\nSo I think it does not make sense to show the error here.\n",
        "created_at": "2014-01-15T06:49:09Z",
        "updated_at": "2014-01-15T13:32:25Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8887833",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8887833"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8887833"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8895375",
        "pull_request_review_id": null,
        "id": 8895375,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4OTUzNzU=",
        "diff_hunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Win32 specific functions\n+ *\n+ * by MarcSanfacon\n+ * 2014.01.13\n+ */\n+\n+#ifdef __MINGW32__\n+\n+#include <string>\n+#include <iostream>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <limits.h>\n+#include <libgen.h>\n+\n+#include \"win32.h\"\n+\n+using namespace std;\n+\n+char* mkdtemp(char* temp)\n+{\n+    char *filename = nullptr;\n+    if (temp != nullptr) {\n+        filename = mktemp(temp);\n+        if (filename != nullptr) {\n+            if (_mkdir(temp) != 0) {\n+                filename = nullptr;\n+            }\n+        }\n+    }\n+\n+    return filename;\n+}\n+\n+namespace pdf2htmlEX {\n+string get_exec_dir(char *dir)\n+{\n+    // Under Windows, the default data_dir is under /data in the pdf2htmlEX directory\n+    string s = dirname(dir);\n+    if (s == \".\") {\n+        char* wd(getcwd(nullptr, PATH_MAX));\n+        s = wd;\n+        free(wd);\n+    }\n+    s += \"/data\";\n+    return s;\n+}\n+\n+string get_tmp_dir()\n+{\n+    // Under Windows, the temp path is not under /tmp, find it.\n+    char *tmp = getenv(\"TMP\");\n+    if (tmp == nullptr) {\n+        tmp = getenv(\"TEMP\");\n+    }\n+\n+    if (tmp == nullptr) {\n+        cerr << \"Error: Cannot find temporary directory. Export TMP/TEMP variable.\";",
        "path": "src/util/win32.cc",
        "position": null,
        "original_position": 59,
        "commit_id": "f0c260d6a0d62755b5daab3aaf7b54e2fddb0b68",
        "original_commit_id": "94ddd697a689704b3e3d7488fc360682082f1228",
        "user": {
            "login": "marcsanfacon",
            "id": 1036812,
            "node_id": "MDQ6VXNlcjEwMzY4MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1036812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcsanfacon",
            "html_url": "https://github.com/marcsanfacon",
            "followers_url": "https://api.github.com/users/marcsanfacon/followers",
            "following_url": "https://api.github.com/users/marcsanfacon/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcsanfacon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcsanfacon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcsanfacon/subscriptions",
            "organizations_url": "https://api.github.com/users/marcsanfacon/orgs",
            "repos_url": "https://api.github.com/users/marcsanfacon/repos",
            "events_url": "https://api.github.com/users/marcsanfacon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcsanfacon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I applied the modifications.\n\nTnx\n\nOn Wed, Jan 15, 2014 at 1:49 AM, Lu Wang notifications@github.com wrote:\n\n> In src/util/win32.cc:\n> \n> > -        free(wd);\n> > -    }\n> > -    s += \"/data\";\n> > -    return s;\n> >   +}\n> >   +\n> >   +string get_tmp_dir()\n> >   +{\n> > -    // Under Windows, the temp path is not under /tmp, find it.\n> > -    char *tmp = getenv(\"TMP\");\n> > -    if (tmp == nullptr) {\n> > -        tmp = getenv(\"TEMP\");\n> > -    }\n> >   +\n> > -    if (tmp == nullptr) {\n> > -        cerr << \"Error: Cannot find temporary directory. Export TMP/TEMP variable.\";\n> \n> This function is only used to locate the default location, and a user may\n> specify its own.\n> So I think it does not make sense to show the error here.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/coolwanglu/pdf2htmlEX/pull/285/files#r8887833\n> .\n",
        "created_at": "2014-01-15T13:32:38Z",
        "updated_at": "2014-01-15T13:32:38Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8895375",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/8895375"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/285#discussion_r8895375"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/285"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13517809",
        "pull_request_review_id": null,
        "id": 13517809,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTE3ODA5",
        "diff_hunk": "@@ -16,6 +16,7 @@ Michele Redolfi <michele@tecnicaict.com>\n Mick Giles <mick@mickgiles.com>\n Ryan Morlok <ryan.morlok@morlok.com>\n Wanmin Liu <wanminliu@gmail.com>\n+Duan Yao <duanyao@ustc.edu>",
        "path": "AUTHORS",
        "position": null,
        "original_position": 4,
        "commit_id": "8fb16631a5efdc4b923788c7d14c884d7f4dc7d0",
        "original_commit_id": "1e4847ca71400b8fff823b8c05581f357f37dcc4",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's actually sorted by first names.\n",
        "created_at": "2014-06-07T04:15:25Z",
        "updated_at": "2014-06-07T08:21:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/357#discussion_r13517809",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/357",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13517809"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/357#discussion_r13517809"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/357"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13518430",
        "pull_request_review_id": null,
        "id": 13518430,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTE4NDMw",
        "diff_hunk": "@@ -16,6 +16,7 @@ Michele Redolfi <michele@tecnicaict.com>\n Mick Giles <mick@mickgiles.com>\n Ryan Morlok <ryan.morlok@morlok.com>\n Wanmin Liu <wanminliu@gmail.com>\n+Duan Yao <duanyao@ustc.edu>",
        "path": "AUTHORS",
        "position": null,
        "original_position": 4,
        "commit_id": "8fb16631a5efdc4b923788c7d14c884d7f4dc7d0",
        "original_commit_id": "1e4847ca71400b8fff823b8c05581f357f37dcc4",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Well, actually my first name is Yao (it happen to be the last in the list), and family name is Duan, and I place the family name first because I'm Chinese.\n",
        "created_at": "2014-06-07T07:11:57Z",
        "updated_at": "2014-06-07T08:21:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/357#discussion_r13518430",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/357",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13518430"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/357#discussion_r13518430"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/357"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13518441",
        "pull_request_review_id": null,
        "id": 13518441,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTE4NDQx",
        "diff_hunk": "@@ -16,6 +16,7 @@ Michele Redolfi <michele@tecnicaict.com>\n Mick Giles <mick@mickgiles.com>\n Ryan Morlok <ryan.morlok@morlok.com>\n Wanmin Liu <wanminliu@gmail.com>\n+Duan Yao <duanyao@ustc.edu>",
        "path": "AUTHORS",
        "position": null,
        "original_position": 4,
        "commit_id": "8fb16631a5efdc4b923788c7d14c884d7f4dc7d0",
        "original_commit_id": "1e4847ca71400b8fff823b8c05581f357f37dcc4",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OK\uff0cBut they are still in the alphabetical order, because\n- easier to find some one\n- some prefer to use handles, which contains only one word\n\nI'll add a comment there\n",
        "created_at": "2014-06-07T07:14:26Z",
        "updated_at": "2014-06-07T08:21:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/357#discussion_r13518441",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/357",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13518441"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/357#discussion_r13518441"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/357"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522354",
        "pull_request_review_id": null,
        "id": 13522354,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTIyMzU0",
        "diff_hunk": "@@ -67,13 +75,11 @@ void CairoBackgroundRenderer::render_page(PDFDoc * doc, int pageno)\n         page_height = doc->getPageMediaHeight(pageno);\n     }\n \n-    {\n-        auto fn = html_renderer->str_fmt(\"%s/bg%x.svg\", (param.embed_image ? param.tmp_dir : param.dest_dir).c_str(), pageno);\n-        if(param.embed_image)\n-            html_renderer->tmp_files.add((char*)fn);\n+    auto fn = html_renderer->str_fmt(\"%s/bg%x.svg\", (param.embed_image ? param.tmp_dir : param.dest_dir).c_str(), pageno);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 38,
        "commit_id": "4add9da6e4f06c793c4177b2f8a48bd28b53e1ec",
        "original_commit_id": "8be6bed17ae52b0ae07d17f60229b33bb0381185",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The object returned by `str_fmt` is also pointing to the (shared) buffer. That's why temporary variables like `fn` here are always enclosed by a local scope.\nI recommend that you copy the file name out, possibly using a `std::string`, otherwise you cannot call `str_fmt` again in this function.\n",
        "created_at": "2014-06-08T02:31:02Z",
        "updated_at": "2014-06-14T04:49:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522354",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522354"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522354"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522356",
        "pull_request_review_id": null,
        "id": 13522356,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTIyMzU2",
        "diff_hunk": "@@ -15,12 +15,20 @@\n #if ENABLE_SVG\n \n #include \"CairoBackgroundRenderer.h\"\n+#include \"SplashBackgroundRenderer.h\"\n \n namespace pdf2htmlEX {\n \n using std::string;\n using std::ifstream;\n \n+CairoBackgroundRenderer::CairoBackgroundRenderer(HTMLRenderer * html_renderer, const Param & param)",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 11,
        "original_position": 11,
        "commit_id": "4add9da6e4f06c793c4177b2f8a48bd28b53e1ec",
        "original_commit_id": "8be6bed17ae52b0ae07d17f60229b33bb0381185",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why moved this outside? which is fine btw.\nAnd please use 4 spaces for a tab.\n",
        "created_at": "2014-06-08T02:33:00Z",
        "updated_at": "2014-06-14T04:49:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522356",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522356"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522356"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522357",
        "pull_request_review_id": null,
        "id": 13522357,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTIyMzU3",
        "diff_hunk": "@@ -20,21 +20,18 @@\n \n namespace pdf2htmlEX {\n \n+class SplashBackgroundRenderer;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.h",
        "position": null,
        "original_position": 4,
        "commit_id": "4add9da6e4f06c793c4177b2f8a48bd28b53e1ec",
        "original_commit_id": "8be6bed17ae52b0ae07d17f60229b33bb0381185",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Still useful?\n",
        "created_at": "2014-06-08T02:33:18Z",
        "updated_at": "2014-06-14T04:49:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522357",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522357"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522357"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522367",
        "pull_request_review_id": null,
        "id": 13522367,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTIyMzY3",
        "diff_hunk": "@@ -98,12 +99,19 @@ void HTMLRenderer::process(PDFDoc *doc)\n     // Process pages\n \n     bg_renderer = nullptr;\n+    fallback_bg_renderer = nullptr;\n     if(param.process_nontext)\n     {\n         bg_renderer = BackgroundRenderer::getBackgroundRenderer(param.bg_format, this, param);\n         if(!bg_renderer)\n             throw \"Cannot initialize background renderer, unsupported format\";\n         bg_renderer->init(doc);\n+\n+        if (param.bg_format == \"svg\" && param.svg_nodes_limit > 0)",
        "path": "src/HTMLRenderer/general.cc",
        "position": null,
        "original_position": 20,
        "commit_id": "4add9da6e4f06c793c4177b2f8a48bd28b53e1ec",
        "original_commit_id": "8be6bed17ae52b0ae07d17f60229b33bb0381185",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about handling `fallback_bg_renderer` in `BackgroundRenderer::getBackgroundRenderer`?\n",
        "created_at": "2014-06-08T02:38:41Z",
        "updated_at": "2014-06-14T04:49:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522367",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522367"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522367"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522372",
        "pull_request_review_id": null,
        "id": 13522372,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTIyMzcy",
        "diff_hunk": "@@ -327,7 +327,8 @@ class HTMLRenderer : public OutputDev\n     friend class CairoBackgroundRenderer; // ugly!\n #endif\n     BackgroundRenderer * bg_renderer;\n-\n+    BackgroundRenderer * fallback_bg_renderer;\n+    bool bg_ok;",
        "path": "src/HTMLRenderer/HTMLRenderer.h",
        "position": null,
        "original_position": 6,
        "commit_id": "4add9da6e4f06c793c4177b2f8a48bd28b53e1ec",
        "original_commit_id": "8be6bed17ae52b0ae07d17f60229b33bb0381185",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I believe this name can be improved. Cannot tell much things from it.\n",
        "created_at": "2014-06-08T02:40:54Z",
        "updated_at": "2014-06-14T04:49:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522372",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522372"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522372"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522383",
        "pull_request_review_id": null,
        "id": 13522383,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTIyMzgz",
        "diff_hunk": "@@ -327,7 +327,8 @@ class HTMLRenderer : public OutputDev\n     friend class CairoBackgroundRenderer; // ugly!\n #endif\n     BackgroundRenderer * bg_renderer;\n-\n+    BackgroundRenderer * fallback_bg_renderer;\n+    bool bg_ok;",
        "path": "src/HTMLRenderer/HTMLRenderer.h",
        "position": null,
        "original_position": 6,
        "commit_id": "4add9da6e4f06c793c4177b2f8a48bd28b53e1ec",
        "original_commit_id": "8be6bed17ae52b0ae07d17f60229b33bb0381185",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "bg_ok -> need_fallback_bg_renderer ?\n",
        "created_at": "2014-06-08T02:45:28Z",
        "updated_at": "2014-06-14T04:49:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522383",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522383"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522383"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522384",
        "pull_request_review_id": null,
        "id": 13522384,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTIyMzg0",
        "diff_hunk": "@@ -327,7 +327,8 @@ class HTMLRenderer : public OutputDev\n     friend class CairoBackgroundRenderer; // ugly!\n #endif\n     BackgroundRenderer * bg_renderer;\n-\n+    BackgroundRenderer * fallback_bg_renderer;\n+    bool bg_ok;",
        "path": "src/HTMLRenderer/HTMLRenderer.h",
        "position": null,
        "original_position": 6,
        "commit_id": "4add9da6e4f06c793c4177b2f8a48bd28b53e1ec",
        "original_commit_id": "8be6bed17ae52b0ae07d17f60229b33bb0381185",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sounds good.\n",
        "created_at": "2014-06-08T02:46:03Z",
        "updated_at": "2014-06-14T04:49:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522384",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522384"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522384"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522390",
        "pull_request_review_id": null,
        "id": 13522390,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTIyMzkw",
        "diff_hunk": "@@ -98,12 +99,19 @@ void HTMLRenderer::process(PDFDoc *doc)\n     // Process pages\n \n     bg_renderer = nullptr;\n+    fallback_bg_renderer = nullptr;\n     if(param.process_nontext)\n     {\n         bg_renderer = BackgroundRenderer::getBackgroundRenderer(param.bg_format, this, param);\n         if(!bg_renderer)\n             throw \"Cannot initialize background renderer, unsupported format\";\n         bg_renderer->init(doc);\n+\n+        if (param.bg_format == \"svg\" && param.svg_nodes_limit > 0)",
        "path": "src/HTMLRenderer/general.cc",
        "position": null,
        "original_position": 20,
        "commit_id": "4add9da6e4f06c793c4177b2f8a48bd28b53e1ec",
        "original_commit_id": "8be6bed17ae52b0ae07d17f60229b33bb0381185",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This may require `#ifdef`'s or we can't be sure the format passed to getBackgroundRenderer is supported. Is this ok?\n",
        "created_at": "2014-06-08T02:52:38Z",
        "updated_at": "2014-06-14T04:49:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522390",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522390"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522390"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522405",
        "pull_request_review_id": null,
        "id": 13522405,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTIyNDA1",
        "diff_hunk": "@@ -98,12 +99,19 @@ void HTMLRenderer::process(PDFDoc *doc)\n     // Process pages\n \n     bg_renderer = nullptr;\n+    fallback_bg_renderer = nullptr;\n     if(param.process_nontext)\n     {\n         bg_renderer = BackgroundRenderer::getBackgroundRenderer(param.bg_format, this, param);\n         if(!bg_renderer)\n             throw \"Cannot initialize background renderer, unsupported format\";\n         bg_renderer->init(doc);\n+\n+        if (param.bg_format == \"svg\" && param.svg_nodes_limit > 0)",
        "path": "src/HTMLRenderer/general.cc",
        "position": null,
        "original_position": 20,
        "commit_id": "4add9da6e4f06c793c4177b2f8a48bd28b53e1ec",
        "original_commit_id": "8be6bed17ae52b0ae07d17f60229b33bb0381185",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There are already `#ifdef`'s there, what's wrong?\n",
        "created_at": "2014-06-08T03:02:11Z",
        "updated_at": "2014-06-14T04:49:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522405",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522405"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522405"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522561",
        "pull_request_review_id": null,
        "id": 13522561,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTIyNTYx",
        "diff_hunk": "@@ -15,12 +15,20 @@\n #if ENABLE_SVG\n \n #include \"CairoBackgroundRenderer.h\"\n+#include \"SplashBackgroundRenderer.h\"\n \n namespace pdf2htmlEX {\n \n using std::string;\n using std::ifstream;\n \n+CairoBackgroundRenderer::CairoBackgroundRenderer(HTMLRenderer * html_renderer, const Param & param)",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 11,
        "original_position": 11,
        "commit_id": "4add9da6e4f06c793c4177b2f8a48bd28b53e1ec",
        "original_commit_id": "8be6bed17ae52b0ae07d17f60229b33bb0381185",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just because previous commit did something in the constructor and those codes were removed afterward.\n",
        "created_at": "2014-06-08T04:14:44Z",
        "updated_at": "2014-06-14T04:49:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522561",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13522561"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/356#discussion_r13522561"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/356"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13527892",
        "pull_request_review_id": null,
        "id": 13527892,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI3ODky",
        "diff_hunk": "@@ -20,18 +20,9 @@ namespace pdf2htmlEX {\n \n BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string & format, HTMLRenderer * html_renderer, const Param & param)\n {\n-#ifdef ENABLE_LIBPNG\n-    if(format == \"png\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    if(format == \"jpg\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n+    if (format == \"png\" || format == \"jpg\")",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 16,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why removed those `#ifdef`?\n",
        "created_at": "2014-06-09T01:59:10Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13527892",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13527892"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13527892"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13527907",
        "pull_request_review_id": null,
        "id": 13527907,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI3OTA3",
        "diff_hunk": "@@ -42,4 +33,11 @@ BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string\n     return nullptr;\n }\n \n+BackgroundRenderer * BackgroundRenderer::getFallbackBackgroundRenderer(HTMLRenderer * html_renderer, const Param & param)",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": 20,
        "original_position": 26,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You can probably merge this function with `getBackgroundRenderer`\n",
        "created_at": "2014-06-09T02:00:25Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13527907",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13527907"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13527907"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13527942",
        "pull_request_review_id": null,
        "id": 13527942,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI3OTQy",
        "diff_hunk": "@@ -20,18 +20,9 @@ namespace pdf2htmlEX {\n \n BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string & format, HTMLRenderer * html_renderer, const Param & param)\n {\n-#ifdef ENABLE_LIBPNG\n-    if(format == \"png\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    if(format == \"jpg\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n+    if (format == \"png\" || format == \"jpg\")",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 16,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`SplashBackgroundRenderer()` already handles ENABLE_LIBPNG and ENABLE_LIBJPEG. The difference is that `SplashBackgroundRenderer()` throws if the format is not supported.\n",
        "created_at": "2014-06-09T02:05:30Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13527942",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13527942"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13527942"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13527965",
        "pull_request_review_id": null,
        "id": 13527965,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI3OTY1",
        "diff_hunk": "@@ -42,4 +33,11 @@ BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string\n     return nullptr;\n }\n \n+BackgroundRenderer * BackgroundRenderer::getFallbackBackgroundRenderer(HTMLRenderer * html_renderer, const Param & param)",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": 20,
        "original_position": 26,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I have considered, but found that a separate method might be more clear. Any suggestion?\n",
        "created_at": "2014-06-09T02:10:11Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13527965",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13527965"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13527965"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528052",
        "pull_request_review_id": null,
        "id": 13528052,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MDUy",
        "diff_hunk": "@@ -42,4 +33,11 @@ BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string\n     return nullptr;\n }\n \n+BackgroundRenderer * BackgroundRenderer::getFallbackBackgroundRenderer(HTMLRenderer * html_renderer, const Param & param)",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": 20,
        "original_position": 26,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm..I'm not sure yet. Please let me read through your patch first.\n",
        "created_at": "2014-06-09T02:17:58Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528052",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528052"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528052"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528059",
        "pull_request_review_id": null,
        "id": 13528059,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MDU5",
        "diff_hunk": "@@ -20,18 +20,9 @@ namespace pdf2htmlEX {\n \n BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string & format, HTMLRenderer * html_renderer, const Param & param)\n {\n-#ifdef ENABLE_LIBPNG\n-    if(format == \"png\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    if(format == \"jpg\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n+    if (format == \"png\" || format == \"jpg\")",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 16,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "After all `HTMLRenderer::process` throws if `BackgroundRenderer::getBackgroundRenderer` returns null, may be we could let `getBackgroundRenderer` throw if a format is not supported?\n",
        "created_at": "2014-06-09T02:18:48Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528059",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528059"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528059"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528061",
        "pull_request_review_id": null,
        "id": 13528061,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MDYx",
        "diff_hunk": "@@ -20,18 +20,9 @@ namespace pdf2htmlEX {\n \n BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string & format, HTMLRenderer * html_renderer, const Param & param)\n {\n-#ifdef ENABLE_LIBPNG\n-    if(format == \"png\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    if(format == \"jpg\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n+    if (format == \"png\" || format == \"jpg\")",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 16,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The good thing of returning a `nullptr` here is that there'll be only one location to handle the exception and show the messages. The checking in `SplashBackgroundRenderer` is merely for safety.\n",
        "created_at": "2014-06-09T02:18:49Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528061",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528061"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528061"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528073",
        "pull_request_review_id": null,
        "id": 13528073,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MDcz",
        "diff_hunk": "@@ -20,18 +20,9 @@ namespace pdf2htmlEX {\n \n BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string & format, HTMLRenderer * html_renderer, const Param & param)\n {\n-#ifdef ENABLE_LIBPNG\n-    if(format == \"png\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    if(format == \"jpg\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n+    if (format == \"png\" || format == \"jpg\")",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 16,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it's not about 'throw or not', it's 'where to check and show the message'.\n",
        "created_at": "2014-06-09T02:19:43Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528073",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528073"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528073"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528078",
        "pull_request_review_id": null,
        "id": 13528078,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MDc4",
        "diff_hunk": "@@ -15,11 +15,27 @@\n #if ENABLE_SVG\n \n #include \"CairoBackgroundRenderer.h\"\n+#include \"SplashBackgroundRenderer.h\"\n \n namespace pdf2htmlEX {\n \n-using std::string;\n-using std::ifstream;\n+using namespace std;\n+\n+CairoBackgroundRenderer::CairoBackgroundRenderer(HTMLRenderer * html_renderer, const Param & param)\n+    : CairoOutputDev()\n+    , html_renderer(html_renderer)\n+    , param(param)\n+    , surface(nullptr)\n+{ }\n+\n+CairoBackgroundRenderer::~CairoBackgroundRenderer()\n+{\n+    for(auto i = bitmaps_ref_count.begin(); i != bitmaps_ref_count.end(); ++i)",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 21,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Usually I use `iter` for iterators, and `i` for integers.\nWill be more consistent in the code base that way.\n",
        "created_at": "2014-06-09T02:20:29Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528078",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528078"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528078"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528087",
        "pull_request_review_id": null,
        "id": 13528087,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MDg3",
        "diff_hunk": "@@ -15,11 +15,27 @@\n #if ENABLE_SVG\n \n #include \"CairoBackgroundRenderer.h\"\n+#include \"SplashBackgroundRenderer.h\"\n \n namespace pdf2htmlEX {\n \n-using std::string;\n-using std::ifstream;\n+using namespace std;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 10,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'll try to avoid this. You don't know when you will use `boost::ifstream` or something.\n",
        "created_at": "2014-06-09T02:21:46Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528087",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528087"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528087"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528096",
        "pull_request_review_id": null,
        "id": 13528096,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MDk2",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 125,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is dangerous! Right after you have returned the pointer, the buffer will be released and probably used elsewhere.\n",
        "created_at": "2014-06-09T02:23:07Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528096",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528096"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528096"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528113",
        "pull_request_review_id": null,
        "id": 13528113,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MTEz",
        "diff_hunk": "@@ -272,7 +272,7 @@ class CairoOutputDev: public OutputDev {\n   cairo_filter_t getFilterForSurface(cairo_surface_t *image,\n \t\t\t\t     GBool interpolate);\n   GBool getStreamData (Stream *str, char **buffer, int *length);\n-  void setMimeData(Stream *str, Object *ref, cairo_surface_t *image);\n+  virtual void setMimeData(Stream *str, Object *ref, cairo_surface_t *image);",
        "path": "3rdparty/poppler/git/CairoOutputDev.h",
        "position": 5,
        "original_position": 5,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I wonder if you actually need to add `virtual` here.\n",
        "created_at": "2014-06-09T02:24:40Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528113",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528113"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528113"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528124",
        "pull_request_review_id": null,
        "id": 13528124,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MTI0",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I remembered that there are two numbers in a reference, do you think `num` only is enough?\n",
        "created_at": "2014-06-09T02:25:43Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528124",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528124"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528124"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528129",
        "pull_request_review_id": null,
        "id": 13528129,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MTI5",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;\n+    auto uri = strdup((char*) html_renderer->str_fmt(\"%d.jpg\", imgId));",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 145,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not use `std::string`?\n",
        "created_at": "2014-06-09T02:26:04Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528129",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528129"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528129"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528138",
        "pull_request_review_id": null,
        "id": 13528138,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MTM4",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;\n+    auto uri = strdup((char*) html_renderer->str_fmt(\"%d.jpg\", imgId));\n+    auto st = cairo_surface_set_mime_data(image, CAIRO_MIME_TYPE_URI,\n+        (unsigned char*) uri, strlen(uri), gfree, uri);\n+    if (st)\n+    {\n+        gfree(uri);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 150,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`strdup` is in standard library, I believe you should use `free` instead of `gfree`\n",
        "created_at": "2014-06-09T02:26:57Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528138",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528138"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528138"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528139",
        "pull_request_review_id": null,
        "id": 13528139,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MTM5",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 125,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`get_bitmap_path()` is private and the callers always treat its return value the same way as `html_renderer->str_fmt`.\n",
        "created_at": "2014-06-09T02:27:05Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528139",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528139"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528139"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528156",
        "pull_request_review_id": null,
        "id": 13528156,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MTU2",
        "diff_hunk": "@@ -272,7 +272,7 @@ class CairoOutputDev: public OutputDev {\n   cairo_filter_t getFilterForSurface(cairo_surface_t *image,\n \t\t\t\t     GBool interpolate);\n   GBool getStreamData (Stream *str, char **buffer, int *length);\n-  void setMimeData(Stream *str, Object *ref, cairo_surface_t *image);\n+  virtual void setMimeData(Stream *str, Object *ref, cairo_surface_t *image);",
        "path": "3rdparty/poppler/git/CairoOutputDev.h",
        "position": 5,
        "original_position": 5,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I need to override it in CairoBackgroundRenderer in order to dump bitmaps to files.\n",
        "created_at": "2014-06-09T02:28:25Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528156",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528156"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528156"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528161",
        "pull_request_review_id": null,
        "id": 13528161,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MTYx",
        "diff_hunk": "@@ -47,9 +44,22 @@ class CairoBackgroundRenderer : public BackgroundRenderer, CairoOutputDev\n       CharCode code, int nBytes, Unicode *u, int uLen);\n \n protected:\n+  virtual void setMimeData(Stream *str, Object *ref, cairo_surface_t *image);\n+\n+protected:\n   HTMLRenderer * html_renderer;\n   const Param & param;\n   cairo_surface_t * surface;\n+\n+private:\n+  // convert bitmap stream id to bitmap file name. No pageno prefix,\n+  // because a bitmap may be shared by multiple pages.\n+  const char* get_bitmap_path(int id);\n+  // map<id_of_bitmap_stream, usage_count_in_all_svgs>\n+  // note: if a svg bg fallbacks to bitmap bg, its bitmaps are not taken into account.\n+  std::map<int, int> bitmaps_ref_count;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.h",
        "position": null,
        "original_position": 47,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I remembered that I used `long` or something to store a whole ref while processing files, and there are also functions converting them, please check `font.cc` and/or `util.cc`\n",
        "created_at": "2014-06-09T02:28:40Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528161",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528161"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528161"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528165",
        "pull_request_review_id": null,
        "id": 13528165,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MTY1",
        "diff_hunk": "@@ -47,9 +44,22 @@ class CairoBackgroundRenderer : public BackgroundRenderer, CairoOutputDev\n       CharCode code, int nBytes, Unicode *u, int uLen);\n \n protected:\n+  virtual void setMimeData(Stream *str, Object *ref, cairo_surface_t *image);\n+\n+protected:\n   HTMLRenderer * html_renderer;\n   const Param & param;\n   cairo_surface_t * surface;\n+\n+private:\n+  // convert bitmap stream id to bitmap file name. No pageno prefix,\n+  // because a bitmap may be shared by multiple pages.\n+  const char* get_bitmap_path(int id);\n+  // map<id_of_bitmap_stream, usage_count_in_all_svgs>\n+  // note: if a svg bg fallbacks to bitmap bg, its bitmaps are not taken into account.\n+  std::map<int, int> bitmaps_ref_count;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.h",
        "position": null,
        "original_position": 47,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe you want  `unordered_map` instead?\n",
        "created_at": "2014-06-09T02:28:56Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528165",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528165"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528165"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528177",
        "pull_request_review_id": null,
        "id": 13528177,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MTc3",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 4,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should be `svg node list` instead I guess, but I'm not sure about my English...\n",
        "created_at": "2014-06-09T02:29:53Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528177",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528177"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528177"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528184",
        "pull_request_review_id": null,
        "id": 13528184,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MTg0",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"\n+                \" fall back to bitmap background. 0 or negative means no limit.\")\n+        .add(\"svg-embed-bitmap\", &param.svg_embed_bitmap, 1, \"embed bitmaps in svg files or save them as external files\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 6,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In the description, you may just say `embed bitmaps in svg file when possible`\n",
        "created_at": "2014-06-09T02:30:31Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528184",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528184"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528184"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528213",
        "pull_request_review_id": null,
        "id": 13528213,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MjEz",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;\n+    auto uri = strdup((char*) html_renderer->str_fmt(\"%d.jpg\", imgId));",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 145,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It will be release by cairo by free().\n",
        "created_at": "2014-06-09T02:32:11Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528213",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528213"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528213"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528227",
        "pull_request_review_id": null,
        "id": 13528227,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MjI3",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"\n+                \" fall back to bitmap background. 0 or negative means no limit.\")\n+        .add(\"svg-embed-bitmap\", &param.svg_embed_bitmap, 1, \"embed bitmaps in svg files or save them as external files\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 6,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, I mean `Always embed bitmap files in svg`. You don't need to write full description here.\nAnd I forgot to mention that please add new items in the manpage, with full description.\n\nPossibly like this:\n`if set to 0, export bitmap files in svg when possible; otherwise always embed them`.\n\nI think it may make more sense if it follows the `embed-image` option.\n",
        "created_at": "2014-06-09T02:33:50Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528227",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528227"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528227"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528234",
        "pull_request_review_id": null,
        "id": 13528234,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MjM0",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 125,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No, `str_fmt` returns a temporary object holding a lock to the buffer. Please refer to the declaration or definition of that function, there should be descriptions there.\n",
        "created_at": "2014-06-09T02:34:52Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528234",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528234"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528234"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528247",
        "pull_request_review_id": null,
        "id": 13528247,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MjQ3",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;\n+    auto uri = strdup((char*) html_renderer->str_fmt(\"%d.jpg\", imgId));\n+    auto st = cairo_surface_set_mime_data(image, CAIRO_MIME_TYPE_URI,\n+        (unsigned char*) uri, strlen(uri), gfree, uri);\n+    if (st)\n+    {\n+        gfree(uri);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 150,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "gfree is poppler's convention:\n\n```\n/*\n * Same as free, but checks for and ignores NULL pointers.\n */\nextern void gfree(void *p);\n```\n\nYes, I think free() already ignores NULL, so they are the same.\n",
        "created_at": "2014-06-09T02:35:57Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528247",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528247"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528247"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528251",
        "pull_request_review_id": null,
        "id": 13528251,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MjUx",
        "diff_hunk": "@@ -272,7 +272,7 @@ class CairoOutputDev: public OutputDev {\n   cairo_filter_t getFilterForSurface(cairo_surface_t *image,\n \t\t\t\t     GBool interpolate);\n   GBool getStreamData (Stream *str, char **buffer, int *length);\n-  void setMimeData(Stream *str, Object *ref, cairo_surface_t *image);\n+  virtual void setMimeData(Stream *str, Object *ref, cairo_surface_t *image);",
        "path": "3rdparty/poppler/git/CairoOutputDev.h",
        "position": 5,
        "original_position": 5,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see.. Let me see if there are better ways to do that. And there are actually other versions of CairoOutputDev in the repository, would be a mess if we want to maintain all of them.\n",
        "created_at": "2014-06-09T02:36:15Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528251",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528251"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528251"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528259",
        "pull_request_review_id": null,
        "id": 13528259,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MjU5",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;\n+    auto uri = strdup((char*) html_renderer->str_fmt(\"%d.jpg\", imgId));\n+    auto st = cairo_surface_set_mime_data(image, CAIRO_MIME_TYPE_URI,\n+        (unsigned char*) uri, strlen(uri), gfree, uri);\n+    if (st)\n+    {\n+        gfree(uri);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 150,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not sure if we can rely on it, the API is for (their) internal use, and is likely to change in the future. (although maybe not for `gfree` here)\n",
        "created_at": "2014-06-09T02:37:13Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528259",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528259"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528259"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528267",
        "pull_request_review_id": null,
        "id": 13528267,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MjY3",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 4,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do you mean svg_node_limit? I'm not sure either.\n",
        "created_at": "2014-06-09T02:37:59Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528267",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528267"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528267"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528312",
        "pull_request_review_id": null,
        "id": 13528312,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MzEy",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"\n+                \" fall back to bitmap background. 0 or negative means no limit.\")\n+        .add(\"svg-embed-bitmap\", &param.svg_embed_bitmap, 1, \"embed bitmaps in svg files or save them as external files\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 6,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I use svg as a prefix, so we can group svg related options together. If you insist, I'll change them.\n",
        "created_at": "2014-06-09T02:41:25Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528312",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528312"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528312"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528346",
        "pull_request_review_id": null,
        "id": 13528346,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4MzQ2",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'll check the spec. I thought only the obj with max gen number is actually used, no?\n",
        "created_at": "2014-06-09T02:44:17Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528346",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528346"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528346"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528393",
        "pull_request_review_id": null,
        "id": 13528393,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4Mzkz",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 4,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe `svg-node-count-limit` or `svg-size-limit`.\nTwo more things:\n- Can you make it -1 by default, and 0 a valid value, because there's another `-limit` option there for temporary files\n- Please make sure to write in the man page that this is only an estimate, not the exact number of nodes.\n",
        "created_at": "2014-06-09T02:47:56Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528393",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528393"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528393"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528401",
        "pull_request_review_id": null,
        "id": 13528401,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4NDAx",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"\n+                \" fall back to bitmap background. 0 or negative means no limit.\")\n+        .add(\"svg-embed-bitmap\", &param.svg_embed_bitmap, 1, \"embed bitmaps in svg files or save them as external files\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 6,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh the name is OK, I mean there could be a third value of `svg-embed-bitmap`, that always follow the `--embed-image` option.\n",
        "created_at": "2014-06-09T02:48:47Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528401",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528401"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528401"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528605",
        "pull_request_review_id": null,
        "id": 13528605,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4NjA1",
        "diff_hunk": "@@ -20,18 +20,9 @@ namespace pdf2htmlEX {\n \n BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string & format, HTMLRenderer * html_renderer, const Param & param)\n {\n-#ifdef ENABLE_LIBPNG\n-    if(format == \"png\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    if(format == \"jpg\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n+    if (format == \"png\" || format == \"jpg\")",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 16,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I can catch exception from `SplashBackgroundRenderer()` and return null in getBackgroundRenderer(), but this looses the detailed error message.\n\nI see that those exceptions are all caught  by main() and show the message there, so there is not much difference.\n",
        "created_at": "2014-06-09T03:08:58Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528605",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528605"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528605"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528612",
        "pull_request_review_id": null,
        "id": 13528612,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4NjEy",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 125,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes you are right.\n",
        "created_at": "2014-06-09T03:09:33Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528612",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528612"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528612"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528618",
        "pull_request_review_id": null,
        "id": 13528618,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4NjE4",
        "diff_hunk": "@@ -20,18 +20,9 @@ namespace pdf2htmlEX {\n \n BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string & format, HTMLRenderer * html_renderer, const Param & param)\n {\n-#ifdef ENABLE_LIBPNG\n-    if(format == \"png\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    if(format == \"jpg\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n+    if (format == \"png\" || format == \"jpg\")",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 16,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The concern is whenever we need to change the error message in the future, we won't forget any one?\n",
        "created_at": "2014-06-09T03:10:44Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528618",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528618"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528618"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528683",
        "pull_request_review_id": null,
        "id": 13528683,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4Njgz",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 4,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`svg-node-count-limit` is good.\n1. -1 as default is ok, but values <= 0 have same effect, since valid xml has at least 1 node.\n2. Sure.\n",
        "created_at": "2014-06-09T03:17:33Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528683",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528683"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528683"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528741",
        "pull_request_review_id": null,
        "id": 13528741,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4NzQx",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;\n+    auto uri = strdup((char*) html_renderer->str_fmt(\"%d.jpg\", imgId));\n+    auto st = cairo_surface_set_mime_data(image, CAIRO_MIME_TYPE_URI,\n+        (unsigned char*) uri, strlen(uri), gfree, uri);\n+    if (st)\n+    {\n+        gfree(uri);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 150,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OK I'll just use free().\n",
        "created_at": "2014-06-09T03:25:04Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528741",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528741"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528741"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528767",
        "pull_request_review_id": null,
        "id": 13528767,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4NzY3",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 4,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No, 0 means not use svg at all. You are right.\n",
        "created_at": "2014-06-09T03:28:36Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528767",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528767"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528767"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528784",
        "pull_request_review_id": null,
        "id": 13528784,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4Nzg0",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"\n+                \" fall back to bitmap background. 0 or negative means no limit.\")\n+        .add(\"svg-embed-bitmap\", &param.svg_embed_bitmap, 1, \"embed bitmaps in svg files or save them as external files\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 6,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What does \"a third value\" mean?\n`--embed-image <int>           embed image files into output (default: 1)`\n",
        "created_at": "2014-06-09T03:30:37Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528784",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528784"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528784"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528814",
        "pull_request_review_id": null,
        "id": 13528814,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4ODE0",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"\n+                \" fall back to bitmap background. 0 or negative means no limit.\")\n+        .add(\"svg-embed-bitmap\", &param.svg_embed_bitmap, 1, \"embed bitmaps in svg files or save them as external files\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 6,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Like in SVG, images can also be embedded or not in HTML, and that's what `--embed-image` controls.\nSo imagine a user specify a value to `--embed-image`, probably we should also do the same thing for images in SVG, unless a value is explicitly specified for `--svg-embed-bitmap`. \nDoes it make sense?\n",
        "created_at": "2014-06-09T03:33:47Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528814",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528814"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528814"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528824",
        "pull_request_review_id": null,
        "id": 13528824,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4ODI0",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"\n+                \" fall back to bitmap background. 0 or negative means no limit.\")\n+        .add(\"svg-embed-bitmap\", &param.svg_embed_bitmap, 1, \"embed bitmaps in svg files or save them as external files\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 6,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What I mean is we could have 3 values for `--svg-embed-bitmap`, 0 for auto, which follows `--embed-image`, and 1 and -1 are to embed images or not.\n",
        "created_at": "2014-06-09T03:34:35Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528824",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528824"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528824"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528874",
        "pull_request_review_id": null,
        "id": 13528874,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4ODc0",
        "diff_hunk": "@@ -20,18 +20,9 @@ namespace pdf2htmlEX {\n \n BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string & format, HTMLRenderer * html_renderer, const Param & param)\n {\n-#ifdef ENABLE_LIBPNG\n-    if(format == \"png\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    if(format == \"jpg\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n+    if (format == \"png\" || format == \"jpg\")",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 16,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How will we change those error messages?\n\nI think If returning null makes sense in some cases (like `getFallbackBackgroundRenderer()`), just let it do. If not (like `geBackgroundRenderer()`), throwing is more reasonable.\n",
        "created_at": "2014-06-09T03:44:46Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528874",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528874"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528874"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528899",
        "pull_request_review_id": null,
        "id": 13528899,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI4ODk5",
        "diff_hunk": "@@ -20,18 +20,9 @@ namespace pdf2htmlEX {\n \n BackgroundRenderer * BackgroundRenderer::getBackgroundRenderer(const std::string & format, HTMLRenderer * html_renderer, const Param & param)\n {\n-#ifdef ENABLE_LIBPNG\n-    if(format == \"png\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    if(format == \"jpg\")\n-    {\n-        return new SplashBackgroundRenderer(html_renderer, param);\n-    }\n-#endif\n+    if (format == \"png\" || format == \"jpg\")",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 16,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "These messages are showing that the required format has not been built into.\nSo it's the _same_ message, and it'll be easier to maintain that way.\nJust a trivial example, if we found a typo, or try to use another message, I hope there's a way to make sure that we won't miss any message - if we have it mentioned multiple times.\n",
        "created_at": "2014-06-09T03:48:03Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528899",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13528899"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13528899"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13529014",
        "pull_request_review_id": null,
        "id": 13529014,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTI5MDE0",
        "diff_hunk": "@@ -190,6 +190,10 @@ void parse_options (int argc, char **argv)\n \n         // background image\n         .add(\"bg-format\", &param.bg_format, \"png\", \"specify background image format\")\n+        .add(\"svg-nodes-limit\", &param.svg_nodes_limit, 0, \"if node count in a svg background image exceeds this limit,\"\n+                \" fall back to bitmap background. 0 or negative means no limit.\")\n+        .add(\"svg-embed-bitmap\", &param.svg_embed_bitmap, 1, \"embed bitmaps in svg files or save them as external files\"",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 6,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`--embed-image` and `--svg-embed-bitmap` now are orthogonal, all 4 combinations are valid (`--embed-image 1 --svg-embed-bitmap 0` seems making some browsers unhappy, need more study).\n\nI prefer to keep them orthogonal, 'auto' looks tricky for me.\n",
        "created_at": "2014-06-09T04:01:19Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13529014",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13529014"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13529014"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13530948",
        "pull_request_review_id": null,
        "id": 13530948,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTMwOTQ4",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If I understand the PDF spec right, only one object with a certain obj number can be active in a PDF file, that is the one with maximum generation number; other objects with the same obj number and smaller generation numbers must have been marked as removed in xref table, and don't contribute to the rendering result.\n\nSo, obj number is enough to identify any active object in PDF.\n",
        "created_at": "2014-06-09T07:07:03Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13530948",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13530948"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13530948"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13531658",
        "pull_request_review_id": null,
        "id": 13531658,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTMxNjU4",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not so sure about the generation number, but suppose you're right, how about this:\n\n```\nimg = (1,1) // id, gen\ndraw img\nimg = (1,2) \ndraw img\n```\n\netc. \n\nI mean an old image has been rendered before a newer one kicks it out. \n\nStill there's a problem.\n",
        "created_at": "2014-06-09T07:49:42Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13531658",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13531658"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13531658"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13534831",
        "pull_request_review_id": null,
        "id": 13534831,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTM0ODMx",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In this case, (1,1) must have been marked as removed, so it is never drawn. In PDF, old objects are actually removed objects.\n",
        "created_at": "2014-06-09T10:07:05Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13534831",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13534831"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13534831"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13535011",
        "pull_request_review_id": null,
        "id": 13535011,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTM1MDEx",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I mean when the first `draw` instruction appears the first img is already rendered.\nI just read a few sections in the PDF spec, and did not see what you mentioned. But I do see that both the id and gen number can uniquely identify an object.\nCan you show me the relevant sections?\n",
        "created_at": "2014-06-09T10:16:07Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13535011",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13535011"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13535011"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13535408",
        "pull_request_review_id": null,
        "id": 13535408,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTM1NDA4",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"7.5.4 Cross-Reference Table\" and \"H.7 Updating Example\" in \"Document management \u2014 Portable document format \u2014 Part 1: PDF 1.7\"\n",
        "created_at": "2014-06-09T10:34:56Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13535408",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13535408"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13535408"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13553027",
        "pull_request_review_id": null,
        "id": 13553027,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTUzMDI3",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I can only find this paragraph\n\n> Except for object number 0, all objects in the cross-reference table shall initially have generation numbers of 0.\n> When an indirect object is deleted, its cross-reference entry shall be marked free and it shall be added to the\n> linked list of free entries. The entry\u2019s generation number shall be incremented by 1 to indicate the generation\n> number to be used the next time an object with that object number is created. Thus, each time the entry is\n> reused, it is given a new generation number. The maximum generation number is 65,535; when a cross-\n> reference entry reaches this value, it shall never be reused. \n\nSo I interpret it as reusing entries instead of reusing object. \n\nI do see in the spec that you can directly update a (id,gen) by simply define it again, in that case it won't make sense to use a large generation number for updating.\n\nLet me see if I can find other references.\n",
        "created_at": "2014-06-09T17:30:25Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13553027",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13553027"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13553027"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13553244",
        "pull_request_review_id": null,
        "id": 13553244,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTUzMjQ0",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "And it seems that the generation number should be increased if the object with the same object number has been deleted.\nBut not that 'increasing the gen number will trigger the deletion'.\n",
        "created_at": "2014-06-09T17:34:18Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13553244",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13553244"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13553244"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577399",
        "pull_request_review_id": null,
        "id": 13577399,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTc3Mzk5",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I read it as: \n1. initial generation number must be 0;\n2. each time an obj number is reused, its generation number +1, and object with previous gen is deleted;\n3. are there any other mechanisms to increase generation number? I don't find any in the spec.\nSo It's reasonable to say: for a given obj number, only the object with max gen number can be alive.\n\nYou can also directly override an exiting obj with same obj number and gen number, but this doesn't invalidate the rule above.\n\nI also read poppler's code, and confirmed my conclusion. Its xref table implementation is simply an array of entries indexed by object number (`Xref::entries` in poppler/XRef.h|cc), so there is no way multiple entries with same object number can co-exists.\n",
        "created_at": "2014-06-10T04:21:22Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577399",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577399"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577399"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577486",
        "pull_request_review_id": null,
        "id": 13577486,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTc3NDg2",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So in my previous example, an old object has already been _rendered_, then deleted and reused. \n",
        "created_at": "2014-06-10T04:27:12Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577486",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577486"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577486"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577491",
        "pull_request_review_id": null,
        "id": 13577491,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTc3NDkx",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I hope I can find an example for this.\n",
        "created_at": "2014-06-10T04:27:25Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577491",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577491"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577491"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577602",
        "pull_request_review_id": null,
        "id": 13577602,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTc3NjAy",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> And it seems that the generation number should be increased if the object with the same object number has been deleted.\n\nTo be more precise, in an xref entry marked with 'f', the generation number is \"to indicate the generation number to be used the next time an object with that object number is created\".\n",
        "created_at": "2014-06-10T04:34:26Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577602",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577602"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577602"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577673",
        "pull_request_review_id": null,
        "id": 13577673,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTc3Njcz",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree, and it does not conflict with my example. So (0,1) and (0,2) may not exist at the same time, but (0,1) can be used before (0,2) has been created.\n",
        "created_at": "2014-06-10T04:37:59Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577673",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577673"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577673"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577862",
        "pull_request_review_id": null,
        "id": 13577862,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTc3ODYy",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think I'm understanding the spec correctly, let me read again.\n",
        "created_at": "2014-06-10T04:49:19Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577862",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577862"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577862"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577894",
        "pull_request_review_id": null,
        "id": 13577894,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTc3ODk0",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "But I do see in the spec that 'each object can be identify by the object number and the generation number'\n",
        "created_at": "2014-06-10T04:51:13Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577894",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13577894"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13577894"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13578476",
        "pull_request_review_id": null,
        "id": 13578476,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTc4NDc2",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> So in my previous example, an old object has already been rendered, then deleted and reused. \n\nNo. If an old entry is marked as 'f', it is not accessible to a PDF reader at all, so can't be rendered. \nIn poppler, If an entry is reused, only the newest entry is picked up during the parsing of xref table, the old ones are just ignored; and `XRef::fetch()` returns null obj if you try to fetch an entry with type `xrefEntryFree`.\n",
        "created_at": "2014-06-10T05:32:09Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13578476",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13578476"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13578476"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13578619",
        "pull_request_review_id": null,
        "id": 13578619,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTc4NjE5",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> I hope I can find an example for this.\n\nI just send 2 pdf to your gmail. In `small-image-del.pdf` I mark the image (7, 0) 'f', so it is not rendered.\n\n```\nxref\n0 1\n0000000007 65535 f \n7 1\n0000000000 00001 f \n```\n",
        "created_at": "2014-06-10T05:40:05Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13578619",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13578619"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13578619"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13579477",
        "pull_request_review_id": null,
        "id": 13579477,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTc5NDc3",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> But I do see in the spec that 'each object can be identify by the object number and the generation number'\n\nI think here 'object' refers to both deleted and in-use objects.\nPDF readers usually don't care about deleted objects; editors might do, for example it may be able to recover deleted objects (I don't known one do this however).\n",
        "created_at": "2014-06-10T06:34:42Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13579477",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13579477"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13579477"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13629846",
        "pull_request_review_id": null,
        "id": 13629846,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjI5ODQ2",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've read again the relevant sections in the PDF spec and some part of poppler code (Gfx.cc and CairoOutputDev.cc).\nI think I misunderstood the PDF spec previously, I thought xref table is dynamic, such that you can draw something (in the table), remove it, and then replace it with a new one.\n\nHowever still I cannot see proofs that using merely object number is safe. In our context we cannot assume too many things about `xref`, what if one call using (0,1) and another call using (0,2)? Of course at least one of them must be invalid, but we will end up using a same dictionary entry & image file.\n\nOn the other hand, are there any other concerns that you think using both of them is not proper? I think it's safe, and the file name could  be more useful for debugging .\n",
        "created_at": "2014-06-11T01:31:35Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13629846",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13629846"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13629846"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13629851",
        "pull_request_review_id": null,
        "id": 13629851,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjI5ODUx",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;\n+    auto uri = strdup((char*) html_renderer->str_fmt(\"%d.jpg\", imgId));",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 145,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see.\nPlease add some prefix to it, to make it more meaningful, and to avoid naming collision.\n",
        "created_at": "2014-06-11T01:32:09Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13629851",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13629851"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13629851"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13631159",
        "pull_request_review_id": null,
        "id": 13631159,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjMxMTU5",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> what if one call using (0,1) and another call using (0,2)? \n\nThis just can't happen. (0,1) is removed,  (0,2) is alive (if no (0, 3)). Accessing to an indirect object requires looking up xref table first. If a drawing command tries to fetch (0,1), it will see (0,2) is there, and is aware that (0,1) is removed, and behaves as if (0,1) is null. \n\n> are there any other concerns that you think using both of them is not proper?  I think it's safe, and the file name could be more useful for debugging .\n\nNot many, I just want to make the code simple. In practice, incremental update seems not used extensively, and in most case gen number is 0. PDF writers/optimizers would remove unused objects, too. So keeping obj number in file name is good enough for debugging, I think.\n",
        "created_at": "2014-06-11T02:22:22Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13631159",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13631159"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13631159"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13631267",
        "pull_request_review_id": null,
        "id": 13631267,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjMxMjY3",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> If a drawing command tries to fetch (0,1), it will see (0,2) is there, and is aware that (0,1) is removed, and behaves as if (0,1) is null.\n\nI'm pretty sure that this is not correct. \n",
        "created_at": "2014-06-11T02:27:11Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13631267",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13631267"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13631267"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13631297",
        "pull_request_review_id": null,
        "id": 13631297,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjMxMjk3",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sorry I misunderstood your words, you were right.\n`null` is irrelevant, I mean one call of this function is (0,1), which turned out to be `null`, the other call with (0,2), with which we will find something. Then this function will behave the same.\n",
        "created_at": "2014-06-11T02:28:52Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13631297",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13631297"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13631297"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13631365",
        "pull_request_review_id": null,
        "id": 13631365,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjMxMzY1",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;\n+    auto uri = strdup((char*) html_renderer->str_fmt(\"%d.jpg\", imgId));",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 145,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about \"po-\" for \"PDF object\"?\n",
        "created_at": "2014-06-11T02:34:07Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13631365",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13631365"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13631365"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13631795",
        "pull_request_review_id": null,
        "id": 13631795,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjMxNzk1",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> However still I cannot see proofs that using merely object number is safe. \n\nOne proof is poppler's xref table implementation I mentioned above:\nIts xref table implementation is simply an array of entries indexed by object number (`Xref::entries` in poppler/XRef.h|cc), so there is no way multiple entries with same object number can co-exists.\nIn poppler, only the newest xref entry is picked up during the parsing of xref table, the old ones are just ignored; and `XRef::fetch(num, gen...)` returns null obj if you try to fetch an entry with type xrefEntryFree, or if the gen passed to `XRef::fetch()` doesn't match the one in `entries[num].gen` .\n",
        "created_at": "2014-06-11T02:59:11Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13631795",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13631795"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13631795"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632020",
        "pull_request_review_id": null,
        "id": 13632020,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjMyMDIw",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I already agreed on that no two objects can exists with the same object number.\n",
        "created_at": "2014-06-11T03:03:51Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632020",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632020"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632020"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632045",
        "pull_request_review_id": null,
        "id": 13632045,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjMyMDQ1",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "And about `str` & `ref`, I'm not sure if `ref` is the identifier for `str`, can we use it to identify each image?\n",
        "created_at": "2014-06-11T03:05:58Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632045",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632045"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632045"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632147",
        "pull_request_review_id": null,
        "id": 13632147,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjMyMTQ3",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> I mean one call of this function is (0,1), which turned out to be null, the other call with (0,2), with which we will find something. \n\nDoes \"this function\" refer to `CairoBackgroundRenderer::setMimeData()`? This can't happen, poppler will not do that if (0,1) is deleted, since the call to `XRef::fetch(num=0, gen=1,...)` already returned a null obj.\n",
        "created_at": "2014-06-11T03:12:29Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632147",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632147"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632147"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632477",
        "pull_request_review_id": null,
        "id": 13632477,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjMyNDc3",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> And about str & ref, I'm not sure if ref is the identifier for str, can we use it to identify each image?\n\nYes for non-inlined image, look at this code path: `Gfx::opXObject -> Gfx::doImage -> OutputDev::drawImage`, ref is pointing to str. I think inlined images can't reach setMimeData():\n\n```\n//in CairoOutputDev::drawImage\n  if (!inlineImg) /* don't read stream twice if it is an inline image */\n    setMimeData(str, ref, image);\n```\n",
        "created_at": "2014-06-11T03:32:28Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632477",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632477"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632477"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632517",
        "pull_request_review_id": null,
        "id": 13632517,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjMyNTE3",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OK now, I think I'm convinced that it's ok this way. Thank you for your patience,\nMight change in the future in case we find any issue on this.\n",
        "created_at": "2014-06-11T03:34:35Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632517",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632517"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632517"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632669",
        "pull_request_review_id": null,
        "id": 13632669,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjMyNjY5",
        "diff_hunk": "@@ -129,6 +182,56 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+// use object number as bitmap file name, without pageno prefix,\n+// because a bitmap may be shared by multiple pages.\n+const char* CairoBackgroundRenderer::get_bitmap_path(int id)\n+{\n+    return html_renderer->str_fmt(\"%s/%d.jpg\", param.dest_dir.c_str(), id);\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 147,
        "original_position": 144,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "beacc885a21e963f34802428df1e56e70f697736",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's alright.\n",
        "created_at": "2014-06-11T03:42:39Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632669",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13632669"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13632669"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13739722",
        "pull_request_review_id": null,
        "id": 13739722,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM5NzIy",
        "diff_hunk": "@@ -15,11 +15,34 @@\n #if ENABLE_SVG\n \n #include \"CairoBackgroundRenderer.h\"\n+#include \"SplashBackgroundRenderer.h\"\n \n namespace pdf2htmlEX {\n \n using std::string;\n using std::ifstream;\n+using std::ofstream;\n+using std::vector;\n+using std::unordered_map;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 12,
        "original_position": 12,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Add `#include <unordered_map>` in the beginning?\n",
        "created_at": "2014-06-13T06:36:28Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13739722",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13739722"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13739722"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13739736",
        "pull_request_review_id": null,
        "id": 13739736,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM5NzM2",
        "diff_hunk": "@@ -67,19 +90,19 @@ void CairoBackgroundRenderer::render_page(PDFDoc * doc, int pageno)\n         page_height = doc->getPageMediaHeight(pageno);\n     }\n \n-    {\n-        auto fn = html_renderer->str_fmt(\"%s/bg%x.svg\", (param.embed_image ? param.tmp_dir : param.dest_dir).c_str(), pageno);\n-        if(param.embed_image)\n-            html_renderer->tmp_files.add((char*)fn);\n+    string fn = (char*)html_renderer->str_fmt(\"%s/bg%x.svg\", (param.embed_image ? param.tmp_dir : param.dest_dir).c_str(), pageno);\n+    if(param.embed_image)\n+        html_renderer->tmp_files.add(fn);\n \n-        surface = cairo_svg_surface_create((char*)fn, page_width * param.h_dpi / DEFAULT_DPI, page_height * param.v_dpi / DEFAULT_DPI);\n-    }\n+    surface = cairo_svg_surface_create(fn.c_str(), page_width * param.h_dpi / DEFAULT_DPI, page_height * param.v_dpi / DEFAULT_DPI);\n     cairo_svg_surface_restrict_to_version(surface, CAIRO_SVG_VERSION_1_2);\n     cairo_surface_set_fallback_resolution(surface, param.h_dpi, param.v_dpi);\n \n     cairo_t * cr = cairo_create(surface);\n     setCairo(cr);\n \n+    bitmaps_in_current_page.resize(0);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 65,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not use `clear()`, slightly easier to read.\n",
        "created_at": "2014-06-13T06:37:28Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13739736",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13739736"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13739736"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13739757",
        "pull_request_review_id": null,
        "id": 13739757,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM5NzU3",
        "diff_hunk": "@@ -129,6 +189,55 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string & CairoBackgroundRenderer::build_bitmap_path(int id, string & path)\n+{\n+    // \"po\" for \"PDF Object\"\n+    return path = html_renderer->str_fmt(\"%s/po-%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 129,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please remove the dash and use `%x' here.\n",
        "created_at": "2014-06-13T06:39:06Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13739757",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13739757"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13739757"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13739774",
        "pull_request_review_id": null,
        "id": 13739774,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM5Nzc0",
        "diff_hunk": "@@ -129,6 +189,55 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string & CairoBackgroundRenderer::build_bitmap_path(int id, string & path)\n+{\n+    // \"po\" for \"PDF Object\"\n+    return path = html_renderer->str_fmt(\"%s/po-%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 129,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Still I till `po` is not that intuitive, How about `x` or `o` for objects?\n",
        "created_at": "2014-06-13T06:40:31Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13739774",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13739774"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13739774"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13739838",
        "pull_request_review_id": null,
        "id": 13739838,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM5ODM4",
        "diff_hunk": "@@ -129,6 +189,55 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string & CairoBackgroundRenderer::build_bitmap_path(int id, string & path)\n+{\n+    // \"po\" for \"PDF Object\"\n+    return path = html_renderer->str_fmt(\"%s/po-%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 129,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I found this function a little bit weird, both the return value and an argument are used as output.\nActually I found `path` is not used in the places where this function is used, so what's the point?\n",
        "created_at": "2014-06-13T06:45:15Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13739838",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13739838"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13739838"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13740090",
        "pull_request_review_id": null,
        "id": 13740090,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzQwMDkw",
        "diff_hunk": "@@ -15,11 +15,34 @@\n #if ENABLE_SVG\n \n #include \"CairoBackgroundRenderer.h\"\n+#include \"SplashBackgroundRenderer.h\"\n \n namespace pdf2htmlEX {\n \n using std::string;\n using std::ifstream;\n+using std::ofstream;\n+using std::vector;\n+using std::unordered_map;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 12,
        "original_position": 12,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It is already included by CairoBackgroundRenderer.h, do I have to include it again in CairoBackgroundRenderer.cc?\n",
        "created_at": "2014-06-13T06:58:29Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13740090",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13740090"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13740090"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13740237",
        "pull_request_review_id": null,
        "id": 13740237,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzQwMjM3",
        "diff_hunk": "@@ -15,11 +15,34 @@\n #if ENABLE_SVG\n \n #include \"CairoBackgroundRenderer.h\"\n+#include \"SplashBackgroundRenderer.h\"\n \n namespace pdf2htmlEX {\n \n using std::string;\n using std::ifstream;\n+using std::ofstream;\n+using std::vector;\n+using std::unordered_map;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 12,
        "original_position": 12,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh not necessary in that case. Sorry I missed it.\nOn Jun 12, 2014 11:58 PM, \"Duan Yao\" notifications@github.com wrote:\n\n> In src/BackgroundRenderer/CairoBackgroundRenderer.cc:\n> \n> >  namespace pdf2htmlEX {\n> > \n> >  using std::string;\n> >  using std::ifstream;\n> > +using std::ofstream;\n> > +using std::vector;\n> > +using std::unordered_map;\n> \n> It is already included by CairoBackgroundRenderer.h, do I have to include\n> it again in CairoBackgroundRenderer.cc?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/coolwanglu/pdf2htmlEX/pull/360/files#r13740090.\n",
        "created_at": "2014-06-13T07:06:10Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13740237",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13740237"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13740237"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13740278",
        "pull_request_review_id": null,
        "id": 13740278,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzQwMjc4",
        "diff_hunk": "@@ -129,6 +189,55 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string & CairoBackgroundRenderer::build_bitmap_path(int id, string & path)\n+{\n+    // \"po\" for \"PDF Object\"\n+    return path = html_renderer->str_fmt(\"%s/po-%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 129,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> Still I till po is not that intuitive, How about x or o for objects?\n\n'obj-' may be better?\n\n> Please remove the dash and use `%x' here.\n\nWithout a dash, searching for 'po' or 'o' or 'obj' in the output may result in many false positives, adding a dash or something would be better. Obj numbers in PDF are decimal, so I don't think '%x' makes sense.\n\n> I found this function a little bit weird, both the return value and an argument are used as output.\n\nReturn value is just a ref to the argument. This makes calling code simpler:\n\n```\nstring path;\nofstream imgfile(build_bitmap_path(imgId, path), ofstream::binary);\n```\n\nInstead of\n\n```\nstring path;\nbuild_bitmap_path(imgId, path);\nofstream imgfile(path, ofstream::binary);\n```\n",
        "created_at": "2014-06-13T07:09:54Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13740278",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13740278"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13740278"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13762443",
        "pull_request_review_id": null,
        "id": 13762443,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYyNDQz",
        "diff_hunk": "@@ -129,6 +189,55 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string & CairoBackgroundRenderer::build_bitmap_path(int id, string & path)\n+{\n+    // \"po\" for \"PDF Object\"\n+    return path = html_renderer->str_fmt(\"%s/po-%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 129,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The filename will be inserted into the svg file, I'm not sure if they will be used for lots of time, if so, longer names will lead to larger files. This explains why I prefer `x` and `%x`.\nI didn't thought of optimizing for searching, you could actually use `o(\\d+).jpg` or similar regex.\nI guess it's possible to define a image resource and use it many times in graphics, in that case, the file size will differ a lot according the file name you use. Especially object number can be large, so `%x` would save a few bytes, or maybe a few kilos.\n\nFor `build_bitmap_path`, why do you need the argument them, I think the return value itself would be enough.\n",
        "created_at": "2014-06-13T17:40:41Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13762443",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13762443"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13762443"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13778062",
        "pull_request_review_id": null,
        "id": 13778062,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzc4MDYy",
        "diff_hunk": "@@ -129,6 +189,55 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string & CairoBackgroundRenderer::build_bitmap_path(int id, string & path)\n+{\n+    // \"po\" for \"PDF Object\"\n+    return path = html_renderer->str_fmt(\"%s/po-%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 129,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@coolwanglu Average size of images in a PDF is usually a few KB or more, so the effect of adding a few bytes to the file name would be small. I note that in a cairo generated SVG, images are always defined in `<defs>` and referenced indirectly, so a url to image would occurs at most once per page. Images that occur on many pages would be relatively a small portion.\n\nIf we use hex numbers, each time I want to search the obj in the PDF, I have to convert it to decimal in a calculator first, it is a pain (have been encountered it with bgXXX.svg).\n\nSo at least, give user an option to use decimal instead of hex. \n\nShorter prefix is ok to me. However, `o(\\d+).jpg` doesn't work for hex number.\n\nI want to avoid creation of additional temp object, however I just remember [Return value optimization](http://en.wikipedia.org/wiki/Return_value_optimization), so may be it's OK to just create and return a string.\n",
        "created_at": "2014-06-14T01:29:33Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13778062",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13778062"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13778062"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13778098",
        "pull_request_review_id": null,
        "id": 13778098,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzc4MDk4",
        "diff_hunk": "@@ -129,6 +189,55 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string & CairoBackgroundRenderer::build_bitmap_path(int id, string & path)\n+{\n+    // \"po\" for \"PDF Object\"\n+    return path = html_renderer->str_fmt(\"%s/po-%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 129,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see, in that case can you change `bg%x` to `bg%d`? Sorry to ask you to do this, just want to make everything consistent. I will add an option if necessary.\n\nAbout the image reference, what I meant is that an image is defined (in `<defs>` as you mentioned), and then used for multiple times in a page. So why do you say `at most once`? But again, we can wait until someone complained about this for now.\n\nYou don't need to worry about  temporary objects, even without RVO, there is _rvalue reference_ in c++11, and I believe that `std::string` in a recent C++ library should has integrated this feature.\n",
        "created_at": "2014-06-14T01:34:38Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13778098",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13778098"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13778098"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13778658",
        "pull_request_review_id": null,
        "id": 13778658,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzc4NjU4",
        "diff_hunk": "@@ -129,6 +189,55 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string & CairoBackgroundRenderer::build_bitmap_path(int id, string & path)\n+{\n+    // \"po\" for \"PDF Object\"\n+    return path = html_renderer->str_fmt(\"%s/po-%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 129,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Its OK to make some local change for me. I note that if `--split-pages` is on, it use decimal page numbers for content, so it is not that consistent? I'd rather have decimal the default, hex as an option.\n\nIn SVG an image is defined like this:`<image id=\"image5\" width=\"4441\" height=\"413\" xlink:href=\"po-16.jpg\"/>` in `<defs>`\uff0cand is used like this: `<use xlink:href=\"#image5\" transform=\"matrix(0.48,0,0,0.48,-1048.846,0)\"/>`, so the url \"po-16.jpg\" occurs only once in this page, no matter how many `<use>` there are.\n\nThanks for mentioning rvalue reference, I'm not familiar with it yet.\n",
        "created_at": "2014-06-14T03:23:34Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13778658",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13778658"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13778658"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13778864",
        "pull_request_review_id": null,
        "id": 13778864,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzc4ODY0",
        "diff_hunk": "@@ -129,6 +189,55 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string & CairoBackgroundRenderer::build_bitmap_path(int id, string & path)\n+{\n+    // \"po\" for \"PDF Object\"\n+    return path = html_renderer->str_fmt(\"%s/po-%d.jpg\", param.dest_dir.c_str(), id);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 129,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "75780998fdb5f575b39a7410abbb847e79a661c3",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, it was inconsistent. I didn't mean local change, I mean could you add that to this PR? You can make the option if you like, but ok otherwise.\n\nI was actually worried about the usage of `image5` in your case, now I understand it's in cairo and probably we cannot control it. Thanks.\n\nRvalue reference is basically a mechanism to tell the compiler that the old value is not used any more, so for `std::string` or `std::vector`, which holds a pointer to the actually data internally, the compilers are now clever enough to copy the pointers instead of the content.\n",
        "created_at": "2014-06-14T04:15:31Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13778864",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13778864"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13778864"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13829882",
        "pull_request_review_id": null,
        "id": 13829882,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODI5ODgy",
        "diff_hunk": "@@ -129,6 +188,54 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string CairoBackgroundRenderer::build_bitmap_path(int id)\n+{\n+    // \"o\" for \"PDF Object\"\n+    return string(html_renderer->str_fmt(\"%s/o%d.jpg\", param.dest_dir.c_str(), id));\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;\n+    auto uri = strdup((char*) html_renderer->str_fmt(\"o%d.jpg\", imgId));\n+    auto st = cairo_surface_set_mime_data(image, CAIRO_MIME_TYPE_URI,\n+        (unsigned char*) uri, strlen(uri), free, uri);\n+    if (st)\n+    {\n+        free(uri);\n+        return;\n+    }\n+    bitmaps_in_current_page.push_back(imgId);\n+\n+    if(bitmaps_ref_count.find(imgId) != bitmaps_ref_count.end())\n+        return;\n+\n+    bitmaps_ref_count[imgId] = 0;\n+\n+    char *strBuffer;\n+    int len;\n+    if (getStreamData(str->getNextStream(), &strBuffer, &len))\n+    {\n+        ofstream imgfile(build_bitmap_path(imgId), ofstream::binary);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 167,
        "original_position": 167,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "8dc6c7b88facfc47914afb87a8fb12576ece63a2",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just to make sure (again) that DCT means jpg ?\nDo you think it's a good idea to change `build_bitmap_path` to `build_jpg_path` or something? \nBecause at one moment I was worrying about if this needs linking with libjpeg (which actually does not, right?)\n",
        "created_at": "2014-06-16T20:53:36Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13829882",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13829882"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13829882"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13830101",
        "pull_request_review_id": null,
        "id": 13830101,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODMwMTAx",
        "diff_hunk": "@@ -153,23 +177,14 @@ void SplashBackgroundRenderer::dump_image(const char * filename, int x1, int y1,\n     // use unique_ptr to auto delete the object upon exception\n     unique_ptr<ImgWriter> writer;\n \n-    if(false) { }\n-#ifdef ENABLE_LIBPNG\n-    else if(param.bg_format == \"png\")\n+    if(format == \"png\")\n     {\n         writer = unique_ptr<ImgWriter>(new PNGWriter);\n     }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    else if(param.bg_format == \"jpg\")\n+    else if(format == \"jpg\")\n     {\n         writer = unique_ptr<ImgWriter>(new JpegWriter);\n     }\n-#endif\n-    else",
        "path": "src/BackgroundRenderer/SplashBackgroundRenderer.cc",
        "position": null,
        "original_position": 101,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "8dc6c7b88facfc47914afb87a8fb12576ece63a2",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why do you remove this case?\nIt helps making the code robust, and the functions independent.\n",
        "created_at": "2014-06-16T20:57:28Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13830101",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13830101"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13830101"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13840632",
        "pull_request_review_id": null,
        "id": 13840632,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODQwNjMy",
        "diff_hunk": "@@ -153,23 +177,14 @@ void SplashBackgroundRenderer::dump_image(const char * filename, int x1, int y1,\n     // use unique_ptr to auto delete the object upon exception\n     unique_ptr<ImgWriter> writer;\n \n-    if(false) { }\n-#ifdef ENABLE_LIBPNG\n-    else if(param.bg_format == \"png\")\n+    if(format == \"png\")\n     {\n         writer = unique_ptr<ImgWriter>(new PNGWriter);\n     }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    else if(param.bg_format == \"jpg\")\n+    else if(format == \"jpg\")\n     {\n         writer = unique_ptr<ImgWriter>(new JpegWriter);\n     }\n-#endif\n-    else",
        "path": "src/BackgroundRenderer/SplashBackgroundRenderer.cc",
        "position": null,
        "original_position": 101,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "8dc6c7b88facfc47914afb87a8fb12576ece63a2",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It seems that `SplashBackgroundRenderer`'s constructor already fails if the format is not supported, so this functon has no chance to run. By 'independent' do you mean this function my be moved to another place in future?\n",
        "created_at": "2014-06-17T02:32:28Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13840632",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13840632"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13840632"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13840673",
        "pull_request_review_id": null,
        "id": 13840673,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODQwNjcz",
        "diff_hunk": "@@ -153,23 +177,14 @@ void SplashBackgroundRenderer::dump_image(const char * filename, int x1, int y1,\n     // use unique_ptr to auto delete the object upon exception\n     unique_ptr<ImgWriter> writer;\n \n-    if(false) { }\n-#ifdef ENABLE_LIBPNG\n-    else if(param.bg_format == \"png\")\n+    if(format == \"png\")\n     {\n         writer = unique_ptr<ImgWriter>(new PNGWriter);\n     }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    else if(param.bg_format == \"jpg\")\n+    else if(format == \"jpg\")\n     {\n         writer = unique_ptr<ImgWriter>(new JpegWriter);\n     }\n-#endif\n-    else",
        "path": "src/BackgroundRenderer/SplashBackgroundRenderer.cc",
        "position": null,
        "original_position": 101,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "8dc6c7b88facfc47914afb87a8fb12576ece63a2",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The logic here depends on the logic in the constructor, which is a hidden dependency. \nUsually I'd try to make each function independent as much as possible, unless it cannot be done with minimum overhead.\n\nIt's just easier to maintain this way.\n",
        "created_at": "2014-06-17T02:34:44Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13840673",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13840673"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13840673"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13840931",
        "pull_request_review_id": null,
        "id": 13840931,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODQwOTMx",
        "diff_hunk": "@@ -129,6 +188,54 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string CairoBackgroundRenderer::build_bitmap_path(int id)\n+{\n+    // \"o\" for \"PDF Object\"\n+    return string(html_renderer->str_fmt(\"%s/o%d.jpg\", param.dest_dir.c_str(), id));\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;\n+    auto uri = strdup((char*) html_renderer->str_fmt(\"o%d.jpg\", imgId));\n+    auto st = cairo_surface_set_mime_data(image, CAIRO_MIME_TYPE_URI,\n+        (unsigned char*) uri, strlen(uri), free, uri);\n+    if (st)\n+    {\n+        free(uri);\n+        return;\n+    }\n+    bitmaps_in_current_page.push_back(imgId);\n+\n+    if(bitmaps_ref_count.find(imgId) != bitmaps_ref_count.end())\n+        return;\n+\n+    bitmaps_ref_count[imgId] = 0;\n+\n+    char *strBuffer;\n+    int len;\n+    if (getStreamData(str->getNextStream(), &strBuffer, &len))\n+    {\n+        ofstream imgfile(build_bitmap_path(imgId), ofstream::binary);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 167,
        "original_position": 167,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "8dc6c7b88facfc47914afb87a8fb12576ece63a2",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, DCT means jpg in PDF.\n\nWe may support dumping bitmaps encoded in other formats in furture, and the dumped format may not be sololy jpg (Deflate/CCITT/JBIG2 -> png, JPX -> jpg, I think), and `build_bitmap_path` could be refactored then.\n\nCurrently libjpeg is not required, because the DCT images are not re-encoded, just dumped. However if we want to dump other format in future, re-encoding is needed, and libjpeg/libpng are required. However, if svg bg is enabled, cairo alway re-encodes images except DCT into png format, so libpng is needed after all.\n\nJust be curious, why give users options to not link with libjpeg or libpng? these libraries are so common, and not big.\n",
        "created_at": "2014-06-17T02:51:22Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13840931",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13840931"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13840931"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13840978",
        "pull_request_review_id": null,
        "id": 13840978,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODQwOTc4",
        "diff_hunk": "@@ -129,6 +188,54 @@ void CairoBackgroundRenderer::embed_image(int pageno)\n     f_page << \"\\\"/>\";\n }\n \n+string CairoBackgroundRenderer::build_bitmap_path(int id)\n+{\n+    // \"o\" for \"PDF Object\"\n+    return string(html_renderer->str_fmt(\"%s/o%d.jpg\", param.dest_dir.c_str(), id));\n+}\n+// Override CairoOutputDev::setMimeData() and dump bitmaps in SVG to external files.\n+void CairoBackgroundRenderer::setMimeData(Stream *str, Object *ref, cairo_surface_t *image)\n+{\n+    if (param.svg_embed_bitmap)\n+    {\n+        CairoOutputDev::setMimeData(str, ref, image);\n+        return;\n+    }\n+\n+    // TODO dump bitmaps in other formats.\n+    if (str->getKind() != strDCT)\n+        return;\n+\n+    // TODO inline image?\n+    if (ref == nullptr || !ref->isRef())\n+        return;\n+\n+    int imgId = ref->getRef().num;\n+    auto uri = strdup((char*) html_renderer->str_fmt(\"o%d.jpg\", imgId));\n+    auto st = cairo_surface_set_mime_data(image, CAIRO_MIME_TYPE_URI,\n+        (unsigned char*) uri, strlen(uri), free, uri);\n+    if (st)\n+    {\n+        free(uri);\n+        return;\n+    }\n+    bitmaps_in_current_page.push_back(imgId);\n+\n+    if(bitmaps_ref_count.find(imgId) != bitmaps_ref_count.end())\n+        return;\n+\n+    bitmaps_ref_count[imgId] = 0;\n+\n+    char *strBuffer;\n+    int len;\n+    if (getStreamData(str->getNextStream(), &strBuffer, &len))\n+    {\n+        ofstream imgfile(build_bitmap_path(imgId), ofstream::binary);",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 167,
        "original_position": 167,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "8dc6c7b88facfc47914afb87a8fb12576ece63a2",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "One of the reasons is that poppler may be built without them, if poppler is not, there's nothing we can do here except for showing warnings.\n",
        "created_at": "2014-06-17T02:53:54Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13840978",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13840978"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13840978"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13841072",
        "pull_request_review_id": null,
        "id": 13841072,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODQxMDcy",
        "diff_hunk": "@@ -153,23 +177,14 @@ void SplashBackgroundRenderer::dump_image(const char * filename, int x1, int y1,\n     // use unique_ptr to auto delete the object upon exception\n     unique_ptr<ImgWriter> writer;\n \n-    if(false) { }\n-#ifdef ENABLE_LIBPNG\n-    else if(param.bg_format == \"png\")\n+    if(format == \"png\")\n     {\n         writer = unique_ptr<ImgWriter>(new PNGWriter);\n     }\n-#endif\n-#ifdef ENABLE_LIBJPEG\n-    else if(param.bg_format == \"jpg\")\n+    else if(format == \"jpg\")\n     {\n         writer = unique_ptr<ImgWriter>(new JpegWriter);\n     }\n-#endif\n-    else",
        "path": "src/BackgroundRenderer/SplashBackgroundRenderer.cc",
        "position": null,
        "original_position": 101,
        "commit_id": "ac8208a6938b83dc259b026f72404dfbddf7a269",
        "original_commit_id": "8dc6c7b88facfc47914afb87a8fb12576ece63a2",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see, I'll bring them back.\n",
        "created_at": "2014-06-17T03:00:17Z",
        "updated_at": "2014-06-17T04:36:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13841072",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13841072"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/360#discussion_r13841072"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/360"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14275421",
        "pull_request_review_id": null,
        "id": 14275421,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjc1NDIx",
        "diff_hunk": "@@ -26,14 +27,20 @@ class BackgroundRenderer\n     // Currently only svg bg format might need a bitmap fallback.\n     static BackgroundRenderer * getFallbackBackgroundRenderer(HTMLRenderer * html_renderer, const Param & param);\n \n-    BackgroundRenderer() {}\n-    virtual ~BackgroundRenderer() {}\n+    BackgroundRenderer(): proof_state(nullptr) {}\n+    virtual ~BackgroundRenderer();\n \n     virtual void init(PDFDoc * doc) = 0;\n     //return true on success, false otherwise (e.g. need a fallback)\n     virtual bool render_page(PDFDoc * doc, int pageno) = 0;\n     virtual void embed_image(int pageno) = 0;\n \n+    // for proof output\n+protected:\n+    void proof_begin_string(GfxState *state);\n+    void proof_end_text_object(GfxState *state);\n+private:\n+    GfxState * proof_state;",
        "path": "src/BackgroundRenderer/BackgroundRenderer.h",
        "position": null,
        "original_position": 27,
        "commit_id": "0b821655435dff7e09ab12798b836e52dc77b880",
        "original_commit_id": "f8d8a58deb96a44e81618e9970e5730aac6d6c63",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You may use `std::unique_ptr` to make it simpler.\n",
        "created_at": "2014-06-27T00:44:18Z",
        "updated_at": "2014-06-27T08:12:42Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14275421",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14275421"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14275421"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14275531",
        "pull_request_review_id": null,
        "id": 14275531,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjc1NTMx",
        "diff_hunk": "@@ -49,4 +49,57 @@ BackgroundRenderer * BackgroundRenderer::getFallbackBackgroundRenderer(HTMLRende\n     return nullptr;\n }\n \n+BackgroundRenderer::~BackgroundRenderer()\n+{\n+    //delete proof_state\n+    if (proof_state)\n+        delete proof_state;\n+}\n+\n+void BackgroundRenderer::proof_begin_string(GfxState *state)\n+{\n+    auto dev = (OutputDev*) dynamic_cast<SplashBackgroundRenderer*>(this);\n+    if (!dev)\n+        dev = (OutputDev*) dynamic_cast<CairoBackgroundRenderer*>(this);\n+\n+    if (!proof_state)\n+    {\n+        PDFRectangle rect(0, 0, state->getPageWidth(), state->getPageHeight());\n+        proof_state = new GfxState(state->getHDPI(), state->getVDPI(), &rect, state->getRotate(), dev->upsideDown());\n+        proof_state->setFillColorSpace(new GfxDeviceRGBColorSpace());\n+        proof_state->setStrokeColorSpace(new GfxDeviceRGBColorSpace());\n+    }\n+\n+    Color fc, sc, red(1, 0, 0), green(0, 1, 0), blue(0, 0, 1), yellow(1, 1, 0);\n+    state->getFillRGB(&fc.rgb);\n+    state->getStrokeRGB(&sc.rgb);\n+\n+    fc = fc.distance(red) >  0.4 ?  red : green;\n+    sc = sc.distance(blue) >  0.4 ? blue : yellow;\n+\n+    if (state->getFillColorSpace()->getMode() != csDeviceRGB)\n+        dev->updateFillColorSpace(proof_state);\n+    if (state->getStrokeColorSpace()->getMode() != csDeviceRGB)\n+        dev->updateStrokeColorSpace(proof_state);\n+    GfxColor gfc, gsc;\n+    fc.get_gfx_color(gfc);\n+    sc.get_gfx_color(gsc);\n+    proof_state->setFillColor(&gfc);\n+    proof_state->setStrokeColor(&gsc);\n+    dev->updateFillColor(proof_state);\n+    dev->updateStrokeColor(proof_state);\n+}\n+\n+void BackgroundRenderer::proof_end_text_object(GfxState *state)\n+{\n+    auto dev = (OutputDev*) dynamic_cast<SplashBackgroundRenderer*>(this);",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 47,
        "commit_id": "0b821655435dff7e09ab12798b836e52dc77b880",
        "original_commit_id": "f8d8a58deb96a44e81618e9970e5730aac6d6c63",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm.. this looks weird.. \nProbably it's better to add a virtual function `getoutputdev` to BackgroundRenderer.\nWhat do you say?\n",
        "created_at": "2014-06-27T00:48:36Z",
        "updated_at": "2014-06-27T08:12:42Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14275531",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14275531"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14275531"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14275592",
        "pull_request_review_id": null,
        "id": 14275592,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjc1NTky",
        "diff_hunk": "@@ -49,4 +49,57 @@ BackgroundRenderer * BackgroundRenderer::getFallbackBackgroundRenderer(HTMLRende\n     return nullptr;\n }\n \n+BackgroundRenderer::~BackgroundRenderer()\n+{\n+    //delete proof_state\n+    if (proof_state)\n+        delete proof_state;\n+}\n+\n+void BackgroundRenderer::proof_begin_string(GfxState *state)\n+{\n+    auto dev = (OutputDev*) dynamic_cast<SplashBackgroundRenderer*>(this);\n+    if (!dev)\n+        dev = (OutputDev*) dynamic_cast<CairoBackgroundRenderer*>(this);\n+\n+    if (!proof_state)\n+    {\n+        PDFRectangle rect(0, 0, state->getPageWidth(), state->getPageHeight());\n+        proof_state = new GfxState(state->getHDPI(), state->getVDPI(), &rect, state->getRotate(), dev->upsideDown());",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 20,
        "commit_id": "0b821655435dff7e09ab12798b836e52dc77b880",
        "original_commit_id": "f8d8a58deb96a44e81618e9970e5730aac6d6c63",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There is a `GfxState::copy`, wondering if that can be used.\nBut it allocates a new state everytime.\n",
        "created_at": "2014-06-27T00:51:18Z",
        "updated_at": "2014-06-27T08:12:42Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14275592",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14275592"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14275592"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14277251",
        "pull_request_review_id": null,
        "id": 14277251,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjc3MjUx",
        "diff_hunk": "@@ -26,14 +27,20 @@ class BackgroundRenderer\n     // Currently only svg bg format might need a bitmap fallback.\n     static BackgroundRenderer * getFallbackBackgroundRenderer(HTMLRenderer * html_renderer, const Param & param);\n \n-    BackgroundRenderer() {}\n-    virtual ~BackgroundRenderer() {}\n+    BackgroundRenderer(): proof_state(nullptr) {}\n+    virtual ~BackgroundRenderer();\n \n     virtual void init(PDFDoc * doc) = 0;\n     //return true on success, false otherwise (e.g. need a fallback)\n     virtual bool render_page(PDFDoc * doc, int pageno) = 0;\n     virtual void embed_image(int pageno) = 0;\n \n+    // for proof output\n+protected:\n+    void proof_begin_string(GfxState *state);\n+    void proof_end_text_object(GfxState *state);\n+private:\n+    GfxState * proof_state;",
        "path": "src/BackgroundRenderer/BackgroundRenderer.h",
        "position": null,
        "original_position": 27,
        "commit_id": "0b821655435dff7e09ab12798b836e52dc77b880",
        "original_commit_id": "f8d8a58deb96a44e81618e9970e5730aac6d6c63",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good point.\n",
        "created_at": "2014-06-27T02:10:54Z",
        "updated_at": "2014-06-27T08:12:42Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14277251",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14277251"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14277251"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14277311",
        "pull_request_review_id": null,
        "id": 14277311,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjc3MzEx",
        "diff_hunk": "@@ -49,4 +49,57 @@ BackgroundRenderer * BackgroundRenderer::getFallbackBackgroundRenderer(HTMLRende\n     return nullptr;\n }\n \n+BackgroundRenderer::~BackgroundRenderer()\n+{\n+    //delete proof_state\n+    if (proof_state)\n+        delete proof_state;\n+}\n+\n+void BackgroundRenderer::proof_begin_string(GfxState *state)\n+{\n+    auto dev = (OutputDev*) dynamic_cast<SplashBackgroundRenderer*>(this);\n+    if (!dev)\n+        dev = (OutputDev*) dynamic_cast<CairoBackgroundRenderer*>(this);\n+\n+    if (!proof_state)\n+    {\n+        PDFRectangle rect(0, 0, state->getPageWidth(), state->getPageHeight());\n+        proof_state = new GfxState(state->getHDPI(), state->getVDPI(), &rect, state->getRotate(), dev->upsideDown());\n+        proof_state->setFillColorSpace(new GfxDeviceRGBColorSpace());\n+        proof_state->setStrokeColorSpace(new GfxDeviceRGBColorSpace());\n+    }\n+\n+    Color fc, sc, red(1, 0, 0), green(0, 1, 0), blue(0, 0, 1), yellow(1, 1, 0);\n+    state->getFillRGB(&fc.rgb);\n+    state->getStrokeRGB(&sc.rgb);\n+\n+    fc = fc.distance(red) >  0.4 ?  red : green;\n+    sc = sc.distance(blue) >  0.4 ? blue : yellow;\n+\n+    if (state->getFillColorSpace()->getMode() != csDeviceRGB)\n+        dev->updateFillColorSpace(proof_state);\n+    if (state->getStrokeColorSpace()->getMode() != csDeviceRGB)\n+        dev->updateStrokeColorSpace(proof_state);\n+    GfxColor gfc, gsc;\n+    fc.get_gfx_color(gfc);\n+    sc.get_gfx_color(gsc);\n+    proof_state->setFillColor(&gfc);\n+    proof_state->setStrokeColor(&gsc);\n+    dev->updateFillColor(proof_state);\n+    dev->updateStrokeColor(proof_state);\n+}\n+\n+void BackgroundRenderer::proof_end_text_object(GfxState *state)\n+{\n+    auto dev = (OutputDev*) dynamic_cast<SplashBackgroundRenderer*>(this);",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 47,
        "commit_id": "0b821655435dff7e09ab12798b836e52dc77b880",
        "original_commit_id": "f8d8a58deb96a44e81618e9970e5730aac6d6c63",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes it is. I think it's even better to add a `outputdev` parameter to `proof_begin_string()` `proof_end_text_object()`.\n",
        "created_at": "2014-06-27T02:13:33Z",
        "updated_at": "2014-06-27T08:12:42Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14277311",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14277311"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14277311"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14277464",
        "pull_request_review_id": null,
        "id": 14277464,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjc3NDY0",
        "diff_hunk": "@@ -49,4 +49,57 @@ BackgroundRenderer * BackgroundRenderer::getFallbackBackgroundRenderer(HTMLRende\n     return nullptr;\n }\n \n+BackgroundRenderer::~BackgroundRenderer()\n+{\n+    //delete proof_state\n+    if (proof_state)\n+        delete proof_state;\n+}\n+\n+void BackgroundRenderer::proof_begin_string(GfxState *state)\n+{\n+    auto dev = (OutputDev*) dynamic_cast<SplashBackgroundRenderer*>(this);\n+    if (!dev)\n+        dev = (OutputDev*) dynamic_cast<CairoBackgroundRenderer*>(this);\n+\n+    if (!proof_state)\n+    {\n+        PDFRectangle rect(0, 0, state->getPageWidth(), state->getPageHeight());\n+        proof_state = new GfxState(state->getHDPI(), state->getVDPI(), &rect, state->getRotate(), dev->upsideDown());",
        "path": "src/BackgroundRenderer/BackgroundRenderer.cc",
        "position": null,
        "original_position": 20,
        "commit_id": "0b821655435dff7e09ab12798b836e52dc77b880",
        "original_commit_id": "f8d8a58deb96a44e81618e9970e5730aac6d6c63",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Previously I did use `GfxState::copy()`, but found that I still need to reset a few properties, e.g. pattern, and creating a new one seemed simpler. Additionally,  `GfxState::copy()` also copies path, which is not necessary, choosing not to copy path leads to memory error, may be poppler's bug.\n",
        "created_at": "2014-06-27T02:20:52Z",
        "updated_at": "2014-06-27T08:12:42Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14277464",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14277464"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/371#discussion_r14277464"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/371"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13868904",
        "pull_request_review_id": null,
        "id": 13868904,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODY4OTA0",
        "diff_hunk": "@@ -242,6 +242,11 @@ If set to 0, pdf2htmlEX would try its best to balance the two methods above.\n .B --optimize-text <0|1> (Default: 0)\n If set to 1, pdf2htmlEX will try to reduce the number of HTML elements used for text. Turn it off if anything goes wrong.\n \n+.TP\n+.B --process-covered-text <0|1> (Default: 0)",
        "path": "pdf2htmlEX.1.in",
        "position": null,
        "original_position": 5,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "d88db20e2278a9a2d4e6daf62ab20f13859439c4",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`--process` of pdf2htmlEX usually means a simple switch for a groups of elements defined in PDF, for example (nontext, outline, annotation, type3 etc)\n\nCovered text, on the other hand, require lots of efforts to recognize, which is kind of different.\nLet me see if I can come up with better names.\n",
        "created_at": "2014-06-17T16:13:35Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r13868904",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13868904"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r13868904"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13906759",
        "pull_request_review_id": null,
        "id": 13906759,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTA2NzU5",
        "diff_hunk": "@@ -242,6 +242,11 @@ If set to 0, pdf2htmlEX would try its best to balance the two methods above.\n .B --optimize-text <0|1> (Default: 0)\n If set to 1, pdf2htmlEX will try to reduce the number of HTML elements used for text. Turn it off if anything goes wrong.\n \n+.TP\n+.B --process-covered-text <0|1> (Default: 0)",
        "path": "pdf2htmlEX.1.in",
        "position": null,
        "original_position": 5,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "d88db20e2278a9a2d4e6daf62ab20f13859439c4",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about `--arrange-covered-text` ?\n",
        "created_at": "2014-06-18T09:37:31Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r13906759",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13906759"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r13906759"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13949367",
        "pull_request_review_id": null,
        "id": 13949367,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTQ5MzY3",
        "diff_hunk": "@@ -242,6 +242,11 @@ If set to 0, pdf2htmlEX would try its best to balance the two methods above.\n .B --optimize-text <0|1> (Default: 0)\n If set to 1, pdf2htmlEX will try to reduce the number of HTML elements used for text. Turn it off if anything goes wrong.\n \n+.TP\n+.B --process-covered-text <0|1> (Default: 0)",
        "path": "pdf2htmlEX.1.in",
        "position": null,
        "original_position": 5,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "d88db20e2278a9a2d4e6daf62ab20f13859439c4",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Still something wrong I think. \nDon't worry, I'll try to propose a few more later.\n",
        "created_at": "2014-06-19T01:08:19Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r13949367",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/13949367"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r13949367"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14068307",
        "pull_request_review_id": null,
        "id": 14068307,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDY4MzA3",
        "diff_hunk": "@@ -242,6 +242,11 @@ If set to 0, pdf2htmlEX would try its best to balance the two methods above.\n .B --optimize-text <0|1> (Default: 0)\n If set to 1, pdf2htmlEX will try to reduce the number of HTML elements used for text. Turn it off if anything goes wrong.\n \n+.TP\n+.B --process-covered-text <0|1> (Default: 0)",
        "path": "pdf2htmlEX.1.in",
        "position": null,
        "original_position": 5,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "d88db20e2278a9a2d4e6daf62ab20f13859439c4",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about \n`--check-text-visibility`\n`--text-visibility-check`\n\nCould replace `check` with `detect`, `ensure` etc.\n",
        "created_at": "2014-06-23T10:14:32Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14068307",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14068307"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14068307"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14069044",
        "pull_request_review_id": null,
        "id": 14069044,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDY5MDQ0",
        "diff_hunk": "@@ -242,6 +242,11 @@ If set to 0, pdf2htmlEX would try its best to balance the two methods above.\n .B --optimize-text <0|1> (Default: 0)\n If set to 1, pdf2htmlEX will try to reduce the number of HTML elements used for text. Turn it off if anything goes wrong.\n \n+.TP\n+.B --process-covered-text <0|1> (Default: 0)",
        "path": "pdf2htmlEX.1.in",
        "position": null,
        "original_position": 5,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "d88db20e2278a9a2d4e6daf62ab20f13859439c4",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "'Check' or 'detect' don't imply the output is being adjusted. 'Ensure' is better, how about 'correct'?\n",
        "created_at": "2014-06-23T10:41:02Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14069044",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14069044"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14069044"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14170198",
        "pull_request_review_id": null,
        "id": 14170198,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTcwMTk4",
        "diff_hunk": "@@ -86,20 +98,20 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n              * There are always ugly PDF files with no useful info at all.\n              */\n             is_space = true;\n-            ++nSpaces;\n+            ddx += cur_word_space * cur_horiz_scaling;",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 55,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "1d4cbdf2bc9305569890c1071b081900f11c3e06",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So for spaces, you add word_spacing into `ddx`, which might not be correct.\n",
        "created_at": "2014-06-25T06:03:25Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14170198",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14170198"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14170198"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14170348",
        "pull_request_review_id": null,
        "id": 14170348,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTcwMzQ4",
        "diff_hunk": "@@ -86,20 +98,20 @@ void HTMLRenderer::drawString(GfxState * state, GooString * s)\n              * There are always ugly PDF files with no useful info at all.\n              */\n             is_space = true;\n-            ++nSpaces;\n+            ddx += cur_word_space * cur_horiz_scaling;",
        "path": "src/HTMLRenderer/text.cc",
        "position": null,
        "original_position": 55,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "1d4cbdf2bc9305569890c1071b081900f11c3e06",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "because sometimes space is not rendered as offset, but a ` ` char\n",
        "created_at": "2014-06-25T06:11:29Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14170348",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14170348"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14170348"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14275679",
        "pull_request_review_id": null,
        "id": 14275679,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjc1Njc5",
        "diff_hunk": "@@ -242,6 +242,11 @@ If set to 0, pdf2htmlEX would try its best to balance the two methods above.\n .B --optimize-text <0|1> (Default: 0)\n If set to 1, pdf2htmlEX will try to reduce the number of HTML elements used for text. Turn it off if anything goes wrong.\n \n+.TP\n+.B --process-covered-text <0|1> (Default: 0)",
        "path": "pdf2htmlEX.1.in",
        "position": null,
        "original_position": 5,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "d88db20e2278a9a2d4e6daf62ab20f13859439c4",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm.. normally all the options will affect the output somehow, or it won't make any sense.\n",
        "created_at": "2014-06-27T00:55:01Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14275679",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14275679"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14275679"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14283878",
        "pull_request_review_id": null,
        "id": 14283878,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjgzODc4",
        "diff_hunk": "@@ -14,6 +14,9 @@\n #include \"util/namespace.h\"\n #include \"util/unicode.h\"\n \n+//#define HR_DEBUG(x)  (x)\n+#define HR_DEBUG(x)",
        "path": "src/HTMLRenderer/text.cc",
        "position": 5,
        "original_position": 5,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "b7188181270184ca91c73c09221be26bb02111c9",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I hope you can remove this macros. \nIf you really need them, please define in util.h/util.cc, and use a more general name.\n",
        "created_at": "2014-06-27T08:34:19Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14283878",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14283878"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14283878"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14283893",
        "pull_request_review_id": null,
        "id": 14283893,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjgzODkz",
        "diff_hunk": "@@ -14,6 +14,9 @@\n #include \"util/namespace.h\"\n #include \"util/unicode.h\"\n \n+//#define HR_DEBUG(x)  (x)\n+#define HR_DEBUG(x)",
        "path": "src/HTMLRenderer/text.cc",
        "position": 5,
        "original_position": 5,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "b7188181270184ca91c73c09221be26bb02111c9",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There is a `param.debug`, you can use it, or assign bits for different parts.\n",
        "created_at": "2014-06-27T08:35:00Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14283893",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14283893"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14283893"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14287775",
        "pull_request_review_id": null,
        "id": 14287775,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjg3Nzc1",
        "diff_hunk": "@@ -14,6 +14,9 @@\n #include \"util/namespace.h\"\n #include \"util/unicode.h\"\n \n+//#define HR_DEBUG(x)  (x)\n+#define HR_DEBUG(x)",
        "path": "src/HTMLRenderer/text.cc",
        "position": 5,
        "original_position": 5,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "b7188181270184ca91c73c09221be26bb02111c9",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "These macros are inspired by `LOG()` macro in `CairoOutputDev.cc`.\n\nThese debug info can be overwhelming, and may be not useful/mature enough for normal users, so I didn't make it under the control of param.debug.\n\nThese macros are also considered as local and private, so I didn't place them in a .h file, this is also good for compiling speed.\n\nIf you don't like them, I can move them to my private branch. \n\nP.S., I can't find util.h/util.cc.\n",
        "created_at": "2014-06-27T10:53:26Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14287775",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14287775"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14287775"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14308725",
        "pull_request_review_id": null,
        "id": 14308725,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzA4NzI1",
        "diff_hunk": "@@ -0,0 +1,62 @@\n+/*\n+ * CoveredTextHandler.cc\n+ *\n+ *  Created on: 2014-6-14\n+ *      Author: duanyao\n+ */\n+\n+#include \"CoveredTextHandler.h\"\n+\n+#include \"util/math.h\"\n+\n+namespace pdf2htmlEX {\n+\n+CoveredTextHandler::CoveredTextHandler()\n+{\n+    // TODO Auto-generated constructor stub",
        "path": "src/CoveredTextHandler.cc",
        "position": null,
        "original_position": 16,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "e8232f1362809367a4f9e6e89ae74ec1633b9889",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm. are these useful?\n",
        "created_at": "2014-06-27T18:48:38Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14308725",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14308725"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14308725"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14308735",
        "pull_request_review_id": null,
        "id": 14308735,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzA4NzM1",
        "diff_hunk": "@@ -0,0 +1,62 @@\n+/*\n+ * CoveredTextHandler.cc\n+ *\n+ *  Created on: 2014-6-14\n+ *      Author: duanyao\n+ */\n+\n+#include \"CoveredTextHandler.h\"\n+\n+#include \"util/math.h\"\n+\n+namespace pdf2htmlEX {\n+\n+CoveredTextHandler::CoveredTextHandler()\n+{\n+    // TODO Auto-generated constructor stub\n+\n+}\n+\n+CoveredTextHandler::~CoveredTextHandler()\n+{",
        "path": "src/CoveredTextHandler.cc",
        "position": null,
        "original_position": 21,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "e8232f1362809367a4f9e6e89ae74ec1633b9889",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "And this?\n",
        "created_at": "2014-06-27T18:48:46Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14308735",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14308735"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14308735"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14308914",
        "pull_request_review_id": null,
        "id": 14308914,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzA4OTE0",
        "diff_hunk": "@@ -0,0 +1,63 @@\n+/*\n+ * CoveredTextHandler.h\n+ *\n+ *  Created on: 2014-6-14\n+ *      Author: duanyao\n+ */\n+\n+#ifndef COVEREDTEXTHANDLER_H__\n+#define COVEREDTEXTHANDLER_H__\n+\n+#include <vector>\n+\n+namespace pdf2htmlEX {\n+\n+/**\n+ * Detect characters that are covered by non-char graphics on a page.\n+ */\n+class CoveredTextHandler\n+{\n+public:\n+    CoveredTextHandler();\n+    virtual ~CoveredTextHandler();\n+\n+    /**\n+     * Reset to initial state. Should be called when start drawing a page.\n+     */\n+    void reset();\n+\n+    /**\n+     * Add a drawn character's bounding box.\n+     * @param bbox (x0, y0, x1, y1)\n+     */\n+    void add_char_bbox(double * bbox);\n+\n+    void add_char_bbox_clipped(double * bbox, bool patially);\n+\n+    /**\n+     * Add a drawn non-char graphics' bounding box.\n+     * If it intersects any previously drawn char's bbox, the char is marked as covered\n+     * and treated as an non-char.\n+     * @param bbox (x0, y0, x1, y1)\n+     * @param index this graphics' drawing order: assume it is drawn after (index-1)th\n+     *   char. -1 means after the last char.\n+     */\n+    void add_non_char_bbox(double * bbox, int index = -1);\n+\n+    /**\n+     * An array of flags indicating whether a char is covered by any non-char graphics.\n+     * Index by the order that these chars are added.\n+     * This vector grows as add_char_bbox() is called, so its size is the count\n+     * of currently drawn chars.\n+     */\n+    const std::vector<bool> & get_chars_covered() { return chars_covered; }\n+\n+private:\n+    std::vector<bool> chars_covered;\n+    // x00, y00, x01, y01; x10, y10, x11, y11;...\n+    std::vector<double> char_bboxes;",
        "path": "src/CoveredTextHandler.h",
        "position": null,
        "original_position": 58,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "e8232f1362809367a4f9e6e89ae74ec1633b9889",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Probably I'll change this to a vector of struct in the future.  But let's just keep it this way for now.\n",
        "created_at": "2014-06-27T18:52:09Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14308914",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14308914"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14308914"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14309014",
        "pull_request_review_id": null,
        "id": 14309014,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzA5MDE0",
        "diff_hunk": "@@ -0,0 +1,63 @@\n+/*\n+ * CoveredTextHandler.h\n+ *\n+ *  Created on: 2014-6-14\n+ *      Author: duanyao\n+ */\n+\n+#ifndef COVEREDTEXTHANDLER_H__\n+#define COVEREDTEXTHANDLER_H__\n+\n+#include <vector>\n+\n+namespace pdf2htmlEX {\n+\n+/**\n+ * Detect characters that are covered by non-char graphics on a page.\n+ */\n+class CoveredTextHandler",
        "path": "src/CoveredTextHandler.h",
        "position": null,
        "original_position": 18,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "e8232f1362809367a4f9e6e89ae74ec1633b9889",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The reason that I think that `CoveredTextHandler` is not the proper name is, this class handles all the text and image, not only 'covered text'. It's more like a detector/analyzer stuff.\n",
        "created_at": "2014-06-27T18:54:00Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14309014",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14309014"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14309014"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14309051",
        "pull_request_review_id": null,
        "id": 14309051,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzA5MDUx",
        "diff_hunk": "@@ -0,0 +1,63 @@\n+/*\n+ * CoveredTextHandler.h\n+ *\n+ *  Created on: 2014-6-14\n+ *      Author: duanyao\n+ */\n+\n+#ifndef COVEREDTEXTHANDLER_H__\n+#define COVEREDTEXTHANDLER_H__\n+\n+#include <vector>\n+\n+namespace pdf2htmlEX {\n+\n+/**\n+ * Detect characters that are covered by non-char graphics on a page.\n+ */\n+class CoveredTextHandler\n+{\n+public:\n+    CoveredTextHandler();\n+    virtual ~CoveredTextHandler();",
        "path": "src/CoveredTextHandler.h",
        "position": null,
        "original_position": 22,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "e8232f1362809367a4f9e6e89ae74ec1633b9889",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Well if you are not going to derive from this class, `virtual` is not useful, which also introduce some overhead.\n",
        "created_at": "2014-06-27T18:54:43Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14309051",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14309051"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14309051"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14309191",
        "pull_request_review_id": null,
        "id": 14309191,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzA5MTkx",
        "diff_hunk": "@@ -0,0 +1,360 @@\n+/*\n+ * DrawingTracer.cc\n+ *\n+ *  Created on: 2014-6-15\n+ *      Author: duanyao\n+ */\n+\n+#include \"GfxFont.h\"\n+\n+#include \"util/math.h\"\n+#include \"DrawingTracer.h\"\n+\n+//#define DT_DEBUG(x)  (x)\n+#define DT_DEBUG(x)\n+\n+#if !ENABLE_SVG\n+#warning \"Cairo is disabled because ENABLE_SVG is off, --correct-text-visibility has limited functionality.\"\n+#endif\n+\n+namespace pdf2htmlEX\n+{\n+\n+DrawingTracer::DrawingTracer(const Param & param): param(param)\n+#if ENABLE_SVG\n+, cairo(nullptr)\n+#endif\n+{\n+}\n+\n+DrawingTracer::~DrawingTracer()\n+{\n+    finish();\n+}\n+\n+void DrawingTracer::reset(GfxState *state)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+    finish();\n+\n+#if ENABLE_SVG\n+    cairo_rectangle_t page_box {0, 0, width:state->getPageWidth(), height:state->getPageHeight()};\n+    cairo_surface_t * surface = cairo_recording_surface_create(CAIRO_CONTENT_COLOR_ALPHA, &page_box);\n+    cairo = cairo_create(surface);\n+#endif\n+}\n+\n+void DrawingTracer::finish()\n+{\n+#if ENABLE_SVG\n+    if (cairo)\n+    {\n+        cairo_destroy(cairo);\n+        cairo = nullptr;\n+    }\n+#endif\n+}\n+\n+// Poppler won't inform us its initial CTM, and the initial CTM is affected by zoom level.\n+// OutputDev::clip() may be called before OutputDev::updateCTM(), so we can't rely on GfxState::getCTM(),\n+// and should trace ctm changes ourself (via cairo).\n+void DrawingTracer::update_ctm(GfxState *state, double m11, double m12, double m21, double m22, double m31, double m32)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+\n+#if ENABLE_SVG\n+    cairo_matrix_t matrix;\n+    matrix.xx = m11;\n+    matrix.yx = m12;\n+    matrix.xy = m21;\n+    matrix.yy = m22;\n+    matrix.x0 = m31;\n+    matrix.y0 = m32;\n+    cairo_transform(cairo, &matrix);\n+#endif\n+}\n+\n+void DrawingTracer::clip(GfxState * state, bool even_odd)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+#if ENABLE_SVG\n+    do_path(state, state->getPath());\n+    cairo_set_fill_rule(cairo, even_odd? CAIRO_FILL_RULE_EVEN_ODD : CAIRO_FILL_RULE_WINDING);\n+    cairo_clip (cairo);\n+#endif\n+}\n+\n+void DrawingTracer::clip_to_stroke_path(GfxState * state)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+    // TODO cairo_stroke_to_path() ?\n+}\n+\n+void DrawingTracer::save()\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+#if ENABLE_SVG\n+    cairo_save(cairo);\n+#endif\n+}\n+void DrawingTracer::restore()\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+#if ENABLE_SVG\n+    cairo_restore(cairo);\n+#endif\n+}\n+\n+void DrawingTracer::do_path(GfxState * state, GfxPath * path)\n+{\n+#if ENABLE_SVG\n+    //copy from CairoOutputDev::doPath\n+    GfxSubpath *subpath;\n+    int i, j;\n+    double x, y;\n+    cairo_new_path(cairo);\n+    for (i = 0; i < path->getNumSubpaths(); ++i) {\n+        subpath = path->getSubpath(i);\n+        if (subpath->getNumPoints() > 0) {\n+            x = subpath->getX(0);\n+            y = subpath->getY(0);\n+            cairo_move_to(cairo, x, y);\n+            j = 1;\n+            while (j < subpath->getNumPoints()) {\n+                if (subpath->getCurve(j)) {\n+                    x = subpath->getX(j+2);\n+                    y = subpath->getY(j+2);\n+                    cairo_curve_to(cairo,\n+                        subpath->getX(j), subpath->getY(j),\n+                        subpath->getX(j+1), subpath->getY(j+1),\n+                        x, y);\n+                    j += 3;\n+                } else {\n+                    x = subpath->getX(j);\n+                    y = subpath->getY(j);\n+                    cairo_line_to(cairo, x, y);\n+                    ++j;\n+                }\n+            }\n+            if (subpath->isClosed()) {\n+                cairo_close_path (cairo);\n+            }\n+        }\n+    }\n+#endif\n+}\n+\n+void DrawingTracer::stroke(GfxState * state)\n+{\n+#if ENABLE_SVG\n+    if (!param.correct_text_visibility)\n+        return;\n+\n+    DT_DEBUG(printf(\"DrawingTracer::stroke\\n\"));\n+\n+    cairo_set_line_width(cairo, state->getLineWidth());\n+\n+    // GfxPath is broken into steps, each step makes up a cairo path and its bbox is used for covering test.\n+    // TODO\n+    // 1. path steps that are not vertical or horizontal lines may still falsely \"cover\" many chars,\n+    // can we slice those steps further?\n+    // 2. if the line width is small, can we just ignore the path?\n+    // 3. line join feature can't be retained. We use line-cap-square to minimize the problem that\n+    //   some chars actually covered by a line join are missed. However chars covered by a acute angle\n+    //   with line-join-miter may be still recognized as not covered.\n+    cairo_set_line_cap(cairo, CAIRO_LINE_CAP_SQUARE);\n+    GfxPath * path = state->getPath();\n+    for (int i = 0; i < path->getNumSubpaths(); ++i) {\n+        GfxSubpath * subpath = path->getSubpath(i);\n+        if (subpath->getNumPoints() <= 0)\n+            continue;\n+        double x = subpath->getX(0);\n+        double y = subpath->getY(0);\n+        //p: loop cursor; j: next point index\n+        int p =1, j = 1;\n+        int n = subpath->getNumPoints();\n+        while (p <= n) {\n+            cairo_new_path(cairo);\n+            cairo_move_to(cairo, x, y);\n+            if (subpath->getCurve(j)) {\n+                x = subpath->getX(j+2);\n+                y = subpath->getY(j+2);\n+                cairo_curve_to(cairo,\n+                    subpath->getX(j), subpath->getY(j),\n+                    subpath->getX(j+1), subpath->getY(j+1),\n+                    x, y);\n+                p += 3;\n+            } else {\n+                x = subpath->getX(j);\n+                y = subpath->getY(j);\n+                cairo_line_to(cairo, x, y);\n+                ++p;\n+            }\n+\n+            DT_DEBUG(printf(\"DrawingTracer::stroke:new box:\\n\"));\n+            double sbox[4];\n+            cairo_stroke_extents(cairo, sbox, sbox + 1, sbox + 2, sbox + 3);\n+            if (sbox[0] != sbox[2] && sbox[1] != sbox[3])\n+                draw_non_char_bbox(state, sbox);\n+            else\n+                DT_DEBUG(printf(\"DrawingTracer::stroke:zero box!\\n\"));\n+\n+            if (p == n)\n+            {\n+                if (subpath->isClosed())\n+                    j = 0; // if sub path is closed, go back to starting point\n+                else\n+                    break;\n+            }\n+            else\n+                j = p;\n+        }\n+    }\n+#endif\n+}\n+\n+void DrawingTracer::fill(GfxState * state, bool even_odd)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+\n+#if ENABLE_SVG\n+    do_path(state, state->getPath());\n+    //cairo_fill_extents don't take fill rule into account.\n+    //cairo_set_fill_rule (cairo, even_odd? CAIRO_FILL_RULE_EVEN_ODD : CAIRO_FILL_RULE_WINDING);\n+    double fbox[4];\n+    cairo_fill_extents(cairo, fbox, fbox + 1, fbox + 2, fbox + 3);\n+    draw_non_char_bbox(state, fbox);\n+#endif\n+}\n+\n+void DrawingTracer::draw_non_char_bbox(GfxState * state, double * bbox)\n+{\n+#if ENABLE_SVG\n+    double cbox[4];\n+    cairo_clip_extents(cairo, cbox, cbox + 1, cbox + 2, cbox + 3);\n+    if(bbox_intersect(cbox, bbox, bbox))\n+#endif\n+    {\n+        transform_bbox_by_ctm(bbox, state);\n+        DT_DEBUG(printf(\"DrawingTracer::draw_non_char_bbox:[%f,%f,%f,%f]\\n\", bbox[0],bbox[1],bbox[2],bbox[3]));\n+        if (on_non_char_drawn)\n+            on_non_char_drawn(bbox);\n+    }\n+}\n+\n+void DrawingTracer::draw_char_bbox(GfxState * state, double * bbox)\n+{\n+#if ENABLE_SVG\n+    // Note: even if 4 corners of the char are all in or all out of the clip area,\n+    // it could still be partially clipped.\n+    // TODO better solution?\n+    int pt_in = 0;\n+    if (cairo_in_clip(cairo, bbox[0], bbox[1]))\n+        ++pt_in;\n+    if (cairo_in_clip(cairo, bbox[2], bbox[3]))\n+        ++pt_in;\n+    if (cairo_in_clip(cairo, bbox[2], bbox[1]))\n+        ++pt_in;\n+    if (cairo_in_clip(cairo, bbox[0], bbox[3]))\n+        ++pt_in;\n+\n+    if (pt_in == 0)\n+    {\n+        transform_bbox_by_ctm(bbox);\n+        if(on_char_clipped)\n+            on_char_clipped(bbox, false);\n+    }\n+    else\n+    {\n+        if (pt_in < 4)\n+        {\n+            double cbox[4];\n+            cairo_clip_extents(cairo, cbox, cbox + 1, cbox + 2, cbox + 3);\n+            bbox_intersect(cbox, bbox, bbox);\n+        }\n+        transform_bbox_by_ctm(bbox);\n+        if (pt_in < 4)\n+        {\n+            if(on_char_clipped)\n+                on_char_clipped(bbox, true);\n+        }\n+        else\n+        {\n+            if (on_char_drawn)\n+                on_char_drawn(bbox);\n+        }\n+    }\n+#else\n+    transform_bbox_by_ctm(bbox, state);\n+    if (on_char_drawn)\n+        on_char_drawn(bbox);\n+#endif\n+    DT_DEBUG(printf(\"DrawingTracer::draw_char_bbox:[%f,%f,%f,%f]\\n\",bbox[0],bbox[1],bbox[2],bbox[3]));\n+}\n+\n+void DrawingTracer::draw_image(GfxState *state)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+    double bbox[4] {0, 0, 1, 1};\n+    draw_non_char_bbox(state, bbox);\n+}\n+\n+void DrawingTracer::draw_char(GfxState *state, double x, double y, double ax, double ay)",
        "path": "src/DrawingTracer.cc",
        "position": 310,
        "original_position": 310,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "e8232f1362809367a4f9e6e89ae74ec1633b9889",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Now I think that it's a good idea to keep this a separate version as in `HTMLRenderer`.\n",
        "created_at": "2014-06-27T18:57:16Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14309191",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14309191"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14309191"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14321911",
        "pull_request_review_id": null,
        "id": 14321911,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzIxOTEx",
        "diff_hunk": "@@ -0,0 +1,63 @@\n+/*\n+ * CoveredTextHandler.h\n+ *\n+ *  Created on: 2014-6-14\n+ *      Author: duanyao\n+ */\n+\n+#ifndef COVEREDTEXTHANDLER_H__\n+#define COVEREDTEXTHANDLER_H__\n+\n+#include <vector>\n+\n+namespace pdf2htmlEX {\n+\n+/**\n+ * Detect characters that are covered by non-char graphics on a page.\n+ */\n+class CoveredTextHandler",
        "path": "src/CoveredTextHandler.h",
        "position": null,
        "original_position": 18,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "e8232f1362809367a4f9e6e89ae74ec1633b9889",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So CoveredTextDetector? I also realized that CoveredTextHandler is not a good name.\n",
        "created_at": "2014-06-28T02:20:08Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14321911",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14321911"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14321911"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14321918",
        "pull_request_review_id": null,
        "id": 14321918,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzIxOTE4",
        "diff_hunk": "@@ -0,0 +1,63 @@\n+/*\n+ * CoveredTextHandler.h\n+ *\n+ *  Created on: 2014-6-14\n+ *      Author: duanyao\n+ */\n+\n+#ifndef COVEREDTEXTHANDLER_H__\n+#define COVEREDTEXTHANDLER_H__\n+\n+#include <vector>\n+\n+namespace pdf2htmlEX {\n+\n+/**\n+ * Detect characters that are covered by non-char graphics on a page.\n+ */\n+class CoveredTextHandler\n+{\n+public:\n+    CoveredTextHandler();\n+    virtual ~CoveredTextHandler();",
        "path": "src/CoveredTextHandler.h",
        "position": null,
        "original_position": 22,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "e8232f1362809367a4f9e6e89ae74ec1633b9889",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Currently no. I'll remove it.\n",
        "created_at": "2014-06-28T02:21:44Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14321918",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14321918"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14321918"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14321949",
        "pull_request_review_id": null,
        "id": 14321949,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzIxOTQ5",
        "diff_hunk": "@@ -0,0 +1,360 @@\n+/*\n+ * DrawingTracer.cc\n+ *\n+ *  Created on: 2014-6-15\n+ *      Author: duanyao\n+ */\n+\n+#include \"GfxFont.h\"\n+\n+#include \"util/math.h\"\n+#include \"DrawingTracer.h\"\n+\n+//#define DT_DEBUG(x)  (x)\n+#define DT_DEBUG(x)\n+\n+#if !ENABLE_SVG\n+#warning \"Cairo is disabled because ENABLE_SVG is off, --correct-text-visibility has limited functionality.\"\n+#endif\n+\n+namespace pdf2htmlEX\n+{\n+\n+DrawingTracer::DrawingTracer(const Param & param): param(param)\n+#if ENABLE_SVG\n+, cairo(nullptr)\n+#endif\n+{\n+}\n+\n+DrawingTracer::~DrawingTracer()\n+{\n+    finish();\n+}\n+\n+void DrawingTracer::reset(GfxState *state)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+    finish();\n+\n+#if ENABLE_SVG\n+    cairo_rectangle_t page_box {0, 0, width:state->getPageWidth(), height:state->getPageHeight()};\n+    cairo_surface_t * surface = cairo_recording_surface_create(CAIRO_CONTENT_COLOR_ALPHA, &page_box);\n+    cairo = cairo_create(surface);\n+#endif\n+}\n+\n+void DrawingTracer::finish()\n+{\n+#if ENABLE_SVG\n+    if (cairo)\n+    {\n+        cairo_destroy(cairo);\n+        cairo = nullptr;\n+    }\n+#endif\n+}\n+\n+// Poppler won't inform us its initial CTM, and the initial CTM is affected by zoom level.\n+// OutputDev::clip() may be called before OutputDev::updateCTM(), so we can't rely on GfxState::getCTM(),\n+// and should trace ctm changes ourself (via cairo).\n+void DrawingTracer::update_ctm(GfxState *state, double m11, double m12, double m21, double m22, double m31, double m32)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+\n+#if ENABLE_SVG\n+    cairo_matrix_t matrix;\n+    matrix.xx = m11;\n+    matrix.yx = m12;\n+    matrix.xy = m21;\n+    matrix.yy = m22;\n+    matrix.x0 = m31;\n+    matrix.y0 = m32;\n+    cairo_transform(cairo, &matrix);\n+#endif\n+}\n+\n+void DrawingTracer::clip(GfxState * state, bool even_odd)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+#if ENABLE_SVG\n+    do_path(state, state->getPath());\n+    cairo_set_fill_rule(cairo, even_odd? CAIRO_FILL_RULE_EVEN_ODD : CAIRO_FILL_RULE_WINDING);\n+    cairo_clip (cairo);\n+#endif\n+}\n+\n+void DrawingTracer::clip_to_stroke_path(GfxState * state)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+    // TODO cairo_stroke_to_path() ?\n+}\n+\n+void DrawingTracer::save()\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+#if ENABLE_SVG\n+    cairo_save(cairo);\n+#endif\n+}\n+void DrawingTracer::restore()\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+#if ENABLE_SVG\n+    cairo_restore(cairo);\n+#endif\n+}\n+\n+void DrawingTracer::do_path(GfxState * state, GfxPath * path)\n+{\n+#if ENABLE_SVG\n+    //copy from CairoOutputDev::doPath\n+    GfxSubpath *subpath;\n+    int i, j;\n+    double x, y;\n+    cairo_new_path(cairo);\n+    for (i = 0; i < path->getNumSubpaths(); ++i) {\n+        subpath = path->getSubpath(i);\n+        if (subpath->getNumPoints() > 0) {\n+            x = subpath->getX(0);\n+            y = subpath->getY(0);\n+            cairo_move_to(cairo, x, y);\n+            j = 1;\n+            while (j < subpath->getNumPoints()) {\n+                if (subpath->getCurve(j)) {\n+                    x = subpath->getX(j+2);\n+                    y = subpath->getY(j+2);\n+                    cairo_curve_to(cairo,\n+                        subpath->getX(j), subpath->getY(j),\n+                        subpath->getX(j+1), subpath->getY(j+1),\n+                        x, y);\n+                    j += 3;\n+                } else {\n+                    x = subpath->getX(j);\n+                    y = subpath->getY(j);\n+                    cairo_line_to(cairo, x, y);\n+                    ++j;\n+                }\n+            }\n+            if (subpath->isClosed()) {\n+                cairo_close_path (cairo);\n+            }\n+        }\n+    }\n+#endif\n+}\n+\n+void DrawingTracer::stroke(GfxState * state)\n+{\n+#if ENABLE_SVG\n+    if (!param.correct_text_visibility)\n+        return;\n+\n+    DT_DEBUG(printf(\"DrawingTracer::stroke\\n\"));\n+\n+    cairo_set_line_width(cairo, state->getLineWidth());\n+\n+    // GfxPath is broken into steps, each step makes up a cairo path and its bbox is used for covering test.\n+    // TODO\n+    // 1. path steps that are not vertical or horizontal lines may still falsely \"cover\" many chars,\n+    // can we slice those steps further?\n+    // 2. if the line width is small, can we just ignore the path?\n+    // 3. line join feature can't be retained. We use line-cap-square to minimize the problem that\n+    //   some chars actually covered by a line join are missed. However chars covered by a acute angle\n+    //   with line-join-miter may be still recognized as not covered.\n+    cairo_set_line_cap(cairo, CAIRO_LINE_CAP_SQUARE);\n+    GfxPath * path = state->getPath();\n+    for (int i = 0; i < path->getNumSubpaths(); ++i) {\n+        GfxSubpath * subpath = path->getSubpath(i);\n+        if (subpath->getNumPoints() <= 0)\n+            continue;\n+        double x = subpath->getX(0);\n+        double y = subpath->getY(0);\n+        //p: loop cursor; j: next point index\n+        int p =1, j = 1;\n+        int n = subpath->getNumPoints();\n+        while (p <= n) {\n+            cairo_new_path(cairo);\n+            cairo_move_to(cairo, x, y);\n+            if (subpath->getCurve(j)) {\n+                x = subpath->getX(j+2);\n+                y = subpath->getY(j+2);\n+                cairo_curve_to(cairo,\n+                    subpath->getX(j), subpath->getY(j),\n+                    subpath->getX(j+1), subpath->getY(j+1),\n+                    x, y);\n+                p += 3;\n+            } else {\n+                x = subpath->getX(j);\n+                y = subpath->getY(j);\n+                cairo_line_to(cairo, x, y);\n+                ++p;\n+            }\n+\n+            DT_DEBUG(printf(\"DrawingTracer::stroke:new box:\\n\"));\n+            double sbox[4];\n+            cairo_stroke_extents(cairo, sbox, sbox + 1, sbox + 2, sbox + 3);\n+            if (sbox[0] != sbox[2] && sbox[1] != sbox[3])\n+                draw_non_char_bbox(state, sbox);\n+            else\n+                DT_DEBUG(printf(\"DrawingTracer::stroke:zero box!\\n\"));\n+\n+            if (p == n)\n+            {\n+                if (subpath->isClosed())\n+                    j = 0; // if sub path is closed, go back to starting point\n+                else\n+                    break;\n+            }\n+            else\n+                j = p;\n+        }\n+    }\n+#endif\n+}\n+\n+void DrawingTracer::fill(GfxState * state, bool even_odd)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+\n+#if ENABLE_SVG\n+    do_path(state, state->getPath());\n+    //cairo_fill_extents don't take fill rule into account.\n+    //cairo_set_fill_rule (cairo, even_odd? CAIRO_FILL_RULE_EVEN_ODD : CAIRO_FILL_RULE_WINDING);\n+    double fbox[4];\n+    cairo_fill_extents(cairo, fbox, fbox + 1, fbox + 2, fbox + 3);\n+    draw_non_char_bbox(state, fbox);\n+#endif\n+}\n+\n+void DrawingTracer::draw_non_char_bbox(GfxState * state, double * bbox)\n+{\n+#if ENABLE_SVG\n+    double cbox[4];\n+    cairo_clip_extents(cairo, cbox, cbox + 1, cbox + 2, cbox + 3);\n+    if(bbox_intersect(cbox, bbox, bbox))\n+#endif\n+    {\n+        transform_bbox_by_ctm(bbox, state);\n+        DT_DEBUG(printf(\"DrawingTracer::draw_non_char_bbox:[%f,%f,%f,%f]\\n\", bbox[0],bbox[1],bbox[2],bbox[3]));\n+        if (on_non_char_drawn)\n+            on_non_char_drawn(bbox);\n+    }\n+}\n+\n+void DrawingTracer::draw_char_bbox(GfxState * state, double * bbox)\n+{\n+#if ENABLE_SVG\n+    // Note: even if 4 corners of the char are all in or all out of the clip area,\n+    // it could still be partially clipped.\n+    // TODO better solution?\n+    int pt_in = 0;\n+    if (cairo_in_clip(cairo, bbox[0], bbox[1]))\n+        ++pt_in;\n+    if (cairo_in_clip(cairo, bbox[2], bbox[3]))\n+        ++pt_in;\n+    if (cairo_in_clip(cairo, bbox[2], bbox[1]))\n+        ++pt_in;\n+    if (cairo_in_clip(cairo, bbox[0], bbox[3]))\n+        ++pt_in;\n+\n+    if (pt_in == 0)\n+    {\n+        transform_bbox_by_ctm(bbox);\n+        if(on_char_clipped)\n+            on_char_clipped(bbox, false);\n+    }\n+    else\n+    {\n+        if (pt_in < 4)\n+        {\n+            double cbox[4];\n+            cairo_clip_extents(cairo, cbox, cbox + 1, cbox + 2, cbox + 3);\n+            bbox_intersect(cbox, bbox, bbox);\n+        }\n+        transform_bbox_by_ctm(bbox);\n+        if (pt_in < 4)\n+        {\n+            if(on_char_clipped)\n+                on_char_clipped(bbox, true);\n+        }\n+        else\n+        {\n+            if (on_char_drawn)\n+                on_char_drawn(bbox);\n+        }\n+    }\n+#else\n+    transform_bbox_by_ctm(bbox, state);\n+    if (on_char_drawn)\n+        on_char_drawn(bbox);\n+#endif\n+    DT_DEBUG(printf(\"DrawingTracer::draw_char_bbox:[%f,%f,%f,%f]\\n\",bbox[0],bbox[1],bbox[2],bbox[3]));\n+}\n+\n+void DrawingTracer::draw_image(GfxState *state)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+    double bbox[4] {0, 0, 1, 1};\n+    draw_non_char_bbox(state, bbox);\n+}\n+\n+void DrawingTracer::draw_char(GfxState *state, double x, double y, double ax, double ay)",
        "path": "src/DrawingTracer.cc",
        "position": 310,
        "original_position": 310,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "e8232f1362809367a4f9e6e89ae74ec1633b9889",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "A separate version without cairo?\n",
        "created_at": "2014-06-28T02:26:56Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14321949",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14321949"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14321949"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14322418",
        "pull_request_review_id": null,
        "id": 14322418,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzIyNDE4",
        "diff_hunk": "@@ -0,0 +1,360 @@\n+/*\n+ * DrawingTracer.cc\n+ *\n+ *  Created on: 2014-6-15\n+ *      Author: duanyao\n+ */\n+\n+#include \"GfxFont.h\"\n+\n+#include \"util/math.h\"\n+#include \"DrawingTracer.h\"\n+\n+//#define DT_DEBUG(x)  (x)\n+#define DT_DEBUG(x)\n+\n+#if !ENABLE_SVG\n+#warning \"Cairo is disabled because ENABLE_SVG is off, --correct-text-visibility has limited functionality.\"\n+#endif\n+\n+namespace pdf2htmlEX\n+{\n+\n+DrawingTracer::DrawingTracer(const Param & param): param(param)\n+#if ENABLE_SVG\n+, cairo(nullptr)\n+#endif\n+{\n+}\n+\n+DrawingTracer::~DrawingTracer()\n+{\n+    finish();\n+}\n+\n+void DrawingTracer::reset(GfxState *state)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+    finish();\n+\n+#if ENABLE_SVG\n+    cairo_rectangle_t page_box {0, 0, width:state->getPageWidth(), height:state->getPageHeight()};\n+    cairo_surface_t * surface = cairo_recording_surface_create(CAIRO_CONTENT_COLOR_ALPHA, &page_box);\n+    cairo = cairo_create(surface);\n+#endif\n+}\n+\n+void DrawingTracer::finish()\n+{\n+#if ENABLE_SVG\n+    if (cairo)\n+    {\n+        cairo_destroy(cairo);\n+        cairo = nullptr;\n+    }\n+#endif\n+}\n+\n+// Poppler won't inform us its initial CTM, and the initial CTM is affected by zoom level.\n+// OutputDev::clip() may be called before OutputDev::updateCTM(), so we can't rely on GfxState::getCTM(),\n+// and should trace ctm changes ourself (via cairo).\n+void DrawingTracer::update_ctm(GfxState *state, double m11, double m12, double m21, double m22, double m31, double m32)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+\n+#if ENABLE_SVG\n+    cairo_matrix_t matrix;\n+    matrix.xx = m11;\n+    matrix.yx = m12;\n+    matrix.xy = m21;\n+    matrix.yy = m22;\n+    matrix.x0 = m31;\n+    matrix.y0 = m32;\n+    cairo_transform(cairo, &matrix);\n+#endif\n+}\n+\n+void DrawingTracer::clip(GfxState * state, bool even_odd)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+#if ENABLE_SVG\n+    do_path(state, state->getPath());\n+    cairo_set_fill_rule(cairo, even_odd? CAIRO_FILL_RULE_EVEN_ODD : CAIRO_FILL_RULE_WINDING);\n+    cairo_clip (cairo);\n+#endif\n+}\n+\n+void DrawingTracer::clip_to_stroke_path(GfxState * state)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+    // TODO cairo_stroke_to_path() ?\n+}\n+\n+void DrawingTracer::save()\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+#if ENABLE_SVG\n+    cairo_save(cairo);\n+#endif\n+}\n+void DrawingTracer::restore()\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+#if ENABLE_SVG\n+    cairo_restore(cairo);\n+#endif\n+}\n+\n+void DrawingTracer::do_path(GfxState * state, GfxPath * path)\n+{\n+#if ENABLE_SVG\n+    //copy from CairoOutputDev::doPath\n+    GfxSubpath *subpath;\n+    int i, j;\n+    double x, y;\n+    cairo_new_path(cairo);\n+    for (i = 0; i < path->getNumSubpaths(); ++i) {\n+        subpath = path->getSubpath(i);\n+        if (subpath->getNumPoints() > 0) {\n+            x = subpath->getX(0);\n+            y = subpath->getY(0);\n+            cairo_move_to(cairo, x, y);\n+            j = 1;\n+            while (j < subpath->getNumPoints()) {\n+                if (subpath->getCurve(j)) {\n+                    x = subpath->getX(j+2);\n+                    y = subpath->getY(j+2);\n+                    cairo_curve_to(cairo,\n+                        subpath->getX(j), subpath->getY(j),\n+                        subpath->getX(j+1), subpath->getY(j+1),\n+                        x, y);\n+                    j += 3;\n+                } else {\n+                    x = subpath->getX(j);\n+                    y = subpath->getY(j);\n+                    cairo_line_to(cairo, x, y);\n+                    ++j;\n+                }\n+            }\n+            if (subpath->isClosed()) {\n+                cairo_close_path (cairo);\n+            }\n+        }\n+    }\n+#endif\n+}\n+\n+void DrawingTracer::stroke(GfxState * state)\n+{\n+#if ENABLE_SVG\n+    if (!param.correct_text_visibility)\n+        return;\n+\n+    DT_DEBUG(printf(\"DrawingTracer::stroke\\n\"));\n+\n+    cairo_set_line_width(cairo, state->getLineWidth());\n+\n+    // GfxPath is broken into steps, each step makes up a cairo path and its bbox is used for covering test.\n+    // TODO\n+    // 1. path steps that are not vertical or horizontal lines may still falsely \"cover\" many chars,\n+    // can we slice those steps further?\n+    // 2. if the line width is small, can we just ignore the path?\n+    // 3. line join feature can't be retained. We use line-cap-square to minimize the problem that\n+    //   some chars actually covered by a line join are missed. However chars covered by a acute angle\n+    //   with line-join-miter may be still recognized as not covered.\n+    cairo_set_line_cap(cairo, CAIRO_LINE_CAP_SQUARE);\n+    GfxPath * path = state->getPath();\n+    for (int i = 0; i < path->getNumSubpaths(); ++i) {\n+        GfxSubpath * subpath = path->getSubpath(i);\n+        if (subpath->getNumPoints() <= 0)\n+            continue;\n+        double x = subpath->getX(0);\n+        double y = subpath->getY(0);\n+        //p: loop cursor; j: next point index\n+        int p =1, j = 1;\n+        int n = subpath->getNumPoints();\n+        while (p <= n) {\n+            cairo_new_path(cairo);\n+            cairo_move_to(cairo, x, y);\n+            if (subpath->getCurve(j)) {\n+                x = subpath->getX(j+2);\n+                y = subpath->getY(j+2);\n+                cairo_curve_to(cairo,\n+                    subpath->getX(j), subpath->getY(j),\n+                    subpath->getX(j+1), subpath->getY(j+1),\n+                    x, y);\n+                p += 3;\n+            } else {\n+                x = subpath->getX(j);\n+                y = subpath->getY(j);\n+                cairo_line_to(cairo, x, y);\n+                ++p;\n+            }\n+\n+            DT_DEBUG(printf(\"DrawingTracer::stroke:new box:\\n\"));\n+            double sbox[4];\n+            cairo_stroke_extents(cairo, sbox, sbox + 1, sbox + 2, sbox + 3);\n+            if (sbox[0] != sbox[2] && sbox[1] != sbox[3])\n+                draw_non_char_bbox(state, sbox);\n+            else\n+                DT_DEBUG(printf(\"DrawingTracer::stroke:zero box!\\n\"));\n+\n+            if (p == n)\n+            {\n+                if (subpath->isClosed())\n+                    j = 0; // if sub path is closed, go back to starting point\n+                else\n+                    break;\n+            }\n+            else\n+                j = p;\n+        }\n+    }\n+#endif\n+}\n+\n+void DrawingTracer::fill(GfxState * state, bool even_odd)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+\n+#if ENABLE_SVG\n+    do_path(state, state->getPath());\n+    //cairo_fill_extents don't take fill rule into account.\n+    //cairo_set_fill_rule (cairo, even_odd? CAIRO_FILL_RULE_EVEN_ODD : CAIRO_FILL_RULE_WINDING);\n+    double fbox[4];\n+    cairo_fill_extents(cairo, fbox, fbox + 1, fbox + 2, fbox + 3);\n+    draw_non_char_bbox(state, fbox);\n+#endif\n+}\n+\n+void DrawingTracer::draw_non_char_bbox(GfxState * state, double * bbox)\n+{\n+#if ENABLE_SVG\n+    double cbox[4];\n+    cairo_clip_extents(cairo, cbox, cbox + 1, cbox + 2, cbox + 3);\n+    if(bbox_intersect(cbox, bbox, bbox))\n+#endif\n+    {\n+        transform_bbox_by_ctm(bbox, state);\n+        DT_DEBUG(printf(\"DrawingTracer::draw_non_char_bbox:[%f,%f,%f,%f]\\n\", bbox[0],bbox[1],bbox[2],bbox[3]));\n+        if (on_non_char_drawn)\n+            on_non_char_drawn(bbox);\n+    }\n+}\n+\n+void DrawingTracer::draw_char_bbox(GfxState * state, double * bbox)\n+{\n+#if ENABLE_SVG\n+    // Note: even if 4 corners of the char are all in or all out of the clip area,\n+    // it could still be partially clipped.\n+    // TODO better solution?\n+    int pt_in = 0;\n+    if (cairo_in_clip(cairo, bbox[0], bbox[1]))\n+        ++pt_in;\n+    if (cairo_in_clip(cairo, bbox[2], bbox[3]))\n+        ++pt_in;\n+    if (cairo_in_clip(cairo, bbox[2], bbox[1]))\n+        ++pt_in;\n+    if (cairo_in_clip(cairo, bbox[0], bbox[3]))\n+        ++pt_in;\n+\n+    if (pt_in == 0)\n+    {\n+        transform_bbox_by_ctm(bbox);\n+        if(on_char_clipped)\n+            on_char_clipped(bbox, false);\n+    }\n+    else\n+    {\n+        if (pt_in < 4)\n+        {\n+            double cbox[4];\n+            cairo_clip_extents(cairo, cbox, cbox + 1, cbox + 2, cbox + 3);\n+            bbox_intersect(cbox, bbox, bbox);\n+        }\n+        transform_bbox_by_ctm(bbox);\n+        if (pt_in < 4)\n+        {\n+            if(on_char_clipped)\n+                on_char_clipped(bbox, true);\n+        }\n+        else\n+        {\n+            if (on_char_drawn)\n+                on_char_drawn(bbox);\n+        }\n+    }\n+#else\n+    transform_bbox_by_ctm(bbox, state);\n+    if (on_char_drawn)\n+        on_char_drawn(bbox);\n+#endif\n+    DT_DEBUG(printf(\"DrawingTracer::draw_char_bbox:[%f,%f,%f,%f]\\n\",bbox[0],bbox[1],bbox[2],bbox[3]));\n+}\n+\n+void DrawingTracer::draw_image(GfxState *state)\n+{\n+    if (!param.correct_text_visibility)\n+        return;\n+    double bbox[4] {0, 0, 1, 1};\n+    draw_non_char_bbox(state, bbox);\n+}\n+\n+void DrawingTracer::draw_char(GfxState *state, double x, double y, double ax, double ay)",
        "path": "src/DrawingTracer.cc",
        "position": 310,
        "original_position": 310,
        "commit_id": "448b0d6dad518ead618aab51c1b41bc07cfc3187",
        "original_commit_id": "e8232f1362809367a4f9e6e89ae74ec1633b9889",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No, you meant that you didn't understand the logic in HTMLRenderer, and that's why you have implemented your own version. \nNow I think that could be a good idea.\n",
        "created_at": "2014-06-28T04:19:48Z",
        "updated_at": "2014-06-29T06:58:39Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14322418",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14322418"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/365#discussion_r14322418"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14850803",
        "pull_request_review_id": null,
        "id": 14850803,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODUwODAz",
        "diff_hunk": "@@ -273,7 +273,7 @@ Viewer.prototype = {\n       var nodes = this.outline.childNodes;\n       for (var i = 0, l = nodes.length; i < l; ++i) {\n         var cur_node = nodes[i];\n-        if (cur_node.nodeName === 'UL') {\n+        if (cur_node.nodeName.toLowerCase() === 'ul') {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 5,
        "original_position": 5,
        "commit_id": "5993548c1dc82ad6bfa9a665a75753ca20abeb22",
        "original_commit_id": "5993548c1dc82ad6bfa9a665a75753ca20abeb22",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "good catch!\n",
        "created_at": "2014-07-12T01:34:25Z",
        "updated_at": "2014-07-12T01:34:25Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/384#discussion_r14850803",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/384",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/14850803"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/384#discussion_r14850803"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/384"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/15855952",
        "pull_request_review_id": null,
        "id": 15855952,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODU1OTUy",
        "diff_hunk": "@@ -73,6 +81,10 @@ void DrawingTracer::update_ctm(GfxState *state, double m11, double m12, double m\n     matrix.x0 = m31;\n     matrix.y0 = m32;\n     cairo_transform(cairo, &matrix);\n+\n+    DT_DEBUG(cairo_matrix_t mat);",
        "path": "src/DrawingTracer.cc",
        "position": null,
        "original_position": 33,
        "commit_id": "5205e7b6136bd4c61f4be577a786f21cc46107c4",
        "original_commit_id": "3d4167233c5089516f497324fb217791c2751c60",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Probably it's better to use #if/#endif blocks instead of marking each line.\n",
        "created_at": "2014-08-06T04:47:17Z",
        "updated_at": "2014-08-18T02:10:43Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/408#discussion_r15855952",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/408",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/15855952"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/408#discussion_r15855952"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16385688",
        "pull_request_review_id": null,
        "id": 16385688,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzg1Njg4",
        "diff_hunk": "@@ -247,7 +247,11 @@ void HTMLTextLine::dump_text(ostream & out)\n                     if(!(state_iter1->hash_umask & State::umask_by_id(State::WORD_SPACE_ID)))\n                     {\n                         double space_off = state_iter1->single_space_offset();\n-                        if(std::abs(target - space_off) <= param.h_eps)\n+                        if(std::abs(target - space_off) <= param.h_eps",
        "path": "src/HTMLTextLine.cc",
        "position": null,
        "original_position": 5,
        "commit_id": "fdf1c367441b6f43b5f66a1e8581fab5d26b0b9a",
        "original_commit_id": "a592429ee43fd49a6d825828cf551fd25d814fb3",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please wrap everything with `()` around `&&` or `||`\n",
        "created_at": "2014-08-18T22:12:22Z",
        "updated_at": "2014-08-19T02:31:15Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/414#discussion_r16385688",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/414",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16385688"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/414#discussion_r16385688"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/414"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20056545",
        "pull_request_review_id": null,
        "id": 20056545,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDU2NTQ1",
        "diff_hunk": "@@ -272,7 +276,7 @@ class CairoOutputDev: public OutputDev {\n   cairo_filter_t getFilterForSurface(cairo_surface_t *image,\n \t\t\t\t     GBool interpolate);\n   GBool getStreamData (Stream *str, char **buffer, int *length);\n-  virtual void setMimeData(Stream *str, Object *ref, cairo_surface_t *image);\n+  void setMimeData(GfxState *state, Stream *str, Object *ref, cairo_surface_t *image);\n   void fillToStrokePathClip(GfxState *state);",
        "path": "3rdparty/poppler/git/CairoOutputDev.h",
        "position": 26,
        "original_position": 26,
        "commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "original_commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Remove `virtual` here may break `--svg-embed-bitmap 0`, because `CairoBackgroundRenderer` can no longer override `setMimeData()`.\n",
        "created_at": "2014-11-09T04:25:18Z",
        "updated_at": "2014-11-09T04:25:18Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20056545",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20056545"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20056545"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20056600",
        "pull_request_review_id": null,
        "id": 20056600,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDU2NjAw",
        "diff_hunk": "@@ -165,21 +170,44 @@ bool CairoBackgroundRenderer::render_page(PDFDoc * doc, int pageno)\n     }\n \n     //check node count in the svg file, fall back to bitmap_renderer if necessary.\n-    if (param.svg_node_count_limit >= 0)\n+    if (param.svg_node_count_limit >= 0 || param.svg_image_count_limit >= 0)\n     {\n         int n = 0;\n+        int images = 0;\n         char c;\n         ifstream svgfile(fn);\n         //count of '<' in the file should be an approximation of node count.\n         while(svgfile >> c)\n         {\n-            if (c == '<')\n+            if (c == '<') {\n                 ++n;\n-            if (n > param.svg_node_count_limit)\n-            {\n-                html_renderer->tmp_files.add(fn);\n-                return false;\n-            }\n+                int p = 0;\n+                // count number of image tags\n+                while (svgfile.get(c) && c == \"image \"[p]) {\n+                    p++;\n+                }\n+                if (c) {\n+                    if (p == 6) {\n+                        images++;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 41,
        "original_position": 41,
        "commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "original_commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Isn't `CairoBackgroundRenderer::setMimeData()` a better place to count images? Counting in overridden `drawImage()` may also work.\n",
        "created_at": "2014-11-09T04:38:49Z",
        "updated_at": "2014-11-09T04:39:31Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20056600",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20056600"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20056600"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20067990",
        "pull_request_review_id": null,
        "id": 20067990,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDY3OTkw",
        "diff_hunk": "@@ -272,7 +276,7 @@ class CairoOutputDev: public OutputDev {\n   cairo_filter_t getFilterForSurface(cairo_surface_t *image,\n \t\t\t\t     GBool interpolate);\n   GBool getStreamData (Stream *str, char **buffer, int *length);\n-  virtual void setMimeData(Stream *str, Object *ref, cairo_surface_t *image);\n+  void setMimeData(GfxState *state, Stream *str, Object *ref, cairo_surface_t *image);\n   void fillToStrokePathClip(GfxState *state);",
        "path": "3rdparty/poppler/git/CairoOutputDev.h",
        "position": 26,
        "original_position": 26,
        "commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "original_commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes you are right.\n",
        "created_at": "2014-11-10T06:13:28Z",
        "updated_at": "2014-11-10T06:13:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20067990",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20067990"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20067990"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20079859",
        "pull_request_review_id": null,
        "id": 20079859,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDc5ODU5",
        "diff_hunk": "@@ -165,21 +170,44 @@ bool CairoBackgroundRenderer::render_page(PDFDoc * doc, int pageno)\n     }\n \n     //check node count in the svg file, fall back to bitmap_renderer if necessary.\n-    if (param.svg_node_count_limit >= 0)\n+    if (param.svg_node_count_limit >= 0 || param.svg_image_count_limit >= 0)\n     {\n         int n = 0;\n+        int images = 0;\n         char c;\n         ifstream svgfile(fn);\n         //count of '<' in the file should be an approximation of node count.\n         while(svgfile >> c)\n         {\n-            if (c == '<')\n+            if (c == '<') {\n                 ++n;\n-            if (n > param.svg_node_count_limit)\n-            {\n-                html_renderer->tmp_files.add(fn);\n-                return false;\n-            }\n+                int p = 0;\n+                // count number of image tags\n+                while (svgfile.get(c) && c == \"image \"[p]) {\n+                    p++;\n+                }\n+                if (c) {\n+                    if (p == 6) {\n+                        images++;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 41,
        "original_position": 41,
        "commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "original_commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "user": {
            "login": "davidhedley",
            "id": 6061696,
            "node_id": "MDQ6VXNlcjYwNjE2OTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6061696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidhedley",
            "html_url": "https://github.com/davidhedley",
            "followers_url": "https://api.github.com/users/davidhedley/followers",
            "following_url": "https://api.github.com/users/davidhedley/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidhedley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidhedley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidhedley/subscriptions",
            "organizations_url": "https://api.github.com/users/davidhedley/orgs",
            "repos_url": "https://api.github.com/users/davidhedley/repos",
            "events_url": "https://api.github.com/users/davidhedley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidhedley/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is possibly/probably true. However I wasn't sure if counting images elsewhere would capture all possible images being written to the SVG. Feel free to change/correct it!\n",
        "created_at": "2014-11-10T12:53:31Z",
        "updated_at": "2014-11-10T12:53:31Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20079859",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20079859"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20079859"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20079868",
        "pull_request_review_id": null,
        "id": 20079868,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDc5ODY4",
        "diff_hunk": "@@ -272,7 +276,7 @@ class CairoOutputDev: public OutputDev {\n   cairo_filter_t getFilterForSurface(cairo_surface_t *image,\n \t\t\t\t     GBool interpolate);\n   GBool getStreamData (Stream *str, char **buffer, int *length);\n-  virtual void setMimeData(Stream *str, Object *ref, cairo_surface_t *image);\n+  void setMimeData(GfxState *state, Stream *str, Object *ref, cairo_surface_t *image);\n   void fillToStrokePathClip(GfxState *state);",
        "path": "3rdparty/poppler/git/CairoOutputDev.h",
        "position": 26,
        "original_position": 26,
        "commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "original_commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "user": {
            "login": "davidhedley",
            "id": 6061696,
            "node_id": "MDQ6VXNlcjYwNjE2OTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6061696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidhedley",
            "html_url": "https://github.com/davidhedley",
            "followers_url": "https://api.github.com/users/davidhedley/followers",
            "following_url": "https://api.github.com/users/davidhedley/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidhedley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidhedley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidhedley/subscriptions",
            "organizations_url": "https://api.github.com/users/davidhedley/orgs",
            "repos_url": "https://api.github.com/users/davidhedley/repos",
            "events_url": "https://api.github.com/users/davidhedley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidhedley/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I will fix this in the PR to incoming\n",
        "created_at": "2014-11-10T12:53:43Z",
        "updated_at": "2014-11-10T12:53:43Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20079868",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20079868"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20079868"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20087405",
        "pull_request_review_id": null,
        "id": 20087405,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg3NDA1",
        "diff_hunk": "@@ -165,21 +170,44 @@ bool CairoBackgroundRenderer::render_page(PDFDoc * doc, int pageno)\n     }\n \n     //check node count in the svg file, fall back to bitmap_renderer if necessary.\n-    if (param.svg_node_count_limit >= 0)\n+    if (param.svg_node_count_limit >= 0 || param.svg_image_count_limit >= 0)\n     {\n         int n = 0;\n+        int images = 0;\n         char c;\n         ifstream svgfile(fn);\n         //count of '<' in the file should be an approximation of node count.\n         while(svgfile >> c)\n         {\n-            if (c == '<')\n+            if (c == '<') {\n                 ++n;\n-            if (n > param.svg_node_count_limit)\n-            {\n-                html_renderer->tmp_files.add(fn);\n-                return false;\n-            }\n+                int p = 0;\n+                // count number of image tags\n+                while (svgfile.get(c) && c == \"image \"[p]) {\n+                    p++;\n+                }\n+                if (c) {\n+                    if (p == 6) {\n+                        images++;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 41,
        "original_position": 41,
        "commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "original_commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think they should capture all, if not, there are bugs. Simply put a printf in those functions and test with some PDFs. \nBy the way, If one image xobject is drawn many times on a PDF page, `drawImage()` will be called many times, while `setMimeData()` may be called only once. In the output SVG, there may be only one `<image>` element, while there are many `<use>` elements referencing that `<image>`. According to your tests, which element's count is more relevant to killing a web browser?\n",
        "created_at": "2014-11-10T15:21:30Z",
        "updated_at": "2014-11-10T15:21:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20087405",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20087405"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20087405"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20154532",
        "pull_request_review_id": null,
        "id": 20154532,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTU0NTMy",
        "diff_hunk": "@@ -165,21 +170,44 @@ bool CairoBackgroundRenderer::render_page(PDFDoc * doc, int pageno)\n     }\n \n     //check node count in the svg file, fall back to bitmap_renderer if necessary.\n-    if (param.svg_node_count_limit >= 0)\n+    if (param.svg_node_count_limit >= 0 || param.svg_image_count_limit >= 0)\n     {\n         int n = 0;\n+        int images = 0;\n         char c;\n         ifstream svgfile(fn);\n         //count of '<' in the file should be an approximation of node count.\n         while(svgfile >> c)\n         {\n-            if (c == '<')\n+            if (c == '<') {\n                 ++n;\n-            if (n > param.svg_node_count_limit)\n-            {\n-                html_renderer->tmp_files.add(fn);\n-                return false;\n-            }\n+                int p = 0;\n+                // count number of image tags\n+                while (svgfile.get(c) && c == \"image \"[p]) {\n+                    p++;\n+                }\n+                if (c) {\n+                    if (p == 6) {\n+                        images++;",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": 41,
        "original_position": 41,
        "commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "original_commit_id": "e79a37dc12dbe26fdd937fa38f84cfd9df7e64c3",
        "user": {
            "login": "davidhedley",
            "id": 6061696,
            "node_id": "MDQ6VXNlcjYwNjE2OTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6061696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidhedley",
            "html_url": "https://github.com/davidhedley",
            "followers_url": "https://api.github.com/users/davidhedley/followers",
            "following_url": "https://api.github.com/users/davidhedley/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidhedley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidhedley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidhedley/subscriptions",
            "organizations_url": "https://api.github.com/users/davidhedley/orgs",
            "repos_url": "https://api.github.com/users/davidhedley/repos",
            "events_url": "https://api.github.com/users/davidhedley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidhedley/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's a good question - I'm not sure to be honest. The typical cases I've seen is where some PDF producers convert a single (say) 1000px high original image into 1000 1-line images in the PDF. Having 1000 img/image tags on a single web page will completely kill a desktop web browser, let alone a mobile web browser. I guess therefore we should probably count the actual number of images being drawn (i.e. drawImage), rather than the number of different image objects (setMimeData).\n",
        "created_at": "2014-11-11T15:02:13Z",
        "updated_at": "2014-11-11T15:02:13Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20154532",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20154532"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/431#discussion_r20154532"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/431"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20225178",
        "pull_request_review_id": null,
        "id": 20225178,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjI1MTc4",
        "diff_hunk": "@@ -21,4 +21,4 @@ script:\n branches:\n   only:\n     - master\n-    - travis\n+    - incoming",
        "path": ".travis.yml",
        "position": 5,
        "original_position": 5,
        "commit_id": "6026465b5351c7bcc75628b7dbd0a8a2c65b6c79",
        "original_commit_id": "b0b93f871bfee4829ce5fecbdceb89acbb76904e",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "travis build is broken due to a misconfiguration of `compatibility.min.js`, so I haven't changed `.travis.yml`.\nBut I'll fix it soon, so this is OK.\n",
        "created_at": "2014-11-12T15:20:10Z",
        "updated_at": "2014-11-13T13:39:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/444#discussion_r20225178",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/444",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20225178"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/444#discussion_r20225178"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/444"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20271801",
        "pull_request_review_id": null,
        "id": 20271801,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjcxODAx",
        "diff_hunk": "@@ -167,21 +172,44 @@ bool CairoBackgroundRenderer::render_page(PDFDoc * doc, int pageno)\n     }\n \n     //check node count in the svg file, fall back to bitmap_renderer if necessary.\n-    if (param.svg_node_count_limit >= 0)\n+    if (param.svg_node_count_limit >= 0 || param.svg_image_count_limit >= 0)\n     {\n         int n = 0;\n+        int images = 0;\n         char c;\n         ifstream svgfile(fn);\n         //count of '<' in the file should be an approximation of node count.\n         while(svgfile >> c)\n         {\n-            if (c == '<')\n+            if (c == '<') {\n                 ++n;\n-            if (n > param.svg_node_count_limit)\n-            {\n-                html_renderer->tmp_files.add(fn);\n-                return false;\n-            }\n+                int p = 0;\n+                // count number of image tags\n+                while (svgfile.get(c) && c == \"image \"[p]) {",
        "path": "src/BackgroundRenderer/CairoBackgroundRenderer.cc",
        "position": null,
        "original_position": 36,
        "commit_id": "6026465b5351c7bcc75628b7dbd0a8a2c65b6c79",
        "original_commit_id": "b0b93f871bfee4829ce5fecbdceb89acbb76904e",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is there an issue of overflowing here?\n",
        "created_at": "2014-11-13T04:15:14Z",
        "updated_at": "2014-11-13T13:39:30Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/444#discussion_r20271801",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/444",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20271801"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/444#discussion_r20271801"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/444"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572781",
        "pull_request_review_id": null,
        "id": 16572781,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTcyNzgx",
        "diff_hunk": "@@ -0,0 +1,101 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" ",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 47,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "f8404691edb7fb82e3383bb6cc7d6f8779a5a2d7",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Almost all the styles are managed by `StateManager`, so we can use the class names, in order to make the output file smaller. You can read some other parts for reference.\nNot sure if we need a special class name for form elements, which are defined in `src/css_class_names.cmakelists.txt`.\n\nDo we need the `id` for the elements, maybe we need to extract the information from JavaScript, but not sure if there are other ways.\n",
        "created_at": "2014-08-21T22:17:19Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572781",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572781"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572781"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572794",
        "pull_request_review_id": null,
        "id": 16572794,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTcyNzk0",
        "diff_hunk": "@@ -0,0 +1,101 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                << \" style=\\\"position: absolute; left: \" << std::to_string(x1) << \n+                \"px; bottom: \" << std::to_string(y1) << \"px;\" <<\n+                \"width: \" << std::to_string(width) << \"px; height: \" << std::to_string(height) << \n+                \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                << std::to_string(font_size) << \"px;\\\" class=\\\"text_input\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)\n+        {\n+            out << \"<div id=\\\"cb-\" << std::to_string(pageNum) << \"-\" ",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 58,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "f8404691edb7fb82e3383bb6cc7d6f8779a5a2d7",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Probably we should use `<button>`\n",
        "created_at": "2014-08-21T22:17:39Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572794",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572794"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572794"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572830",
        "pull_request_review_id": null,
        "id": 16572830,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTcyODMw",
        "diff_hunk": "@@ -0,0 +1,101 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                << \" style=\\\"position: absolute; left: \" << std::to_string(x1) << \n+                \"px; bottom: \" << std::to_string(y1) << \"px;\" <<\n+                \"width: \" << std::to_string(width) << \"px; height: \" << std::to_string(height) << \n+                \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                << std::to_string(font_size) << \"px;\\\" class=\\\"text_input\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)\n+        {\n+            out << \"<div id=\\\"cb-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\"\" \n+                << \" style=\\\"opacity:0.0; position: absolute; left: \" << std::to_string(x1) << \n+                \"px; bottom: \" << std::to_string(y1) << \"px;\" <<\n+                \"width: \" << std::to_string(width) << \"px; height: \" << std::to_string(height) << \n+                \"px;  font-size: 20px; \\\" class=\\\"checkbox checkbox-\" <<\n+                std::to_string(pageNum) << \"\\\">X</div>\" << endl;\n+\n+        }\n+    }\n+\n+    //output, at the end, the necessary js\n+    if(num > 0) {",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 70,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "f8404691edb7fb82e3383bb6cc7d6f8779a5a2d7",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you explain the purpose of this js code? If we do need them, please do that in `share/pdf2htmlEX.js.in`.\n",
        "created_at": "2014-08-21T22:18:25Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572830",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572830"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572830"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572921",
        "pull_request_review_id": null,
        "id": 16572921,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTcyOTIx",
        "diff_hunk": "@@ -0,0 +1,101 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                << \" style=\\\"position: absolute; left: \" << std::to_string(x1) << \n+                \"px; bottom: \" << std::to_string(y1) << \"px;\" <<\n+                \"width: \" << std::to_string(width) << \"px; height: \" << std::to_string(height) << \n+                \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                << std::to_string(font_size) << \"px;\\\" class=\\\"text_input\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)\n+        {\n+            out << \"<div id=\\\"cb-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\"\" \n+                << \" style=\\\"opacity:0.0; position: absolute; left: \" << std::to_string(x1) << \n+                \"px; bottom: \" << std::to_string(y1) << \"px;\" <<\n+                \"width: \" << std::to_string(width) << \"px; height: \" << std::to_string(height) << \n+                \"px;  font-size: 20px; \\\" class=\\\"checkbox checkbox-\" <<\n+                std::to_string(pageNum) << \"\\\">X</div>\" << endl;\n+\n+        }\n+    }\n+\n+    //output, at the end, the necessary js\n+    if(num > 0) {\n+        //this is currently page specific\n+        out << \"<script type=\\\"text/javascript\\\">\" << endl << \n+            \"var checkboxes = document.getElementsByClassName(\\\"checkbox-\" <<\n+            std::to_string(pageNum) << \"\\\");\" << endl <<\n+            \"var c = checkboxes.item(0);\" << endl <<\n+            \"console.log(c);\" << endl <<\n+            \"for(var i = 0; i < checkboxes.length; i++) {\" << endl <<\n+            \"var c = checkboxes[i];\" << endl <<\n+            \"c.addEventListener('click', function() {\" << endl <<\n+            \"if(this.style.opacity == 1)\" << endl << \n+            \"this.style.opacity = 0;\" << endl <<\n+            \"else\" << endl << \n+            \"this.style.opacity = 1;\" << endl <<\n+            \"});\" << endl <<\n+            \"}\" << endl <<\n+            \"</script>\" << endl;\n+    }\n+}\n+\n+void HTMLRenderer::dump_form_css(ostream & out)\n+{",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 91,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "f8404691edb7fb82e3383bb6cc7d6f8779a5a2d7",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For static css rules, please add them in `share/base.css.in`\nThe class names are likely to conflict with other use case, so it's better to use abbreviations as in `css_class_names.cmakelists.txt`.\nWhy we need to specify these rules?\n",
        "created_at": "2014-08-21T22:19:52Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572921",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572921"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572921"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572945",
        "pull_request_review_id": null,
        "id": 16572945,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTcyOTQ1",
        "diff_hunk": "@@ -62,6 +62,9 @@ struct Param\n     int tounicode;\n     int optimize_text;\n \n+    // adobe form\n+    int include_forms;",
        "path": "src/Param.h",
        "position": null,
        "original_position": 5,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "f8404691edb7fb82e3383bb6cc7d6f8779a5a2d7",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please rename it `process_forms`.\n",
        "created_at": "2014-08-21T22:20:16Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572945",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572945"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572945"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572982",
        "pull_request_review_id": null,
        "id": 16572982,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTcyOTgy",
        "diff_hunk": "@@ -189,6 +189,9 @@ void parse_options (int argc, char **argv)\n         .add(\"optimize-text\", &param.optimize_text, 0, \"try to reduce the number of HTML elements used for text\")\n         .add(\"correct-text-visibility\", &param.correct_text_visibility, 0, \"try to detect texts covered by other graphics and properly arrange them\")\n \n+        // adobe forms\n+        .add(\"include-forms\", &param.include_forms, 0, \"include text fields and such\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 5,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "f8404691edb7fb82e3383bb6cc7d6f8779a5a2d7",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please rename it to `process-form`, group it with other `process-` options, and describe in the manpage.\n",
        "created_at": "2014-08-21T22:20:54Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572982",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/16572982"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r16572982"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/18364102",
        "pull_request_review_id": null,
        "id": 18364102,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzY0MTAy",
        "diff_hunk": "@@ -0,0 +1,101 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" ",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 47,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "f8404691edb7fb82e3383bb6cc7d6f8779a5a2d7",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I added both class names in the file you mentionned. As for the id, it is not needed for pdf2htmlEX per se, but I do need it for my project (as I'm adding functionnalities on top of these HTML documents). I do not think these represents such problems as they are now.\n",
        "created_at": "2014-10-02T20:12:00Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r18364102",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/18364102"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r18364102"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/18364361",
        "pull_request_review_id": null,
        "id": 18364361,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzY0MzYx",
        "diff_hunk": "@@ -0,0 +1,101 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                << \" style=\\\"position: absolute; left: \" << std::to_string(x1) << \n+                \"px; bottom: \" << std::to_string(y1) << \"px;\" <<\n+                \"width: \" << std::to_string(width) << \"px; height: \" << std::to_string(height) << \n+                \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                << std::to_string(font_size) << \"px;\\\" class=\\\"text_input\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)\n+        {\n+            out << \"<div id=\\\"cb-\" << std::to_string(pageNum) << \"-\" ",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 58,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "f8404691edb7fb82e3383bb6cc7d6f8779a5a2d7",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Using a div here is bit unorthodox, I admit. Here's my reasoning : these would usually be either a checkbox or a radio button, in typical HTML. But the way these are shown in the PDF document, it simply adds an image on top of some text (like \"a)\" ) and as such, it is quite different, visually, from typical checkboxes. A <button> would represent the same problem.\n\nAnd so I resorted to copy the behavior shown in the PDF document, adding the same type of content (here a textual \"X\" which should become a small check icon) over the text.\n\nI can send you example of what I just described if you want.\n",
        "created_at": "2014-10-02T20:16:37Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r18364361",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/18364361"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r18364361"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051245",
        "pull_request_review_id": null,
        "id": 20051245,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDUxMjQ1",
        "diff_hunk": "@@ -139,6 +139,10 @@ Whether to show outline in the generated HTML\n Whether to show annotation in the generated HTML\n \n .TP\n+.B \\-\\-process-forms <0|1> (Default: 0)",
        "path": "pdf2htmlEX.1.in",
        "position": null,
        "original_position": 4,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please change to `process-form`\n",
        "created_at": "2014-11-08T11:17:25Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051245",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051245"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051245"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051253",
        "pull_request_review_id": null,
        "id": 20051253,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDUxMjUz",
        "diff_hunk": "@@ -190,4 +190,17 @@\n   -ms-transform-origin:0% 100%;\n   -webkit-transform-origin:0% 100%;\n }\n+/* for the forms */\n+.@CSS_INPUT_TEXT_CN@ {\n+  border: none;\n+  background-color: rgba(255, 255, 255, 0.0);\n+}\n+\n+.@CSS_INPUT_RADIO_CN@:hover {\n+  cursor: pointer;\n+}\n+\n+.checked {",
        "path": "share/base.css.in",
        "position": null,
        "original_position": 14,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't like the 'checked' class. It may be replaced by a CSS selector.\nAlso, please move this rule to `fancy.css.in` since it's a \"fancy\" style.\n",
        "created_at": "2014-11-08T11:20:36Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051253",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051253"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051253"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051255",
        "pull_request_review_id": null,
        "id": 20051255,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDUxMjU1",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 4,
        "original_position": 4,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think this function is not necessary if you a CSS selector\n",
        "created_at": "2014-11-08T11:21:04Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051255",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051255"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051255"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051257",
        "pull_request_review_id": null,
        "id": 20051257,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDUxMjU3",
        "diff_hunk": "@@ -0,0 +1,934 @@\n+/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab filetype=javascript : */",
        "path": "share/pdf2htmlEX.min.js",
        "position": null,
        "original_position": 1,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why are you adding this file?\n",
        "created_at": "2014-11-08T11:21:17Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051257",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051257"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051257"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051289",
        "pull_request_review_id": null,
        "id": 20051289,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDUxMjg5",
        "diff_hunk": "@@ -0,0 +1,101 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" ",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 47,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "f8404691edb7fb82e3383bb6cc7d6f8779a5a2d7",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, I think without ID the input fields are less useful, but the prefixes `text-` and `cb-` may not be clear enough.\nI'd suggest using `CSS_INPUT_TEXT_CN` or `CSS_INPUT_RADIO_CN`\n\nAnd please register the values (e.g. height, width) using `StateManager`, as done in other files.\n",
        "created_at": "2014-11-08T11:29:44Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051289",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051289"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051289"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051294",
        "pull_request_review_id": null,
        "id": 20051294,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDUxMjk0",
        "diff_hunk": "@@ -0,0 +1,72 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 48,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The source code is kind of messy here, can you tweak it according to other files? \nE.g. https://github.com/coolwanglu/pdf2htmlEX/blob/master/src/HTMLRenderer/general.cc#L210\n",
        "created_at": "2014-11-08T11:32:27Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051294",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051294"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051294"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051296",
        "pull_request_review_id": null,
        "id": 20051296,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDUxMjk2",
        "diff_hunk": "@@ -0,0 +1,72 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                << \" style=\\\"position: absolute; left: \" << std::to_string(x1) << \n+                \"px; bottom: \" << std::to_string(y1) << \"px;\" <<\n+                \"width: \" << std::to_string(width) << \"px; height: \" << std::to_string(height) << \n+                \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                << std::to_string(font_size) << \"px;\\\" class=\\\"\" << CSS::INPUT_TEXT_CN << \"\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)\n+        {\n+            width += 3;",
        "path": "src/HTMLRenderer/form.cc",
        "position": 60,
        "original_position": 58,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is this?\n",
        "created_at": "2014-11-08T11:32:41Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051296",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051296"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051296"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051300",
        "pull_request_review_id": null,
        "id": 20051300,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDUxMzAw",
        "diff_hunk": "@@ -0,0 +1,72 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                << \" style=\\\"position: absolute; left: \" << std::to_string(x1) << \n+                \"px; bottom: \" << std::to_string(y1) << \"px;\" <<\n+                \"width: \" << std::to_string(width) << \"px; height: \" << std::to_string(height) << \n+                \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                << std::to_string(font_size) << \"px;\\\" class=\\\"\" << CSS::INPUT_TEXT_CN << \"\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)\n+        {\n+            width += 3;\n+            height += 3;\n+\n+            out << \"<div id=\\\"cb-\" << std::to_string(pageNum) << \"-\" ",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 61,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Same as above.\n",
        "created_at": "2014-11-08T11:33:03Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051300",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051300"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051300"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051303",
        "pull_request_review_id": null,
        "id": 20051303,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDUxMzAz",
        "diff_hunk": "@@ -164,6 +164,7 @@ void parse_options (int argc, char **argv)\n         .add(\"process-nontext\", &param.process_nontext, 1, \"render graphics in addition to text\")\n         .add(\"process-outline\", &param.process_outline, 1, \"show outline in HTML\")\n         .add(\"process-annotation\", &param.process_annotation, 0, \"show annotation in HTML\")\n+        .add(\"process-forms\", &param.process_forms, 0, \"include text fields and radio buttons\")",
        "path": "src/pdf2htmlEX.cc",
        "position": null,
        "original_position": 4,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "please change to `process-form`\n",
        "created_at": "2014-11-08T11:33:45Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051303",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051303"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051303"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051305",
        "pull_request_review_id": null,
        "id": 20051305,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDUxMzA1",
        "diff_hunk": "@@ -38,6 +38,7 @@ struct Param\n     int process_nontext;\n     int process_outline;\n     int process_annotation;\n+    int process_forms;",
        "path": "src/Param.h",
        "position": null,
        "original_position": 4,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "please change to `process_form`\n",
        "created_at": "2014-11-08T11:34:19Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051305",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20051305"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20051305"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20087358",
        "pull_request_review_id": null,
        "id": 20087358,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg3MzU4",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 4,
        "original_position": 4,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In a way or another, with or without a CSS selector (even the :checked one) I need these few lines of js. Thing is these radio buttons are merely \"div\" elements, so I need JS to add and remove this specific class, the one who will display the actual \"checked\" symbol.\n",
        "created_at": "2014-11-10T15:20:49Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20087358",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20087358"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20087358"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20087461",
        "pull_request_review_id": null,
        "id": 20087461,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg3NDYx",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 4,
        "original_position": 4,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If they are for your own project, please remove them here.\n",
        "created_at": "2014-11-10T15:22:33Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20087461",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20087461"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20087461"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20087711",
        "pull_request_review_id": null,
        "id": 20087711,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg3NzEx",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 4,
        "original_position": 4,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No they are needed for the checkboxes / radio buttons to display correctly, which is what this branch is about. These lines of code are not specifically for my project.\n",
        "created_at": "2014-11-10T15:25:49Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20087711",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20087711"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20087711"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20087970",
        "pull_request_review_id": null,
        "id": 20087970,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg3OTcw",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 4,
        "original_position": 4,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, I see.\nThen why not using `<input type=\"radio\">` ?\n\nOn Mon, Nov 10, 2014 at 11:25 PM, Simon Chenard notifications@github.com\nwrote:\n\n> In share/pdf2htmlEX.js.in:\n> \n> > @@ -260,7 +260,24 @@ Viewer.prototype = {\n> >      this.pre_hide_pages();\n> >    },\n> > -  initialize_radio_button : function() {\n> \n> No they are needed for the checkboxes / radio buttons to display\n> correctly, which is what this branch is about. These lines of code are not\n> specifically for my project.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/coolwanglu/pdf2htmlEX/pull/413/files#r20087711.\n",
        "created_at": "2014-11-10T15:29:06Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20087970",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20087970"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20087970"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20089025",
        "pull_request_review_id": null,
        "id": 20089025,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg5MDI1",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 4,
        "original_position": 4,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Both types of input (radio or checkbox) simply do not behave the same way they do in HTML, compared to a PDF. Please see a these examples : https://dl.dropboxusercontent.com/u/7037559/checkbox-sample.zip \n\nThe first problem is they're not uniform, it is up to the user creating the PDF I assume. This is minor and I'm currently not taking care of this, replacing these by a pre-determined image. The main problem is their position : right on top of existing text. Using a html input there would be quite ugly, I think. I might just place it next to the text then - but in some documents, the position of the element is not right on top of the \"a)\" but to the left. Which is hard to know beforehand, since again, it is up to the user creating the PDF.\n\nSo basically, form inside of PDF document do not behave or respect the same set of rules they have in HTML. As such I had to take a few liberties to adapt the display.\n",
        "created_at": "2014-11-10T15:43:44Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20089025",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20089025"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20089025"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20089299",
        "pull_request_review_id": null,
        "id": 20089299,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg5Mjk5",
        "diff_hunk": "@@ -0,0 +1,934 @@\n+/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab filetype=javascript : */",
        "path": "share/pdf2htmlEX.min.js",
        "position": null,
        "original_position": 1,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I didn't remember adding this, so I checked with \"git blame\" on share/pdf2htmlEX.js.in and I've got this : 13873d99 share/pdf2htmlEX.js.in        (Lu Wang         2013-03-31 17:41:38 +0800   1) /\\* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab filetype=javascript : */\n",
        "created_at": "2014-11-10T15:47:44Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20089299",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20089299"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20089299"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20089370",
        "pull_request_review_id": null,
        "id": 20089370,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg5Mzcw",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 4,
        "original_position": 4,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks for your explanation. I'll try to solve this with CSS tricks.\nThen I think your patch would be OK, until we have a better solution.\n",
        "created_at": "2014-11-10T15:48:39Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20089370",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20089370"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20089370"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20089463",
        "pull_request_review_id": null,
        "id": 20089463,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg5NDYz",
        "diff_hunk": "@@ -0,0 +1,934 @@\n+/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab filetype=javascript : */",
        "path": "share/pdf2htmlEX.min.js",
        "position": null,
        "original_position": 1,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I didn't mean this line, I meant this file.\n",
        "created_at": "2014-11-10T15:49:53Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20089463",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20089463"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20089463"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20363606",
        "pull_request_review_id": null,
        "id": 20363606,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYzNjA2",
        "diff_hunk": "@@ -0,0 +1,934 @@\n+/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab filetype=javascript : */",
        "path": "share/pdf2htmlEX.min.js",
        "position": null,
        "original_position": 1,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oops... That was a mistake, I've got rid of it.\n",
        "created_at": "2014-11-14T15:12:06Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20363606",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20363606"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20363606"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20363920",
        "pull_request_review_id": null,
        "id": 20363920,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYzOTIw",
        "diff_hunk": "@@ -0,0 +1,72 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                << \" style=\\\"position: absolute; left: \" << std::to_string(x1) << \n+                \"px; bottom: \" << std::to_string(y1) << \"px;\" <<\n+                \"width: \" << std::to_string(width) << \"px; height: \" << std::to_string(height) << \n+                \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                << std::to_string(font_size) << \"px;\\\" class=\\\"\" << CSS::INPUT_TEXT_CN << \"\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)\n+        {\n+            width += 3;",
        "path": "src/HTMLRenderer/form.cc",
        "position": 60,
        "original_position": 58,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You'd have to be more specific here, I'm not sure what the issue is. Why am i modifying the width?\n",
        "created_at": "2014-11-14T15:17:10Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20363920",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20363920"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20363920"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20371620",
        "pull_request_review_id": null,
        "id": 20371620,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzcxNjIw",
        "diff_hunk": "@@ -0,0 +1,72 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 48,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I went ahead and cleaned it up as you suggested. However I had a question regarding the conversion process, from double or int to string. How come int are transferred in hexadecimal string of number, and not the case for double? Also in your example, wid and hid are of the long long type : I tried to use the same type, but in my case they are converted to hexadecimal number, which is obviously not going to work... Any idea why that is?\n",
        "created_at": "2014-11-14T17:08:22Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20371620",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20371620"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20371620"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20399090",
        "pull_request_review_id": null,
        "id": 20399090,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk5MDkw",
        "diff_hunk": "@@ -0,0 +1,72 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                << \" style=\\\"position: absolute; left: \" << std::to_string(x1) << \n+                \"px; bottom: \" << std::to_string(y1) << \"px;\" <<\n+                \"width: \" << std::to_string(width) << \"px; height: \" << std::to_string(height) << \n+                \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                << std::to_string(font_size) << \"px;\\\" class=\\\"\" << CSS::INPUT_TEXT_CN << \"\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)\n+        {\n+            width += 3;",
        "path": "src/HTMLRenderer/form.cc",
        "position": 60,
        "original_position": 58,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Where does the constant 3 come from?\n",
        "created_at": "2014-11-15T02:38:16Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20399090",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20399090"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20399090"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20399192",
        "pull_request_review_id": null,
        "id": 20399192,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk5MTky",
        "diff_hunk": "@@ -0,0 +1,72 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 48,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The integers are ID's, used as CSS classes, not the values (e.g. of\nheight). You need to install the values and use the class IDs.\n\nOn Sat, Nov 15, 2014 at 1:08 AM, Simon Chenard notifications@github.com\nwrote:\n\n> In src/HTMLRenderer/form.cc:\n> \n> > +\n> > -        w->getRect(&x1, &y1, &x2, &y2);\n> > -        x1 = x1 \\* param.zoom;\n> > -        x2 = x2 \\* param.zoom;\n> > -        y1 = y1 \\* param.zoom;\n> > -        y2 = y2 \\* param.zoom;\n> >   +\n> > -        width = x2 - x1;\n> > -        height = y2 - y1;\n> >   +\n> > -        if(w->getType() == formText)\n> > -        {\n> > -            font_size = height / 2;\n> >   +\n> > -            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\"\n> > -                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n> \n> I went ahead and cleaned it up as you suggested. However I had a question\n> regarding the conversion process, from double or int to string. How come\n> int are transferred in hexadecimal string of number, and not the case for\n> double? Also in your example, wid and hid are of the long long type : I\n> tried to use the same type, but in my case they are converted to\n> hexadecimal number, which is obviously not going to work... Any idea why\n> that is?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/coolwanglu/pdf2htmlEX/pull/413/files#r20371620.\n",
        "created_at": "2014-11-15T02:46:52Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20399192",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/20399192"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r20399192"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/21256246",
        "pull_request_review_id": null,
        "id": 21256246,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjU2MjQ2",
        "diff_hunk": "@@ -0,0 +1,72 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ostream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ostream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2;\n+        int width, height, font_size;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out << \"<input id=\\\"text-\" << std::to_string(pageNum) << \"-\" \n+                << std::to_string(i) << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                << \" style=\\\"position: absolute; left: \" << std::to_string(x1) << \n+                \"px; bottom: \" << std::to_string(y1) << \"px;\" <<\n+                \"width: \" << std::to_string(width) << \"px; height: \" << std::to_string(height) << \n+                \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                << std::to_string(font_size) << \"px;\\\" class=\\\"\" << CSS::INPUT_TEXT_CN << \"\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)\n+        {\n+            width += 3;",
        "path": "src/HTMLRenderer/form.cc",
        "position": 60,
        "original_position": 58,
        "commit_id": "87bc6c06d4b3a12e2afbb34cc7da31c51f6517b0",
        "original_commit_id": "6fe0262427932006ada67250b7fa73ed0fa207ec",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's a judgement call. In some documents the element's coordinates where quite small and overall the 3 pixel helps a bit to make the whole thing easier to read.\n",
        "created_at": "2014-12-03T19:13:35Z",
        "updated_at": "2014-12-03T19:31:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r21256246",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/21256246"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/413#discussion_r21256246"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/413"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074202",
        "pull_request_review_id": null,
        "id": 23074202,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDc0MjAy",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {\n+    var elements = document.getElementsByClassName('ir');\n+    \n+    for(var i = 0; i < elements.length; i++) {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 7,
        "original_position": 7,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "how about using `document.getElementsByClassName(...).forEach` here?\n",
        "created_at": "2015-01-16T10:57:08Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074202",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074202"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074202"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074235",
        "pull_request_review_id": null,
        "id": 23074235,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDc0MjM1",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {\n+    var elements = document.getElementsByClassName('ir');\n+    \n+    for(var i = 0; i < elements.length; i++) {\n+      var r = elements[i];\n+\n+      r.addEventListener('click', function() {\n+        if(this.className.search(\"checked\") == -1)",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 11,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this could be made simpler with `classList`\n",
        "created_at": "2015-01-16T10:57:43Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074235",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074235"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074235"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074288",
        "pull_request_review_id": null,
        "id": 23074288,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDc0Mjg4",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {\n+    var elements = document.getElementsByClassName('ir');\n+    \n+    for(var i = 0; i < elements.length; i++) {\n+      var r = elements[i];\n+\n+      r.addEventListener('click', function() {\n+        if(this.className.search(\"checked\") == -1)\n+          this.className += \" checked\";\n+        else\n+          this.className = \"ir\";\n+      });\n+    }\n+  },\n+\n   init_after_loading_content : function() {\n+    this.initialize_radio_button();",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 20,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please move this near the end of this function.\n",
        "created_at": "2015-01-16T10:58:46Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074288",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074288"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074288"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074364",
        "pull_request_review_id": null,
        "id": 23074364,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDc0MzY0",
        "diff_hunk": "@@ -0,0 +1,75 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ofstream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ofstream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2, width, font_size;",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 31,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please declare variable near the first usage.\n",
        "created_at": "2015-01-16T11:00:27Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074364",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074364"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074364"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074521",
        "pull_request_review_id": null,
        "id": 23074521,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDc0NTIx",
        "diff_hunk": "@@ -0,0 +1,75 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ofstream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ofstream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2, width, font_size;\n+        int height;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out \n+                << \"<input id=\\\"text-\" << pageNum << \"-\" ",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 48,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please rearrange this part, it looks messy here.\nAlso please move `class` to right after `id`.\n\nExample: https://github.com/coolwanglu/pdf2htmlEX/blob/master/src/HTMLTextLine.cc#L151\n",
        "created_at": "2015-01-16T11:03:56Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074521",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074521"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074521"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074534",
        "pull_request_review_id": null,
        "id": 23074534,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDc0NTM0",
        "diff_hunk": "@@ -0,0 +1,75 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ofstream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ofstream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2, width, font_size;\n+        int height;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out \n+                << \"<input id=\\\"text-\" << pageNum << \"-\" \n+                    << i << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                    << \" style=\\\"position: absolute; left: \" << x1 \n+                    << \"px; bottom: \" << y1 << \"px;\" \n+                    << \" width: \" << width << \"px; height: \" << std::to_string(height) \n+                    << \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                    << font_size << \"px;\\\" class=\\\"\" \n+                    << CSS::INPUT_TEXT_CN << \"\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)\n+        {\n+            width += 3;\n+            height += 3;\n+\n+            out \n+                << \"<div id=\\\"cb-\" << pageNum << \"-\" << i << \"\\\"\" ",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 64,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "same as above.\n",
        "created_at": "2015-01-16T11:04:11Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074534",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074534"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074534"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074552",
        "pull_request_review_id": null,
        "id": 23074552,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDc0NTUy",
        "diff_hunk": "@@ -0,0 +1,75 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ofstream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ofstream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2, width, font_size;\n+        int height;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out \n+                << \"<input id=\\\"text-\" << pageNum << \"-\" \n+                    << i << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                    << \" style=\\\"position: absolute; left: \" << x1 \n+                    << \"px; bottom: \" << y1 << \"px;\" \n+                    << \" width: \" << width << \"px; height: \" << std::to_string(height) \n+                    << \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                    << font_size << \"px;\\\" class=\\\"\" \n+                    << CSS::INPUT_TEXT_CN << \"\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 58,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "use `else if` here.\n",
        "created_at": "2015-01-16T11:04:26Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074552",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074552"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074552"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074581",
        "pull_request_review_id": null,
        "id": 23074581,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDc0NTgx",
        "diff_hunk": "@@ -0,0 +1,75 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ofstream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ofstream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2, width, font_size;\n+        int height;\n+\n+        w->getRect(&x1, &y1, &x2, &y2);\n+        x1 = x1 * param.zoom;\n+        x2 = x2 * param.zoom;\n+        y1 = y1 * param.zoom;\n+        y2 = y2 * param.zoom;\n+\n+        width = x2 - x1;\n+        height = y2 - y1;\n+        \n+        if(w->getType() == formText)\n+        {\n+            font_size = height / 2;\n+\n+            out \n+                << \"<input id=\\\"text-\" << pageNum << \"-\" \n+                    << i << \"\\\" type=\\\"text\\\" value=\\\"\\\"\"\n+                    << \" style=\\\"position: absolute; left: \" << x1 \n+                    << \"px; bottom: \" << y1 << \"px;\" \n+                    << \" width: \" << width << \"px; height: \" << std::to_string(height) \n+                    << \"px; line-height: \" << std::to_string(height) << \"px; font-size: \" \n+                    << font_size << \"px;\\\" class=\\\"\" \n+                    << CSS::INPUT_TEXT_CN << \"\\\" />\" << endl;\n+        }\n+\n+        if(w->getType() == formButton)\n+        {\n+            width += 3;\n+            height += 3;\n+\n+            out \n+                << \"<div id=\\\"cb-\" << pageNum << \"-\" << i << \"\\\"\" \n+                    << \" style=\\\"position: absolute; left: \" << x1 \n+                    << \"px; bottom: \" << y1 << \"px;\" \n+                    << \" width: \" << width << \"px; height: \" \n+                    << std::to_string(height) << \"px; background-size: cover;\\\" class=\\\"\" \n+                    << CSS::INPUT_RADIO_CN << \"\\\"></div>\" << endl;\n+\n+        }",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 71,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If there are other types of forms in PDF, please add one more `else` clause here, and print some warning message about unsupported form type.\n",
        "created_at": "2015-01-16T11:05:04Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074581",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23074581"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23074581"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23090077",
        "pull_request_review_id": null,
        "id": 23090077,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDkwMDc3",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {\n+    var elements = document.getElementsByClassName('ir');\n+    \n+    for(var i = 0; i < elements.length; i++) {",
        "path": "share/pdf2htmlEX.js.in",
        "position": 7,
        "original_position": 7,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Tried it, we can't on an HTMLCollection (http://stackoverflow.com/questions/24266313/why-does-my-call-to-foreach-on-an-array-result-in-uncaught-typeerror-undefined)\n",
        "created_at": "2015-01-16T16:18:56Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23090077",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23090077"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23090077"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23090982",
        "pull_request_review_id": null,
        "id": 23090982,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDkwOTgy",
        "diff_hunk": "@@ -260,7 +260,24 @@ Viewer.prototype = {\n     this.pre_hide_pages();\n   },\n \n+  initialize_radio_button : function() {\n+    var elements = document.getElementsByClassName('ir');\n+    \n+    for(var i = 0; i < elements.length; i++) {\n+      var r = elements[i];\n+\n+      r.addEventListener('click', function() {\n+        if(this.className.search(\"checked\") == -1)",
        "path": "share/pdf2htmlEX.js.in",
        "position": null,
        "original_position": 11,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indeed... Did not know about classList. Thanks for the tip\n",
        "created_at": "2015-01-16T16:30:40Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23090982",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23090982"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23090982"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23248296",
        "pull_request_review_id": null,
        "id": 23248296,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ4Mjk2",
        "diff_hunk": "@@ -0,0 +1,75 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ofstream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ofstream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2, width, font_size;",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 31,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "afrosimon",
            "id": 333396,
            "node_id": "MDQ6VXNlcjMzMzM5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afrosimon",
            "html_url": "https://github.com/afrosimon",
            "followers_url": "https://api.github.com/users/afrosimon/followers",
            "following_url": "https://api.github.com/users/afrosimon/following{/other_user}",
            "gists_url": "https://api.github.com/users/afrosimon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afrosimon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afrosimon/subscriptions",
            "organizations_url": "https://api.github.com/users/afrosimon/orgs",
            "repos_url": "https://api.github.com/users/afrosimon/repos",
            "events_url": "https://api.github.com/users/afrosimon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afrosimon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I fixed the rest, but this one I do not understand. Should I have declared widgets  in the header file?\n",
        "created_at": "2015-01-20T19:31:13Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23248296",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23248296"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23248296"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23592974",
        "pull_request_review_id": null,
        "id": 23592974,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTkyOTc0",
        "diff_hunk": "@@ -0,0 +1,75 @@\n+/*\n+ * form.cc\n+ *\n+ * Handling Forms\n+ *\n+ * by Simon Chenard\n+ * 2014.07.25\n+ */\n+\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#include \"HTMLRenderer.h\"\n+#include \"util/namespace.h\"\n+#include \"util/misc.h\"\n+\n+namespace pdf2htmlEX {\n+   \n+using std::ofstream;\n+using std::cerr;\n+\n+void HTMLRenderer::process_form(ofstream & out)\n+{\n+    FormPageWidgets * widgets = cur_catalog->getPage(pageNum)->getFormWidgets();\n+    int num = widgets->getNumWidgets();\n+\n+    for(int i = 0; i < num; i++)\n+    {\n+        FormWidget * w = widgets->getWidget(i);\n+        double x1, y1, x2, y2, width, font_size;",
        "path": "src/HTMLRenderer/form.cc",
        "position": null,
        "original_position": 31,
        "commit_id": "a90ae31a8a6a832d12e16c29c75159d41320ac2d",
        "original_commit_id": "f284a8aabe171cc61e96c93a4497df24ce1d7b14",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I mean define the variable when it is used the first time.\nFor example, write `double width = x2-x1;` later, also please do this for `height` and `font_size`.\n\nBy the way, why `height` is int?\n",
        "created_at": "2015-01-27T08:31:18Z",
        "updated_at": "2015-01-27T21:02:05Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23592974",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/23592974"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/461#discussion_r23592974"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/26891039",
        "pull_request_review_id": null,
        "id": 26891039,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODkxMDM5",
        "diff_hunk": "@@ -269,7 +280,10 @@ void HTMLTextLine::dump_text(ostream & out)\n                             double threshold = state_iter1->em_size() * (param.space_threshold);\n \n                             out << \"<span class=\\\"\" << CSS::WHITESPACE_CN\n-                                << ' ' << CSS::WHITESPACE_CN << wid << \"\\\">\" << (target > (threshold - EPS) ? \" \" : \"\") << \"</span>\";\n+                                << ' ' << CSS::WHITESPACE_CN << wid << \"\\\">\";\n+                            if (target > (threshold - EPS))\n+                                dump_unicode(out, ' ');",
        "path": "src/HTMLTextLine.cc",
        "position": 70,
        "original_position": 70,
        "commit_id": "9dbd5044a4515332ffbdb8211bd85bb36ac491ef",
        "original_commit_id": "9dbd5044a4515332ffbdb8211bd85bb36ac491ef",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think that the space character will bring extra width after the `span`, which could be unintended?\n",
        "created_at": "2015-03-21T10:57:28Z",
        "updated_at": "2015-03-21T10:57:28Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/493#discussion_r26891039",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/493",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/26891039"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/493#discussion_r26891039"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/493"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/26891072",
        "pull_request_review_id": null,
        "id": 26891072,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODkxMDcy",
        "diff_hunk": "@@ -269,7 +280,10 @@ void HTMLTextLine::dump_text(ostream & out)\n                             double threshold = state_iter1->em_size() * (param.space_threshold);\n \n                             out << \"<span class=\\\"\" << CSS::WHITESPACE_CN\n-                                << ' ' << CSS::WHITESPACE_CN << wid << \"\\\">\" << (target > (threshold - EPS) ? \" \" : \"\") << \"</span>\";\n+                                << ' ' << CSS::WHITESPACE_CN << wid << \"\\\">\";\n+                            if (target > (threshold - EPS))\n+                                dump_unicode(out, ' ');",
        "path": "src/HTMLTextLine.cc",
        "position": 70,
        "original_position": 70,
        "commit_id": "9dbd5044a4515332ffbdb8211bd85bb36ac491ef",
        "original_commit_id": "9dbd5044a4515332ffbdb8211bd85bb36ac491ef",
        "user": {
            "login": "duanyao",
            "id": 1684137,
            "node_id": "MDQ6VXNlcjE2ODQxMzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1684137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duanyao",
            "html_url": "https://github.com/duanyao",
            "followers_url": "https://api.github.com/users/duanyao/followers",
            "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
            "organizations_url": "https://api.github.com/users/duanyao/orgs",
            "repos_url": "https://api.github.com/users/duanyao/repos",
            "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duanyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The space is in that span, not after it. This change doesn't change previous behavior, just updates `last_output_unicode`.\n",
        "created_at": "2015-03-21T11:07:48Z",
        "updated_at": "2015-03-21T11:08:03Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/493#discussion_r26891072",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/493",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/26891072"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/493#discussion_r26891072"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/493"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/26891080",
        "pull_request_review_id": null,
        "id": 26891080,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODkxMDgw",
        "diff_hunk": "@@ -269,7 +280,10 @@ void HTMLTextLine::dump_text(ostream & out)\n                             double threshold = state_iter1->em_size() * (param.space_threshold);\n \n                             out << \"<span class=\\\"\" << CSS::WHITESPACE_CN\n-                                << ' ' << CSS::WHITESPACE_CN << wid << \"\\\">\" << (target > (threshold - EPS) ? \" \" : \"\") << \"</span>\";\n+                                << ' ' << CSS::WHITESPACE_CN << wid << \"\\\">\";\n+                            if (target > (threshold - EPS))\n+                                dump_unicode(out, ' ');",
        "path": "src/HTMLTextLine.cc",
        "position": 70,
        "original_position": 70,
        "commit_id": "9dbd5044a4515332ffbdb8211bd85bb36ac491ef",
        "original_commit_id": "9dbd5044a4515332ffbdb8211bd85bb36ac491ef",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah I see, sorry for the mistake.\n",
        "created_at": "2015-03-21T11:08:43Z",
        "updated_at": "2015-03-21T11:08:43Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/493#discussion_r26891080",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/493",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/26891080"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/493#discussion_r26891080"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/493"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/27630483",
        "pull_request_review_id": null,
        "id": 27630483,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjMwNDgz",
        "diff_hunk": "@@ -18,6 +18,7 @@ Michele Redolfi <michele@tecnicaict.com>\n Mick Giles <mick@mickgiles.com>\n Ryan Morlok <ryan.morlok@morlok.com>\n Wanmin Liu <wanminliu@gmail.com>\n+Aamir Adnan <s33k.n.d3str0y@gmail.com>",
        "path": "AUTHORS",
        "position": null,
        "original_position": 4,
        "commit_id": "1bc48dd658d1d69aefc1dda377cc4b8171aafcc4",
        "original_commit_id": "23ad7f1fa66820e5a4186da32015526412989f0a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The names are in the alphabetical order :)\n",
        "created_at": "2015-04-02T03:24:10Z",
        "updated_at": "2015-04-02T05:03:48Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/500#discussion_r27630483",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/500",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/27630483"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/500#discussion_r27630483"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/500"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/27630531",
        "pull_request_review_id": null,
        "id": 27630531,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjMwNTMx",
        "diff_hunk": "@@ -361,10 +361,13 @@ Viewer.prototype = {\n     if (url) {\n       this.pages_loading[idx] = true;       // set semaphore\n \n-      // add a copy of the loading indicator\n-      var new_loading_indicator = this.loading_indicator.cloneNode();\n-      new_loading_indicator.classList.add('active');\n-      cur_page_ele.appendChild(new_loading_indicator);\n+      // add a copy of the loading indicator if not already present\n+      var new_loading_indicator = cur_page_ele.getElementsByClassName(this.config['loading_indicator_cls'])[0];",
        "path": "share/pdf2htmlEX.js.in",
        "position": 9,
        "original_position": 9,
        "commit_id": "1bc48dd658d1d69aefc1dda377cc4b8171aafcc4",
        "original_commit_id": "23ad7f1fa66820e5a4186da32015526412989f0a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about just (always) clear the page and append a new indicator?\n",
        "created_at": "2015-04-02T03:26:31Z",
        "updated_at": "2015-04-02T05:03:48Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/500#discussion_r27630531",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/500",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/27630531"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/500#discussion_r27630531"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/500"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/27633279",
        "pull_request_review_id": null,
        "id": 27633279,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjMzMjc5",
        "diff_hunk": "@@ -18,6 +18,7 @@ Michele Redolfi <michele@tecnicaict.com>\n Mick Giles <mick@mickgiles.com>\n Ryan Morlok <ryan.morlok@morlok.com>\n Wanmin Liu <wanminliu@gmail.com>\n+Aamir Adnan <s33k.n.d3str0y@gmail.com>",
        "path": "AUTHORS",
        "position": null,
        "original_position": 4,
        "commit_id": "1bc48dd658d1d69aefc1dda377cc4b8171aafcc4",
        "original_commit_id": "23ad7f1fa66820e5a4186da32015526412989f0a",
        "user": {
            "login": "intellisense",
            "id": 1216537,
            "node_id": "MDQ6VXNlcjEyMTY1Mzc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1216537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/intellisense",
            "html_url": "https://github.com/intellisense",
            "followers_url": "https://api.github.com/users/intellisense/followers",
            "following_url": "https://api.github.com/users/intellisense/following{/other_user}",
            "gists_url": "https://api.github.com/users/intellisense/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/intellisense/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/intellisense/subscriptions",
            "organizations_url": "https://api.github.com/users/intellisense/orgs",
            "repos_url": "https://api.github.com/users/intellisense/repos",
            "events_url": "https://api.github.com/users/intellisense/events{/privacy}",
            "received_events_url": "https://api.github.com/users/intellisense/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed, I thought it was not reasonable to put my self at top :)\n",
        "created_at": "2015-04-02T05:24:46Z",
        "updated_at": "2015-04-02T05:24:46Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/500#discussion_r27633279",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/500",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/27633279"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/500#discussion_r27633279"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/500"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/27633325",
        "pull_request_review_id": null,
        "id": 27633325,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjMzMzI1",
        "diff_hunk": "@@ -361,10 +361,13 @@ Viewer.prototype = {\n     if (url) {\n       this.pages_loading[idx] = true;       // set semaphore\n \n-      // add a copy of the loading indicator\n-      var new_loading_indicator = this.loading_indicator.cloneNode();\n-      new_loading_indicator.classList.add('active');\n-      cur_page_ele.appendChild(new_loading_indicator);\n+      // add a copy of the loading indicator if not already present\n+      var new_loading_indicator = cur_page_ele.getElementsByClassName(this.config['loading_indicator_cls'])[0];",
        "path": "share/pdf2htmlEX.js.in",
        "position": 9,
        "original_position": 9,
        "commit_id": "1bc48dd658d1d69aefc1dda377cc4b8171aafcc4",
        "original_commit_id": "23ad7f1fa66820e5a4186da32015526412989f0a",
        "user": {
            "login": "intellisense",
            "id": 1216537,
            "node_id": "MDQ6VXNlcjEyMTY1Mzc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1216537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/intellisense",
            "html_url": "https://github.com/intellisense",
            "followers_url": "https://api.github.com/users/intellisense/followers",
            "following_url": "https://api.github.com/users/intellisense/following{/other_user}",
            "gists_url": "https://api.github.com/users/intellisense/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/intellisense/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/intellisense/subscriptions",
            "organizations_url": "https://api.github.com/users/intellisense/orgs",
            "repos_url": "https://api.github.com/users/intellisense/repos",
            "events_url": "https://api.github.com/users/intellisense/events{/privacy}",
            "received_events_url": "https://api.github.com/users/intellisense/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm I think clearing a page sounds more dangerous, for example maybe in future you might introduce some inner wrappers within page, which will be destroyed if we just clear the content of page. What you say?\n",
        "created_at": "2015-04-02T05:26:45Z",
        "updated_at": "2015-04-02T05:26:45Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/500#discussion_r27633325",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/500",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/27633325"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/500#discussion_r27633325"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/500"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/27669979",
        "pull_request_review_id": null,
        "id": 27669979,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjY5OTc5",
        "diff_hunk": "@@ -361,10 +361,13 @@ Viewer.prototype = {\n     if (url) {\n       this.pages_loading[idx] = true;       // set semaphore\n \n-      // add a copy of the loading indicator\n-      var new_loading_indicator = this.loading_indicator.cloneNode();\n-      new_loading_indicator.classList.add('active');\n-      cur_page_ele.appendChild(new_loading_indicator);\n+      // add a copy of the loading indicator if not already present\n+      var new_loading_indicator = cur_page_ele.getElementsByClassName(this.config['loading_indicator_cls'])[0];",
        "path": "share/pdf2htmlEX.js.in",
        "position": 9,
        "original_position": 9,
        "commit_id": "1bc48dd658d1d69aefc1dda377cc4b8171aafcc4",
        "original_commit_id": "23ad7f1fa66820e5a4186da32015526412989f0a",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OK I see, it makes sense.\n",
        "created_at": "2015-04-02T15:50:36Z",
        "updated_at": "2015-04-02T15:50:36Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/500#discussion_r27669979",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/500",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/27669979"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/500#discussion_r27669979"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/500"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/28189723",
        "pull_request_review_id": null,
        "id": 28189723,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTg5NzIz",
        "diff_hunk": "@@ -7,17 +7,18 @@\n /* Part 1: Web Page Layout: Free to modify, except for a few of them which are required by pdf2htmlEX.js, see the comments */\n #sidebar { /* Sidebar */\n   position:absolute;\n-  top:0;\n+  top:32px;",
        "path": "share/base.css.in",
        "position": 5,
        "original_position": 5,
        "commit_id": "5315adbb0ea3cd64b4390fbd8d7acd682844887a",
        "original_commit_id": "5315adbb0ea3cd64b4390fbd8d7acd682844887a",
        "user": {
            "login": "intellisense",
            "id": 1216537,
            "node_id": "MDQ6VXNlcjEyMTY1Mzc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1216537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/intellisense",
            "html_url": "https://github.com/intellisense",
            "followers_url": "https://api.github.com/users/intellisense/followers",
            "following_url": "https://api.github.com/users/intellisense/following{/other_user}",
            "gists_url": "https://api.github.com/users/intellisense/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/intellisense/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/intellisense/subscriptions",
            "organizations_url": "https://api.github.com/users/intellisense/orgs",
            "repos_url": "https://api.github.com/users/intellisense/repos",
            "events_url": "https://api.github.com/users/intellisense/events{/privacy}",
            "received_events_url": "https://api.github.com/users/intellisense/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "To adjust the fixed top bar nav height.\n",
        "created_at": "2015-04-11T00:29:29Z",
        "updated_at": "2015-04-11T00:29:29Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/505#discussion_r28189723",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/505",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/28189723"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/505#discussion_r28189723"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/505"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/28189771",
        "pull_request_review_id": null,
        "id": 28189771,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTg5Nzcx",
        "diff_hunk": "@@ -79,7 +80,7 @@\n   position:relative;\n   background-color:white;\n   overflow: hidden;\n-  margin:0; \n+  margin:0 auto; ",
        "path": "share/base.css.in",
        "position": 26,
        "original_position": 26,
        "commit_id": "5315adbb0ea3cd64b4390fbd8d7acd682844887a",
        "original_commit_id": "5315adbb0ea3cd64b4390fbd8d7acd682844887a",
        "user": {
            "login": "intellisense",
            "id": 1216537,
            "node_id": "MDQ6VXNlcjEyMTY1Mzc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1216537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/intellisense",
            "html_url": "https://github.com/intellisense",
            "followers_url": "https://api.github.com/users/intellisense/followers",
            "following_url": "https://api.github.com/users/intellisense/following{/other_user}",
            "gists_url": "https://api.github.com/users/intellisense/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/intellisense/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/intellisense/subscriptions",
            "organizations_url": "https://api.github.com/users/intellisense/orgs",
            "repos_url": "https://api.github.com/users/intellisense/repos",
            "events_url": "https://api.github.com/users/intellisense/events{/privacy}",
            "received_events_url": "https://api.github.com/users/intellisense/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "On Safari the `CSS_PAGE_FRAME_CN` class with `margin:0;` results in the content shifted to left instead of staying at center, adding `auto` fixed it.\n",
        "created_at": "2015-04-11T00:31:55Z",
        "updated_at": "2015-04-11T00:31:55Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/505#discussion_r28189771",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/505",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/28189771"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/505#discussion_r28189771"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/505"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/28189810",
        "pull_request_review_id": null,
        "id": 28189810,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTg5ODEw",
        "diff_hunk": "@@ -9,19 +9,23 @@\n BASEDIR=$(dirname $0)\n CLOSURE_COMPILER_DIR=\"$BASEDIR/../3rdparty/closure-compiler\"\n CLOSURE_COMPILER_JAR=\"$CLOSURE_COMPILER_DIR/compiler.jar\"\n-INPUT=\"$BASEDIR/pdf2htmlEX.js\"\n-OUTPUT_FN=\"pdf2htmlEX.min.js\"\n-OUTPUT=\"$BASEDIR/$OUTPUT_FN\"\n+build () {\n+    INPUT=\"$BASEDIR/$1\"\n+    OUTPUT_FN=\"$2\"\n+    OUTPUT=\"$BASEDIR/$OUTPUT_FN\"\n \n-(echo \"Building $OUTPUT_FN with closure-compiler...\" && \\\n-    java -jar \"$CLOSURE_COMPILER_JAR\" \\\n-         --compilation_level ADVANCED_OPTIMIZATIONS \\\n-         --warning_level VERBOSE \\\n-         --output_wrapper \"(function(){%output%})();\" \\\n-         --js \"$INPUT\" \\\n-         --js_output_file \"$OUTPUT\" && \\\n-    echo 'Done.') || \\\n-(echo 'Failed. Read `3rdparty/closure-compiler/README` for more detail.' && \\\n-echo 'Using the uncompressed version.' && \\\n-cat \"$INPUT\" > \"$OUTPUT\")\n+    (echo \"Building $OUTPUT_FN with closure-compiler...\" && \\\n+        java -jar \"$CLOSURE_COMPILER_JAR\" \\\n+             --compilation_level $3 \\\n+             --warning_level VERBOSE \\\n+             --output_wrapper \"(function(){%output%})();\" \\\n+             --js \"$INPUT\" \\\n+             --js_output_file \"$OUTPUT\" && \\\n+        echo 'Done.') || \\\n+    (echo 'Failed. Read `3rdparty/closure-compiler/README` for more detail.' && \\\n+    echo 'Using the uncompressed version.' && \\\n+    cat \"$INPUT\" > \"$OUTPUT\")\n+}\n \n+build \"pdf2htmlEX.js.in\" \"pdf2htmlEX.min.js\" \"ADVANCED_OPTIMIZATIONS\"\n+build \"navbar.js.in\" \"navbar.min.js\" \"SIMPLE_OPTIMIZATIONS\"",
        "path": "share/build_js.sh",
        "position": 37,
        "original_position": 37,
        "commit_id": "5315adbb0ea3cd64b4390fbd8d7acd682844887a",
        "original_commit_id": "5315adbb0ea3cd64b4390fbd8d7acd682844887a",
        "user": {
            "login": "intellisense",
            "id": 1216537,
            "node_id": "MDQ6VXNlcjEyMTY1Mzc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1216537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/intellisense",
            "html_url": "https://github.com/intellisense",
            "followers_url": "https://api.github.com/users/intellisense/followers",
            "following_url": "https://api.github.com/users/intellisense/following{/other_user}",
            "gists_url": "https://api.github.com/users/intellisense/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/intellisense/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/intellisense/subscriptions",
            "organizations_url": "https://api.github.com/users/intellisense/orgs",
            "repos_url": "https://api.github.com/users/intellisense/repos",
            "events_url": "https://api.github.com/users/intellisense/events{/privacy}",
            "received_events_url": "https://api.github.com/users/intellisense/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Somehow the `ADVANCED_OPTIMIZATIONS` breaks the code, had to compile the `navbar.js` with `SIMPLE_OPTIMIZATIONS` compilation level.\n",
        "created_at": "2015-04-11T00:33:43Z",
        "updated_at": "2015-04-11T00:33:43Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/505#discussion_r28189810",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/505",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/28189810"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/505#discussion_r28189810"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/505"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/91854803",
        "pull_request_review_id": 12365861,
        "id": 91854803,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxODU0ODAz",
        "diff_hunk": "@@ -14,7 +14,8 @@ class BrowserTests(Common):\n     DEFAULT_PDF2HTMLEX_ARGS = [\n         '--fit-width', 800,\n         '--last-page', 1,\n-        '--embed', 'fi', # avoid base64 to make it faster\n+        '--embed', 'FI', # with 'fi', test suite is currently broken (some directory interference)\n+        # avoid base64 to make it faster",
        "path": "test/browser_tests.py",
        "position": null,
        "original_position": 6,
        "commit_id": "55cab0178a76ae0f21633d6353804bea325f47ed",
        "original_commit_id": "3bbb2864537e1c1a5a7c92e469298e557eed7e89",
        "user": {
            "login": "coolwanglu",
            "id": 734614,
            "node_id": "MDQ6VXNlcjczNDYxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/734614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolwanglu",
            "html_url": "https://github.com/coolwanglu",
            "followers_url": "https://api.github.com/users/coolwanglu/followers",
            "following_url": "https://api.github.com/users/coolwanglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/coolwanglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coolwanglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coolwanglu/subscriptions",
            "organizations_url": "https://api.github.com/users/coolwanglu/orgs",
            "repos_url": "https://api.github.com/users/coolwanglu/repos",
            "events_url": "https://api.github.com/users/coolwanglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coolwanglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "By using `FI`, base64 _is_ used, so this line is no longer true. Please remove it.",
        "created_at": "2016-12-11T12:30:31Z",
        "updated_at": "2016-12-11T13:37:47Z",
        "html_url": "https://github.com/coolwanglu/pdf2htmlEX/pull/683#discussion_r91854803",
        "pull_request_url": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/683",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/comments/91854803"
            },
            "html": {
                "href": "https://github.com/coolwanglu/pdf2htmlEX/pull/683#discussion_r91854803"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/coolwanglu/pdf2htmlEX/pulls/683"
            }
        }
    }
]